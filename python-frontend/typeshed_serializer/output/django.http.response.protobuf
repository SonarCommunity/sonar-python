fully_qualified_name: "django.http.response"
classes {
  name: "HttpResponseBase"
  fully_qualified_name: "django.http.response.HttpResponseBase"
  super_classes: "SonarPythonAnalyzerFakeStub.CustomStubBase"
  methods {
    name: "set_cookie"
    fully_qualified_name: "django.http.response.HttpResponseBase.set_cookie"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "django.http.response.HttpResponseBase"
        fully_qualified_name: "django.http.response.HttpResponseBase"
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "kwargs"
      kind: VAR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
  }
  methods {
    name: "set_signed_cookie"
    fully_qualified_name: "django.http.response.HttpResponseBase.set_signed_cookie"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "django.http.response.HttpResponseBase"
        fully_qualified_name: "django.http.response.HttpResponseBase"
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "kwargs"
      kind: VAR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
  }
  methods {
    name: "__setitem__"
    fully_qualified_name: "django.http.response.HttpResponseBase.__setitem__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "django.http.response.HttpResponseBase"
        fully_qualified_name: "django.http.response.HttpResponseBase"
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "kwargs"
      kind: VAR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
  }
  methods {
    name: "setdefault"
    fully_qualified_name: "django.http.response.HttpResponseBase.setdefault"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "django.http.response.HttpResponseBase"
        fully_qualified_name: "django.http.response.HttpResponseBase"
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "kwargs"
      kind: VAR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
  }
}
classes {
  name: "HttpResponse"
  fully_qualified_name: "django.http.response.HttpResponse"
  super_classes: "django.http.response.HttpResponseBase"
}
classes {
  name: "HttpResponseRedirect"
  fully_qualified_name: "django.http.response.HttpResponseRedirect"
  super_classes: "django.http.response.HttpResponseBase"
}
classes {
  name: "HttpResponsePermanentRedirect"
  fully_qualified_name: "django.http.response.HttpResponsePermanentRedirect"
  super_classes: "django.http.response.HttpResponseBase"
}
classes {
  name: "HttpResponseNotModified"
  fully_qualified_name: "django.http.response.HttpResponseNotModified"
  super_classes: "django.http.response.HttpResponseBase"
}
classes {
  name: "HttpResponseNotFound"
  fully_qualified_name: "django.http.response.HttpResponseNotFound"
  super_classes: "django.http.response.HttpResponseBase"
}
classes {
  name: "HttpResponseForbidden"
  fully_qualified_name: "django.http.response.HttpResponseForbidden"
  super_classes: "django.http.response.HttpResponseBase"
}
classes {
  name: "HttpResponseNotAllowed"
  fully_qualified_name: "django.http.response.HttpResponseNotAllowed"
  super_classes: "django.http.response.HttpResponseBase"
}
classes {
  name: "HttpResponseGone"
  fully_qualified_name: "django.http.response.HttpResponseGone"
  super_classes: "django.http.response.HttpResponseBase"
}
classes {
  name: "HttpResponseServerError"
  fully_qualified_name: "django.http.response.HttpResponseServerError"
  super_classes: "django.http.response.HttpResponseBase"
}
classes {
  name: "HttpResponseBadRequest"
  fully_qualified_name: "django.http.response.HttpResponseBadRequest"
  super_classes: "django.http.response.HttpResponseBase"
}
