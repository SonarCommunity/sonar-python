fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dh"
classes {
  name: "DHParameters"
  fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dh.DHParameters"
  super_classes: "builtins.object"
  methods {
    name: "generate_private_key"
    fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dh.DHParameters.generate_private_key"
    return_annotation {
      pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dh.DHPrivateKey"
      fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dh.DHPrivateKey"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dh.DHParameters"
        fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dh.DHParameters"
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "parameter_bytes"
    fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dh.DHParameters.parameter_bytes"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dh.DHParameters"
        fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dh.DHParameters"
      }
    }
    parameters {
      name: "encoding"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives.serialization.Encoding"
        fully_qualified_name: "cryptography.hazmat.primitives.serialization.Encoding"
      }
    }
    parameters {
      name: "format"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives.serialization.ParameterFormat"
        fully_qualified_name: "cryptography.hazmat.primitives.serialization.ParameterFormat"
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "parameter_numbers"
    fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dh.DHParameters.parameter_numbers"
    return_annotation {
      pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dh.DHParameterNumbers"
      fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dh.DHParameterNumbers"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dh.DHParameters"
        fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dh.DHParameters"
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  has_metaclass: true
  metaclass_name: "abc.ABCMeta"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "DHParameterNumbers"
  fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dh.DHParameterNumbers"
  super_classes: "builtins.object"
  methods {
    name: "p"
    fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dh.DHParameterNumbers.p"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dh.DHParameterNumbers"
        fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dh.DHParameterNumbers"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "g"
    fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dh.DHParameterNumbers.g"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dh.DHParameterNumbers"
        fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dh.DHParameterNumbers"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "q"
    fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dh.DHParameterNumbers.q"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dh.DHParameterNumbers"
        fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dh.DHParameterNumbers"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__init__"
    fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dh.DHParameterNumbers.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dh.DHParameterNumbers"
        fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dh.DHParameterNumbers"
      }
    }
    parameters {
      name: "p"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "g"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "q"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "parameters"
    fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dh.DHParameterNumbers.parameters"
    return_annotation {
      pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dh.DHParameters"
      fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dh.DHParameters"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dh.DHParameterNumbers"
        fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dh.DHParameterNumbers"
      }
    }
    parameters {
      name: "backend"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[cryptography.hazmat.backends.interfaces.DHBackend,None]"
        kind: UNION
        args {
          pretty_printed_name: "cryptography.hazmat.backends.interfaces.DHBackend"
          fully_qualified_name: "cryptography.hazmat.backends.interfaces.DHBackend"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "DHPrivateKey"
  fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dh.DHPrivateKey"
  super_classes: "builtins.object"
  methods {
    name: "exchange"
    fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dh.DHPrivateKey.exchange"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dh.DHPrivateKey"
        fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dh.DHPrivateKey"
      }
    }
    parameters {
      name: "peer_public_key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dh.DHPublicKey"
        fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dh.DHPublicKey"
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "parameters"
    fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dh.DHPrivateKey.parameters"
    return_annotation {
      pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dh.DHParameters"
      fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dh.DHParameters"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dh.DHPrivateKey"
        fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dh.DHPrivateKey"
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "public_key"
    fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dh.DHPrivateKey.public_key"
    return_annotation {
      pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dh.DHPublicKey"
      fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dh.DHPublicKey"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dh.DHPrivateKey"
        fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dh.DHPrivateKey"
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  has_metaclass: true
  metaclass_name: "abc.ABCMeta"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "key_size"
    fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dh.DHPrivateKey.key_size"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "DHPrivateKeyWithSerialization"
  fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dh.DHPrivateKeyWithSerialization"
  super_classes: "cryptography.hazmat.primitives.asymmetric.dh.DHPrivateKey"
  methods {
    name: "private_bytes"
    fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dh.DHPrivateKeyWithSerialization.private_bytes"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dh.DHPrivateKeyWithSerialization"
        fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dh.DHPrivateKeyWithSerialization"
      }
    }
    parameters {
      name: "encoding"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives.serialization.Encoding"
        fully_qualified_name: "cryptography.hazmat.primitives.serialization.Encoding"
      }
    }
    parameters {
      name: "format"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives.serialization.PrivateFormat"
        fully_qualified_name: "cryptography.hazmat.primitives.serialization.PrivateFormat"
      }
    }
    parameters {
      name: "encryption_algorithm"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives.serialization.KeySerializationEncryption"
        fully_qualified_name: "cryptography.hazmat.primitives.serialization.KeySerializationEncryption"
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "private_numbers"
    fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dh.DHPrivateKeyWithSerialization.private_numbers"
    return_annotation {
      pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dh.DHPrivateNumbers"
      fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dh.DHPrivateNumbers"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dh.DHPrivateKeyWithSerialization"
        fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dh.DHPrivateKeyWithSerialization"
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "DHPrivateNumbers"
  fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dh.DHPrivateNumbers"
  super_classes: "builtins.object"
  methods {
    name: "public_numbers"
    fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dh.DHPrivateNumbers.public_numbers"
    return_annotation {
      pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dh.DHPublicNumbers"
      fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dh.DHPublicNumbers"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dh.DHPrivateNumbers"
        fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dh.DHPrivateNumbers"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "x"
    fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dh.DHPrivateNumbers.x"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dh.DHPrivateNumbers"
        fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dh.DHPrivateNumbers"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__init__"
    fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dh.DHPrivateNumbers.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dh.DHPrivateNumbers"
        fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dh.DHPrivateNumbers"
      }
    }
    parameters {
      name: "x"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "public_numbers"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dh.DHPublicNumbers"
        fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dh.DHPublicNumbers"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "private_key"
    fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dh.DHPrivateNumbers.private_key"
    return_annotation {
      pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dh.DHPrivateKey"
      fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dh.DHPrivateKey"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dh.DHPrivateNumbers"
        fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dh.DHPrivateNumbers"
      }
    }
    parameters {
      name: "backend"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[cryptography.hazmat.backends.interfaces.DHBackend,None]"
        kind: UNION
        args {
          pretty_printed_name: "cryptography.hazmat.backends.interfaces.DHBackend"
          fully_qualified_name: "cryptography.hazmat.backends.interfaces.DHBackend"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "DHPublicKey"
  fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dh.DHPublicKey"
  super_classes: "builtins.object"
  methods {
    name: "key_size"
    fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dh.DHPublicKey.key_size"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dh.DHPublicKey"
        fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dh.DHPublicKey"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "parameters"
    fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dh.DHPublicKey.parameters"
    return_annotation {
      pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dh.DHParameters"
      fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dh.DHParameters"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dh.DHPublicKey"
        fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dh.DHPublicKey"
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "public_bytes"
    fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dh.DHPublicKey.public_bytes"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dh.DHPublicKey"
        fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dh.DHPublicKey"
      }
    }
    parameters {
      name: "encoding"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives.serialization.Encoding"
        fully_qualified_name: "cryptography.hazmat.primitives.serialization.Encoding"
      }
    }
    parameters {
      name: "format"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives.serialization.PublicFormat"
        fully_qualified_name: "cryptography.hazmat.primitives.serialization.PublicFormat"
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "public_numbers"
    fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dh.DHPublicKey.public_numbers"
    return_annotation {
      pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dh.DHPublicNumbers"
      fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dh.DHPublicNumbers"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dh.DHPublicKey"
        fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dh.DHPublicKey"
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  has_metaclass: true
  metaclass_name: "abc.ABCMeta"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "DHPublicNumbers"
  fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dh.DHPublicNumbers"
  super_classes: "builtins.object"
  methods {
    name: "parameter_numbers"
    fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dh.DHPublicNumbers.parameter_numbers"
    return_annotation {
      pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dh.DHParameterNumbers"
      fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dh.DHParameterNumbers"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dh.DHPublicNumbers"
        fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dh.DHPublicNumbers"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "y"
    fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dh.DHPublicNumbers.y"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dh.DHPublicNumbers"
        fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dh.DHPublicNumbers"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__init__"
    fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dh.DHPublicNumbers.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dh.DHPublicNumbers"
        fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dh.DHPublicNumbers"
      }
    }
    parameters {
      name: "y"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "parameter_numbers"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dh.DHParameterNumbers"
        fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dh.DHParameterNumbers"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "public_key"
    fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dh.DHPublicNumbers.public_key"
    return_annotation {
      pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dh.DHPublicKey"
      fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dh.DHPublicKey"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dh.DHPublicNumbers"
        fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dh.DHPublicNumbers"
      }
    }
    parameters {
      name: "backend"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[cryptography.hazmat.backends.interfaces.DHBackend,None]"
        kind: UNION
        args {
          pretty_printed_name: "cryptography.hazmat.backends.interfaces.DHBackend"
          fully_qualified_name: "cryptography.hazmat.backends.interfaces.DHBackend"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "generate_parameters"
  fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dh.generate_parameters"
  return_annotation {
    pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dh.DHParameters"
    fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dh.DHParameters"
  }
  parameters {
    name: "generator"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "key_size"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "backend"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[cryptography.hazmat.backends.interfaces.DHBackend,None]"
      kind: UNION
      args {
        pretty_printed_name: "cryptography.hazmat.backends.interfaces.DHBackend"
        fully_qualified_name: "cryptography.hazmat.backends.interfaces.DHBackend"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
