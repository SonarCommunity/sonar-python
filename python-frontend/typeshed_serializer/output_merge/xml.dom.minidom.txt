fully_qualified_name: "xml.dom.minidom"
classes {
  name: "Node"
  fully_qualified_name: "xml.dom.minidom.Node"
  super_classes: "xml.dom.Node"
  methods {
    name: "firstChild"
    fully_qualified_name: "xml.dom.minidom.Node.firstChild"
    return_annotation {
      pretty_printed_name: "Union[xml.dom.minidom.Node,None]"
      kind: UNION
      args {
        pretty_printed_name: "xml.dom.minidom.Node"
        fully_qualified_name: "xml.dom.minidom.Node"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.Node"
        fully_qualified_name: "xml.dom.minidom.Node"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "lastChild"
    fully_qualified_name: "xml.dom.minidom.Node.lastChild"
    return_annotation {
      pretty_printed_name: "Union[xml.dom.minidom.Node,None]"
      kind: UNION
      args {
        pretty_printed_name: "xml.dom.minidom.Node"
        fully_qualified_name: "xml.dom.minidom.Node"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.Node"
        fully_qualified_name: "xml.dom.minidom.Node"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "localName"
    fully_qualified_name: "xml.dom.minidom.Node.localName"
    return_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.Node"
        fully_qualified_name: "xml.dom.minidom.Node"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__bool__"
    fully_qualified_name: "xml.dom.minidom.Node.__bool__"
    return_annotation {
      pretty_printed_name: "Literal[builtins.bool]"
      kind: LITERAL
      args {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.Node"
        fully_qualified_name: "xml.dom.minidom.Node"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "hasChildNodes"
    fully_qualified_name: "xml.dom.minidom.Node.hasChildNodes"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.Node"
        fully_qualified_name: "xml.dom.minidom.Node"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "insertBefore"
    fully_qualified_name: "xml.dom.minidom.Node.insertBefore"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "newChild"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "refChild"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "appendChild"
    fully_qualified_name: "xml.dom.minidom.Node.appendChild"
    return_annotation {
      pretty_printed_name: "xml.dom.minidom._N"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.Node"
        fully_qualified_name: "xml.dom.minidom.Node"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom._N"
        kind: TYPE_VAR
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "replaceChild"
    fully_qualified_name: "xml.dom.minidom.Node.replaceChild"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "newChild"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "oldChild"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "removeChild"
    fully_qualified_name: "xml.dom.minidom.Node.removeChild"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "oldChild"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "normalize"
    fully_qualified_name: "xml.dom.minidom.Node.normalize"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.Node"
        fully_qualified_name: "xml.dom.minidom.Node"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "cloneNode"
    fully_qualified_name: "xml.dom.minidom.Node.cloneNode"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "deep"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "isSupported"
    fully_qualified_name: "xml.dom.minidom.Node.isSupported"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "feature"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "version"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "isSameNode"
    fully_qualified_name: "xml.dom.minidom.Node.isSameNode"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "other"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "getInterface"
    fully_qualified_name: "xml.dom.minidom.Node.getInterface"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "feature"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "getUserData"
    fully_qualified_name: "xml.dom.minidom.Node.getUserData"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "setUserData"
    fully_qualified_name: "xml.dom.minidom.Node.setUserData"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "data"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "handler"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "unlink"
    fully_qualified_name: "xml.dom.minidom.Node.unlink"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.Node"
        fully_qualified_name: "xml.dom.minidom.Node"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__enter__"
    fully_qualified_name: "xml.dom.minidom.Node.__enter__"
    return_annotation {
      pretty_printed_name: "UnboundType[Self]"
      kind: UNBOUND
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.Node"
        fully_qualified_name: "xml.dom.minidom.Node"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__exit__"
    fully_qualified_name: "xml.dom.minidom.Node.__exit__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.Node"
        fully_qualified_name: "xml.dom.minidom.Node"
      }
    }
    parameters {
      name: "et"
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "ev"
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "tb"
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "toxml"
    fullname: "xml.dom.minidom.Node.toxml"
    definitions {
      name: "toxml"
      fully_qualified_name: "xml.dom.minidom.Node.toxml"
      return_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "xml.dom.minidom.Node"
          fully_qualified_name: "xml.dom.minidom.Node"
        }
      }
      parameters {
        name: "encoding"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "toxml"
      fully_qualified_name: "xml.dom.minidom.Node.toxml"
      return_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "xml.dom.minidom.Node"
          fully_qualified_name: "xml.dom.minidom.Node"
        }
      }
      parameters {
        name: "encoding"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "None"
          kind: NONE
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
  }
  overloaded_methods {
    name: "toxml"
    fullname: "xml.dom.minidom.Node.toxml"
    definitions {
      name: "toxml"
      fully_qualified_name: "xml.dom.minidom.Node.toxml"
      return_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "xml.dom.minidom.Node"
          fully_qualified_name: "xml.dom.minidom.Node"
        }
      }
      parameters {
        name: "encoding"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      parameters {
        name: "standalone"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.bool,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bool"
            fully_qualified_name: "builtins.bool"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "toxml"
      fully_qualified_name: "xml.dom.minidom.Node.toxml"
      return_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "xml.dom.minidom.Node"
          fully_qualified_name: "xml.dom.minidom.Node"
        }
      }
      parameters {
        name: "encoding"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "None"
          kind: NONE
        }
        has_default: true
      }
      parameters {
        name: "standalone"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.bool,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bool"
            fully_qualified_name: "builtins.bool"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "toprettyxml"
    fullname: "xml.dom.minidom.Node.toprettyxml"
    definitions {
      name: "toprettyxml"
      fully_qualified_name: "xml.dom.minidom.Node.toprettyxml"
      return_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "xml.dom.minidom.Node"
          fully_qualified_name: "xml.dom.minidom.Node"
        }
      }
      parameters {
        name: "indent"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        has_default: true
      }
      parameters {
        name: "newl"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        has_default: true
      }
      parameters {
        name: "encoding"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "None"
          kind: NONE
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "toprettyxml"
      fully_qualified_name: "xml.dom.minidom.Node.toprettyxml"
      return_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "xml.dom.minidom.Node"
          fully_qualified_name: "xml.dom.minidom.Node"
        }
      }
      parameters {
        name: "indent"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      parameters {
        name: "newl"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      parameters {
        name: "encoding"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "toprettyxml"
      fully_qualified_name: "xml.dom.minidom.Node.toprettyxml"
      return_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "xml.dom.minidom.Node"
          fully_qualified_name: "xml.dom.minidom.Node"
        }
      }
      parameters {
        name: "indent"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        has_default: true
      }
      parameters {
        name: "newl"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        has_default: true
      }
      parameters {
        name: "encoding"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
  }
  overloaded_methods {
    name: "toprettyxml"
    fullname: "xml.dom.minidom.Node.toprettyxml"
    definitions {
      name: "toprettyxml"
      fully_qualified_name: "xml.dom.minidom.Node.toprettyxml"
      return_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "xml.dom.minidom.Node"
          fully_qualified_name: "xml.dom.minidom.Node"
        }
      }
      parameters {
        name: "indent"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        has_default: true
      }
      parameters {
        name: "newl"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        has_default: true
      }
      parameters {
        name: "encoding"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "None"
          kind: NONE
        }
        has_default: true
      }
      parameters {
        name: "standalone"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.bool,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bool"
            fully_qualified_name: "builtins.bool"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "toprettyxml"
      fully_qualified_name: "xml.dom.minidom.Node.toprettyxml"
      return_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "xml.dom.minidom.Node"
          fully_qualified_name: "xml.dom.minidom.Node"
        }
      }
      parameters {
        name: "indent"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      parameters {
        name: "newl"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      parameters {
        name: "encoding"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      parameters {
        name: "standalone"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.bool,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bool"
            fully_qualified_name: "builtins.bool"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "toprettyxml"
      fully_qualified_name: "xml.dom.minidom.Node.toprettyxml"
      return_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "xml.dom.minidom.Node"
          fully_qualified_name: "xml.dom.minidom.Node"
        }
      }
      parameters {
        name: "indent"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        has_default: true
      }
      parameters {
        name: "newl"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        has_default: true
      }
      parameters {
        name: "encoding"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      parameters {
        name: "standalone"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "Union[builtins.bool,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bool"
            fully_qualified_name: "builtins.bool"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "namespaceURI"
    fully_qualified_name: "xml.dom.minidom.Node.namespaceURI"
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "parentNode"
    fully_qualified_name: "xml.dom.minidom.Node.parentNode"
    type_annotation {
      pretty_printed_name: "UnboundType[Incomplete]"
      kind: UNBOUND
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "ownerDocument"
    fully_qualified_name: "xml.dom.minidom.Node.ownerDocument"
    type_annotation {
      pretty_printed_name: "UnboundType[Incomplete]"
      kind: UNBOUND
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "nextSibling"
    fully_qualified_name: "xml.dom.minidom.Node.nextSibling"
    type_annotation {
      pretty_printed_name: "UnboundType[Incomplete]"
      kind: UNBOUND
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "previousSibling"
    fully_qualified_name: "xml.dom.minidom.Node.previousSibling"
    type_annotation {
      pretty_printed_name: "UnboundType[Incomplete]"
      kind: UNBOUND
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "prefix"
    fully_qualified_name: "xml.dom.minidom.Node.prefix"
    type_annotation {
      pretty_printed_name: "UnboundType[Incomplete]"
      kind: UNBOUND
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "childNodes"
    fully_qualified_name: "xml.dom.minidom.Node.childNodes"
    type_annotation {
      pretty_printed_name: "UnboundType[Incomplete]"
      kind: UNBOUND
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "DocumentFragment"
  fully_qualified_name: "xml.dom.minidom.DocumentFragment"
  super_classes: "xml.dom.minidom.Node"
  methods {
    name: "__init__"
    fully_qualified_name: "xml.dom.minidom.DocumentFragment.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.DocumentFragment"
        fully_qualified_name: "xml.dom.minidom.DocumentFragment"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "nodeType"
    fully_qualified_name: "xml.dom.minidom.DocumentFragment.nodeType"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "nodeName"
    fully_qualified_name: "xml.dom.minidom.DocumentFragment.nodeName"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "nodeValue"
    fully_qualified_name: "xml.dom.minidom.DocumentFragment.nodeValue"
    type_annotation {
      pretty_printed_name: "UnboundType[Incomplete]"
      kind: UNBOUND
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "attributes"
    fully_qualified_name: "xml.dom.minidom.DocumentFragment.attributes"
    type_annotation {
      pretty_printed_name: "UnboundType[Incomplete]"
      kind: UNBOUND
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "parentNode"
    fully_qualified_name: "xml.dom.minidom.DocumentFragment.parentNode"
    type_annotation {
      pretty_printed_name: "UnboundType[Incomplete]"
      kind: UNBOUND
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "childNodes"
    fully_qualified_name: "xml.dom.minidom.DocumentFragment.childNodes"
    type_annotation {
      pretty_printed_name: "UnboundType[Incomplete]"
      kind: UNBOUND
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "Attr"
  fully_qualified_name: "xml.dom.minidom.Attr"
  super_classes: "xml.dom.minidom.Node"
  methods {
    name: "__init__"
    fully_qualified_name: "xml.dom.minidom.Attr.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.Attr"
        fully_qualified_name: "xml.dom.minidom.Attr"
      }
    }
    parameters {
      name: "qName"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "namespaceURI"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "localName"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "prefix"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[UnboundType[Incomplete],None]"
        kind: UNION
        args {
          pretty_printed_name: "UnboundType[Incomplete]"
          kind: UNBOUND
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "unlink"
    fully_qualified_name: "xml.dom.minidom.Attr.unlink"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.Attr"
        fully_qualified_name: "xml.dom.minidom.Attr"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "isId"
    fully_qualified_name: "xml.dom.minidom.Attr.isId"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.Attr"
        fully_qualified_name: "xml.dom.minidom.Attr"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "schemaType"
    fully_qualified_name: "xml.dom.minidom.Attr.schemaType"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "name"
    fully_qualified_name: "xml.dom.minidom.Attr.name"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "nodeType"
    fully_qualified_name: "xml.dom.minidom.Attr.nodeType"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "attributes"
    fully_qualified_name: "xml.dom.minidom.Attr.attributes"
    type_annotation {
      pretty_printed_name: "UnboundType[Incomplete]"
      kind: UNBOUND
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "specified"
    fully_qualified_name: "xml.dom.minidom.Attr.specified"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "ownerElement"
    fully_qualified_name: "xml.dom.minidom.Attr.ownerElement"
    type_annotation {
      pretty_printed_name: "UnboundType[Incomplete]"
      kind: UNBOUND
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "namespaceURI"
    fully_qualified_name: "xml.dom.minidom.Attr.namespaceURI"
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "childNodes"
    fully_qualified_name: "xml.dom.minidom.Attr.childNodes"
    type_annotation {
      pretty_printed_name: "UnboundType[Incomplete]"
      kind: UNBOUND
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "nodeName"
    fully_qualified_name: "xml.dom.minidom.Attr.nodeName"
    type_annotation {
      pretty_printed_name: "UnboundType[Incomplete]"
      kind: UNBOUND
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "nodeValue"
    fully_qualified_name: "xml.dom.minidom.Attr.nodeValue"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "value"
    fully_qualified_name: "xml.dom.minidom.Attr.value"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "prefix"
    fully_qualified_name: "xml.dom.minidom.Attr.prefix"
    type_annotation {
      pretty_printed_name: "UnboundType[Incomplete]"
      kind: UNBOUND
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "NamedNodeMap"
  fully_qualified_name: "xml.dom.minidom.NamedNodeMap"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "xml.dom.minidom.NamedNodeMap.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.NamedNodeMap"
        fully_qualified_name: "xml.dom.minidom.NamedNodeMap"
      }
    }
    parameters {
      name: "attrs"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "attrsNS"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "ownerElement"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "item"
    fully_qualified_name: "xml.dom.minidom.NamedNodeMap.item"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "index"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "items"
    fully_qualified_name: "xml.dom.minidom.NamedNodeMap.items"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "itemsNS"
    fully_qualified_name: "xml.dom.minidom.NamedNodeMap.itemsNS"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__contains__"
    fully_qualified_name: "xml.dom.minidom.NamedNodeMap.__contains__"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "keys"
    fully_qualified_name: "xml.dom.minidom.NamedNodeMap.keys"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "keysNS"
    fully_qualified_name: "xml.dom.minidom.NamedNodeMap.keysNS"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "values"
    fully_qualified_name: "xml.dom.minidom.NamedNodeMap.values"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "get"
    fully_qualified_name: "xml.dom.minidom.NamedNodeMap.get"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.NamedNodeMap"
        fully_qualified_name: "xml.dom.minidom.NamedNodeMap"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[UnboundType[Incomplete],None]"
        kind: UNION
        args {
          pretty_printed_name: "UnboundType[Incomplete]"
          kind: UNBOUND
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__len__"
    fully_qualified_name: "xml.dom.minidom.NamedNodeMap.__len__"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.NamedNodeMap"
        fully_qualified_name: "xml.dom.minidom.NamedNodeMap"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__eq__"
    fully_qualified_name: "xml.dom.minidom.NamedNodeMap.__eq__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.NamedNodeMap"
        fully_qualified_name: "xml.dom.minidom.NamedNodeMap"
      }
    }
    parameters {
      name: "other"
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__ge__"
    fully_qualified_name: "xml.dom.minidom.NamedNodeMap.__ge__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.NamedNodeMap"
        fully_qualified_name: "xml.dom.minidom.NamedNodeMap"
      }
    }
    parameters {
      name: "other"
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.NamedNodeMap"
        fully_qualified_name: "xml.dom.minidom.NamedNodeMap"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__gt__"
    fully_qualified_name: "xml.dom.minidom.NamedNodeMap.__gt__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.NamedNodeMap"
        fully_qualified_name: "xml.dom.minidom.NamedNodeMap"
      }
    }
    parameters {
      name: "other"
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.NamedNodeMap"
        fully_qualified_name: "xml.dom.minidom.NamedNodeMap"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__le__"
    fully_qualified_name: "xml.dom.minidom.NamedNodeMap.__le__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.NamedNodeMap"
        fully_qualified_name: "xml.dom.minidom.NamedNodeMap"
      }
    }
    parameters {
      name: "other"
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.NamedNodeMap"
        fully_qualified_name: "xml.dom.minidom.NamedNodeMap"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__lt__"
    fully_qualified_name: "xml.dom.minidom.NamedNodeMap.__lt__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.NamedNodeMap"
        fully_qualified_name: "xml.dom.minidom.NamedNodeMap"
      }
    }
    parameters {
      name: "other"
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.NamedNodeMap"
        fully_qualified_name: "xml.dom.minidom.NamedNodeMap"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__getitem__"
    fully_qualified_name: "xml.dom.minidom.NamedNodeMap.__getitem__"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.NamedNodeMap"
        fully_qualified_name: "xml.dom.minidom.NamedNodeMap"
      }
    }
    parameters {
      name: "attname_or_tuple"
      type_annotation {
        pretty_printed_name: "Union[Tuple[builtins.str,Union[builtins.str,None]],builtins.str]"
        kind: UNION
        args {
          pretty_printed_name: "Tuple[builtins.str,Union[builtins.str,None]]"
          kind: TUPLE
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "Union[builtins.str,None]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "None"
              kind: NONE
            }
          }
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__setitem__"
    fully_qualified_name: "xml.dom.minidom.NamedNodeMap.__setitem__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.NamedNodeMap"
        fully_qualified_name: "xml.dom.minidom.NamedNodeMap"
      }
    }
    parameters {
      name: "attname"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "value"
      type_annotation {
        pretty_printed_name: "Union[xml.dom.minidom.Attr,builtins.str]"
        kind: UNION
        args {
          pretty_printed_name: "xml.dom.minidom.Attr"
          fully_qualified_name: "xml.dom.minidom.Attr"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "getNamedItem"
    fully_qualified_name: "xml.dom.minidom.NamedNodeMap.getNamedItem"
    return_annotation {
      pretty_printed_name: "Union[xml.dom.minidom.Attr,None]"
      kind: UNION
      args {
        pretty_printed_name: "xml.dom.minidom.Attr"
        fully_qualified_name: "xml.dom.minidom.Attr"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.NamedNodeMap"
        fully_qualified_name: "xml.dom.minidom.NamedNodeMap"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "getNamedItemNS"
    fully_qualified_name: "xml.dom.minidom.NamedNodeMap.getNamedItemNS"
    return_annotation {
      pretty_printed_name: "Union[xml.dom.minidom.Attr,None]"
      kind: UNION
      args {
        pretty_printed_name: "xml.dom.minidom.Attr"
        fully_qualified_name: "xml.dom.minidom.Attr"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.NamedNodeMap"
        fully_qualified_name: "xml.dom.minidom.NamedNodeMap"
      }
    }
    parameters {
      name: "namespaceURI"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "localName"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "removeNamedItem"
    fully_qualified_name: "xml.dom.minidom.NamedNodeMap.removeNamedItem"
    return_annotation {
      pretty_printed_name: "xml.dom.minidom.Attr"
      fully_qualified_name: "xml.dom.minidom.Attr"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.NamedNodeMap"
        fully_qualified_name: "xml.dom.minidom.NamedNodeMap"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "removeNamedItemNS"
    fully_qualified_name: "xml.dom.minidom.NamedNodeMap.removeNamedItemNS"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.NamedNodeMap"
        fully_qualified_name: "xml.dom.minidom.NamedNodeMap"
      }
    }
    parameters {
      name: "namespaceURI"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "localName"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "setNamedItem"
    fully_qualified_name: "xml.dom.minidom.NamedNodeMap.setNamedItem"
    return_annotation {
      pretty_printed_name: "xml.dom.minidom.Attr"
      fully_qualified_name: "xml.dom.minidom.Attr"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.NamedNodeMap"
        fully_qualified_name: "xml.dom.minidom.NamedNodeMap"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.Attr"
        fully_qualified_name: "xml.dom.minidom.Attr"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "setNamedItemNS"
    fully_qualified_name: "xml.dom.minidom.NamedNodeMap.setNamedItemNS"
    return_annotation {
      pretty_printed_name: "xml.dom.minidom.Attr"
      fully_qualified_name: "xml.dom.minidom.Attr"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.NamedNodeMap"
        fully_qualified_name: "xml.dom.minidom.NamedNodeMap"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.Attr"
        fully_qualified_name: "xml.dom.minidom.Attr"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__delitem__"
    fully_qualified_name: "xml.dom.minidom.NamedNodeMap.__delitem__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.NamedNodeMap"
        fully_qualified_name: "xml.dom.minidom.NamedNodeMap"
      }
    }
    parameters {
      name: "attname_or_tuple"
      type_annotation {
        pretty_printed_name: "Union[Tuple[builtins.str,Union[builtins.str,None]],builtins.str]"
        kind: UNION
        args {
          pretty_printed_name: "Tuple[builtins.str,Union[builtins.str,None]]"
          kind: TUPLE
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "Union[builtins.str,None]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "None"
              kind: NONE
            }
          }
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "length"
    fully_qualified_name: "xml.dom.minidom.NamedNodeMap.length"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.NamedNodeMap"
        fully_qualified_name: "xml.dom.minidom.NamedNodeMap"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "TypeInfo"
  fully_qualified_name: "xml.dom.minidom.TypeInfo"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "xml.dom.minidom.TypeInfo.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.TypeInfo"
        fully_qualified_name: "xml.dom.minidom.TypeInfo"
      }
    }
    parameters {
      name: "namespace"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[UnboundType[Incomplete],None]"
        kind: UNION
        args {
          pretty_printed_name: "UnboundType[Incomplete]"
          kind: UNBOUND
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "namespace"
    fully_qualified_name: "xml.dom.minidom.TypeInfo.namespace"
    type_annotation {
      pretty_printed_name: "Union[UnboundType[Incomplete],None]"
      kind: UNION
      args {
        pretty_printed_name: "UnboundType[Incomplete]"
        kind: UNBOUND
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "name"
    fully_qualified_name: "xml.dom.minidom.TypeInfo.name"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "Element"
  fully_qualified_name: "xml.dom.minidom.Element"
  super_classes: "xml.dom.minidom.Node"
  methods {
    name: "__init__"
    fully_qualified_name: "xml.dom.minidom.Element.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.Element"
        fully_qualified_name: "xml.dom.minidom.Element"
      }
    }
    parameters {
      name: "tagName"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "namespaceURI"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "prefix"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[UnboundType[Incomplete],None]"
        kind: UNION
        args {
          pretty_printed_name: "UnboundType[Incomplete]"
          kind: UNBOUND
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "localName"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[UnboundType[Incomplete],None]"
        kind: UNION
        args {
          pretty_printed_name: "UnboundType[Incomplete]"
          kind: UNBOUND
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "unlink"
    fully_qualified_name: "xml.dom.minidom.Element.unlink"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.Element"
        fully_qualified_name: "xml.dom.minidom.Element"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "getAttribute"
    fully_qualified_name: "xml.dom.minidom.Element.getAttribute"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.Element"
        fully_qualified_name: "xml.dom.minidom.Element"
      }
    }
    parameters {
      name: "attname"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "getAttributeNS"
    fully_qualified_name: "xml.dom.minidom.Element.getAttributeNS"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.Element"
        fully_qualified_name: "xml.dom.minidom.Element"
      }
    }
    parameters {
      name: "namespaceURI"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "localName"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "setAttribute"
    fully_qualified_name: "xml.dom.minidom.Element.setAttribute"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.Element"
        fully_qualified_name: "xml.dom.minidom.Element"
      }
    }
    parameters {
      name: "attname"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "setAttributeNS"
    fully_qualified_name: "xml.dom.minidom.Element.setAttributeNS"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.Element"
        fully_qualified_name: "xml.dom.minidom.Element"
      }
    }
    parameters {
      name: "namespaceURI"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "qualifiedName"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "getAttributeNode"
    fully_qualified_name: "xml.dom.minidom.Element.getAttributeNode"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.Element"
        fully_qualified_name: "xml.dom.minidom.Element"
      }
    }
    parameters {
      name: "attrname"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "getAttributeNodeNS"
    fully_qualified_name: "xml.dom.minidom.Element.getAttributeNodeNS"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.Element"
        fully_qualified_name: "xml.dom.minidom.Element"
      }
    }
    parameters {
      name: "namespaceURI"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "localName"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "setAttributeNode"
    fully_qualified_name: "xml.dom.minidom.Element.setAttributeNode"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "attr"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "removeAttribute"
    fully_qualified_name: "xml.dom.minidom.Element.removeAttribute"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.Element"
        fully_qualified_name: "xml.dom.minidom.Element"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "removeAttributeNS"
    fully_qualified_name: "xml.dom.minidom.Element.removeAttributeNS"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.Element"
        fully_qualified_name: "xml.dom.minidom.Element"
      }
    }
    parameters {
      name: "namespaceURI"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "localName"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "removeAttributeNode"
    fully_qualified_name: "xml.dom.minidom.Element.removeAttributeNode"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "hasAttribute"
    fully_qualified_name: "xml.dom.minidom.Element.hasAttribute"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.Element"
        fully_qualified_name: "xml.dom.minidom.Element"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "hasAttributeNS"
    fully_qualified_name: "xml.dom.minidom.Element.hasAttributeNS"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.Element"
        fully_qualified_name: "xml.dom.minidom.Element"
      }
    }
    parameters {
      name: "namespaceURI"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "localName"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "getElementsByTagName"
    fully_qualified_name: "xml.dom.minidom.Element.getElementsByTagName"
    return_annotation {
      pretty_printed_name: "xml.dom.minicompat.NodeList[xml.dom.minidom.Element]"
      args {
        pretty_printed_name: "xml.dom.minidom.Element"
        fully_qualified_name: "xml.dom.minidom.Element"
      }
      fully_qualified_name: "xml.dom.minicompat.NodeList"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.Element"
        fully_qualified_name: "xml.dom.minidom.Element"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "getElementsByTagNameNS"
    fully_qualified_name: "xml.dom.minidom.Element.getElementsByTagNameNS"
    return_annotation {
      pretty_printed_name: "xml.dom.minicompat.NodeList[xml.dom.minidom.Element]"
      args {
        pretty_printed_name: "xml.dom.minidom.Element"
        fully_qualified_name: "xml.dom.minidom.Element"
      }
      fully_qualified_name: "xml.dom.minicompat.NodeList"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.Element"
        fully_qualified_name: "xml.dom.minidom.Element"
      }
    }
    parameters {
      name: "namespaceURI"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "localName"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "writexml"
    fully_qualified_name: "xml.dom.minidom.Element.writexml"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.Element"
        fully_qualified_name: "xml.dom.minidom.Element"
      }
    }
    parameters {
      name: "writer"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_typeshed.SupportsWrite[builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "_typeshed.SupportsWrite"
      }
    }
    parameters {
      name: "indent"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      has_default: true
    }
    parameters {
      name: "addindent"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      has_default: true
    }
    parameters {
      name: "newl"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "hasAttributes"
    fully_qualified_name: "xml.dom.minidom.Element.hasAttributes"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.Element"
        fully_qualified_name: "xml.dom.minidom.Element"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "setIdAttribute"
    fully_qualified_name: "xml.dom.minidom.Element.setIdAttribute"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.Element"
        fully_qualified_name: "xml.dom.minidom.Element"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "setIdAttributeNS"
    fully_qualified_name: "xml.dom.minidom.Element.setIdAttributeNS"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.Element"
        fully_qualified_name: "xml.dom.minidom.Element"
      }
    }
    parameters {
      name: "namespaceURI"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "localName"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "setIdAttributeNode"
    fully_qualified_name: "xml.dom.minidom.Element.setIdAttributeNode"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.Element"
        fully_qualified_name: "xml.dom.minidom.Element"
      }
    }
    parameters {
      name: "idAttr"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "attributes"
    fully_qualified_name: "xml.dom.minidom.Element.attributes"
    return_annotation {
      pretty_printed_name: "xml.dom.minidom.NamedNodeMap"
      fully_qualified_name: "xml.dom.minidom.NamedNodeMap"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.Element"
        fully_qualified_name: "xml.dom.minidom.Element"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "nodeType"
    fully_qualified_name: "xml.dom.minidom.Element.nodeType"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "nodeValue"
    fully_qualified_name: "xml.dom.minidom.Element.nodeValue"
    type_annotation {
      pretty_printed_name: "UnboundType[Incomplete]"
      kind: UNBOUND
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "schemaType"
    fully_qualified_name: "xml.dom.minidom.Element.schemaType"
    type_annotation {
      pretty_printed_name: "UnboundType[Incomplete]"
      kind: UNBOUND
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "parentNode"
    fully_qualified_name: "xml.dom.minidom.Element.parentNode"
    type_annotation {
      pretty_printed_name: "UnboundType[Incomplete]"
      kind: UNBOUND
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "tagName"
    fully_qualified_name: "xml.dom.minidom.Element.tagName"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "nodeName"
    fully_qualified_name: "xml.dom.minidom.Element.nodeName"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "prefix"
    fully_qualified_name: "xml.dom.minidom.Element.prefix"
    type_annotation {
      pretty_printed_name: "UnboundType[Incomplete]"
      kind: UNBOUND
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "namespaceURI"
    fully_qualified_name: "xml.dom.minidom.Element.namespaceURI"
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "childNodes"
    fully_qualified_name: "xml.dom.minidom.Element.childNodes"
    type_annotation {
      pretty_printed_name: "UnboundType[Incomplete]"
      kind: UNBOUND
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "nextSibling"
    fully_qualified_name: "xml.dom.minidom.Element.nextSibling"
    type_annotation {
      pretty_printed_name: "UnboundType[Incomplete]"
      kind: UNBOUND
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "setAttributeNodeNS"
    fully_qualified_name: "xml.dom.minidom.Element.setAttributeNodeNS"
    type_annotation {
      pretty_printed_name: "UnboundType[Incomplete]"
      kind: UNBOUND
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "removeAttributeNodeNS"
    fully_qualified_name: "xml.dom.minidom.Element.removeAttributeNodeNS"
    type_annotation {
      pretty_printed_name: "UnboundType[Incomplete]"
      kind: UNBOUND
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "Childless"
  fully_qualified_name: "xml.dom.minidom.Childless"
  super_classes: "builtins.object"
  methods {
    name: "appendChild"
    fully_qualified_name: "xml.dom.minidom.Childless.appendChild"
    return_annotation {
      pretty_printed_name: "NoReturn"
      kind: UNINHABITED
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.Childless"
        fully_qualified_name: "xml.dom.minidom.Childless"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "hasChildNodes"
    fully_qualified_name: "xml.dom.minidom.Childless.hasChildNodes"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.Childless"
        fully_qualified_name: "xml.dom.minidom.Childless"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "insertBefore"
    fully_qualified_name: "xml.dom.minidom.Childless.insertBefore"
    return_annotation {
      pretty_printed_name: "NoReturn"
      kind: UNINHABITED
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.Childless"
        fully_qualified_name: "xml.dom.minidom.Childless"
      }
    }
    parameters {
      name: "newChild"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "refChild"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "removeChild"
    fully_qualified_name: "xml.dom.minidom.Childless.removeChild"
    return_annotation {
      pretty_printed_name: "NoReturn"
      kind: UNINHABITED
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.Childless"
        fully_qualified_name: "xml.dom.minidom.Childless"
      }
    }
    parameters {
      name: "oldChild"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "normalize"
    fully_qualified_name: "xml.dom.minidom.Childless.normalize"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.Childless"
        fully_qualified_name: "xml.dom.minidom.Childless"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "replaceChild"
    fully_qualified_name: "xml.dom.minidom.Childless.replaceChild"
    return_annotation {
      pretty_printed_name: "NoReturn"
      kind: UNINHABITED
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.Childless"
        fully_qualified_name: "xml.dom.minidom.Childless"
      }
    }
    parameters {
      name: "newChild"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "oldChild"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "attributes"
    fully_qualified_name: "xml.dom.minidom.Childless.attributes"
    type_annotation {
      pretty_printed_name: "UnboundType[Incomplete]"
      kind: UNBOUND
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "childNodes"
    fully_qualified_name: "xml.dom.minidom.Childless.childNodes"
    type_annotation {
      pretty_printed_name: "UnboundType[Incomplete]"
      kind: UNBOUND
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "firstChild"
    fully_qualified_name: "xml.dom.minidom.Childless.firstChild"
    type_annotation {
      pretty_printed_name: "UnboundType[Incomplete]"
      kind: UNBOUND
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "lastChild"
    fully_qualified_name: "xml.dom.minidom.Childless.lastChild"
    type_annotation {
      pretty_printed_name: "UnboundType[Incomplete]"
      kind: UNBOUND
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "ProcessingInstruction"
  fully_qualified_name: "xml.dom.minidom.ProcessingInstruction"
  super_classes: "xml.dom.minidom.Childless"
  super_classes: "xml.dom.minidom.Node"
  methods {
    name: "__init__"
    fully_qualified_name: "xml.dom.minidom.ProcessingInstruction.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.ProcessingInstruction"
        fully_qualified_name: "xml.dom.minidom.ProcessingInstruction"
      }
    }
    parameters {
      name: "target"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "data"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "writexml"
    fully_qualified_name: "xml.dom.minidom.ProcessingInstruction.writexml"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.ProcessingInstruction"
        fully_qualified_name: "xml.dom.minidom.ProcessingInstruction"
      }
    }
    parameters {
      name: "writer"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_typeshed.SupportsWrite[builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "_typeshed.SupportsWrite"
      }
    }
    parameters {
      name: "indent"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      has_default: true
    }
    parameters {
      name: "addindent"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      has_default: true
    }
    parameters {
      name: "newl"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "nodeType"
    fully_qualified_name: "xml.dom.minidom.ProcessingInstruction.nodeType"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "target"
    fully_qualified_name: "xml.dom.minidom.ProcessingInstruction.target"
    type_annotation {
      pretty_printed_name: "UnboundType[Incomplete]"
      kind: UNBOUND
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "data"
    fully_qualified_name: "xml.dom.minidom.ProcessingInstruction.data"
    type_annotation {
      pretty_printed_name: "UnboundType[Incomplete]"
      kind: UNBOUND
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "nodeValue"
    fully_qualified_name: "xml.dom.minidom.ProcessingInstruction.nodeValue"
    type_annotation {
      pretty_printed_name: "UnboundType[Incomplete]"
      kind: UNBOUND
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "nodeName"
    fully_qualified_name: "xml.dom.minidom.ProcessingInstruction.nodeName"
    type_annotation {
      pretty_printed_name: "UnboundType[Incomplete]"
      kind: UNBOUND
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "CharacterData"
  fully_qualified_name: "xml.dom.minidom.CharacterData"
  super_classes: "xml.dom.minidom.Childless"
  super_classes: "xml.dom.minidom.Node"
  methods {
    name: "__init__"
    fully_qualified_name: "xml.dom.minidom.CharacterData.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.CharacterData"
        fully_qualified_name: "xml.dom.minidom.CharacterData"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__len__"
    fully_qualified_name: "xml.dom.minidom.CharacterData.__len__"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.CharacterData"
        fully_qualified_name: "xml.dom.minidom.CharacterData"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "substringData"
    fully_qualified_name: "xml.dom.minidom.CharacterData.substringData"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.CharacterData"
        fully_qualified_name: "xml.dom.minidom.CharacterData"
      }
    }
    parameters {
      name: "offset"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "count"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "appendData"
    fully_qualified_name: "xml.dom.minidom.CharacterData.appendData"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.CharacterData"
        fully_qualified_name: "xml.dom.minidom.CharacterData"
      }
    }
    parameters {
      name: "arg"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "insertData"
    fully_qualified_name: "xml.dom.minidom.CharacterData.insertData"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.CharacterData"
        fully_qualified_name: "xml.dom.minidom.CharacterData"
      }
    }
    parameters {
      name: "offset"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "arg"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "deleteData"
    fully_qualified_name: "xml.dom.minidom.CharacterData.deleteData"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.CharacterData"
        fully_qualified_name: "xml.dom.minidom.CharacterData"
      }
    }
    parameters {
      name: "offset"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "count"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "replaceData"
    fully_qualified_name: "xml.dom.minidom.CharacterData.replaceData"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.CharacterData"
        fully_qualified_name: "xml.dom.minidom.CharacterData"
      }
    }
    parameters {
      name: "offset"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "count"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "arg"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "length"
    fully_qualified_name: "xml.dom.minidom.CharacterData.length"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.CharacterData"
        fully_qualified_name: "xml.dom.minidom.CharacterData"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "ownerDocument"
    fully_qualified_name: "xml.dom.minidom.CharacterData.ownerDocument"
    type_annotation {
      pretty_printed_name: "UnboundType[Incomplete]"
      kind: UNBOUND
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "previousSibling"
    fully_qualified_name: "xml.dom.minidom.CharacterData.previousSibling"
    type_annotation {
      pretty_printed_name: "UnboundType[Incomplete]"
      kind: UNBOUND
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "data"
    fully_qualified_name: "xml.dom.minidom.CharacterData.data"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "nodeValue"
    fully_qualified_name: "xml.dom.minidom.CharacterData.nodeValue"
    type_annotation {
      pretty_printed_name: "UnboundType[Incomplete]"
      kind: UNBOUND
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "Text"
  fully_qualified_name: "xml.dom.minidom.Text"
  super_classes: "xml.dom.minidom.CharacterData"
  methods {
    name: "splitText"
    fully_qualified_name: "xml.dom.minidom.Text.splitText"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "offset"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "writexml"
    fully_qualified_name: "xml.dom.minidom.Text.writexml"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.Text"
        fully_qualified_name: "xml.dom.minidom.Text"
      }
    }
    parameters {
      name: "writer"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_typeshed.SupportsWrite[builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "_typeshed.SupportsWrite"
      }
    }
    parameters {
      name: "indent"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      has_default: true
    }
    parameters {
      name: "addindent"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      has_default: true
    }
    parameters {
      name: "newl"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "replaceWholeText"
    fully_qualified_name: "xml.dom.minidom.Text.replaceWholeText"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "content"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "isWhitespaceInElementContent"
    fully_qualified_name: "xml.dom.minidom.Text.isWhitespaceInElementContent"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.Text"
        fully_qualified_name: "xml.dom.minidom.Text"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "wholeText"
    fully_qualified_name: "xml.dom.minidom.Text.wholeText"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.Text"
        fully_qualified_name: "xml.dom.minidom.Text"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "nodeType"
    fully_qualified_name: "xml.dom.minidom.Text.nodeType"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "nodeName"
    fully_qualified_name: "xml.dom.minidom.Text.nodeName"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "attributes"
    fully_qualified_name: "xml.dom.minidom.Text.attributes"
    type_annotation {
      pretty_printed_name: "UnboundType[Incomplete]"
      kind: UNBOUND
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "data"
    fully_qualified_name: "xml.dom.minidom.Text.data"
    type_annotation {
      pretty_printed_name: "UnboundType[Incomplete]"
      kind: UNBOUND
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "Comment"
  fully_qualified_name: "xml.dom.minidom.Comment"
  super_classes: "xml.dom.minidom.CharacterData"
  methods {
    name: "__init__"
    fully_qualified_name: "xml.dom.minidom.Comment.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.Comment"
        fully_qualified_name: "xml.dom.minidom.Comment"
      }
    }
    parameters {
      name: "data"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "writexml"
    fully_qualified_name: "xml.dom.minidom.Comment.writexml"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.Comment"
        fully_qualified_name: "xml.dom.minidom.Comment"
      }
    }
    parameters {
      name: "writer"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_typeshed.SupportsWrite[builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "_typeshed.SupportsWrite"
      }
    }
    parameters {
      name: "indent"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      has_default: true
    }
    parameters {
      name: "addindent"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      has_default: true
    }
    parameters {
      name: "newl"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "nodeType"
    fully_qualified_name: "xml.dom.minidom.Comment.nodeType"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "nodeName"
    fully_qualified_name: "xml.dom.minidom.Comment.nodeName"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "CDATASection"
  fully_qualified_name: "xml.dom.minidom.CDATASection"
  super_classes: "xml.dom.minidom.Text"
  methods {
    name: "writexml"
    fully_qualified_name: "xml.dom.minidom.CDATASection.writexml"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.CDATASection"
        fully_qualified_name: "xml.dom.minidom.CDATASection"
      }
    }
    parameters {
      name: "writer"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_typeshed.SupportsWrite[builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "_typeshed.SupportsWrite"
      }
    }
    parameters {
      name: "indent"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      has_default: true
    }
    parameters {
      name: "addindent"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      has_default: true
    }
    parameters {
      name: "newl"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "nodeType"
    fully_qualified_name: "xml.dom.minidom.CDATASection.nodeType"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "nodeName"
    fully_qualified_name: "xml.dom.minidom.CDATASection.nodeName"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "ReadOnlySequentialNamedNodeMap"
  fully_qualified_name: "xml.dom.minidom.ReadOnlySequentialNamedNodeMap"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "xml.dom.minidom.ReadOnlySequentialNamedNodeMap.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.ReadOnlySequentialNamedNodeMap"
        fully_qualified_name: "xml.dom.minidom.ReadOnlySequentialNamedNodeMap"
      }
    }
    parameters {
      name: "seq"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__len__"
    fully_qualified_name: "xml.dom.minidom.ReadOnlySequentialNamedNodeMap.__len__"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.ReadOnlySequentialNamedNodeMap"
        fully_qualified_name: "xml.dom.minidom.ReadOnlySequentialNamedNodeMap"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "getNamedItem"
    fully_qualified_name: "xml.dom.minidom.ReadOnlySequentialNamedNodeMap.getNamedItem"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "getNamedItemNS"
    fully_qualified_name: "xml.dom.minidom.ReadOnlySequentialNamedNodeMap.getNamedItemNS"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.ReadOnlySequentialNamedNodeMap"
        fully_qualified_name: "xml.dom.minidom.ReadOnlySequentialNamedNodeMap"
      }
    }
    parameters {
      name: "namespaceURI"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "localName"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__getitem__"
    fully_qualified_name: "xml.dom.minidom.ReadOnlySequentialNamedNodeMap.__getitem__"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "name_or_tuple"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "item"
    fully_qualified_name: "xml.dom.minidom.ReadOnlySequentialNamedNodeMap.item"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "index"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "removeNamedItem"
    fully_qualified_name: "xml.dom.minidom.ReadOnlySequentialNamedNodeMap.removeNamedItem"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.ReadOnlySequentialNamedNodeMap"
        fully_qualified_name: "xml.dom.minidom.ReadOnlySequentialNamedNodeMap"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "removeNamedItemNS"
    fully_qualified_name: "xml.dom.minidom.ReadOnlySequentialNamedNodeMap.removeNamedItemNS"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.ReadOnlySequentialNamedNodeMap"
        fully_qualified_name: "xml.dom.minidom.ReadOnlySequentialNamedNodeMap"
      }
    }
    parameters {
      name: "namespaceURI"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "localName"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "setNamedItem"
    fully_qualified_name: "xml.dom.minidom.ReadOnlySequentialNamedNodeMap.setNamedItem"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.ReadOnlySequentialNamedNodeMap"
        fully_qualified_name: "xml.dom.minidom.ReadOnlySequentialNamedNodeMap"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "setNamedItemNS"
    fully_qualified_name: "xml.dom.minidom.ReadOnlySequentialNamedNodeMap.setNamedItemNS"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.ReadOnlySequentialNamedNodeMap"
        fully_qualified_name: "xml.dom.minidom.ReadOnlySequentialNamedNodeMap"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "length"
    fully_qualified_name: "xml.dom.minidom.ReadOnlySequentialNamedNodeMap.length"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.ReadOnlySequentialNamedNodeMap"
        fully_qualified_name: "xml.dom.minidom.ReadOnlySequentialNamedNodeMap"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "Identified"
  fully_qualified_name: "xml.dom.minidom.Identified"
  super_classes: "builtins.object"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "publicId"
    fully_qualified_name: "xml.dom.minidom.Identified.publicId"
    type_annotation {
      pretty_printed_name: "UnboundType[Incomplete]"
      kind: UNBOUND
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "systemId"
    fully_qualified_name: "xml.dom.minidom.Identified.systemId"
    type_annotation {
      pretty_printed_name: "UnboundType[Incomplete]"
      kind: UNBOUND
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "DocumentType"
  fully_qualified_name: "xml.dom.minidom.DocumentType"
  super_classes: "xml.dom.minidom.Identified"
  super_classes: "xml.dom.minidom.Childless"
  super_classes: "xml.dom.minidom.Node"
  methods {
    name: "__init__"
    fully_qualified_name: "xml.dom.minidom.DocumentType.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.DocumentType"
        fully_qualified_name: "xml.dom.minidom.DocumentType"
      }
    }
    parameters {
      name: "qualifiedName"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "cloneNode"
    fully_qualified_name: "xml.dom.minidom.DocumentType.cloneNode"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "deep"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "writexml"
    fully_qualified_name: "xml.dom.minidom.DocumentType.writexml"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.DocumentType"
        fully_qualified_name: "xml.dom.minidom.DocumentType"
      }
    }
    parameters {
      name: "writer"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_typeshed.SupportsWrite[builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "_typeshed.SupportsWrite"
      }
    }
    parameters {
      name: "indent"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      has_default: true
    }
    parameters {
      name: "addindent"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      has_default: true
    }
    parameters {
      name: "newl"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "nodeType"
    fully_qualified_name: "xml.dom.minidom.DocumentType.nodeType"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "nodeValue"
    fully_qualified_name: "xml.dom.minidom.DocumentType.nodeValue"
    type_annotation {
      pretty_printed_name: "UnboundType[Incomplete]"
      kind: UNBOUND
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "name"
    fully_qualified_name: "xml.dom.minidom.DocumentType.name"
    type_annotation {
      pretty_printed_name: "UnboundType[Incomplete]"
      kind: UNBOUND
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "internalSubset"
    fully_qualified_name: "xml.dom.minidom.DocumentType.internalSubset"
    type_annotation {
      pretty_printed_name: "UnboundType[Incomplete]"
      kind: UNBOUND
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "entities"
    fully_qualified_name: "xml.dom.minidom.DocumentType.entities"
    type_annotation {
      pretty_printed_name: "UnboundType[Incomplete]"
      kind: UNBOUND
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "notations"
    fully_qualified_name: "xml.dom.minidom.DocumentType.notations"
    type_annotation {
      pretty_printed_name: "UnboundType[Incomplete]"
      kind: UNBOUND
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "nodeName"
    fully_qualified_name: "xml.dom.minidom.DocumentType.nodeName"
    type_annotation {
      pretty_printed_name: "UnboundType[Incomplete]"
      kind: UNBOUND
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "Entity"
  fully_qualified_name: "xml.dom.minidom.Entity"
  super_classes: "xml.dom.minidom.Identified"
  super_classes: "xml.dom.minidom.Node"
  methods {
    name: "__init__"
    fully_qualified_name: "xml.dom.minidom.Entity.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.Entity"
        fully_qualified_name: "xml.dom.minidom.Entity"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "publicId"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "systemId"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "notation"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "appendChild"
    fully_qualified_name: "xml.dom.minidom.Entity.appendChild"
    return_annotation {
      pretty_printed_name: "NoReturn"
      kind: UNINHABITED
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.Entity"
        fully_qualified_name: "xml.dom.minidom.Entity"
      }
    }
    parameters {
      name: "newChild"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "insertBefore"
    fully_qualified_name: "xml.dom.minidom.Entity.insertBefore"
    return_annotation {
      pretty_printed_name: "NoReturn"
      kind: UNINHABITED
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.Entity"
        fully_qualified_name: "xml.dom.minidom.Entity"
      }
    }
    parameters {
      name: "newChild"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "refChild"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "removeChild"
    fully_qualified_name: "xml.dom.minidom.Entity.removeChild"
    return_annotation {
      pretty_printed_name: "NoReturn"
      kind: UNINHABITED
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.Entity"
        fully_qualified_name: "xml.dom.minidom.Entity"
      }
    }
    parameters {
      name: "oldChild"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "replaceChild"
    fully_qualified_name: "xml.dom.minidom.Entity.replaceChild"
    return_annotation {
      pretty_printed_name: "NoReturn"
      kind: UNINHABITED
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.Entity"
        fully_qualified_name: "xml.dom.minidom.Entity"
      }
    }
    parameters {
      name: "newChild"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "oldChild"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "attributes"
    fully_qualified_name: "xml.dom.minidom.Entity.attributes"
    type_annotation {
      pretty_printed_name: "UnboundType[Incomplete]"
      kind: UNBOUND
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "nodeType"
    fully_qualified_name: "xml.dom.minidom.Entity.nodeType"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "nodeValue"
    fully_qualified_name: "xml.dom.minidom.Entity.nodeValue"
    type_annotation {
      pretty_printed_name: "UnboundType[Incomplete]"
      kind: UNBOUND
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "actualEncoding"
    fully_qualified_name: "xml.dom.minidom.Entity.actualEncoding"
    type_annotation {
      pretty_printed_name: "UnboundType[Incomplete]"
      kind: UNBOUND
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "encoding"
    fully_qualified_name: "xml.dom.minidom.Entity.encoding"
    type_annotation {
      pretty_printed_name: "UnboundType[Incomplete]"
      kind: UNBOUND
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "version"
    fully_qualified_name: "xml.dom.minidom.Entity.version"
    type_annotation {
      pretty_printed_name: "UnboundType[Incomplete]"
      kind: UNBOUND
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "nodeName"
    fully_qualified_name: "xml.dom.minidom.Entity.nodeName"
    type_annotation {
      pretty_printed_name: "UnboundType[Incomplete]"
      kind: UNBOUND
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "notationName"
    fully_qualified_name: "xml.dom.minidom.Entity.notationName"
    type_annotation {
      pretty_printed_name: "UnboundType[Incomplete]"
      kind: UNBOUND
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "childNodes"
    fully_qualified_name: "xml.dom.minidom.Entity.childNodes"
    type_annotation {
      pretty_printed_name: "UnboundType[Incomplete]"
      kind: UNBOUND
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "Notation"
  fully_qualified_name: "xml.dom.minidom.Notation"
  super_classes: "xml.dom.minidom.Identified"
  super_classes: "xml.dom.minidom.Childless"
  super_classes: "xml.dom.minidom.Node"
  methods {
    name: "__init__"
    fully_qualified_name: "xml.dom.minidom.Notation.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.Notation"
        fully_qualified_name: "xml.dom.minidom.Notation"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "publicId"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "systemId"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "nodeType"
    fully_qualified_name: "xml.dom.minidom.Notation.nodeType"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "nodeValue"
    fully_qualified_name: "xml.dom.minidom.Notation.nodeValue"
    type_annotation {
      pretty_printed_name: "UnboundType[Incomplete]"
      kind: UNBOUND
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "nodeName"
    fully_qualified_name: "xml.dom.minidom.Notation.nodeName"
    type_annotation {
      pretty_printed_name: "UnboundType[Incomplete]"
      kind: UNBOUND
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "DOMImplementation"
  fully_qualified_name: "xml.dom.minidom.DOMImplementation"
  super_classes: "xml.dom.xmlbuilder.DOMImplementationLS"
  methods {
    name: "hasFeature"
    fully_qualified_name: "xml.dom.minidom.DOMImplementation.hasFeature"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.DOMImplementation"
        fully_qualified_name: "xml.dom.minidom.DOMImplementation"
      }
    }
    parameters {
      name: "feature"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "version"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "createDocument"
    fully_qualified_name: "xml.dom.minidom.DOMImplementation.createDocument"
    return_annotation {
      pretty_printed_name: "xml.dom.minidom.Document"
      fully_qualified_name: "xml.dom.minidom.Document"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.DOMImplementation"
        fully_qualified_name: "xml.dom.minidom.DOMImplementation"
      }
    }
    parameters {
      name: "namespaceURI"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "qualifiedName"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "doctype"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[xml.dom.minidom.DocumentType,None]"
        kind: UNION
        args {
          pretty_printed_name: "xml.dom.minidom.DocumentType"
          fully_qualified_name: "xml.dom.minidom.DocumentType"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "createDocumentType"
    fully_qualified_name: "xml.dom.minidom.DOMImplementation.createDocumentType"
    return_annotation {
      pretty_printed_name: "xml.dom.minidom.DocumentType"
      fully_qualified_name: "xml.dom.minidom.DocumentType"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.DOMImplementation"
        fully_qualified_name: "xml.dom.minidom.DOMImplementation"
      }
    }
    parameters {
      name: "qualifiedName"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "publicId"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "systemId"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "getInterface"
    fully_qualified_name: "xml.dom.minidom.DOMImplementation.getInterface"
    return_annotation {
      pretty_printed_name: "Union[UnboundType[Self],None]"
      kind: UNION
      args {
        pretty_printed_name: "UnboundType[Self]"
        kind: UNBOUND
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.DOMImplementation"
        fully_qualified_name: "xml.dom.minidom.DOMImplementation"
      }
    }
    parameters {
      name: "feature"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "ElementInfo"
  fully_qualified_name: "xml.dom.minidom.ElementInfo"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "xml.dom.minidom.ElementInfo.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.ElementInfo"
        fully_qualified_name: "xml.dom.minidom.ElementInfo"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "getAttributeType"
    fully_qualified_name: "xml.dom.minidom.ElementInfo.getAttributeType"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "aname"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "getAttributeTypeNS"
    fully_qualified_name: "xml.dom.minidom.ElementInfo.getAttributeTypeNS"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.ElementInfo"
        fully_qualified_name: "xml.dom.minidom.ElementInfo"
      }
    }
    parameters {
      name: "namespaceURI"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "localName"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "isElementContent"
    fully_qualified_name: "xml.dom.minidom.ElementInfo.isElementContent"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "isEmpty"
    fully_qualified_name: "xml.dom.minidom.ElementInfo.isEmpty"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "isId"
    fully_qualified_name: "xml.dom.minidom.ElementInfo.isId"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "aname"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "isIdNS"
    fully_qualified_name: "xml.dom.minidom.ElementInfo.isIdNS"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.ElementInfo"
        fully_qualified_name: "xml.dom.minidom.ElementInfo"
      }
    }
    parameters {
      name: "namespaceURI"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "localName"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "tagName"
    fully_qualified_name: "xml.dom.minidom.ElementInfo.tagName"
    type_annotation {
      pretty_printed_name: "UnboundType[Incomplete]"
      kind: UNBOUND
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "Document"
  fully_qualified_name: "xml.dom.minidom.Document"
  super_classes: "xml.dom.minidom.Node"
  super_classes: "xml.dom.xmlbuilder.DocumentLS"
  methods {
    name: "__init__"
    fully_qualified_name: "xml.dom.minidom.Document.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.Document"
        fully_qualified_name: "xml.dom.minidom.Document"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "appendChild"
    fully_qualified_name: "xml.dom.minidom.Document.appendChild"
    return_annotation {
      pretty_printed_name: "xml.dom.minidom._N"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.Document"
        fully_qualified_name: "xml.dom.minidom.Document"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom._N"
        kind: TYPE_VAR
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "removeChild"
    fully_qualified_name: "xml.dom.minidom.Document.removeChild"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "oldChild"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "unlink"
    fully_qualified_name: "xml.dom.minidom.Document.unlink"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.Document"
        fully_qualified_name: "xml.dom.minidom.Document"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "cloneNode"
    fully_qualified_name: "xml.dom.minidom.Document.cloneNode"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "deep"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "createDocumentFragment"
    fully_qualified_name: "xml.dom.minidom.Document.createDocumentFragment"
    return_annotation {
      pretty_printed_name: "xml.dom.minidom.DocumentFragment"
      fully_qualified_name: "xml.dom.minidom.DocumentFragment"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.Document"
        fully_qualified_name: "xml.dom.minidom.Document"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "createElement"
    fully_qualified_name: "xml.dom.minidom.Document.createElement"
    return_annotation {
      pretty_printed_name: "xml.dom.minidom.Element"
      fully_qualified_name: "xml.dom.minidom.Element"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.Document"
        fully_qualified_name: "xml.dom.minidom.Document"
      }
    }
    parameters {
      name: "tagName"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "createTextNode"
    fully_qualified_name: "xml.dom.minidom.Document.createTextNode"
    return_annotation {
      pretty_printed_name: "xml.dom.minidom.Text"
      fully_qualified_name: "xml.dom.minidom.Text"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.Document"
        fully_qualified_name: "xml.dom.minidom.Document"
      }
    }
    parameters {
      name: "data"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "createCDATASection"
    fully_qualified_name: "xml.dom.minidom.Document.createCDATASection"
    return_annotation {
      pretty_printed_name: "xml.dom.minidom.CDATASection"
      fully_qualified_name: "xml.dom.minidom.CDATASection"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.Document"
        fully_qualified_name: "xml.dom.minidom.Document"
      }
    }
    parameters {
      name: "data"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "createComment"
    fully_qualified_name: "xml.dom.minidom.Document.createComment"
    return_annotation {
      pretty_printed_name: "xml.dom.minidom.Comment"
      fully_qualified_name: "xml.dom.minidom.Comment"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.Document"
        fully_qualified_name: "xml.dom.minidom.Document"
      }
    }
    parameters {
      name: "data"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "createProcessingInstruction"
    fully_qualified_name: "xml.dom.minidom.Document.createProcessingInstruction"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "target"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "data"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "createAttribute"
    fully_qualified_name: "xml.dom.minidom.Document.createAttribute"
    return_annotation {
      pretty_printed_name: "xml.dom.minidom.Attr"
      fully_qualified_name: "xml.dom.minidom.Attr"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.Document"
        fully_qualified_name: "xml.dom.minidom.Document"
      }
    }
    parameters {
      name: "qName"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "createElementNS"
    fully_qualified_name: "xml.dom.minidom.Document.createElementNS"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.Document"
        fully_qualified_name: "xml.dom.minidom.Document"
      }
    }
    parameters {
      name: "namespaceURI"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "qualifiedName"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "createAttributeNS"
    fully_qualified_name: "xml.dom.minidom.Document.createAttributeNS"
    return_annotation {
      pretty_printed_name: "xml.dom.minidom.Attr"
      fully_qualified_name: "xml.dom.minidom.Attr"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.Document"
        fully_qualified_name: "xml.dom.minidom.Document"
      }
    }
    parameters {
      name: "namespaceURI"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "qualifiedName"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "getElementById"
    fully_qualified_name: "xml.dom.minidom.Document.getElementById"
    return_annotation {
      pretty_printed_name: "Union[xml.dom.minidom.Element,None]"
      kind: UNION
      args {
        pretty_printed_name: "xml.dom.minidom.Element"
        fully_qualified_name: "xml.dom.minidom.Element"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.Document"
        fully_qualified_name: "xml.dom.minidom.Document"
      }
    }
    parameters {
      name: "id"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "getElementsByTagName"
    fully_qualified_name: "xml.dom.minidom.Document.getElementsByTagName"
    return_annotation {
      pretty_printed_name: "xml.dom.minicompat.NodeList[xml.dom.minidom.Element]"
      args {
        pretty_printed_name: "xml.dom.minidom.Element"
        fully_qualified_name: "xml.dom.minidom.Element"
      }
      fully_qualified_name: "xml.dom.minicompat.NodeList"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.Document"
        fully_qualified_name: "xml.dom.minidom.Document"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "getElementsByTagNameNS"
    fully_qualified_name: "xml.dom.minidom.Document.getElementsByTagNameNS"
    return_annotation {
      pretty_printed_name: "xml.dom.minicompat.NodeList[xml.dom.minidom.Element]"
      args {
        pretty_printed_name: "xml.dom.minidom.Element"
        fully_qualified_name: "xml.dom.minidom.Element"
      }
      fully_qualified_name: "xml.dom.minicompat.NodeList"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.Document"
        fully_qualified_name: "xml.dom.minidom.Document"
      }
    }
    parameters {
      name: "namespaceURI"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "localName"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "isSupported"
    fully_qualified_name: "xml.dom.minidom.Document.isSupported"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.Document"
        fully_qualified_name: "xml.dom.minidom.Document"
      }
    }
    parameters {
      name: "feature"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "version"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "importNode"
    fully_qualified_name: "xml.dom.minidom.Document.importNode"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "deep"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "writexml"
    fully_qualified_name: "xml.dom.minidom.Document.writexml"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.Document"
        fully_qualified_name: "xml.dom.minidom.Document"
      }
    }
    parameters {
      name: "writer"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_typeshed.SupportsWrite[builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "_typeshed.SupportsWrite"
      }
    }
    parameters {
      name: "indent"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      has_default: true
    }
    parameters {
      name: "addindent"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      has_default: true
    }
    parameters {
      name: "newl"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      has_default: true
    }
    parameters {
      name: "encoding"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[UnboundType[Incomplete],None]"
        kind: UNION
        args {
          pretty_printed_name: "UnboundType[Incomplete]"
          kind: UNBOUND
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
  }
  methods {
    name: "writexml"
    fully_qualified_name: "xml.dom.minidom.Document.writexml"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.Document"
        fully_qualified_name: "xml.dom.minidom.Document"
      }
    }
    parameters {
      name: "writer"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_typeshed.SupportsWrite[builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "_typeshed.SupportsWrite"
      }
    }
    parameters {
      name: "indent"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      has_default: true
    }
    parameters {
      name: "addindent"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      has_default: true
    }
    parameters {
      name: "newl"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      has_default: true
    }
    parameters {
      name: "encoding"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "standalone"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.bool,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "renameNode"
    fully_qualified_name: "xml.dom.minidom.Document.renameNode"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minidom.Document"
        fully_qualified_name: "xml.dom.minidom.Document"
      }
    }
    parameters {
      name: "n"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "namespaceURI"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "implementation"
    fully_qualified_name: "xml.dom.minidom.Document.implementation"
    type_annotation {
      pretty_printed_name: "UnboundType[Incomplete]"
      kind: UNBOUND
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "nodeType"
    fully_qualified_name: "xml.dom.minidom.Document.nodeType"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "nodeName"
    fully_qualified_name: "xml.dom.minidom.Document.nodeName"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "nodeValue"
    fully_qualified_name: "xml.dom.minidom.Document.nodeValue"
    type_annotation {
      pretty_printed_name: "UnboundType[Incomplete]"
      kind: UNBOUND
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "attributes"
    fully_qualified_name: "xml.dom.minidom.Document.attributes"
    type_annotation {
      pretty_printed_name: "UnboundType[Incomplete]"
      kind: UNBOUND
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "parentNode"
    fully_qualified_name: "xml.dom.minidom.Document.parentNode"
    type_annotation {
      pretty_printed_name: "UnboundType[Incomplete]"
      kind: UNBOUND
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "previousSibling"
    fully_qualified_name: "xml.dom.minidom.Document.previousSibling"
    type_annotation {
      pretty_printed_name: "UnboundType[Incomplete]"
      kind: UNBOUND
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "nextSibling"
    fully_qualified_name: "xml.dom.minidom.Document.nextSibling"
    type_annotation {
      pretty_printed_name: "UnboundType[Incomplete]"
      kind: UNBOUND
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "actualEncoding"
    fully_qualified_name: "xml.dom.minidom.Document.actualEncoding"
    type_annotation {
      pretty_printed_name: "UnboundType[Incomplete]"
      kind: UNBOUND
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "encoding"
    fully_qualified_name: "xml.dom.minidom.Document.encoding"
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "standalone"
    fully_qualified_name: "xml.dom.minidom.Document.standalone"
    type_annotation {
      pretty_printed_name: "Union[builtins.bool,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "version"
    fully_qualified_name: "xml.dom.minidom.Document.version"
    type_annotation {
      pretty_printed_name: "UnboundType[Incomplete]"
      kind: UNBOUND
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "strictErrorChecking"
    fully_qualified_name: "xml.dom.minidom.Document.strictErrorChecking"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "errorHandler"
    fully_qualified_name: "xml.dom.minidom.Document.errorHandler"
    type_annotation {
      pretty_printed_name: "UnboundType[Incomplete]"
      kind: UNBOUND
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "documentURI"
    fully_qualified_name: "xml.dom.minidom.Document.documentURI"
    type_annotation {
      pretty_printed_name: "UnboundType[Incomplete]"
      kind: UNBOUND
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "doctype"
    fully_qualified_name: "xml.dom.minidom.Document.doctype"
    type_annotation {
      pretty_printed_name: "Union[xml.dom.minidom.DocumentType,None]"
      kind: UNION
      args {
        pretty_printed_name: "xml.dom.minidom.DocumentType"
        fully_qualified_name: "xml.dom.minidom.DocumentType"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "childNodes"
    fully_qualified_name: "xml.dom.minidom.Document.childNodes"
    type_annotation {
      pretty_printed_name: "UnboundType[Incomplete]"
      kind: UNBOUND
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "documentElement"
    fully_qualified_name: "xml.dom.minidom.Document.documentElement"
    type_annotation {
      pretty_printed_name: "UnboundType[Incomplete]"
      kind: UNBOUND
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
functions {
  name: "parse"
  fully_qualified_name: "xml.dom.minidom.parse"
  return_annotation {
    pretty_printed_name: "xml.dom.minidom.Document"
    fully_qualified_name: "xml.dom.minidom.Document"
  }
  parameters {
    name: "file"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,_typeshed.SupportsRead[Union[UnboundType[ReadableBuffer],builtins.str]]]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "_typeshed.SupportsRead[Union[UnboundType[ReadableBuffer],builtins.str]]"
        args {
          pretty_printed_name: "Union[UnboundType[ReadableBuffer],builtins.str]"
          kind: UNION
          args {
            pretty_printed_name: "UnboundType[ReadableBuffer]"
            kind: UNBOUND
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        fully_qualified_name: "_typeshed.SupportsRead"
      }
    }
  }
  parameters {
    name: "parser"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[xml.sax.xmlreader.XMLReader,None]"
      kind: UNION
      args {
        pretty_printed_name: "xml.sax.xmlreader.XMLReader"
        fully_qualified_name: "xml.sax.xmlreader.XMLReader"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "bufsize"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.int,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "parseString"
  fully_qualified_name: "xml.dom.minidom.parseString"
  return_annotation {
    pretty_printed_name: "xml.dom.minidom.Document"
    fully_qualified_name: "xml.dom.minidom.Document"
  }
  parameters {
    name: "string"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,UnboundType[ReadableBuffer]]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "UnboundType[ReadableBuffer]"
        kind: UNBOUND
      }
    }
  }
  parameters {
    name: "parser"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[xml.sax.xmlreader.XMLReader,None]"
      kind: UNION
      args {
        pretty_printed_name: "xml.sax.xmlreader.XMLReader"
        fully_qualified_name: "xml.sax.xmlreader.XMLReader"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "getDOMImplementation"
  fully_qualified_name: "xml.dom.minidom.getDOMImplementation"
  return_annotation {
    pretty_printed_name: "Union[xml.dom.minidom.DOMImplementation,None]"
    kind: UNION
    args {
      pretty_printed_name: "xml.dom.minidom.DOMImplementation"
      fully_qualified_name: "xml.dom.minidom.DOMImplementation"
    }
    args {
      pretty_printed_name: "None"
      kind: NONE
    }
  }
  parameters {
    name: "features"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "xml"
  fully_qualified_name: "xml"
  is_imported_module: true
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
