fully_qualified_name: "ssl"
classes {
  name: "_Cipher"
  fully_qualified_name: "ssl._Cipher"
  super_classes: "typing._TypedDict"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "SSLError"
  fully_qualified_name: "ssl.SSLError"
  super_classes: "builtins.OSError"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "library"
    fully_qualified_name: "ssl.SSLError.library"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "reason"
    fully_qualified_name: "ssl.SSLError.reason"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "SSLZeroReturnError"
  fully_qualified_name: "ssl.SSLZeroReturnError"
  super_classes: "ssl.SSLError"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "SSLWantReadError"
  fully_qualified_name: "ssl.SSLWantReadError"
  super_classes: "ssl.SSLError"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "SSLWantWriteError"
  fully_qualified_name: "ssl.SSLWantWriteError"
  super_classes: "ssl.SSLError"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "SSLSyscallError"
  fully_qualified_name: "ssl.SSLSyscallError"
  super_classes: "ssl.SSLError"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "SSLEOFError"
  fully_qualified_name: "ssl.SSLEOFError"
  super_classes: "ssl.SSLError"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "SSLCertVerificationError"
  fully_qualified_name: "ssl.SSLCertVerificationError"
  super_classes: "ssl.SSLError"
  super_classes: "builtins.ValueError"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "verify_code"
    fully_qualified_name: "ssl.SSLCertVerificationError.verify_code"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "verify_message"
    fully_qualified_name: "ssl.SSLCertVerificationError.verify_message"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "DefaultVerifyPaths"
  fully_qualified_name: "ssl.DefaultVerifyPaths"
  super_classes: "builtins.tuple"
  methods {
    name: "_replace"
    fully_qualified_name: "ssl.DefaultVerifyPaths._replace"
    return_annotation {
      pretty_printed_name: "ssl.DefaultVerifyPaths._NT"
      kind: TYPE_VAR
    }
    parameters {
      name: "_self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ssl.DefaultVerifyPaths._NT"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "cafile"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      has_default: true
    }
    parameters {
      name: "capath"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      has_default: true
    }
    parameters {
      name: "openssl_cafile_env"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      has_default: true
    }
    parameters {
      name: "openssl_cafile"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      has_default: true
    }
    parameters {
      name: "openssl_capath_env"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      has_default: true
    }
    parameters {
      name: "openssl_capath"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__new__"
    fully_qualified_name: "ssl.DefaultVerifyPaths.__new__"
    return_annotation {
      pretty_printed_name: "ssl.DefaultVerifyPaths._NT"
      kind: TYPE_VAR
    }
    parameters {
      name: "_cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[ssl.DefaultVerifyPaths._NT]"
        kind: TYPE
        args {
          pretty_printed_name: "ssl.DefaultVerifyPaths._NT"
          kind: TYPE_VAR
        }
      }
    }
    parameters {
      name: "cafile"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "capath"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "openssl_cafile_env"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "openssl_cafile"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "openssl_capath_env"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "openssl_capath"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "_asdict"
    fully_qualified_name: "ssl.DefaultVerifyPaths._asdict"
    return_annotation {
      pretty_printed_name: "builtins.dict[builtins.str,Any]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "builtins.dict"
    }
    parameters {
      name: "_self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ssl.DefaultVerifyPaths._NT"
        kind: TYPE_VAR
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "_make"
    fully_qualified_name: "ssl.DefaultVerifyPaths._make"
    return_annotation {
      pretty_printed_name: "ssl.DefaultVerifyPaths._NT"
      kind: TYPE_VAR
    }
    parameters {
      name: "_cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[ssl.DefaultVerifyPaths._NT]"
        kind: TYPE
        args {
          pretty_printed_name: "ssl.DefaultVerifyPaths._NT"
          kind: TYPE_VAR
        }
      }
    }
    parameters {
      name: "iterable"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    parameters {
      name: "new"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
      has_default: true
    }
    parameters {
      name: "len"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "classmethod"
    is_class_method: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "cafile"
    fully_qualified_name: "ssl.DefaultVerifyPaths.cafile"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "35"
    valid_for: "36"
    valid_for: "36"
    valid_for: "37"
    valid_for: "37"
    valid_for: "38"
    valid_for: "38"
    valid_for: "39"
    valid_for: "39"
    valid_for: "310"
    valid_for: "310"
  }
  attributes {
    name: "capath"
    fully_qualified_name: "ssl.DefaultVerifyPaths.capath"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "35"
    valid_for: "36"
    valid_for: "36"
    valid_for: "37"
    valid_for: "37"
    valid_for: "38"
    valid_for: "38"
    valid_for: "39"
    valid_for: "39"
    valid_for: "310"
    valid_for: "310"
  }
  attributes {
    name: "openssl_cafile_env"
    fully_qualified_name: "ssl.DefaultVerifyPaths.openssl_cafile_env"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "35"
    valid_for: "36"
    valid_for: "36"
    valid_for: "37"
    valid_for: "37"
    valid_for: "38"
    valid_for: "38"
    valid_for: "39"
    valid_for: "39"
    valid_for: "310"
    valid_for: "310"
  }
  attributes {
    name: "openssl_cafile"
    fully_qualified_name: "ssl.DefaultVerifyPaths.openssl_cafile"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "35"
    valid_for: "36"
    valid_for: "36"
    valid_for: "37"
    valid_for: "37"
    valid_for: "38"
    valid_for: "38"
    valid_for: "39"
    valid_for: "39"
    valid_for: "310"
    valid_for: "310"
  }
  attributes {
    name: "openssl_capath_env"
    fully_qualified_name: "ssl.DefaultVerifyPaths.openssl_capath_env"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "35"
    valid_for: "36"
    valid_for: "36"
    valid_for: "37"
    valid_for: "37"
    valid_for: "38"
    valid_for: "38"
    valid_for: "39"
    valid_for: "39"
    valid_for: "310"
    valid_for: "310"
  }
  attributes {
    name: "openssl_capath"
    fully_qualified_name: "ssl.DefaultVerifyPaths.openssl_capath"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "35"
    valid_for: "36"
    valid_for: "36"
    valid_for: "37"
    valid_for: "37"
    valid_for: "38"
    valid_for: "38"
    valid_for: "39"
    valid_for: "39"
    valid_for: "310"
    valid_for: "310"
  }
  attributes {
    name: "_fields"
    fully_qualified_name: "ssl.DefaultVerifyPaths._fields"
    type_annotation {
      pretty_printed_name: "Tuple[builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str]"
      kind: TUPLE
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "_field_types"
    fully_qualified_name: "ssl.DefaultVerifyPaths._field_types"
    type_annotation {
      pretty_printed_name: "builtins.dict[builtins.str,Any]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "builtins.dict"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "_field_defaults"
    fully_qualified_name: "ssl.DefaultVerifyPaths._field_defaults"
    type_annotation {
      pretty_printed_name: "builtins.dict[builtins.str,Any]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "builtins.dict"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "_source"
    fully_qualified_name: "ssl.DefaultVerifyPaths._source"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "__annotations__"
    fully_qualified_name: "ssl.DefaultVerifyPaths.__annotations__"
    type_annotation {
      pretty_printed_name: "builtins.dict[builtins.str,Any]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "builtins.dict"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "VerifyMode"
  fully_qualified_name: "ssl.VerifyMode"
  super_classes: "enum.IntEnum"
  is_enum: true
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "CERT_NONE"
    fully_qualified_name: "ssl.VerifyMode.CERT_NONE"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "CERT_OPTIONAL"
    fully_qualified_name: "ssl.VerifyMode.CERT_OPTIONAL"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "CERT_REQUIRED"
    fully_qualified_name: "ssl.VerifyMode.CERT_REQUIRED"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "VerifyFlags"
  fully_qualified_name: "ssl.VerifyFlags"
  super_classes: "enum.IntFlag"
  is_enum: true
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "VERIFY_DEFAULT"
    fully_qualified_name: "ssl.VerifyFlags.VERIFY_DEFAULT"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "VERIFY_CRL_CHECK_LEAF"
    fully_qualified_name: "ssl.VerifyFlags.VERIFY_CRL_CHECK_LEAF"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "VERIFY_CRL_CHECK_CHAIN"
    fully_qualified_name: "ssl.VerifyFlags.VERIFY_CRL_CHECK_CHAIN"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "VERIFY_X509_STRICT"
    fully_qualified_name: "ssl.VerifyFlags.VERIFY_X509_STRICT"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "VERIFY_X509_TRUSTED_FIRST"
    fully_qualified_name: "ssl.VerifyFlags.VERIFY_X509_TRUSTED_FIRST"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "VERIFY_ALLOW_PROXY_CERTS"
    fully_qualified_name: "ssl.VerifyFlags.VERIFY_ALLOW_PROXY_CERTS"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "310"
  }
  attributes {
    name: "VERIFY_X509_PARTIAL_CHAIN"
    fully_qualified_name: "ssl.VerifyFlags.VERIFY_X509_PARTIAL_CHAIN"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "310"
  }
}
classes {
  name: "_SSLMethod"
  fully_qualified_name: "ssl._SSLMethod"
  super_classes: "enum.IntEnum"
  is_enum: true
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "PROTOCOL_SSLv23"
    fully_qualified_name: "ssl._SSLMethod.PROTOCOL_SSLv23"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "PROTOCOL_SSLv2"
    fully_qualified_name: "ssl._SSLMethod.PROTOCOL_SSLv2"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "PROTOCOL_SSLv3"
    fully_qualified_name: "ssl._SSLMethod.PROTOCOL_SSLv3"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "PROTOCOL_TLSv1"
    fully_qualified_name: "ssl._SSLMethod.PROTOCOL_TLSv1"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "PROTOCOL_TLSv1_1"
    fully_qualified_name: "ssl._SSLMethod.PROTOCOL_TLSv1_1"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "PROTOCOL_TLSv1_2"
    fully_qualified_name: "ssl._SSLMethod.PROTOCOL_TLSv1_2"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "PROTOCOL_TLS"
    fully_qualified_name: "ssl._SSLMethod.PROTOCOL_TLS"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "PROTOCOL_TLS_CLIENT"
    fully_qualified_name: "ssl._SSLMethod.PROTOCOL_TLS_CLIENT"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "PROTOCOL_TLS_SERVER"
    fully_qualified_name: "ssl._SSLMethod.PROTOCOL_TLS_SERVER"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "Options"
  fully_qualified_name: "ssl.Options"
  super_classes: "enum.IntFlag"
  is_enum: true
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "OP_ALL"
    fully_qualified_name: "ssl.Options.OP_ALL"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "OP_NO_SSLv2"
    fully_qualified_name: "ssl.Options.OP_NO_SSLv2"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "OP_NO_SSLv3"
    fully_qualified_name: "ssl.Options.OP_NO_SSLv3"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "OP_NO_TLSv1"
    fully_qualified_name: "ssl.Options.OP_NO_TLSv1"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "OP_NO_TLSv1_1"
    fully_qualified_name: "ssl.Options.OP_NO_TLSv1_1"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "OP_NO_TLSv1_2"
    fully_qualified_name: "ssl.Options.OP_NO_TLSv1_2"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "OP_NO_TLSv1_3"
    fully_qualified_name: "ssl.Options.OP_NO_TLSv1_3"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "OP_CIPHER_SERVER_PREFERENCE"
    fully_qualified_name: "ssl.Options.OP_CIPHER_SERVER_PREFERENCE"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "OP_SINGLE_DH_USE"
    fully_qualified_name: "ssl.Options.OP_SINGLE_DH_USE"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "OP_SINGLE_ECDH_USE"
    fully_qualified_name: "ssl.Options.OP_SINGLE_ECDH_USE"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "OP_NO_COMPRESSION"
    fully_qualified_name: "ssl.Options.OP_NO_COMPRESSION"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "OP_NO_TICKET"
    fully_qualified_name: "ssl.Options.OP_NO_TICKET"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "OP_NO_RENEGOTIATION"
    fully_qualified_name: "ssl.Options.OP_NO_RENEGOTIATION"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "OP_ENABLE_MIDDLEBOX_COMPAT"
    fully_qualified_name: "ssl.Options.OP_ENABLE_MIDDLEBOX_COMPAT"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "OP_IGNORE_UNEXPECTED_EOF"
    fully_qualified_name: "ssl.Options.OP_IGNORE_UNEXPECTED_EOF"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "AlertDescription"
  fully_qualified_name: "ssl.AlertDescription"
  super_classes: "enum.IntEnum"
  is_enum: true
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "ALERT_DESCRIPTION_ACCESS_DENIED"
    fully_qualified_name: "ssl.AlertDescription.ALERT_DESCRIPTION_ACCESS_DENIED"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "ALERT_DESCRIPTION_BAD_CERTIFICATE"
    fully_qualified_name: "ssl.AlertDescription.ALERT_DESCRIPTION_BAD_CERTIFICATE"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "ALERT_DESCRIPTION_BAD_CERTIFICATE_HASH_VALUE"
    fully_qualified_name: "ssl.AlertDescription.ALERT_DESCRIPTION_BAD_CERTIFICATE_HASH_VALUE"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "ALERT_DESCRIPTION_BAD_CERTIFICATE_STATUS_RESPONSE"
    fully_qualified_name: "ssl.AlertDescription.ALERT_DESCRIPTION_BAD_CERTIFICATE_STATUS_RESPONSE"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "ALERT_DESCRIPTION_BAD_RECORD_MAC"
    fully_qualified_name: "ssl.AlertDescription.ALERT_DESCRIPTION_BAD_RECORD_MAC"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "ALERT_DESCRIPTION_CERTIFICATE_EXPIRED"
    fully_qualified_name: "ssl.AlertDescription.ALERT_DESCRIPTION_CERTIFICATE_EXPIRED"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "ALERT_DESCRIPTION_CERTIFICATE_REVOKED"
    fully_qualified_name: "ssl.AlertDescription.ALERT_DESCRIPTION_CERTIFICATE_REVOKED"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "ALERT_DESCRIPTION_CERTIFICATE_UNKNOWN"
    fully_qualified_name: "ssl.AlertDescription.ALERT_DESCRIPTION_CERTIFICATE_UNKNOWN"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "ALERT_DESCRIPTION_CERTIFICATE_UNOBTAINABLE"
    fully_qualified_name: "ssl.AlertDescription.ALERT_DESCRIPTION_CERTIFICATE_UNOBTAINABLE"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "ALERT_DESCRIPTION_CLOSE_NOTIFY"
    fully_qualified_name: "ssl.AlertDescription.ALERT_DESCRIPTION_CLOSE_NOTIFY"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "ALERT_DESCRIPTION_DECODE_ERROR"
    fully_qualified_name: "ssl.AlertDescription.ALERT_DESCRIPTION_DECODE_ERROR"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "ALERT_DESCRIPTION_DECOMPRESSION_FAILURE"
    fully_qualified_name: "ssl.AlertDescription.ALERT_DESCRIPTION_DECOMPRESSION_FAILURE"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "ALERT_DESCRIPTION_DECRYPT_ERROR"
    fully_qualified_name: "ssl.AlertDescription.ALERT_DESCRIPTION_DECRYPT_ERROR"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "ALERT_DESCRIPTION_HANDSHAKE_FAILURE"
    fully_qualified_name: "ssl.AlertDescription.ALERT_DESCRIPTION_HANDSHAKE_FAILURE"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "ALERT_DESCRIPTION_ILLEGAL_PARAMETER"
    fully_qualified_name: "ssl.AlertDescription.ALERT_DESCRIPTION_ILLEGAL_PARAMETER"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "ALERT_DESCRIPTION_INSUFFICIENT_SECURITY"
    fully_qualified_name: "ssl.AlertDescription.ALERT_DESCRIPTION_INSUFFICIENT_SECURITY"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "ALERT_DESCRIPTION_INTERNAL_ERROR"
    fully_qualified_name: "ssl.AlertDescription.ALERT_DESCRIPTION_INTERNAL_ERROR"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "ALERT_DESCRIPTION_NO_RENEGOTIATION"
    fully_qualified_name: "ssl.AlertDescription.ALERT_DESCRIPTION_NO_RENEGOTIATION"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "ALERT_DESCRIPTION_PROTOCOL_VERSION"
    fully_qualified_name: "ssl.AlertDescription.ALERT_DESCRIPTION_PROTOCOL_VERSION"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "ALERT_DESCRIPTION_RECORD_OVERFLOW"
    fully_qualified_name: "ssl.AlertDescription.ALERT_DESCRIPTION_RECORD_OVERFLOW"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "ALERT_DESCRIPTION_UNEXPECTED_MESSAGE"
    fully_qualified_name: "ssl.AlertDescription.ALERT_DESCRIPTION_UNEXPECTED_MESSAGE"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "ALERT_DESCRIPTION_UNKNOWN_CA"
    fully_qualified_name: "ssl.AlertDescription.ALERT_DESCRIPTION_UNKNOWN_CA"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "ALERT_DESCRIPTION_UNKNOWN_PSK_IDENTITY"
    fully_qualified_name: "ssl.AlertDescription.ALERT_DESCRIPTION_UNKNOWN_PSK_IDENTITY"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "ALERT_DESCRIPTION_UNRECOGNIZED_NAME"
    fully_qualified_name: "ssl.AlertDescription.ALERT_DESCRIPTION_UNRECOGNIZED_NAME"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "ALERT_DESCRIPTION_UNSUPPORTED_CERTIFICATE"
    fully_qualified_name: "ssl.AlertDescription.ALERT_DESCRIPTION_UNSUPPORTED_CERTIFICATE"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "ALERT_DESCRIPTION_UNSUPPORTED_EXTENSION"
    fully_qualified_name: "ssl.AlertDescription.ALERT_DESCRIPTION_UNSUPPORTED_EXTENSION"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "ALERT_DESCRIPTION_USER_CANCELLED"
    fully_qualified_name: "ssl.AlertDescription.ALERT_DESCRIPTION_USER_CANCELLED"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "_ASN1ObjectBase"
  fully_qualified_name: "ssl._ASN1ObjectBase"
  super_classes: "builtins.tuple"
  methods {
    name: "_replace"
    fully_qualified_name: "ssl._ASN1ObjectBase._replace"
    return_annotation {
      pretty_printed_name: "ssl._ASN1ObjectBase._NT"
      kind: TYPE_VAR
    }
    parameters {
      name: "_self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ssl._ASN1ObjectBase._NT"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "nid"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    parameters {
      name: "shortname"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      has_default: true
    }
    parameters {
      name: "longname"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      has_default: true
    }
    parameters {
      name: "oid"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__new__"
    fully_qualified_name: "ssl._ASN1ObjectBase.__new__"
    return_annotation {
      pretty_printed_name: "ssl._ASN1ObjectBase._NT"
      kind: TYPE_VAR
    }
    parameters {
      name: "_cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[ssl._ASN1ObjectBase._NT]"
        kind: TYPE
        args {
          pretty_printed_name: "ssl._ASN1ObjectBase._NT"
          kind: TYPE_VAR
        }
      }
    }
    parameters {
      name: "nid"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "shortname"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "longname"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "oid"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "_asdict"
    fully_qualified_name: "ssl._ASN1ObjectBase._asdict"
    return_annotation {
      pretty_printed_name: "builtins.dict[builtins.str,Any]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "builtins.dict"
    }
    parameters {
      name: "_self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ssl._ASN1ObjectBase._NT"
        kind: TYPE_VAR
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "_make"
    fully_qualified_name: "ssl._ASN1ObjectBase._make"
    return_annotation {
      pretty_printed_name: "ssl._ASN1ObjectBase._NT"
      kind: TYPE_VAR
    }
    parameters {
      name: "_cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[ssl._ASN1ObjectBase._NT]"
        kind: TYPE
        args {
          pretty_printed_name: "ssl._ASN1ObjectBase._NT"
          kind: TYPE_VAR
        }
      }
    }
    parameters {
      name: "iterable"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    parameters {
      name: "new"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
      has_default: true
    }
    parameters {
      name: "len"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "classmethod"
    is_class_method: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "nid"
    fully_qualified_name: "ssl._ASN1ObjectBase.nid"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "35"
    valid_for: "36"
    valid_for: "36"
    valid_for: "37"
    valid_for: "37"
    valid_for: "38"
    valid_for: "38"
    valid_for: "39"
    valid_for: "39"
    valid_for: "310"
    valid_for: "310"
  }
  attributes {
    name: "shortname"
    fully_qualified_name: "ssl._ASN1ObjectBase.shortname"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "35"
    valid_for: "36"
    valid_for: "36"
    valid_for: "37"
    valid_for: "37"
    valid_for: "38"
    valid_for: "38"
    valid_for: "39"
    valid_for: "39"
    valid_for: "310"
    valid_for: "310"
  }
  attributes {
    name: "longname"
    fully_qualified_name: "ssl._ASN1ObjectBase.longname"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "35"
    valid_for: "36"
    valid_for: "36"
    valid_for: "37"
    valid_for: "37"
    valid_for: "38"
    valid_for: "38"
    valid_for: "39"
    valid_for: "39"
    valid_for: "310"
    valid_for: "310"
  }
  attributes {
    name: "oid"
    fully_qualified_name: "ssl._ASN1ObjectBase.oid"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "35"
    valid_for: "36"
    valid_for: "36"
    valid_for: "37"
    valid_for: "37"
    valid_for: "38"
    valid_for: "38"
    valid_for: "39"
    valid_for: "39"
    valid_for: "310"
    valid_for: "310"
  }
  attributes {
    name: "_fields"
    fully_qualified_name: "ssl._ASN1ObjectBase._fields"
    type_annotation {
      pretty_printed_name: "Tuple[builtins.str,builtins.str,builtins.str,builtins.str]"
      kind: TUPLE
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "_field_types"
    fully_qualified_name: "ssl._ASN1ObjectBase._field_types"
    type_annotation {
      pretty_printed_name: "builtins.dict[builtins.str,Any]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "builtins.dict"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "_field_defaults"
    fully_qualified_name: "ssl._ASN1ObjectBase._field_defaults"
    type_annotation {
      pretty_printed_name: "builtins.dict[builtins.str,Any]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "builtins.dict"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "_source"
    fully_qualified_name: "ssl._ASN1ObjectBase._source"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "__annotations__"
    fully_qualified_name: "ssl._ASN1ObjectBase.__annotations__"
    type_annotation {
      pretty_printed_name: "builtins.dict[builtins.str,Any]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "builtins.dict"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "_ASN1Object"
  fully_qualified_name: "ssl._ASN1Object"
  super_classes: "ssl._ASN1ObjectBase"
  methods {
    name: "__new__"
    fully_qualified_name: "ssl._ASN1Object.__new__"
    return_annotation {
      pretty_printed_name: "UnboundType[Self]"
      kind: UNBOUND
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[Tuple[builtins.int,builtins.str,builtins.str,builtins.str]]"
        kind: TYPE
        args {
          pretty_printed_name: "Tuple[builtins.int,builtins.str,builtins.str,builtins.str]"
          kind: TUPLE
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
      }
    }
    parameters {
      name: "oid"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "fromnid"
    fully_qualified_name: "ssl._ASN1Object.fromnid"
    return_annotation {
      pretty_printed_name: "UnboundType[Self]"
      kind: UNBOUND
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[Tuple[builtins.int,builtins.str,builtins.str,builtins.str]]"
        kind: TYPE
        args {
          pretty_printed_name: "Tuple[builtins.int,builtins.str,builtins.str,builtins.str]"
          kind: TUPLE
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
      }
    }
    parameters {
      name: "nid"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    has_decorators: true
    resolved_decorator_names: "classmethod"
    is_class_method: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "fromname"
    fully_qualified_name: "ssl._ASN1Object.fromname"
    return_annotation {
      pretty_printed_name: "UnboundType[Self]"
      kind: UNBOUND
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[Tuple[builtins.int,builtins.str,builtins.str,builtins.str]]"
        kind: TYPE
        args {
          pretty_printed_name: "Tuple[builtins.int,builtins.str,builtins.str,builtins.str]"
          kind: TUPLE
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    has_decorators: true
    resolved_decorator_names: "classmethod"
    is_class_method: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "Purpose"
  fully_qualified_name: "ssl.Purpose"
  super_classes: "ssl._ASN1Object"
  super_classes: "enum.Enum"
  is_enum: true
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "SERVER_AUTH"
    fully_qualified_name: "ssl.Purpose.SERVER_AUTH"
    type_annotation {
      pretty_printed_name: "Tuple[builtins.int,builtins.str,builtins.str,builtins.str]"
      kind: TUPLE
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "CLIENT_AUTH"
    fully_qualified_name: "ssl.Purpose.CLIENT_AUTH"
    type_annotation {
      pretty_printed_name: "Tuple[builtins.int,builtins.str,builtins.str,builtins.str]"
      kind: TUPLE
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "SSLSocket"
  fully_qualified_name: "ssl.SSLSocket"
  super_classes: "socket.socket"
  methods {
    name: "session_reused"
    fully_qualified_name: "ssl.SSLSocket.session_reused"
    return_annotation {
      pretty_printed_name: "Union[builtins.bool,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ssl.SSLSocket"
        fully_qualified_name: "ssl.SSLSocket"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__init__"
    fully_qualified_name: "ssl.SSLSocket.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ssl.SSLSocket"
        fully_qualified_name: "ssl.SSLSocket"
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "kwargs"
      kind: VAR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "connect"
    fully_qualified_name: "ssl.SSLSocket.connect"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ssl.SSLSocket"
        fully_qualified_name: "ssl.SSLSocket"
      }
    }
    parameters {
      name: "addr"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UnboundType[socket._Address]"
        kind: UNBOUND
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "connect_ex"
    fully_qualified_name: "ssl.SSLSocket.connect_ex"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ssl.SSLSocket"
        fully_qualified_name: "ssl.SSLSocket"
      }
    }
    parameters {
      name: "addr"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UnboundType[socket._Address]"
        kind: UNBOUND
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "recv"
    fully_qualified_name: "ssl.SSLSocket.recv"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ssl.SSLSocket"
        fully_qualified_name: "ssl.SSLSocket"
      }
    }
    parameters {
      name: "buflen"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    parameters {
      name: "flags"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "recv_into"
    fully_qualified_name: "ssl.SSLSocket.recv_into"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ssl.SSLSocket"
        fully_qualified_name: "ssl.SSLSocket"
      }
    }
    parameters {
      name: "buffer"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UnboundType[WriteableBuffer]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "nbytes"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "flags"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "recvfrom"
    fully_qualified_name: "ssl.SSLSocket.recvfrom"
    return_annotation {
      pretty_printed_name: "Tuple[builtins.bytes,UnboundType[socket._RetAddress]]"
      kind: TUPLE
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
      args {
        pretty_printed_name: "UnboundType[socket._RetAddress]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ssl.SSLSocket"
        fully_qualified_name: "ssl.SSLSocket"
      }
    }
    parameters {
      name: "buflen"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    parameters {
      name: "flags"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "recvfrom_into"
    fully_qualified_name: "ssl.SSLSocket.recvfrom_into"
    return_annotation {
      pretty_printed_name: "Tuple[builtins.int,UnboundType[socket._RetAddress]]"
      kind: TUPLE
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "UnboundType[socket._RetAddress]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ssl.SSLSocket"
        fully_qualified_name: "ssl.SSLSocket"
      }
    }
    parameters {
      name: "buffer"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UnboundType[WriteableBuffer]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "nbytes"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "flags"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "send"
    fully_qualified_name: "ssl.SSLSocket.send"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ssl.SSLSocket"
        fully_qualified_name: "ssl.SSLSocket"
      }
    }
    parameters {
      name: "data"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UnboundType[ReadableBuffer]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "flags"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "sendall"
    fully_qualified_name: "ssl.SSLSocket.sendall"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ssl.SSLSocket"
        fully_qualified_name: "ssl.SSLSocket"
      }
    }
    parameters {
      name: "data"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UnboundType[ReadableBuffer]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "flags"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "shutdown"
    fully_qualified_name: "ssl.SSLSocket.shutdown"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ssl.SSLSocket"
        fully_qualified_name: "ssl.SSLSocket"
      }
    }
    parameters {
      name: "how"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "read"
    fully_qualified_name: "ssl.SSLSocket.read"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ssl.SSLSocket"
        fully_qualified_name: "ssl.SSLSocket"
      }
    }
    parameters {
      name: "len"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    parameters {
      name: "buffer"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.bytearray,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bytearray"
          fully_qualified_name: "builtins.bytearray"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "write"
    fully_qualified_name: "ssl.SSLSocket.write"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ssl.SSLSocket"
        fully_qualified_name: "ssl.SSLSocket"
      }
    }
    parameters {
      name: "data"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UnboundType[ReadableBuffer]"
        kind: UNBOUND
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "do_handshake"
    fully_qualified_name: "ssl.SSLSocket.do_handshake"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ssl.SSLSocket"
        fully_qualified_name: "ssl.SSLSocket"
      }
    }
    parameters {
      name: "block"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "cipher"
    fully_qualified_name: "ssl.SSLSocket.cipher"
    return_annotation {
      pretty_printed_name: "Union[Tuple[builtins.str,builtins.str,builtins.int],None]"
      kind: UNION
      args {
        pretty_printed_name: "Tuple[builtins.str,builtins.str,builtins.int]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ssl.SSLSocket"
        fully_qualified_name: "ssl.SSLSocket"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "shared_ciphers"
    fully_qualified_name: "ssl.SSLSocket.shared_ciphers"
    return_annotation {
      pretty_printed_name: "Union[builtins.list[Tuple[builtins.str,builtins.str,builtins.int]],None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.list[Tuple[builtins.str,builtins.str,builtins.int]]"
        args {
          pretty_printed_name: "Tuple[builtins.str,builtins.str,builtins.int]"
          kind: TUPLE
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
        }
        fully_qualified_name: "builtins.list"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ssl.SSLSocket"
        fully_qualified_name: "ssl.SSLSocket"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "compression"
    fully_qualified_name: "ssl.SSLSocket.compression"
    return_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ssl.SSLSocket"
        fully_qualified_name: "ssl.SSLSocket"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "get_channel_binding"
    fully_qualified_name: "ssl.SSLSocket.get_channel_binding"
    return_annotation {
      pretty_printed_name: "Union[builtins.bytes,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ssl.SSLSocket"
        fully_qualified_name: "ssl.SSLSocket"
      }
    }
    parameters {
      name: "cb_type"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "selected_alpn_protocol"
    fully_qualified_name: "ssl.SSLSocket.selected_alpn_protocol"
    return_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ssl.SSLSocket"
        fully_qualified_name: "ssl.SSLSocket"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "selected_npn_protocol"
    fully_qualified_name: "ssl.SSLSocket.selected_npn_protocol"
    return_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ssl.SSLSocket"
        fully_qualified_name: "ssl.SSLSocket"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "accept"
    fully_qualified_name: "ssl.SSLSocket.accept"
    return_annotation {
      pretty_printed_name: "Tuple[ssl.SSLSocket,UnboundType[socket._RetAddress]]"
      kind: TUPLE
      args {
        pretty_printed_name: "ssl.SSLSocket"
        fully_qualified_name: "ssl.SSLSocket"
      }
      args {
        pretty_printed_name: "UnboundType[socket._RetAddress]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ssl.SSLSocket"
        fully_qualified_name: "ssl.SSLSocket"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "unwrap"
    fully_qualified_name: "ssl.SSLSocket.unwrap"
    return_annotation {
      pretty_printed_name: "socket.socket"
      fully_qualified_name: "socket.socket"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ssl.SSLSocket"
        fully_qualified_name: "ssl.SSLSocket"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "version"
    fully_qualified_name: "ssl.SSLSocket.version"
    return_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ssl.SSLSocket"
        fully_qualified_name: "ssl.SSLSocket"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "pending"
    fully_qualified_name: "ssl.SSLSocket.pending"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ssl.SSLSocket"
        fully_qualified_name: "ssl.SSLSocket"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "verify_client_post_handshake"
    fully_qualified_name: "ssl.SSLSocket.verify_client_post_handshake"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ssl.SSLSocket"
        fully_qualified_name: "ssl.SSLSocket"
      }
    }
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "sendto"
    fullname: "ssl.SSLSocket.sendto"
    definitions {
      name: "sendto"
      fully_qualified_name: "ssl.SSLSocket.sendto"
      return_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "ssl.SSLSocket"
          fully_qualified_name: "ssl.SSLSocket"
        }
      }
      parameters {
        name: "data"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "UnboundType[ReadableBuffer]"
          kind: UNBOUND
        }
      }
      parameters {
        name: "flags_or_addr"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "UnboundType[socket._Address]"
          kind: UNBOUND
        }
      }
      parameters {
        name: "addr"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "None"
          kind: NONE
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "sendto"
      fully_qualified_name: "ssl.SSLSocket.sendto"
      return_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "ssl.SSLSocket"
          fully_qualified_name: "ssl.SSLSocket"
        }
      }
      parameters {
        name: "data"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "UnboundType[ReadableBuffer]"
          kind: UNBOUND
        }
      }
      parameters {
        name: "flags_or_addr"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
      parameters {
        name: "addr"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "UnboundType[socket._Address]"
          kind: UNBOUND
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "getpeercert"
    fullname: "ssl.SSLSocket.getpeercert"
    definitions {
      name: "getpeercert"
      fully_qualified_name: "ssl.SSLSocket.getpeercert"
      return_annotation {
        pretty_printed_name: "Union[UnboundType[_PeerCertRetDictType],None]"
        kind: UNION
        args {
          pretty_printed_name: "UnboundType[_PeerCertRetDictType]"
          kind: UNBOUND
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "ssl.SSLSocket"
          fully_qualified_name: "ssl.SSLSocket"
        }
      }
      parameters {
        name: "binary_form"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Literal[builtins.bool]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.bool"
            fully_qualified_name: "builtins.bool"
          }
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "getpeercert"
      fully_qualified_name: "ssl.SSLSocket.getpeercert"
      return_annotation {
        pretty_printed_name: "Union[builtins.bytes,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "ssl.SSLSocket"
          fully_qualified_name: "ssl.SSLSocket"
        }
      }
      parameters {
        name: "binary_form"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Literal[builtins.bool]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.bool"
            fully_qualified_name: "builtins.bool"
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "getpeercert"
      fully_qualified_name: "ssl.SSLSocket.getpeercert"
      return_annotation {
        pretty_printed_name: "UnboundType[_PeerCertRetType]"
        kind: UNBOUND
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "ssl.SSLSocket"
          fully_qualified_name: "ssl.SSLSocket"
        }
      }
      parameters {
        name: "binary_form"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "context"
    fully_qualified_name: "ssl.SSLSocket.context"
    type_annotation {
      pretty_printed_name: "ssl.SSLContext"
      fully_qualified_name: "ssl.SSLContext"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "server_side"
    fully_qualified_name: "ssl.SSLSocket.server_side"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "server_hostname"
    fully_qualified_name: "ssl.SSLSocket.server_hostname"
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "session"
    fully_qualified_name: "ssl.SSLSocket.session"
    type_annotation {
      pretty_printed_name: "Union[ssl.SSLSession,None]"
      kind: UNION
      args {
        pretty_printed_name: "ssl.SSLSession"
        fully_qualified_name: "ssl.SSLSession"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "TLSVersion"
  fully_qualified_name: "ssl.TLSVersion"
  super_classes: "enum.IntEnum"
  is_enum: true
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "MINIMUM_SUPPORTED"
    fully_qualified_name: "ssl.TLSVersion.MINIMUM_SUPPORTED"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "MAXIMUM_SUPPORTED"
    fully_qualified_name: "ssl.TLSVersion.MAXIMUM_SUPPORTED"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "SSLv3"
    fully_qualified_name: "ssl.TLSVersion.SSLv3"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "TLSv1"
    fully_qualified_name: "ssl.TLSVersion.TLSv1"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "TLSv1_1"
    fully_qualified_name: "ssl.TLSVersion.TLSv1_1"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "TLSv1_2"
    fully_qualified_name: "ssl.TLSVersion.TLSv1_2"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "TLSv1_3"
    fully_qualified_name: "ssl.TLSVersion.TLSv1_3"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "SSLContext"
  fully_qualified_name: "ssl.SSLContext"
  super_classes: "builtins.object"
  methods {
    name: "protocol"
    fully_qualified_name: "ssl.SSLContext.protocol"
    return_annotation {
      pretty_printed_name: "ssl._SSLMethod"
      fully_qualified_name: "ssl._SSLMethod"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ssl.SSLContext"
        fully_qualified_name: "ssl.SSLContext"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__new__"
    fully_qualified_name: "ssl.SSLContext.__new__"
    return_annotation {
      pretty_printed_name: "UnboundType[Self]"
      kind: UNBOUND
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[ssl.SSLContext]"
        kind: TYPE
        args {
          pretty_printed_name: "ssl.SSLContext"
          fully_qualified_name: "ssl.SSLContext"
        }
      }
    }
    parameters {
      name: "protocol"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "kwargs"
      kind: VAR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
  }
  methods {
    name: "__new__"
    fully_qualified_name: "ssl.SSLContext.__new__"
    return_annotation {
      pretty_printed_name: "UnboundType[Self]"
      kind: UNBOUND
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[ssl.SSLContext]"
        kind: TYPE
        args {
          pretty_printed_name: "ssl.SSLContext"
          fully_qualified_name: "ssl.SSLContext"
        }
      }
    }
    parameters {
      name: "protocol"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "kwargs"
      kind: VAR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "310"
  }
  methods {
    name: "cert_store_stats"
    fully_qualified_name: "ssl.SSLContext.cert_store_stats"
    return_annotation {
      pretty_printed_name: "builtins.dict[builtins.str,builtins.int]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      fully_qualified_name: "builtins.dict"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ssl.SSLContext"
        fully_qualified_name: "ssl.SSLContext"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "load_cert_chain"
    fully_qualified_name: "ssl.SSLContext.load_cert_chain"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ssl.SSLContext"
        fully_qualified_name: "ssl.SSLContext"
      }
    }
    parameters {
      name: "certfile"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UnboundType[StrOrBytesPath]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "keyfile"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[UnboundType[StrOrBytesPath],None]"
        kind: UNION
        args {
          pretty_printed_name: "UnboundType[StrOrBytesPath]"
          kind: UNBOUND
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "password"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[UnboundType[_PasswordType],None]"
        kind: UNION
        args {
          pretty_printed_name: "UnboundType[_PasswordType]"
          kind: UNBOUND
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "load_default_certs"
    fully_qualified_name: "ssl.SSLContext.load_default_certs"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ssl.SSLContext"
        fully_qualified_name: "ssl.SSLContext"
      }
    }
    parameters {
      name: "purpose"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Tuple[builtins.int,builtins.str,builtins.str,builtins.str]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "load_verify_locations"
    fully_qualified_name: "ssl.SSLContext.load_verify_locations"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ssl.SSLContext"
        fully_qualified_name: "ssl.SSLContext"
      }
    }
    parameters {
      name: "cafile"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[UnboundType[StrOrBytesPath],None]"
        kind: UNION
        args {
          pretty_printed_name: "UnboundType[StrOrBytesPath]"
          kind: UNBOUND
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "capath"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[UnboundType[StrOrBytesPath],None]"
        kind: UNION
        args {
          pretty_printed_name: "UnboundType[StrOrBytesPath]"
          kind: UNBOUND
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "cadata"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,UnboundType[ReadableBuffer],None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "UnboundType[ReadableBuffer]"
          kind: UNBOUND
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "get_ciphers"
    fully_qualified_name: "ssl.SSLContext.get_ciphers"
    return_annotation {
      pretty_printed_name: "builtins.list[TypedDict]"
      args {
        pretty_printed_name: "TypedDict"
        kind: TYPED_DICT
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ssl.SSLContext"
        fully_qualified_name: "ssl.SSLContext"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "set_default_verify_paths"
    fully_qualified_name: "ssl.SSLContext.set_default_verify_paths"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ssl.SSLContext"
        fully_qualified_name: "ssl.SSLContext"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "set_ciphers"
    fully_qualified_name: "ssl.SSLContext.set_ciphers"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ssl.SSLContext"
        fully_qualified_name: "ssl.SSLContext"
      }
    }
    parameters {
      name: "__cipherlist"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "set_alpn_protocols"
    fully_qualified_name: "ssl.SSLContext.set_alpn_protocols"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ssl.SSLContext"
        fully_qualified_name: "ssl.SSLContext"
      }
    }
    parameters {
      name: "alpn_protocols"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "set_npn_protocols"
    fully_qualified_name: "ssl.SSLContext.set_npn_protocols"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ssl.SSLContext"
        fully_qualified_name: "ssl.SSLContext"
      }
    }
    parameters {
      name: "npn_protocols"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "set_servername_callback"
    fully_qualified_name: "ssl.SSLContext.set_servername_callback"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ssl.SSLContext"
        fully_qualified_name: "ssl.SSLContext"
      }
    }
    parameters {
      name: "server_name_callback"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[UnboundType[_SrvnmeCbType],None]"
        kind: UNION
        args {
          pretty_printed_name: "UnboundType[_SrvnmeCbType]"
          kind: UNBOUND
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "load_dh_params"
    fully_qualified_name: "ssl.SSLContext.load_dh_params"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ssl.SSLContext"
        fully_qualified_name: "ssl.SSLContext"
      }
    }
    parameters {
      name: "__path"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "set_ecdh_curve"
    fully_qualified_name: "ssl.SSLContext.set_ecdh_curve"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ssl.SSLContext"
        fully_qualified_name: "ssl.SSLContext"
      }
    }
    parameters {
      name: "__name"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "wrap_socket"
    fully_qualified_name: "ssl.SSLContext.wrap_socket"
    return_annotation {
      pretty_printed_name: "ssl.SSLSocket"
      fully_qualified_name: "ssl.SSLSocket"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ssl.SSLContext"
        fully_qualified_name: "ssl.SSLContext"
      }
    }
    parameters {
      name: "sock"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "socket.socket"
        fully_qualified_name: "socket.socket"
      }
    }
    parameters {
      name: "server_side"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    parameters {
      name: "do_handshake_on_connect"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    parameters {
      name: "suppress_ragged_eofs"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    parameters {
      name: "server_hostname"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "session"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[ssl.SSLSession,None]"
        kind: UNION
        args {
          pretty_printed_name: "ssl.SSLSession"
          fully_qualified_name: "ssl.SSLSession"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "wrap_bio"
    fully_qualified_name: "ssl.SSLContext.wrap_bio"
    return_annotation {
      pretty_printed_name: "ssl.SSLObject"
      fully_qualified_name: "ssl.SSLObject"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ssl.SSLContext"
        fully_qualified_name: "ssl.SSLContext"
      }
    }
    parameters {
      name: "incoming"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ssl.MemoryBIO"
        fully_qualified_name: "ssl.MemoryBIO"
      }
    }
    parameters {
      name: "outgoing"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ssl.MemoryBIO"
        fully_qualified_name: "ssl.MemoryBIO"
      }
    }
    parameters {
      name: "server_side"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    parameters {
      name: "server_hostname"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "session"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[ssl.SSLSession,None]"
        kind: UNION
        args {
          pretty_printed_name: "ssl.SSLSession"
          fully_qualified_name: "ssl.SSLSession"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "session_stats"
    fully_qualified_name: "ssl.SSLContext.session_stats"
    return_annotation {
      pretty_printed_name: "builtins.dict[builtins.str,builtins.int]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      fully_qualified_name: "builtins.dict"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ssl.SSLContext"
        fully_qualified_name: "ssl.SSLContext"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "get_ca_certs"
    fullname: "ssl.SSLContext.get_ca_certs"
    definitions {
      name: "get_ca_certs"
      fully_qualified_name: "ssl.SSLContext.get_ca_certs"
      return_annotation {
        pretty_printed_name: "builtins.list[UnboundType[_PeerCertRetDictType]]"
        args {
          pretty_printed_name: "UnboundType[_PeerCertRetDictType]"
          kind: UNBOUND
        }
        fully_qualified_name: "builtins.list"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "ssl.SSLContext"
          fully_qualified_name: "ssl.SSLContext"
        }
      }
      parameters {
        name: "binary_form"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Literal[builtins.bool]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.bool"
            fully_qualified_name: "builtins.bool"
          }
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "get_ca_certs"
      fully_qualified_name: "ssl.SSLContext.get_ca_certs"
      return_annotation {
        pretty_printed_name: "builtins.list[builtins.bytes]"
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        fully_qualified_name: "builtins.list"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "ssl.SSLContext"
          fully_qualified_name: "ssl.SSLContext"
        }
      }
      parameters {
        name: "binary_form"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Literal[builtins.bool]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.bool"
            fully_qualified_name: "builtins.bool"
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "get_ca_certs"
      fully_qualified_name: "ssl.SSLContext.get_ca_certs"
      return_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "ssl.SSLContext"
          fully_qualified_name: "ssl.SSLContext"
        }
      }
      parameters {
        name: "binary_form"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "check_hostname"
    fully_qualified_name: "ssl.SSLContext.check_hostname"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "options"
    fully_qualified_name: "ssl.SSLContext.options"
    type_annotation {
      pretty_printed_name: "ssl.Options"
      fully_qualified_name: "ssl.Options"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "verify_flags"
    fully_qualified_name: "ssl.SSLContext.verify_flags"
    type_annotation {
      pretty_printed_name: "ssl.VerifyFlags"
      fully_qualified_name: "ssl.VerifyFlags"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "verify_mode"
    fully_qualified_name: "ssl.SSLContext.verify_mode"
    type_annotation {
      pretty_printed_name: "ssl.VerifyMode"
      fully_qualified_name: "ssl.VerifyMode"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "hostname_checks_common_name"
    fully_qualified_name: "ssl.SSLContext.hostname_checks_common_name"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "maximum_version"
    fully_qualified_name: "ssl.SSLContext.maximum_version"
    type_annotation {
      pretty_printed_name: "ssl.TLSVersion"
      fully_qualified_name: "ssl.TLSVersion"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "minimum_version"
    fully_qualified_name: "ssl.SSLContext.minimum_version"
    type_annotation {
      pretty_printed_name: "ssl.TLSVersion"
      fully_qualified_name: "ssl.TLSVersion"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "sni_callback"
    fully_qualified_name: "ssl.SSLContext.sni_callback"
    type_annotation {
      pretty_printed_name: "Union[CallableType[builtins.function],None]"
      kind: UNION
      args {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "sslobject_class"
    fully_qualified_name: "ssl.SSLContext.sslobject_class"
    type_annotation {
      pretty_printed_name: "builtins.type"
      fully_qualified_name: "builtins.type"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
  }
  attributes {
    name: "sslobject_class"
    fully_qualified_name: "ssl.SSLContext.sslobject_class"
    type_annotation {
      pretty_printed_name: "Type[ssl.SSLObject]"
      kind: TYPE
      args {
        pretty_printed_name: "ssl.SSLObject"
        fully_qualified_name: "ssl.SSLObject"
      }
    }
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "sslsocket_class"
    fully_qualified_name: "ssl.SSLContext.sslsocket_class"
    type_annotation {
      pretty_printed_name: "builtins.type"
      fully_qualified_name: "builtins.type"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
  }
  attributes {
    name: "sslsocket_class"
    fully_qualified_name: "ssl.SSLContext.sslsocket_class"
    type_annotation {
      pretty_printed_name: "Type[ssl.SSLSocket]"
      kind: TYPE
      args {
        pretty_printed_name: "ssl.SSLSocket"
        fully_qualified_name: "ssl.SSLSocket"
      }
    }
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "keylog_filename"
    fully_qualified_name: "ssl.SSLContext.keylog_filename"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "post_handshake_auth"
    fully_qualified_name: "ssl.SSLContext.post_handshake_auth"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "security_level"
    fully_qualified_name: "ssl.SSLContext.security_level"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "310"
  }
}
classes {
  name: "SSLObject"
  fully_qualified_name: "ssl.SSLObject"
  super_classes: "builtins.object"
  methods {
    name: "server_side"
    fully_qualified_name: "ssl.SSLObject.server_side"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ssl.SSLObject"
        fully_qualified_name: "ssl.SSLObject"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "server_hostname"
    fully_qualified_name: "ssl.SSLObject.server_hostname"
    return_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ssl.SSLObject"
        fully_qualified_name: "ssl.SSLObject"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "session_reused"
    fully_qualified_name: "ssl.SSLObject.session_reused"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ssl.SSLObject"
        fully_qualified_name: "ssl.SSLObject"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__init__"
    fully_qualified_name: "ssl.SSLObject.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ssl.SSLObject"
        fully_qualified_name: "ssl.SSLObject"
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "kwargs"
      kind: VAR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "read"
    fully_qualified_name: "ssl.SSLObject.read"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ssl.SSLObject"
        fully_qualified_name: "ssl.SSLObject"
      }
    }
    parameters {
      name: "len"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    parameters {
      name: "buffer"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.bytearray,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bytearray"
          fully_qualified_name: "builtins.bytearray"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "write"
    fully_qualified_name: "ssl.SSLObject.write"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ssl.SSLObject"
        fully_qualified_name: "ssl.SSLObject"
      }
    }
    parameters {
      name: "data"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UnboundType[ReadableBuffer]"
        kind: UNBOUND
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "selected_alpn_protocol"
    fully_qualified_name: "ssl.SSLObject.selected_alpn_protocol"
    return_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ssl.SSLObject"
        fully_qualified_name: "ssl.SSLObject"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "selected_npn_protocol"
    fully_qualified_name: "ssl.SSLObject.selected_npn_protocol"
    return_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ssl.SSLObject"
        fully_qualified_name: "ssl.SSLObject"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "cipher"
    fully_qualified_name: "ssl.SSLObject.cipher"
    return_annotation {
      pretty_printed_name: "Union[Tuple[builtins.str,builtins.str,builtins.int],None]"
      kind: UNION
      args {
        pretty_printed_name: "Tuple[builtins.str,builtins.str,builtins.int]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ssl.SSLObject"
        fully_qualified_name: "ssl.SSLObject"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "shared_ciphers"
    fully_qualified_name: "ssl.SSLObject.shared_ciphers"
    return_annotation {
      pretty_printed_name: "Union[builtins.list[Tuple[builtins.str,builtins.str,builtins.int]],None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.list[Tuple[builtins.str,builtins.str,builtins.int]]"
        args {
          pretty_printed_name: "Tuple[builtins.str,builtins.str,builtins.int]"
          kind: TUPLE
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
        }
        fully_qualified_name: "builtins.list"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ssl.SSLObject"
        fully_qualified_name: "ssl.SSLObject"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "compression"
    fully_qualified_name: "ssl.SSLObject.compression"
    return_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ssl.SSLObject"
        fully_qualified_name: "ssl.SSLObject"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "pending"
    fully_qualified_name: "ssl.SSLObject.pending"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ssl.SSLObject"
        fully_qualified_name: "ssl.SSLObject"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "do_handshake"
    fully_qualified_name: "ssl.SSLObject.do_handshake"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ssl.SSLObject"
        fully_qualified_name: "ssl.SSLObject"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "unwrap"
    fully_qualified_name: "ssl.SSLObject.unwrap"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ssl.SSLObject"
        fully_qualified_name: "ssl.SSLObject"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "version"
    fully_qualified_name: "ssl.SSLObject.version"
    return_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ssl.SSLObject"
        fully_qualified_name: "ssl.SSLObject"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "get_channel_binding"
    fully_qualified_name: "ssl.SSLObject.get_channel_binding"
    return_annotation {
      pretty_printed_name: "Union[builtins.bytes,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ssl.SSLObject"
        fully_qualified_name: "ssl.SSLObject"
      }
    }
    parameters {
      name: "cb_type"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "verify_client_post_handshake"
    fully_qualified_name: "ssl.SSLObject.verify_client_post_handshake"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ssl.SSLObject"
        fully_qualified_name: "ssl.SSLObject"
      }
    }
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "getpeercert"
    fullname: "ssl.SSLObject.getpeercert"
    definitions {
      name: "getpeercert"
      fully_qualified_name: "ssl.SSLObject.getpeercert"
      return_annotation {
        pretty_printed_name: "Union[UnboundType[_PeerCertRetDictType],None]"
        kind: UNION
        args {
          pretty_printed_name: "UnboundType[_PeerCertRetDictType]"
          kind: UNBOUND
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "ssl.SSLObject"
          fully_qualified_name: "ssl.SSLObject"
        }
      }
      parameters {
        name: "binary_form"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Literal[builtins.bool]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.bool"
            fully_qualified_name: "builtins.bool"
          }
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "getpeercert"
      fully_qualified_name: "ssl.SSLObject.getpeercert"
      return_annotation {
        pretty_printed_name: "Union[builtins.bytes,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "ssl.SSLObject"
          fully_qualified_name: "ssl.SSLObject"
        }
      }
      parameters {
        name: "binary_form"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Literal[builtins.bool]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.bool"
            fully_qualified_name: "builtins.bool"
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "getpeercert"
      fully_qualified_name: "ssl.SSLObject.getpeercert"
      return_annotation {
        pretty_printed_name: "UnboundType[_PeerCertRetType]"
        kind: UNBOUND
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "ssl.SSLObject"
          fully_qualified_name: "ssl.SSLObject"
        }
      }
      parameters {
        name: "binary_form"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "context"
    fully_qualified_name: "ssl.SSLObject.context"
    type_annotation {
      pretty_printed_name: "ssl.SSLContext"
      fully_qualified_name: "ssl.SSLContext"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "session"
    fully_qualified_name: "ssl.SSLObject.session"
    type_annotation {
      pretty_printed_name: "Union[ssl.SSLSession,None]"
      kind: UNION
      args {
        pretty_printed_name: "ssl.SSLSession"
        fully_qualified_name: "ssl.SSLSession"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "MemoryBIO"
  fully_qualified_name: "ssl.MemoryBIO"
  super_classes: "builtins.object"
  methods {
    name: "read"
    fully_qualified_name: "ssl.MemoryBIO.read"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ssl.MemoryBIO"
        fully_qualified_name: "ssl.MemoryBIO"
      }
    }
    parameters {
      name: "__size"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "write"
    fully_qualified_name: "ssl.MemoryBIO.write"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ssl.MemoryBIO"
        fully_qualified_name: "ssl.MemoryBIO"
      }
    }
    parameters {
      name: "__b"
      type_annotation {
        pretty_printed_name: "UnboundType[ReadableBuffer]"
        kind: UNBOUND
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "write_eof"
    fully_qualified_name: "ssl.MemoryBIO.write_eof"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ssl.MemoryBIO"
        fully_qualified_name: "ssl.MemoryBIO"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  has_decorators: true
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "pending"
    fully_qualified_name: "ssl.MemoryBIO.pending"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "eof"
    fully_qualified_name: "ssl.MemoryBIO.eof"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "SSLSession"
  fully_qualified_name: "ssl.SSLSession"
  super_classes: "builtins.object"
  methods {
    name: "has_ticket"
    fully_qualified_name: "ssl.SSLSession.has_ticket"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ssl.SSLSession"
        fully_qualified_name: "ssl.SSLSession"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "id"
    fully_qualified_name: "ssl.SSLSession.id"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ssl.SSLSession"
        fully_qualified_name: "ssl.SSLSession"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "ticket_lifetime_hint"
    fully_qualified_name: "ssl.SSLSession.ticket_lifetime_hint"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ssl.SSLSession"
        fully_qualified_name: "ssl.SSLSession"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "time"
    fully_qualified_name: "ssl.SSLSession.time"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ssl.SSLSession"
        fully_qualified_name: "ssl.SSLSession"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "timeout"
    fully_qualified_name: "ssl.SSLSession.timeout"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ssl.SSLSession"
        fully_qualified_name: "ssl.SSLSession"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  has_decorators: true
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "SSLErrorNumber"
  fully_qualified_name: "ssl.SSLErrorNumber"
  super_classes: "enum.IntEnum"
  is_enum: true
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "SSL_ERROR_EOF"
    fully_qualified_name: "ssl.SSLErrorNumber.SSL_ERROR_EOF"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "SSL_ERROR_INVALID_ERROR_CODE"
    fully_qualified_name: "ssl.SSLErrorNumber.SSL_ERROR_INVALID_ERROR_CODE"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "SSL_ERROR_SSL"
    fully_qualified_name: "ssl.SSLErrorNumber.SSL_ERROR_SSL"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "SSL_ERROR_SYSCALL"
    fully_qualified_name: "ssl.SSLErrorNumber.SSL_ERROR_SYSCALL"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "SSL_ERROR_WANT_CONNECT"
    fully_qualified_name: "ssl.SSLErrorNumber.SSL_ERROR_WANT_CONNECT"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "SSL_ERROR_WANT_READ"
    fully_qualified_name: "ssl.SSLErrorNumber.SSL_ERROR_WANT_READ"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "SSL_ERROR_WANT_WRITE"
    fully_qualified_name: "ssl.SSLErrorNumber.SSL_ERROR_WANT_WRITE"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "SSL_ERROR_WANT_X509_LOOKUP"
    fully_qualified_name: "ssl.SSLErrorNumber.SSL_ERROR_WANT_X509_LOOKUP"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "SSL_ERROR_ZERO_RETURN"
    fully_qualified_name: "ssl.SSLErrorNumber.SSL_ERROR_ZERO_RETURN"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
functions {
  name: "wrap_socket"
  fully_qualified_name: "ssl.wrap_socket"
  return_annotation {
    pretty_printed_name: "ssl.SSLSocket"
    fully_qualified_name: "ssl.SSLSocket"
  }
  parameters {
    name: "sock"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "socket.socket"
      fully_qualified_name: "socket.socket"
    }
  }
  parameters {
    name: "keyfile"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[UnboundType[StrOrBytesPath],None]"
      kind: UNION
      args {
        pretty_printed_name: "UnboundType[StrOrBytesPath]"
        kind: UNBOUND
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "certfile"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[UnboundType[StrOrBytesPath],None]"
      kind: UNION
      args {
        pretty_printed_name: "UnboundType[StrOrBytesPath]"
        kind: UNBOUND
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "server_side"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    has_default: true
  }
  parameters {
    name: "cert_reqs"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    has_default: true
  }
  parameters {
    name: "ssl_version"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    has_default: true
  }
  parameters {
    name: "ca_certs"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "do_handshake_on_connect"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    has_default: true
  }
  parameters {
    name: "suppress_ragged_eofs"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    has_default: true
  }
  parameters {
    name: "ciphers"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "create_default_context"
  fully_qualified_name: "ssl.create_default_context"
  return_annotation {
    pretty_printed_name: "ssl.SSLContext"
    fully_qualified_name: "ssl.SSLContext"
  }
  parameters {
    name: "purpose"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Tuple[builtins.int,builtins.str,builtins.str,builtins.str]"
      kind: TUPLE
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    has_default: true
  }
  parameters {
    name: "cafile"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[UnboundType[StrOrBytesPath],None]"
      kind: UNION
      args {
        pretty_printed_name: "UnboundType[StrOrBytesPath]"
        kind: UNBOUND
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "capath"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[UnboundType[StrOrBytesPath],None]"
      kind: UNION
      args {
        pretty_printed_name: "UnboundType[StrOrBytesPath]"
        kind: UNBOUND
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "cadata"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[builtins.str,UnboundType[ReadableBuffer],None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "UnboundType[ReadableBuffer]"
        kind: UNBOUND
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "_create_unverified_context"
  fully_qualified_name: "ssl._create_unverified_context"
  return_annotation {
    pretty_printed_name: "ssl.SSLContext"
    fully_qualified_name: "ssl.SSLContext"
  }
  parameters {
    name: "protocol"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    has_default: true
  }
  parameters {
    name: "cert_reqs"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    has_default: true
  }
  parameters {
    name: "check_hostname"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    has_default: true
  }
  parameters {
    name: "purpose"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Tuple[builtins.int,builtins.str,builtins.str,builtins.str]"
      kind: TUPLE
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    has_default: true
  }
  parameters {
    name: "certfile"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[UnboundType[StrOrBytesPath],None]"
      kind: UNION
      args {
        pretty_printed_name: "UnboundType[StrOrBytesPath]"
        kind: UNBOUND
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "keyfile"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[UnboundType[StrOrBytesPath],None]"
      kind: UNION
      args {
        pretty_printed_name: "UnboundType[StrOrBytesPath]"
        kind: UNBOUND
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "cafile"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[UnboundType[StrOrBytesPath],None]"
      kind: UNION
      args {
        pretty_printed_name: "UnboundType[StrOrBytesPath]"
        kind: UNBOUND
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "capath"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[UnboundType[StrOrBytesPath],None]"
      kind: UNION
      args {
        pretty_printed_name: "UnboundType[StrOrBytesPath]"
        kind: UNBOUND
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "cadata"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[builtins.str,UnboundType[ReadableBuffer],None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "UnboundType[ReadableBuffer]"
        kind: UNBOUND
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
}
functions {
  name: "_create_unverified_context"
  fully_qualified_name: "ssl._create_unverified_context"
  return_annotation {
    pretty_printed_name: "ssl.SSLContext"
    fully_qualified_name: "ssl.SSLContext"
  }
  parameters {
    name: "protocol"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.int,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "cert_reqs"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    has_default: true
  }
  parameters {
    name: "check_hostname"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    has_default: true
  }
  parameters {
    name: "purpose"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Tuple[builtins.int,builtins.str,builtins.str,builtins.str]"
      kind: TUPLE
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    has_default: true
  }
  parameters {
    name: "certfile"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[UnboundType[StrOrBytesPath],None]"
      kind: UNION
      args {
        pretty_printed_name: "UnboundType[StrOrBytesPath]"
        kind: UNBOUND
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "keyfile"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[UnboundType[StrOrBytesPath],None]"
      kind: UNION
      args {
        pretty_printed_name: "UnboundType[StrOrBytesPath]"
        kind: UNBOUND
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "cafile"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[UnboundType[StrOrBytesPath],None]"
      kind: UNION
      args {
        pretty_printed_name: "UnboundType[StrOrBytesPath]"
        kind: UNBOUND
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "capath"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[UnboundType[StrOrBytesPath],None]"
      kind: UNION
      args {
        pretty_printed_name: "UnboundType[StrOrBytesPath]"
        kind: UNBOUND
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "cadata"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[builtins.str,UnboundType[ReadableBuffer],None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "UnboundType[ReadableBuffer]"
        kind: UNBOUND
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  valid_for: "310"
}
functions {
  name: "RAND_bytes"
  fully_qualified_name: "ssl.RAND_bytes"
  return_annotation {
    pretty_printed_name: "builtins.bytes"
    fully_qualified_name: "builtins.bytes"
  }
  parameters {
    name: "__n"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "RAND_pseudo_bytes"
  fully_qualified_name: "ssl.RAND_pseudo_bytes"
  return_annotation {
    pretty_printed_name: "Tuple[builtins.bytes,builtins.bool]"
    kind: TUPLE
    args {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    args {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
  parameters {
    name: "__n"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "RAND_status"
  fully_qualified_name: "ssl.RAND_status"
  return_annotation {
    pretty_printed_name: "builtins.bool"
    fully_qualified_name: "builtins.bool"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "RAND_egd"
  fully_qualified_name: "ssl.RAND_egd"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "path"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "RAND_add"
  fully_qualified_name: "ssl.RAND_add"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "__string"
    type_annotation {
      pretty_printed_name: "Union[builtins.str,UnboundType[ReadableBuffer]]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "UnboundType[ReadableBuffer]"
        kind: UNBOUND
      }
    }
  }
  parameters {
    name: "__entropy"
    type_annotation {
      pretty_printed_name: "builtins.float"
      fully_qualified_name: "builtins.float"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "match_hostname"
  fully_qualified_name: "ssl.match_hostname"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "cert"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "UnboundType[_PeerCertRetDictType]"
      kind: UNBOUND
    }
  }
  parameters {
    name: "hostname"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "cert_time_to_seconds"
  fully_qualified_name: "ssl.cert_time_to_seconds"
  return_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
  parameters {
    name: "cert_time"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "get_server_certificate"
  fully_qualified_name: "ssl.get_server_certificate"
  return_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
  parameters {
    name: "addr"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Tuple[builtins.str,builtins.int]"
      kind: TUPLE
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
  }
  parameters {
    name: "ssl_version"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    has_default: true
  }
  parameters {
    name: "ca_certs"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
}
functions {
  name: "get_server_certificate"
  fully_qualified_name: "ssl.get_server_certificate"
  return_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
  parameters {
    name: "addr"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Tuple[builtins.str,builtins.int]"
      kind: TUPLE
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
  }
  parameters {
    name: "ssl_version"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    has_default: true
  }
  parameters {
    name: "ca_certs"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "timeout"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.float"
      fully_qualified_name: "builtins.float"
    }
    has_default: true
  }
  valid_for: "310"
}
functions {
  name: "DER_cert_to_PEM_cert"
  fully_qualified_name: "ssl.DER_cert_to_PEM_cert"
  return_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
  parameters {
    name: "der_cert_bytes"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "UnboundType[ReadableBuffer]"
      kind: UNBOUND
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "PEM_cert_to_DER_cert"
  fully_qualified_name: "ssl.PEM_cert_to_DER_cert"
  return_annotation {
    pretty_printed_name: "builtins.bytes"
    fully_qualified_name: "builtins.bytes"
  }
  parameters {
    name: "pem_cert_string"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "get_default_verify_paths"
  fully_qualified_name: "ssl.get_default_verify_paths"
  return_annotation {
    pretty_printed_name: "Tuple[builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str]"
    kind: TUPLE
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "get_protocol_name"
  fully_qualified_name: "ssl.get_protocol_name"
  return_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
  parameters {
    name: "protocol_code"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "_PCTRTT"
  fully_qualified_name: "ssl._PCTRTT"
  type_annotation {
    pretty_printed_name: "UnboundType[TypeAlias]"
    kind: UNBOUND
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "_PCTRTTT"
  fully_qualified_name: "ssl._PCTRTTT"
  type_annotation {
    pretty_printed_name: "UnboundType[TypeAlias]"
    kind: UNBOUND
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "_PeerCertRetDictType"
  fully_qualified_name: "ssl._PeerCertRetDictType"
  type_annotation {
    pretty_printed_name: "UnboundType[TypeAlias]"
    kind: UNBOUND
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "_PeerCertRetType"
  fully_qualified_name: "ssl._PeerCertRetType"
  type_annotation {
    pretty_printed_name: "UnboundType[TypeAlias]"
    kind: UNBOUND
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "_EnumRetType"
  fully_qualified_name: "ssl._EnumRetType"
  type_annotation {
    pretty_printed_name: "UnboundType[TypeAlias]"
    kind: UNBOUND
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "_PasswordType"
  fully_qualified_name: "ssl._PasswordType"
  type_annotation {
    pretty_printed_name: "UnboundType[TypeAlias]"
    kind: UNBOUND
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "_SrvnmeCbType"
  fully_qualified_name: "ssl._SrvnmeCbType"
  type_annotation {
    pretty_printed_name: "UnboundType[TypeAlias]"
    kind: UNBOUND
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "_create_default_https_context"
  fully_qualified_name: "ssl._create_default_https_context"
  type_annotation {
    pretty_printed_name: "CallableType[builtins.function]"
    kind: CALLABLE
    args {
      pretty_printed_name: "builtins.function"
      fully_qualified_name: "builtins.function"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "CERT_NONE"
  fully_qualified_name: "ssl.CERT_NONE"
  type_annotation {
    pretty_printed_name: "ssl.VerifyMode"
    fully_qualified_name: "ssl.VerifyMode"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "CERT_OPTIONAL"
  fully_qualified_name: "ssl.CERT_OPTIONAL"
  type_annotation {
    pretty_printed_name: "ssl.VerifyMode"
    fully_qualified_name: "ssl.VerifyMode"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "CERT_REQUIRED"
  fully_qualified_name: "ssl.CERT_REQUIRED"
  type_annotation {
    pretty_printed_name: "ssl.VerifyMode"
    fully_qualified_name: "ssl.VerifyMode"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "VERIFY_DEFAULT"
  fully_qualified_name: "ssl.VERIFY_DEFAULT"
  type_annotation {
    pretty_printed_name: "ssl.VerifyFlags"
    fully_qualified_name: "ssl.VerifyFlags"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "VERIFY_CRL_CHECK_LEAF"
  fully_qualified_name: "ssl.VERIFY_CRL_CHECK_LEAF"
  type_annotation {
    pretty_printed_name: "ssl.VerifyFlags"
    fully_qualified_name: "ssl.VerifyFlags"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "VERIFY_CRL_CHECK_CHAIN"
  fully_qualified_name: "ssl.VERIFY_CRL_CHECK_CHAIN"
  type_annotation {
    pretty_printed_name: "ssl.VerifyFlags"
    fully_qualified_name: "ssl.VerifyFlags"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "VERIFY_X509_STRICT"
  fully_qualified_name: "ssl.VERIFY_X509_STRICT"
  type_annotation {
    pretty_printed_name: "ssl.VerifyFlags"
    fully_qualified_name: "ssl.VerifyFlags"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "VERIFY_X509_TRUSTED_FIRST"
  fully_qualified_name: "ssl.VERIFY_X509_TRUSTED_FIRST"
  type_annotation {
    pretty_printed_name: "ssl.VerifyFlags"
    fully_qualified_name: "ssl.VerifyFlags"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "PROTOCOL_SSLv23"
  fully_qualified_name: "ssl.PROTOCOL_SSLv23"
  type_annotation {
    pretty_printed_name: "ssl._SSLMethod"
    fully_qualified_name: "ssl._SSLMethod"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "PROTOCOL_SSLv2"
  fully_qualified_name: "ssl.PROTOCOL_SSLv2"
  type_annotation {
    pretty_printed_name: "ssl._SSLMethod"
    fully_qualified_name: "ssl._SSLMethod"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "PROTOCOL_SSLv3"
  fully_qualified_name: "ssl.PROTOCOL_SSLv3"
  type_annotation {
    pretty_printed_name: "ssl._SSLMethod"
    fully_qualified_name: "ssl._SSLMethod"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "PROTOCOL_TLSv1"
  fully_qualified_name: "ssl.PROTOCOL_TLSv1"
  type_annotation {
    pretty_printed_name: "ssl._SSLMethod"
    fully_qualified_name: "ssl._SSLMethod"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "PROTOCOL_TLSv1_1"
  fully_qualified_name: "ssl.PROTOCOL_TLSv1_1"
  type_annotation {
    pretty_printed_name: "ssl._SSLMethod"
    fully_qualified_name: "ssl._SSLMethod"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "PROTOCOL_TLSv1_2"
  fully_qualified_name: "ssl.PROTOCOL_TLSv1_2"
  type_annotation {
    pretty_printed_name: "ssl._SSLMethod"
    fully_qualified_name: "ssl._SSLMethod"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "PROTOCOL_TLS"
  fully_qualified_name: "ssl.PROTOCOL_TLS"
  type_annotation {
    pretty_printed_name: "ssl._SSLMethod"
    fully_qualified_name: "ssl._SSLMethod"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "PROTOCOL_TLS_CLIENT"
  fully_qualified_name: "ssl.PROTOCOL_TLS_CLIENT"
  type_annotation {
    pretty_printed_name: "ssl._SSLMethod"
    fully_qualified_name: "ssl._SSLMethod"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "PROTOCOL_TLS_SERVER"
  fully_qualified_name: "ssl.PROTOCOL_TLS_SERVER"
  type_annotation {
    pretty_printed_name: "ssl._SSLMethod"
    fully_qualified_name: "ssl._SSLMethod"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "OP_ALL"
  fully_qualified_name: "ssl.OP_ALL"
  type_annotation {
    pretty_printed_name: "ssl.Options"
    fully_qualified_name: "ssl.Options"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "OP_NO_SSLv2"
  fully_qualified_name: "ssl.OP_NO_SSLv2"
  type_annotation {
    pretty_printed_name: "ssl.Options"
    fully_qualified_name: "ssl.Options"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "OP_NO_SSLv3"
  fully_qualified_name: "ssl.OP_NO_SSLv3"
  type_annotation {
    pretty_printed_name: "ssl.Options"
    fully_qualified_name: "ssl.Options"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "OP_NO_TLSv1"
  fully_qualified_name: "ssl.OP_NO_TLSv1"
  type_annotation {
    pretty_printed_name: "ssl.Options"
    fully_qualified_name: "ssl.Options"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "OP_NO_TLSv1_1"
  fully_qualified_name: "ssl.OP_NO_TLSv1_1"
  type_annotation {
    pretty_printed_name: "ssl.Options"
    fully_qualified_name: "ssl.Options"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "OP_NO_TLSv1_2"
  fully_qualified_name: "ssl.OP_NO_TLSv1_2"
  type_annotation {
    pretty_printed_name: "ssl.Options"
    fully_qualified_name: "ssl.Options"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "OP_NO_TLSv1_3"
  fully_qualified_name: "ssl.OP_NO_TLSv1_3"
  type_annotation {
    pretty_printed_name: "ssl.Options"
    fully_qualified_name: "ssl.Options"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "OP_CIPHER_SERVER_PREFERENCE"
  fully_qualified_name: "ssl.OP_CIPHER_SERVER_PREFERENCE"
  type_annotation {
    pretty_printed_name: "ssl.Options"
    fully_qualified_name: "ssl.Options"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "OP_SINGLE_DH_USE"
  fully_qualified_name: "ssl.OP_SINGLE_DH_USE"
  type_annotation {
    pretty_printed_name: "ssl.Options"
    fully_qualified_name: "ssl.Options"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "OP_SINGLE_ECDH_USE"
  fully_qualified_name: "ssl.OP_SINGLE_ECDH_USE"
  type_annotation {
    pretty_printed_name: "ssl.Options"
    fully_qualified_name: "ssl.Options"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "OP_NO_COMPRESSION"
  fully_qualified_name: "ssl.OP_NO_COMPRESSION"
  type_annotation {
    pretty_printed_name: "ssl.Options"
    fully_qualified_name: "ssl.Options"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "OP_NO_TICKET"
  fully_qualified_name: "ssl.OP_NO_TICKET"
  type_annotation {
    pretty_printed_name: "ssl.Options"
    fully_qualified_name: "ssl.Options"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "OP_NO_RENEGOTIATION"
  fully_qualified_name: "ssl.OP_NO_RENEGOTIATION"
  type_annotation {
    pretty_printed_name: "ssl.Options"
    fully_qualified_name: "ssl.Options"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "HAS_NEVER_CHECK_COMMON_NAME"
  fully_qualified_name: "ssl.HAS_NEVER_CHECK_COMMON_NAME"
  type_annotation {
    pretty_printed_name: "builtins.bool"
    fully_qualified_name: "builtins.bool"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "HAS_SSLv2"
  fully_qualified_name: "ssl.HAS_SSLv2"
  type_annotation {
    pretty_printed_name: "builtins.bool"
    fully_qualified_name: "builtins.bool"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "HAS_SSLv3"
  fully_qualified_name: "ssl.HAS_SSLv3"
  type_annotation {
    pretty_printed_name: "builtins.bool"
    fully_qualified_name: "builtins.bool"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "HAS_TLSv1"
  fully_qualified_name: "ssl.HAS_TLSv1"
  type_annotation {
    pretty_printed_name: "builtins.bool"
    fully_qualified_name: "builtins.bool"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "HAS_TLSv1_1"
  fully_qualified_name: "ssl.HAS_TLSv1_1"
  type_annotation {
    pretty_printed_name: "builtins.bool"
    fully_qualified_name: "builtins.bool"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "HAS_TLSv1_2"
  fully_qualified_name: "ssl.HAS_TLSv1_2"
  type_annotation {
    pretty_printed_name: "builtins.bool"
    fully_qualified_name: "builtins.bool"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "HAS_TLSv1_3"
  fully_qualified_name: "ssl.HAS_TLSv1_3"
  type_annotation {
    pretty_printed_name: "builtins.bool"
    fully_qualified_name: "builtins.bool"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "HAS_ALPN"
  fully_qualified_name: "ssl.HAS_ALPN"
  type_annotation {
    pretty_printed_name: "builtins.bool"
    fully_qualified_name: "builtins.bool"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "HAS_ECDH"
  fully_qualified_name: "ssl.HAS_ECDH"
  type_annotation {
    pretty_printed_name: "builtins.bool"
    fully_qualified_name: "builtins.bool"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "HAS_SNI"
  fully_qualified_name: "ssl.HAS_SNI"
  type_annotation {
    pretty_printed_name: "builtins.bool"
    fully_qualified_name: "builtins.bool"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "HAS_NPN"
  fully_qualified_name: "ssl.HAS_NPN"
  type_annotation {
    pretty_printed_name: "builtins.bool"
    fully_qualified_name: "builtins.bool"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "CHANNEL_BINDING_TYPES"
  fully_qualified_name: "ssl.CHANNEL_BINDING_TYPES"
  type_annotation {
    pretty_printed_name: "builtins.list[builtins.str]"
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    fully_qualified_name: "builtins.list"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "OPENSSL_VERSION"
  fully_qualified_name: "ssl.OPENSSL_VERSION"
  type_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "OPENSSL_VERSION_INFO"
  fully_qualified_name: "ssl.OPENSSL_VERSION_INFO"
  type_annotation {
    pretty_printed_name: "Tuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]"
    kind: TUPLE
    args {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    args {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    args {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    args {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    args {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "OPENSSL_VERSION_NUMBER"
  fully_qualified_name: "ssl.OPENSSL_VERSION_NUMBER"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "ALERT_DESCRIPTION_HANDSHAKE_FAILURE"
  fully_qualified_name: "ssl.ALERT_DESCRIPTION_HANDSHAKE_FAILURE"
  type_annotation {
    pretty_printed_name: "ssl.AlertDescription"
    fully_qualified_name: "ssl.AlertDescription"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "ALERT_DESCRIPTION_INTERNAL_ERROR"
  fully_qualified_name: "ssl.ALERT_DESCRIPTION_INTERNAL_ERROR"
  type_annotation {
    pretty_printed_name: "ssl.AlertDescription"
    fully_qualified_name: "ssl.AlertDescription"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "ALERT_DESCRIPTION_ACCESS_DENIED"
  fully_qualified_name: "ssl.ALERT_DESCRIPTION_ACCESS_DENIED"
  type_annotation {
    pretty_printed_name: "ssl.AlertDescription"
    fully_qualified_name: "ssl.AlertDescription"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "ALERT_DESCRIPTION_BAD_CERTIFICATE"
  fully_qualified_name: "ssl.ALERT_DESCRIPTION_BAD_CERTIFICATE"
  type_annotation {
    pretty_printed_name: "ssl.AlertDescription"
    fully_qualified_name: "ssl.AlertDescription"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "ALERT_DESCRIPTION_BAD_CERTIFICATE_HASH_VALUE"
  fully_qualified_name: "ssl.ALERT_DESCRIPTION_BAD_CERTIFICATE_HASH_VALUE"
  type_annotation {
    pretty_printed_name: "ssl.AlertDescription"
    fully_qualified_name: "ssl.AlertDescription"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "ALERT_DESCRIPTION_BAD_CERTIFICATE_STATUS_RESPONSE"
  fully_qualified_name: "ssl.ALERT_DESCRIPTION_BAD_CERTIFICATE_STATUS_RESPONSE"
  type_annotation {
    pretty_printed_name: "ssl.AlertDescription"
    fully_qualified_name: "ssl.AlertDescription"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "ALERT_DESCRIPTION_BAD_RECORD_MAC"
  fully_qualified_name: "ssl.ALERT_DESCRIPTION_BAD_RECORD_MAC"
  type_annotation {
    pretty_printed_name: "ssl.AlertDescription"
    fully_qualified_name: "ssl.AlertDescription"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "ALERT_DESCRIPTION_CERTIFICATE_EXPIRED"
  fully_qualified_name: "ssl.ALERT_DESCRIPTION_CERTIFICATE_EXPIRED"
  type_annotation {
    pretty_printed_name: "ssl.AlertDescription"
    fully_qualified_name: "ssl.AlertDescription"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "ALERT_DESCRIPTION_CERTIFICATE_REVOKED"
  fully_qualified_name: "ssl.ALERT_DESCRIPTION_CERTIFICATE_REVOKED"
  type_annotation {
    pretty_printed_name: "ssl.AlertDescription"
    fully_qualified_name: "ssl.AlertDescription"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "ALERT_DESCRIPTION_CERTIFICATE_UNKNOWN"
  fully_qualified_name: "ssl.ALERT_DESCRIPTION_CERTIFICATE_UNKNOWN"
  type_annotation {
    pretty_printed_name: "ssl.AlertDescription"
    fully_qualified_name: "ssl.AlertDescription"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "ALERT_DESCRIPTION_CERTIFICATE_UNOBTAINABLE"
  fully_qualified_name: "ssl.ALERT_DESCRIPTION_CERTIFICATE_UNOBTAINABLE"
  type_annotation {
    pretty_printed_name: "ssl.AlertDescription"
    fully_qualified_name: "ssl.AlertDescription"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "ALERT_DESCRIPTION_CLOSE_NOTIFY"
  fully_qualified_name: "ssl.ALERT_DESCRIPTION_CLOSE_NOTIFY"
  type_annotation {
    pretty_printed_name: "ssl.AlertDescription"
    fully_qualified_name: "ssl.AlertDescription"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "ALERT_DESCRIPTION_DECODE_ERROR"
  fully_qualified_name: "ssl.ALERT_DESCRIPTION_DECODE_ERROR"
  type_annotation {
    pretty_printed_name: "ssl.AlertDescription"
    fully_qualified_name: "ssl.AlertDescription"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "ALERT_DESCRIPTION_DECOMPRESSION_FAILURE"
  fully_qualified_name: "ssl.ALERT_DESCRIPTION_DECOMPRESSION_FAILURE"
  type_annotation {
    pretty_printed_name: "ssl.AlertDescription"
    fully_qualified_name: "ssl.AlertDescription"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "ALERT_DESCRIPTION_DECRYPT_ERROR"
  fully_qualified_name: "ssl.ALERT_DESCRIPTION_DECRYPT_ERROR"
  type_annotation {
    pretty_printed_name: "ssl.AlertDescription"
    fully_qualified_name: "ssl.AlertDescription"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "ALERT_DESCRIPTION_ILLEGAL_PARAMETER"
  fully_qualified_name: "ssl.ALERT_DESCRIPTION_ILLEGAL_PARAMETER"
  type_annotation {
    pretty_printed_name: "ssl.AlertDescription"
    fully_qualified_name: "ssl.AlertDescription"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "ALERT_DESCRIPTION_INSUFFICIENT_SECURITY"
  fully_qualified_name: "ssl.ALERT_DESCRIPTION_INSUFFICIENT_SECURITY"
  type_annotation {
    pretty_printed_name: "ssl.AlertDescription"
    fully_qualified_name: "ssl.AlertDescription"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "ALERT_DESCRIPTION_NO_RENEGOTIATION"
  fully_qualified_name: "ssl.ALERT_DESCRIPTION_NO_RENEGOTIATION"
  type_annotation {
    pretty_printed_name: "ssl.AlertDescription"
    fully_qualified_name: "ssl.AlertDescription"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "ALERT_DESCRIPTION_PROTOCOL_VERSION"
  fully_qualified_name: "ssl.ALERT_DESCRIPTION_PROTOCOL_VERSION"
  type_annotation {
    pretty_printed_name: "ssl.AlertDescription"
    fully_qualified_name: "ssl.AlertDescription"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "ALERT_DESCRIPTION_RECORD_OVERFLOW"
  fully_qualified_name: "ssl.ALERT_DESCRIPTION_RECORD_OVERFLOW"
  type_annotation {
    pretty_printed_name: "ssl.AlertDescription"
    fully_qualified_name: "ssl.AlertDescription"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "ALERT_DESCRIPTION_UNEXPECTED_MESSAGE"
  fully_qualified_name: "ssl.ALERT_DESCRIPTION_UNEXPECTED_MESSAGE"
  type_annotation {
    pretty_printed_name: "ssl.AlertDescription"
    fully_qualified_name: "ssl.AlertDescription"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "ALERT_DESCRIPTION_UNKNOWN_CA"
  fully_qualified_name: "ssl.ALERT_DESCRIPTION_UNKNOWN_CA"
  type_annotation {
    pretty_printed_name: "ssl.AlertDescription"
    fully_qualified_name: "ssl.AlertDescription"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "ALERT_DESCRIPTION_UNKNOWN_PSK_IDENTITY"
  fully_qualified_name: "ssl.ALERT_DESCRIPTION_UNKNOWN_PSK_IDENTITY"
  type_annotation {
    pretty_printed_name: "ssl.AlertDescription"
    fully_qualified_name: "ssl.AlertDescription"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "ALERT_DESCRIPTION_UNRECOGNIZED_NAME"
  fully_qualified_name: "ssl.ALERT_DESCRIPTION_UNRECOGNIZED_NAME"
  type_annotation {
    pretty_printed_name: "ssl.AlertDescription"
    fully_qualified_name: "ssl.AlertDescription"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "ALERT_DESCRIPTION_UNSUPPORTED_CERTIFICATE"
  fully_qualified_name: "ssl.ALERT_DESCRIPTION_UNSUPPORTED_CERTIFICATE"
  type_annotation {
    pretty_printed_name: "ssl.AlertDescription"
    fully_qualified_name: "ssl.AlertDescription"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "ALERT_DESCRIPTION_UNSUPPORTED_EXTENSION"
  fully_qualified_name: "ssl.ALERT_DESCRIPTION_UNSUPPORTED_EXTENSION"
  type_annotation {
    pretty_printed_name: "ssl.AlertDescription"
    fully_qualified_name: "ssl.AlertDescription"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "ALERT_DESCRIPTION_USER_CANCELLED"
  fully_qualified_name: "ssl.ALERT_DESCRIPTION_USER_CANCELLED"
  type_annotation {
    pretty_printed_name: "ssl.AlertDescription"
    fully_qualified_name: "ssl.AlertDescription"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "SSL_ERROR_EOF"
  fully_qualified_name: "ssl.SSL_ERROR_EOF"
  type_annotation {
    pretty_printed_name: "ssl.SSLErrorNumber"
    fully_qualified_name: "ssl.SSLErrorNumber"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "SSL_ERROR_INVALID_ERROR_CODE"
  fully_qualified_name: "ssl.SSL_ERROR_INVALID_ERROR_CODE"
  type_annotation {
    pretty_printed_name: "ssl.SSLErrorNumber"
    fully_qualified_name: "ssl.SSLErrorNumber"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "SSL_ERROR_SSL"
  fully_qualified_name: "ssl.SSL_ERROR_SSL"
  type_annotation {
    pretty_printed_name: "ssl.SSLErrorNumber"
    fully_qualified_name: "ssl.SSLErrorNumber"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "SSL_ERROR_SYSCALL"
  fully_qualified_name: "ssl.SSL_ERROR_SYSCALL"
  type_annotation {
    pretty_printed_name: "ssl.SSLErrorNumber"
    fully_qualified_name: "ssl.SSLErrorNumber"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "SSL_ERROR_WANT_CONNECT"
  fully_qualified_name: "ssl.SSL_ERROR_WANT_CONNECT"
  type_annotation {
    pretty_printed_name: "ssl.SSLErrorNumber"
    fully_qualified_name: "ssl.SSLErrorNumber"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "SSL_ERROR_WANT_READ"
  fully_qualified_name: "ssl.SSL_ERROR_WANT_READ"
  type_annotation {
    pretty_printed_name: "ssl.SSLErrorNumber"
    fully_qualified_name: "ssl.SSLErrorNumber"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "SSL_ERROR_WANT_WRITE"
  fully_qualified_name: "ssl.SSL_ERROR_WANT_WRITE"
  type_annotation {
    pretty_printed_name: "ssl.SSLErrorNumber"
    fully_qualified_name: "ssl.SSLErrorNumber"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "SSL_ERROR_WANT_X509_LOOKUP"
  fully_qualified_name: "ssl.SSL_ERROR_WANT_X509_LOOKUP"
  type_annotation {
    pretty_printed_name: "ssl.SSLErrorNumber"
    fully_qualified_name: "ssl.SSLErrorNumber"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "SSL_ERROR_ZERO_RETURN"
  fully_qualified_name: "ssl.SSL_ERROR_ZERO_RETURN"
  type_annotation {
    pretty_printed_name: "ssl.SSLErrorNumber"
    fully_qualified_name: "ssl.SSLErrorNumber"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "AF_INET"
  fully_qualified_name: "ssl.AF_INET"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
}
vars {
  name: "PEM_FOOTER"
  fully_qualified_name: "ssl.PEM_FOOTER"
  type_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "PEM_HEADER"
  fully_qualified_name: "ssl.PEM_HEADER"
  type_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "SOCK_STREAM"
  fully_qualified_name: "ssl.SOCK_STREAM"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "SOL_SOCKET"
  fully_qualified_name: "ssl.SOL_SOCKET"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "SO_TYPE"
  fully_qualified_name: "ssl.SO_TYPE"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "OP_ENABLE_MIDDLEBOX_COMPAT"
  fully_qualified_name: "ssl.OP_ENABLE_MIDDLEBOX_COMPAT"
  type_annotation {
    pretty_printed_name: "ssl.Options"
    fully_qualified_name: "ssl.Options"
  }
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "OP_IGNORE_UNEXPECTED_EOF"
  fully_qualified_name: "ssl.OP_IGNORE_UNEXPECTED_EOF"
  type_annotation {
    pretty_printed_name: "ssl.Options"
    fully_qualified_name: "ssl.Options"
  }
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "VERIFY_ALLOW_PROXY_CERTS"
  fully_qualified_name: "ssl.VERIFY_ALLOW_PROXY_CERTS"
  type_annotation {
    pretty_printed_name: "ssl.VerifyFlags"
    fully_qualified_name: "ssl.VerifyFlags"
  }
  valid_for: "310"
}
vars {
  name: "VERIFY_X509_PARTIAL_CHAIN"
  fully_qualified_name: "ssl.VERIFY_X509_PARTIAL_CHAIN"
  type_annotation {
    pretty_printed_name: "ssl.VerifyFlags"
    fully_qualified_name: "ssl.VerifyFlags"
  }
  valid_for: "310"
}
