fully_qualified_name: "optparse"
classes {
  name: "OptParseError"
  fully_qualified_name: "optparse.OptParseError"
  super_classes: "builtins.Exception"
  methods {
    name: "__init__"
    fully_qualified_name: "optparse.OptParseError.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.OptParseError"
        fully_qualified_name: "optparse.OptParseError"
      }
    }
    parameters {
      name: "msg"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.unicode]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.unicode"
            fully_qualified_name: "builtins.unicode"
          }
        }
        fully_qualified_name: "optparse._Text"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__init__"
    fully_qualified_name: "optparse.OptParseError.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.OptParseError"
        fully_qualified_name: "optparse.OptParseError"
      }
    }
    parameters {
      name: "msg"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "msg"
    fully_qualified_name: "optparse.OptParseError.msg"
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.unicode]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.unicode"
          fully_qualified_name: "builtins.unicode"
        }
      }
      fully_qualified_name: "optparse._Text"
    }
    valid_for: "27"
  }
  attributes {
    name: "msg"
    fully_qualified_name: "optparse.OptParseError.msg"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "BadOptionError"
  fully_qualified_name: "optparse.BadOptionError"
  super_classes: "optparse.OptParseError"
  methods {
    name: "__init__"
    fully_qualified_name: "optparse.BadOptionError.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.BadOptionError"
        fully_qualified_name: "optparse.BadOptionError"
      }
    }
    parameters {
      name: "opt_str"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.unicode]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.unicode"
            fully_qualified_name: "builtins.unicode"
          }
        }
        fully_qualified_name: "optparse._Text"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__init__"
    fully_qualified_name: "optparse.BadOptionError.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.BadOptionError"
        fully_qualified_name: "optparse.BadOptionError"
      }
    }
    parameters {
      name: "opt_str"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "opt_str"
    fully_qualified_name: "optparse.BadOptionError.opt_str"
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.unicode]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.unicode"
          fully_qualified_name: "builtins.unicode"
        }
      }
      fully_qualified_name: "optparse._Text"
    }
    valid_for: "27"
  }
  attributes {
    name: "opt_str"
    fully_qualified_name: "optparse.BadOptionError.opt_str"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "AmbiguousOptionError"
  fully_qualified_name: "optparse.AmbiguousOptionError"
  super_classes: "optparse.BadOptionError"
  methods {
    name: "__init__"
    fully_qualified_name: "optparse.AmbiguousOptionError.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.AmbiguousOptionError"
        fully_qualified_name: "optparse.AmbiguousOptionError"
      }
    }
    parameters {
      name: "opt_str"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.unicode]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.unicode"
            fully_qualified_name: "builtins.unicode"
          }
        }
        fully_qualified_name: "optparse._Text"
      }
    }
    parameters {
      name: "possibilities"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Sequence[TypeAlias[Union[builtins.str,builtins.unicode]]]"
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.unicode]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.unicode"
              fully_qualified_name: "builtins.unicode"
            }
          }
          fully_qualified_name: "optparse._Text"
        }
        fully_qualified_name: "typing.Sequence"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__init__"
    fully_qualified_name: "optparse.AmbiguousOptionError.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.AmbiguousOptionError"
        fully_qualified_name: "optparse.AmbiguousOptionError"
      }
    }
    parameters {
      name: "opt_str"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "possibilities"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Sequence[builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "typing.Sequence"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "possibilities"
    fully_qualified_name: "optparse.AmbiguousOptionError.possibilities"
    type_annotation {
      pretty_printed_name: "typing.Iterable[TypeAlias[Union[builtins.str,builtins.unicode]]]"
      args {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.unicode]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.unicode"
            fully_qualified_name: "builtins.unicode"
          }
        }
        fully_qualified_name: "optparse._Text"
      }
      fully_qualified_name: "typing.Iterable"
    }
    valid_for: "27"
  }
  attributes {
    name: "possibilities"
    fully_qualified_name: "optparse.AmbiguousOptionError.possibilities"
    type_annotation {
      pretty_printed_name: "typing.Iterable[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "typing.Iterable"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "OptionError"
  fully_qualified_name: "optparse.OptionError"
  super_classes: "optparse.OptParseError"
  methods {
    name: "__init__"
    fully_qualified_name: "optparse.OptionError.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.OptionError"
        fully_qualified_name: "optparse.OptionError"
      }
    }
    parameters {
      name: "msg"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.unicode]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.unicode"
            fully_qualified_name: "builtins.unicode"
          }
        }
        fully_qualified_name: "optparse._Text"
      }
    }
    parameters {
      name: "option"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.Option"
        fully_qualified_name: "optparse.Option"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__init__"
    fully_qualified_name: "optparse.OptionError.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.OptionError"
        fully_qualified_name: "optparse.OptionError"
      }
    }
    parameters {
      name: "msg"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "option"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.Option"
        fully_qualified_name: "optparse.Option"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "msg"
    fully_qualified_name: "optparse.OptionError.msg"
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.unicode]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.unicode"
          fully_qualified_name: "builtins.unicode"
        }
      }
      fully_qualified_name: "optparse._Text"
    }
    valid_for: "27"
  }
  attributes {
    name: "msg"
    fully_qualified_name: "optparse.OptionError.msg"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "option_id"
    fully_qualified_name: "optparse.OptionError.option_id"
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.unicode]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.unicode"
          fully_qualified_name: "builtins.unicode"
        }
      }
      fully_qualified_name: "optparse._Text"
    }
    valid_for: "27"
  }
  attributes {
    name: "option_id"
    fully_qualified_name: "optparse.OptionError.option_id"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "OptionConflictError"
  fully_qualified_name: "optparse.OptionConflictError"
  super_classes: "optparse.OptionError"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "OptionValueError"
  fully_qualified_name: "optparse.OptionValueError"
  super_classes: "optparse.OptParseError"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "HelpFormatter"
  fully_qualified_name: "optparse.HelpFormatter"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "optparse.HelpFormatter.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.HelpFormatter"
        fully_qualified_name: "optparse.HelpFormatter"
      }
    }
    parameters {
      name: "indent_increment"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "max_help_position"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "width"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "short_first"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "dedent"
    fully_qualified_name: "optparse.HelpFormatter.dedent"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.HelpFormatter"
        fully_qualified_name: "optparse.HelpFormatter"
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "expand_default"
    fully_qualified_name: "optparse.HelpFormatter.expand_default"
    return_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.unicode]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.unicode"
          fully_qualified_name: "builtins.unicode"
        }
      }
      fully_qualified_name: "optparse._Text"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.HelpFormatter"
        fully_qualified_name: "optparse.HelpFormatter"
      }
    }
    parameters {
      name: "option"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.Option"
        fully_qualified_name: "optparse.Option"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "expand_default"
    fully_qualified_name: "optparse.HelpFormatter.expand_default"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.HelpFormatter"
        fully_qualified_name: "optparse.HelpFormatter"
      }
    }
    parameters {
      name: "option"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.Option"
        fully_qualified_name: "optparse.Option"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "format_description"
    fully_qualified_name: "optparse.HelpFormatter.format_description"
    return_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.unicode]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.unicode"
          fully_qualified_name: "builtins.unicode"
        }
      }
      fully_qualified_name: "optparse._Text"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.HelpFormatter"
        fully_qualified_name: "optparse.HelpFormatter"
      }
    }
    parameters {
      name: "description"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.unicode]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.unicode"
            fully_qualified_name: "builtins.unicode"
          }
        }
        fully_qualified_name: "optparse._Text"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "format_description"
    fully_qualified_name: "optparse.HelpFormatter.format_description"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.HelpFormatter"
        fully_qualified_name: "optparse.HelpFormatter"
      }
    }
    parameters {
      name: "description"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "format_epilog"
    fully_qualified_name: "optparse.HelpFormatter.format_epilog"
    return_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.unicode]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.unicode"
          fully_qualified_name: "builtins.unicode"
        }
      }
      fully_qualified_name: "optparse._Text"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.HelpFormatter"
        fully_qualified_name: "optparse.HelpFormatter"
      }
    }
    parameters {
      name: "epilog"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.unicode]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.unicode"
            fully_qualified_name: "builtins.unicode"
          }
        }
        fully_qualified_name: "optparse._Text"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "format_epilog"
    fully_qualified_name: "optparse.HelpFormatter.format_epilog"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.HelpFormatter"
        fully_qualified_name: "optparse.HelpFormatter"
      }
    }
    parameters {
      name: "epilog"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "format_heading"
    fully_qualified_name: "optparse.HelpFormatter.format_heading"
    return_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.unicode]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.unicode"
          fully_qualified_name: "builtins.unicode"
        }
      }
      fully_qualified_name: "optparse._Text"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.HelpFormatter"
        fully_qualified_name: "optparse.HelpFormatter"
      }
    }
    parameters {
      name: "heading"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "27"
  }
  methods {
    name: "format_heading"
    fully_qualified_name: "optparse.HelpFormatter.format_heading"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.HelpFormatter"
        fully_qualified_name: "optparse.HelpFormatter"
      }
    }
    parameters {
      name: "heading"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "format_option"
    fully_qualified_name: "optparse.HelpFormatter.format_option"
    return_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.unicode]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.unicode"
          fully_qualified_name: "builtins.unicode"
        }
      }
      fully_qualified_name: "optparse._Text"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.HelpFormatter"
        fully_qualified_name: "optparse.HelpFormatter"
      }
    }
    parameters {
      name: "option"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.Option"
        fully_qualified_name: "optparse.Option"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "format_option"
    fully_qualified_name: "optparse.HelpFormatter.format_option"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.HelpFormatter"
        fully_qualified_name: "optparse.HelpFormatter"
      }
    }
    parameters {
      name: "option"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.Option"
        fully_qualified_name: "optparse.Option"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "format_option_strings"
    fully_qualified_name: "optparse.HelpFormatter.format_option_strings"
    return_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.unicode]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.unicode"
          fully_qualified_name: "builtins.unicode"
        }
      }
      fully_qualified_name: "optparse._Text"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.HelpFormatter"
        fully_qualified_name: "optparse.HelpFormatter"
      }
    }
    parameters {
      name: "option"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.Option"
        fully_qualified_name: "optparse.Option"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "format_option_strings"
    fully_qualified_name: "optparse.HelpFormatter.format_option_strings"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.HelpFormatter"
        fully_qualified_name: "optparse.HelpFormatter"
      }
    }
    parameters {
      name: "option"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.Option"
        fully_qualified_name: "optparse.Option"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "format_usage"
    fully_qualified_name: "optparse.HelpFormatter.format_usage"
    return_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.unicode]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.unicode"
          fully_qualified_name: "builtins.unicode"
        }
      }
      fully_qualified_name: "optparse._Text"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.HelpFormatter"
        fully_qualified_name: "optparse.HelpFormatter"
      }
    }
    parameters {
      name: "usage"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "27"
  }
  methods {
    name: "format_usage"
    fully_qualified_name: "optparse.HelpFormatter.format_usage"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.HelpFormatter"
        fully_qualified_name: "optparse.HelpFormatter"
      }
    }
    parameters {
      name: "usage"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "indent"
    fully_qualified_name: "optparse.HelpFormatter.indent"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.HelpFormatter"
        fully_qualified_name: "optparse.HelpFormatter"
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "set_long_opt_delimiter"
    fully_qualified_name: "optparse.HelpFormatter.set_long_opt_delimiter"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.HelpFormatter"
        fully_qualified_name: "optparse.HelpFormatter"
      }
    }
    parameters {
      name: "delim"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.unicode]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.unicode"
            fully_qualified_name: "builtins.unicode"
          }
        }
        fully_qualified_name: "optparse._Text"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "set_long_opt_delimiter"
    fully_qualified_name: "optparse.HelpFormatter.set_long_opt_delimiter"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.HelpFormatter"
        fully_qualified_name: "optparse.HelpFormatter"
      }
    }
    parameters {
      name: "delim"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "set_parser"
    fully_qualified_name: "optparse.HelpFormatter.set_parser"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.HelpFormatter"
        fully_qualified_name: "optparse.HelpFormatter"
      }
    }
    parameters {
      name: "parser"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.OptionParser"
        fully_qualified_name: "optparse.OptionParser"
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "set_short_opt_delimiter"
    fully_qualified_name: "optparse.HelpFormatter.set_short_opt_delimiter"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.HelpFormatter"
        fully_qualified_name: "optparse.HelpFormatter"
      }
    }
    parameters {
      name: "delim"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.unicode]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.unicode"
            fully_qualified_name: "builtins.unicode"
          }
        }
        fully_qualified_name: "optparse._Text"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "set_short_opt_delimiter"
    fully_qualified_name: "optparse.HelpFormatter.set_short_opt_delimiter"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.HelpFormatter"
        fully_qualified_name: "optparse.HelpFormatter"
      }
    }
    parameters {
      name: "delim"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "store_option_strings"
    fully_qualified_name: "optparse.HelpFormatter.store_option_strings"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.HelpFormatter"
        fully_qualified_name: "optparse.HelpFormatter"
      }
    }
    parameters {
      name: "parser"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.OptionParser"
        fully_qualified_name: "optparse.OptionParser"
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "NO_DEFAULT_VALUE"
    fully_qualified_name: "optparse.HelpFormatter.NO_DEFAULT_VALUE"
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.unicode]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.unicode"
          fully_qualified_name: "builtins.unicode"
        }
      }
      fully_qualified_name: "optparse._Text"
    }
    valid_for: "27"
  }
  attributes {
    name: "NO_DEFAULT_VALUE"
    fully_qualified_name: "optparse.HelpFormatter.NO_DEFAULT_VALUE"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "_long_opt_fmt"
    fully_qualified_name: "optparse.HelpFormatter._long_opt_fmt"
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.unicode]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.unicode"
          fully_qualified_name: "builtins.unicode"
        }
      }
      fully_qualified_name: "optparse._Text"
    }
    valid_for: "27"
  }
  attributes {
    name: "_long_opt_fmt"
    fully_qualified_name: "optparse.HelpFormatter._long_opt_fmt"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "_short_opt_fmt"
    fully_qualified_name: "optparse.HelpFormatter._short_opt_fmt"
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.unicode]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.unicode"
          fully_qualified_name: "builtins.unicode"
        }
      }
      fully_qualified_name: "optparse._Text"
    }
    valid_for: "27"
  }
  attributes {
    name: "_short_opt_fmt"
    fully_qualified_name: "optparse.HelpFormatter._short_opt_fmt"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "current_indent"
    fully_qualified_name: "optparse.HelpFormatter.current_indent"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "default_tag"
    fully_qualified_name: "optparse.HelpFormatter.default_tag"
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.unicode]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.unicode"
          fully_qualified_name: "builtins.unicode"
        }
      }
      fully_qualified_name: "optparse._Text"
    }
    valid_for: "27"
  }
  attributes {
    name: "default_tag"
    fully_qualified_name: "optparse.HelpFormatter.default_tag"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "help_position"
    fully_qualified_name: "optparse.HelpFormatter.help_position"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "help_width"
    fully_qualified_name: "optparse.HelpFormatter.help_width"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "indent_increment"
    fully_qualified_name: "optparse.HelpFormatter.indent_increment"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "level"
    fully_qualified_name: "optparse.HelpFormatter.level"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "max_help_position"
    fully_qualified_name: "optparse.HelpFormatter.max_help_position"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "option_strings"
    fully_qualified_name: "optparse.HelpFormatter.option_strings"
    type_annotation {
      pretty_printed_name: "builtins.dict[optparse.Option,TypeAlias[Union[builtins.str,builtins.unicode]]]"
      args {
        pretty_printed_name: "optparse.Option"
        fully_qualified_name: "optparse.Option"
      }
      args {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.unicode]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.unicode"
            fully_qualified_name: "builtins.unicode"
          }
        }
        fully_qualified_name: "optparse._Text"
      }
      fully_qualified_name: "builtins.dict"
    }
    valid_for: "27"
  }
  attributes {
    name: "option_strings"
    fully_qualified_name: "optparse.HelpFormatter.option_strings"
    type_annotation {
      pretty_printed_name: "builtins.dict[optparse.Option,builtins.str]"
      args {
        pretty_printed_name: "optparse.Option"
        fully_qualified_name: "optparse.Option"
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "builtins.dict"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "parser"
    fully_qualified_name: "optparse.HelpFormatter.parser"
    type_annotation {
      pretty_printed_name: "optparse.OptionParser"
      fully_qualified_name: "optparse.OptionParser"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "short_first"
    fully_qualified_name: "optparse.HelpFormatter.short_first"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "width"
    fully_qualified_name: "optparse.HelpFormatter.width"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "IndentedHelpFormatter"
  fully_qualified_name: "optparse.IndentedHelpFormatter"
  super_classes: "optparse.HelpFormatter"
  methods {
    name: "__init__"
    fully_qualified_name: "optparse.IndentedHelpFormatter.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.IndentedHelpFormatter"
        fully_qualified_name: "optparse.IndentedHelpFormatter"
      }
    }
    parameters {
      name: "indent_increment"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    parameters {
      name: "max_help_position"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    parameters {
      name: "width"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "short_first"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "format_heading"
    fully_qualified_name: "optparse.IndentedHelpFormatter.format_heading"
    return_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.unicode]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.unicode"
          fully_qualified_name: "builtins.unicode"
        }
      }
      fully_qualified_name: "optparse._Text"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.IndentedHelpFormatter"
        fully_qualified_name: "optparse.IndentedHelpFormatter"
      }
    }
    parameters {
      name: "heading"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.unicode]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.unicode"
            fully_qualified_name: "builtins.unicode"
          }
        }
        fully_qualified_name: "optparse._Text"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "format_heading"
    fully_qualified_name: "optparse.IndentedHelpFormatter.format_heading"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.IndentedHelpFormatter"
        fully_qualified_name: "optparse.IndentedHelpFormatter"
      }
    }
    parameters {
      name: "heading"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "format_usage"
    fully_qualified_name: "optparse.IndentedHelpFormatter.format_usage"
    return_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.unicode]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.unicode"
          fully_qualified_name: "builtins.unicode"
        }
      }
      fully_qualified_name: "optparse._Text"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.IndentedHelpFormatter"
        fully_qualified_name: "optparse.IndentedHelpFormatter"
      }
    }
    parameters {
      name: "usage"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.unicode]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.unicode"
            fully_qualified_name: "builtins.unicode"
          }
        }
        fully_qualified_name: "optparse._Text"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "format_usage"
    fully_qualified_name: "optparse.IndentedHelpFormatter.format_usage"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.IndentedHelpFormatter"
        fully_qualified_name: "optparse.IndentedHelpFormatter"
      }
    }
    parameters {
      name: "usage"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "TitledHelpFormatter"
  fully_qualified_name: "optparse.TitledHelpFormatter"
  super_classes: "optparse.HelpFormatter"
  methods {
    name: "__init__"
    fully_qualified_name: "optparse.TitledHelpFormatter.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.TitledHelpFormatter"
        fully_qualified_name: "optparse.TitledHelpFormatter"
      }
    }
    parameters {
      name: "indent_increment"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    parameters {
      name: "max_help_position"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    parameters {
      name: "width"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "short_first"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "format_heading"
    fully_qualified_name: "optparse.TitledHelpFormatter.format_heading"
    return_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.unicode]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.unicode"
          fully_qualified_name: "builtins.unicode"
        }
      }
      fully_qualified_name: "optparse._Text"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.TitledHelpFormatter"
        fully_qualified_name: "optparse.TitledHelpFormatter"
      }
    }
    parameters {
      name: "heading"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.unicode]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.unicode"
            fully_qualified_name: "builtins.unicode"
          }
        }
        fully_qualified_name: "optparse._Text"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "format_heading"
    fully_qualified_name: "optparse.TitledHelpFormatter.format_heading"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.TitledHelpFormatter"
        fully_qualified_name: "optparse.TitledHelpFormatter"
      }
    }
    parameters {
      name: "heading"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "format_usage"
    fully_qualified_name: "optparse.TitledHelpFormatter.format_usage"
    return_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.unicode]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.unicode"
          fully_qualified_name: "builtins.unicode"
        }
      }
      fully_qualified_name: "optparse._Text"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.TitledHelpFormatter"
        fully_qualified_name: "optparse.TitledHelpFormatter"
      }
    }
    parameters {
      name: "usage"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.unicode]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.unicode"
            fully_qualified_name: "builtins.unicode"
          }
        }
        fully_qualified_name: "optparse._Text"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "format_usage"
    fully_qualified_name: "optparse.TitledHelpFormatter.format_usage"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.TitledHelpFormatter"
        fully_qualified_name: "optparse.TitledHelpFormatter"
      }
    }
    parameters {
      name: "usage"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "Option"
  fully_qualified_name: "optparse.Option"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "optparse.Option.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.Option"
        fully_qualified_name: "optparse.Option"
      }
    }
    parameters {
      name: "opts"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "Union[builtins.str,builtins.unicode,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.unicode"
          fully_qualified_name: "builtins.unicode"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "attrs"
      kind: VAR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__init__"
    fully_qualified_name: "optparse.Option.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.Option"
        fully_qualified_name: "optparse.Option"
      }
    }
    parameters {
      name: "opts"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "attrs"
      kind: VAR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "_check_action"
    fully_qualified_name: "optparse.Option._check_action"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.Option"
        fully_qualified_name: "optparse.Option"
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "_check_callback"
    fully_qualified_name: "optparse.Option._check_callback"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.Option"
        fully_qualified_name: "optparse.Option"
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "_check_choice"
    fully_qualified_name: "optparse.Option._check_choice"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.Option"
        fully_qualified_name: "optparse.Option"
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "_check_const"
    fully_qualified_name: "optparse.Option._check_const"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.Option"
        fully_qualified_name: "optparse.Option"
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "_check_dest"
    fully_qualified_name: "optparse.Option._check_dest"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.Option"
        fully_qualified_name: "optparse.Option"
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "_check_nargs"
    fully_qualified_name: "optparse.Option._check_nargs"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.Option"
        fully_qualified_name: "optparse.Option"
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "_check_opt_strings"
    fully_qualified_name: "optparse.Option._check_opt_strings"
    return_annotation {
      pretty_printed_name: "builtins.list[TypeAlias[Union[builtins.str,builtins.unicode]]]"
      args {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.unicode]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.unicode"
            fully_qualified_name: "builtins.unicode"
          }
        }
        fully_qualified_name: "optparse._Text"
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.Option"
        fully_qualified_name: "optparse.Option"
      }
    }
    parameters {
      name: "opts"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[Union[builtins.str,builtins.unicode,None]]"
        args {
          pretty_printed_name: "Union[builtins.str,builtins.unicode,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.unicode"
            fully_qualified_name: "builtins.unicode"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "_check_opt_strings"
    fully_qualified_name: "optparse.Option._check_opt_strings"
    return_annotation {
      pretty_printed_name: "builtins.list[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.Option"
        fully_qualified_name: "optparse.Option"
      }
    }
    parameters {
      name: "opts"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[Union[builtins.str,None]]"
        args {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "_check_type"
    fully_qualified_name: "optparse.Option._check_type"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.Option"
        fully_qualified_name: "optparse.Option"
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "_set_attrs"
    fully_qualified_name: "optparse.Option._set_attrs"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.Option"
        fully_qualified_name: "optparse.Option"
      }
    }
    parameters {
      name: "attrs"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.dict[TypeAlias[Union[builtins.str,builtins.unicode]],Any]"
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.unicode]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.unicode"
              fully_qualified_name: "builtins.unicode"
            }
          }
          fully_qualified_name: "optparse._Text"
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "builtins.dict"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "_set_attrs"
    fully_qualified_name: "optparse.Option._set_attrs"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.Option"
        fully_qualified_name: "optparse.Option"
      }
    }
    parameters {
      name: "attrs"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.dict[builtins.str,Any]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "builtins.dict"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "_set_opt_strings"
    fully_qualified_name: "optparse.Option._set_opt_strings"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.Option"
        fully_qualified_name: "optparse.Option"
      }
    }
    parameters {
      name: "opts"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[TypeAlias[Union[builtins.str,builtins.unicode]]]"
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.unicode]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.unicode"
              fully_qualified_name: "builtins.unicode"
            }
          }
          fully_qualified_name: "optparse._Text"
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "_set_opt_strings"
    fully_qualified_name: "optparse.Option._set_opt_strings"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.Option"
        fully_qualified_name: "optparse.Option"
      }
    }
    parameters {
      name: "opts"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "check_value"
    fully_qualified_name: "optparse.Option.check_value"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.Option"
        fully_qualified_name: "optparse.Option"
      }
    }
    parameters {
      name: "opt"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.unicode]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.unicode"
            fully_qualified_name: "builtins.unicode"
          }
        }
        fully_qualified_name: "optparse._Text"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "27"
  }
  methods {
    name: "check_value"
    fully_qualified_name: "optparse.Option.check_value"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.Option"
        fully_qualified_name: "optparse.Option"
      }
    }
    parameters {
      name: "opt"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "convert_value"
    fully_qualified_name: "optparse.Option.convert_value"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.Option"
        fully_qualified_name: "optparse.Option"
      }
    }
    parameters {
      name: "opt"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.unicode]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.unicode"
            fully_qualified_name: "builtins.unicode"
          }
        }
        fully_qualified_name: "optparse._Text"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "27"
  }
  methods {
    name: "convert_value"
    fully_qualified_name: "optparse.Option.convert_value"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.Option"
        fully_qualified_name: "optparse.Option"
      }
    }
    parameters {
      name: "opt"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "get_opt_string"
    fully_qualified_name: "optparse.Option.get_opt_string"
    return_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.unicode]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.unicode"
          fully_qualified_name: "builtins.unicode"
        }
      }
      fully_qualified_name: "optparse._Text"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.Option"
        fully_qualified_name: "optparse.Option"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "get_opt_string"
    fully_qualified_name: "optparse.Option.get_opt_string"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.Option"
        fully_qualified_name: "optparse.Option"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "process"
    fully_qualified_name: "optparse.Option.process"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.Option"
        fully_qualified_name: "optparse.Option"
      }
    }
    parameters {
      name: "opt"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "values"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "parser"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.OptionParser"
        fully_qualified_name: "optparse.OptionParser"
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "take_action"
    fully_qualified_name: "optparse.Option.take_action"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.Option"
        fully_qualified_name: "optparse.Option"
      }
    }
    parameters {
      name: "action"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.unicode]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.unicode"
            fully_qualified_name: "builtins.unicode"
          }
        }
        fully_qualified_name: "optparse._Text"
      }
    }
    parameters {
      name: "dest"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.unicode]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.unicode"
            fully_qualified_name: "builtins.unicode"
          }
        }
        fully_qualified_name: "optparse._Text"
      }
    }
    parameters {
      name: "opt"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "values"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "parser"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.OptionParser"
        fully_qualified_name: "optparse.OptionParser"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "take_action"
    fully_qualified_name: "optparse.Option.take_action"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.Option"
        fully_qualified_name: "optparse.Option"
      }
    }
    parameters {
      name: "action"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "dest"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "opt"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "values"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "parser"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.OptionParser"
        fully_qualified_name: "optparse.OptionParser"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "takes_value"
    fully_qualified_name: "optparse.Option.takes_value"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.Option"
        fully_qualified_name: "optparse.Option"
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "ACTIONS"
    fully_qualified_name: "optparse.Option.ACTIONS"
    type_annotation {
      pretty_printed_name: "builtins.tuple[TypeAlias[Union[builtins.str,builtins.unicode]]]"
      args {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.unicode]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.unicode"
            fully_qualified_name: "builtins.unicode"
          }
        }
        fully_qualified_name: "optparse._Text"
      }
      fully_qualified_name: "builtins.tuple"
    }
    valid_for: "27"
  }
  attributes {
    name: "ACTIONS"
    fully_qualified_name: "optparse.Option.ACTIONS"
    type_annotation {
      pretty_printed_name: "builtins.tuple[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "builtins.tuple"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "ALWAYS_TYPED_ACTIONS"
    fully_qualified_name: "optparse.Option.ALWAYS_TYPED_ACTIONS"
    type_annotation {
      pretty_printed_name: "builtins.tuple[TypeAlias[Union[builtins.str,builtins.unicode]]]"
      args {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.unicode]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.unicode"
            fully_qualified_name: "builtins.unicode"
          }
        }
        fully_qualified_name: "optparse._Text"
      }
      fully_qualified_name: "builtins.tuple"
    }
    valid_for: "27"
  }
  attributes {
    name: "ALWAYS_TYPED_ACTIONS"
    fully_qualified_name: "optparse.Option.ALWAYS_TYPED_ACTIONS"
    type_annotation {
      pretty_printed_name: "builtins.tuple[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "builtins.tuple"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "ATTRS"
    fully_qualified_name: "optparse.Option.ATTRS"
    type_annotation {
      pretty_printed_name: "builtins.list[TypeAlias[Union[builtins.str,builtins.unicode]]]"
      args {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.unicode]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.unicode"
            fully_qualified_name: "builtins.unicode"
          }
        }
        fully_qualified_name: "optparse._Text"
      }
      fully_qualified_name: "builtins.list"
    }
    valid_for: "27"
  }
  attributes {
    name: "ATTRS"
    fully_qualified_name: "optparse.Option.ATTRS"
    type_annotation {
      pretty_printed_name: "builtins.list[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "builtins.list"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "CHECK_METHODS"
    fully_qualified_name: "optparse.Option.CHECK_METHODS"
    type_annotation {
      pretty_printed_name: "Union[builtins.list[CallableType[builtins.function]],None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.list[CallableType[builtins.function]]"
        args {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
        fully_qualified_name: "builtins.list"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "CONST_ACTIONS"
    fully_qualified_name: "optparse.Option.CONST_ACTIONS"
    type_annotation {
      pretty_printed_name: "builtins.tuple[TypeAlias[Union[builtins.str,builtins.unicode]]]"
      args {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.unicode]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.unicode"
            fully_qualified_name: "builtins.unicode"
          }
        }
        fully_qualified_name: "optparse._Text"
      }
      fully_qualified_name: "builtins.tuple"
    }
    valid_for: "27"
  }
  attributes {
    name: "CONST_ACTIONS"
    fully_qualified_name: "optparse.Option.CONST_ACTIONS"
    type_annotation {
      pretty_printed_name: "builtins.tuple[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "builtins.tuple"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "STORE_ACTIONS"
    fully_qualified_name: "optparse.Option.STORE_ACTIONS"
    type_annotation {
      pretty_printed_name: "builtins.tuple[TypeAlias[Union[builtins.str,builtins.unicode]]]"
      args {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.unicode]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.unicode"
            fully_qualified_name: "builtins.unicode"
          }
        }
        fully_qualified_name: "optparse._Text"
      }
      fully_qualified_name: "builtins.tuple"
    }
    valid_for: "27"
  }
  attributes {
    name: "STORE_ACTIONS"
    fully_qualified_name: "optparse.Option.STORE_ACTIONS"
    type_annotation {
      pretty_printed_name: "builtins.tuple[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "builtins.tuple"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "TYPED_ACTIONS"
    fully_qualified_name: "optparse.Option.TYPED_ACTIONS"
    type_annotation {
      pretty_printed_name: "builtins.tuple[TypeAlias[Union[builtins.str,builtins.unicode]]]"
      args {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.unicode]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.unicode"
            fully_qualified_name: "builtins.unicode"
          }
        }
        fully_qualified_name: "optparse._Text"
      }
      fully_qualified_name: "builtins.tuple"
    }
    valid_for: "27"
  }
  attributes {
    name: "TYPED_ACTIONS"
    fully_qualified_name: "optparse.Option.TYPED_ACTIONS"
    type_annotation {
      pretty_printed_name: "builtins.tuple[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "builtins.tuple"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "TYPES"
    fully_qualified_name: "optparse.Option.TYPES"
    type_annotation {
      pretty_printed_name: "builtins.tuple[TypeAlias[Union[builtins.str,builtins.unicode]]]"
      args {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.unicode]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.unicode"
            fully_qualified_name: "builtins.unicode"
          }
        }
        fully_qualified_name: "optparse._Text"
      }
      fully_qualified_name: "builtins.tuple"
    }
    valid_for: "27"
  }
  attributes {
    name: "TYPES"
    fully_qualified_name: "optparse.Option.TYPES"
    type_annotation {
      pretty_printed_name: "builtins.tuple[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "builtins.tuple"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "TYPE_CHECKER"
    fully_qualified_name: "optparse.Option.TYPE_CHECKER"
    type_annotation {
      pretty_printed_name: "builtins.dict[TypeAlias[Union[builtins.str,builtins.unicode]],CallableType[builtins.function]]"
      args {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.unicode]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.unicode"
            fully_qualified_name: "builtins.unicode"
          }
        }
        fully_qualified_name: "optparse._Text"
      }
      args {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
      fully_qualified_name: "builtins.dict"
    }
    valid_for: "27"
  }
  attributes {
    name: "TYPE_CHECKER"
    fully_qualified_name: "optparse.Option.TYPE_CHECKER"
    type_annotation {
      pretty_printed_name: "builtins.dict[builtins.str,CallableType[builtins.function]]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
      fully_qualified_name: "builtins.dict"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "_long_opts"
    fully_qualified_name: "optparse.Option._long_opts"
    type_annotation {
      pretty_printed_name: "builtins.list[TypeAlias[Union[builtins.str,builtins.unicode]]]"
      args {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.unicode]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.unicode"
            fully_qualified_name: "builtins.unicode"
          }
        }
        fully_qualified_name: "optparse._Text"
      }
      fully_qualified_name: "builtins.list"
    }
    valid_for: "27"
  }
  attributes {
    name: "_long_opts"
    fully_qualified_name: "optparse.Option._long_opts"
    type_annotation {
      pretty_printed_name: "builtins.list[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "builtins.list"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "_short_opts"
    fully_qualified_name: "optparse.Option._short_opts"
    type_annotation {
      pretty_printed_name: "builtins.list[TypeAlias[Union[builtins.str,builtins.unicode]]]"
      args {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.unicode]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.unicode"
            fully_qualified_name: "builtins.unicode"
          }
        }
        fully_qualified_name: "optparse._Text"
      }
      fully_qualified_name: "builtins.list"
    }
    valid_for: "27"
  }
  attributes {
    name: "_short_opts"
    fully_qualified_name: "optparse.Option._short_opts"
    type_annotation {
      pretty_printed_name: "builtins.list[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "builtins.list"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "action"
    fully_qualified_name: "optparse.Option.action"
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.unicode]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.unicode"
          fully_qualified_name: "builtins.unicode"
        }
      }
      fully_qualified_name: "optparse._Text"
    }
    valid_for: "27"
  }
  attributes {
    name: "action"
    fully_qualified_name: "optparse.Option.action"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "dest"
    fully_qualified_name: "optparse.Option.dest"
    type_annotation {
      pretty_printed_name: "Union[builtins.str,builtins.unicode,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.unicode"
        fully_qualified_name: "builtins.unicode"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "27"
  }
  attributes {
    name: "dest"
    fully_qualified_name: "optparse.Option.dest"
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "default"
    fully_qualified_name: "optparse.Option.default"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "nargs"
    fully_qualified_name: "optparse.Option.nargs"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "type"
    fully_qualified_name: "optparse.Option.type"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "callback"
    fully_qualified_name: "optparse.Option.callback"
    type_annotation {
      pretty_printed_name: "Union[CallableType[builtins.function],None]"
      kind: UNION
      args {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "callback_args"
    fully_qualified_name: "optparse.Option.callback_args"
    type_annotation {
      pretty_printed_name: "Union[builtins.tuple[Any],None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.tuple[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "builtins.tuple"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "callback_kwargs"
    fully_qualified_name: "optparse.Option.callback_kwargs"
    type_annotation {
      pretty_printed_name: "Union[builtins.dict[TypeAlias[Union[builtins.str,builtins.unicode]],Any],None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.dict[TypeAlias[Union[builtins.str,builtins.unicode]],Any]"
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.unicode]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.unicode"
              fully_qualified_name: "builtins.unicode"
            }
          }
          fully_qualified_name: "optparse._Text"
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "builtins.dict"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "27"
  }
  attributes {
    name: "callback_kwargs"
    fully_qualified_name: "optparse.Option.callback_kwargs"
    type_annotation {
      pretty_printed_name: "Union[builtins.dict[builtins.str,Any],None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.dict[builtins.str,Any]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "builtins.dict"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "help"
    fully_qualified_name: "optparse.Option.help"
    type_annotation {
      pretty_printed_name: "Union[builtins.str,builtins.unicode,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.unicode"
        fully_qualified_name: "builtins.unicode"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "27"
  }
  attributes {
    name: "help"
    fully_qualified_name: "optparse.Option.help"
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "metavar"
    fully_qualified_name: "optparse.Option.metavar"
    type_annotation {
      pretty_printed_name: "Union[builtins.str,builtins.unicode,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.unicode"
        fully_qualified_name: "builtins.unicode"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "27"
  }
  attributes {
    name: "metavar"
    fully_qualified_name: "optparse.Option.metavar"
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "OptionContainer"
  fully_qualified_name: "optparse.OptionContainer"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "optparse.OptionContainer.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.OptionContainer"
        fully_qualified_name: "optparse.OptionContainer"
      }
    }
    parameters {
      name: "option_class"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[optparse.Option]"
        kind: TYPE
        args {
          pretty_printed_name: "optparse.Option"
          fully_qualified_name: "optparse.Option"
        }
      }
    }
    parameters {
      name: "conflict_handler"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "description"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "_check_conflict"
    fully_qualified_name: "optparse.OptionContainer._check_conflict"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.OptionContainer"
        fully_qualified_name: "optparse.OptionContainer"
      }
    }
    parameters {
      name: "option"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "_create_option_mappings"
    fully_qualified_name: "optparse.OptionContainer._create_option_mappings"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.OptionContainer"
        fully_qualified_name: "optparse.OptionContainer"
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "_share_option_mappings"
    fully_qualified_name: "optparse.OptionContainer._share_option_mappings"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.OptionContainer"
        fully_qualified_name: "optparse.OptionContainer"
      }
    }
    parameters {
      name: "parser"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.OptionParser"
        fully_qualified_name: "optparse.OptionParser"
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "add_options"
    fully_qualified_name: "optparse.OptionContainer.add_options"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.OptionContainer"
        fully_qualified_name: "optparse.OptionContainer"
      }
    }
    parameters {
      name: "option_list"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[optparse.Option]"
        args {
          pretty_printed_name: "optparse.Option"
          fully_qualified_name: "optparse.Option"
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "destroy"
    fully_qualified_name: "optparse.OptionContainer.destroy"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.OptionContainer"
        fully_qualified_name: "optparse.OptionContainer"
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "format_description"
    fully_qualified_name: "optparse.OptionContainer.format_description"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.OptionContainer"
        fully_qualified_name: "optparse.OptionContainer"
      }
    }
    parameters {
      name: "formatter"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[optparse.HelpFormatter,None]"
        kind: UNION
        args {
          pretty_printed_name: "optparse.HelpFormatter"
          fully_qualified_name: "optparse.HelpFormatter"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "format_help"
    fully_qualified_name: "optparse.OptionContainer.format_help"
    return_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.unicode]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.unicode"
          fully_qualified_name: "builtins.unicode"
        }
      }
      fully_qualified_name: "optparse._Text"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.OptionContainer"
        fully_qualified_name: "optparse.OptionContainer"
      }
    }
    parameters {
      name: "formatter"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[optparse.HelpFormatter,None]"
        kind: UNION
        args {
          pretty_printed_name: "optparse.HelpFormatter"
          fully_qualified_name: "optparse.HelpFormatter"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    valid_for: "27"
  }
  methods {
    name: "format_help"
    fully_qualified_name: "optparse.OptionContainer.format_help"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.OptionContainer"
        fully_qualified_name: "optparse.OptionContainer"
      }
    }
    parameters {
      name: "formatter"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[optparse.HelpFormatter,None]"
        kind: UNION
        args {
          pretty_printed_name: "optparse.HelpFormatter"
          fully_qualified_name: "optparse.HelpFormatter"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "format_option_help"
    fully_qualified_name: "optparse.OptionContainer.format_option_help"
    return_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.unicode]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.unicode"
          fully_qualified_name: "builtins.unicode"
        }
      }
      fully_qualified_name: "optparse._Text"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.OptionContainer"
        fully_qualified_name: "optparse.OptionContainer"
      }
    }
    parameters {
      name: "formatter"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[optparse.HelpFormatter,None]"
        kind: UNION
        args {
          pretty_printed_name: "optparse.HelpFormatter"
          fully_qualified_name: "optparse.HelpFormatter"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    valid_for: "27"
  }
  methods {
    name: "format_option_help"
    fully_qualified_name: "optparse.OptionContainer.format_option_help"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.OptionContainer"
        fully_qualified_name: "optparse.OptionContainer"
      }
    }
    parameters {
      name: "formatter"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[optparse.HelpFormatter,None]"
        kind: UNION
        args {
          pretty_printed_name: "optparse.HelpFormatter"
          fully_qualified_name: "optparse.HelpFormatter"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "get_description"
    fully_qualified_name: "optparse.OptionContainer.get_description"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.OptionContainer"
        fully_qualified_name: "optparse.OptionContainer"
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "get_option"
    fully_qualified_name: "optparse.OptionContainer.get_option"
    return_annotation {
      pretty_printed_name: "Union[optparse.Option,None]"
      kind: UNION
      args {
        pretty_printed_name: "optparse.Option"
        fully_qualified_name: "optparse.Option"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.OptionContainer"
        fully_qualified_name: "optparse.OptionContainer"
      }
    }
    parameters {
      name: "opt_str"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.unicode]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.unicode"
            fully_qualified_name: "builtins.unicode"
          }
        }
        fully_qualified_name: "optparse._Text"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "get_option"
    fully_qualified_name: "optparse.OptionContainer.get_option"
    return_annotation {
      pretty_printed_name: "Union[optparse.Option,None]"
      kind: UNION
      args {
        pretty_printed_name: "optparse.Option"
        fully_qualified_name: "optparse.Option"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.OptionContainer"
        fully_qualified_name: "optparse.OptionContainer"
      }
    }
    parameters {
      name: "opt_str"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "has_option"
    fully_qualified_name: "optparse.OptionContainer.has_option"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.OptionContainer"
        fully_qualified_name: "optparse.OptionContainer"
      }
    }
    parameters {
      name: "opt_str"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.unicode]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.unicode"
            fully_qualified_name: "builtins.unicode"
          }
        }
        fully_qualified_name: "optparse._Text"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "has_option"
    fully_qualified_name: "optparse.OptionContainer.has_option"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.OptionContainer"
        fully_qualified_name: "optparse.OptionContainer"
      }
    }
    parameters {
      name: "opt_str"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "remove_option"
    fully_qualified_name: "optparse.OptionContainer.remove_option"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.OptionContainer"
        fully_qualified_name: "optparse.OptionContainer"
      }
    }
    parameters {
      name: "opt_str"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.unicode]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.unicode"
            fully_qualified_name: "builtins.unicode"
          }
        }
        fully_qualified_name: "optparse._Text"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "remove_option"
    fully_qualified_name: "optparse.OptionContainer.remove_option"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.OptionContainer"
        fully_qualified_name: "optparse.OptionContainer"
      }
    }
    parameters {
      name: "opt_str"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "set_conflict_handler"
    fully_qualified_name: "optparse.OptionContainer.set_conflict_handler"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.OptionContainer"
        fully_qualified_name: "optparse.OptionContainer"
      }
    }
    parameters {
      name: "handler"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "set_description"
    fully_qualified_name: "optparse.OptionContainer.set_description"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.OptionContainer"
        fully_qualified_name: "optparse.OptionContainer"
      }
    }
    parameters {
      name: "description"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "add_option"
    fullname: "optparse.OptionContainer.add_option"
    definitions {
      name: "add_option"
      fully_qualified_name: "optparse.OptionContainer.add_option"
      return_annotation {
        pretty_printed_name: "optparse.Option"
        fully_qualified_name: "optparse.Option"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "optparse.OptionContainer"
          fully_qualified_name: "optparse.OptionContainer"
        }
      }
      parameters {
        name: "opt"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "optparse.Option"
          fully_qualified_name: "optparse.Option"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "add_option"
      fully_qualified_name: "optparse.OptionContainer.add_option"
      return_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "optparse.OptionContainer"
          fully_qualified_name: "optparse.OptionContainer"
        }
      }
      parameters {
        name: "args"
        kind: VAR_POSITIONAL
        type_annotation {
          pretty_printed_name: "Union[builtins.str,builtins.unicode,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.unicode"
            fully_qualified_name: "builtins.unicode"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      parameters {
        name: "kwargs"
        kind: VAR_KEYWORD
        type_annotation {
          pretty_printed_name: "Any"
          kind: ANY
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "27"
  }
  overloaded_methods {
    name: "add_option"
    fullname: "optparse.OptionContainer.add_option"
    definitions {
      name: "add_option"
      fully_qualified_name: "optparse.OptionContainer.add_option"
      return_annotation {
        pretty_printed_name: "optparse.Option"
        fully_qualified_name: "optparse.Option"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "optparse.OptionContainer"
          fully_qualified_name: "optparse.OptionContainer"
        }
      }
      parameters {
        name: "opt"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "optparse.Option"
          fully_qualified_name: "optparse.Option"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "add_option"
      fully_qualified_name: "optparse.OptionContainer.add_option"
      return_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "optparse.OptionContainer"
          fully_qualified_name: "optparse.OptionContainer"
        }
      }
      parameters {
        name: "args"
        kind: VAR_POSITIONAL
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      parameters {
        name: "kwargs"
        kind: VAR_KEYWORD
        type_annotation {
          pretty_printed_name: "Any"
          kind: ANY
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "_long_opt"
    fully_qualified_name: "optparse.OptionContainer._long_opt"
    type_annotation {
      pretty_printed_name: "builtins.dict[TypeAlias[Union[builtins.str,builtins.unicode]],optparse.Option]"
      args {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.unicode]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.unicode"
            fully_qualified_name: "builtins.unicode"
          }
        }
        fully_qualified_name: "optparse._Text"
      }
      args {
        pretty_printed_name: "optparse.Option"
        fully_qualified_name: "optparse.Option"
      }
      fully_qualified_name: "builtins.dict"
    }
    valid_for: "27"
  }
  attributes {
    name: "_long_opt"
    fully_qualified_name: "optparse.OptionContainer._long_opt"
    type_annotation {
      pretty_printed_name: "builtins.dict[builtins.str,optparse.Option]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "optparse.Option"
        fully_qualified_name: "optparse.Option"
      }
      fully_qualified_name: "builtins.dict"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "_short_opt"
    fully_qualified_name: "optparse.OptionContainer._short_opt"
    type_annotation {
      pretty_printed_name: "builtins.dict[TypeAlias[Union[builtins.str,builtins.unicode]],optparse.Option]"
      args {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.unicode]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.unicode"
            fully_qualified_name: "builtins.unicode"
          }
        }
        fully_qualified_name: "optparse._Text"
      }
      args {
        pretty_printed_name: "optparse.Option"
        fully_qualified_name: "optparse.Option"
      }
      fully_qualified_name: "builtins.dict"
    }
    valid_for: "27"
  }
  attributes {
    name: "_short_opt"
    fully_qualified_name: "optparse.OptionContainer._short_opt"
    type_annotation {
      pretty_printed_name: "builtins.dict[builtins.str,optparse.Option]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "optparse.Option"
        fully_qualified_name: "optparse.Option"
      }
      fully_qualified_name: "builtins.dict"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "conflict_handler"
    fully_qualified_name: "optparse.OptionContainer.conflict_handler"
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.unicode]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.unicode"
          fully_qualified_name: "builtins.unicode"
        }
      }
      fully_qualified_name: "optparse._Text"
    }
    valid_for: "27"
  }
  attributes {
    name: "conflict_handler"
    fully_qualified_name: "optparse.OptionContainer.conflict_handler"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "defaults"
    fully_qualified_name: "optparse.OptionContainer.defaults"
    type_annotation {
      pretty_printed_name: "builtins.dict[TypeAlias[Union[builtins.str,builtins.unicode]],Any]"
      args {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.unicode]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.unicode"
            fully_qualified_name: "builtins.unicode"
          }
        }
        fully_qualified_name: "optparse._Text"
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "builtins.dict"
    }
    valid_for: "27"
  }
  attributes {
    name: "defaults"
    fully_qualified_name: "optparse.OptionContainer.defaults"
    type_annotation {
      pretty_printed_name: "builtins.dict[builtins.str,Any]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "builtins.dict"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "description"
    fully_qualified_name: "optparse.OptionContainer.description"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "option_class"
    fully_qualified_name: "optparse.OptionContainer.option_class"
    type_annotation {
      pretty_printed_name: "Type[optparse.Option]"
      kind: TYPE
      args {
        pretty_printed_name: "optparse.Option"
        fully_qualified_name: "optparse.Option"
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "OptionGroup"
  fully_qualified_name: "optparse.OptionGroup"
  super_classes: "optparse.OptionContainer"
  methods {
    name: "__init__"
    fully_qualified_name: "optparse.OptionGroup.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.OptionGroup"
        fully_qualified_name: "optparse.OptionGroup"
      }
    }
    parameters {
      name: "parser"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.OptionParser"
        fully_qualified_name: "optparse.OptionParser"
      }
    }
    parameters {
      name: "title"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.unicode]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.unicode"
            fully_qualified_name: "builtins.unicode"
          }
        }
        fully_qualified_name: "optparse._Text"
      }
    }
    parameters {
      name: "description"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,builtins.unicode,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.unicode"
          fully_qualified_name: "builtins.unicode"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "__init__"
    fully_qualified_name: "optparse.OptionGroup.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.OptionGroup"
        fully_qualified_name: "optparse.OptionGroup"
      }
    }
    parameters {
      name: "parser"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.OptionParser"
        fully_qualified_name: "optparse.OptionParser"
      }
    }
    parameters {
      name: "title"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "description"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "_create_option_list"
    fully_qualified_name: "optparse.OptionGroup._create_option_list"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.OptionGroup"
        fully_qualified_name: "optparse.OptionGroup"
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "set_title"
    fully_qualified_name: "optparse.OptionGroup.set_title"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.OptionGroup"
        fully_qualified_name: "optparse.OptionGroup"
      }
    }
    parameters {
      name: "title"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.unicode]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.unicode"
            fully_qualified_name: "builtins.unicode"
          }
        }
        fully_qualified_name: "optparse._Text"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "set_title"
    fully_qualified_name: "optparse.OptionGroup.set_title"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.OptionGroup"
        fully_qualified_name: "optparse.OptionGroup"
      }
    }
    parameters {
      name: "title"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "option_list"
    fully_qualified_name: "optparse.OptionGroup.option_list"
    type_annotation {
      pretty_printed_name: "builtins.list[optparse.Option]"
      args {
        pretty_printed_name: "optparse.Option"
        fully_qualified_name: "optparse.Option"
      }
      fully_qualified_name: "builtins.list"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "parser"
    fully_qualified_name: "optparse.OptionGroup.parser"
    type_annotation {
      pretty_printed_name: "optparse.OptionParser"
      fully_qualified_name: "optparse.OptionParser"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "title"
    fully_qualified_name: "optparse.OptionGroup.title"
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.unicode]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.unicode"
          fully_qualified_name: "builtins.unicode"
        }
      }
      fully_qualified_name: "optparse._Text"
    }
    valid_for: "27"
  }
  attributes {
    name: "title"
    fully_qualified_name: "optparse.OptionGroup.title"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "Values"
  fully_qualified_name: "optparse.Values"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "optparse.Values.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.Values"
        fully_qualified_name: "optparse.Values"
      }
    }
    parameters {
      name: "defaults"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.Mapping[builtins.str,Any],None]"
        kind: UNION
        args {
          pretty_printed_name: "typing.Mapping[builtins.str,Any]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "typing.Mapping"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "_update"
    fully_qualified_name: "optparse.Values._update"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.Values"
        fully_qualified_name: "optparse.Values"
      }
    }
    parameters {
      name: "dict"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Mapping[TypeAlias[Union[builtins.str,builtins.unicode]],Any]"
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.unicode]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.unicode"
              fully_qualified_name: "builtins.unicode"
            }
          }
          fully_qualified_name: "optparse._Text"
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "typing.Mapping"
      }
    }
    parameters {
      name: "mode"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "27"
  }
  methods {
    name: "_update"
    fully_qualified_name: "optparse.Values._update"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.Values"
        fully_qualified_name: "optparse.Values"
      }
    }
    parameters {
      name: "dict"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Mapping[builtins.str,Any]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "typing.Mapping"
      }
    }
    parameters {
      name: "mode"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "_update_careful"
    fully_qualified_name: "optparse.Values._update_careful"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.Values"
        fully_qualified_name: "optparse.Values"
      }
    }
    parameters {
      name: "dict"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Mapping[TypeAlias[Union[builtins.str,builtins.unicode]],Any]"
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.unicode]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.unicode"
              fully_qualified_name: "builtins.unicode"
            }
          }
          fully_qualified_name: "optparse._Text"
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "typing.Mapping"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "_update_careful"
    fully_qualified_name: "optparse.Values._update_careful"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.Values"
        fully_qualified_name: "optparse.Values"
      }
    }
    parameters {
      name: "dict"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Mapping[builtins.str,Any]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "typing.Mapping"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "_update_loose"
    fully_qualified_name: "optparse.Values._update_loose"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.Values"
        fully_qualified_name: "optparse.Values"
      }
    }
    parameters {
      name: "dict"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Mapping[TypeAlias[Union[builtins.str,builtins.unicode]],Any]"
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.unicode]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.unicode"
              fully_qualified_name: "builtins.unicode"
            }
          }
          fully_qualified_name: "optparse._Text"
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "typing.Mapping"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "_update_loose"
    fully_qualified_name: "optparse.Values._update_loose"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.Values"
        fully_qualified_name: "optparse.Values"
      }
    }
    parameters {
      name: "dict"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Mapping[builtins.str,Any]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "typing.Mapping"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "ensure_value"
    fully_qualified_name: "optparse.Values.ensure_value"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.Values"
        fully_qualified_name: "optparse.Values"
      }
    }
    parameters {
      name: "attr"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.unicode]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.unicode"
            fully_qualified_name: "builtins.unicode"
          }
        }
        fully_qualified_name: "optparse._Text"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "27"
  }
  methods {
    name: "ensure_value"
    fully_qualified_name: "optparse.Values.ensure_value"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.Values"
        fully_qualified_name: "optparse.Values"
      }
    }
    parameters {
      name: "attr"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "read_file"
    fully_qualified_name: "optparse.Values.read_file"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.Values"
        fully_qualified_name: "optparse.Values"
      }
    }
    parameters {
      name: "filename"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.unicode]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.unicode"
            fully_qualified_name: "builtins.unicode"
          }
        }
        fully_qualified_name: "optparse._Text"
      }
    }
    parameters {
      name: "mode"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.unicode]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.unicode"
            fully_qualified_name: "builtins.unicode"
          }
        }
        fully_qualified_name: "optparse._Text"
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "read_file"
    fully_qualified_name: "optparse.Values.read_file"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.Values"
        fully_qualified_name: "optparse.Values"
      }
    }
    parameters {
      name: "filename"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "mode"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "read_module"
    fully_qualified_name: "optparse.Values.read_module"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.Values"
        fully_qualified_name: "optparse.Values"
      }
    }
    parameters {
      name: "modname"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.unicode]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.unicode"
            fully_qualified_name: "builtins.unicode"
          }
        }
        fully_qualified_name: "optparse._Text"
      }
    }
    parameters {
      name: "mode"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.unicode]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.unicode"
            fully_qualified_name: "builtins.unicode"
          }
        }
        fully_qualified_name: "optparse._Text"
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "read_module"
    fully_qualified_name: "optparse.Values.read_module"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.Values"
        fully_qualified_name: "optparse.Values"
      }
    }
    parameters {
      name: "modname"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "mode"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__getattr__"
    fully_qualified_name: "optparse.Values.__getattr__"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "optparse.Values"
        fully_qualified_name: "optparse.Values"
      }
    }
    parameters {
      name: "name"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__setattr__"
    fully_qualified_name: "optparse.Values.__setattr__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "optparse.Values"
        fully_qualified_name: "optparse.Values"
      }
    }
    parameters {
      name: "name"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "value"
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "OptionParser"
  fully_qualified_name: "optparse.OptionParser"
  super_classes: "optparse.OptionContainer"
  methods {
    name: "__init__"
    fully_qualified_name: "optparse.OptionParser.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.OptionParser"
        fully_qualified_name: "optparse.OptionParser"
      }
    }
    parameters {
      name: "usage"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,builtins.unicode,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.unicode"
          fully_qualified_name: "builtins.unicode"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "option_list"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.Iterable[optparse.Option],None]"
        kind: UNION
        args {
          pretty_printed_name: "typing.Iterable[optparse.Option]"
          args {
            pretty_printed_name: "optparse.Option"
            fully_qualified_name: "optparse.Option"
          }
          fully_qualified_name: "typing.Iterable"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "option_class"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[optparse.Option]"
        kind: TYPE
        args {
          pretty_printed_name: "optparse.Option"
          fully_qualified_name: "optparse.Option"
        }
      }
      has_default: true
    }
    parameters {
      name: "version"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,builtins.unicode,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.unicode"
          fully_qualified_name: "builtins.unicode"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "conflict_handler"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.unicode]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.unicode"
            fully_qualified_name: "builtins.unicode"
          }
        }
        fully_qualified_name: "optparse._Text"
      }
      has_default: true
    }
    parameters {
      name: "description"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,builtins.unicode,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.unicode"
          fully_qualified_name: "builtins.unicode"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "formatter"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[optparse.HelpFormatter,None]"
        kind: UNION
        args {
          pretty_printed_name: "optparse.HelpFormatter"
          fully_qualified_name: "optparse.HelpFormatter"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "add_help_option"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    parameters {
      name: "prog"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,builtins.unicode,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.unicode"
          fully_qualified_name: "builtins.unicode"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "epilog"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,builtins.unicode,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.unicode"
          fully_qualified_name: "builtins.unicode"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "__init__"
    fully_qualified_name: "optparse.OptionParser.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.OptionParser"
        fully_qualified_name: "optparse.OptionParser"
      }
    }
    parameters {
      name: "usage"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "option_list"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.Iterable[optparse.Option],None]"
        kind: UNION
        args {
          pretty_printed_name: "typing.Iterable[optparse.Option]"
          args {
            pretty_printed_name: "optparse.Option"
            fully_qualified_name: "optparse.Option"
          }
          fully_qualified_name: "typing.Iterable"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "option_class"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[optparse.Option]"
        kind: TYPE
        args {
          pretty_printed_name: "optparse.Option"
          fully_qualified_name: "optparse.Option"
        }
      }
      has_default: true
    }
    parameters {
      name: "version"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "conflict_handler"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      has_default: true
    }
    parameters {
      name: "description"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "formatter"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[optparse.HelpFormatter,None]"
        kind: UNION
        args {
          pretty_printed_name: "optparse.HelpFormatter"
          fully_qualified_name: "optparse.HelpFormatter"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "add_help_option"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    parameters {
      name: "prog"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "epilog"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "_add_help_option"
    fully_qualified_name: "optparse.OptionParser._add_help_option"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.OptionParser"
        fully_qualified_name: "optparse.OptionParser"
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "_add_version_option"
    fully_qualified_name: "optparse.OptionParser._add_version_option"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.OptionParser"
        fully_qualified_name: "optparse.OptionParser"
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "_create_option_list"
    fully_qualified_name: "optparse.OptionParser._create_option_list"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.OptionParser"
        fully_qualified_name: "optparse.OptionParser"
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "_get_all_options"
    fully_qualified_name: "optparse.OptionParser._get_all_options"
    return_annotation {
      pretty_printed_name: "builtins.list[optparse.Option]"
      args {
        pretty_printed_name: "optparse.Option"
        fully_qualified_name: "optparse.Option"
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.OptionParser"
        fully_qualified_name: "optparse.OptionParser"
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "_get_args"
    fully_qualified_name: "optparse.OptionParser._get_args"
    return_annotation {
      pretty_printed_name: "builtins.list[Any]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.OptionParser"
        fully_qualified_name: "optparse.OptionParser"
      }
    }
    parameters {
      name: "args"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "_init_parsing_state"
    fully_qualified_name: "optparse.OptionParser._init_parsing_state"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.OptionParser"
        fully_qualified_name: "optparse.OptionParser"
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "_match_long_opt"
    fully_qualified_name: "optparse.OptionParser._match_long_opt"
    return_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.unicode]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.unicode"
          fully_qualified_name: "builtins.unicode"
        }
      }
      fully_qualified_name: "optparse._Text"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.OptionParser"
        fully_qualified_name: "optparse.OptionParser"
      }
    }
    parameters {
      name: "opt"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.unicode]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.unicode"
            fully_qualified_name: "builtins.unicode"
          }
        }
        fully_qualified_name: "optparse._Text"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "_match_long_opt"
    fully_qualified_name: "optparse.OptionParser._match_long_opt"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.OptionParser"
        fully_qualified_name: "optparse.OptionParser"
      }
    }
    parameters {
      name: "opt"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "_populate_option_list"
    fully_qualified_name: "optparse.OptionParser._populate_option_list"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.OptionParser"
        fully_qualified_name: "optparse.OptionParser"
      }
    }
    parameters {
      name: "option_list"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[optparse.Option]"
        args {
          pretty_printed_name: "optparse.Option"
          fully_qualified_name: "optparse.Option"
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    parameters {
      name: "add_help"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "_process_args"
    fully_qualified_name: "optparse.OptionParser._process_args"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.OptionParser"
        fully_qualified_name: "optparse.OptionParser"
      }
    }
    parameters {
      name: "largs"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.list[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "builtins.list"
      }
    }
    parameters {
      name: "rargs"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.list[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "builtins.list"
      }
    }
    parameters {
      name: "values"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.Values"
        fully_qualified_name: "optparse.Values"
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "_process_long_opt"
    fully_qualified_name: "optparse.OptionParser._process_long_opt"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.OptionParser"
        fully_qualified_name: "optparse.OptionParser"
      }
    }
    parameters {
      name: "rargs"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.list[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "builtins.list"
      }
    }
    parameters {
      name: "values"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "_process_short_opts"
    fully_qualified_name: "optparse.OptionParser._process_short_opts"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.OptionParser"
        fully_qualified_name: "optparse.OptionParser"
      }
    }
    parameters {
      name: "rargs"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.list[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "builtins.list"
      }
    }
    parameters {
      name: "values"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "check_values"
    fully_qualified_name: "optparse.OptionParser.check_values"
    return_annotation {
      pretty_printed_name: "Tuple[optparse.Values,builtins.list[TypeAlias[Union[builtins.str,builtins.unicode]]]]"
      kind: TUPLE
      args {
        pretty_printed_name: "optparse.Values"
        fully_qualified_name: "optparse.Values"
      }
      args {
        pretty_printed_name: "builtins.list[TypeAlias[Union[builtins.str,builtins.unicode]]]"
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.unicode]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.unicode"
              fully_qualified_name: "builtins.unicode"
            }
          }
          fully_qualified_name: "optparse._Text"
        }
        fully_qualified_name: "builtins.list"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.OptionParser"
        fully_qualified_name: "optparse.OptionParser"
      }
    }
    parameters {
      name: "values"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.Values"
        fully_qualified_name: "optparse.Values"
      }
    }
    parameters {
      name: "args"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.list[TypeAlias[Union[builtins.str,builtins.unicode]]]"
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.unicode]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.unicode"
              fully_qualified_name: "builtins.unicode"
            }
          }
          fully_qualified_name: "optparse._Text"
        }
        fully_qualified_name: "builtins.list"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "check_values"
    fully_qualified_name: "optparse.OptionParser.check_values"
    return_annotation {
      pretty_printed_name: "Tuple[optparse.Values,builtins.list[builtins.str]]"
      kind: TUPLE
      args {
        pretty_printed_name: "optparse.Values"
        fully_qualified_name: "optparse.Values"
      }
      args {
        pretty_printed_name: "builtins.list[builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "builtins.list"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.OptionParser"
        fully_qualified_name: "optparse.OptionParser"
      }
    }
    parameters {
      name: "values"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.Values"
        fully_qualified_name: "optparse.Values"
      }
    }
    parameters {
      name: "args"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.list[builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "builtins.list"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "disable_interspersed_args"
    fully_qualified_name: "optparse.OptionParser.disable_interspersed_args"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.OptionParser"
        fully_qualified_name: "optparse.OptionParser"
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "enable_interspersed_args"
    fully_qualified_name: "optparse.OptionParser.enable_interspersed_args"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.OptionParser"
        fully_qualified_name: "optparse.OptionParser"
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "error"
    fully_qualified_name: "optparse.OptionParser.error"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.OptionParser"
        fully_qualified_name: "optparse.OptionParser"
      }
    }
    parameters {
      name: "msg"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.unicode]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.unicode"
            fully_qualified_name: "builtins.unicode"
          }
        }
        fully_qualified_name: "optparse._Text"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "error"
    fully_qualified_name: "optparse.OptionParser.error"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.OptionParser"
        fully_qualified_name: "optparse.OptionParser"
      }
    }
    parameters {
      name: "msg"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "exit"
    fully_qualified_name: "optparse.OptionParser.exit"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.OptionParser"
        fully_qualified_name: "optparse.OptionParser"
      }
    }
    parameters {
      name: "status"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    parameters {
      name: "msg"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "expand_prog_name"
    fully_qualified_name: "optparse.OptionParser.expand_prog_name"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.OptionParser"
        fully_qualified_name: "optparse.OptionParser"
      }
    }
    parameters {
      name: "s"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,builtins.unicode,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.unicode"
          fully_qualified_name: "builtins.unicode"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    valid_for: "27"
  }
  methods {
    name: "expand_prog_name"
    fully_qualified_name: "optparse.OptionParser.expand_prog_name"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.OptionParser"
        fully_qualified_name: "optparse.OptionParser"
      }
    }
    parameters {
      name: "s"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "format_epilog"
    fully_qualified_name: "optparse.OptionParser.format_epilog"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.OptionParser"
        fully_qualified_name: "optparse.OptionParser"
      }
    }
    parameters {
      name: "formatter"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.HelpFormatter"
        fully_qualified_name: "optparse.HelpFormatter"
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "format_help"
    fully_qualified_name: "optparse.OptionParser.format_help"
    return_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.unicode]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.unicode"
          fully_qualified_name: "builtins.unicode"
        }
      }
      fully_qualified_name: "optparse._Text"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.OptionParser"
        fully_qualified_name: "optparse.OptionParser"
      }
    }
    parameters {
      name: "formatter"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[optparse.HelpFormatter,None]"
        kind: UNION
        args {
          pretty_printed_name: "optparse.HelpFormatter"
          fully_qualified_name: "optparse.HelpFormatter"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "format_help"
    fully_qualified_name: "optparse.OptionParser.format_help"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.OptionParser"
        fully_qualified_name: "optparse.OptionParser"
      }
    }
    parameters {
      name: "formatter"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[optparse.HelpFormatter,None]"
        kind: UNION
        args {
          pretty_printed_name: "optparse.HelpFormatter"
          fully_qualified_name: "optparse.HelpFormatter"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "format_option_help"
    fully_qualified_name: "optparse.OptionParser.format_option_help"
    return_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.unicode]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.unicode"
          fully_qualified_name: "builtins.unicode"
        }
      }
      fully_qualified_name: "optparse._Text"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.OptionParser"
        fully_qualified_name: "optparse.OptionParser"
      }
    }
    parameters {
      name: "formatter"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[optparse.HelpFormatter,None]"
        kind: UNION
        args {
          pretty_printed_name: "optparse.HelpFormatter"
          fully_qualified_name: "optparse.HelpFormatter"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "format_option_help"
    fully_qualified_name: "optparse.OptionParser.format_option_help"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.OptionParser"
        fully_qualified_name: "optparse.OptionParser"
      }
    }
    parameters {
      name: "formatter"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[optparse.HelpFormatter,None]"
        kind: UNION
        args {
          pretty_printed_name: "optparse.HelpFormatter"
          fully_qualified_name: "optparse.HelpFormatter"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "get_default_values"
    fully_qualified_name: "optparse.OptionParser.get_default_values"
    return_annotation {
      pretty_printed_name: "optparse.Values"
      fully_qualified_name: "optparse.Values"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.OptionParser"
        fully_qualified_name: "optparse.OptionParser"
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "get_option_group"
    fully_qualified_name: "optparse.OptionParser.get_option_group"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.OptionParser"
        fully_qualified_name: "optparse.OptionParser"
      }
    }
    parameters {
      name: "opt_str"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.unicode]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.unicode"
            fully_qualified_name: "builtins.unicode"
          }
        }
        fully_qualified_name: "optparse._Text"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "get_option_group"
    fully_qualified_name: "optparse.OptionParser.get_option_group"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.OptionParser"
        fully_qualified_name: "optparse.OptionParser"
      }
    }
    parameters {
      name: "opt_str"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "get_prog_name"
    fully_qualified_name: "optparse.OptionParser.get_prog_name"
    return_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.unicode]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.unicode"
          fully_qualified_name: "builtins.unicode"
        }
      }
      fully_qualified_name: "optparse._Text"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.OptionParser"
        fully_qualified_name: "optparse.OptionParser"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "get_prog_name"
    fully_qualified_name: "optparse.OptionParser.get_prog_name"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.OptionParser"
        fully_qualified_name: "optparse.OptionParser"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "get_usage"
    fully_qualified_name: "optparse.OptionParser.get_usage"
    return_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.unicode]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.unicode"
          fully_qualified_name: "builtins.unicode"
        }
      }
      fully_qualified_name: "optparse._Text"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.OptionParser"
        fully_qualified_name: "optparse.OptionParser"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "get_usage"
    fully_qualified_name: "optparse.OptionParser.get_usage"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.OptionParser"
        fully_qualified_name: "optparse.OptionParser"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "get_version"
    fully_qualified_name: "optparse.OptionParser.get_version"
    return_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.unicode]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.unicode"
          fully_qualified_name: "builtins.unicode"
        }
      }
      fully_qualified_name: "optparse._Text"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.OptionParser"
        fully_qualified_name: "optparse.OptionParser"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "get_version"
    fully_qualified_name: "optparse.OptionParser.get_version"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.OptionParser"
        fully_qualified_name: "optparse.OptionParser"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "parse_args"
    fully_qualified_name: "optparse.OptionParser.parse_args"
    return_annotation {
      pretty_printed_name: "Tuple[optparse.Values,builtins.list[typing.AnyStr]]"
      kind: TUPLE
      args {
        pretty_printed_name: "optparse.Values"
        fully_qualified_name: "optparse.Values"
      }
      args {
        pretty_printed_name: "builtins.list[typing.AnyStr]"
        args {
          pretty_printed_name: "typing.AnyStr"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.list"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.OptionParser"
        fully_qualified_name: "optparse.OptionParser"
      }
    }
    parameters {
      name: "args"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.Sequence[typing.AnyStr],None]"
        kind: UNION
        args {
          pretty_printed_name: "typing.Sequence[typing.AnyStr]"
          args {
            pretty_printed_name: "typing.AnyStr"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Sequence"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "values"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[optparse.Values,None]"
        kind: UNION
        args {
          pretty_printed_name: "optparse.Values"
          fully_qualified_name: "optparse.Values"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "print_usage"
    fully_qualified_name: "optparse.OptionParser.print_usage"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.OptionParser"
        fully_qualified_name: "optparse.OptionParser"
      }
    }
    parameters {
      name: "file"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.IO[builtins.str],None]"
        kind: UNION
        args {
          pretty_printed_name: "typing.IO[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "typing.IO"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "print_help"
    fully_qualified_name: "optparse.OptionParser.print_help"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.OptionParser"
        fully_qualified_name: "optparse.OptionParser"
      }
    }
    parameters {
      name: "file"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.IO[builtins.str],None]"
        kind: UNION
        args {
          pretty_printed_name: "typing.IO[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "typing.IO"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "print_version"
    fully_qualified_name: "optparse.OptionParser.print_version"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.OptionParser"
        fully_qualified_name: "optparse.OptionParser"
      }
    }
    parameters {
      name: "file"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.IO[builtins.str],None]"
        kind: UNION
        args {
          pretty_printed_name: "typing.IO[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "typing.IO"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "set_default"
    fully_qualified_name: "optparse.OptionParser.set_default"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.OptionParser"
        fully_qualified_name: "optparse.OptionParser"
      }
    }
    parameters {
      name: "dest"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "set_defaults"
    fully_qualified_name: "optparse.OptionParser.set_defaults"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.OptionParser"
        fully_qualified_name: "optparse.OptionParser"
      }
    }
    parameters {
      name: "kwargs"
      kind: VAR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "set_process_default_values"
    fully_qualified_name: "optparse.OptionParser.set_process_default_values"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.OptionParser"
        fully_qualified_name: "optparse.OptionParser"
      }
    }
    parameters {
      name: "process"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "set_usage"
    fully_qualified_name: "optparse.OptionParser.set_usage"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.OptionParser"
        fully_qualified_name: "optparse.OptionParser"
      }
    }
    parameters {
      name: "usage"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.unicode]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.unicode"
            fully_qualified_name: "builtins.unicode"
          }
        }
        fully_qualified_name: "optparse._Text"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "set_usage"
    fully_qualified_name: "optparse.OptionParser.set_usage"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "optparse.OptionParser"
        fully_qualified_name: "optparse.OptionParser"
      }
    }
    parameters {
      name: "usage"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "add_option_group"
    fullname: "optparse.OptionParser.add_option_group"
    definitions {
      name: "add_option_group"
      fully_qualified_name: "optparse.OptionParser.add_option_group"
      return_annotation {
        pretty_printed_name: "optparse.OptionGroup"
        fully_qualified_name: "optparse.OptionGroup"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "optparse.OptionParser"
          fully_qualified_name: "optparse.OptionParser"
        }
      }
      parameters {
        name: "__opt_group"
        type_annotation {
          pretty_printed_name: "optparse.OptionGroup"
          fully_qualified_name: "optparse.OptionGroup"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "add_option_group"
      fully_qualified_name: "optparse.OptionParser.add_option_group"
      return_annotation {
        pretty_printed_name: "optparse.OptionGroup"
        fully_qualified_name: "optparse.OptionGroup"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "optparse.OptionParser"
          fully_qualified_name: "optparse.OptionParser"
        }
      }
      parameters {
        name: "args"
        kind: VAR_POSITIONAL
        type_annotation {
          pretty_printed_name: "Any"
          kind: ANY
        }
      }
      parameters {
        name: "kwargs"
        kind: VAR_KEYWORD
        type_annotation {
          pretty_printed_name: "Any"
          kind: ANY
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "allow_interspersed_args"
    fully_qualified_name: "optparse.OptionParser.allow_interspersed_args"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "epilog"
    fully_qualified_name: "optparse.OptionParser.epilog"
    type_annotation {
      pretty_printed_name: "Union[builtins.str,builtins.unicode,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.unicode"
        fully_qualified_name: "builtins.unicode"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "27"
  }
  attributes {
    name: "epilog"
    fully_qualified_name: "optparse.OptionParser.epilog"
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "formatter"
    fully_qualified_name: "optparse.OptionParser.formatter"
    type_annotation {
      pretty_printed_name: "optparse.HelpFormatter"
      fully_qualified_name: "optparse.HelpFormatter"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "largs"
    fully_qualified_name: "optparse.OptionParser.largs"
    type_annotation {
      pretty_printed_name: "Union[builtins.list[TypeAlias[Union[builtins.str,builtins.unicode]]],None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.list[TypeAlias[Union[builtins.str,builtins.unicode]]]"
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.unicode]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.unicode"
              fully_qualified_name: "builtins.unicode"
            }
          }
          fully_qualified_name: "optparse._Text"
        }
        fully_qualified_name: "builtins.list"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "27"
  }
  attributes {
    name: "largs"
    fully_qualified_name: "optparse.OptionParser.largs"
    type_annotation {
      pretty_printed_name: "Union[builtins.list[builtins.str],None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.list[builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "builtins.list"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "option_groups"
    fully_qualified_name: "optparse.OptionParser.option_groups"
    type_annotation {
      pretty_printed_name: "builtins.list[optparse.OptionGroup]"
      args {
        pretty_printed_name: "optparse.OptionGroup"
        fully_qualified_name: "optparse.OptionGroup"
      }
      fully_qualified_name: "builtins.list"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "option_list"
    fully_qualified_name: "optparse.OptionParser.option_list"
    type_annotation {
      pretty_printed_name: "builtins.list[optparse.Option]"
      args {
        pretty_printed_name: "optparse.Option"
        fully_qualified_name: "optparse.Option"
      }
      fully_qualified_name: "builtins.list"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "process_default_values"
    fully_qualified_name: "optparse.OptionParser.process_default_values"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "prog"
    fully_qualified_name: "optparse.OptionParser.prog"
    type_annotation {
      pretty_printed_name: "Union[builtins.str,builtins.unicode,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.unicode"
        fully_qualified_name: "builtins.unicode"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "27"
  }
  attributes {
    name: "prog"
    fully_qualified_name: "optparse.OptionParser.prog"
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "rargs"
    fully_qualified_name: "optparse.OptionParser.rargs"
    type_annotation {
      pretty_printed_name: "Union[builtins.list[Any],None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.list[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "builtins.list"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "standard_option_list"
    fully_qualified_name: "optparse.OptionParser.standard_option_list"
    type_annotation {
      pretty_printed_name: "builtins.list[optparse.Option]"
      args {
        pretty_printed_name: "optparse.Option"
        fully_qualified_name: "optparse.Option"
      }
      fully_qualified_name: "builtins.list"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "usage"
    fully_qualified_name: "optparse.OptionParser.usage"
    type_annotation {
      pretty_printed_name: "Union[builtins.str,builtins.unicode,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.unicode"
        fully_qualified_name: "builtins.unicode"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "27"
  }
  attributes {
    name: "usage"
    fully_qualified_name: "optparse.OptionParser.usage"
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "values"
    fully_qualified_name: "optparse.OptionParser.values"
    type_annotation {
      pretty_printed_name: "Union[optparse.Values,None]"
      kind: UNION
      args {
        pretty_printed_name: "optparse.Values"
        fully_qualified_name: "optparse.Values"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "version"
    fully_qualified_name: "optparse.OptionParser.version"
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.unicode]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.unicode"
          fully_qualified_name: "builtins.unicode"
        }
      }
      fully_qualified_name: "optparse._Text"
    }
    valid_for: "27"
  }
  attributes {
    name: "version"
    fully_qualified_name: "optparse.OptionParser.version"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
functions {
  name: "check_builtin"
  fully_qualified_name: "optparse.check_builtin"
  return_annotation {
    pretty_printed_name: "Any"
    kind: ANY
  }
  parameters {
    name: "option"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "optparse.Option"
      fully_qualified_name: "optparse.Option"
    }
  }
  parameters {
    name: "opt"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  parameters {
    name: "value"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.unicode]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.unicode"
          fully_qualified_name: "builtins.unicode"
        }
      }
      fully_qualified_name: "optparse._Text"
    }
  }
  valid_for: "27"
}
functions {
  name: "check_builtin"
  fully_qualified_name: "optparse.check_builtin"
  return_annotation {
    pretty_printed_name: "Any"
    kind: ANY
  }
  parameters {
    name: "option"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "optparse.Option"
      fully_qualified_name: "optparse.Option"
    }
  }
  parameters {
    name: "opt"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  parameters {
    name: "value"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "check_choice"
  fully_qualified_name: "optparse.check_choice"
  return_annotation {
    pretty_printed_name: "Any"
    kind: ANY
  }
  parameters {
    name: "option"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "optparse.Option"
      fully_qualified_name: "optparse.Option"
    }
  }
  parameters {
    name: "opt"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  parameters {
    name: "value"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.unicode]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.unicode"
          fully_qualified_name: "builtins.unicode"
        }
      }
      fully_qualified_name: "optparse._Text"
    }
  }
  valid_for: "27"
}
functions {
  name: "check_choice"
  fully_qualified_name: "optparse.check_choice"
  return_annotation {
    pretty_printed_name: "Any"
    kind: ANY
  }
  parameters {
    name: "option"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "optparse.Option"
      fully_qualified_name: "optparse.Option"
    }
  }
  parameters {
    name: "opt"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  parameters {
    name: "value"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "isbasestring"
  fully_qualified_name: "optparse.isbasestring"
  return_annotation {
    pretty_printed_name: "builtins.bool"
    fully_qualified_name: "builtins.bool"
  }
  parameters {
    name: "x"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  valid_for: "27"
}
vars {
  name: "NO_DEFAULT"
  fully_qualified_name: "optparse.NO_DEFAULT"
  type_annotation {
    pretty_printed_name: "builtins.tuple[TypeAlias[Union[builtins.str,builtins.unicode]]]"
    args {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.unicode]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.unicode"
          fully_qualified_name: "builtins.unicode"
        }
      }
      fully_qualified_name: "optparse._Text"
    }
    fully_qualified_name: "builtins.tuple"
  }
  valid_for: "27"
}
vars {
  name: "NO_DEFAULT"
  fully_qualified_name: "optparse.NO_DEFAULT"
  type_annotation {
    pretty_printed_name: "builtins.tuple[builtins.str]"
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    fully_qualified_name: "builtins.tuple"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "SUPPRESS_HELP"
  fully_qualified_name: "optparse.SUPPRESS_HELP"
  type_annotation {
    pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode]]"
    kind: TYPE_ALIAS
    args {
      pretty_printed_name: "Union[builtins.str,builtins.unicode]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.unicode"
        fully_qualified_name: "builtins.unicode"
      }
    }
    fully_qualified_name: "optparse._Text"
  }
  valid_for: "27"
}
vars {
  name: "SUPPRESS_HELP"
  fully_qualified_name: "optparse.SUPPRESS_HELP"
  type_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "SUPPRESS_USAGE"
  fully_qualified_name: "optparse.SUPPRESS_USAGE"
  type_annotation {
    pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode]]"
    kind: TYPE_ALIAS
    args {
      pretty_printed_name: "Union[builtins.str,builtins.unicode]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.unicode"
        fully_qualified_name: "builtins.unicode"
      }
    }
    fully_qualified_name: "optparse._Text"
  }
  valid_for: "27"
}
vars {
  name: "SUPPRESS_USAGE"
  fully_qualified_name: "optparse.SUPPRESS_USAGE"
  type_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
