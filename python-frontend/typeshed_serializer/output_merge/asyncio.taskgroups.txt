fully_qualified_name: "asyncio.taskgroups"
classes {
  name: "TaskGroup"
  fully_qualified_name: "asyncio.taskgroups.TaskGroup"
  super_classes: "builtins.object"
  methods {
    name: "__aenter__"
    fully_qualified_name: "asyncio.taskgroups.TaskGroup.__aenter__"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,UnboundType[Self]]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "UnboundType[Self]"
        kind: UNBOUND
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.taskgroups.TaskGroup"
        fully_qualified_name: "asyncio.taskgroups.TaskGroup"
      }
    }
    is_asynchronous: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__aexit__"
    fully_qualified_name: "asyncio.taskgroups.TaskGroup.__aexit__"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,None]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.taskgroups.TaskGroup"
        fully_qualified_name: "asyncio.taskgroups.TaskGroup"
      }
    }
    parameters {
      name: "et"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.type,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.type"
          fully_qualified_name: "builtins.type"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "exc"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.BaseException,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.BaseException"
          fully_qualified_name: "builtins.BaseException"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "tb"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[types.TracebackType,None]"
        kind: UNION
        args {
          pretty_printed_name: "types.TracebackType"
          fully_qualified_name: "types.TracebackType"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    is_asynchronous: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
  }
  methods {
    name: "__aexit__"
    fully_qualified_name: "asyncio.taskgroups.TaskGroup.__aexit__"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,None]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.taskgroups.TaskGroup"
        fully_qualified_name: "asyncio.taskgroups.TaskGroup"
      }
    }
    parameters {
      name: "et"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Type[builtins.BaseException],None]"
        kind: UNION
        args {
          pretty_printed_name: "Type[builtins.BaseException]"
          kind: TYPE
          args {
            pretty_printed_name: "builtins.BaseException"
            fully_qualified_name: "builtins.BaseException"
          }
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "exc"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.BaseException,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.BaseException"
          fully_qualified_name: "builtins.BaseException"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "tb"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[types.TracebackType,None]"
        kind: UNION
        args {
          pretty_printed_name: "types.TracebackType"
          fully_qualified_name: "types.TracebackType"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    is_asynchronous: true
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "create_task"
    fully_qualified_name: "asyncio.taskgroups.TaskGroup.create_task"
    return_annotation {
      pretty_printed_name: "asyncio.tasks.Task[asyncio.taskgroups._T]"
      args {
        pretty_printed_name: "asyncio.taskgroups._T"
        kind: TYPE_VAR
      }
      fully_qualified_name: "asyncio.tasks.Task"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.taskgroups.TaskGroup"
        fully_qualified_name: "asyncio.taskgroups.TaskGroup"
      }
    }
    parameters {
      name: "coro"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.Generator[Any,None,asyncio.taskgroups._T],typing.Coroutine[Any,Any,asyncio.taskgroups._T]]"
        kind: UNION
        args {
          pretty_printed_name: "typing.Generator[Any,None,asyncio.taskgroups._T]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
          args {
            pretty_printed_name: "asyncio.taskgroups._T"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Generator"
        }
        args {
          pretty_printed_name: "typing.Coroutine[Any,Any,asyncio.taskgroups._T]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          args {
            pretty_printed_name: "asyncio.taskgroups._T"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Coroutine"
        }
      }
    }
    parameters {
      name: "name"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "context"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[contextvars.Context,None]"
        kind: UNION
        args {
          pretty_printed_name: "contextvars.Context"
          fully_qualified_name: "contextvars.Context"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "__all__"
  fully_qualified_name: "asyncio.taskgroups.__all__"
  type_annotation {
    pretty_printed_name: "builtins.list[builtins.str]"
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    fully_qualified_name: "builtins.list"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
