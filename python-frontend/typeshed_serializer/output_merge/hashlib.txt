fully_qualified_name: "hashlib"
classes {
  name: "_hash"
  fully_qualified_name: "hashlib._hash"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "hashlib._hash.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "hashlib._hash"
        fully_qualified_name: "hashlib._hash"
      }
    }
    parameters {
      name: "arg"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode,builtins.bytearray,builtins.buffer,builtins.memoryview]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.unicode,builtins.bytearray,builtins.buffer,builtins.memoryview]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.unicode"
            fully_qualified_name: "builtins.unicode"
          }
          args {
            pretty_printed_name: "builtins.bytearray"
            fully_qualified_name: "builtins.bytearray"
          }
          args {
            pretty_printed_name: "builtins.buffer"
            fully_qualified_name: "builtins.buffer"
          }
          args {
            pretty_printed_name: "builtins.memoryview"
            fully_qualified_name: "builtins.memoryview"
          }
        }
        fully_qualified_name: "hashlib._DataType"
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "update"
    fully_qualified_name: "hashlib._hash.update"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "hashlib._hash"
        fully_qualified_name: "hashlib._hash"
      }
    }
    parameters {
      name: "arg"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode,builtins.bytearray,builtins.buffer,builtins.memoryview]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.unicode,builtins.bytearray,builtins.buffer,builtins.memoryview]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.unicode"
            fully_qualified_name: "builtins.unicode"
          }
          args {
            pretty_printed_name: "builtins.bytearray"
            fully_qualified_name: "builtins.bytearray"
          }
          args {
            pretty_printed_name: "builtins.buffer"
            fully_qualified_name: "builtins.buffer"
          }
          args {
            pretty_printed_name: "builtins.memoryview"
            fully_qualified_name: "builtins.memoryview"
          }
        }
        fully_qualified_name: "hashlib._DataType"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "digest"
    fully_qualified_name: "hashlib._hash.digest"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "hashlib._hash"
        fully_qualified_name: "hashlib._hash"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "hexdigest"
    fully_qualified_name: "hashlib._hash.hexdigest"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "hashlib._hash"
        fully_qualified_name: "hashlib._hash"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "copy"
    fully_qualified_name: "hashlib._hash.copy"
    return_annotation {
      pretty_printed_name: "hashlib._hash"
      fully_qualified_name: "hashlib._hash"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "hashlib._hash"
        fully_qualified_name: "hashlib._hash"
      }
    }
    valid_for: "27"
  }
  valid_for: "27"
  attributes {
    name: "name"
    fully_qualified_name: "hashlib._hash.name"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "27"
  }
  attributes {
    name: "block_size"
    fully_qualified_name: "hashlib._hash.block_size"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "27"
  }
  attributes {
    name: "digest_size"
    fully_qualified_name: "hashlib._hash.digest_size"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "27"
  }
  attributes {
    name: "digestsize"
    fully_qualified_name: "hashlib._hash.digestsize"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "27"
  }
}
classes {
  name: "_Hash"
  fully_qualified_name: "hashlib._Hash"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "hashlib._Hash.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "hashlib._Hash"
        fully_qualified_name: "hashlib._Hash"
      }
    }
    parameters {
      name: "data"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.bytearray"
            fully_qualified_name: "builtins.bytearray"
          }
          args {
            pretty_printed_name: "builtins.memoryview"
            fully_qualified_name: "builtins.memoryview"
          }
          args {
            pretty_printed_name: "array.array[Any]"
            args {
              pretty_printed_name: "Any"
              kind: ANY
            }
            fully_qualified_name: "array.array"
          }
          args {
            pretty_printed_name: "mmap.mmap"
            fully_qualified_name: "mmap.mmap"
          }
        }
        fully_qualified_name: "_typeshed.ReadableBuffer"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "copy"
    fully_qualified_name: "hashlib._Hash.copy"
    return_annotation {
      pretty_printed_name: "hashlib._Hash"
      fully_qualified_name: "hashlib._Hash"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "hashlib._Hash"
        fully_qualified_name: "hashlib._Hash"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "digest"
    fully_qualified_name: "hashlib._Hash.digest"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "hashlib._Hash"
        fully_qualified_name: "hashlib._Hash"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "hexdigest"
    fully_qualified_name: "hashlib._Hash.hexdigest"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "hashlib._Hash"
        fully_qualified_name: "hashlib._Hash"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "update"
    fully_qualified_name: "hashlib._Hash.update"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "hashlib._Hash"
        fully_qualified_name: "hashlib._Hash"
      }
    }
    parameters {
      name: "__data"
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.bytearray"
            fully_qualified_name: "builtins.bytearray"
          }
          args {
            pretty_printed_name: "builtins.memoryview"
            fully_qualified_name: "builtins.memoryview"
          }
          args {
            pretty_printed_name: "array.array[Any]"
            args {
              pretty_printed_name: "Any"
              kind: ANY
            }
            fully_qualified_name: "array.array"
          }
          args {
            pretty_printed_name: "mmap.mmap"
            fully_qualified_name: "mmap.mmap"
          }
        }
        fully_qualified_name: "_typeshed.ReadableBuffer"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "digest_size"
    fully_qualified_name: "hashlib._Hash.digest_size"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "block_size"
    fully_qualified_name: "hashlib._Hash.block_size"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "name"
    fully_qualified_name: "hashlib._Hash.name"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "_VarLenHash"
  fully_qualified_name: "hashlib._VarLenHash"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "hashlib._VarLenHash.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "hashlib._VarLenHash"
        fully_qualified_name: "hashlib._VarLenHash"
      }
    }
    parameters {
      name: "data"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.bytearray"
            fully_qualified_name: "builtins.bytearray"
          }
          args {
            pretty_printed_name: "builtins.memoryview"
            fully_qualified_name: "builtins.memoryview"
          }
          args {
            pretty_printed_name: "array.array[Any]"
            args {
              pretty_printed_name: "Any"
              kind: ANY
            }
            fully_qualified_name: "array.array"
          }
          args {
            pretty_printed_name: "mmap.mmap"
            fully_qualified_name: "mmap.mmap"
          }
        }
        fully_qualified_name: "_typeshed.ReadableBuffer"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "copy"
    fully_qualified_name: "hashlib._VarLenHash.copy"
    return_annotation {
      pretty_printed_name: "hashlib._VarLenHash"
      fully_qualified_name: "hashlib._VarLenHash"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "hashlib._VarLenHash"
        fully_qualified_name: "hashlib._VarLenHash"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "digest"
    fully_qualified_name: "hashlib._VarLenHash.digest"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "hashlib._VarLenHash"
        fully_qualified_name: "hashlib._VarLenHash"
      }
    }
    parameters {
      name: "__length"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "hexdigest"
    fully_qualified_name: "hashlib._VarLenHash.hexdigest"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "hashlib._VarLenHash"
        fully_qualified_name: "hashlib._VarLenHash"
      }
    }
    parameters {
      name: "__length"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "update"
    fully_qualified_name: "hashlib._VarLenHash.update"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "hashlib._VarLenHash"
        fully_qualified_name: "hashlib._VarLenHash"
      }
    }
    parameters {
      name: "__data"
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.bytearray"
            fully_qualified_name: "builtins.bytearray"
          }
          args {
            pretty_printed_name: "builtins.memoryview"
            fully_qualified_name: "builtins.memoryview"
          }
          args {
            pretty_printed_name: "array.array[Any]"
            args {
              pretty_printed_name: "Any"
              kind: ANY
            }
            fully_qualified_name: "array.array"
          }
          args {
            pretty_printed_name: "mmap.mmap"
            fully_qualified_name: "mmap.mmap"
          }
        }
        fully_qualified_name: "_typeshed.ReadableBuffer"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "digest_size"
    fully_qualified_name: "hashlib._VarLenHash.digest_size"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "block_size"
    fully_qualified_name: "hashlib._VarLenHash.block_size"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "name"
    fully_qualified_name: "hashlib._VarLenHash.name"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "_BlakeHash"
  fully_qualified_name: "hashlib._BlakeHash"
  super_classes: "hashlib._Hash"
  methods {
    name: "__init__"
    fully_qualified_name: "hashlib._BlakeHash.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "hashlib._BlakeHash"
        fully_qualified_name: "hashlib._BlakeHash"
      }
    }
    parameters {
      name: "__data"
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.bytearray"
            fully_qualified_name: "builtins.bytearray"
          }
          args {
            pretty_printed_name: "builtins.memoryview"
            fully_qualified_name: "builtins.memoryview"
          }
          args {
            pretty_printed_name: "array.array[Any]"
            args {
              pretty_printed_name: "Any"
              kind: ANY
            }
            fully_qualified_name: "array.array"
          }
          args {
            pretty_printed_name: "mmap.mmap"
            fully_qualified_name: "mmap.mmap"
          }
        }
        fully_qualified_name: "_typeshed.ReadableBuffer"
      }
      has_default: true
    }
    parameters {
      name: "digest_size"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    parameters {
      name: "key"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.bytearray"
            fully_qualified_name: "builtins.bytearray"
          }
          args {
            pretty_printed_name: "builtins.memoryview"
            fully_qualified_name: "builtins.memoryview"
          }
          args {
            pretty_printed_name: "array.array[Any]"
            args {
              pretty_printed_name: "Any"
              kind: ANY
            }
            fully_qualified_name: "array.array"
          }
          args {
            pretty_printed_name: "mmap.mmap"
            fully_qualified_name: "mmap.mmap"
          }
        }
        fully_qualified_name: "_typeshed.ReadableBuffer"
      }
      has_default: true
    }
    parameters {
      name: "salt"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.bytearray"
            fully_qualified_name: "builtins.bytearray"
          }
          args {
            pretty_printed_name: "builtins.memoryview"
            fully_qualified_name: "builtins.memoryview"
          }
          args {
            pretty_printed_name: "array.array[Any]"
            args {
              pretty_printed_name: "Any"
              kind: ANY
            }
            fully_qualified_name: "array.array"
          }
          args {
            pretty_printed_name: "mmap.mmap"
            fully_qualified_name: "mmap.mmap"
          }
        }
        fully_qualified_name: "_typeshed.ReadableBuffer"
      }
      has_default: true
    }
    parameters {
      name: "person"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.bytearray"
            fully_qualified_name: "builtins.bytearray"
          }
          args {
            pretty_printed_name: "builtins.memoryview"
            fully_qualified_name: "builtins.memoryview"
          }
          args {
            pretty_printed_name: "array.array[Any]"
            args {
              pretty_printed_name: "Any"
              kind: ANY
            }
            fully_qualified_name: "array.array"
          }
          args {
            pretty_printed_name: "mmap.mmap"
            fully_qualified_name: "mmap.mmap"
          }
        }
        fully_qualified_name: "_typeshed.ReadableBuffer"
      }
      has_default: true
    }
    parameters {
      name: "fanout"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    parameters {
      name: "depth"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    parameters {
      name: "leaf_size"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    parameters {
      name: "node_offset"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    parameters {
      name: "node_depth"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    parameters {
      name: "inner_size"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    parameters {
      name: "last_node"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
  }
  methods {
    name: "__init__"
    fully_qualified_name: "hashlib._BlakeHash.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "hashlib._BlakeHash"
        fully_qualified_name: "hashlib._BlakeHash"
      }
    }
    parameters {
      name: "__data"
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.bytearray"
            fully_qualified_name: "builtins.bytearray"
          }
          args {
            pretty_printed_name: "builtins.memoryview"
            fully_qualified_name: "builtins.memoryview"
          }
          args {
            pretty_printed_name: "array.array[Any]"
            args {
              pretty_printed_name: "Any"
              kind: ANY
            }
            fully_qualified_name: "array.array"
          }
          args {
            pretty_printed_name: "mmap.mmap"
            fully_qualified_name: "mmap.mmap"
          }
        }
        fully_qualified_name: "_typeshed.ReadableBuffer"
      }
      has_default: true
    }
    parameters {
      name: "digest_size"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    parameters {
      name: "key"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.bytearray"
            fully_qualified_name: "builtins.bytearray"
          }
          args {
            pretty_printed_name: "builtins.memoryview"
            fully_qualified_name: "builtins.memoryview"
          }
          args {
            pretty_printed_name: "array.array[Any]"
            args {
              pretty_printed_name: "Any"
              kind: ANY
            }
            fully_qualified_name: "array.array"
          }
          args {
            pretty_printed_name: "mmap.mmap"
            fully_qualified_name: "mmap.mmap"
          }
        }
        fully_qualified_name: "_typeshed.ReadableBuffer"
      }
      has_default: true
    }
    parameters {
      name: "salt"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.bytearray"
            fully_qualified_name: "builtins.bytearray"
          }
          args {
            pretty_printed_name: "builtins.memoryview"
            fully_qualified_name: "builtins.memoryview"
          }
          args {
            pretty_printed_name: "array.array[Any]"
            args {
              pretty_printed_name: "Any"
              kind: ANY
            }
            fully_qualified_name: "array.array"
          }
          args {
            pretty_printed_name: "mmap.mmap"
            fully_qualified_name: "mmap.mmap"
          }
        }
        fully_qualified_name: "_typeshed.ReadableBuffer"
      }
      has_default: true
    }
    parameters {
      name: "person"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.bytearray"
            fully_qualified_name: "builtins.bytearray"
          }
          args {
            pretty_printed_name: "builtins.memoryview"
            fully_qualified_name: "builtins.memoryview"
          }
          args {
            pretty_printed_name: "array.array[Any]"
            args {
              pretty_printed_name: "Any"
              kind: ANY
            }
            fully_qualified_name: "array.array"
          }
          args {
            pretty_printed_name: "mmap.mmap"
            fully_qualified_name: "mmap.mmap"
          }
        }
        fully_qualified_name: "_typeshed.ReadableBuffer"
      }
      has_default: true
    }
    parameters {
      name: "fanout"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    parameters {
      name: "depth"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    parameters {
      name: "leaf_size"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    parameters {
      name: "node_offset"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    parameters {
      name: "node_depth"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    parameters {
      name: "inner_size"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    parameters {
      name: "last_node"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    parameters {
      name: "usedforsecurity"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "MAX_DIGEST_SIZE"
    fully_qualified_name: "hashlib._BlakeHash.MAX_DIGEST_SIZE"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "MAX_KEY_SIZE"
    fully_qualified_name: "hashlib._BlakeHash.MAX_KEY_SIZE"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "PERSON_SIZE"
    fully_qualified_name: "hashlib._BlakeHash.PERSON_SIZE"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "SALT_SIZE"
    fully_qualified_name: "hashlib._BlakeHash.SALT_SIZE"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
functions {
  name: "new"
  fully_qualified_name: "hashlib.new"
  return_annotation {
    pretty_printed_name: "hashlib._hash"
    fully_qualified_name: "hashlib._hash"
  }
  parameters {
    name: "name"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  parameters {
    name: "data"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    has_default: true
  }
  valid_for: "27"
}
functions {
  name: "new"
  fully_qualified_name: "hashlib.new"
  return_annotation {
    pretty_printed_name: "hashlib._Hash"
    fully_qualified_name: "hashlib._Hash"
  }
  parameters {
    name: "name"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  parameters {
    name: "data"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "builtins.bytearray"
          fully_qualified_name: "builtins.bytearray"
        }
        args {
          pretty_printed_name: "builtins.memoryview"
          fully_qualified_name: "builtins.memoryview"
        }
        args {
          pretty_printed_name: "array.array[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "array.array"
        }
        args {
          pretty_printed_name: "mmap.mmap"
          fully_qualified_name: "mmap.mmap"
        }
      }
      fully_qualified_name: "_typeshed.ReadableBuffer"
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
}
functions {
  name: "new"
  fully_qualified_name: "hashlib.new"
  return_annotation {
    pretty_printed_name: "hashlib._Hash"
    fully_qualified_name: "hashlib._Hash"
  }
  parameters {
    name: "name"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  parameters {
    name: "data"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "builtins.bytearray"
          fully_qualified_name: "builtins.bytearray"
        }
        args {
          pretty_printed_name: "builtins.memoryview"
          fully_qualified_name: "builtins.memoryview"
        }
        args {
          pretty_printed_name: "array.array[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "array.array"
        }
        args {
          pretty_printed_name: "mmap.mmap"
          fully_qualified_name: "mmap.mmap"
        }
      }
      fully_qualified_name: "_typeshed.ReadableBuffer"
    }
    has_default: true
  }
  parameters {
    name: "usedforsecurity"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    has_default: true
  }
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "md5"
  fully_qualified_name: "hashlib.md5"
  return_annotation {
    pretty_printed_name: "hashlib._hash"
    fully_qualified_name: "hashlib._hash"
  }
  parameters {
    name: "s"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode,builtins.bytearray,builtins.buffer,builtins.memoryview]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.unicode,builtins.bytearray,builtins.buffer,builtins.memoryview]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.unicode"
          fully_qualified_name: "builtins.unicode"
        }
        args {
          pretty_printed_name: "builtins.bytearray"
          fully_qualified_name: "builtins.bytearray"
        }
        args {
          pretty_printed_name: "builtins.buffer"
          fully_qualified_name: "builtins.buffer"
        }
        args {
          pretty_printed_name: "builtins.memoryview"
          fully_qualified_name: "builtins.memoryview"
        }
      }
      fully_qualified_name: "hashlib._DataType"
    }
    has_default: true
  }
  valid_for: "27"
}
functions {
  name: "md5"
  fully_qualified_name: "hashlib.md5"
  return_annotation {
    pretty_printed_name: "hashlib._Hash"
    fully_qualified_name: "hashlib._Hash"
  }
  parameters {
    name: "__string"
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "builtins.bytearray"
          fully_qualified_name: "builtins.bytearray"
        }
        args {
          pretty_printed_name: "builtins.memoryview"
          fully_qualified_name: "builtins.memoryview"
        }
        args {
          pretty_printed_name: "array.array[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "array.array"
        }
        args {
          pretty_printed_name: "mmap.mmap"
          fully_qualified_name: "mmap.mmap"
        }
      }
      fully_qualified_name: "_typeshed.ReadableBuffer"
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
}
functions {
  name: "md5"
  fully_qualified_name: "hashlib.md5"
  return_annotation {
    pretty_printed_name: "hashlib._Hash"
    fully_qualified_name: "hashlib._Hash"
  }
  parameters {
    name: "string"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "builtins.bytearray"
          fully_qualified_name: "builtins.bytearray"
        }
        args {
          pretty_printed_name: "builtins.memoryview"
          fully_qualified_name: "builtins.memoryview"
        }
        args {
          pretty_printed_name: "array.array[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "array.array"
        }
        args {
          pretty_printed_name: "mmap.mmap"
          fully_qualified_name: "mmap.mmap"
        }
      }
      fully_qualified_name: "_typeshed.ReadableBuffer"
    }
    has_default: true
  }
  valid_for: "38"
}
functions {
  name: "md5"
  fully_qualified_name: "hashlib.md5"
  return_annotation {
    pretty_printed_name: "hashlib._Hash"
    fully_qualified_name: "hashlib._Hash"
  }
  parameters {
    name: "string"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "builtins.bytearray"
          fully_qualified_name: "builtins.bytearray"
        }
        args {
          pretty_printed_name: "builtins.memoryview"
          fully_qualified_name: "builtins.memoryview"
        }
        args {
          pretty_printed_name: "array.array[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "array.array"
        }
        args {
          pretty_printed_name: "mmap.mmap"
          fully_qualified_name: "mmap.mmap"
        }
      }
      fully_qualified_name: "_typeshed.ReadableBuffer"
    }
    has_default: true
  }
  parameters {
    name: "usedforsecurity"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    has_default: true
  }
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "sha1"
  fully_qualified_name: "hashlib.sha1"
  return_annotation {
    pretty_printed_name: "hashlib._hash"
    fully_qualified_name: "hashlib._hash"
  }
  parameters {
    name: "s"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode,builtins.bytearray,builtins.buffer,builtins.memoryview]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.unicode,builtins.bytearray,builtins.buffer,builtins.memoryview]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.unicode"
          fully_qualified_name: "builtins.unicode"
        }
        args {
          pretty_printed_name: "builtins.bytearray"
          fully_qualified_name: "builtins.bytearray"
        }
        args {
          pretty_printed_name: "builtins.buffer"
          fully_qualified_name: "builtins.buffer"
        }
        args {
          pretty_printed_name: "builtins.memoryview"
          fully_qualified_name: "builtins.memoryview"
        }
      }
      fully_qualified_name: "hashlib._DataType"
    }
    has_default: true
  }
  valid_for: "27"
}
functions {
  name: "sha1"
  fully_qualified_name: "hashlib.sha1"
  return_annotation {
    pretty_printed_name: "hashlib._Hash"
    fully_qualified_name: "hashlib._Hash"
  }
  parameters {
    name: "__string"
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "builtins.bytearray"
          fully_qualified_name: "builtins.bytearray"
        }
        args {
          pretty_printed_name: "builtins.memoryview"
          fully_qualified_name: "builtins.memoryview"
        }
        args {
          pretty_printed_name: "array.array[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "array.array"
        }
        args {
          pretty_printed_name: "mmap.mmap"
          fully_qualified_name: "mmap.mmap"
        }
      }
      fully_qualified_name: "_typeshed.ReadableBuffer"
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
}
functions {
  name: "sha1"
  fully_qualified_name: "hashlib.sha1"
  return_annotation {
    pretty_printed_name: "hashlib._Hash"
    fully_qualified_name: "hashlib._Hash"
  }
  parameters {
    name: "string"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "builtins.bytearray"
          fully_qualified_name: "builtins.bytearray"
        }
        args {
          pretty_printed_name: "builtins.memoryview"
          fully_qualified_name: "builtins.memoryview"
        }
        args {
          pretty_printed_name: "array.array[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "array.array"
        }
        args {
          pretty_printed_name: "mmap.mmap"
          fully_qualified_name: "mmap.mmap"
        }
      }
      fully_qualified_name: "_typeshed.ReadableBuffer"
    }
    has_default: true
  }
  valid_for: "38"
}
functions {
  name: "sha1"
  fully_qualified_name: "hashlib.sha1"
  return_annotation {
    pretty_printed_name: "hashlib._Hash"
    fully_qualified_name: "hashlib._Hash"
  }
  parameters {
    name: "string"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "builtins.bytearray"
          fully_qualified_name: "builtins.bytearray"
        }
        args {
          pretty_printed_name: "builtins.memoryview"
          fully_qualified_name: "builtins.memoryview"
        }
        args {
          pretty_printed_name: "array.array[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "array.array"
        }
        args {
          pretty_printed_name: "mmap.mmap"
          fully_qualified_name: "mmap.mmap"
        }
      }
      fully_qualified_name: "_typeshed.ReadableBuffer"
    }
    has_default: true
  }
  parameters {
    name: "usedforsecurity"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    has_default: true
  }
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "sha224"
  fully_qualified_name: "hashlib.sha224"
  return_annotation {
    pretty_printed_name: "hashlib._hash"
    fully_qualified_name: "hashlib._hash"
  }
  parameters {
    name: "s"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode,builtins.bytearray,builtins.buffer,builtins.memoryview]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.unicode,builtins.bytearray,builtins.buffer,builtins.memoryview]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.unicode"
          fully_qualified_name: "builtins.unicode"
        }
        args {
          pretty_printed_name: "builtins.bytearray"
          fully_qualified_name: "builtins.bytearray"
        }
        args {
          pretty_printed_name: "builtins.buffer"
          fully_qualified_name: "builtins.buffer"
        }
        args {
          pretty_printed_name: "builtins.memoryview"
          fully_qualified_name: "builtins.memoryview"
        }
      }
      fully_qualified_name: "hashlib._DataType"
    }
    has_default: true
  }
  valid_for: "27"
}
functions {
  name: "sha224"
  fully_qualified_name: "hashlib.sha224"
  return_annotation {
    pretty_printed_name: "hashlib._Hash"
    fully_qualified_name: "hashlib._Hash"
  }
  parameters {
    name: "__string"
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "builtins.bytearray"
          fully_qualified_name: "builtins.bytearray"
        }
        args {
          pretty_printed_name: "builtins.memoryview"
          fully_qualified_name: "builtins.memoryview"
        }
        args {
          pretty_printed_name: "array.array[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "array.array"
        }
        args {
          pretty_printed_name: "mmap.mmap"
          fully_qualified_name: "mmap.mmap"
        }
      }
      fully_qualified_name: "_typeshed.ReadableBuffer"
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
}
functions {
  name: "sha224"
  fully_qualified_name: "hashlib.sha224"
  return_annotation {
    pretty_printed_name: "hashlib._Hash"
    fully_qualified_name: "hashlib._Hash"
  }
  parameters {
    name: "string"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "builtins.bytearray"
          fully_qualified_name: "builtins.bytearray"
        }
        args {
          pretty_printed_name: "builtins.memoryview"
          fully_qualified_name: "builtins.memoryview"
        }
        args {
          pretty_printed_name: "array.array[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "array.array"
        }
        args {
          pretty_printed_name: "mmap.mmap"
          fully_qualified_name: "mmap.mmap"
        }
      }
      fully_qualified_name: "_typeshed.ReadableBuffer"
    }
    has_default: true
  }
  valid_for: "38"
}
functions {
  name: "sha224"
  fully_qualified_name: "hashlib.sha224"
  return_annotation {
    pretty_printed_name: "hashlib._Hash"
    fully_qualified_name: "hashlib._Hash"
  }
  parameters {
    name: "string"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "builtins.bytearray"
          fully_qualified_name: "builtins.bytearray"
        }
        args {
          pretty_printed_name: "builtins.memoryview"
          fully_qualified_name: "builtins.memoryview"
        }
        args {
          pretty_printed_name: "array.array[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "array.array"
        }
        args {
          pretty_printed_name: "mmap.mmap"
          fully_qualified_name: "mmap.mmap"
        }
      }
      fully_qualified_name: "_typeshed.ReadableBuffer"
    }
    has_default: true
  }
  parameters {
    name: "usedforsecurity"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    has_default: true
  }
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "sha256"
  fully_qualified_name: "hashlib.sha256"
  return_annotation {
    pretty_printed_name: "hashlib._hash"
    fully_qualified_name: "hashlib._hash"
  }
  parameters {
    name: "s"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode,builtins.bytearray,builtins.buffer,builtins.memoryview]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.unicode,builtins.bytearray,builtins.buffer,builtins.memoryview]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.unicode"
          fully_qualified_name: "builtins.unicode"
        }
        args {
          pretty_printed_name: "builtins.bytearray"
          fully_qualified_name: "builtins.bytearray"
        }
        args {
          pretty_printed_name: "builtins.buffer"
          fully_qualified_name: "builtins.buffer"
        }
        args {
          pretty_printed_name: "builtins.memoryview"
          fully_qualified_name: "builtins.memoryview"
        }
      }
      fully_qualified_name: "hashlib._DataType"
    }
    has_default: true
  }
  valid_for: "27"
}
functions {
  name: "sha256"
  fully_qualified_name: "hashlib.sha256"
  return_annotation {
    pretty_printed_name: "hashlib._Hash"
    fully_qualified_name: "hashlib._Hash"
  }
  parameters {
    name: "__string"
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "builtins.bytearray"
          fully_qualified_name: "builtins.bytearray"
        }
        args {
          pretty_printed_name: "builtins.memoryview"
          fully_qualified_name: "builtins.memoryview"
        }
        args {
          pretty_printed_name: "array.array[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "array.array"
        }
        args {
          pretty_printed_name: "mmap.mmap"
          fully_qualified_name: "mmap.mmap"
        }
      }
      fully_qualified_name: "_typeshed.ReadableBuffer"
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
}
functions {
  name: "sha256"
  fully_qualified_name: "hashlib.sha256"
  return_annotation {
    pretty_printed_name: "hashlib._Hash"
    fully_qualified_name: "hashlib._Hash"
  }
  parameters {
    name: "string"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "builtins.bytearray"
          fully_qualified_name: "builtins.bytearray"
        }
        args {
          pretty_printed_name: "builtins.memoryview"
          fully_qualified_name: "builtins.memoryview"
        }
        args {
          pretty_printed_name: "array.array[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "array.array"
        }
        args {
          pretty_printed_name: "mmap.mmap"
          fully_qualified_name: "mmap.mmap"
        }
      }
      fully_qualified_name: "_typeshed.ReadableBuffer"
    }
    has_default: true
  }
  valid_for: "38"
}
functions {
  name: "sha256"
  fully_qualified_name: "hashlib.sha256"
  return_annotation {
    pretty_printed_name: "hashlib._Hash"
    fully_qualified_name: "hashlib._Hash"
  }
  parameters {
    name: "string"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "builtins.bytearray"
          fully_qualified_name: "builtins.bytearray"
        }
        args {
          pretty_printed_name: "builtins.memoryview"
          fully_qualified_name: "builtins.memoryview"
        }
        args {
          pretty_printed_name: "array.array[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "array.array"
        }
        args {
          pretty_printed_name: "mmap.mmap"
          fully_qualified_name: "mmap.mmap"
        }
      }
      fully_qualified_name: "_typeshed.ReadableBuffer"
    }
    has_default: true
  }
  parameters {
    name: "usedforsecurity"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    has_default: true
  }
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "sha384"
  fully_qualified_name: "hashlib.sha384"
  return_annotation {
    pretty_printed_name: "hashlib._hash"
    fully_qualified_name: "hashlib._hash"
  }
  parameters {
    name: "s"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode,builtins.bytearray,builtins.buffer,builtins.memoryview]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.unicode,builtins.bytearray,builtins.buffer,builtins.memoryview]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.unicode"
          fully_qualified_name: "builtins.unicode"
        }
        args {
          pretty_printed_name: "builtins.bytearray"
          fully_qualified_name: "builtins.bytearray"
        }
        args {
          pretty_printed_name: "builtins.buffer"
          fully_qualified_name: "builtins.buffer"
        }
        args {
          pretty_printed_name: "builtins.memoryview"
          fully_qualified_name: "builtins.memoryview"
        }
      }
      fully_qualified_name: "hashlib._DataType"
    }
    has_default: true
  }
  valid_for: "27"
}
functions {
  name: "sha384"
  fully_qualified_name: "hashlib.sha384"
  return_annotation {
    pretty_printed_name: "hashlib._Hash"
    fully_qualified_name: "hashlib._Hash"
  }
  parameters {
    name: "__string"
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "builtins.bytearray"
          fully_qualified_name: "builtins.bytearray"
        }
        args {
          pretty_printed_name: "builtins.memoryview"
          fully_qualified_name: "builtins.memoryview"
        }
        args {
          pretty_printed_name: "array.array[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "array.array"
        }
        args {
          pretty_printed_name: "mmap.mmap"
          fully_qualified_name: "mmap.mmap"
        }
      }
      fully_qualified_name: "_typeshed.ReadableBuffer"
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
}
functions {
  name: "sha384"
  fully_qualified_name: "hashlib.sha384"
  return_annotation {
    pretty_printed_name: "hashlib._Hash"
    fully_qualified_name: "hashlib._Hash"
  }
  parameters {
    name: "string"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "builtins.bytearray"
          fully_qualified_name: "builtins.bytearray"
        }
        args {
          pretty_printed_name: "builtins.memoryview"
          fully_qualified_name: "builtins.memoryview"
        }
        args {
          pretty_printed_name: "array.array[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "array.array"
        }
        args {
          pretty_printed_name: "mmap.mmap"
          fully_qualified_name: "mmap.mmap"
        }
      }
      fully_qualified_name: "_typeshed.ReadableBuffer"
    }
    has_default: true
  }
  valid_for: "38"
}
functions {
  name: "sha384"
  fully_qualified_name: "hashlib.sha384"
  return_annotation {
    pretty_printed_name: "hashlib._Hash"
    fully_qualified_name: "hashlib._Hash"
  }
  parameters {
    name: "string"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "builtins.bytearray"
          fully_qualified_name: "builtins.bytearray"
        }
        args {
          pretty_printed_name: "builtins.memoryview"
          fully_qualified_name: "builtins.memoryview"
        }
        args {
          pretty_printed_name: "array.array[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "array.array"
        }
        args {
          pretty_printed_name: "mmap.mmap"
          fully_qualified_name: "mmap.mmap"
        }
      }
      fully_qualified_name: "_typeshed.ReadableBuffer"
    }
    has_default: true
  }
  parameters {
    name: "usedforsecurity"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    has_default: true
  }
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "sha512"
  fully_qualified_name: "hashlib.sha512"
  return_annotation {
    pretty_printed_name: "hashlib._hash"
    fully_qualified_name: "hashlib._hash"
  }
  parameters {
    name: "s"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.unicode,builtins.bytearray,builtins.buffer,builtins.memoryview]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.unicode,builtins.bytearray,builtins.buffer,builtins.memoryview]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.unicode"
          fully_qualified_name: "builtins.unicode"
        }
        args {
          pretty_printed_name: "builtins.bytearray"
          fully_qualified_name: "builtins.bytearray"
        }
        args {
          pretty_printed_name: "builtins.buffer"
          fully_qualified_name: "builtins.buffer"
        }
        args {
          pretty_printed_name: "builtins.memoryview"
          fully_qualified_name: "builtins.memoryview"
        }
      }
      fully_qualified_name: "hashlib._DataType"
    }
    has_default: true
  }
  valid_for: "27"
}
functions {
  name: "sha512"
  fully_qualified_name: "hashlib.sha512"
  return_annotation {
    pretty_printed_name: "hashlib._Hash"
    fully_qualified_name: "hashlib._Hash"
  }
  parameters {
    name: "__string"
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "builtins.bytearray"
          fully_qualified_name: "builtins.bytearray"
        }
        args {
          pretty_printed_name: "builtins.memoryview"
          fully_qualified_name: "builtins.memoryview"
        }
        args {
          pretty_printed_name: "array.array[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "array.array"
        }
        args {
          pretty_printed_name: "mmap.mmap"
          fully_qualified_name: "mmap.mmap"
        }
      }
      fully_qualified_name: "_typeshed.ReadableBuffer"
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
}
functions {
  name: "sha512"
  fully_qualified_name: "hashlib.sha512"
  return_annotation {
    pretty_printed_name: "hashlib._Hash"
    fully_qualified_name: "hashlib._Hash"
  }
  parameters {
    name: "string"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "builtins.bytearray"
          fully_qualified_name: "builtins.bytearray"
        }
        args {
          pretty_printed_name: "builtins.memoryview"
          fully_qualified_name: "builtins.memoryview"
        }
        args {
          pretty_printed_name: "array.array[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "array.array"
        }
        args {
          pretty_printed_name: "mmap.mmap"
          fully_qualified_name: "mmap.mmap"
        }
      }
      fully_qualified_name: "_typeshed.ReadableBuffer"
    }
    has_default: true
  }
  valid_for: "38"
}
functions {
  name: "sha512"
  fully_qualified_name: "hashlib.sha512"
  return_annotation {
    pretty_printed_name: "hashlib._Hash"
    fully_qualified_name: "hashlib._Hash"
  }
  parameters {
    name: "string"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "builtins.bytearray"
          fully_qualified_name: "builtins.bytearray"
        }
        args {
          pretty_printed_name: "builtins.memoryview"
          fully_qualified_name: "builtins.memoryview"
        }
        args {
          pretty_printed_name: "array.array[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "array.array"
        }
        args {
          pretty_printed_name: "mmap.mmap"
          fully_qualified_name: "mmap.mmap"
        }
      }
      fully_qualified_name: "_typeshed.ReadableBuffer"
    }
    has_default: true
  }
  parameters {
    name: "usedforsecurity"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    has_default: true
  }
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "pbkdf2_hmac"
  fully_qualified_name: "hashlib.pbkdf2_hmac"
  return_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
  parameters {
    name: "name"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  parameters {
    name: "password"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  parameters {
    name: "salt"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  parameters {
    name: "rounds"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "dklen"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    has_default: true
  }
  valid_for: "27"
}
functions {
  name: "pbkdf2_hmac"
  fully_qualified_name: "hashlib.pbkdf2_hmac"
  return_annotation {
    pretty_printed_name: "builtins.bytes"
    fully_qualified_name: "builtins.bytes"
  }
  parameters {
    name: "hash_name"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  parameters {
    name: "password"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "builtins.bytearray"
          fully_qualified_name: "builtins.bytearray"
        }
        args {
          pretty_printed_name: "builtins.memoryview"
          fully_qualified_name: "builtins.memoryview"
        }
        args {
          pretty_printed_name: "array.array[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "array.array"
        }
        args {
          pretty_printed_name: "mmap.mmap"
          fully_qualified_name: "mmap.mmap"
        }
      }
      fully_qualified_name: "_typeshed.ReadableBuffer"
    }
  }
  parameters {
    name: "salt"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "builtins.bytearray"
          fully_qualified_name: "builtins.bytearray"
        }
        args {
          pretty_printed_name: "builtins.memoryview"
          fully_qualified_name: "builtins.memoryview"
        }
        args {
          pretty_printed_name: "array.array[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "array.array"
        }
        args {
          pretty_printed_name: "mmap.mmap"
          fully_qualified_name: "mmap.mmap"
        }
      }
      fully_qualified_name: "_typeshed.ReadableBuffer"
    }
  }
  parameters {
    name: "iterations"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "dklen"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.int,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "scrypt"
  fully_qualified_name: "hashlib.scrypt"
  return_annotation {
    pretty_printed_name: "builtins.bytes"
    fully_qualified_name: "builtins.bytes"
  }
  parameters {
    name: "password"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "builtins.bytearray"
          fully_qualified_name: "builtins.bytearray"
        }
        args {
          pretty_printed_name: "builtins.memoryview"
          fully_qualified_name: "builtins.memoryview"
        }
        args {
          pretty_printed_name: "array.array[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "array.array"
        }
        args {
          pretty_printed_name: "mmap.mmap"
          fully_qualified_name: "mmap.mmap"
        }
      }
      fully_qualified_name: "_typeshed.ReadableBuffer"
    }
  }
  parameters {
    name: "salt"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
      args {
        pretty_printed_name: "builtins.bytearray"
        fully_qualified_name: "builtins.bytearray"
      }
      args {
        pretty_printed_name: "builtins.memoryview"
        fully_qualified_name: "builtins.memoryview"
      }
      args {
        pretty_printed_name: "array.array[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "array.array"
      }
      args {
        pretty_printed_name: "mmap.mmap"
        fully_qualified_name: "mmap.mmap"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "n"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[builtins.int,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "r"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[builtins.int,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "p"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[builtins.int,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "maxmem"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    has_default: true
  }
  parameters {
    name: "dklen"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "algorithms"
  fully_qualified_name: "hashlib.algorithms"
  type_annotation {
    pretty_printed_name: "builtins.tuple[builtins.str]"
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    fully_qualified_name: "builtins.tuple"
  }
  valid_for: "27"
}
vars {
  name: "algorithms_guaranteed"
  fully_qualified_name: "hashlib.algorithms_guaranteed"
  type_annotation {
    pretty_printed_name: "builtins.tuple[builtins.str]"
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    fully_qualified_name: "builtins.tuple"
  }
  valid_for: "27"
}
vars {
  name: "algorithms_guaranteed"
  fully_qualified_name: "hashlib.algorithms_guaranteed"
  type_annotation {
    pretty_printed_name: "typing.AbstractSet[builtins.str]"
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    fully_qualified_name: "typing.AbstractSet"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "algorithms_available"
  fully_qualified_name: "hashlib.algorithms_available"
  type_annotation {
    pretty_printed_name: "builtins.tuple[builtins.str]"
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    fully_qualified_name: "builtins.tuple"
  }
  valid_for: "27"
}
vars {
  name: "algorithms_available"
  fully_qualified_name: "hashlib.algorithms_available"
  type_annotation {
    pretty_printed_name: "typing.AbstractSet[builtins.str]"
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    fully_qualified_name: "typing.AbstractSet"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
