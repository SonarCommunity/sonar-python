fully_qualified_name: "cmath"
functions {
  name: "acos"
  fully_qualified_name: "cmath.acos"
  return_annotation {
    pretty_printed_name: "builtins.complex"
    fully_qualified_name: "builtins.complex"
  }
  parameters {
    name: "__z"
    type_annotation {
      pretty_printed_name: "UnboundType[_C]"
      kind: UNBOUND
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "acosh"
  fully_qualified_name: "cmath.acosh"
  return_annotation {
    pretty_printed_name: "builtins.complex"
    fully_qualified_name: "builtins.complex"
  }
  parameters {
    name: "__z"
    type_annotation {
      pretty_printed_name: "UnboundType[_C]"
      kind: UNBOUND
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "asin"
  fully_qualified_name: "cmath.asin"
  return_annotation {
    pretty_printed_name: "builtins.complex"
    fully_qualified_name: "builtins.complex"
  }
  parameters {
    name: "__z"
    type_annotation {
      pretty_printed_name: "UnboundType[_C]"
      kind: UNBOUND
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "asinh"
  fully_qualified_name: "cmath.asinh"
  return_annotation {
    pretty_printed_name: "builtins.complex"
    fully_qualified_name: "builtins.complex"
  }
  parameters {
    name: "__z"
    type_annotation {
      pretty_printed_name: "UnboundType[_C]"
      kind: UNBOUND
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "atan"
  fully_qualified_name: "cmath.atan"
  return_annotation {
    pretty_printed_name: "builtins.complex"
    fully_qualified_name: "builtins.complex"
  }
  parameters {
    name: "__z"
    type_annotation {
      pretty_printed_name: "UnboundType[_C]"
      kind: UNBOUND
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "atanh"
  fully_qualified_name: "cmath.atanh"
  return_annotation {
    pretty_printed_name: "builtins.complex"
    fully_qualified_name: "builtins.complex"
  }
  parameters {
    name: "__z"
    type_annotation {
      pretty_printed_name: "UnboundType[_C]"
      kind: UNBOUND
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "cos"
  fully_qualified_name: "cmath.cos"
  return_annotation {
    pretty_printed_name: "builtins.complex"
    fully_qualified_name: "builtins.complex"
  }
  parameters {
    name: "__z"
    type_annotation {
      pretty_printed_name: "UnboundType[_C]"
      kind: UNBOUND
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "cosh"
  fully_qualified_name: "cmath.cosh"
  return_annotation {
    pretty_printed_name: "builtins.complex"
    fully_qualified_name: "builtins.complex"
  }
  parameters {
    name: "__z"
    type_annotation {
      pretty_printed_name: "UnboundType[_C]"
      kind: UNBOUND
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "exp"
  fully_qualified_name: "cmath.exp"
  return_annotation {
    pretty_printed_name: "builtins.complex"
    fully_qualified_name: "builtins.complex"
  }
  parameters {
    name: "__z"
    type_annotation {
      pretty_printed_name: "UnboundType[_C]"
      kind: UNBOUND
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "isclose"
  fully_qualified_name: "cmath.isclose"
  return_annotation {
    pretty_printed_name: "builtins.bool"
    fully_qualified_name: "builtins.bool"
  }
  parameters {
    name: "a"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "UnboundType[_C]"
      kind: UNBOUND
    }
  }
  parameters {
    name: "b"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "UnboundType[_C]"
      kind: UNBOUND
    }
  }
  parameters {
    name: "rel_tol"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "typing.SupportsFloat"
      fully_qualified_name: "typing.SupportsFloat"
    }
    has_default: true
  }
  parameters {
    name: "abs_tol"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "typing.SupportsFloat"
      fully_qualified_name: "typing.SupportsFloat"
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "isinf"
  fully_qualified_name: "cmath.isinf"
  return_annotation {
    pretty_printed_name: "builtins.bool"
    fully_qualified_name: "builtins.bool"
  }
  parameters {
    name: "__z"
    type_annotation {
      pretty_printed_name: "UnboundType[_C]"
      kind: UNBOUND
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "isnan"
  fully_qualified_name: "cmath.isnan"
  return_annotation {
    pretty_printed_name: "builtins.bool"
    fully_qualified_name: "builtins.bool"
  }
  parameters {
    name: "__z"
    type_annotation {
      pretty_printed_name: "UnboundType[_C]"
      kind: UNBOUND
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "log"
  fully_qualified_name: "cmath.log"
  return_annotation {
    pretty_printed_name: "builtins.complex"
    fully_qualified_name: "builtins.complex"
  }
  parameters {
    name: "__x"
    type_annotation {
      pretty_printed_name: "UnboundType[_C]"
      kind: UNBOUND
    }
  }
  parameters {
    name: "__y_obj"
    type_annotation {
      pretty_printed_name: "UnboundType[_C]"
      kind: UNBOUND
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "log10"
  fully_qualified_name: "cmath.log10"
  return_annotation {
    pretty_printed_name: "builtins.complex"
    fully_qualified_name: "builtins.complex"
  }
  parameters {
    name: "__z"
    type_annotation {
      pretty_printed_name: "UnboundType[_C]"
      kind: UNBOUND
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "phase"
  fully_qualified_name: "cmath.phase"
  return_annotation {
    pretty_printed_name: "builtins.float"
    fully_qualified_name: "builtins.float"
  }
  parameters {
    name: "__z"
    type_annotation {
      pretty_printed_name: "UnboundType[_C]"
      kind: UNBOUND
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "polar"
  fully_qualified_name: "cmath.polar"
  return_annotation {
    pretty_printed_name: "Tuple[builtins.float,builtins.float]"
    kind: TUPLE
    args {
      pretty_printed_name: "builtins.float"
      fully_qualified_name: "builtins.float"
    }
    args {
      pretty_printed_name: "builtins.float"
      fully_qualified_name: "builtins.float"
    }
  }
  parameters {
    name: "__z"
    type_annotation {
      pretty_printed_name: "UnboundType[_C]"
      kind: UNBOUND
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "rect"
  fully_qualified_name: "cmath.rect"
  return_annotation {
    pretty_printed_name: "builtins.complex"
    fully_qualified_name: "builtins.complex"
  }
  parameters {
    name: "__r"
    type_annotation {
      pretty_printed_name: "builtins.float"
      fully_qualified_name: "builtins.float"
    }
  }
  parameters {
    name: "__phi"
    type_annotation {
      pretty_printed_name: "builtins.float"
      fully_qualified_name: "builtins.float"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "sin"
  fully_qualified_name: "cmath.sin"
  return_annotation {
    pretty_printed_name: "builtins.complex"
    fully_qualified_name: "builtins.complex"
  }
  parameters {
    name: "__z"
    type_annotation {
      pretty_printed_name: "UnboundType[_C]"
      kind: UNBOUND
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "sinh"
  fully_qualified_name: "cmath.sinh"
  return_annotation {
    pretty_printed_name: "builtins.complex"
    fully_qualified_name: "builtins.complex"
  }
  parameters {
    name: "__z"
    type_annotation {
      pretty_printed_name: "UnboundType[_C]"
      kind: UNBOUND
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "sqrt"
  fully_qualified_name: "cmath.sqrt"
  return_annotation {
    pretty_printed_name: "builtins.complex"
    fully_qualified_name: "builtins.complex"
  }
  parameters {
    name: "__z"
    type_annotation {
      pretty_printed_name: "UnboundType[_C]"
      kind: UNBOUND
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "tan"
  fully_qualified_name: "cmath.tan"
  return_annotation {
    pretty_printed_name: "builtins.complex"
    fully_qualified_name: "builtins.complex"
  }
  parameters {
    name: "__z"
    type_annotation {
      pretty_printed_name: "UnboundType[_C]"
      kind: UNBOUND
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "tanh"
  fully_qualified_name: "cmath.tanh"
  return_annotation {
    pretty_printed_name: "builtins.complex"
    fully_qualified_name: "builtins.complex"
  }
  parameters {
    name: "__z"
    type_annotation {
      pretty_printed_name: "UnboundType[_C]"
      kind: UNBOUND
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "isfinite"
  fully_qualified_name: "cmath.isfinite"
  return_annotation {
    pretty_printed_name: "builtins.bool"
    fully_qualified_name: "builtins.bool"
  }
  parameters {
    name: "__z"
    type_annotation {
      pretty_printed_name: "UnboundType[_C]"
      kind: UNBOUND
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "e"
  fully_qualified_name: "cmath.e"
  type_annotation {
    pretty_printed_name: "builtins.float"
    fully_qualified_name: "builtins.float"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "pi"
  fully_qualified_name: "cmath.pi"
  type_annotation {
    pretty_printed_name: "builtins.float"
    fully_qualified_name: "builtins.float"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "inf"
  fully_qualified_name: "cmath.inf"
  type_annotation {
    pretty_printed_name: "builtins.float"
    fully_qualified_name: "builtins.float"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "infj"
  fully_qualified_name: "cmath.infj"
  type_annotation {
    pretty_printed_name: "builtins.complex"
    fully_qualified_name: "builtins.complex"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "nan"
  fully_qualified_name: "cmath.nan"
  type_annotation {
    pretty_printed_name: "builtins.float"
    fully_qualified_name: "builtins.float"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "nanj"
  fully_qualified_name: "cmath.nanj"
  type_annotation {
    pretty_printed_name: "builtins.complex"
    fully_qualified_name: "builtins.complex"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "tau"
  fully_qualified_name: "cmath.tau"
  type_annotation {
    pretty_printed_name: "builtins.float"
    fully_qualified_name: "builtins.float"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "_C"
  fully_qualified_name: "cmath._C"
  type_annotation {
    pretty_printed_name: "UnboundType[TypeAlias]"
    kind: UNBOUND
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
