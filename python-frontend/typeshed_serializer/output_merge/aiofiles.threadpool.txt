fully_qualified_name: "aiofiles.threadpool"
classes {
  name: "AsyncBufferedIOBase"
  fully_qualified_name: "aiofiles.threadpool.binary.AsyncBufferedIOBase"
  super_classes: "aiofiles.threadpool.binary._UnknownAsyncBinaryIO"
  methods {
    name: "read1"
    fully_qualified_name: "aiofiles.threadpool.binary.AsyncBufferedIOBase.read1"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,builtins.bytes]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "aiofiles.threadpool.binary.AsyncBufferedIOBase"
        fully_qualified_name: "aiofiles.threadpool.binary.AsyncBufferedIOBase"
      }
    }
    parameters {
      name: "__size"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    is_asynchronous: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "detach"
    fully_qualified_name: "aiofiles.threadpool.binary.AsyncBufferedIOBase.detach"
    return_annotation {
      pretty_printed_name: "io.FileIO"
      fully_qualified_name: "io.FileIO"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "aiofiles.threadpool.binary.AsyncBufferedIOBase"
        fully_qualified_name: "aiofiles.threadpool.binary.AsyncBufferedIOBase"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "raw"
    fully_qualified_name: "aiofiles.threadpool.binary.AsyncBufferedIOBase.raw"
    return_annotation {
      pretty_printed_name: "io.FileIO"
      fully_qualified_name: "io.FileIO"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "aiofiles.threadpool.binary.AsyncBufferedIOBase"
        fully_qualified_name: "aiofiles.threadpool.binary.AsyncBufferedIOBase"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "AsyncBufferedReader"
  fully_qualified_name: "aiofiles.threadpool.binary.AsyncBufferedReader"
  super_classes: "aiofiles.threadpool.binary.AsyncBufferedIOBase"
  methods {
    name: "peek"
    fully_qualified_name: "aiofiles.threadpool.binary.AsyncBufferedReader.peek"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,builtins.bytes]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "aiofiles.threadpool.binary.AsyncBufferedReader"
        fully_qualified_name: "aiofiles.threadpool.binary.AsyncBufferedReader"
      }
    }
    parameters {
      name: "__size"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    is_asynchronous: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "AsyncFileIO"
  fully_qualified_name: "aiofiles.threadpool.binary.AsyncFileIO"
  super_classes: "aiofiles.threadpool.binary._UnknownAsyncBinaryIO"
  methods {
    name: "readall"
    fully_qualified_name: "aiofiles.threadpool.binary.AsyncFileIO.readall"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,builtins.bytes]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "aiofiles.threadpool.binary.AsyncFileIO"
        fully_qualified_name: "aiofiles.threadpool.binary.AsyncFileIO"
      }
    }
    is_asynchronous: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "_UnknownAsyncBinaryIO"
  fully_qualified_name: "aiofiles.threadpool.binary._UnknownAsyncBinaryIO"
  super_classes: "aiofiles.base.AsyncBase"
  methods {
    name: "close"
    fully_qualified_name: "aiofiles.threadpool.binary._UnknownAsyncBinaryIO.close"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,None]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "aiofiles.threadpool.binary._UnknownAsyncBinaryIO"
        fully_qualified_name: "aiofiles.threadpool.binary._UnknownAsyncBinaryIO"
      }
    }
    is_asynchronous: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "flush"
    fully_qualified_name: "aiofiles.threadpool.binary._UnknownAsyncBinaryIO.flush"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,None]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "aiofiles.threadpool.binary._UnknownAsyncBinaryIO"
        fully_qualified_name: "aiofiles.threadpool.binary._UnknownAsyncBinaryIO"
      }
    }
    is_asynchronous: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "isatty"
    fully_qualified_name: "aiofiles.threadpool.binary._UnknownAsyncBinaryIO.isatty"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,builtins.bool]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "aiofiles.threadpool.binary._UnknownAsyncBinaryIO"
        fully_qualified_name: "aiofiles.threadpool.binary._UnknownAsyncBinaryIO"
      }
    }
    is_asynchronous: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "read"
    fully_qualified_name: "aiofiles.threadpool.binary._UnknownAsyncBinaryIO.read"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,builtins.bytes]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "aiofiles.threadpool.binary._UnknownAsyncBinaryIO"
        fully_qualified_name: "aiofiles.threadpool.binary._UnknownAsyncBinaryIO"
      }
    }
    parameters {
      name: "__size"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    is_asynchronous: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "readinto"
    fully_qualified_name: "aiofiles.threadpool.binary._UnknownAsyncBinaryIO.readinto"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,Union[builtins.int,None]]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "aiofiles.threadpool.binary._UnknownAsyncBinaryIO"
        fully_qualified_name: "aiofiles.threadpool.binary._UnknownAsyncBinaryIO"
      }
    }
    parameters {
      name: "__buffer"
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytearray"
            fully_qualified_name: "builtins.bytearray"
          }
          args {
            pretty_printed_name: "builtins.memoryview"
            fully_qualified_name: "builtins.memoryview"
          }
          args {
            pretty_printed_name: "array.array[Any]"
            args {
              pretty_printed_name: "Any"
              kind: ANY
            }
            fully_qualified_name: "array.array"
          }
          args {
            pretty_printed_name: "mmap.mmap"
            fully_qualified_name: "mmap.mmap"
          }
        }
        fully_qualified_name: "_typeshed.WriteableBuffer"
      }
    }
    is_asynchronous: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "readline"
    fully_qualified_name: "aiofiles.threadpool.binary._UnknownAsyncBinaryIO.readline"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,builtins.bytes]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "aiofiles.threadpool.binary._UnknownAsyncBinaryIO"
        fully_qualified_name: "aiofiles.threadpool.binary._UnknownAsyncBinaryIO"
      }
    }
    parameters {
      name: "__size"
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    is_asynchronous: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "readlines"
    fully_qualified_name: "aiofiles.threadpool.binary._UnknownAsyncBinaryIO.readlines"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,builtins.list[builtins.bytes]]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "builtins.list[builtins.bytes]"
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        fully_qualified_name: "builtins.list"
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "aiofiles.threadpool.binary._UnknownAsyncBinaryIO"
        fully_qualified_name: "aiofiles.threadpool.binary._UnknownAsyncBinaryIO"
      }
    }
    parameters {
      name: "__hint"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    is_asynchronous: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "seek"
    fully_qualified_name: "aiofiles.threadpool.binary._UnknownAsyncBinaryIO.seek"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,builtins.int]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "aiofiles.threadpool.binary._UnknownAsyncBinaryIO"
        fully_qualified_name: "aiofiles.threadpool.binary._UnknownAsyncBinaryIO"
      }
    }
    parameters {
      name: "__offset"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "__whence"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    is_asynchronous: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "seekable"
    fully_qualified_name: "aiofiles.threadpool.binary._UnknownAsyncBinaryIO.seekable"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,builtins.bool]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "aiofiles.threadpool.binary._UnknownAsyncBinaryIO"
        fully_qualified_name: "aiofiles.threadpool.binary._UnknownAsyncBinaryIO"
      }
    }
    is_asynchronous: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "tell"
    fully_qualified_name: "aiofiles.threadpool.binary._UnknownAsyncBinaryIO.tell"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,builtins.int]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "aiofiles.threadpool.binary._UnknownAsyncBinaryIO"
        fully_qualified_name: "aiofiles.threadpool.binary._UnknownAsyncBinaryIO"
      }
    }
    is_asynchronous: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "truncate"
    fully_qualified_name: "aiofiles.threadpool.binary._UnknownAsyncBinaryIO.truncate"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,builtins.int]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "aiofiles.threadpool.binary._UnknownAsyncBinaryIO"
        fully_qualified_name: "aiofiles.threadpool.binary._UnknownAsyncBinaryIO"
      }
    }
    parameters {
      name: "__size"
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    is_asynchronous: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "writable"
    fully_qualified_name: "aiofiles.threadpool.binary._UnknownAsyncBinaryIO.writable"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,builtins.bool]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "aiofiles.threadpool.binary._UnknownAsyncBinaryIO"
        fully_qualified_name: "aiofiles.threadpool.binary._UnknownAsyncBinaryIO"
      }
    }
    is_asynchronous: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "write"
    fully_qualified_name: "aiofiles.threadpool.binary._UnknownAsyncBinaryIO.write"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,builtins.int]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "aiofiles.threadpool.binary._UnknownAsyncBinaryIO"
        fully_qualified_name: "aiofiles.threadpool.binary._UnknownAsyncBinaryIO"
      }
    }
    parameters {
      name: "__b"
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.bytearray"
            fully_qualified_name: "builtins.bytearray"
          }
          args {
            pretty_printed_name: "builtins.memoryview"
            fully_qualified_name: "builtins.memoryview"
          }
          args {
            pretty_printed_name: "array.array[Any]"
            args {
              pretty_printed_name: "Any"
              kind: ANY
            }
            fully_qualified_name: "array.array"
          }
          args {
            pretty_printed_name: "mmap.mmap"
            fully_qualified_name: "mmap.mmap"
          }
        }
        fully_qualified_name: "_typeshed.ReadableBuffer"
      }
    }
    is_asynchronous: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "writelines"
    fully_qualified_name: "aiofiles.threadpool.binary._UnknownAsyncBinaryIO.writelines"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,None]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "aiofiles.threadpool.binary._UnknownAsyncBinaryIO"
        fully_qualified_name: "aiofiles.threadpool.binary._UnknownAsyncBinaryIO"
      }
    }
    parameters {
      name: "__lines"
      type_annotation {
        pretty_printed_name: "typing.Iterable[TypeAlias[Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]]]"
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "builtins.bytearray"
              fully_qualified_name: "builtins.bytearray"
            }
            args {
              pretty_printed_name: "builtins.memoryview"
              fully_qualified_name: "builtins.memoryview"
            }
            args {
              pretty_printed_name: "array.array[Any]"
              args {
                pretty_printed_name: "Any"
                kind: ANY
              }
              fully_qualified_name: "array.array"
            }
            args {
              pretty_printed_name: "mmap.mmap"
              fully_qualified_name: "mmap.mmap"
            }
          }
          fully_qualified_name: "_typeshed.ReadableBuffer"
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    is_asynchronous: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "fileno"
    fully_qualified_name: "aiofiles.threadpool.binary._UnknownAsyncBinaryIO.fileno"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "aiofiles.threadpool.binary._UnknownAsyncBinaryIO"
        fully_qualified_name: "aiofiles.threadpool.binary._UnknownAsyncBinaryIO"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "readable"
    fully_qualified_name: "aiofiles.threadpool.binary._UnknownAsyncBinaryIO.readable"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "aiofiles.threadpool.binary._UnknownAsyncBinaryIO"
        fully_qualified_name: "aiofiles.threadpool.binary._UnknownAsyncBinaryIO"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "closed"
    fully_qualified_name: "aiofiles.threadpool.binary._UnknownAsyncBinaryIO.closed"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "aiofiles.threadpool.binary._UnknownAsyncBinaryIO"
        fully_qualified_name: "aiofiles.threadpool.binary._UnknownAsyncBinaryIO"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "mode"
    fully_qualified_name: "aiofiles.threadpool.binary._UnknownAsyncBinaryIO.mode"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "aiofiles.threadpool.binary._UnknownAsyncBinaryIO"
        fully_qualified_name: "aiofiles.threadpool.binary._UnknownAsyncBinaryIO"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "name"
    fully_qualified_name: "aiofiles.threadpool.binary._UnknownAsyncBinaryIO.name"
    return_annotation {
      pretty_printed_name: "Union[Any,builtins.int]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "aiofiles.threadpool.binary._UnknownAsyncBinaryIO"
        fully_qualified_name: "aiofiles.threadpool.binary._UnknownAsyncBinaryIO"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "AsyncTextIOWrapper"
  fully_qualified_name: "aiofiles.threadpool.text.AsyncTextIOWrapper"
  super_classes: "aiofiles.base.AsyncBase"
  methods {
    name: "close"
    fully_qualified_name: "aiofiles.threadpool.text.AsyncTextIOWrapper.close"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,None]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "aiofiles.threadpool.text.AsyncTextIOWrapper"
        fully_qualified_name: "aiofiles.threadpool.text.AsyncTextIOWrapper"
      }
    }
    is_asynchronous: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "flush"
    fully_qualified_name: "aiofiles.threadpool.text.AsyncTextIOWrapper.flush"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,None]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "aiofiles.threadpool.text.AsyncTextIOWrapper"
        fully_qualified_name: "aiofiles.threadpool.text.AsyncTextIOWrapper"
      }
    }
    is_asynchronous: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "isatty"
    fully_qualified_name: "aiofiles.threadpool.text.AsyncTextIOWrapper.isatty"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,builtins.bool]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "aiofiles.threadpool.text.AsyncTextIOWrapper"
        fully_qualified_name: "aiofiles.threadpool.text.AsyncTextIOWrapper"
      }
    }
    is_asynchronous: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "read"
    fully_qualified_name: "aiofiles.threadpool.text.AsyncTextIOWrapper.read"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,builtins.str]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "aiofiles.threadpool.text.AsyncTextIOWrapper"
        fully_qualified_name: "aiofiles.threadpool.text.AsyncTextIOWrapper"
      }
    }
    parameters {
      name: "__size"
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    is_asynchronous: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "readline"
    fully_qualified_name: "aiofiles.threadpool.text.AsyncTextIOWrapper.readline"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,builtins.str]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "aiofiles.threadpool.text.AsyncTextIOWrapper"
        fully_qualified_name: "aiofiles.threadpool.text.AsyncTextIOWrapper"
      }
    }
    parameters {
      name: "__size"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    is_asynchronous: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "readlines"
    fully_qualified_name: "aiofiles.threadpool.text.AsyncTextIOWrapper.readlines"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,builtins.list[builtins.str]]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "builtins.list[builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "builtins.list"
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "aiofiles.threadpool.text.AsyncTextIOWrapper"
        fully_qualified_name: "aiofiles.threadpool.text.AsyncTextIOWrapper"
      }
    }
    parameters {
      name: "__hint"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    is_asynchronous: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "seek"
    fully_qualified_name: "aiofiles.threadpool.text.AsyncTextIOWrapper.seek"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,builtins.int]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "aiofiles.threadpool.text.AsyncTextIOWrapper"
        fully_qualified_name: "aiofiles.threadpool.text.AsyncTextIOWrapper"
      }
    }
    parameters {
      name: "__offset"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "__whence"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    is_asynchronous: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "seekable"
    fully_qualified_name: "aiofiles.threadpool.text.AsyncTextIOWrapper.seekable"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,builtins.bool]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "aiofiles.threadpool.text.AsyncTextIOWrapper"
        fully_qualified_name: "aiofiles.threadpool.text.AsyncTextIOWrapper"
      }
    }
    is_asynchronous: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "tell"
    fully_qualified_name: "aiofiles.threadpool.text.AsyncTextIOWrapper.tell"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,builtins.int]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "aiofiles.threadpool.text.AsyncTextIOWrapper"
        fully_qualified_name: "aiofiles.threadpool.text.AsyncTextIOWrapper"
      }
    }
    is_asynchronous: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "truncate"
    fully_qualified_name: "aiofiles.threadpool.text.AsyncTextIOWrapper.truncate"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,builtins.int]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "aiofiles.threadpool.text.AsyncTextIOWrapper"
        fully_qualified_name: "aiofiles.threadpool.text.AsyncTextIOWrapper"
      }
    }
    parameters {
      name: "__size"
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    is_asynchronous: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "writable"
    fully_qualified_name: "aiofiles.threadpool.text.AsyncTextIOWrapper.writable"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,builtins.bool]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "aiofiles.threadpool.text.AsyncTextIOWrapper"
        fully_qualified_name: "aiofiles.threadpool.text.AsyncTextIOWrapper"
      }
    }
    is_asynchronous: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "write"
    fully_qualified_name: "aiofiles.threadpool.text.AsyncTextIOWrapper.write"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,builtins.int]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "aiofiles.threadpool.text.AsyncTextIOWrapper"
        fully_qualified_name: "aiofiles.threadpool.text.AsyncTextIOWrapper"
      }
    }
    parameters {
      name: "__b"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    is_asynchronous: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "writelines"
    fully_qualified_name: "aiofiles.threadpool.text.AsyncTextIOWrapper.writelines"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,None]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "aiofiles.threadpool.text.AsyncTextIOWrapper"
        fully_qualified_name: "aiofiles.threadpool.text.AsyncTextIOWrapper"
      }
    }
    parameters {
      name: "__lines"
      type_annotation {
        pretty_printed_name: "typing.Iterable[builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    is_asynchronous: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "detach"
    fully_qualified_name: "aiofiles.threadpool.text.AsyncTextIOWrapper.detach"
    return_annotation {
      pretty_printed_name: "typing.BinaryIO"
      fully_qualified_name: "typing.BinaryIO"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "aiofiles.threadpool.text.AsyncTextIOWrapper"
        fully_qualified_name: "aiofiles.threadpool.text.AsyncTextIOWrapper"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "fileno"
    fully_qualified_name: "aiofiles.threadpool.text.AsyncTextIOWrapper.fileno"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "aiofiles.threadpool.text.AsyncTextIOWrapper"
        fully_qualified_name: "aiofiles.threadpool.text.AsyncTextIOWrapper"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "readable"
    fully_qualified_name: "aiofiles.threadpool.text.AsyncTextIOWrapper.readable"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "aiofiles.threadpool.text.AsyncTextIOWrapper"
        fully_qualified_name: "aiofiles.threadpool.text.AsyncTextIOWrapper"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "buffer"
    fully_qualified_name: "aiofiles.threadpool.text.AsyncTextIOWrapper.buffer"
    return_annotation {
      pretty_printed_name: "typing.BinaryIO"
      fully_qualified_name: "typing.BinaryIO"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "aiofiles.threadpool.text.AsyncTextIOWrapper"
        fully_qualified_name: "aiofiles.threadpool.text.AsyncTextIOWrapper"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "closed"
    fully_qualified_name: "aiofiles.threadpool.text.AsyncTextIOWrapper.closed"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "aiofiles.threadpool.text.AsyncTextIOWrapper"
        fully_qualified_name: "aiofiles.threadpool.text.AsyncTextIOWrapper"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "encoding"
    fully_qualified_name: "aiofiles.threadpool.text.AsyncTextIOWrapper.encoding"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "aiofiles.threadpool.text.AsyncTextIOWrapper"
        fully_qualified_name: "aiofiles.threadpool.text.AsyncTextIOWrapper"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "errors"
    fully_qualified_name: "aiofiles.threadpool.text.AsyncTextIOWrapper.errors"
    return_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "aiofiles.threadpool.text.AsyncTextIOWrapper"
        fully_qualified_name: "aiofiles.threadpool.text.AsyncTextIOWrapper"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "line_buffering"
    fully_qualified_name: "aiofiles.threadpool.text.AsyncTextIOWrapper.line_buffering"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "aiofiles.threadpool.text.AsyncTextIOWrapper"
        fully_qualified_name: "aiofiles.threadpool.text.AsyncTextIOWrapper"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "newlines"
    fully_qualified_name: "aiofiles.threadpool.text.AsyncTextIOWrapper.newlines"
    return_annotation {
      pretty_printed_name: "Union[builtins.str,builtins.tuple[builtins.str],None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.tuple[builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "builtins.tuple"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "aiofiles.threadpool.text.AsyncTextIOWrapper"
        fully_qualified_name: "aiofiles.threadpool.text.AsyncTextIOWrapper"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "name"
    fully_qualified_name: "aiofiles.threadpool.text.AsyncTextIOWrapper.name"
    return_annotation {
      pretty_printed_name: "Union[Any,builtins.int]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "aiofiles.threadpool.text.AsyncTextIOWrapper"
        fully_qualified_name: "aiofiles.threadpool.text.AsyncTextIOWrapper"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "mode"
    fully_qualified_name: "aiofiles.threadpool.text.AsyncTextIOWrapper.mode"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "aiofiles.threadpool.text.AsyncTextIOWrapper"
        fully_qualified_name: "aiofiles.threadpool.text.AsyncTextIOWrapper"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
overloaded_functions {
  name: "open"
  fullname: "aiofiles.threadpool.open"
  definitions {
    name: "open"
    fully_qualified_name: "aiofiles.threadpool.open"
    return_annotation {
      pretty_printed_name: "aiofiles.base.AiofilesContextManager[None,None,aiofiles.threadpool.text.AsyncTextIOWrapper]"
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
      args {
        pretty_printed_name: "aiofiles.threadpool.text.AsyncTextIOWrapper"
        fully_qualified_name: "aiofiles.threadpool.text.AsyncTextIOWrapper"
      }
      fully_qualified_name: "aiofiles.base.AiofilesContextManager"
    }
    parameters {
      name: "file"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[Any,builtins.int]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[Any,builtins.int]"
          kind: UNION
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
        }
        fully_qualified_name: "aiofiles.threadpool._OpenFile"
      }
    }
    parameters {
      name: "mode"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]]"
          kind: UNION
          args {
            pretty_printed_name: "TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]"
              kind: UNION
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
            }
            fully_qualified_name: "_typeshed.OpenTextModeUpdating"
          }
          args {
            pretty_printed_name: "TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]"
              kind: UNION
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
            }
            fully_qualified_name: "_typeshed.OpenTextModeWriting"
          }
          args {
            pretty_printed_name: "TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]"
              kind: UNION
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
            }
            fully_qualified_name: "_typeshed.OpenTextModeReading"
          }
        }
        fully_qualified_name: "_typeshed.OpenTextMode"
      }
      has_default: true
    }
    parameters {
      name: "buffering"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    parameters {
      name: "encoding"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "errors"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "newline"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "closefd"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    parameters {
      name: "opener"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[CallableType[builtins.function],None]"
        kind: UNION
        args {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "loop"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[asyncio.events.AbstractEventLoop,None]"
        kind: UNION
        args {
          pretty_printed_name: "asyncio.events.AbstractEventLoop"
          fully_qualified_name: "asyncio.events.AbstractEventLoop"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "executor"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "open"
    fully_qualified_name: "aiofiles.threadpool.open"
    return_annotation {
      pretty_printed_name: "aiofiles.base.AiofilesContextManager[None,None,aiofiles.threadpool.binary.AsyncFileIO]"
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
      args {
        pretty_printed_name: "aiofiles.threadpool.binary.AsyncFileIO"
        fully_qualified_name: "aiofiles.threadpool.binary.AsyncFileIO"
      }
      fully_qualified_name: "aiofiles.base.AiofilesContextManager"
    }
    parameters {
      name: "file"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[Any,builtins.int]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[Any,builtins.int]"
          kind: UNION
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
        }
        fully_qualified_name: "aiofiles.threadpool._OpenFile"
      }
    }
    parameters {
      name: "mode"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]]"
          kind: UNION
          args {
            pretty_printed_name: "TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]"
              kind: UNION
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
            }
            fully_qualified_name: "_typeshed.OpenBinaryModeUpdating"
          }
          args {
            pretty_printed_name: "TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]"
              kind: UNION
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
            }
            fully_qualified_name: "_typeshed.OpenBinaryModeReading"
          }
          args {
            pretty_printed_name: "TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]"
              kind: UNION
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
            }
            fully_qualified_name: "_typeshed.OpenBinaryModeWriting"
          }
        }
        fully_qualified_name: "_typeshed.OpenBinaryMode"
      }
    }
    parameters {
      name: "buffering"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Literal[builtins.int]"
        kind: LITERAL
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
    }
    parameters {
      name: "encoding"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      has_default: true
    }
    parameters {
      name: "errors"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      has_default: true
    }
    parameters {
      name: "newline"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      has_default: true
    }
    parameters {
      name: "closefd"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    parameters {
      name: "opener"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[CallableType[builtins.function],None]"
        kind: UNION
        args {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "loop"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[asyncio.events.AbstractEventLoop,None]"
        kind: UNION
        args {
          pretty_printed_name: "asyncio.events.AbstractEventLoop"
          fully_qualified_name: "asyncio.events.AbstractEventLoop"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "executor"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "open"
    fully_qualified_name: "aiofiles.threadpool.open"
    return_annotation {
      pretty_printed_name: "aiofiles.base.AiofilesContextManager[None,None,aiofiles.threadpool.binary.AsyncBufferedReader]"
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
      args {
        pretty_printed_name: "aiofiles.threadpool.binary.AsyncBufferedReader"
        fully_qualified_name: "aiofiles.threadpool.binary.AsyncBufferedReader"
      }
      fully_qualified_name: "aiofiles.base.AiofilesContextManager"
    }
    parameters {
      name: "file"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[Any,builtins.int]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[Any,builtins.int]"
          kind: UNION
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
        }
        fully_qualified_name: "aiofiles.threadpool._OpenFile"
      }
    }
    parameters {
      name: "mode"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]]"
        kind: UNION
        args {
          pretty_printed_name: "TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]"
            kind: UNION
            args {
              pretty_printed_name: "Literal[builtins.str]"
              kind: LITERAL
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
            }
            args {
              pretty_printed_name: "Literal[builtins.str]"
              kind: LITERAL
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
            }
            args {
              pretty_printed_name: "Literal[builtins.str]"
              kind: LITERAL
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
            }
            args {
              pretty_printed_name: "Literal[builtins.str]"
              kind: LITERAL
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
            }
            args {
              pretty_printed_name: "Literal[builtins.str]"
              kind: LITERAL
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
            }
            args {
              pretty_printed_name: "Literal[builtins.str]"
              kind: LITERAL
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
            }
            args {
              pretty_printed_name: "Literal[builtins.str]"
              kind: LITERAL
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
            }
            args {
              pretty_printed_name: "Literal[builtins.str]"
              kind: LITERAL
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
            }
          }
          fully_qualified_name: "_typeshed.OpenBinaryModeReading"
        }
        args {
          pretty_printed_name: "TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]"
            kind: UNION
            args {
              pretty_printed_name: "Literal[builtins.str]"
              kind: LITERAL
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
            }
            args {
              pretty_printed_name: "Literal[builtins.str]"
              kind: LITERAL
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
            }
            args {
              pretty_printed_name: "Literal[builtins.str]"
              kind: LITERAL
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
            }
            args {
              pretty_printed_name: "Literal[builtins.str]"
              kind: LITERAL
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
            }
            args {
              pretty_printed_name: "Literal[builtins.str]"
              kind: LITERAL
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
            }
            args {
              pretty_printed_name: "Literal[builtins.str]"
              kind: LITERAL
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
            }
            args {
              pretty_printed_name: "Literal[builtins.str]"
              kind: LITERAL
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
            }
            args {
              pretty_printed_name: "Literal[builtins.str]"
              kind: LITERAL
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
            }
            args {
              pretty_printed_name: "Literal[builtins.str]"
              kind: LITERAL
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
            }
            args {
              pretty_printed_name: "Literal[builtins.str]"
              kind: LITERAL
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
            }
            args {
              pretty_printed_name: "Literal[builtins.str]"
              kind: LITERAL
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
            }
            args {
              pretty_printed_name: "Literal[builtins.str]"
              kind: LITERAL
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
            }
            args {
              pretty_printed_name: "Literal[builtins.str]"
              kind: LITERAL
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
            }
            args {
              pretty_printed_name: "Literal[builtins.str]"
              kind: LITERAL
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
            }
            args {
              pretty_printed_name: "Literal[builtins.str]"
              kind: LITERAL
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
            }
            args {
              pretty_printed_name: "Literal[builtins.str]"
              kind: LITERAL
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
            }
            args {
              pretty_printed_name: "Literal[builtins.str]"
              kind: LITERAL
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
            }
            args {
              pretty_printed_name: "Literal[builtins.str]"
              kind: LITERAL
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
            }
            args {
              pretty_printed_name: "Literal[builtins.str]"
              kind: LITERAL
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
            }
            args {
              pretty_printed_name: "Literal[builtins.str]"
              kind: LITERAL
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
            }
            args {
              pretty_printed_name: "Literal[builtins.str]"
              kind: LITERAL
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
            }
            args {
              pretty_printed_name: "Literal[builtins.str]"
              kind: LITERAL
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
            }
            args {
              pretty_printed_name: "Literal[builtins.str]"
              kind: LITERAL
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
            }
            args {
              pretty_printed_name: "Literal[builtins.str]"
              kind: LITERAL
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
            }
          }
          fully_qualified_name: "_typeshed.OpenBinaryModeUpdating"
        }
      }
    }
    parameters {
      name: "buffering"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Literal[builtins.int],Literal[builtins.int]]"
        kind: UNION
        args {
          pretty_printed_name: "Literal[builtins.int]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
        }
        args {
          pretty_printed_name: "Literal[builtins.int]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
        }
      }
      has_default: true
    }
    parameters {
      name: "encoding"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      has_default: true
    }
    parameters {
      name: "errors"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      has_default: true
    }
    parameters {
      name: "newline"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      has_default: true
    }
    parameters {
      name: "closefd"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    parameters {
      name: "opener"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[CallableType[builtins.function],None]"
        kind: UNION
        args {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "loop"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[asyncio.events.AbstractEventLoop,None]"
        kind: UNION
        args {
          pretty_printed_name: "asyncio.events.AbstractEventLoop"
          fully_qualified_name: "asyncio.events.AbstractEventLoop"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "executor"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "open"
    fully_qualified_name: "aiofiles.threadpool.open"
    return_annotation {
      pretty_printed_name: "aiofiles.base.AiofilesContextManager[None,None,aiofiles.threadpool.binary.AsyncBufferedIOBase]"
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
      args {
        pretty_printed_name: "aiofiles.threadpool.binary.AsyncBufferedIOBase"
        fully_qualified_name: "aiofiles.threadpool.binary.AsyncBufferedIOBase"
      }
      fully_qualified_name: "aiofiles.base.AiofilesContextManager"
    }
    parameters {
      name: "file"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[Any,builtins.int]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[Any,builtins.int]"
          kind: UNION
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
        }
        fully_qualified_name: "aiofiles.threadpool._OpenFile"
      }
    }
    parameters {
      name: "mode"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]"
          kind: UNION
          args {
            pretty_printed_name: "Literal[builtins.str]"
            kind: LITERAL
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          args {
            pretty_printed_name: "Literal[builtins.str]"
            kind: LITERAL
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          args {
            pretty_printed_name: "Literal[builtins.str]"
            kind: LITERAL
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          args {
            pretty_printed_name: "Literal[builtins.str]"
            kind: LITERAL
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          args {
            pretty_printed_name: "Literal[builtins.str]"
            kind: LITERAL
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          args {
            pretty_printed_name: "Literal[builtins.str]"
            kind: LITERAL
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
        }
        fully_qualified_name: "_typeshed.OpenBinaryModeWriting"
      }
    }
    parameters {
      name: "buffering"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Literal[builtins.int],Literal[builtins.int]]"
        kind: UNION
        args {
          pretty_printed_name: "Literal[builtins.int]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
        }
        args {
          pretty_printed_name: "Literal[builtins.int]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
        }
      }
      has_default: true
    }
    parameters {
      name: "encoding"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      has_default: true
    }
    parameters {
      name: "errors"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      has_default: true
    }
    parameters {
      name: "newline"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      has_default: true
    }
    parameters {
      name: "closefd"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    parameters {
      name: "opener"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[CallableType[builtins.function],None]"
        kind: UNION
        args {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "loop"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[asyncio.events.AbstractEventLoop,None]"
        kind: UNION
        args {
          pretty_printed_name: "asyncio.events.AbstractEventLoop"
          fully_qualified_name: "asyncio.events.AbstractEventLoop"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "executor"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "open"
    fully_qualified_name: "aiofiles.threadpool.open"
    return_annotation {
      pretty_printed_name: "aiofiles.base.AiofilesContextManager[None,None,aiofiles.threadpool.binary._UnknownAsyncBinaryIO]"
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
      args {
        pretty_printed_name: "aiofiles.threadpool.binary._UnknownAsyncBinaryIO"
        fully_qualified_name: "aiofiles.threadpool.binary._UnknownAsyncBinaryIO"
      }
      fully_qualified_name: "aiofiles.base.AiofilesContextManager"
    }
    parameters {
      name: "file"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[Any,builtins.int]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[Any,builtins.int]"
          kind: UNION
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
        }
        fully_qualified_name: "aiofiles.threadpool._OpenFile"
      }
    }
    parameters {
      name: "mode"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]]"
          kind: UNION
          args {
            pretty_printed_name: "TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]"
              kind: UNION
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
            }
            fully_qualified_name: "_typeshed.OpenBinaryModeUpdating"
          }
          args {
            pretty_printed_name: "TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]"
              kind: UNION
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
            }
            fully_qualified_name: "_typeshed.OpenBinaryModeReading"
          }
          args {
            pretty_printed_name: "TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]"
              kind: UNION
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
            }
            fully_qualified_name: "_typeshed.OpenBinaryModeWriting"
          }
        }
        fully_qualified_name: "_typeshed.OpenBinaryMode"
      }
    }
    parameters {
      name: "buffering"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "encoding"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      has_default: true
    }
    parameters {
      name: "errors"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      has_default: true
    }
    parameters {
      name: "newline"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      has_default: true
    }
    parameters {
      name: "closefd"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    parameters {
      name: "opener"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[CallableType[builtins.function],None]"
        kind: UNION
        args {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "loop"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[asyncio.events.AbstractEventLoop,None]"
        kind: UNION
        args {
          pretty_printed_name: "asyncio.events.AbstractEventLoop"
          fully_qualified_name: "asyncio.events.AbstractEventLoop"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "executor"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "StrOrBytesPath"
  fully_qualified_name: "aiofiles.threadpool.StrOrBytesPath"
  type_annotation {
    pretty_printed_name: "Any"
    kind: ANY
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
