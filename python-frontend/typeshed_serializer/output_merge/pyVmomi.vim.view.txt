fully_qualified_name: "pyVmomi.vim.view"
classes {
  name: "ContainerView"
  fully_qualified_name: "pyVmomi.vim.view.ContainerView"
  super_classes: "builtins.object"
  methods {
    name: "Destroy"
    fully_qualified_name: "pyVmomi.vim.view.ContainerView.Destroy"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "pyVmomi.vim.view.ContainerView"
        fully_qualified_name: "pyVmomi.vim.view.ContainerView"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "ViewManager"
  fully_qualified_name: "pyVmomi.vim.view.ViewManager"
  super_classes: "builtins.object"
  methods {
    name: "CreateContainerView"
    fully_qualified_name: "pyVmomi.vim.view.ViewManager.CreateContainerView"
    return_annotation {
      pretty_printed_name: "pyVmomi.vim.view.ContainerView"
      fully_qualified_name: "pyVmomi.vim.view.ContainerView"
    }
    parameters {
      name: "container"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "pyVmomi.vim.ManagedEntity"
        fully_qualified_name: "pyVmomi.vim.ManagedEntity"
      }
    }
    parameters {
      name: "type"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.list[Type[pyVmomi.vim.ManagedEntity]]"
        args {
          pretty_printed_name: "Type[pyVmomi.vim.ManagedEntity]"
          kind: TYPE
          args {
            pretty_printed_name: "pyVmomi.vim.ManagedEntity"
            fully_qualified_name: "pyVmomi.vim.ManagedEntity"
          }
        }
        fully_qualified_name: "builtins.list"
      }
    }
    parameters {
      name: "recursive"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    has_decorators: true
    resolved_decorator_names: "staticmethod"
    is_static: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "__getattr__"
  fully_qualified_name: "pyVmomi.vim.view.__getattr__"
  return_annotation {
    pretty_printed_name: "Any"
    kind: ANY
  }
  parameters {
    name: "name"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
