fully_qualified_name: "asyncio.base_subprocess"
classes {
  name: "BaseSubprocessTransport"
  fully_qualified_name: "asyncio.base_subprocess.BaseSubprocessTransport"
  super_classes: "asyncio.transports.SubprocessTransport"
  methods {
    name: "__init__"
    fully_qualified_name: "asyncio.base_subprocess.BaseSubprocessTransport.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.base_subprocess.BaseSubprocessTransport"
        fully_qualified_name: "asyncio.base_subprocess.BaseSubprocessTransport"
      }
    }
    parameters {
      name: "loop"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.events.AbstractEventLoop"
        fully_qualified_name: "asyncio.events.AbstractEventLoop"
      }
    }
    parameters {
      name: "protocol"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.protocols.SubprocessProtocol"
        fully_qualified_name: "asyncio.protocols.SubprocessProtocol"
      }
    }
    parameters {
      name: "args"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,builtins.bytes,typing.Sequence[Union[builtins.str,builtins.bytes]]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "typing.Sequence[Union[builtins.str,builtins.bytes]]"
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
          }
          fully_qualified_name: "typing.Sequence"
        }
      }
    }
    parameters {
      name: "shell"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    parameters {
      name: "stdin"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UnboundType[_File]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "stdout"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UnboundType[_File]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "stderr"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UnboundType[_File]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "bufsize"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "waiter"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[asyncio.futures.Future[Any],None]"
        kind: UNION
        args {
          pretty_printed_name: "asyncio.futures.Future[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "asyncio.futures.Future"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "extra"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "kwargs"
      kind: VAR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "_start"
    fully_qualified_name: "asyncio.base_subprocess.BaseSubprocessTransport._start"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.base_subprocess.BaseSubprocessTransport"
        fully_qualified_name: "asyncio.base_subprocess.BaseSubprocessTransport"
      }
    }
    parameters {
      name: "args"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,builtins.bytes,typing.Sequence[Union[builtins.str,builtins.bytes]]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "typing.Sequence[Union[builtins.str,builtins.bytes]]"
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
          }
          fully_qualified_name: "typing.Sequence"
        }
      }
    }
    parameters {
      name: "shell"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    parameters {
      name: "stdin"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UnboundType[_File]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "stdout"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UnboundType[_File]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "stderr"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UnboundType[_File]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "bufsize"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "kwargs"
      kind: VAR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "get_pid"
    fully_qualified_name: "asyncio.base_subprocess.BaseSubprocessTransport.get_pid"
    return_annotation {
      pretty_printed_name: "Union[builtins.int,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.base_subprocess.BaseSubprocessTransport"
        fully_qualified_name: "asyncio.base_subprocess.BaseSubprocessTransport"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "get_pipe_transport"
    fully_qualified_name: "asyncio.base_subprocess.BaseSubprocessTransport.get_pipe_transport"
    return_annotation {
      pretty_printed_name: "UnboundType[_File]"
      kind: UNBOUND
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.base_subprocess.BaseSubprocessTransport"
        fully_qualified_name: "asyncio.base_subprocess.BaseSubprocessTransport"
      }
    }
    parameters {
      name: "fd"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "_check_proc"
    fully_qualified_name: "asyncio.base_subprocess.BaseSubprocessTransport._check_proc"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.base_subprocess.BaseSubprocessTransport"
        fully_qualified_name: "asyncio.base_subprocess.BaseSubprocessTransport"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "send_signal"
    fully_qualified_name: "asyncio.base_subprocess.BaseSubprocessTransport.send_signal"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.base_subprocess.BaseSubprocessTransport"
        fully_qualified_name: "asyncio.base_subprocess.BaseSubprocessTransport"
      }
    }
    parameters {
      name: "signal"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "_connect_pipes"
    fully_qualified_name: "asyncio.base_subprocess.BaseSubprocessTransport._connect_pipes"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,None]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.base_subprocess.BaseSubprocessTransport"
        fully_qualified_name: "asyncio.base_subprocess.BaseSubprocessTransport"
      }
    }
    parameters {
      name: "waiter"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[asyncio.futures.Future[Any],None]"
        kind: UNION
        args {
          pretty_printed_name: "asyncio.futures.Future[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "asyncio.futures.Future"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    is_asynchronous: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "_call"
    fully_qualified_name: "asyncio.base_subprocess.BaseSubprocessTransport._call"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.base_subprocess.BaseSubprocessTransport"
        fully_qualified_name: "asyncio.base_subprocess.BaseSubprocessTransport"
      }
    }
    parameters {
      name: "cb"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    parameters {
      name: "data"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "_pipe_connection_lost"
    fully_qualified_name: "asyncio.base_subprocess.BaseSubprocessTransport._pipe_connection_lost"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.base_subprocess.BaseSubprocessTransport"
        fully_qualified_name: "asyncio.base_subprocess.BaseSubprocessTransport"
      }
    }
    parameters {
      name: "fd"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "exc"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.BaseException,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.BaseException"
          fully_qualified_name: "builtins.BaseException"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "_pipe_data_received"
    fully_qualified_name: "asyncio.base_subprocess.BaseSubprocessTransport._pipe_data_received"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.base_subprocess.BaseSubprocessTransport"
        fully_qualified_name: "asyncio.base_subprocess.BaseSubprocessTransport"
      }
    }
    parameters {
      name: "fd"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "data"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "_process_exited"
    fully_qualified_name: "asyncio.base_subprocess.BaseSubprocessTransport._process_exited"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.base_subprocess.BaseSubprocessTransport"
        fully_qualified_name: "asyncio.base_subprocess.BaseSubprocessTransport"
      }
    }
    parameters {
      name: "returncode"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "_wait"
    fully_qualified_name: "asyncio.base_subprocess.BaseSubprocessTransport._wait"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,builtins.int]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.base_subprocess.BaseSubprocessTransport"
        fully_qualified_name: "asyncio.base_subprocess.BaseSubprocessTransport"
      }
    }
    is_asynchronous: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "_try_finish"
    fully_qualified_name: "asyncio.base_subprocess.BaseSubprocessTransport._try_finish"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.base_subprocess.BaseSubprocessTransport"
        fully_qualified_name: "asyncio.base_subprocess.BaseSubprocessTransport"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "_call_connection_lost"
    fully_qualified_name: "asyncio.base_subprocess.BaseSubprocessTransport._call_connection_lost"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.base_subprocess.BaseSubprocessTransport"
        fully_qualified_name: "asyncio.base_subprocess.BaseSubprocessTransport"
      }
    }
    parameters {
      name: "exc"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.BaseException,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.BaseException"
          fully_qualified_name: "builtins.BaseException"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "_closed"
    fully_qualified_name: "asyncio.base_subprocess.BaseSubprocessTransport._closed"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "_protocol"
    fully_qualified_name: "asyncio.base_subprocess.BaseSubprocessTransport._protocol"
    type_annotation {
      pretty_printed_name: "asyncio.protocols.SubprocessProtocol"
      fully_qualified_name: "asyncio.protocols.SubprocessProtocol"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "_loop"
    fully_qualified_name: "asyncio.base_subprocess.BaseSubprocessTransport._loop"
    type_annotation {
      pretty_printed_name: "asyncio.events.AbstractEventLoop"
      fully_qualified_name: "asyncio.events.AbstractEventLoop"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "_proc"
    fully_qualified_name: "asyncio.base_subprocess.BaseSubprocessTransport._proc"
    type_annotation {
      pretty_printed_name: "Union[subprocess.Popen[Any],None]"
      kind: UNION
      args {
        pretty_printed_name: "subprocess.Popen[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "subprocess.Popen"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "_pid"
    fully_qualified_name: "asyncio.base_subprocess.BaseSubprocessTransport._pid"
    type_annotation {
      pretty_printed_name: "Union[builtins.int,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "_returncode"
    fully_qualified_name: "asyncio.base_subprocess.BaseSubprocessTransport._returncode"
    type_annotation {
      pretty_printed_name: "Union[builtins.int,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "_exit_waiters"
    fully_qualified_name: "asyncio.base_subprocess.BaseSubprocessTransport._exit_waiters"
    type_annotation {
      pretty_printed_name: "builtins.list[asyncio.futures.Future[Any]]"
      args {
        pretty_printed_name: "asyncio.futures.Future[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "asyncio.futures.Future"
      }
      fully_qualified_name: "builtins.list"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "_pending_calls"
    fully_qualified_name: "asyncio.base_subprocess.BaseSubprocessTransport._pending_calls"
    type_annotation {
      pretty_printed_name: "collections.deque[Tuple[CallableType[builtins.function],Tuple[Any,Any]]]"
      args {
        pretty_printed_name: "Tuple[CallableType[builtins.function],Tuple[Any,Any]]"
        kind: TUPLE
        args {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
        args {
          pretty_printed_name: "Tuple[Any,Any]"
          kind: TUPLE
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
        }
      }
      fully_qualified_name: "collections.deque"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
  }
  attributes {
    name: "_pending_calls"
    fully_qualified_name: "asyncio.base_subprocess.BaseSubprocessTransport._pending_calls"
    type_annotation {
      pretty_printed_name: "collections.deque[Tuple[CallableType[builtins.function],builtins.tuple[Any]]]"
      args {
        pretty_printed_name: "Tuple[CallableType[builtins.function],builtins.tuple[Any]]"
        kind: TUPLE
        args {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
        args {
          pretty_printed_name: "builtins.tuple[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "builtins.tuple"
        }
      }
      fully_qualified_name: "collections.deque"
    }
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "_pipes"
    fully_qualified_name: "asyncio.base_subprocess.BaseSubprocessTransport._pipes"
    type_annotation {
      pretty_printed_name: "builtins.dict[builtins.int,UnboundType[_File]]"
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "UnboundType[_File]"
        kind: UNBOUND
      }
      fully_qualified_name: "builtins.dict"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "_finished"
    fully_qualified_name: "asyncio.base_subprocess.BaseSubprocessTransport._finished"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "WriteSubprocessPipeProto"
  fully_qualified_name: "asyncio.base_subprocess.WriteSubprocessPipeProto"
  super_classes: "asyncio.protocols.BaseProtocol"
  methods {
    name: "__init__"
    fully_qualified_name: "asyncio.base_subprocess.WriteSubprocessPipeProto.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.base_subprocess.WriteSubprocessPipeProto"
        fully_qualified_name: "asyncio.base_subprocess.WriteSubprocessPipeProto"
      }
    }
    parameters {
      name: "proc"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.base_subprocess.BaseSubprocessTransport"
        fully_qualified_name: "asyncio.base_subprocess.BaseSubprocessTransport"
      }
    }
    parameters {
      name: "fd"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "ReadSubprocessPipeProto"
  fully_qualified_name: "asyncio.base_subprocess.ReadSubprocessPipeProto"
  super_classes: "asyncio.base_subprocess.WriteSubprocessPipeProto"
  super_classes: "asyncio.protocols.Protocol"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "_File"
  fully_qualified_name: "asyncio.base_subprocess._File"
  type_annotation {
    pretty_printed_name: "UnboundType[TypeAlias]"
    kind: UNBOUND
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
