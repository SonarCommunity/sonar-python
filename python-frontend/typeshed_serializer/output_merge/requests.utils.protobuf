fully_qualified_name: "requests.utils"
functions {
  name: "dict_to_sequence"
  fully_qualified_name: "requests.utils.dict_to_sequence"
  parameters {
    name: "d"
    kind: POSITIONAL_OR_KEYWORD
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "super_len"
  fully_qualified_name: "requests.utils.super_len"
  parameters {
    name: "o"
    kind: POSITIONAL_OR_KEYWORD
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "get_netrc_auth"
  fully_qualified_name: "requests.utils.get_netrc_auth"
  return_annotation {
    pretty_printed_name: "Any"
    kind: ANY
  }
  parameters {
    name: "url"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  parameters {
    name: "raise_errors"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "guess_filename"
  fully_qualified_name: "requests.utils.guess_filename"
  parameters {
    name: "obj"
    kind: POSITIONAL_OR_KEYWORD
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "extract_zipped_paths"
  fully_qualified_name: "requests.utils.extract_zipped_paths"
  parameters {
    name: "path"
    kind: POSITIONAL_OR_KEYWORD
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "from_key_val_list"
  fully_qualified_name: "requests.utils.from_key_val_list"
  parameters {
    name: "value"
    kind: POSITIONAL_OR_KEYWORD
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "to_key_val_list"
  fully_qualified_name: "requests.utils.to_key_val_list"
  parameters {
    name: "value"
    kind: POSITIONAL_OR_KEYWORD
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "parse_list_header"
  fully_qualified_name: "requests.utils.parse_list_header"
  parameters {
    name: "value"
    kind: POSITIONAL_OR_KEYWORD
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "parse_dict_header"
  fully_qualified_name: "requests.utils.parse_dict_header"
  parameters {
    name: "value"
    kind: POSITIONAL_OR_KEYWORD
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "unquote_header_value"
  fully_qualified_name: "requests.utils.unquote_header_value"
  parameters {
    name: "value"
    kind: POSITIONAL_OR_KEYWORD
  }
  parameters {
    name: "is_filename"
    kind: POSITIONAL_OR_KEYWORD
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "dict_from_cookiejar"
  fully_qualified_name: "requests.utils.dict_from_cookiejar"
  parameters {
    name: "cj"
    kind: POSITIONAL_OR_KEYWORD
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "add_dict_to_cookiejar"
  fully_qualified_name: "requests.utils.add_dict_to_cookiejar"
  parameters {
    name: "cj"
    kind: POSITIONAL_OR_KEYWORD
  }
  parameters {
    name: "cookie_dict"
    kind: POSITIONAL_OR_KEYWORD
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "get_encodings_from_content"
  fully_qualified_name: "requests.utils.get_encodings_from_content"
  parameters {
    name: "content"
    kind: POSITIONAL_OR_KEYWORD
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "get_encoding_from_headers"
  fully_qualified_name: "requests.utils.get_encoding_from_headers"
  parameters {
    name: "headers"
    kind: POSITIONAL_OR_KEYWORD
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "stream_decode_response_unicode"
  fully_qualified_name: "requests.utils.stream_decode_response_unicode"
  parameters {
    name: "iterator"
    kind: POSITIONAL_OR_KEYWORD
  }
  parameters {
    name: "r"
    kind: POSITIONAL_OR_KEYWORD
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "iter_slices"
  fully_qualified_name: "requests.utils.iter_slices"
  parameters {
    name: "string"
    kind: POSITIONAL_OR_KEYWORD
  }
  parameters {
    name: "slice_length"
    kind: POSITIONAL_OR_KEYWORD
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "get_unicode_from_response"
  fully_qualified_name: "requests.utils.get_unicode_from_response"
  parameters {
    name: "r"
    kind: POSITIONAL_OR_KEYWORD
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "unquote_unreserved"
  fully_qualified_name: "requests.utils.unquote_unreserved"
  parameters {
    name: "uri"
    kind: POSITIONAL_OR_KEYWORD
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "requote_uri"
  fully_qualified_name: "requests.utils.requote_uri"
  parameters {
    name: "uri"
    kind: POSITIONAL_OR_KEYWORD
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "address_in_network"
  fully_qualified_name: "requests.utils.address_in_network"
  parameters {
    name: "ip"
    kind: POSITIONAL_OR_KEYWORD
  }
  parameters {
    name: "net"
    kind: POSITIONAL_OR_KEYWORD
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "dotted_netmask"
  fully_qualified_name: "requests.utils.dotted_netmask"
  parameters {
    name: "mask"
    kind: POSITIONAL_OR_KEYWORD
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "is_ipv4_address"
  fully_qualified_name: "requests.utils.is_ipv4_address"
  parameters {
    name: "string_ip"
    kind: POSITIONAL_OR_KEYWORD
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "is_valid_cidr"
  fully_qualified_name: "requests.utils.is_valid_cidr"
  parameters {
    name: "string_network"
    kind: POSITIONAL_OR_KEYWORD
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "set_environ"
  fully_qualified_name: "requests.utils.set_environ"
  parameters {
    name: "env_name"
    kind: POSITIONAL_OR_KEYWORD
  }
  parameters {
    name: "value"
    kind: POSITIONAL_OR_KEYWORD
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "should_bypass_proxies"
  fully_qualified_name: "requests.utils.should_bypass_proxies"
  return_annotation {
    pretty_printed_name: "builtins.bool"
    fully_qualified_name: "builtins.bool"
  }
  parameters {
    name: "url"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  parameters {
    name: "no_proxy"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[typing.Iterable[typing.AnyStr],None]"
      kind: UNION
      args {
        pretty_printed_name: "typing.Iterable[typing.AnyStr]"
        args {
          pretty_printed_name: "typing.AnyStr"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "get_environ_proxies"
  fully_qualified_name: "requests.utils.get_environ_proxies"
  return_annotation {
    pretty_printed_name: "builtins.dict[Any,Any]"
    args {
      pretty_printed_name: "Any"
      kind: ANY
    }
    args {
      pretty_printed_name: "Any"
      kind: ANY
    }
    fully_qualified_name: "builtins.dict"
  }
  parameters {
    name: "url"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  parameters {
    name: "no_proxy"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[typing.Iterable[typing.AnyStr],None]"
      kind: UNION
      args {
        pretty_printed_name: "typing.Iterable[typing.AnyStr]"
        args {
          pretty_printed_name: "typing.AnyStr"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "select_proxy"
  fully_qualified_name: "requests.utils.select_proxy"
  return_annotation {
    pretty_printed_name: "Any"
    kind: ANY
  }
  parameters {
    name: "url"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  parameters {
    name: "proxies"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[typing.Mapping[Any,Any],None]"
      kind: UNION
      args {
        pretty_printed_name: "typing.Mapping[Any,Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "typing.Mapping"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "default_user_agent"
  fully_qualified_name: "requests.utils.default_user_agent"
  parameters {
    name: "name"
    kind: POSITIONAL_OR_KEYWORD
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "default_headers"
  fully_qualified_name: "requests.utils.default_headers"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "parse_header_links"
  fully_qualified_name: "requests.utils.parse_header_links"
  parameters {
    name: "value"
    kind: POSITIONAL_OR_KEYWORD
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "guess_json_utf"
  fully_qualified_name: "requests.utils.guess_json_utf"
  parameters {
    name: "data"
    kind: POSITIONAL_OR_KEYWORD
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "prepend_scheme_if_needed"
  fully_qualified_name: "requests.utils.prepend_scheme_if_needed"
  parameters {
    name: "url"
    kind: POSITIONAL_OR_KEYWORD
  }
  parameters {
    name: "new_scheme"
    kind: POSITIONAL_OR_KEYWORD
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "get_auth_from_url"
  fully_qualified_name: "requests.utils.get_auth_from_url"
  parameters {
    name: "url"
    kind: POSITIONAL_OR_KEYWORD
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "to_native_string"
  fully_qualified_name: "requests.utils.to_native_string"
  parameters {
    name: "string"
    kind: POSITIONAL_OR_KEYWORD
  }
  parameters {
    name: "encoding"
    kind: POSITIONAL_OR_KEYWORD
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "urldefragauth"
  fully_qualified_name: "requests.utils.urldefragauth"
  parameters {
    name: "url"
    kind: POSITIONAL_OR_KEYWORD
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "rewind_body"
  fully_qualified_name: "requests.utils.rewind_body"
  parameters {
    name: "prepared_request"
    kind: POSITIONAL_OR_KEYWORD
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "check_header_validity"
  fully_qualified_name: "requests.utils.check_header_validity"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "header"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Tuple[typing.AnyStr,typing.AnyStr]"
      kind: TUPLE
      args {
        pretty_printed_name: "typing.AnyStr"
        kind: TYPE_VAR
      }
      args {
        pretty_printed_name: "typing.AnyStr"
        kind: TYPE_VAR
      }
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "cookiejar_from_dict"
  fully_qualified_name: "requests.utils.cookiejar_from_dict"
  type_annotation {
    pretty_printed_name: "CallableType[builtins.function]"
    kind: CALLABLE
    args {
      pretty_printed_name: "builtins.function"
      fully_qualified_name: "builtins.function"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "NETRC_FILES"
  fully_qualified_name: "requests.utils.NETRC_FILES"
  type_annotation {
    pretty_printed_name: "Any"
    kind: ANY
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "DEFAULT_CA_BUNDLE_PATH"
  fully_qualified_name: "requests.utils.DEFAULT_CA_BUNDLE_PATH"
  type_annotation {
    pretty_printed_name: "Any"
    kind: ANY
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "DEFAULT_PORTS"
  fully_qualified_name: "requests.utils.DEFAULT_PORTS"
  type_annotation {
    pretty_printed_name: "Any"
    kind: ANY
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "UNRESERVED_SET"
  fully_qualified_name: "requests.utils.UNRESERVED_SET"
  type_annotation {
    pretty_printed_name: "Any"
    kind: ANY
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
