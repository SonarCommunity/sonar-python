fully_qualified_name: "importlib.abc"
classes {
  name: "Finder"
  fully_qualified_name: "importlib.abc.Finder"
  super_classes: "builtins.object"
  has_metaclass: true
  metaclass_name: "abc.ABCMeta"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "ResourceLoader"
  fully_qualified_name: "importlib.abc.ResourceLoader"
  super_classes: "importlib.abc.Loader"
  methods {
    name: "get_data"
    fully_qualified_name: "importlib.abc.ResourceLoader.get_data"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "importlib.abc.ResourceLoader"
        fully_qualified_name: "importlib.abc.ResourceLoader"
      }
    }
    parameters {
      name: "path"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.str]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.str]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        fully_qualified_name: "importlib.abc._Path"
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "InspectLoader"
  fully_qualified_name: "importlib.abc.InspectLoader"
  super_classes: "importlib.abc.Loader"
  methods {
    name: "is_package"
    fully_qualified_name: "importlib.abc.InspectLoader.is_package"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "importlib.abc.InspectLoader"
        fully_qualified_name: "importlib.abc.InspectLoader"
      }
    }
    parameters {
      name: "fullname"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "get_code"
    fully_qualified_name: "importlib.abc.InspectLoader.get_code"
    return_annotation {
      pretty_printed_name: "Union[types.CodeType,None]"
      kind: UNION
      args {
        pretty_printed_name: "types.CodeType"
        fully_qualified_name: "types.CodeType"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "importlib.abc.InspectLoader"
        fully_qualified_name: "importlib.abc.InspectLoader"
      }
    }
    parameters {
      name: "fullname"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "load_module"
    fully_qualified_name: "importlib.abc.InspectLoader.load_module"
    return_annotation {
      pretty_printed_name: "types.ModuleType"
      fully_qualified_name: "types.ModuleType"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "importlib.abc.InspectLoader"
        fully_qualified_name: "importlib.abc.InspectLoader"
      }
    }
    parameters {
      name: "fullname"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "get_source"
    fully_qualified_name: "importlib.abc.InspectLoader.get_source"
    return_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "importlib.abc.InspectLoader"
        fully_qualified_name: "importlib.abc.InspectLoader"
      }
    }
    parameters {
      name: "fullname"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "exec_module"
    fully_qualified_name: "importlib.abc.InspectLoader.exec_module"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "importlib.abc.InspectLoader"
        fully_qualified_name: "importlib.abc.InspectLoader"
      }
    }
    parameters {
      name: "module"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "types.ModuleType"
        fully_qualified_name: "types.ModuleType"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "source_to_code"
    fully_qualified_name: "importlib.abc.InspectLoader.source_to_code"
    return_annotation {
      pretty_printed_name: "types.CodeType"
      fully_qualified_name: "types.CodeType"
    }
    parameters {
      name: "data"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.bytes,builtins.str]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
    }
    parameters {
      name: "path"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "staticmethod"
    is_static: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "ExecutionLoader"
  fully_qualified_name: "importlib.abc.ExecutionLoader"
  super_classes: "importlib.abc.InspectLoader"
  methods {
    name: "get_filename"
    fully_qualified_name: "importlib.abc.ExecutionLoader.get_filename"
    return_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.str]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.bytes,builtins.str]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      fully_qualified_name: "importlib.abc._Path"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "importlib.abc.ExecutionLoader"
        fully_qualified_name: "importlib.abc.ExecutionLoader"
      }
    }
    parameters {
      name: "fullname"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "get_code"
    fully_qualified_name: "importlib.abc.ExecutionLoader.get_code"
    return_annotation {
      pretty_printed_name: "Union[types.CodeType,None]"
      kind: UNION
      args {
        pretty_printed_name: "types.CodeType"
        fully_qualified_name: "types.CodeType"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "importlib.abc.ExecutionLoader"
        fully_qualified_name: "importlib.abc.ExecutionLoader"
      }
    }
    parameters {
      name: "fullname"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "SourceLoader"
  fully_qualified_name: "importlib.abc.SourceLoader"
  super_classes: "importlib.abc.ResourceLoader"
  super_classes: "importlib.abc.ExecutionLoader"
  methods {
    name: "path_mtime"
    fully_qualified_name: "importlib.abc.SourceLoader.path_mtime"
    return_annotation {
      pretty_printed_name: "builtins.float"
      fully_qualified_name: "builtins.float"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "importlib.abc.SourceLoader"
        fully_qualified_name: "importlib.abc.SourceLoader"
      }
    }
    parameters {
      name: "path"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.str]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.str]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        fully_qualified_name: "importlib.abc._Path"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "set_data"
    fully_qualified_name: "importlib.abc.SourceLoader.set_data"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "importlib.abc.SourceLoader"
        fully_qualified_name: "importlib.abc.SourceLoader"
      }
    }
    parameters {
      name: "path"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.str]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.str]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        fully_qualified_name: "importlib.abc._Path"
      }
    }
    parameters {
      name: "data"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "get_source"
    fully_qualified_name: "importlib.abc.SourceLoader.get_source"
    return_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "importlib.abc.SourceLoader"
        fully_qualified_name: "importlib.abc.SourceLoader"
      }
    }
    parameters {
      name: "fullname"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "path_stats"
    fully_qualified_name: "importlib.abc.SourceLoader.path_stats"
    return_annotation {
      pretty_printed_name: "typing.Mapping[builtins.str,Any]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "typing.Mapping"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "importlib.abc.SourceLoader"
        fully_qualified_name: "importlib.abc.SourceLoader"
      }
    }
    parameters {
      name: "path"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.str]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.str]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        fully_qualified_name: "importlib.abc._Path"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  has_metaclass: true
  metaclass_name: "abc.ABCMeta"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "MetaPathFinder"
  fully_qualified_name: "importlib.abc.MetaPathFinder"
  super_classes: "importlib.abc.Finder"
  methods {
    name: "find_module"
    fully_qualified_name: "importlib.abc.MetaPathFinder.find_module"
    return_annotation {
      pretty_printed_name: "Union[importlib.abc.Loader,None]"
      kind: UNION
      args {
        pretty_printed_name: "importlib.abc.Loader"
        fully_qualified_name: "importlib.abc.Loader"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "importlib.abc.MetaPathFinder"
        fully_qualified_name: "importlib.abc.MetaPathFinder"
      }
    }
    parameters {
      name: "fullname"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "path"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.Sequence[TypeAlias[Union[builtins.bytes,builtins.str]]],None]"
        kind: UNION
        args {
          pretty_printed_name: "typing.Sequence[TypeAlias[Union[builtins.bytes,builtins.str]]]"
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.str]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.bytes,builtins.str]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
            }
            fully_qualified_name: "importlib.abc._Path"
          }
          fully_qualified_name: "typing.Sequence"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "invalidate_caches"
    fully_qualified_name: "importlib.abc.MetaPathFinder.invalidate_caches"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "importlib.abc.MetaPathFinder"
        fully_qualified_name: "importlib.abc.MetaPathFinder"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "find_spec"
    fully_qualified_name: "importlib.abc.MetaPathFinder.find_spec"
    return_annotation {
      pretty_printed_name: "Union[importlib.machinery.ModuleSpec,None]"
      kind: UNION
      args {
        pretty_printed_name: "importlib.machinery.ModuleSpec"
        fully_qualified_name: "importlib.machinery.ModuleSpec"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "importlib.abc.MetaPathFinder"
        fully_qualified_name: "importlib.abc.MetaPathFinder"
      }
    }
    parameters {
      name: "fullname"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "path"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.Sequence[TypeAlias[Union[builtins.bytes,builtins.str]]],None]"
        kind: UNION
        args {
          pretty_printed_name: "typing.Sequence[TypeAlias[Union[builtins.bytes,builtins.str]]]"
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.str]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.bytes,builtins.str]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
            }
            fully_qualified_name: "importlib.abc._Path"
          }
          fully_qualified_name: "typing.Sequence"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "target"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[types.ModuleType,None]"
        kind: UNION
        args {
          pretty_printed_name: "types.ModuleType"
          fully_qualified_name: "types.ModuleType"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "PathEntryFinder"
  fully_qualified_name: "importlib.abc.PathEntryFinder"
  super_classes: "importlib.abc.Finder"
  methods {
    name: "find_module"
    fully_qualified_name: "importlib.abc.PathEntryFinder.find_module"
    return_annotation {
      pretty_printed_name: "Union[importlib.abc.Loader,None]"
      kind: UNION
      args {
        pretty_printed_name: "importlib.abc.Loader"
        fully_qualified_name: "importlib.abc.Loader"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "importlib.abc.PathEntryFinder"
        fully_qualified_name: "importlib.abc.PathEntryFinder"
      }
    }
    parameters {
      name: "fullname"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "find_loader"
    fully_qualified_name: "importlib.abc.PathEntryFinder.find_loader"
    return_annotation {
      pretty_printed_name: "Tuple[Union[importlib.abc.Loader,None],typing.Sequence[TypeAlias[Union[builtins.bytes,builtins.str]]]]"
      kind: TUPLE
      args {
        pretty_printed_name: "Union[importlib.abc.Loader,None]"
        kind: UNION
        args {
          pretty_printed_name: "importlib.abc.Loader"
          fully_qualified_name: "importlib.abc.Loader"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      args {
        pretty_printed_name: "typing.Sequence[TypeAlias[Union[builtins.bytes,builtins.str]]]"
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.str]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.bytes,builtins.str]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          fully_qualified_name: "importlib.abc._Path"
        }
        fully_qualified_name: "typing.Sequence"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "importlib.abc.PathEntryFinder"
        fully_qualified_name: "importlib.abc.PathEntryFinder"
      }
    }
    parameters {
      name: "fullname"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "invalidate_caches"
    fully_qualified_name: "importlib.abc.PathEntryFinder.invalidate_caches"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "importlib.abc.PathEntryFinder"
        fully_qualified_name: "importlib.abc.PathEntryFinder"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "find_spec"
    fully_qualified_name: "importlib.abc.PathEntryFinder.find_spec"
    return_annotation {
      pretty_printed_name: "Union[importlib.machinery.ModuleSpec,None]"
      kind: UNION
      args {
        pretty_printed_name: "importlib.machinery.ModuleSpec"
        fully_qualified_name: "importlib.machinery.ModuleSpec"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "importlib.abc.PathEntryFinder"
        fully_qualified_name: "importlib.abc.PathEntryFinder"
      }
    }
    parameters {
      name: "fullname"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "target"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[types.ModuleType,None]"
        kind: UNION
        args {
          pretty_printed_name: "types.ModuleType"
          fully_qualified_name: "types.ModuleType"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "Loader"
  fully_qualified_name: "importlib.abc.Loader"
  super_classes: "builtins.object"
  methods {
    name: "load_module"
    fully_qualified_name: "importlib.abc.Loader.load_module"
    return_annotation {
      pretty_printed_name: "types.ModuleType"
      fully_qualified_name: "types.ModuleType"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "importlib.abc.Loader"
        fully_qualified_name: "importlib.abc.Loader"
      }
    }
    parameters {
      name: "fullname"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "module_repr"
    fully_qualified_name: "importlib.abc.Loader.module_repr"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "importlib.abc.Loader"
        fully_qualified_name: "importlib.abc.Loader"
      }
    }
    parameters {
      name: "module"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "types.ModuleType"
        fully_qualified_name: "types.ModuleType"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "create_module"
    fully_qualified_name: "importlib.abc.Loader.create_module"
    return_annotation {
      pretty_printed_name: "Union[types.ModuleType,None]"
      kind: UNION
      args {
        pretty_printed_name: "types.ModuleType"
        fully_qualified_name: "types.ModuleType"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "importlib.abc.Loader"
        fully_qualified_name: "importlib.abc.Loader"
      }
    }
    parameters {
      name: "spec"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "importlib.machinery.ModuleSpec"
        fully_qualified_name: "importlib.machinery.ModuleSpec"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "exec_module"
    fully_qualified_name: "importlib.abc.Loader.exec_module"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "importlib.abc.Loader"
        fully_qualified_name: "importlib.abc.Loader"
      }
    }
    parameters {
      name: "module"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "types.ModuleType"
        fully_qualified_name: "types.ModuleType"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  has_metaclass: true
  metaclass_name: "abc.ABCMeta"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "_LoaderProtocol"
  fully_qualified_name: "importlib.abc._LoaderProtocol"
  super_classes: "builtins.object"
  methods {
    name: "load_module"
    fully_qualified_name: "importlib.abc._LoaderProtocol.load_module"
    return_annotation {
      pretty_printed_name: "types.ModuleType"
      fully_qualified_name: "types.ModuleType"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "importlib.abc._LoaderProtocol"
        fully_qualified_name: "importlib.abc._LoaderProtocol"
      }
    }
    parameters {
      name: "fullname"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  is_protocol: true
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "FileLoader"
  fully_qualified_name: "importlib.abc.FileLoader"
  super_classes: "importlib.abc.ResourceLoader"
  super_classes: "importlib.abc.ExecutionLoader"
  methods {
    name: "__init__"
    fully_qualified_name: "importlib.abc.FileLoader.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "importlib.abc.FileLoader"
        fully_qualified_name: "importlib.abc.FileLoader"
      }
    }
    parameters {
      name: "fullname"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "path"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.str]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.str]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        fully_qualified_name: "importlib.abc._Path"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "get_data"
    fully_qualified_name: "importlib.abc.FileLoader.get_data"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "importlib.abc.FileLoader"
        fully_qualified_name: "importlib.abc.FileLoader"
      }
    }
    parameters {
      name: "path"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.str]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.str]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        fully_qualified_name: "importlib.abc._Path"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "get_filename"
    fully_qualified_name: "importlib.abc.FileLoader.get_filename"
    return_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.str]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.bytes,builtins.str]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      fully_qualified_name: "importlib.abc._Path"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "importlib.abc.FileLoader"
        fully_qualified_name: "importlib.abc.FileLoader"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "load_module"
    fully_qualified_name: "importlib.abc.FileLoader.load_module"
    return_annotation {
      pretty_printed_name: "types.ModuleType"
      fully_qualified_name: "types.ModuleType"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "importlib.abc.FileLoader"
        fully_qualified_name: "importlib.abc.FileLoader"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  has_metaclass: true
  metaclass_name: "abc.ABCMeta"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "name"
    fully_qualified_name: "importlib.abc.FileLoader.name"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "path"
    fully_qualified_name: "importlib.abc.FileLoader.path"
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.str]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.bytes,builtins.str]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      fully_qualified_name: "importlib.abc._Path"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "ResourceReader"
  fully_qualified_name: "importlib.abc.ResourceReader"
  super_classes: "builtins.object"
  methods {
    name: "open_resource"
    fully_qualified_name: "importlib.abc.ResourceReader.open_resource"
    return_annotation {
      pretty_printed_name: "typing.IO[builtins.bytes]"
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
      fully_qualified_name: "typing.IO"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "importlib.abc.ResourceReader"
        fully_qualified_name: "importlib.abc.ResourceReader"
      }
    }
    parameters {
      name: "resource"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "os.PathLike[builtins.str]"
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            fully_qualified_name: "os.PathLike"
          }
          args {
            pretty_printed_name: "os.PathLike[builtins.bytes]"
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            fully_qualified_name: "os.PathLike"
          }
        }
        fully_qualified_name: "_typeshed.StrOrBytesPath"
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "resource_path"
    fully_qualified_name: "importlib.abc.ResourceReader.resource_path"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "importlib.abc.ResourceReader"
        fully_qualified_name: "importlib.abc.ResourceReader"
      }
    }
    parameters {
      name: "resource"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "os.PathLike[builtins.str]"
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            fully_qualified_name: "os.PathLike"
          }
          args {
            pretty_printed_name: "os.PathLike[builtins.bytes]"
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            fully_qualified_name: "os.PathLike"
          }
        }
        fully_qualified_name: "_typeshed.StrOrBytesPath"
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "is_resource"
    fully_qualified_name: "importlib.abc.ResourceReader.is_resource"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "importlib.abc.ResourceReader"
        fully_qualified_name: "importlib.abc.ResourceReader"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "contents"
    fully_qualified_name: "importlib.abc.ResourceReader.contents"
    return_annotation {
      pretty_printed_name: "typing.Iterator[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "importlib.abc.ResourceReader"
        fully_qualified_name: "importlib.abc.ResourceReader"
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  has_metaclass: true
  metaclass_name: "abc.ABCMeta"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "Traversable"
  fully_qualified_name: "importlib.abc.Traversable"
  super_classes: "builtins.object"
  methods {
    name: "iterdir"
    fully_qualified_name: "importlib.abc.Traversable.iterdir"
    return_annotation {
      pretty_printed_name: "typing.Iterator[importlib.abc.Traversable]"
      args {
        pretty_printed_name: "importlib.abc.Traversable"
        fully_qualified_name: "importlib.abc.Traversable"
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "importlib.abc.Traversable"
        fully_qualified_name: "importlib.abc.Traversable"
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "read_bytes"
    fully_qualified_name: "importlib.abc.Traversable.read_bytes"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "importlib.abc.Traversable"
        fully_qualified_name: "importlib.abc.Traversable"
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "read_text"
    fully_qualified_name: "importlib.abc.Traversable.read_text"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "importlib.abc.Traversable"
        fully_qualified_name: "importlib.abc.Traversable"
      }
    }
    parameters {
      name: "encoding"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "is_dir"
    fully_qualified_name: "importlib.abc.Traversable.is_dir"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "importlib.abc.Traversable"
        fully_qualified_name: "importlib.abc.Traversable"
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "is_file"
    fully_qualified_name: "importlib.abc.Traversable.is_file"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "importlib.abc.Traversable"
        fully_qualified_name: "importlib.abc.Traversable"
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "joinpath"
    fully_qualified_name: "importlib.abc.Traversable.joinpath"
    return_annotation {
      pretty_printed_name: "importlib.abc.Traversable"
      fully_qualified_name: "importlib.abc.Traversable"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "importlib.abc.Traversable"
        fully_qualified_name: "importlib.abc.Traversable"
      }
    }
    parameters {
      name: "child"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.str]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.str]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        fully_qualified_name: "importlib.abc._Path"
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__truediv__"
    fully_qualified_name: "importlib.abc.Traversable.__truediv__"
    return_annotation {
      pretty_printed_name: "importlib.abc.Traversable"
      fully_qualified_name: "importlib.abc.Traversable"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "importlib.abc.Traversable"
        fully_qualified_name: "importlib.abc.Traversable"
      }
    }
    parameters {
      name: "child"
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.str]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.str]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        fully_qualified_name: "importlib.abc._Path"
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "open"
    fully_qualified_name: "importlib.abc.Traversable.open"
    return_annotation {
      pretty_printed_name: "typing.IO[Any]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "typing.IO"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "importlib.abc.Traversable"
        fully_qualified_name: "importlib.abc.Traversable"
      }
    }
    parameters {
      name: "mode"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Literal[builtins.str],Literal[builtins.str]]"
        kind: UNION
        args {
          pretty_printed_name: "Literal[builtins.str]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        args {
          pretty_printed_name: "Literal[builtins.str]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
      }
      has_default: true
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "kwargs"
      kind: VAR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "name"
    fully_qualified_name: "importlib.abc.Traversable.name"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "importlib.abc.Traversable"
        fully_qualified_name: "importlib.abc.Traversable"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    is_property: true
    valid_for: "39"
    valid_for: "310"
  }
  has_decorators: true
  is_protocol: true
  valid_for: "39"
  valid_for: "310"
}
