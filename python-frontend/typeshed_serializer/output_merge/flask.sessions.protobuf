fully_qualified_name: "flask.sessions"
classes {
  name: "Flask"
  fully_qualified_name: "flask.app.Flask"
  super_classes: "flask.scaffold.Scaffold"
  methods {
    name: "__init__"
    fully_qualified_name: "flask.app.Flask.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    parameters {
      name: "import_name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "static_url_path"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "static_folder"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,os.PathLike[Any],None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "os.PathLike[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "os.PathLike"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "static_host"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "host_matching"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    parameters {
      name: "subdomain_matching"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    parameters {
      name: "template_folder"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,os.PathLike[Any],None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "os.PathLike[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "os.PathLike"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "instance_path"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "instance_relative_config"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    parameters {
      name: "root_path"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
  }
  methods {
    name: "name"
    fully_qualified_name: "flask.app.Flask.name"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
  }
  methods {
    name: "propagate_exceptions"
    fully_qualified_name: "flask.app.Flask.propagate_exceptions"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "logger"
    fully_qualified_name: "flask.app.Flask.logger"
    return_annotation {
      pretty_printed_name: "logging.Logger"
      fully_qualified_name: "logging.Logger"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
  }
  methods {
    name: "jinja_env"
    fully_qualified_name: "flask.app.Flask.jinja_env"
    return_annotation {
      pretty_printed_name: "flask.templating.Environment"
      fully_qualified_name: "flask.templating.Environment"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
  }
  methods {
    name: "got_first_request"
    fully_qualified_name: "flask.app.Flask.got_first_request"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "make_config"
    fully_qualified_name: "flask.app.Flask.make_config"
    return_annotation {
      pretty_printed_name: "flask.config.Config"
      fully_qualified_name: "flask.config.Config"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    parameters {
      name: "instance_relative"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
  }
  methods {
    name: "make_aborter"
    fully_qualified_name: "flask.app.Flask.make_aborter"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
  }
  methods {
    name: "auto_find_instance_path"
    fully_qualified_name: "flask.app.Flask.auto_find_instance_path"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
  }
  methods {
    name: "open_instance_resource"
    fully_qualified_name: "flask.app.Flask.open_instance_resource"
    return_annotation {
      pretty_printed_name: "typing.IO[typing.AnyStr]"
      args {
        pretty_printed_name: "typing.AnyStr"
        kind: TYPE_VAR
      }
      fully_qualified_name: "typing.IO"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    parameters {
      name: "resource"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "mode"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      has_default: true
    }
  }
  methods {
    name: "create_jinja_environment"
    fully_qualified_name: "flask.app.Flask.create_jinja_environment"
    return_annotation {
      pretty_printed_name: "flask.templating.Environment"
      fully_qualified_name: "flask.templating.Environment"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
  }
  methods {
    name: "create_global_jinja_loader"
    fully_qualified_name: "flask.app.Flask.create_global_jinja_loader"
    return_annotation {
      pretty_printed_name: "flask.templating.DispatchingJinjaLoader"
      fully_qualified_name: "flask.templating.DispatchingJinjaLoader"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
  }
  methods {
    name: "select_jinja_autoescape"
    fully_qualified_name: "flask.app.Flask.select_jinja_autoescape"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    parameters {
      name: "filename"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  methods {
    name: "update_template_context"
    fully_qualified_name: "flask.app.Flask.update_template_context"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    parameters {
      name: "context"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.dict[Any,Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "builtins.dict"
      }
    }
  }
  methods {
    name: "make_shell_context"
    fully_qualified_name: "flask.app.Flask.make_shell_context"
    return_annotation {
      pretty_printed_name: "builtins.dict[Any,Any]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "builtins.dict"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
  }
  methods {
    name: "run"
    fully_qualified_name: "flask.app.Flask.run"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    parameters {
      name: "host"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "port"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "debug"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.bool,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "load_dotenv"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    parameters {
      name: "options"
      kind: VAR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
  }
  methods {
    name: "test_client"
    fully_qualified_name: "flask.app.Flask.test_client"
    return_annotation {
      pretty_printed_name: "flask.testing.FlaskClient"
      fully_qualified_name: "flask.testing.FlaskClient"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    parameters {
      name: "use_cookies"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    parameters {
      name: "kwargs"
      kind: VAR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
  }
  methods {
    name: "test_cli_runner"
    fully_qualified_name: "flask.app.Flask.test_cli_runner"
    return_annotation {
      pretty_printed_name: "flask.testing.FlaskCliRunner"
      fully_qualified_name: "flask.testing.FlaskCliRunner"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    parameters {
      name: "kwargs"
      kind: VAR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
  }
  methods {
    name: "register_blueprint"
    fully_qualified_name: "flask.app.Flask.register_blueprint"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    parameters {
      name: "blueprint"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.blueprints.Blueprint"
        fully_qualified_name: "flask.blueprints.Blueprint"
      }
    }
    parameters {
      name: "options"
      kind: VAR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
  }
  methods {
    name: "iter_blueprints"
    fully_qualified_name: "flask.app.Flask.iter_blueprints"
    return_annotation {
      pretty_printed_name: "typing.ValuesView[flask.blueprints.Blueprint]"
      args {
        pretty_printed_name: "flask.blueprints.Blueprint"
        fully_qualified_name: "flask.blueprints.Blueprint"
      }
      fully_qualified_name: "typing.ValuesView"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
  }
  methods {
    name: "add_url_rule"
    fully_qualified_name: "flask.app.Flask.add_url_rule"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    parameters {
      name: "rule"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "endpoint"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "view_func"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "provide_automatic_options"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.bool,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "options"
      kind: VAR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
  }
  methods {
    name: "template_filter"
    fully_qualified_name: "flask.app.Flask.template_filter"
    return_annotation {
      pretty_printed_name: "CallableType[builtins.function]"
      kind: CALLABLE
      args {
        pretty_printed_name: "builtins.function"
        fully_qualified_name: "builtins.function"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
  }
  methods {
    name: "add_template_filter"
    fully_qualified_name: "flask.app.Flask.add_template_filter"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    parameters {
      name: "f"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
  }
  methods {
    name: "template_test"
    fully_qualified_name: "flask.app.Flask.template_test"
    return_annotation {
      pretty_printed_name: "CallableType[builtins.function]"
      kind: CALLABLE
      args {
        pretty_printed_name: "builtins.function"
        fully_qualified_name: "builtins.function"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
  }
  methods {
    name: "add_template_test"
    fully_qualified_name: "flask.app.Flask.add_template_test"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    parameters {
      name: "f"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
  }
  methods {
    name: "template_global"
    fully_qualified_name: "flask.app.Flask.template_global"
    return_annotation {
      pretty_printed_name: "CallableType[builtins.function]"
      kind: CALLABLE
      args {
        pretty_printed_name: "builtins.function"
        fully_qualified_name: "builtins.function"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
  }
  methods {
    name: "add_template_global"
    fully_qualified_name: "flask.app.Flask.add_template_global"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    parameters {
      name: "f"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
  }
  methods {
    name: "before_first_request"
    fully_qualified_name: "flask.app.Flask.before_first_request"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    parameters {
      name: "f"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
  }
  methods {
    name: "teardown_appcontext"
    fully_qualified_name: "flask.app.Flask.teardown_appcontext"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    parameters {
      name: "f"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
  }
  methods {
    name: "shell_context_processor"
    fully_qualified_name: "flask.app.Flask.shell_context_processor"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    parameters {
      name: "f"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
  }
  methods {
    name: "handle_http_exception"
    fully_qualified_name: "flask.app.Flask.handle_http_exception"
    return_annotation {
      pretty_printed_name: "Union[Any,Any]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    parameters {
      name: "e"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
  }
  methods {
    name: "trap_http_exception"
    fully_qualified_name: "flask.app.Flask.trap_http_exception"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    parameters {
      name: "e"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.Exception"
        fully_qualified_name: "builtins.Exception"
      }
    }
  }
  methods {
    name: "handle_user_exception"
    fully_qualified_name: "flask.app.Flask.handle_user_exception"
    return_annotation {
      pretty_printed_name: "Union[Any,Any]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    parameters {
      name: "e"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.Exception"
        fully_qualified_name: "builtins.Exception"
      }
    }
  }
  methods {
    name: "handle_exception"
    fully_qualified_name: "flask.app.Flask.handle_exception"
    return_annotation {
      pretty_printed_name: "flask.wrappers.Response"
      fully_qualified_name: "flask.wrappers.Response"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    parameters {
      name: "e"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.Exception"
        fully_qualified_name: "builtins.Exception"
      }
    }
  }
  methods {
    name: "log_exception"
    fully_qualified_name: "flask.app.Flask.log_exception"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    parameters {
      name: "exc_info"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Tuple[builtins.type,builtins.BaseException,types.TracebackType],Tuple[None,None,None]]"
        kind: UNION
        args {
          pretty_printed_name: "Tuple[builtins.type,builtins.BaseException,types.TracebackType]"
          kind: TUPLE
          args {
            pretty_printed_name: "builtins.type"
            fully_qualified_name: "builtins.type"
          }
          args {
            pretty_printed_name: "builtins.BaseException"
            fully_qualified_name: "builtins.BaseException"
          }
          args {
            pretty_printed_name: "types.TracebackType"
            fully_qualified_name: "types.TracebackType"
          }
        }
        args {
          pretty_printed_name: "Tuple[None,None,None]"
          kind: TUPLE
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
    }
  }
  methods {
    name: "raise_routing_exception"
    fully_qualified_name: "flask.app.Flask.raise_routing_exception"
    return_annotation {
      pretty_printed_name: "NoReturn"
      kind: UNINHABITED
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    parameters {
      name: "request"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.wrappers.Request"
        fully_qualified_name: "flask.wrappers.Request"
      }
    }
  }
  methods {
    name: "dispatch_request"
    fully_qualified_name: "flask.app.Flask.dispatch_request"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
  }
  methods {
    name: "full_dispatch_request"
    fully_qualified_name: "flask.app.Flask.full_dispatch_request"
    return_annotation {
      pretty_printed_name: "flask.wrappers.Response"
      fully_qualified_name: "flask.wrappers.Response"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
  }
  methods {
    name: "finalize_request"
    fully_qualified_name: "flask.app.Flask.finalize_request"
    return_annotation {
      pretty_printed_name: "flask.wrappers.Response"
      fully_qualified_name: "flask.wrappers.Response"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    parameters {
      name: "rv"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,Any]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
      }
    }
    parameters {
      name: "from_error_handler"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
  }
  methods {
    name: "make_default_options_response"
    fully_qualified_name: "flask.app.Flask.make_default_options_response"
    return_annotation {
      pretty_printed_name: "flask.wrappers.Response"
      fully_qualified_name: "flask.wrappers.Response"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
  }
  methods {
    name: "should_ignore_error"
    fully_qualified_name: "flask.app.Flask.should_ignore_error"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    parameters {
      name: "error"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.BaseException,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.BaseException"
          fully_qualified_name: "builtins.BaseException"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "ensure_sync"
    fully_qualified_name: "flask.app.Flask.ensure_sync"
    return_annotation {
      pretty_printed_name: "CallableType[builtins.function]"
      kind: CALLABLE
      args {
        pretty_printed_name: "builtins.function"
        fully_qualified_name: "builtins.function"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    parameters {
      name: "func"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
  }
  methods {
    name: "async_to_sync"
    fully_qualified_name: "flask.app.Flask.async_to_sync"
    return_annotation {
      pretty_printed_name: "CallableType[builtins.function]"
      kind: CALLABLE
      args {
        pretty_printed_name: "builtins.function"
        fully_qualified_name: "builtins.function"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    parameters {
      name: "func"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
  }
  methods {
    name: "url_for"
    fully_qualified_name: "flask.app.Flask.url_for"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    parameters {
      name: "endpoint"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "_anchor"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "_method"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "_scheme"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "_external"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[builtins.bool,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "values"
      kind: VAR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
  }
  methods {
    name: "redirect"
    fully_qualified_name: "flask.app.Flask.redirect"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    parameters {
      name: "location"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "code"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
  }
  methods {
    name: "make_response"
    fully_qualified_name: "flask.app.Flask.make_response"
    return_annotation {
      pretty_printed_name: "flask.wrappers.Response"
      fully_qualified_name: "flask.wrappers.Response"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    parameters {
      name: "rv"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
  }
  methods {
    name: "create_url_adapter"
    fully_qualified_name: "flask.app.Flask.create_url_adapter"
    return_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    parameters {
      name: "request"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[flask.wrappers.Request,None]"
        kind: UNION
        args {
          pretty_printed_name: "flask.wrappers.Request"
          fully_qualified_name: "flask.wrappers.Request"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "inject_url_defaults"
    fully_qualified_name: "flask.app.Flask.inject_url_defaults"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    parameters {
      name: "endpoint"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "values"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.dict[Any,Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "builtins.dict"
      }
    }
  }
  methods {
    name: "handle_url_build_error"
    fully_qualified_name: "flask.app.Flask.handle_url_build_error"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    parameters {
      name: "error"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "endpoint"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "values"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.dict[builtins.str,Any]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "builtins.dict"
      }
    }
  }
  methods {
    name: "preprocess_request"
    fully_qualified_name: "flask.app.Flask.preprocess_request"
    return_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
  }
  methods {
    name: "process_response"
    fully_qualified_name: "flask.app.Flask.process_response"
    return_annotation {
      pretty_printed_name: "flask.wrappers.Response"
      fully_qualified_name: "flask.wrappers.Response"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    parameters {
      name: "response"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.wrappers.Response"
        fully_qualified_name: "flask.wrappers.Response"
      }
    }
  }
  methods {
    name: "do_teardown_request"
    fully_qualified_name: "flask.app.Flask.do_teardown_request"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    parameters {
      name: "exc"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.BaseException,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.BaseException"
          fully_qualified_name: "builtins.BaseException"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
  }
  methods {
    name: "do_teardown_appcontext"
    fully_qualified_name: "flask.app.Flask.do_teardown_appcontext"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    parameters {
      name: "exc"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.BaseException,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.BaseException"
          fully_qualified_name: "builtins.BaseException"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
  }
  methods {
    name: "app_context"
    fully_qualified_name: "flask.app.Flask.app_context"
    return_annotation {
      pretty_printed_name: "flask.ctx.AppContext"
      fully_qualified_name: "flask.ctx.AppContext"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
  }
  methods {
    name: "request_context"
    fully_qualified_name: "flask.app.Flask.request_context"
    return_annotation {
      pretty_printed_name: "flask.ctx.RequestContext"
      fully_qualified_name: "flask.ctx.RequestContext"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    parameters {
      name: "environ"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.dict[Any,Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "builtins.dict"
      }
    }
  }
  methods {
    name: "test_request_context"
    fully_qualified_name: "flask.app.Flask.test_request_context"
    return_annotation {
      pretty_printed_name: "flask.ctx.RequestContext"
      fully_qualified_name: "flask.ctx.RequestContext"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "kwargs"
      kind: VAR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
  }
  methods {
    name: "wsgi_app"
    fully_qualified_name: "flask.app.Flask.wsgi_app"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    parameters {
      name: "environ"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.dict[Any,Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "builtins.dict"
      }
    }
    parameters {
      name: "start_response"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
  }
  methods {
    name: "__call__"
    fully_qualified_name: "flask.app.Flask.__call__"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    parameters {
      name: "environ"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.dict[Any,Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "builtins.dict"
      }
    }
    parameters {
      name: "start_response"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
  }
  overloaded_methods {
    name: "session_cookie_name"
    fullname: "flask.app.Flask.session_cookie_name"
    definitions {
      name: "session_cookie_name"
      fully_qualified_name: "flask.app.Flask.session_cookie_name"
      return_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "flask.app.Flask"
          fully_qualified_name: "flask.app.Flask"
        }
      }
      has_decorators: true
      resolved_decorator_names: "property"
      is_overload: true
      is_property: true
    }
    definitions {
      name: "session_cookie_name"
      fully_qualified_name: "flask.app.Flask.session_cookie_name"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "flask.app.Flask"
          fully_qualified_name: "flask.app.Flask"
        }
      }
      parameters {
        name: "value"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      has_decorators: true
      resolved_decorator_names: "session_cookie_name.setter"
    }
  }
  overloaded_methods {
    name: "send_file_max_age_default"
    fullname: "flask.app.Flask.send_file_max_age_default"
    definitions {
      name: "send_file_max_age_default"
      fully_qualified_name: "flask.app.Flask.send_file_max_age_default"
      return_annotation {
        pretty_printed_name: "Union[datetime.timedelta,None]"
        kind: UNION
        args {
          pretty_printed_name: "datetime.timedelta"
          fully_qualified_name: "datetime.timedelta"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "flask.app.Flask"
          fully_qualified_name: "flask.app.Flask"
        }
      }
      has_decorators: true
      resolved_decorator_names: "property"
      is_overload: true
      is_property: true
    }
    definitions {
      name: "send_file_max_age_default"
      fully_qualified_name: "flask.app.Flask.send_file_max_age_default"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "flask.app.Flask"
          fully_qualified_name: "flask.app.Flask"
        }
      }
      parameters {
        name: "value"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.int,datetime.timedelta,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "datetime.timedelta"
            fully_qualified_name: "datetime.timedelta"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "send_file_max_age_default.setter"
    }
  }
  overloaded_methods {
    name: "use_x_sendfile"
    fullname: "flask.app.Flask.use_x_sendfile"
    definitions {
      name: "use_x_sendfile"
      fully_qualified_name: "flask.app.Flask.use_x_sendfile"
      return_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "flask.app.Flask"
          fully_qualified_name: "flask.app.Flask"
        }
      }
      has_decorators: true
      resolved_decorator_names: "property"
      is_overload: true
      is_property: true
    }
    definitions {
      name: "use_x_sendfile"
      fully_qualified_name: "flask.app.Flask.use_x_sendfile"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "flask.app.Flask"
          fully_qualified_name: "flask.app.Flask"
        }
      }
      parameters {
        name: "value"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
      }
      has_decorators: true
      resolved_decorator_names: "use_x_sendfile.setter"
    }
  }
  overloaded_methods {
    name: "json_encoder"
    fullname: "flask.app.Flask.json_encoder"
    definitions {
      name: "json_encoder"
      fully_qualified_name: "flask.app.Flask.json_encoder"
      return_annotation {
        pretty_printed_name: "Type[json.encoder.JSONEncoder]"
        kind: TYPE
        args {
          pretty_printed_name: "json.encoder.JSONEncoder"
          fully_qualified_name: "json.encoder.JSONEncoder"
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "flask.app.Flask"
          fully_qualified_name: "flask.app.Flask"
        }
      }
      has_decorators: true
      resolved_decorator_names: "property"
      is_overload: true
      is_property: true
    }
    definitions {
      name: "json_encoder"
      fully_qualified_name: "flask.app.Flask.json_encoder"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "flask.app.Flask"
          fully_qualified_name: "flask.app.Flask"
        }
      }
      parameters {
        name: "value"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Type[json.encoder.JSONEncoder]"
          kind: TYPE
          args {
            pretty_printed_name: "json.encoder.JSONEncoder"
            fully_qualified_name: "json.encoder.JSONEncoder"
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "json_encoder.setter"
    }
  }
  overloaded_methods {
    name: "json_decoder"
    fullname: "flask.app.Flask.json_decoder"
    definitions {
      name: "json_decoder"
      fully_qualified_name: "flask.app.Flask.json_decoder"
      return_annotation {
        pretty_printed_name: "Type[json.decoder.JSONDecoder]"
        kind: TYPE
        args {
          pretty_printed_name: "json.decoder.JSONDecoder"
          fully_qualified_name: "json.decoder.JSONDecoder"
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "flask.app.Flask"
          fully_qualified_name: "flask.app.Flask"
        }
      }
      has_decorators: true
      resolved_decorator_names: "property"
      is_overload: true
      is_property: true
    }
    definitions {
      name: "json_decoder"
      fully_qualified_name: "flask.app.Flask.json_decoder"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "flask.app.Flask"
          fully_qualified_name: "flask.app.Flask"
        }
      }
      parameters {
        name: "value"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Type[json.decoder.JSONDecoder]"
          kind: TYPE
          args {
            pretty_printed_name: "json.decoder.JSONDecoder"
            fully_qualified_name: "json.decoder.JSONDecoder"
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "json_decoder.setter"
    }
  }
  overloaded_methods {
    name: "templates_auto_reload"
    fullname: "flask.app.Flask.templates_auto_reload"
    definitions {
      name: "templates_auto_reload"
      fully_qualified_name: "flask.app.Flask.templates_auto_reload"
      return_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "flask.app.Flask"
          fully_qualified_name: "flask.app.Flask"
        }
      }
      has_decorators: true
      resolved_decorator_names: "property"
      is_overload: true
      is_property: true
    }
    definitions {
      name: "templates_auto_reload"
      fully_qualified_name: "flask.app.Flask.templates_auto_reload"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "flask.app.Flask"
          fully_qualified_name: "flask.app.Flask"
        }
      }
      parameters {
        name: "value"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
      }
      has_decorators: true
      resolved_decorator_names: "templates_auto_reload.setter"
    }
  }
  overloaded_methods {
    name: "env"
    fullname: "flask.app.Flask.env"
    definitions {
      name: "env"
      fully_qualified_name: "flask.app.Flask.env"
      return_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "flask.app.Flask"
          fully_qualified_name: "flask.app.Flask"
        }
      }
      has_decorators: true
      resolved_decorator_names: "property"
      is_overload: true
      is_property: true
    }
    definitions {
      name: "env"
      fully_qualified_name: "flask.app.Flask.env"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "flask.app.Flask"
          fully_qualified_name: "flask.app.Flask"
        }
      }
      parameters {
        name: "value"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      has_decorators: true
      resolved_decorator_names: "env.setter"
    }
  }
  overloaded_methods {
    name: "debug"
    fullname: "flask.app.Flask.debug"
    definitions {
      name: "debug"
      fully_qualified_name: "flask.app.Flask.debug"
      return_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "flask.app.Flask"
          fully_qualified_name: "flask.app.Flask"
        }
      }
      has_decorators: true
      resolved_decorator_names: "property"
      is_overload: true
      is_property: true
    }
    definitions {
      name: "debug"
      fully_qualified_name: "flask.app.Flask.debug"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "flask.app.Flask"
          fully_qualified_name: "flask.app.Flask"
        }
      }
      parameters {
        name: "value"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
      }
      has_decorators: true
      resolved_decorator_names: "debug.setter"
    }
  }
  attributes {
    name: "request_class"
    fully_qualified_name: "flask.app.Flask.request_class"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  attributes {
    name: "response_class"
    fully_qualified_name: "flask.app.Flask.response_class"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  attributes {
    name: "aborter_class"
    fully_qualified_name: "flask.app.Flask.aborter_class"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  attributes {
    name: "jinja_environment"
    fully_qualified_name: "flask.app.Flask.jinja_environment"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  attributes {
    name: "app_ctx_globals_class"
    fully_qualified_name: "flask.app.Flask.app_ctx_globals_class"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  attributes {
    name: "config_class"
    fully_qualified_name: "flask.app.Flask.config_class"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  attributes {
    name: "testing"
    fully_qualified_name: "flask.app.Flask.testing"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  attributes {
    name: "secret_key"
    fully_qualified_name: "flask.app.Flask.secret_key"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  attributes {
    name: "permanent_session_lifetime"
    fully_qualified_name: "flask.app.Flask.permanent_session_lifetime"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  attributes {
    name: "json_provider_class"
    fully_qualified_name: "flask.app.Flask.json_provider_class"
    type_annotation {
      pretty_printed_name: "Type[flask.json.provider.JSONProvider]"
      kind: TYPE
      args {
        pretty_printed_name: "flask.json.provider.JSONProvider"
        fully_qualified_name: "flask.json.provider.JSONProvider"
      }
    }
  }
  attributes {
    name: "jinja_options"
    fully_qualified_name: "flask.app.Flask.jinja_options"
    type_annotation {
      pretty_printed_name: "builtins.dict[Any,Any]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "builtins.dict"
    }
  }
  attributes {
    name: "default_config"
    fully_qualified_name: "flask.app.Flask.default_config"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  attributes {
    name: "url_rule_class"
    fully_qualified_name: "flask.app.Flask.url_rule_class"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  attributes {
    name: "url_map_class"
    fully_qualified_name: "flask.app.Flask.url_map_class"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  attributes {
    name: "test_client_class"
    fully_qualified_name: "flask.app.Flask.test_client_class"
    type_annotation {
      pretty_printed_name: "Union[Type[flask.testing.FlaskClient],None]"
      kind: UNION
      args {
        pretty_printed_name: "Type[flask.testing.FlaskClient]"
        kind: TYPE
        args {
          pretty_printed_name: "flask.testing.FlaskClient"
          fully_qualified_name: "flask.testing.FlaskClient"
        }
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  attributes {
    name: "test_cli_runner_class"
    fully_qualified_name: "flask.app.Flask.test_cli_runner_class"
    type_annotation {
      pretty_printed_name: "Union[Type[flask.testing.FlaskCliRunner],None]"
      kind: UNION
      args {
        pretty_printed_name: "Type[flask.testing.FlaskCliRunner]"
        kind: TYPE
        args {
          pretty_printed_name: "flask.testing.FlaskCliRunner"
          fully_qualified_name: "flask.testing.FlaskCliRunner"
        }
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  attributes {
    name: "session_interface"
    fully_qualified_name: "flask.app.Flask.session_interface"
    type_annotation {
      pretty_printed_name: "flask.sessions.SessionInterface"
      fully_qualified_name: "flask.sessions.SessionInterface"
    }
  }
  attributes {
    name: "instance_path"
    fully_qualified_name: "flask.app.Flask.instance_path"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  attributes {
    name: "config"
    fully_qualified_name: "flask.app.Flask.config"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  attributes {
    name: "aborter"
    fully_qualified_name: "flask.app.Flask.aborter"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  attributes {
    name: "json"
    fully_qualified_name: "flask.app.Flask.json"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  attributes {
    name: "url_build_error_handlers"
    fully_qualified_name: "flask.app.Flask.url_build_error_handlers"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  attributes {
    name: "before_first_request_funcs"
    fully_qualified_name: "flask.app.Flask.before_first_request_funcs"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  attributes {
    name: "teardown_appcontext_funcs"
    fully_qualified_name: "flask.app.Flask.teardown_appcontext_funcs"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  attributes {
    name: "shell_context_processors"
    fully_qualified_name: "flask.app.Flask.shell_context_processors"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  attributes {
    name: "blueprints"
    fully_qualified_name: "flask.app.Flask.blueprints"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  attributes {
    name: "extensions"
    fully_qualified_name: "flask.app.Flask.extensions"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  attributes {
    name: "url_map"
    fully_qualified_name: "flask.app.Flask.url_map"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  attributes {
    name: "subdomain_matching"
    fully_qualified_name: "flask.app.Flask.subdomain_matching"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
}
classes {
  name: "TaggedJSONSerializer"
  fully_qualified_name: "flask.json.tag.TaggedJSONSerializer"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "flask.json.tag.TaggedJSONSerializer.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.json.tag.TaggedJSONSerializer"
        fully_qualified_name: "flask.json.tag.TaggedJSONSerializer"
      }
    }
  }
  methods {
    name: "register"
    fully_qualified_name: "flask.json.tag.TaggedJSONSerializer.register"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.json.tag.TaggedJSONSerializer"
        fully_qualified_name: "flask.json.tag.TaggedJSONSerializer"
      }
    }
    parameters {
      name: "tag_class"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[flask.json.tag.JSONTag]"
        kind: TYPE
        args {
          pretty_printed_name: "flask.json.tag.JSONTag"
          fully_qualified_name: "flask.json.tag.JSONTag"
        }
      }
    }
    parameters {
      name: "force"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    parameters {
      name: "index"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
  }
  methods {
    name: "tag"
    fully_qualified_name: "flask.json.tag.TaggedJSONSerializer.tag"
    return_annotation {
      pretty_printed_name: "builtins.dict[builtins.str,Any]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "builtins.dict"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.json.tag.TaggedJSONSerializer"
        fully_qualified_name: "flask.json.tag.TaggedJSONSerializer"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
  }
  methods {
    name: "untag"
    fully_qualified_name: "flask.json.tag.TaggedJSONSerializer.untag"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.json.tag.TaggedJSONSerializer"
        fully_qualified_name: "flask.json.tag.TaggedJSONSerializer"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.dict[builtins.str,Any]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "builtins.dict"
      }
    }
  }
  methods {
    name: "dumps"
    fully_qualified_name: "flask.json.tag.TaggedJSONSerializer.dumps"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.json.tag.TaggedJSONSerializer"
        fully_qualified_name: "flask.json.tag.TaggedJSONSerializer"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
  }
  methods {
    name: "loads"
    fully_qualified_name: "flask.json.tag.TaggedJSONSerializer.loads"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.json.tag.TaggedJSONSerializer"
        fully_qualified_name: "flask.json.tag.TaggedJSONSerializer"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  attributes {
    name: "default_tags"
    fully_qualified_name: "flask.json.tag.TaggedJSONSerializer.default_tags"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  attributes {
    name: "tags"
    fully_qualified_name: "flask.json.tag.TaggedJSONSerializer.tags"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  attributes {
    name: "order"
    fully_qualified_name: "flask.json.tag.TaggedJSONSerializer.order"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
}
classes {
  name: "Request"
  fully_qualified_name: "flask.wrappers.Request"
  super_classes: "builtins.object"
  methods {
    name: "max_content_length"
    fully_qualified_name: "flask.wrappers.Request.max_content_length"
    return_annotation {
      pretty_printed_name: "Union[builtins.int,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.wrappers.Request"
        fully_qualified_name: "flask.wrappers.Request"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "endpoint"
    fully_qualified_name: "flask.wrappers.Request.endpoint"
    return_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.wrappers.Request"
        fully_qualified_name: "flask.wrappers.Request"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "blueprint"
    fully_qualified_name: "flask.wrappers.Request.blueprint"
    return_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.wrappers.Request"
        fully_qualified_name: "flask.wrappers.Request"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "blueprints"
    fully_qualified_name: "flask.wrappers.Request.blueprints"
    return_annotation {
      pretty_printed_name: "builtins.list[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.wrappers.Request"
        fully_qualified_name: "flask.wrappers.Request"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "on_json_loading_failed"
    fully_qualified_name: "flask.wrappers.Request.on_json_loading_failed"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.wrappers.Request"
        fully_qualified_name: "flask.wrappers.Request"
      }
    }
    parameters {
      name: "e"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.ValueError,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.ValueError"
          fully_qualified_name: "builtins.ValueError"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  attributes {
    name: "json_module"
    fully_qualified_name: "flask.wrappers.Request.json_module"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  attributes {
    name: "url_rule"
    fully_qualified_name: "flask.wrappers.Request.url_rule"
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  attributes {
    name: "view_args"
    fully_qualified_name: "flask.wrappers.Request.view_args"
    type_annotation {
      pretty_printed_name: "Union[builtins.dict[builtins.str,Any],None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.dict[builtins.str,Any]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "builtins.dict"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  attributes {
    name: "routing_exception"
    fully_qualified_name: "flask.wrappers.Request.routing_exception"
    type_annotation {
      pretty_printed_name: "Union[builtins.Exception,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.Exception"
        fully_qualified_name: "builtins.Exception"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
}
classes {
  name: "Response"
  fully_qualified_name: "flask.wrappers.Response"
  super_classes: "builtins.object"
  methods {
    name: "max_cookie_size"
    fully_qualified_name: "flask.wrappers.Response.max_cookie_size"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.wrappers.Response"
        fully_qualified_name: "flask.wrappers.Response"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  attributes {
    name: "default_mimetype"
    fully_qualified_name: "flask.wrappers.Response.default_mimetype"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  attributes {
    name: "json_module"
    fully_qualified_name: "flask.wrappers.Response.json_module"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  attributes {
    name: "autocorrect_location_header"
    fully_qualified_name: "flask.wrappers.Response.autocorrect_location_header"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
}
classes {
  name: "SessionMixin"
  fully_qualified_name: "flask.sessions.SessionMixin"
  super_classes: "typing.MutableMapping"
  overloaded_methods {
    name: "permanent"
    fullname: "flask.sessions.SessionMixin.permanent"
    definitions {
      name: "permanent"
      fully_qualified_name: "flask.sessions.SessionMixin.permanent"
      return_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "flask.sessions.SessionMixin"
          fully_qualified_name: "flask.sessions.SessionMixin"
        }
      }
      has_decorators: true
      resolved_decorator_names: "property"
      is_overload: true
      is_property: true
    }
    definitions {
      name: "permanent"
      fully_qualified_name: "flask.sessions.SessionMixin.permanent"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "flask.sessions.SessionMixin"
          fully_qualified_name: "flask.sessions.SessionMixin"
        }
      }
      parameters {
        name: "value"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
      }
      has_decorators: true
      resolved_decorator_names: "permanent.setter"
    }
  }
  has_metaclass: true
  attributes {
    name: "new"
    fully_qualified_name: "flask.sessions.SessionMixin.new"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
  attributes {
    name: "modified"
    fully_qualified_name: "flask.sessions.SessionMixin.modified"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
  attributes {
    name: "accessed"
    fully_qualified_name: "flask.sessions.SessionMixin.accessed"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
}
classes {
  name: "SecureCookieSession"
  fully_qualified_name: "flask.sessions.SecureCookieSession"
  super_classes: "flask.sessions.SessionMixin"
  methods {
    name: "__init__"
    fully_qualified_name: "flask.sessions.SecureCookieSession.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.sessions.SecureCookieSession"
        fully_qualified_name: "flask.sessions.SecureCookieSession"
      }
    }
    parameters {
      name: "initial"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
      has_default: true
    }
  }
  methods {
    name: "__getitem__"
    fully_qualified_name: "flask.sessions.SecureCookieSession.__getitem__"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "flask.sessions.SecureCookieSession"
        fully_qualified_name: "flask.sessions.SecureCookieSession"
      }
    }
    parameters {
      name: "key"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  methods {
    name: "get"
    fully_qualified_name: "flask.sessions.SecureCookieSession.get"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.sessions.SecureCookieSession"
        fully_qualified_name: "flask.sessions.SecureCookieSession"
      }
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "default"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
      has_default: true
    }
  }
  methods {
    name: "setdefault"
    fully_qualified_name: "flask.sessions.SecureCookieSession.setdefault"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.sessions.SecureCookieSession"
        fully_qualified_name: "flask.sessions.SecureCookieSession"
      }
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "default"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
      has_default: true
    }
  }
  has_metaclass: true
  attributes {
    name: "modified"
    fully_qualified_name: "flask.sessions.SecureCookieSession.modified"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
  attributes {
    name: "accessed"
    fully_qualified_name: "flask.sessions.SecureCookieSession.accessed"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
}
classes {
  name: "NullSession"
  fully_qualified_name: "flask.sessions.NullSession"
  super_classes: "flask.sessions.SecureCookieSession"
  has_metaclass: true
  attributes {
    name: "__setitem__"
    fully_qualified_name: "flask.sessions.NullSession.__setitem__"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  attributes {
    name: "__delitem__"
    fully_qualified_name: "flask.sessions.NullSession.__delitem__"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  attributes {
    name: "clear"
    fully_qualified_name: "flask.sessions.NullSession.clear"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  attributes {
    name: "pop"
    fully_qualified_name: "flask.sessions.NullSession.pop"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  attributes {
    name: "popitem"
    fully_qualified_name: "flask.sessions.NullSession.popitem"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  attributes {
    name: "update"
    fully_qualified_name: "flask.sessions.NullSession.update"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  attributes {
    name: "setdefault"
    fully_qualified_name: "flask.sessions.NullSession.setdefault"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
}
classes {
  name: "SessionInterface"
  fully_qualified_name: "flask.sessions.SessionInterface"
  super_classes: "builtins.object"
  methods {
    name: "make_null_session"
    fully_qualified_name: "flask.sessions.SessionInterface.make_null_session"
    return_annotation {
      pretty_printed_name: "flask.sessions.NullSession"
      fully_qualified_name: "flask.sessions.NullSession"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.sessions.SessionInterface"
        fully_qualified_name: "flask.sessions.SessionInterface"
      }
    }
    parameters {
      name: "app"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
  }
  methods {
    name: "is_null_session"
    fully_qualified_name: "flask.sessions.SessionInterface.is_null_session"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.sessions.SessionInterface"
        fully_qualified_name: "flask.sessions.SessionInterface"
      }
    }
    parameters {
      name: "obj"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
  }
  methods {
    name: "get_cookie_name"
    fully_qualified_name: "flask.sessions.SessionInterface.get_cookie_name"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.sessions.SessionInterface"
        fully_qualified_name: "flask.sessions.SessionInterface"
      }
    }
    parameters {
      name: "app"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
  }
  methods {
    name: "get_cookie_domain"
    fully_qualified_name: "flask.sessions.SessionInterface.get_cookie_domain"
    return_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.sessions.SessionInterface"
        fully_qualified_name: "flask.sessions.SessionInterface"
      }
    }
    parameters {
      name: "app"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
  }
  methods {
    name: "get_cookie_path"
    fully_qualified_name: "flask.sessions.SessionInterface.get_cookie_path"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.sessions.SessionInterface"
        fully_qualified_name: "flask.sessions.SessionInterface"
      }
    }
    parameters {
      name: "app"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
  }
  methods {
    name: "get_cookie_httponly"
    fully_qualified_name: "flask.sessions.SessionInterface.get_cookie_httponly"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.sessions.SessionInterface"
        fully_qualified_name: "flask.sessions.SessionInterface"
      }
    }
    parameters {
      name: "app"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
  }
  methods {
    name: "get_cookie_secure"
    fully_qualified_name: "flask.sessions.SessionInterface.get_cookie_secure"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.sessions.SessionInterface"
        fully_qualified_name: "flask.sessions.SessionInterface"
      }
    }
    parameters {
      name: "app"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
  }
  methods {
    name: "get_cookie_samesite"
    fully_qualified_name: "flask.sessions.SessionInterface.get_cookie_samesite"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.sessions.SessionInterface"
        fully_qualified_name: "flask.sessions.SessionInterface"
      }
    }
    parameters {
      name: "app"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
  }
  methods {
    name: "get_expiration_time"
    fully_qualified_name: "flask.sessions.SessionInterface.get_expiration_time"
    return_annotation {
      pretty_printed_name: "Union[datetime.datetime,None]"
      kind: UNION
      args {
        pretty_printed_name: "datetime.datetime"
        fully_qualified_name: "datetime.datetime"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.sessions.SessionInterface"
        fully_qualified_name: "flask.sessions.SessionInterface"
      }
    }
    parameters {
      name: "app"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    parameters {
      name: "session"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.sessions.SessionMixin"
        fully_qualified_name: "flask.sessions.SessionMixin"
      }
    }
  }
  methods {
    name: "should_set_cookie"
    fully_qualified_name: "flask.sessions.SessionInterface.should_set_cookie"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.sessions.SessionInterface"
        fully_qualified_name: "flask.sessions.SessionInterface"
      }
    }
    parameters {
      name: "app"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    parameters {
      name: "session"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.sessions.SessionMixin"
        fully_qualified_name: "flask.sessions.SessionMixin"
      }
    }
  }
  methods {
    name: "open_session"
    fully_qualified_name: "flask.sessions.SessionInterface.open_session"
    return_annotation {
      pretty_printed_name: "Union[flask.sessions.SessionMixin,None]"
      kind: UNION
      args {
        pretty_printed_name: "flask.sessions.SessionMixin"
        fully_qualified_name: "flask.sessions.SessionMixin"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.sessions.SessionInterface"
        fully_qualified_name: "flask.sessions.SessionInterface"
      }
    }
    parameters {
      name: "app"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    parameters {
      name: "request"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.wrappers.Request"
        fully_qualified_name: "flask.wrappers.Request"
      }
    }
  }
  methods {
    name: "save_session"
    fully_qualified_name: "flask.sessions.SessionInterface.save_session"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.sessions.SessionInterface"
        fully_qualified_name: "flask.sessions.SessionInterface"
      }
    }
    parameters {
      name: "app"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    parameters {
      name: "session"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.sessions.SessionMixin"
        fully_qualified_name: "flask.sessions.SessionMixin"
      }
    }
    parameters {
      name: "response"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.wrappers.Response"
        fully_qualified_name: "flask.wrappers.Response"
      }
    }
  }
  attributes {
    name: "null_session_class"
    fully_qualified_name: "flask.sessions.SessionInterface.null_session_class"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  attributes {
    name: "pickle_based"
    fully_qualified_name: "flask.sessions.SessionInterface.pickle_based"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
}
classes {
  name: "SecureCookieSessionInterface"
  fully_qualified_name: "flask.sessions.SecureCookieSessionInterface"
  super_classes: "flask.sessions.SessionInterface"
  methods {
    name: "get_signing_serializer"
    fully_qualified_name: "flask.sessions.SecureCookieSessionInterface.get_signing_serializer"
    return_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.sessions.SecureCookieSessionInterface"
        fully_qualified_name: "flask.sessions.SecureCookieSessionInterface"
      }
    }
    parameters {
      name: "app"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
  }
  methods {
    name: "open_session"
    fully_qualified_name: "flask.sessions.SecureCookieSessionInterface.open_session"
    return_annotation {
      pretty_printed_name: "Union[flask.sessions.SecureCookieSession,None]"
      kind: UNION
      args {
        pretty_printed_name: "flask.sessions.SecureCookieSession"
        fully_qualified_name: "flask.sessions.SecureCookieSession"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.sessions.SecureCookieSessionInterface"
        fully_qualified_name: "flask.sessions.SecureCookieSessionInterface"
      }
    }
    parameters {
      name: "app"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    parameters {
      name: "request"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.wrappers.Request"
        fully_qualified_name: "flask.wrappers.Request"
      }
    }
  }
  methods {
    name: "save_session"
    fully_qualified_name: "flask.sessions.SecureCookieSessionInterface.save_session"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.sessions.SecureCookieSessionInterface"
        fully_qualified_name: "flask.sessions.SecureCookieSessionInterface"
      }
    }
    parameters {
      name: "app"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    parameters {
      name: "session"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.sessions.SessionMixin"
        fully_qualified_name: "flask.sessions.SessionMixin"
      }
    }
    parameters {
      name: "response"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.wrappers.Response"
        fully_qualified_name: "flask.wrappers.Response"
      }
    }
  }
  attributes {
    name: "salt"
    fully_qualified_name: "flask.sessions.SecureCookieSessionInterface.salt"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  attributes {
    name: "digest_method"
    fully_qualified_name: "flask.sessions.SecureCookieSessionInterface.digest_method"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  attributes {
    name: "key_derivation"
    fully_qualified_name: "flask.sessions.SecureCookieSessionInterface.key_derivation"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  attributes {
    name: "serializer"
    fully_qualified_name: "flask.sessions.SecureCookieSessionInterface.serializer"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  attributes {
    name: "session_class"
    fully_qualified_name: "flask.sessions.SecureCookieSessionInterface.session_class"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
}
functions {
  name: "is_ip"
  fully_qualified_name: "flask.helpers.is_ip"
  return_annotation {
    pretty_printed_name: "builtins.bool"
    fully_qualified_name: "builtins.bool"
  }
  parameters {
    name: "value"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
}
vars {
  name: "t"
  fully_qualified_name: "typing"
  is_imported_module: true
}
vars {
  name: "URLSafeTimedSerializer"
  fully_qualified_name: "flask.sessions.URLSafeTimedSerializer"
  type_annotation {
    pretty_printed_name: "Any"
    kind: ANY
  }
}
vars {
  name: "CallbackDict"
  fully_qualified_name: "flask.sessions.CallbackDict"
  type_annotation {
    pretty_printed_name: "Any"
    kind: ANY
  }
}
vars {
  name: "session_json_serializer"
  fully_qualified_name: "flask.sessions.session_json_serializer"
  type_annotation {
    pretty_printed_name: "Any"
    kind: ANY
  }
}
