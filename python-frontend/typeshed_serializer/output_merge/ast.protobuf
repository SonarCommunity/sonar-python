fully_qualified_name: "ast"
classes {
  name: "mod"
  fully_qualified_name: "_ast.mod"
  super_classes: "_ast.AST"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "Interactive"
  fully_qualified_name: "_ast.Interactive"
  super_classes: "_ast.mod"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "body"
    fully_qualified_name: "_ast.Interactive.body"
    type_annotation {
      pretty_printed_name: "builtins.list[_ast.stmt]"
      args {
        pretty_printed_name: "_ast.stmt"
        fully_qualified_name: "_ast.stmt"
      }
      fully_qualified_name: "builtins.list"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "Expression"
  fully_qualified_name: "_ast.Expression"
  super_classes: "_ast.mod"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "body"
    fully_qualified_name: "_ast.Expression.body"
    type_annotation {
      pretty_printed_name: "_ast.expr"
      fully_qualified_name: "_ast.expr"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "Suite"
  fully_qualified_name: "_ast.Suite"
  super_classes: "_ast.mod"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  attributes {
    name: "body"
    fully_qualified_name: "_ast.Suite.body"
    type_annotation {
      pretty_printed_name: "builtins.list[_ast.stmt]"
      args {
        pretty_printed_name: "_ast.stmt"
        fully_qualified_name: "_ast.stmt"
      }
      fully_qualified_name: "builtins.list"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
  }
}
classes {
  name: "stmt"
  fully_qualified_name: "_ast.stmt"
  super_classes: "_ast.AST"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "lineno"
    fully_qualified_name: "_ast.stmt.lineno"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "27"
  }
  attributes {
    name: "col_offset"
    fully_qualified_name: "_ast.stmt.col_offset"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "27"
  }
}
classes {
  name: "FunctionDef"
  fully_qualified_name: "_ast.FunctionDef"
  super_classes: "_ast.stmt"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "name"
    fully_qualified_name: "_ast.FunctionDef.name"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "args"
    fully_qualified_name: "_ast.FunctionDef.args"
    type_annotation {
      pretty_printed_name: "_ast.arguments"
      fully_qualified_name: "_ast.arguments"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "body"
    fully_qualified_name: "_ast.FunctionDef.body"
    type_annotation {
      pretty_printed_name: "builtins.list[_ast.stmt]"
      args {
        pretty_printed_name: "_ast.stmt"
        fully_qualified_name: "_ast.stmt"
      }
      fully_qualified_name: "builtins.list"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "decorator_list"
    fully_qualified_name: "_ast.FunctionDef.decorator_list"
    type_annotation {
      pretty_printed_name: "builtins.list[_ast.expr]"
      args {
        pretty_printed_name: "_ast.expr"
        fully_qualified_name: "_ast.expr"
      }
      fully_qualified_name: "builtins.list"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "returns"
    fully_qualified_name: "_ast.FunctionDef.returns"
    type_annotation {
      pretty_printed_name: "Union[_ast.expr,None]"
      kind: UNION
      args {
        pretty_printed_name: "_ast.expr"
        fully_qualified_name: "_ast.expr"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "ClassDef"
  fully_qualified_name: "_ast.ClassDef"
  super_classes: "_ast.stmt"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "name"
    fully_qualified_name: "_ast.ClassDef.name"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "bases"
    fully_qualified_name: "_ast.ClassDef.bases"
    type_annotation {
      pretty_printed_name: "builtins.list[_ast.expr]"
      args {
        pretty_printed_name: "_ast.expr"
        fully_qualified_name: "_ast.expr"
      }
      fully_qualified_name: "builtins.list"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "body"
    fully_qualified_name: "_ast.ClassDef.body"
    type_annotation {
      pretty_printed_name: "builtins.list[_ast.stmt]"
      args {
        pretty_printed_name: "_ast.stmt"
        fully_qualified_name: "_ast.stmt"
      }
      fully_qualified_name: "builtins.list"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "decorator_list"
    fully_qualified_name: "_ast.ClassDef.decorator_list"
    type_annotation {
      pretty_printed_name: "builtins.list[_ast.expr]"
      args {
        pretty_printed_name: "_ast.expr"
        fully_qualified_name: "_ast.expr"
      }
      fully_qualified_name: "builtins.list"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "keywords"
    fully_qualified_name: "_ast.ClassDef.keywords"
    type_annotation {
      pretty_printed_name: "builtins.list[_ast.keyword]"
      args {
        pretty_printed_name: "_ast.keyword"
        fully_qualified_name: "_ast.keyword"
      }
      fully_qualified_name: "builtins.list"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "Return"
  fully_qualified_name: "_ast.Return"
  super_classes: "_ast.stmt"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "value"
    fully_qualified_name: "_ast.Return.value"
    type_annotation {
      pretty_printed_name: "Union[_ast.expr,None]"
      kind: UNION
      args {
        pretty_printed_name: "_ast.expr"
        fully_qualified_name: "_ast.expr"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "Delete"
  fully_qualified_name: "_ast.Delete"
  super_classes: "_ast.stmt"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "targets"
    fully_qualified_name: "_ast.Delete.targets"
    type_annotation {
      pretty_printed_name: "builtins.list[_ast.expr]"
      args {
        pretty_printed_name: "_ast.expr"
        fully_qualified_name: "_ast.expr"
      }
      fully_qualified_name: "builtins.list"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "Assign"
  fully_qualified_name: "_ast.Assign"
  super_classes: "_ast.stmt"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "targets"
    fully_qualified_name: "_ast.Assign.targets"
    type_annotation {
      pretty_printed_name: "builtins.list[_ast.expr]"
      args {
        pretty_printed_name: "_ast.expr"
        fully_qualified_name: "_ast.expr"
      }
      fully_qualified_name: "builtins.list"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "value"
    fully_qualified_name: "_ast.Assign.value"
    type_annotation {
      pretty_printed_name: "_ast.expr"
      fully_qualified_name: "_ast.expr"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "AugAssign"
  fully_qualified_name: "_ast.AugAssign"
  super_classes: "_ast.stmt"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "target"
    fully_qualified_name: "_ast.AugAssign.target"
    type_annotation {
      pretty_printed_name: "_ast.expr"
      fully_qualified_name: "_ast.expr"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "op"
    fully_qualified_name: "_ast.AugAssign.op"
    type_annotation {
      pretty_printed_name: "_ast.operator"
      fully_qualified_name: "_ast.operator"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "value"
    fully_qualified_name: "_ast.AugAssign.value"
    type_annotation {
      pretty_printed_name: "_ast.expr"
      fully_qualified_name: "_ast.expr"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "Print"
  fully_qualified_name: "_ast.Print"
  super_classes: "_ast.stmt"
  valid_for: "27"
  attributes {
    name: "dest"
    fully_qualified_name: "_ast.Print.dest"
    type_annotation {
      pretty_printed_name: "Union[_ast.expr,None]"
      kind: UNION
      args {
        pretty_printed_name: "_ast.expr"
        fully_qualified_name: "_ast.expr"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "27"
  }
  attributes {
    name: "values"
    fully_qualified_name: "_ast.Print.values"
    type_annotation {
      pretty_printed_name: "builtins.list[_ast.expr]"
      args {
        pretty_printed_name: "_ast.expr"
        fully_qualified_name: "_ast.expr"
      }
      fully_qualified_name: "builtins.list"
    }
    valid_for: "27"
  }
  attributes {
    name: "nl"
    fully_qualified_name: "_ast.Print.nl"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    valid_for: "27"
  }
}
classes {
  name: "For"
  fully_qualified_name: "_ast.For"
  super_classes: "_ast.stmt"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "target"
    fully_qualified_name: "_ast.For.target"
    type_annotation {
      pretty_printed_name: "_ast.expr"
      fully_qualified_name: "_ast.expr"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "iter"
    fully_qualified_name: "_ast.For.iter"
    type_annotation {
      pretty_printed_name: "_ast.expr"
      fully_qualified_name: "_ast.expr"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "body"
    fully_qualified_name: "_ast.For.body"
    type_annotation {
      pretty_printed_name: "builtins.list[_ast.stmt]"
      args {
        pretty_printed_name: "_ast.stmt"
        fully_qualified_name: "_ast.stmt"
      }
      fully_qualified_name: "builtins.list"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "orelse"
    fully_qualified_name: "_ast.For.orelse"
    type_annotation {
      pretty_printed_name: "builtins.list[_ast.stmt]"
      args {
        pretty_printed_name: "_ast.stmt"
        fully_qualified_name: "_ast.stmt"
      }
      fully_qualified_name: "builtins.list"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "While"
  fully_qualified_name: "_ast.While"
  super_classes: "_ast.stmt"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "test"
    fully_qualified_name: "_ast.While.test"
    type_annotation {
      pretty_printed_name: "_ast.expr"
      fully_qualified_name: "_ast.expr"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "body"
    fully_qualified_name: "_ast.While.body"
    type_annotation {
      pretty_printed_name: "builtins.list[_ast.stmt]"
      args {
        pretty_printed_name: "_ast.stmt"
        fully_qualified_name: "_ast.stmt"
      }
      fully_qualified_name: "builtins.list"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "orelse"
    fully_qualified_name: "_ast.While.orelse"
    type_annotation {
      pretty_printed_name: "builtins.list[_ast.stmt]"
      args {
        pretty_printed_name: "_ast.stmt"
        fully_qualified_name: "_ast.stmt"
      }
      fully_qualified_name: "builtins.list"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "If"
  fully_qualified_name: "_ast.If"
  super_classes: "_ast.stmt"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "test"
    fully_qualified_name: "_ast.If.test"
    type_annotation {
      pretty_printed_name: "_ast.expr"
      fully_qualified_name: "_ast.expr"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "body"
    fully_qualified_name: "_ast.If.body"
    type_annotation {
      pretty_printed_name: "builtins.list[_ast.stmt]"
      args {
        pretty_printed_name: "_ast.stmt"
        fully_qualified_name: "_ast.stmt"
      }
      fully_qualified_name: "builtins.list"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "orelse"
    fully_qualified_name: "_ast.If.orelse"
    type_annotation {
      pretty_printed_name: "builtins.list[_ast.stmt]"
      args {
        pretty_printed_name: "_ast.stmt"
        fully_qualified_name: "_ast.stmt"
      }
      fully_qualified_name: "builtins.list"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "With"
  fully_qualified_name: "_ast.With"
  super_classes: "_ast.stmt"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "context_expr"
    fully_qualified_name: "_ast.With.context_expr"
    type_annotation {
      pretty_printed_name: "_ast.expr"
      fully_qualified_name: "_ast.expr"
    }
    valid_for: "27"
  }
  attributes {
    name: "optional_vars"
    fully_qualified_name: "_ast.With.optional_vars"
    type_annotation {
      pretty_printed_name: "Union[_ast.expr,None]"
      kind: UNION
      args {
        pretty_printed_name: "_ast.expr"
        fully_qualified_name: "_ast.expr"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "27"
  }
  attributes {
    name: "body"
    fully_qualified_name: "_ast.With.body"
    type_annotation {
      pretty_printed_name: "builtins.list[_ast.stmt]"
      args {
        pretty_printed_name: "_ast.stmt"
        fully_qualified_name: "_ast.stmt"
      }
      fully_qualified_name: "builtins.list"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "items"
    fully_qualified_name: "_ast.With.items"
    type_annotation {
      pretty_printed_name: "builtins.list[_ast.withitem]"
      args {
        pretty_printed_name: "_ast.withitem"
        fully_qualified_name: "_ast.withitem"
      }
      fully_qualified_name: "builtins.list"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "Raise"
  fully_qualified_name: "_ast.Raise"
  super_classes: "_ast.stmt"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "type"
    fully_qualified_name: "_ast.Raise.type"
    type_annotation {
      pretty_printed_name: "Union[_ast.expr,None]"
      kind: UNION
      args {
        pretty_printed_name: "_ast.expr"
        fully_qualified_name: "_ast.expr"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "27"
  }
  attributes {
    name: "inst"
    fully_qualified_name: "_ast.Raise.inst"
    type_annotation {
      pretty_printed_name: "Union[_ast.expr,None]"
      kind: UNION
      args {
        pretty_printed_name: "_ast.expr"
        fully_qualified_name: "_ast.expr"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "27"
  }
  attributes {
    name: "tback"
    fully_qualified_name: "_ast.Raise.tback"
    type_annotation {
      pretty_printed_name: "Union[_ast.expr,None]"
      kind: UNION
      args {
        pretty_printed_name: "_ast.expr"
        fully_qualified_name: "_ast.expr"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "27"
  }
  attributes {
    name: "exc"
    fully_qualified_name: "_ast.Raise.exc"
    type_annotation {
      pretty_printed_name: "Union[_ast.expr,None]"
      kind: UNION
      args {
        pretty_printed_name: "_ast.expr"
        fully_qualified_name: "_ast.expr"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "cause"
    fully_qualified_name: "_ast.Raise.cause"
    type_annotation {
      pretty_printed_name: "Union[_ast.expr,None]"
      kind: UNION
      args {
        pretty_printed_name: "_ast.expr"
        fully_qualified_name: "_ast.expr"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "TryExcept"
  fully_qualified_name: "_ast.TryExcept"
  super_classes: "_ast.stmt"
  valid_for: "27"
  attributes {
    name: "body"
    fully_qualified_name: "_ast.TryExcept.body"
    type_annotation {
      pretty_printed_name: "builtins.list[_ast.stmt]"
      args {
        pretty_printed_name: "_ast.stmt"
        fully_qualified_name: "_ast.stmt"
      }
      fully_qualified_name: "builtins.list"
    }
    valid_for: "27"
  }
  attributes {
    name: "handlers"
    fully_qualified_name: "_ast.TryExcept.handlers"
    type_annotation {
      pretty_printed_name: "builtins.list[_ast.ExceptHandler]"
      args {
        pretty_printed_name: "_ast.ExceptHandler"
        fully_qualified_name: "_ast.ExceptHandler"
      }
      fully_qualified_name: "builtins.list"
    }
    valid_for: "27"
  }
  attributes {
    name: "orelse"
    fully_qualified_name: "_ast.TryExcept.orelse"
    type_annotation {
      pretty_printed_name: "builtins.list[_ast.stmt]"
      args {
        pretty_printed_name: "_ast.stmt"
        fully_qualified_name: "_ast.stmt"
      }
      fully_qualified_name: "builtins.list"
    }
    valid_for: "27"
  }
}
classes {
  name: "TryFinally"
  fully_qualified_name: "_ast.TryFinally"
  super_classes: "_ast.stmt"
  valid_for: "27"
  attributes {
    name: "body"
    fully_qualified_name: "_ast.TryFinally.body"
    type_annotation {
      pretty_printed_name: "builtins.list[_ast.stmt]"
      args {
        pretty_printed_name: "_ast.stmt"
        fully_qualified_name: "_ast.stmt"
      }
      fully_qualified_name: "builtins.list"
    }
    valid_for: "27"
  }
  attributes {
    name: "finalbody"
    fully_qualified_name: "_ast.TryFinally.finalbody"
    type_annotation {
      pretty_printed_name: "builtins.list[_ast.stmt]"
      args {
        pretty_printed_name: "_ast.stmt"
        fully_qualified_name: "_ast.stmt"
      }
      fully_qualified_name: "builtins.list"
    }
    valid_for: "27"
  }
}
classes {
  name: "Assert"
  fully_qualified_name: "_ast.Assert"
  super_classes: "_ast.stmt"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "test"
    fully_qualified_name: "_ast.Assert.test"
    type_annotation {
      pretty_printed_name: "_ast.expr"
      fully_qualified_name: "_ast.expr"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "msg"
    fully_qualified_name: "_ast.Assert.msg"
    type_annotation {
      pretty_printed_name: "Union[_ast.expr,None]"
      kind: UNION
      args {
        pretty_printed_name: "_ast.expr"
        fully_qualified_name: "_ast.expr"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "Import"
  fully_qualified_name: "_ast.Import"
  super_classes: "_ast.stmt"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "names"
    fully_qualified_name: "_ast.Import.names"
    type_annotation {
      pretty_printed_name: "builtins.list[_ast.alias]"
      args {
        pretty_printed_name: "_ast.alias"
        fully_qualified_name: "_ast.alias"
      }
      fully_qualified_name: "builtins.list"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "ImportFrom"
  fully_qualified_name: "_ast.ImportFrom"
  super_classes: "_ast.stmt"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "module"
    fully_qualified_name: "_ast.ImportFrom.module"
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "names"
    fully_qualified_name: "_ast.ImportFrom.names"
    type_annotation {
      pretty_printed_name: "builtins.list[_ast.alias]"
      args {
        pretty_printed_name: "_ast.alias"
        fully_qualified_name: "_ast.alias"
      }
      fully_qualified_name: "builtins.list"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "level"
    fully_qualified_name: "_ast.ImportFrom.level"
    type_annotation {
      pretty_printed_name: "Union[builtins.int,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "27"
  }
  attributes {
    name: "level"
    fully_qualified_name: "_ast.ImportFrom.level"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "Exec"
  fully_qualified_name: "_ast.Exec"
  super_classes: "_ast.stmt"
  valid_for: "27"
  attributes {
    name: "body"
    fully_qualified_name: "_ast.Exec.body"
    type_annotation {
      pretty_printed_name: "_ast.expr"
      fully_qualified_name: "_ast.expr"
    }
    valid_for: "27"
  }
  attributes {
    name: "globals"
    fully_qualified_name: "_ast.Exec.globals"
    type_annotation {
      pretty_printed_name: "Union[_ast.expr,None]"
      kind: UNION
      args {
        pretty_printed_name: "_ast.expr"
        fully_qualified_name: "_ast.expr"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "27"
  }
  attributes {
    name: "locals"
    fully_qualified_name: "_ast.Exec.locals"
    type_annotation {
      pretty_printed_name: "Union[_ast.expr,None]"
      kind: UNION
      args {
        pretty_printed_name: "_ast.expr"
        fully_qualified_name: "_ast.expr"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "27"
  }
}
classes {
  name: "Global"
  fully_qualified_name: "_ast.Global"
  super_classes: "_ast.stmt"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "names"
    fully_qualified_name: "_ast.Global.names"
    type_annotation {
      pretty_printed_name: "builtins.list[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "builtins.list"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "Expr"
  fully_qualified_name: "_ast.Expr"
  super_classes: "_ast.stmt"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "value"
    fully_qualified_name: "_ast.Expr.value"
    type_annotation {
      pretty_printed_name: "_ast.expr"
      fully_qualified_name: "_ast.expr"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "Pass"
  fully_qualified_name: "_ast.Pass"
  super_classes: "_ast.stmt"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "Break"
  fully_qualified_name: "_ast.Break"
  super_classes: "_ast.stmt"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "Continue"
  fully_qualified_name: "_ast.Continue"
  super_classes: "_ast.stmt"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "slice"
  fully_qualified_name: "_ast.slice"
  super_classes: "_ast.AST"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
}
classes {
  name: "Slice"
  fully_qualified_name: "_ast.Slice"
  super_classes: "_ast.slice"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  attributes {
    name: "lower"
    fully_qualified_name: "_ast.Slice.lower"
    type_annotation {
      pretty_printed_name: "Union[_ast.expr,None]"
      kind: UNION
      args {
        pretty_printed_name: "_ast.expr"
        fully_qualified_name: "_ast.expr"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
  }
  attributes {
    name: "upper"
    fully_qualified_name: "_ast.Slice.upper"
    type_annotation {
      pretty_printed_name: "Union[_ast.expr,None]"
      kind: UNION
      args {
        pretty_printed_name: "_ast.expr"
        fully_qualified_name: "_ast.expr"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
  }
  attributes {
    name: "step"
    fully_qualified_name: "_ast.Slice.step"
    type_annotation {
      pretty_printed_name: "Union[_ast.expr,None]"
      kind: UNION
      args {
        pretty_printed_name: "_ast.expr"
        fully_qualified_name: "_ast.expr"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
  }
}
classes {
  name: "Slice"
  fully_qualified_name: "_ast.Slice"
  super_classes: "_ast.expr"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "lower"
    fully_qualified_name: "_ast.Slice.lower"
    type_annotation {
      pretty_printed_name: "Union[_ast.expr,None]"
      kind: UNION
      args {
        pretty_printed_name: "_ast.expr"
        fully_qualified_name: "_ast.expr"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "upper"
    fully_qualified_name: "_ast.Slice.upper"
    type_annotation {
      pretty_printed_name: "Union[_ast.expr,None]"
      kind: UNION
      args {
        pretty_printed_name: "_ast.expr"
        fully_qualified_name: "_ast.expr"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "step"
    fully_qualified_name: "_ast.Slice.step"
    type_annotation {
      pretty_printed_name: "Union[_ast.expr,None]"
      kind: UNION
      args {
        pretty_printed_name: "_ast.expr"
        fully_qualified_name: "_ast.expr"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "ExtSlice"
  fully_qualified_name: "_ast.ExtSlice"
  super_classes: "_ast.slice"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  attributes {
    name: "dims"
    fully_qualified_name: "_ast.ExtSlice.dims"
    type_annotation {
      pretty_printed_name: "builtins.list[_ast.slice]"
      args {
        pretty_printed_name: "_ast.slice"
        fully_qualified_name: "_ast.slice"
      }
      fully_qualified_name: "builtins.list"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
  }
}
classes {
  name: "Index"
  fully_qualified_name: "_ast.Index"
  super_classes: "_ast.slice"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  attributes {
    name: "value"
    fully_qualified_name: "_ast.Index.value"
    type_annotation {
      pretty_printed_name: "_ast.expr"
      fully_qualified_name: "_ast.expr"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
  }
}
classes {
  name: "Ellipsis"
  fully_qualified_name: "_ast.Ellipsis"
  super_classes: "_ast.slice"
  valid_for: "27"
}
classes {
  name: "Ellipsis"
  fully_qualified_name: "_ast.Ellipsis"
  super_classes: "_ast.expr"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
}
classes {
  name: "expr"
  fully_qualified_name: "_ast.expr"
  super_classes: "_ast.AST"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "lineno"
    fully_qualified_name: "_ast.expr.lineno"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "27"
  }
  attributes {
    name: "col_offset"
    fully_qualified_name: "_ast.expr.col_offset"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "27"
  }
}
classes {
  name: "BoolOp"
  fully_qualified_name: "_ast.BoolOp"
  super_classes: "_ast.expr"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "op"
    fully_qualified_name: "_ast.BoolOp.op"
    type_annotation {
      pretty_printed_name: "_ast.boolop"
      fully_qualified_name: "_ast.boolop"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "values"
    fully_qualified_name: "_ast.BoolOp.values"
    type_annotation {
      pretty_printed_name: "builtins.list[_ast.expr]"
      args {
        pretty_printed_name: "_ast.expr"
        fully_qualified_name: "_ast.expr"
      }
      fully_qualified_name: "builtins.list"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "BinOp"
  fully_qualified_name: "_ast.BinOp"
  super_classes: "_ast.expr"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "left"
    fully_qualified_name: "_ast.BinOp.left"
    type_annotation {
      pretty_printed_name: "_ast.expr"
      fully_qualified_name: "_ast.expr"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "op"
    fully_qualified_name: "_ast.BinOp.op"
    type_annotation {
      pretty_printed_name: "_ast.operator"
      fully_qualified_name: "_ast.operator"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "right"
    fully_qualified_name: "_ast.BinOp.right"
    type_annotation {
      pretty_printed_name: "_ast.expr"
      fully_qualified_name: "_ast.expr"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "UnaryOp"
  fully_qualified_name: "_ast.UnaryOp"
  super_classes: "_ast.expr"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "op"
    fully_qualified_name: "_ast.UnaryOp.op"
    type_annotation {
      pretty_printed_name: "_ast.unaryop"
      fully_qualified_name: "_ast.unaryop"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "operand"
    fully_qualified_name: "_ast.UnaryOp.operand"
    type_annotation {
      pretty_printed_name: "_ast.expr"
      fully_qualified_name: "_ast.expr"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "Lambda"
  fully_qualified_name: "_ast.Lambda"
  super_classes: "_ast.expr"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "args"
    fully_qualified_name: "_ast.Lambda.args"
    type_annotation {
      pretty_printed_name: "_ast.arguments"
      fully_qualified_name: "_ast.arguments"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "body"
    fully_qualified_name: "_ast.Lambda.body"
    type_annotation {
      pretty_printed_name: "_ast.expr"
      fully_qualified_name: "_ast.expr"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "IfExp"
  fully_qualified_name: "_ast.IfExp"
  super_classes: "_ast.expr"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "test"
    fully_qualified_name: "_ast.IfExp.test"
    type_annotation {
      pretty_printed_name: "_ast.expr"
      fully_qualified_name: "_ast.expr"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "body"
    fully_qualified_name: "_ast.IfExp.body"
    type_annotation {
      pretty_printed_name: "_ast.expr"
      fully_qualified_name: "_ast.expr"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "orelse"
    fully_qualified_name: "_ast.IfExp.orelse"
    type_annotation {
      pretty_printed_name: "_ast.expr"
      fully_qualified_name: "_ast.expr"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "Dict"
  fully_qualified_name: "_ast.Dict"
  super_classes: "_ast.expr"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "keys"
    fully_qualified_name: "_ast.Dict.keys"
    type_annotation {
      pretty_printed_name: "builtins.list[_ast.expr]"
      args {
        pretty_printed_name: "_ast.expr"
        fully_qualified_name: "_ast.expr"
      }
      fully_qualified_name: "builtins.list"
    }
    valid_for: "27"
  }
  attributes {
    name: "keys"
    fully_qualified_name: "_ast.Dict.keys"
    type_annotation {
      pretty_printed_name: "builtins.list[Union[_ast.expr,None]]"
      args {
        pretty_printed_name: "Union[_ast.expr,None]"
        kind: UNION
        args {
          pretty_printed_name: "_ast.expr"
          fully_qualified_name: "_ast.expr"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      fully_qualified_name: "builtins.list"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "values"
    fully_qualified_name: "_ast.Dict.values"
    type_annotation {
      pretty_printed_name: "builtins.list[_ast.expr]"
      args {
        pretty_printed_name: "_ast.expr"
        fully_qualified_name: "_ast.expr"
      }
      fully_qualified_name: "builtins.list"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "Set"
  fully_qualified_name: "_ast.Set"
  super_classes: "_ast.expr"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "elts"
    fully_qualified_name: "_ast.Set.elts"
    type_annotation {
      pretty_printed_name: "builtins.list[_ast.expr]"
      args {
        pretty_printed_name: "_ast.expr"
        fully_qualified_name: "_ast.expr"
      }
      fully_qualified_name: "builtins.list"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "ListComp"
  fully_qualified_name: "_ast.ListComp"
  super_classes: "_ast.expr"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "elt"
    fully_qualified_name: "_ast.ListComp.elt"
    type_annotation {
      pretty_printed_name: "_ast.expr"
      fully_qualified_name: "_ast.expr"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "generators"
    fully_qualified_name: "_ast.ListComp.generators"
    type_annotation {
      pretty_printed_name: "builtins.list[_ast.comprehension]"
      args {
        pretty_printed_name: "_ast.comprehension"
        fully_qualified_name: "_ast.comprehension"
      }
      fully_qualified_name: "builtins.list"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "SetComp"
  fully_qualified_name: "_ast.SetComp"
  super_classes: "_ast.expr"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "elt"
    fully_qualified_name: "_ast.SetComp.elt"
    type_annotation {
      pretty_printed_name: "_ast.expr"
      fully_qualified_name: "_ast.expr"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "generators"
    fully_qualified_name: "_ast.SetComp.generators"
    type_annotation {
      pretty_printed_name: "builtins.list[_ast.comprehension]"
      args {
        pretty_printed_name: "_ast.comprehension"
        fully_qualified_name: "_ast.comprehension"
      }
      fully_qualified_name: "builtins.list"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "DictComp"
  fully_qualified_name: "_ast.DictComp"
  super_classes: "_ast.expr"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "key"
    fully_qualified_name: "_ast.DictComp.key"
    type_annotation {
      pretty_printed_name: "_ast.expr"
      fully_qualified_name: "_ast.expr"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "value"
    fully_qualified_name: "_ast.DictComp.value"
    type_annotation {
      pretty_printed_name: "_ast.expr"
      fully_qualified_name: "_ast.expr"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "generators"
    fully_qualified_name: "_ast.DictComp.generators"
    type_annotation {
      pretty_printed_name: "builtins.list[_ast.comprehension]"
      args {
        pretty_printed_name: "_ast.comprehension"
        fully_qualified_name: "_ast.comprehension"
      }
      fully_qualified_name: "builtins.list"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "GeneratorExp"
  fully_qualified_name: "_ast.GeneratorExp"
  super_classes: "_ast.expr"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "elt"
    fully_qualified_name: "_ast.GeneratorExp.elt"
    type_annotation {
      pretty_printed_name: "_ast.expr"
      fully_qualified_name: "_ast.expr"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "generators"
    fully_qualified_name: "_ast.GeneratorExp.generators"
    type_annotation {
      pretty_printed_name: "builtins.list[_ast.comprehension]"
      args {
        pretty_printed_name: "_ast.comprehension"
        fully_qualified_name: "_ast.comprehension"
      }
      fully_qualified_name: "builtins.list"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "Yield"
  fully_qualified_name: "_ast.Yield"
  super_classes: "_ast.expr"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "value"
    fully_qualified_name: "_ast.Yield.value"
    type_annotation {
      pretty_printed_name: "Union[_ast.expr,None]"
      kind: UNION
      args {
        pretty_printed_name: "_ast.expr"
        fully_qualified_name: "_ast.expr"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "Compare"
  fully_qualified_name: "_ast.Compare"
  super_classes: "_ast.expr"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "left"
    fully_qualified_name: "_ast.Compare.left"
    type_annotation {
      pretty_printed_name: "_ast.expr"
      fully_qualified_name: "_ast.expr"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "ops"
    fully_qualified_name: "_ast.Compare.ops"
    type_annotation {
      pretty_printed_name: "builtins.list[_ast.cmpop]"
      args {
        pretty_printed_name: "_ast.cmpop"
        fully_qualified_name: "_ast.cmpop"
      }
      fully_qualified_name: "builtins.list"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "comparators"
    fully_qualified_name: "_ast.Compare.comparators"
    type_annotation {
      pretty_printed_name: "builtins.list[_ast.expr]"
      args {
        pretty_printed_name: "_ast.expr"
        fully_qualified_name: "_ast.expr"
      }
      fully_qualified_name: "builtins.list"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "Call"
  fully_qualified_name: "_ast.Call"
  super_classes: "_ast.expr"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "func"
    fully_qualified_name: "_ast.Call.func"
    type_annotation {
      pretty_printed_name: "_ast.expr"
      fully_qualified_name: "_ast.expr"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "args"
    fully_qualified_name: "_ast.Call.args"
    type_annotation {
      pretty_printed_name: "builtins.list[_ast.expr]"
      args {
        pretty_printed_name: "_ast.expr"
        fully_qualified_name: "_ast.expr"
      }
      fully_qualified_name: "builtins.list"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "keywords"
    fully_qualified_name: "_ast.Call.keywords"
    type_annotation {
      pretty_printed_name: "builtins.list[_ast.keyword]"
      args {
        pretty_printed_name: "_ast.keyword"
        fully_qualified_name: "_ast.keyword"
      }
      fully_qualified_name: "builtins.list"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "starargs"
    fully_qualified_name: "_ast.Call.starargs"
    type_annotation {
      pretty_printed_name: "Union[_ast.expr,None]"
      kind: UNION
      args {
        pretty_printed_name: "_ast.expr"
        fully_qualified_name: "_ast.expr"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "27"
  }
  attributes {
    name: "kwargs"
    fully_qualified_name: "_ast.Call.kwargs"
    type_annotation {
      pretty_printed_name: "Union[_ast.expr,None]"
      kind: UNION
      args {
        pretty_printed_name: "_ast.expr"
        fully_qualified_name: "_ast.expr"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "27"
  }
}
classes {
  name: "Repr"
  fully_qualified_name: "_ast.Repr"
  super_classes: "_ast.expr"
  valid_for: "27"
  attributes {
    name: "value"
    fully_qualified_name: "_ast.Repr.value"
    type_annotation {
      pretty_printed_name: "_ast.expr"
      fully_qualified_name: "_ast.expr"
    }
    valid_for: "27"
  }
}
classes {
  name: "Num"
  fully_qualified_name: "_ast.Num"
  super_classes: "_ast.expr"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  attributes {
    name: "n"
    fully_qualified_name: "_ast.Num.n"
    type_annotation {
      pretty_printed_name: "builtins.float"
      fully_qualified_name: "builtins.float"
    }
    valid_for: "27"
  }
  attributes {
    name: "n"
    fully_qualified_name: "_ast.Num.n"
    type_annotation {
      pretty_printed_name: "builtins.complex"
      fully_qualified_name: "builtins.complex"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
  }
}
classes {
  name: "Str"
  fully_qualified_name: "_ast.Str"
  super_classes: "_ast.expr"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  attributes {
    name: "s"
    fully_qualified_name: "_ast.Str.s"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
  }
}
classes {
  name: "Attribute"
  fully_qualified_name: "_ast.Attribute"
  super_classes: "_ast.expr"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "value"
    fully_qualified_name: "_ast.Attribute.value"
    type_annotation {
      pretty_printed_name: "_ast.expr"
      fully_qualified_name: "_ast.expr"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "attr"
    fully_qualified_name: "_ast.Attribute.attr"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "ctx"
    fully_qualified_name: "_ast.Attribute.ctx"
    type_annotation {
      pretty_printed_name: "_ast.expr_context"
      fully_qualified_name: "_ast.expr_context"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "Subscript"
  fully_qualified_name: "_ast.Subscript"
  super_classes: "_ast.expr"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "value"
    fully_qualified_name: "_ast.Subscript.value"
    type_annotation {
      pretty_printed_name: "_ast.expr"
      fully_qualified_name: "_ast.expr"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "slice"
    fully_qualified_name: "_ast.Subscript.slice"
    type_annotation {
      pretty_printed_name: "_ast.slice"
      fully_qualified_name: "_ast.slice"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
  }
  attributes {
    name: "slice"
    fully_qualified_name: "_ast.Subscript.slice"
    type_annotation {
      pretty_printed_name: "_ast.expr"
      fully_qualified_name: "_ast.expr"
    }
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "ctx"
    fully_qualified_name: "_ast.Subscript.ctx"
    type_annotation {
      pretty_printed_name: "_ast.expr_context"
      fully_qualified_name: "_ast.expr_context"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "Name"
  fully_qualified_name: "_ast.Name"
  super_classes: "_ast.expr"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "id"
    fully_qualified_name: "_ast.Name.id"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "ctx"
    fully_qualified_name: "_ast.Name.ctx"
    type_annotation {
      pretty_printed_name: "_ast.expr_context"
      fully_qualified_name: "_ast.expr_context"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "List"
  fully_qualified_name: "_ast.List"
  super_classes: "_ast.expr"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "elts"
    fully_qualified_name: "_ast.List.elts"
    type_annotation {
      pretty_printed_name: "builtins.list[_ast.expr]"
      args {
        pretty_printed_name: "_ast.expr"
        fully_qualified_name: "_ast.expr"
      }
      fully_qualified_name: "builtins.list"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "ctx"
    fully_qualified_name: "_ast.List.ctx"
    type_annotation {
      pretty_printed_name: "_ast.expr_context"
      fully_qualified_name: "_ast.expr_context"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "Tuple"
  fully_qualified_name: "_ast.Tuple"
  super_classes: "_ast.expr"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "elts"
    fully_qualified_name: "_ast.Tuple.elts"
    type_annotation {
      pretty_printed_name: "builtins.list[_ast.expr]"
      args {
        pretty_printed_name: "_ast.expr"
        fully_qualified_name: "_ast.expr"
      }
      fully_qualified_name: "builtins.list"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "ctx"
    fully_qualified_name: "_ast.Tuple.ctx"
    type_annotation {
      pretty_printed_name: "_ast.expr_context"
      fully_qualified_name: "_ast.expr_context"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "expr_context"
  fully_qualified_name: "_ast.expr_context"
  super_classes: "_ast.AST"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "AugLoad"
  fully_qualified_name: "_ast.AugLoad"
  super_classes: "_ast.expr_context"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
}
classes {
  name: "AugStore"
  fully_qualified_name: "_ast.AugStore"
  super_classes: "_ast.expr_context"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
}
classes {
  name: "Del"
  fully_qualified_name: "_ast.Del"
  super_classes: "_ast.expr_context"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "Load"
  fully_qualified_name: "_ast.Load"
  super_classes: "_ast.expr_context"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "Param"
  fully_qualified_name: "_ast.Param"
  super_classes: "_ast.expr_context"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
}
classes {
  name: "Store"
  fully_qualified_name: "_ast.Store"
  super_classes: "_ast.expr_context"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "boolop"
  fully_qualified_name: "_ast.boolop"
  super_classes: "_ast.AST"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "And"
  fully_qualified_name: "_ast.And"
  super_classes: "_ast.boolop"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "Or"
  fully_qualified_name: "_ast.Or"
  super_classes: "_ast.boolop"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "operator"
  fully_qualified_name: "_ast.operator"
  super_classes: "_ast.AST"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "Add"
  fully_qualified_name: "_ast.Add"
  super_classes: "_ast.operator"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "BitAnd"
  fully_qualified_name: "_ast.BitAnd"
  super_classes: "_ast.operator"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "BitOr"
  fully_qualified_name: "_ast.BitOr"
  super_classes: "_ast.operator"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "BitXor"
  fully_qualified_name: "_ast.BitXor"
  super_classes: "_ast.operator"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "Div"
  fully_qualified_name: "_ast.Div"
  super_classes: "_ast.operator"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "FloorDiv"
  fully_qualified_name: "_ast.FloorDiv"
  super_classes: "_ast.operator"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "LShift"
  fully_qualified_name: "_ast.LShift"
  super_classes: "_ast.operator"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "Mod"
  fully_qualified_name: "_ast.Mod"
  super_classes: "_ast.operator"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "Mult"
  fully_qualified_name: "_ast.Mult"
  super_classes: "_ast.operator"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "Pow"
  fully_qualified_name: "_ast.Pow"
  super_classes: "_ast.operator"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "RShift"
  fully_qualified_name: "_ast.RShift"
  super_classes: "_ast.operator"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "Sub"
  fully_qualified_name: "_ast.Sub"
  super_classes: "_ast.operator"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "unaryop"
  fully_qualified_name: "_ast.unaryop"
  super_classes: "_ast.AST"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "Invert"
  fully_qualified_name: "_ast.Invert"
  super_classes: "_ast.unaryop"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "Not"
  fully_qualified_name: "_ast.Not"
  super_classes: "_ast.unaryop"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "UAdd"
  fully_qualified_name: "_ast.UAdd"
  super_classes: "_ast.unaryop"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "USub"
  fully_qualified_name: "_ast.USub"
  super_classes: "_ast.unaryop"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "cmpop"
  fully_qualified_name: "_ast.cmpop"
  super_classes: "_ast.AST"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "Eq"
  fully_qualified_name: "_ast.Eq"
  super_classes: "_ast.cmpop"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "Gt"
  fully_qualified_name: "_ast.Gt"
  super_classes: "_ast.cmpop"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "GtE"
  fully_qualified_name: "_ast.GtE"
  super_classes: "_ast.cmpop"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "In"
  fully_qualified_name: "_ast.In"
  super_classes: "_ast.cmpop"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "Is"
  fully_qualified_name: "_ast.Is"
  super_classes: "_ast.cmpop"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "IsNot"
  fully_qualified_name: "_ast.IsNot"
  super_classes: "_ast.cmpop"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "Lt"
  fully_qualified_name: "_ast.Lt"
  super_classes: "_ast.cmpop"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "LtE"
  fully_qualified_name: "_ast.LtE"
  super_classes: "_ast.cmpop"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "NotEq"
  fully_qualified_name: "_ast.NotEq"
  super_classes: "_ast.cmpop"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "NotIn"
  fully_qualified_name: "_ast.NotIn"
  super_classes: "_ast.cmpop"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "comprehension"
  fully_qualified_name: "_ast.comprehension"
  super_classes: "_ast.AST"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "target"
    fully_qualified_name: "_ast.comprehension.target"
    type_annotation {
      pretty_printed_name: "_ast.expr"
      fully_qualified_name: "_ast.expr"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "iter"
    fully_qualified_name: "_ast.comprehension.iter"
    type_annotation {
      pretty_printed_name: "_ast.expr"
      fully_qualified_name: "_ast.expr"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "ifs"
    fully_qualified_name: "_ast.comprehension.ifs"
    type_annotation {
      pretty_printed_name: "builtins.list[_ast.expr]"
      args {
        pretty_printed_name: "_ast.expr"
        fully_qualified_name: "_ast.expr"
      }
      fully_qualified_name: "builtins.list"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "is_async"
    fully_qualified_name: "_ast.comprehension.is_async"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "excepthandler"
  fully_qualified_name: "_ast.excepthandler"
  super_classes: "_ast.AST"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "ExceptHandler"
  fully_qualified_name: "_ast.ExceptHandler"
  super_classes: "_ast.excepthandler"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "type"
    fully_qualified_name: "_ast.ExceptHandler.type"
    type_annotation {
      pretty_printed_name: "Union[_ast.expr,None]"
      kind: UNION
      args {
        pretty_printed_name: "_ast.expr"
        fully_qualified_name: "_ast.expr"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "name"
    fully_qualified_name: "_ast.ExceptHandler.name"
    type_annotation {
      pretty_printed_name: "Union[_ast.expr,None]"
      kind: UNION
      args {
        pretty_printed_name: "_ast.expr"
        fully_qualified_name: "_ast.expr"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "27"
  }
  attributes {
    name: "name"
    fully_qualified_name: "_ast.ExceptHandler.name"
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "body"
    fully_qualified_name: "_ast.ExceptHandler.body"
    type_annotation {
      pretty_printed_name: "builtins.list[_ast.stmt]"
      args {
        pretty_printed_name: "_ast.stmt"
        fully_qualified_name: "_ast.stmt"
      }
      fully_qualified_name: "builtins.list"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "lineno"
    fully_qualified_name: "_ast.ExceptHandler.lineno"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "27"
  }
  attributes {
    name: "col_offset"
    fully_qualified_name: "_ast.ExceptHandler.col_offset"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "27"
  }
}
classes {
  name: "arguments"
  fully_qualified_name: "_ast.arguments"
  super_classes: "_ast.AST"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "args"
    fully_qualified_name: "_ast.arguments.args"
    type_annotation {
      pretty_printed_name: "builtins.list[_ast.expr]"
      args {
        pretty_printed_name: "_ast.expr"
        fully_qualified_name: "_ast.expr"
      }
      fully_qualified_name: "builtins.list"
    }
    valid_for: "27"
  }
  attributes {
    name: "args"
    fully_qualified_name: "_ast.arguments.args"
    type_annotation {
      pretty_printed_name: "builtins.list[_ast.arg]"
      args {
        pretty_printed_name: "_ast.arg"
        fully_qualified_name: "_ast.arg"
      }
      fully_qualified_name: "builtins.list"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "vararg"
    fully_qualified_name: "_ast.arguments.vararg"
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "27"
  }
  attributes {
    name: "vararg"
    fully_qualified_name: "_ast.arguments.vararg"
    type_annotation {
      pretty_printed_name: "Union[_ast.arg,None]"
      kind: UNION
      args {
        pretty_printed_name: "_ast.arg"
        fully_qualified_name: "_ast.arg"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "kwarg"
    fully_qualified_name: "_ast.arguments.kwarg"
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "27"
  }
  attributes {
    name: "kwarg"
    fully_qualified_name: "_ast.arguments.kwarg"
    type_annotation {
      pretty_printed_name: "Union[_ast.arg,None]"
      kind: UNION
      args {
        pretty_printed_name: "_ast.arg"
        fully_qualified_name: "_ast.arg"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "defaults"
    fully_qualified_name: "_ast.arguments.defaults"
    type_annotation {
      pretty_printed_name: "builtins.list[_ast.expr]"
      args {
        pretty_printed_name: "_ast.expr"
        fully_qualified_name: "_ast.expr"
      }
      fully_qualified_name: "builtins.list"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "kwonlyargs"
    fully_qualified_name: "_ast.arguments.kwonlyargs"
    type_annotation {
      pretty_printed_name: "builtins.list[_ast.arg]"
      args {
        pretty_printed_name: "_ast.arg"
        fully_qualified_name: "_ast.arg"
      }
      fully_qualified_name: "builtins.list"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "kw_defaults"
    fully_qualified_name: "_ast.arguments.kw_defaults"
    type_annotation {
      pretty_printed_name: "builtins.list[Union[_ast.expr,None]]"
      args {
        pretty_printed_name: "Union[_ast.expr,None]"
        kind: UNION
        args {
          pretty_printed_name: "_ast.expr"
          fully_qualified_name: "_ast.expr"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      fully_qualified_name: "builtins.list"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "posonlyargs"
    fully_qualified_name: "_ast.arguments.posonlyargs"
    type_annotation {
      pretty_printed_name: "builtins.list[_ast.arg]"
      args {
        pretty_printed_name: "_ast.arg"
        fully_qualified_name: "_ast.arg"
      }
      fully_qualified_name: "builtins.list"
    }
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "keyword"
  fully_qualified_name: "_ast.keyword"
  super_classes: "_ast.AST"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "arg"
    fully_qualified_name: "_ast.keyword.arg"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "27"
  }
  attributes {
    name: "arg"
    fully_qualified_name: "_ast.keyword.arg"
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "value"
    fully_qualified_name: "_ast.keyword.value"
    type_annotation {
      pretty_printed_name: "_ast.expr"
      fully_qualified_name: "_ast.expr"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "alias"
  fully_qualified_name: "_ast.alias"
  super_classes: "_ast.AST"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "name"
    fully_qualified_name: "_ast.alias.name"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "asname"
    fully_qualified_name: "_ast.alias.asname"
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "NodeVisitor"
  fully_qualified_name: "ast.NodeVisitor"
  super_classes: "builtins.object"
  methods {
    name: "visit"
    fully_qualified_name: "ast.NodeVisitor.visit"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.AST"
        fully_qualified_name: "_ast.AST"
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "generic_visit"
    fully_qualified_name: "ast.NodeVisitor.generic_visit"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.AST"
        fully_qualified_name: "_ast.AST"
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_Module"
    fully_qualified_name: "ast.NodeVisitor.visit_Module"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.Module"
        fully_qualified_name: "_ast.Module"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_Interactive"
    fully_qualified_name: "ast.NodeVisitor.visit_Interactive"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.Interactive"
        fully_qualified_name: "_ast.Interactive"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_Expression"
    fully_qualified_name: "ast.NodeVisitor.visit_Expression"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.Expression"
        fully_qualified_name: "_ast.Expression"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_FunctionDef"
    fully_qualified_name: "ast.NodeVisitor.visit_FunctionDef"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.FunctionDef"
        fully_qualified_name: "_ast.FunctionDef"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_AsyncFunctionDef"
    fully_qualified_name: "ast.NodeVisitor.visit_AsyncFunctionDef"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.AsyncFunctionDef"
        fully_qualified_name: "_ast.AsyncFunctionDef"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_ClassDef"
    fully_qualified_name: "ast.NodeVisitor.visit_ClassDef"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.ClassDef"
        fully_qualified_name: "_ast.ClassDef"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_Return"
    fully_qualified_name: "ast.NodeVisitor.visit_Return"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.Return"
        fully_qualified_name: "_ast.Return"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_Delete"
    fully_qualified_name: "ast.NodeVisitor.visit_Delete"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.Delete"
        fully_qualified_name: "_ast.Delete"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_Assign"
    fully_qualified_name: "ast.NodeVisitor.visit_Assign"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.Assign"
        fully_qualified_name: "_ast.Assign"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_AugAssign"
    fully_qualified_name: "ast.NodeVisitor.visit_AugAssign"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.AugAssign"
        fully_qualified_name: "_ast.AugAssign"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_AnnAssign"
    fully_qualified_name: "ast.NodeVisitor.visit_AnnAssign"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.AnnAssign"
        fully_qualified_name: "_ast.AnnAssign"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_For"
    fully_qualified_name: "ast.NodeVisitor.visit_For"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.For"
        fully_qualified_name: "_ast.For"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_AsyncFor"
    fully_qualified_name: "ast.NodeVisitor.visit_AsyncFor"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.AsyncFor"
        fully_qualified_name: "_ast.AsyncFor"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_While"
    fully_qualified_name: "ast.NodeVisitor.visit_While"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.While"
        fully_qualified_name: "_ast.While"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_If"
    fully_qualified_name: "ast.NodeVisitor.visit_If"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.If"
        fully_qualified_name: "_ast.If"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_With"
    fully_qualified_name: "ast.NodeVisitor.visit_With"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.With"
        fully_qualified_name: "_ast.With"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_AsyncWith"
    fully_qualified_name: "ast.NodeVisitor.visit_AsyncWith"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.AsyncWith"
        fully_qualified_name: "_ast.AsyncWith"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_Raise"
    fully_qualified_name: "ast.NodeVisitor.visit_Raise"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.Raise"
        fully_qualified_name: "_ast.Raise"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_Try"
    fully_qualified_name: "ast.NodeVisitor.visit_Try"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.Try"
        fully_qualified_name: "_ast.Try"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_Assert"
    fully_qualified_name: "ast.NodeVisitor.visit_Assert"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.Assert"
        fully_qualified_name: "_ast.Assert"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_Import"
    fully_qualified_name: "ast.NodeVisitor.visit_Import"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.Import"
        fully_qualified_name: "_ast.Import"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_ImportFrom"
    fully_qualified_name: "ast.NodeVisitor.visit_ImportFrom"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.ImportFrom"
        fully_qualified_name: "_ast.ImportFrom"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_Global"
    fully_qualified_name: "ast.NodeVisitor.visit_Global"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.Global"
        fully_qualified_name: "_ast.Global"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_Nonlocal"
    fully_qualified_name: "ast.NodeVisitor.visit_Nonlocal"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.Nonlocal"
        fully_qualified_name: "_ast.Nonlocal"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_Expr"
    fully_qualified_name: "ast.NodeVisitor.visit_Expr"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.Expr"
        fully_qualified_name: "_ast.Expr"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_Pass"
    fully_qualified_name: "ast.NodeVisitor.visit_Pass"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.Pass"
        fully_qualified_name: "_ast.Pass"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_Break"
    fully_qualified_name: "ast.NodeVisitor.visit_Break"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.Break"
        fully_qualified_name: "_ast.Break"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_Continue"
    fully_qualified_name: "ast.NodeVisitor.visit_Continue"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.Continue"
        fully_qualified_name: "_ast.Continue"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_Slice"
    fully_qualified_name: "ast.NodeVisitor.visit_Slice"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.Slice"
        fully_qualified_name: "_ast.Slice"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_BoolOp"
    fully_qualified_name: "ast.NodeVisitor.visit_BoolOp"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.BoolOp"
        fully_qualified_name: "_ast.BoolOp"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_BinOp"
    fully_qualified_name: "ast.NodeVisitor.visit_BinOp"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.BinOp"
        fully_qualified_name: "_ast.BinOp"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_UnaryOp"
    fully_qualified_name: "ast.NodeVisitor.visit_UnaryOp"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.UnaryOp"
        fully_qualified_name: "_ast.UnaryOp"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_Lambda"
    fully_qualified_name: "ast.NodeVisitor.visit_Lambda"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.Lambda"
        fully_qualified_name: "_ast.Lambda"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_IfExp"
    fully_qualified_name: "ast.NodeVisitor.visit_IfExp"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.IfExp"
        fully_qualified_name: "_ast.IfExp"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_Dict"
    fully_qualified_name: "ast.NodeVisitor.visit_Dict"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.Dict"
        fully_qualified_name: "_ast.Dict"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_Set"
    fully_qualified_name: "ast.NodeVisitor.visit_Set"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.Set"
        fully_qualified_name: "_ast.Set"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_ListComp"
    fully_qualified_name: "ast.NodeVisitor.visit_ListComp"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.ListComp"
        fully_qualified_name: "_ast.ListComp"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_SetComp"
    fully_qualified_name: "ast.NodeVisitor.visit_SetComp"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.SetComp"
        fully_qualified_name: "_ast.SetComp"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_DictComp"
    fully_qualified_name: "ast.NodeVisitor.visit_DictComp"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.DictComp"
        fully_qualified_name: "_ast.DictComp"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_GeneratorExp"
    fully_qualified_name: "ast.NodeVisitor.visit_GeneratorExp"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.GeneratorExp"
        fully_qualified_name: "_ast.GeneratorExp"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_Await"
    fully_qualified_name: "ast.NodeVisitor.visit_Await"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.Await"
        fully_qualified_name: "_ast.Await"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_Yield"
    fully_qualified_name: "ast.NodeVisitor.visit_Yield"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.Yield"
        fully_qualified_name: "_ast.Yield"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_YieldFrom"
    fully_qualified_name: "ast.NodeVisitor.visit_YieldFrom"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.YieldFrom"
        fully_qualified_name: "_ast.YieldFrom"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_Compare"
    fully_qualified_name: "ast.NodeVisitor.visit_Compare"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.Compare"
        fully_qualified_name: "_ast.Compare"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_Call"
    fully_qualified_name: "ast.NodeVisitor.visit_Call"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.Call"
        fully_qualified_name: "_ast.Call"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_FormattedValue"
    fully_qualified_name: "ast.NodeVisitor.visit_FormattedValue"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.FormattedValue"
        fully_qualified_name: "_ast.FormattedValue"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_JoinedStr"
    fully_qualified_name: "ast.NodeVisitor.visit_JoinedStr"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.JoinedStr"
        fully_qualified_name: "_ast.JoinedStr"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_Constant"
    fully_qualified_name: "ast.NodeVisitor.visit_Constant"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.Constant"
        fully_qualified_name: "_ast.Constant"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_Attribute"
    fully_qualified_name: "ast.NodeVisitor.visit_Attribute"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.Attribute"
        fully_qualified_name: "_ast.Attribute"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_Subscript"
    fully_qualified_name: "ast.NodeVisitor.visit_Subscript"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.Subscript"
        fully_qualified_name: "_ast.Subscript"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_Starred"
    fully_qualified_name: "ast.NodeVisitor.visit_Starred"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.Starred"
        fully_qualified_name: "_ast.Starred"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_Name"
    fully_qualified_name: "ast.NodeVisitor.visit_Name"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.Name"
        fully_qualified_name: "_ast.Name"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_List"
    fully_qualified_name: "ast.NodeVisitor.visit_List"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.List"
        fully_qualified_name: "_ast.List"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_Tuple"
    fully_qualified_name: "ast.NodeVisitor.visit_Tuple"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.Tuple"
        fully_qualified_name: "_ast.Tuple"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_Del"
    fully_qualified_name: "ast.NodeVisitor.visit_Del"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.Del"
        fully_qualified_name: "_ast.Del"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_Load"
    fully_qualified_name: "ast.NodeVisitor.visit_Load"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.Load"
        fully_qualified_name: "_ast.Load"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_Store"
    fully_qualified_name: "ast.NodeVisitor.visit_Store"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.Store"
        fully_qualified_name: "_ast.Store"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_And"
    fully_qualified_name: "ast.NodeVisitor.visit_And"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.And"
        fully_qualified_name: "_ast.And"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_Or"
    fully_qualified_name: "ast.NodeVisitor.visit_Or"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.Or"
        fully_qualified_name: "_ast.Or"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_Add"
    fully_qualified_name: "ast.NodeVisitor.visit_Add"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.Add"
        fully_qualified_name: "_ast.Add"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_BitAnd"
    fully_qualified_name: "ast.NodeVisitor.visit_BitAnd"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.BitAnd"
        fully_qualified_name: "_ast.BitAnd"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_BitOr"
    fully_qualified_name: "ast.NodeVisitor.visit_BitOr"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.BitOr"
        fully_qualified_name: "_ast.BitOr"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_BitXor"
    fully_qualified_name: "ast.NodeVisitor.visit_BitXor"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.BitXor"
        fully_qualified_name: "_ast.BitXor"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_Div"
    fully_qualified_name: "ast.NodeVisitor.visit_Div"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.Div"
        fully_qualified_name: "_ast.Div"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_FloorDiv"
    fully_qualified_name: "ast.NodeVisitor.visit_FloorDiv"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.FloorDiv"
        fully_qualified_name: "_ast.FloorDiv"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_LShift"
    fully_qualified_name: "ast.NodeVisitor.visit_LShift"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.LShift"
        fully_qualified_name: "_ast.LShift"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_Mod"
    fully_qualified_name: "ast.NodeVisitor.visit_Mod"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.Mod"
        fully_qualified_name: "_ast.Mod"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_Mult"
    fully_qualified_name: "ast.NodeVisitor.visit_Mult"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.Mult"
        fully_qualified_name: "_ast.Mult"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_MatMult"
    fully_qualified_name: "ast.NodeVisitor.visit_MatMult"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.MatMult"
        fully_qualified_name: "_ast.MatMult"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_Pow"
    fully_qualified_name: "ast.NodeVisitor.visit_Pow"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.Pow"
        fully_qualified_name: "_ast.Pow"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_RShift"
    fully_qualified_name: "ast.NodeVisitor.visit_RShift"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.RShift"
        fully_qualified_name: "_ast.RShift"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_Sub"
    fully_qualified_name: "ast.NodeVisitor.visit_Sub"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.Sub"
        fully_qualified_name: "_ast.Sub"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_Invert"
    fully_qualified_name: "ast.NodeVisitor.visit_Invert"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.Invert"
        fully_qualified_name: "_ast.Invert"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_Not"
    fully_qualified_name: "ast.NodeVisitor.visit_Not"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.Not"
        fully_qualified_name: "_ast.Not"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_UAdd"
    fully_qualified_name: "ast.NodeVisitor.visit_UAdd"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.UAdd"
        fully_qualified_name: "_ast.UAdd"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_USub"
    fully_qualified_name: "ast.NodeVisitor.visit_USub"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.USub"
        fully_qualified_name: "_ast.USub"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_Eq"
    fully_qualified_name: "ast.NodeVisitor.visit_Eq"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.Eq"
        fully_qualified_name: "_ast.Eq"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_Gt"
    fully_qualified_name: "ast.NodeVisitor.visit_Gt"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.Gt"
        fully_qualified_name: "_ast.Gt"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_GtE"
    fully_qualified_name: "ast.NodeVisitor.visit_GtE"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.GtE"
        fully_qualified_name: "_ast.GtE"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_In"
    fully_qualified_name: "ast.NodeVisitor.visit_In"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.In"
        fully_qualified_name: "_ast.In"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_Is"
    fully_qualified_name: "ast.NodeVisitor.visit_Is"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.Is"
        fully_qualified_name: "_ast.Is"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_IsNot"
    fully_qualified_name: "ast.NodeVisitor.visit_IsNot"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.IsNot"
        fully_qualified_name: "_ast.IsNot"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_Lt"
    fully_qualified_name: "ast.NodeVisitor.visit_Lt"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.Lt"
        fully_qualified_name: "_ast.Lt"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_LtE"
    fully_qualified_name: "ast.NodeVisitor.visit_LtE"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.LtE"
        fully_qualified_name: "_ast.LtE"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_NotEq"
    fully_qualified_name: "ast.NodeVisitor.visit_NotEq"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.NotEq"
        fully_qualified_name: "_ast.NotEq"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_NotIn"
    fully_qualified_name: "ast.NodeVisitor.visit_NotIn"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.NotIn"
        fully_qualified_name: "_ast.NotIn"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_comprehension"
    fully_qualified_name: "ast.NodeVisitor.visit_comprehension"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.comprehension"
        fully_qualified_name: "_ast.comprehension"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_ExceptHandler"
    fully_qualified_name: "ast.NodeVisitor.visit_ExceptHandler"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.ExceptHandler"
        fully_qualified_name: "_ast.ExceptHandler"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_arguments"
    fully_qualified_name: "ast.NodeVisitor.visit_arguments"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.arguments"
        fully_qualified_name: "_ast.arguments"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_arg"
    fully_qualified_name: "ast.NodeVisitor.visit_arg"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.arg"
        fully_qualified_name: "_ast.arg"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_keyword"
    fully_qualified_name: "ast.NodeVisitor.visit_keyword"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.keyword"
        fully_qualified_name: "_ast.keyword"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_alias"
    fully_qualified_name: "ast.NodeVisitor.visit_alias"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.alias"
        fully_qualified_name: "_ast.alias"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_withitem"
    fully_qualified_name: "ast.NodeVisitor.visit_withitem"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.withitem"
        fully_qualified_name: "_ast.withitem"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_ExtSlice"
    fully_qualified_name: "ast.NodeVisitor.visit_ExtSlice"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.ExtSlice"
        fully_qualified_name: "_ast.ExtSlice"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
  }
  methods {
    name: "visit_ExtSlice"
    fully_qualified_name: "ast.NodeVisitor.visit_ExtSlice"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.ExtSlice"
        fully_qualified_name: "ast.ExtSlice"
      }
    }
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_Index"
    fully_qualified_name: "ast.NodeVisitor.visit_Index"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.Index"
        fully_qualified_name: "_ast.Index"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
  }
  methods {
    name: "visit_Index"
    fully_qualified_name: "ast.NodeVisitor.visit_Index"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.Index"
        fully_qualified_name: "ast.Index"
      }
    }
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_Suite"
    fully_qualified_name: "ast.NodeVisitor.visit_Suite"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.Suite"
        fully_qualified_name: "_ast.Suite"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
  }
  methods {
    name: "visit_Suite"
    fully_qualified_name: "ast.NodeVisitor.visit_Suite"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.Suite"
        fully_qualified_name: "ast.Suite"
      }
    }
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_AugLoad"
    fully_qualified_name: "ast.NodeVisitor.visit_AugLoad"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.AugLoad"
        fully_qualified_name: "_ast.AugLoad"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
  }
  methods {
    name: "visit_AugLoad"
    fully_qualified_name: "ast.NodeVisitor.visit_AugLoad"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.AugLoad"
        fully_qualified_name: "ast.AugLoad"
      }
    }
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_AugStore"
    fully_qualified_name: "ast.NodeVisitor.visit_AugStore"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.AugStore"
        fully_qualified_name: "_ast.AugStore"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
  }
  methods {
    name: "visit_AugStore"
    fully_qualified_name: "ast.NodeVisitor.visit_AugStore"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.AugStore"
        fully_qualified_name: "ast.AugStore"
      }
    }
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_Param"
    fully_qualified_name: "ast.NodeVisitor.visit_Param"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.Param"
        fully_qualified_name: "_ast.Param"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
  }
  methods {
    name: "visit_Param"
    fully_qualified_name: "ast.NodeVisitor.visit_Param"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.Param"
        fully_qualified_name: "ast.Param"
      }
    }
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_Num"
    fully_qualified_name: "ast.NodeVisitor.visit_Num"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.Num"
        fully_qualified_name: "_ast.Num"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
  }
  methods {
    name: "visit_Num"
    fully_qualified_name: "ast.NodeVisitor.visit_Num"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.Num"
        fully_qualified_name: "ast.Num"
      }
    }
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_Str"
    fully_qualified_name: "ast.NodeVisitor.visit_Str"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.Str"
        fully_qualified_name: "_ast.Str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
  }
  methods {
    name: "visit_Str"
    fully_qualified_name: "ast.NodeVisitor.visit_Str"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.Str"
        fully_qualified_name: "ast.Str"
      }
    }
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_Bytes"
    fully_qualified_name: "ast.NodeVisitor.visit_Bytes"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.Bytes"
        fully_qualified_name: "_ast.Bytes"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
  }
  methods {
    name: "visit_Bytes"
    fully_qualified_name: "ast.NodeVisitor.visit_Bytes"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.Bytes"
        fully_qualified_name: "ast.Bytes"
      }
    }
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_NameConstant"
    fully_qualified_name: "ast.NodeVisitor.visit_NameConstant"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.NameConstant"
        fully_qualified_name: "_ast.NameConstant"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
  }
  methods {
    name: "visit_NameConstant"
    fully_qualified_name: "ast.NodeVisitor.visit_NameConstant"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NameConstant"
        fully_qualified_name: "ast.NameConstant"
      }
    }
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_Ellipsis"
    fully_qualified_name: "ast.NodeVisitor.visit_Ellipsis"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.Ellipsis"
        fully_qualified_name: "_ast.Ellipsis"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
  }
  methods {
    name: "visit_Ellipsis"
    fully_qualified_name: "ast.NodeVisitor.visit_Ellipsis"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.Ellipsis"
        fully_qualified_name: "ast.Ellipsis"
      }
    }
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "visit_NamedExpr"
    fully_qualified_name: "ast.NodeVisitor.visit_NamedExpr"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeVisitor"
        fully_qualified_name: "ast.NodeVisitor"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.NamedExpr"
        fully_qualified_name: "_ast.NamedExpr"
      }
    }
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "NodeTransformer"
  fully_qualified_name: "ast.NodeTransformer"
  super_classes: "ast.NodeVisitor"
  methods {
    name: "generic_visit"
    fully_qualified_name: "ast.NodeTransformer.generic_visit"
    return_annotation {
      pretty_printed_name: "Union[_ast.AST,None]"
      kind: UNION
      args {
        pretty_printed_name: "_ast.AST"
        fully_qualified_name: "_ast.AST"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeTransformer"
        fully_qualified_name: "ast.NodeTransformer"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.AST"
        fully_qualified_name: "_ast.AST"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "generic_visit"
    fully_qualified_name: "ast.NodeTransformer.generic_visit"
    return_annotation {
      pretty_printed_name: "_ast.AST"
      fully_qualified_name: "_ast.AST"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ast.NodeTransformer"
        fully_qualified_name: "ast.NodeTransformer"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.AST"
        fully_qualified_name: "_ast.AST"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "AST"
  fully_qualified_name: "_ast.AST"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "_ast.AST.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_ast.AST"
        fully_qualified_name: "_ast.AST"
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "kwargs"
      kind: VAR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "_attributes"
    fully_qualified_name: "_ast.AST._attributes"
    type_annotation {
      pretty_printed_name: "builtins.tuple[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "builtins.tuple"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "_fields"
    fully_qualified_name: "_ast.AST._fields"
    type_annotation {
      pretty_printed_name: "builtins.tuple[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "builtins.tuple"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "lineno"
    fully_qualified_name: "_ast.AST.lineno"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "col_offset"
    fully_qualified_name: "_ast.AST.col_offset"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "end_lineno"
    fully_qualified_name: "_ast.AST.end_lineno"
    type_annotation {
      pretty_printed_name: "Union[builtins.int,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "end_col_offset"
    fully_qualified_name: "_ast.AST.end_col_offset"
    type_annotation {
      pretty_printed_name: "Union[builtins.int,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "type_comment"
    fully_qualified_name: "_ast.AST.type_comment"
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "Module"
  fully_qualified_name: "_ast.Module"
  super_classes: "_ast.mod"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "body"
    fully_qualified_name: "_ast.Module.body"
    type_annotation {
      pretty_printed_name: "builtins.list[_ast.stmt]"
      args {
        pretty_printed_name: "_ast.stmt"
        fully_qualified_name: "_ast.stmt"
      }
      fully_qualified_name: "builtins.list"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "type_ignores"
    fully_qualified_name: "_ast.Module.type_ignores"
    type_annotation {
      pretty_printed_name: "builtins.list[_ast.TypeIgnore]"
      args {
        pretty_printed_name: "_ast.TypeIgnore"
        fully_qualified_name: "_ast.TypeIgnore"
      }
      fully_qualified_name: "builtins.list"
    }
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "AsyncFunctionDef"
  fully_qualified_name: "_ast.AsyncFunctionDef"
  super_classes: "_ast.stmt"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "name"
    fully_qualified_name: "_ast.AsyncFunctionDef.name"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "args"
    fully_qualified_name: "_ast.AsyncFunctionDef.args"
    type_annotation {
      pretty_printed_name: "_ast.arguments"
      fully_qualified_name: "_ast.arguments"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "body"
    fully_qualified_name: "_ast.AsyncFunctionDef.body"
    type_annotation {
      pretty_printed_name: "builtins.list[_ast.stmt]"
      args {
        pretty_printed_name: "_ast.stmt"
        fully_qualified_name: "_ast.stmt"
      }
      fully_qualified_name: "builtins.list"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "decorator_list"
    fully_qualified_name: "_ast.AsyncFunctionDef.decorator_list"
    type_annotation {
      pretty_printed_name: "builtins.list[_ast.expr]"
      args {
        pretty_printed_name: "_ast.expr"
        fully_qualified_name: "_ast.expr"
      }
      fully_qualified_name: "builtins.list"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "returns"
    fully_qualified_name: "_ast.AsyncFunctionDef.returns"
    type_annotation {
      pretty_printed_name: "Union[_ast.expr,None]"
      kind: UNION
      args {
        pretty_printed_name: "_ast.expr"
        fully_qualified_name: "_ast.expr"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "AnnAssign"
  fully_qualified_name: "_ast.AnnAssign"
  super_classes: "_ast.stmt"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "target"
    fully_qualified_name: "_ast.AnnAssign.target"
    type_annotation {
      pretty_printed_name: "_ast.expr"
      fully_qualified_name: "_ast.expr"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "annotation"
    fully_qualified_name: "_ast.AnnAssign.annotation"
    type_annotation {
      pretty_printed_name: "_ast.expr"
      fully_qualified_name: "_ast.expr"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "value"
    fully_qualified_name: "_ast.AnnAssign.value"
    type_annotation {
      pretty_printed_name: "Union[_ast.expr,None]"
      kind: UNION
      args {
        pretty_printed_name: "_ast.expr"
        fully_qualified_name: "_ast.expr"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "simple"
    fully_qualified_name: "_ast.AnnAssign.simple"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "AsyncFor"
  fully_qualified_name: "_ast.AsyncFor"
  super_classes: "_ast.stmt"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "target"
    fully_qualified_name: "_ast.AsyncFor.target"
    type_annotation {
      pretty_printed_name: "_ast.expr"
      fully_qualified_name: "_ast.expr"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "iter"
    fully_qualified_name: "_ast.AsyncFor.iter"
    type_annotation {
      pretty_printed_name: "_ast.expr"
      fully_qualified_name: "_ast.expr"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "body"
    fully_qualified_name: "_ast.AsyncFor.body"
    type_annotation {
      pretty_printed_name: "builtins.list[_ast.stmt]"
      args {
        pretty_printed_name: "_ast.stmt"
        fully_qualified_name: "_ast.stmt"
      }
      fully_qualified_name: "builtins.list"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "orelse"
    fully_qualified_name: "_ast.AsyncFor.orelse"
    type_annotation {
      pretty_printed_name: "builtins.list[_ast.stmt]"
      args {
        pretty_printed_name: "_ast.stmt"
        fully_qualified_name: "_ast.stmt"
      }
      fully_qualified_name: "builtins.list"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "AsyncWith"
  fully_qualified_name: "_ast.AsyncWith"
  super_classes: "_ast.stmt"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "items"
    fully_qualified_name: "_ast.AsyncWith.items"
    type_annotation {
      pretty_printed_name: "builtins.list[_ast.withitem]"
      args {
        pretty_printed_name: "_ast.withitem"
        fully_qualified_name: "_ast.withitem"
      }
      fully_qualified_name: "builtins.list"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "body"
    fully_qualified_name: "_ast.AsyncWith.body"
    type_annotation {
      pretty_printed_name: "builtins.list[_ast.stmt]"
      args {
        pretty_printed_name: "_ast.stmt"
        fully_qualified_name: "_ast.stmt"
      }
      fully_qualified_name: "builtins.list"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "Try"
  fully_qualified_name: "_ast.Try"
  super_classes: "_ast.stmt"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "body"
    fully_qualified_name: "_ast.Try.body"
    type_annotation {
      pretty_printed_name: "builtins.list[_ast.stmt]"
      args {
        pretty_printed_name: "_ast.stmt"
        fully_qualified_name: "_ast.stmt"
      }
      fully_qualified_name: "builtins.list"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "handlers"
    fully_qualified_name: "_ast.Try.handlers"
    type_annotation {
      pretty_printed_name: "builtins.list[_ast.ExceptHandler]"
      args {
        pretty_printed_name: "_ast.ExceptHandler"
        fully_qualified_name: "_ast.ExceptHandler"
      }
      fully_qualified_name: "builtins.list"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "orelse"
    fully_qualified_name: "_ast.Try.orelse"
    type_annotation {
      pretty_printed_name: "builtins.list[_ast.stmt]"
      args {
        pretty_printed_name: "_ast.stmt"
        fully_qualified_name: "_ast.stmt"
      }
      fully_qualified_name: "builtins.list"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "finalbody"
    fully_qualified_name: "_ast.Try.finalbody"
    type_annotation {
      pretty_printed_name: "builtins.list[_ast.stmt]"
      args {
        pretty_printed_name: "_ast.stmt"
        fully_qualified_name: "_ast.stmt"
      }
      fully_qualified_name: "builtins.list"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "Nonlocal"
  fully_qualified_name: "_ast.Nonlocal"
  super_classes: "_ast.stmt"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "names"
    fully_qualified_name: "_ast.Nonlocal.names"
    type_annotation {
      pretty_printed_name: "builtins.list[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "builtins.list"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "Await"
  fully_qualified_name: "_ast.Await"
  super_classes: "_ast.expr"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "value"
    fully_qualified_name: "_ast.Await.value"
    type_annotation {
      pretty_printed_name: "_ast.expr"
      fully_qualified_name: "_ast.expr"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "YieldFrom"
  fully_qualified_name: "_ast.YieldFrom"
  super_classes: "_ast.expr"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "value"
    fully_qualified_name: "_ast.YieldFrom.value"
    type_annotation {
      pretty_printed_name: "_ast.expr"
      fully_qualified_name: "_ast.expr"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "FormattedValue"
  fully_qualified_name: "_ast.FormattedValue"
  super_classes: "_ast.expr"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "value"
    fully_qualified_name: "_ast.FormattedValue.value"
    type_annotation {
      pretty_printed_name: "_ast.expr"
      fully_qualified_name: "_ast.expr"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "conversion"
    fully_qualified_name: "_ast.FormattedValue.conversion"
    type_annotation {
      pretty_printed_name: "Union[builtins.int,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "format_spec"
    fully_qualified_name: "_ast.FormattedValue.format_spec"
    type_annotation {
      pretty_printed_name: "Union[_ast.expr,None]"
      kind: UNION
      args {
        pretty_printed_name: "_ast.expr"
        fully_qualified_name: "_ast.expr"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "JoinedStr"
  fully_qualified_name: "_ast.JoinedStr"
  super_classes: "_ast.expr"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "values"
    fully_qualified_name: "_ast.JoinedStr.values"
    type_annotation {
      pretty_printed_name: "builtins.list[_ast.expr]"
      args {
        pretty_printed_name: "_ast.expr"
        fully_qualified_name: "_ast.expr"
      }
      fully_qualified_name: "builtins.list"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "Bytes"
  fully_qualified_name: "_ast.Bytes"
  super_classes: "_ast.expr"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  attributes {
    name: "s"
    fully_qualified_name: "_ast.Bytes.s"
    type_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
  }
}
classes {
  name: "NameConstant"
  fully_qualified_name: "_ast.NameConstant"
  super_classes: "_ast.expr"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  attributes {
    name: "value"
    fully_qualified_name: "_ast.NameConstant.value"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
  }
}
classes {
  name: "Constant"
  fully_qualified_name: "_ast.Constant"
  super_classes: "_ast.expr"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "value"
    fully_qualified_name: "_ast.Constant.value"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "kind"
    fully_qualified_name: "_ast.Constant.kind"
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "s"
    fully_qualified_name: "_ast.Constant.s"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "n"
    fully_qualified_name: "_ast.Constant.n"
    type_annotation {
      pretty_printed_name: "builtins.complex"
      fully_qualified_name: "builtins.complex"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "Starred"
  fully_qualified_name: "_ast.Starred"
  super_classes: "_ast.expr"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "value"
    fully_qualified_name: "_ast.Starred.value"
    type_annotation {
      pretty_printed_name: "_ast.expr"
      fully_qualified_name: "_ast.expr"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "ctx"
    fully_qualified_name: "_ast.Starred.ctx"
    type_annotation {
      pretty_printed_name: "_ast.expr_context"
      fully_qualified_name: "_ast.expr_context"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "MatMult"
  fully_qualified_name: "_ast.MatMult"
  super_classes: "_ast.operator"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "arg"
  fully_qualified_name: "_ast.arg"
  super_classes: "_ast.AST"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "arg"
    fully_qualified_name: "_ast.arg.arg"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "annotation"
    fully_qualified_name: "_ast.arg.annotation"
    type_annotation {
      pretty_printed_name: "Union[_ast.expr,None]"
      kind: UNION
      args {
        pretty_printed_name: "_ast.expr"
        fully_qualified_name: "_ast.expr"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "withitem"
  fully_qualified_name: "_ast.withitem"
  super_classes: "_ast.AST"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "context_expr"
    fully_qualified_name: "_ast.withitem.context_expr"
    type_annotation {
      pretty_printed_name: "_ast.expr"
      fully_qualified_name: "_ast.expr"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "optional_vars"
    fully_qualified_name: "_ast.withitem.optional_vars"
    type_annotation {
      pretty_printed_name: "Union[_ast.expr,None]"
      kind: UNION
      args {
        pretty_printed_name: "_ast.expr"
        fully_qualified_name: "_ast.expr"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "type_ignore"
  fully_qualified_name: "_ast.type_ignore"
  super_classes: "_ast.AST"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "TypeIgnore"
  fully_qualified_name: "_ast.TypeIgnore"
  super_classes: "_ast.type_ignore"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "tag"
    fully_qualified_name: "_ast.TypeIgnore.tag"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "FunctionType"
  fully_qualified_name: "_ast.FunctionType"
  super_classes: "_ast.mod"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "argtypes"
    fully_qualified_name: "_ast.FunctionType.argtypes"
    type_annotation {
      pretty_printed_name: "builtins.list[_ast.expr]"
      args {
        pretty_printed_name: "_ast.expr"
        fully_qualified_name: "_ast.expr"
      }
      fully_qualified_name: "builtins.list"
    }
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "returns"
    fully_qualified_name: "_ast.FunctionType.returns"
    type_annotation {
      pretty_printed_name: "_ast.expr"
      fully_qualified_name: "_ast.expr"
    }
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "NamedExpr"
  fully_qualified_name: "_ast.NamedExpr"
  super_classes: "_ast.expr"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "target"
    fully_qualified_name: "_ast.NamedExpr.target"
    type_annotation {
      pretty_printed_name: "_ast.expr"
      fully_qualified_name: "_ast.expr"
    }
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "value"
    fully_qualified_name: "_ast.NamedExpr.value"
    type_annotation {
      pretty_printed_name: "_ast.expr"
      fully_qualified_name: "_ast.expr"
    }
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "Num"
  fully_qualified_name: "ast.Num"
  super_classes: "_ast.Constant"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "value"
    fully_qualified_name: "ast.Num.value"
    type_annotation {
      pretty_printed_name: "builtins.complex"
      fully_qualified_name: "builtins.complex"
    }
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "Str"
  fully_qualified_name: "ast.Str"
  super_classes: "_ast.Constant"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "value"
    fully_qualified_name: "ast.Str.value"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "s"
    fully_qualified_name: "ast.Str.s"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "Bytes"
  fully_qualified_name: "ast.Bytes"
  super_classes: "_ast.Constant"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "value"
    fully_qualified_name: "ast.Bytes.value"
    type_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "s"
    fully_qualified_name: "ast.Bytes.s"
    type_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "NameConstant"
  fully_qualified_name: "ast.NameConstant"
  super_classes: "_ast.Constant"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "Ellipsis"
  fully_qualified_name: "ast.Ellipsis"
  super_classes: "_ast.Constant"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "slice"
  fully_qualified_name: "ast.slice"
  super_classes: "_ast.AST"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "ExtSlice"
  fully_qualified_name: "ast.ExtSlice"
  super_classes: "ast.slice"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "Index"
  fully_qualified_name: "ast.Index"
  super_classes: "ast.slice"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "Suite"
  fully_qualified_name: "ast.Suite"
  super_classes: "_ast.mod"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "AugLoad"
  fully_qualified_name: "ast.AugLoad"
  super_classes: "_ast.expr_context"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "AugStore"
  fully_qualified_name: "ast.AugStore"
  super_classes: "_ast.expr_context"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "Param"
  fully_qualified_name: "ast.Param"
  super_classes: "_ast.expr_context"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "Match"
  fully_qualified_name: "_ast.Match"
  super_classes: "_ast.stmt"
  valid_for: "310"
  attributes {
    name: "subject"
    fully_qualified_name: "_ast.Match.subject"
    type_annotation {
      pretty_printed_name: "_ast.expr"
      fully_qualified_name: "_ast.expr"
    }
    valid_for: "310"
  }
  attributes {
    name: "cases"
    fully_qualified_name: "_ast.Match.cases"
    type_annotation {
      pretty_printed_name: "builtins.list[_ast.match_case]"
      args {
        pretty_printed_name: "_ast.match_case"
        fully_qualified_name: "_ast.match_case"
      }
      fully_qualified_name: "builtins.list"
    }
    valid_for: "310"
  }
}
classes {
  name: "pattern"
  fully_qualified_name: "_ast.pattern"
  super_classes: "_ast.AST"
  valid_for: "310"
}
classes {
  name: "match_case"
  fully_qualified_name: "_ast.match_case"
  super_classes: "_ast.AST"
  valid_for: "310"
  attributes {
    name: "pattern"
    fully_qualified_name: "_ast.match_case.pattern"
    type_annotation {
      pretty_printed_name: "_ast.pattern"
      fully_qualified_name: "_ast.pattern"
    }
    valid_for: "310"
  }
  attributes {
    name: "guard"
    fully_qualified_name: "_ast.match_case.guard"
    type_annotation {
      pretty_printed_name: "Union[_ast.expr,None]"
      kind: UNION
      args {
        pretty_printed_name: "_ast.expr"
        fully_qualified_name: "_ast.expr"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "310"
  }
  attributes {
    name: "body"
    fully_qualified_name: "_ast.match_case.body"
    type_annotation {
      pretty_printed_name: "builtins.list[_ast.stmt]"
      args {
        pretty_printed_name: "_ast.stmt"
        fully_qualified_name: "_ast.stmt"
      }
      fully_qualified_name: "builtins.list"
    }
    valid_for: "310"
  }
}
classes {
  name: "MatchValue"
  fully_qualified_name: "_ast.MatchValue"
  super_classes: "_ast.pattern"
  valid_for: "310"
  attributes {
    name: "value"
    fully_qualified_name: "_ast.MatchValue.value"
    type_annotation {
      pretty_printed_name: "_ast.expr"
      fully_qualified_name: "_ast.expr"
    }
    valid_for: "310"
  }
}
classes {
  name: "MatchSingleton"
  fully_qualified_name: "_ast.MatchSingleton"
  super_classes: "_ast.pattern"
  valid_for: "310"
  attributes {
    name: "value"
    fully_qualified_name: "_ast.MatchSingleton.value"
    type_annotation {
      pretty_printed_name: "Union[Literal[builtins.bool],Literal[builtins.bool],None]"
      kind: UNION
      args {
        pretty_printed_name: "Literal[builtins.bool]"
        kind: LITERAL
        args {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
      }
      args {
        pretty_printed_name: "Literal[builtins.bool]"
        kind: LITERAL
        args {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "310"
  }
}
classes {
  name: "MatchSequence"
  fully_qualified_name: "_ast.MatchSequence"
  super_classes: "_ast.pattern"
  valid_for: "310"
  attributes {
    name: "patterns"
    fully_qualified_name: "_ast.MatchSequence.patterns"
    type_annotation {
      pretty_printed_name: "builtins.list[_ast.pattern]"
      args {
        pretty_printed_name: "_ast.pattern"
        fully_qualified_name: "_ast.pattern"
      }
      fully_qualified_name: "builtins.list"
    }
    valid_for: "310"
  }
}
classes {
  name: "MatchStar"
  fully_qualified_name: "_ast.MatchStar"
  super_classes: "_ast.pattern"
  valid_for: "310"
  attributes {
    name: "name"
    fully_qualified_name: "_ast.MatchStar.name"
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "310"
  }
}
classes {
  name: "MatchMapping"
  fully_qualified_name: "_ast.MatchMapping"
  super_classes: "_ast.pattern"
  valid_for: "310"
  attributes {
    name: "keys"
    fully_qualified_name: "_ast.MatchMapping.keys"
    type_annotation {
      pretty_printed_name: "builtins.list[_ast.expr]"
      args {
        pretty_printed_name: "_ast.expr"
        fully_qualified_name: "_ast.expr"
      }
      fully_qualified_name: "builtins.list"
    }
    valid_for: "310"
  }
  attributes {
    name: "patterns"
    fully_qualified_name: "_ast.MatchMapping.patterns"
    type_annotation {
      pretty_printed_name: "builtins.list[_ast.pattern]"
      args {
        pretty_printed_name: "_ast.pattern"
        fully_qualified_name: "_ast.pattern"
      }
      fully_qualified_name: "builtins.list"
    }
    valid_for: "310"
  }
  attributes {
    name: "rest"
    fully_qualified_name: "_ast.MatchMapping.rest"
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "310"
  }
}
classes {
  name: "MatchClass"
  fully_qualified_name: "_ast.MatchClass"
  super_classes: "_ast.pattern"
  valid_for: "310"
  attributes {
    name: "cls"
    fully_qualified_name: "_ast.MatchClass.cls"
    type_annotation {
      pretty_printed_name: "_ast.expr"
      fully_qualified_name: "_ast.expr"
    }
    valid_for: "310"
  }
  attributes {
    name: "patterns"
    fully_qualified_name: "_ast.MatchClass.patterns"
    type_annotation {
      pretty_printed_name: "builtins.list[_ast.pattern]"
      args {
        pretty_printed_name: "_ast.pattern"
        fully_qualified_name: "_ast.pattern"
      }
      fully_qualified_name: "builtins.list"
    }
    valid_for: "310"
  }
  attributes {
    name: "kwd_attrs"
    fully_qualified_name: "_ast.MatchClass.kwd_attrs"
    type_annotation {
      pretty_printed_name: "builtins.list[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "builtins.list"
    }
    valid_for: "310"
  }
  attributes {
    name: "kwd_patterns"
    fully_qualified_name: "_ast.MatchClass.kwd_patterns"
    type_annotation {
      pretty_printed_name: "builtins.list[_ast.pattern]"
      args {
        pretty_printed_name: "_ast.pattern"
        fully_qualified_name: "_ast.pattern"
      }
      fully_qualified_name: "builtins.list"
    }
    valid_for: "310"
  }
}
classes {
  name: "MatchAs"
  fully_qualified_name: "_ast.MatchAs"
  super_classes: "_ast.pattern"
  valid_for: "310"
  attributes {
    name: "pattern"
    fully_qualified_name: "_ast.MatchAs.pattern"
    type_annotation {
      pretty_printed_name: "Union[_ast.pattern,None]"
      kind: UNION
      args {
        pretty_printed_name: "_ast.pattern"
        fully_qualified_name: "_ast.pattern"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "310"
  }
  attributes {
    name: "name"
    fully_qualified_name: "_ast.MatchAs.name"
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "310"
  }
}
classes {
  name: "MatchOr"
  fully_qualified_name: "_ast.MatchOr"
  super_classes: "_ast.pattern"
  valid_for: "310"
  attributes {
    name: "patterns"
    fully_qualified_name: "_ast.MatchOr.patterns"
    type_annotation {
      pretty_printed_name: "builtins.list[_ast.pattern]"
      args {
        pretty_printed_name: "_ast.pattern"
        fully_qualified_name: "_ast.pattern"
      }
      fully_qualified_name: "builtins.list"
    }
    valid_for: "310"
  }
}
functions {
  name: "parse"
  fully_qualified_name: "ast.parse"
  return_annotation {
    pretty_printed_name: "_ast.Module"
    fully_qualified_name: "_ast.Module"
  }
  parameters {
    name: "source"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,builtins.unicode]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.unicode"
        fully_qualified_name: "builtins.unicode"
      }
    }
  }
  parameters {
    name: "filename"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,builtins.unicode]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.unicode"
        fully_qualified_name: "builtins.unicode"
      }
    }
    has_default: true
  }
  parameters {
    name: "mode"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,builtins.unicode]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.unicode"
        fully_qualified_name: "builtins.unicode"
      }
    }
    has_default: true
  }
  valid_for: "27"
}
functions {
  name: "copy_location"
  fully_qualified_name: "ast.copy_location"
  return_annotation {
    pretty_printed_name: "_ast.AST"
    fully_qualified_name: "_ast.AST"
  }
  parameters {
    name: "new_node"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "_ast.AST"
      fully_qualified_name: "_ast.AST"
    }
  }
  parameters {
    name: "old_node"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "_ast.AST"
      fully_qualified_name: "_ast.AST"
    }
  }
  valid_for: "27"
}
functions {
  name: "copy_location"
  fully_qualified_name: "ast.copy_location"
  return_annotation {
    pretty_printed_name: "ast._T"
    kind: TYPE_VAR
  }
  parameters {
    name: "new_node"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "ast._T"
      kind: TYPE_VAR
    }
  }
  parameters {
    name: "old_node"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "_ast.AST"
      fully_qualified_name: "_ast.AST"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "dump"
  fully_qualified_name: "ast.dump"
  return_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
  parameters {
    name: "node"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "_ast.AST"
      fully_qualified_name: "_ast.AST"
    }
  }
  parameters {
    name: "annotate_fields"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    has_default: true
  }
  parameters {
    name: "include_attributes"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    has_default: true
  }
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
}
functions {
  name: "dump"
  fully_qualified_name: "ast.dump"
  return_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
  parameters {
    name: "node"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "_ast.AST"
      fully_qualified_name: "_ast.AST"
    }
  }
  parameters {
    name: "annotate_fields"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    has_default: true
  }
  parameters {
    name: "include_attributes"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    has_default: true
  }
  parameters {
    name: "indent"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[builtins.int,builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "fix_missing_locations"
  fully_qualified_name: "ast.fix_missing_locations"
  return_annotation {
    pretty_printed_name: "_ast.AST"
    fully_qualified_name: "_ast.AST"
  }
  parameters {
    name: "node"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "_ast.AST"
      fully_qualified_name: "_ast.AST"
    }
  }
  valid_for: "27"
}
functions {
  name: "fix_missing_locations"
  fully_qualified_name: "ast.fix_missing_locations"
  return_annotation {
    pretty_printed_name: "ast._T"
    kind: TYPE_VAR
  }
  parameters {
    name: "node"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "ast._T"
      kind: TYPE_VAR
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "get_docstring"
  fully_qualified_name: "ast.get_docstring"
  return_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
  parameters {
    name: "node"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "_ast.AST"
      fully_qualified_name: "_ast.AST"
    }
  }
  parameters {
    name: "clean"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    has_default: true
  }
  valid_for: "27"
}
functions {
  name: "get_docstring"
  fully_qualified_name: "ast.get_docstring"
  return_annotation {
    pretty_printed_name: "Union[builtins.str,None]"
    kind: UNION
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    args {
      pretty_printed_name: "None"
      kind: NONE
    }
  }
  parameters {
    name: "node"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "_ast.AST"
      fully_qualified_name: "_ast.AST"
    }
  }
  parameters {
    name: "clean"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "increment_lineno"
  fully_qualified_name: "ast.increment_lineno"
  return_annotation {
    pretty_printed_name: "_ast.AST"
    fully_qualified_name: "_ast.AST"
  }
  parameters {
    name: "node"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "_ast.AST"
      fully_qualified_name: "_ast.AST"
    }
  }
  parameters {
    name: "n"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    has_default: true
  }
  valid_for: "27"
}
functions {
  name: "increment_lineno"
  fully_qualified_name: "ast.increment_lineno"
  return_annotation {
    pretty_printed_name: "ast._T"
    kind: TYPE_VAR
  }
  parameters {
    name: "node"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "ast._T"
      kind: TYPE_VAR
    }
  }
  parameters {
    name: "n"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "iter_child_nodes"
  fully_qualified_name: "ast.iter_child_nodes"
  return_annotation {
    pretty_printed_name: "typing.Iterator[_ast.AST]"
    args {
      pretty_printed_name: "_ast.AST"
      fully_qualified_name: "_ast.AST"
    }
    fully_qualified_name: "typing.Iterator"
  }
  parameters {
    name: "node"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "_ast.AST"
      fully_qualified_name: "_ast.AST"
    }
  }
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "iter_fields"
  fully_qualified_name: "ast.iter_fields"
  return_annotation {
    pretty_printed_name: "typing.Iterator[Tuple[builtins.str,Any]]"
    args {
      pretty_printed_name: "Tuple[builtins.str,Any]"
      kind: TUPLE
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    fully_qualified_name: "typing.Iterator"
  }
  parameters {
    name: "node"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "_ast.AST"
      fully_qualified_name: "_ast.AST"
    }
  }
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "literal_eval"
  fully_qualified_name: "ast.literal_eval"
  return_annotation {
    pretty_printed_name: "Any"
    kind: ANY
  }
  parameters {
    name: "node_or_string"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,builtins.unicode,_ast.AST]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.unicode"
        fully_qualified_name: "builtins.unicode"
      }
      args {
        pretty_printed_name: "_ast.AST"
        fully_qualified_name: "_ast.AST"
      }
    }
  }
  valid_for: "27"
}
functions {
  name: "literal_eval"
  fully_qualified_name: "ast.literal_eval"
  return_annotation {
    pretty_printed_name: "Any"
    kind: ANY
  }
  parameters {
    name: "node_or_string"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,_ast.AST]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "_ast.AST"
        fully_qualified_name: "_ast.AST"
      }
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "walk"
  fully_qualified_name: "ast.walk"
  return_annotation {
    pretty_printed_name: "typing.Iterator[_ast.AST]"
    args {
      pretty_printed_name: "_ast.AST"
      fully_qualified_name: "_ast.AST"
    }
    fully_qualified_name: "typing.Iterator"
  }
  parameters {
    name: "node"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "_ast.AST"
      fully_qualified_name: "_ast.AST"
    }
  }
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "get_source_segment"
  fully_qualified_name: "ast.get_source_segment"
  return_annotation {
    pretty_printed_name: "Union[builtins.str,None]"
    kind: UNION
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    args {
      pretty_printed_name: "None"
      kind: NONE
    }
  }
  parameters {
    name: "source"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  parameters {
    name: "node"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "_ast.AST"
      fully_qualified_name: "_ast.AST"
    }
  }
  parameters {
    name: "padded"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    has_default: true
  }
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "unparse"
  fully_qualified_name: "ast.unparse"
  return_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
  parameters {
    name: "ast_obj"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "_ast.AST"
      fully_qualified_name: "_ast.AST"
    }
  }
  valid_for: "39"
  valid_for: "310"
}
overloaded_functions {
  name: "parse"
  fullname: "ast.parse"
  definitions {
    name: "parse"
    fully_qualified_name: "ast.parse"
    return_annotation {
      pretty_printed_name: "_ast.Module"
      fully_qualified_name: "_ast.Module"
    }
    parameters {
      name: "source"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,builtins.bytes]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
      }
    }
    parameters {
      name: "filename"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,builtins.bytes]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
      }
      has_default: true
    }
    parameters {
      name: "mode"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Literal[builtins.str]"
        kind: LITERAL
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "parse"
    fully_qualified_name: "ast.parse"
    return_annotation {
      pretty_printed_name: "_ast.AST"
      fully_qualified_name: "_ast.AST"
    }
    parameters {
      name: "source"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,builtins.bytes]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
      }
    }
    parameters {
      name: "filename"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,builtins.bytes]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
      }
      has_default: true
    }
    parameters {
      name: "mode"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
}
overloaded_functions {
  name: "parse"
  fullname: "ast.parse"
  definitions {
    name: "parse"
    fully_qualified_name: "ast.parse"
    return_annotation {
      pretty_printed_name: "_ast.Module"
      fully_qualified_name: "_ast.Module"
    }
    parameters {
      name: "source"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,builtins.bytes]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
      }
    }
    parameters {
      name: "filename"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,builtins.bytes]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
      }
      has_default: true
    }
    parameters {
      name: "mode"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Literal[builtins.str]"
        kind: LITERAL
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      has_default: true
    }
    parameters {
      name: "type_comments"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    parameters {
      name: "feature_version"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[None,builtins.int,Tuple[builtins.int,builtins.int]]"
        kind: UNION
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "Tuple[builtins.int,builtins.int]"
          kind: TUPLE
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
        }
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "parse"
    fully_qualified_name: "ast.parse"
    return_annotation {
      pretty_printed_name: "_ast.AST"
      fully_qualified_name: "_ast.AST"
    }
    parameters {
      name: "source"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,builtins.bytes]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
      }
    }
    parameters {
      name: "filename"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,builtins.bytes]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
      }
      has_default: true
    }
    parameters {
      name: "mode"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      has_default: true
    }
    parameters {
      name: "type_comments"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    parameters {
      name: "feature_version"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[None,builtins.int,Tuple[builtins.int,builtins.int]]"
        kind: UNION
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "Tuple[builtins.int,builtins.int]"
          kind: TUPLE
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
        }
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "_typing"
  fully_qualified_name: "typing"
  is_imported_module: true
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "PyCF_ONLY_AST"
  fully_qualified_name: "_ast.PyCF_ONLY_AST"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "PyCF_TYPE_COMMENTS"
  fully_qualified_name: "_ast.PyCF_TYPE_COMMENTS"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "PyCF_ALLOW_TOP_LEVEL_AWAIT"
  fully_qualified_name: "_ast.PyCF_ALLOW_TOP_LEVEL_AWAIT"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
