fully_qualified_name: "tornado.testing"
classes {
  name: "AsyncTestCase"
  fully_qualified_name: "tornado.testing.AsyncTestCase"
  super_classes: "unittest.TestCase"
  methods {
    name: "__init__"
    fully_qualified_name: "tornado.testing.AsyncTestCase.__init__"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
    }
    parameters {
      name: "kwargs"
      kind: VAR_KEYWORD
    }
    valid_for: "27"
  }
  methods {
    name: "setUp"
    fully_qualified_name: "tornado.testing.AsyncTestCase.setUp"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "27"
  }
  methods {
    name: "tearDown"
    fully_qualified_name: "tornado.testing.AsyncTestCase.tearDown"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "27"
  }
  methods {
    name: "get_new_ioloop"
    fully_qualified_name: "tornado.testing.AsyncTestCase.get_new_ioloop"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "27"
  }
  methods {
    name: "run"
    fully_qualified_name: "tornado.testing.AsyncTestCase.run"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "tornado.testing.AsyncTestCase"
        fully_qualified_name: "tornado.testing.AsyncTestCase"
      }
    }
    parameters {
      name: "result"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "stop"
    fully_qualified_name: "tornado.testing.AsyncTestCase.stop"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "tornado.testing.AsyncTestCase"
        fully_qualified_name: "tornado.testing.AsyncTestCase"
      }
    }
    parameters {
      name: "_arg"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "kwargs"
      kind: VAR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "27"
  }
  methods {
    name: "wait"
    fully_qualified_name: "tornado.testing.AsyncTestCase.wait"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "tornado.testing.AsyncTestCase"
        fully_qualified_name: "tornado.testing.AsyncTestCase"
      }
    }
    parameters {
      name: "condition"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "timeout"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
      has_default: true
    }
    valid_for: "27"
  }
  valid_for: "27"
  attributes {
    name: "io_loop"
    fully_qualified_name: "tornado.testing.AsyncTestCase.io_loop"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "27"
  }
}
classes {
  name: "AsyncHTTPTestCase"
  fully_qualified_name: "tornado.testing.AsyncHTTPTestCase"
  super_classes: "tornado.testing.AsyncTestCase"
  methods {
    name: "setUp"
    fully_qualified_name: "tornado.testing.AsyncHTTPTestCase.setUp"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "27"
  }
  methods {
    name: "get_http_client"
    fully_qualified_name: "tornado.testing.AsyncHTTPTestCase.get_http_client"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "27"
  }
  methods {
    name: "get_http_server"
    fully_qualified_name: "tornado.testing.AsyncHTTPTestCase.get_http_server"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "27"
  }
  methods {
    name: "get_app"
    fully_qualified_name: "tornado.testing.AsyncHTTPTestCase.get_app"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "27"
  }
  methods {
    name: "fetch"
    fully_qualified_name: "tornado.testing.AsyncHTTPTestCase.fetch"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "path"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "kwargs"
      kind: VAR_KEYWORD
    }
    valid_for: "27"
  }
  methods {
    name: "get_httpserver_options"
    fully_qualified_name: "tornado.testing.AsyncHTTPTestCase.get_httpserver_options"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "27"
  }
  methods {
    name: "get_http_port"
    fully_qualified_name: "tornado.testing.AsyncHTTPTestCase.get_http_port"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "27"
  }
  methods {
    name: "get_protocol"
    fully_qualified_name: "tornado.testing.AsyncHTTPTestCase.get_protocol"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "27"
  }
  methods {
    name: "get_url"
    fully_qualified_name: "tornado.testing.AsyncHTTPTestCase.get_url"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "path"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "27"
  }
  methods {
    name: "tearDown"
    fully_qualified_name: "tornado.testing.AsyncHTTPTestCase.tearDown"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "27"
  }
  valid_for: "27"
  attributes {
    name: "http_client"
    fully_qualified_name: "tornado.testing.AsyncHTTPTestCase.http_client"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "27"
  }
  attributes {
    name: "http_server"
    fully_qualified_name: "tornado.testing.AsyncHTTPTestCase.http_server"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "27"
  }
}
classes {
  name: "AsyncHTTPSTestCase"
  fully_qualified_name: "tornado.testing.AsyncHTTPSTestCase"
  super_classes: "tornado.testing.AsyncHTTPTestCase"
  methods {
    name: "get_http_client"
    fully_qualified_name: "tornado.testing.AsyncHTTPSTestCase.get_http_client"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "27"
  }
  methods {
    name: "get_httpserver_options"
    fully_qualified_name: "tornado.testing.AsyncHTTPSTestCase.get_httpserver_options"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "27"
  }
  methods {
    name: "get_ssl_options"
    fully_qualified_name: "tornado.testing.AsyncHTTPSTestCase.get_ssl_options"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "27"
  }
  methods {
    name: "get_protocol"
    fully_qualified_name: "tornado.testing.AsyncHTTPSTestCase.get_protocol"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "27"
  }
  valid_for: "27"
}
classes {
  name: "LogTrapTestCase"
  fully_qualified_name: "tornado.testing.LogTrapTestCase"
  super_classes: "unittest.TestCase"
  methods {
    name: "run"
    fully_qualified_name: "tornado.testing.LogTrapTestCase.run"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "tornado.testing.LogTrapTestCase"
        fully_qualified_name: "tornado.testing.LogTrapTestCase"
      }
    }
    parameters {
      name: "result"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "27"
  }
  valid_for: "27"
}
classes {
  name: "ExpectLog"
  fully_qualified_name: "tornado.testing.ExpectLog"
  super_classes: "logging.Filter"
  methods {
    name: "__init__"
    fully_qualified_name: "tornado.testing.ExpectLog.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "tornado.testing.ExpectLog"
        fully_qualified_name: "tornado.testing.ExpectLog"
      }
    }
    parameters {
      name: "logger"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "regex"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "required"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "filter"
    fully_qualified_name: "tornado.testing.ExpectLog.filter"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "record"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "27"
  }
  methods {
    name: "__enter__"
    fully_qualified_name: "tornado.testing.ExpectLog.__enter__"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "27"
  }
  methods {
    name: "__exit__"
    fully_qualified_name: "tornado.testing.ExpectLog.__exit__"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "typ"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "tb"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "27"
  }
  valid_for: "27"
  attributes {
    name: "logger"
    fully_qualified_name: "tornado.testing.ExpectLog.logger"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "27"
  }
  attributes {
    name: "regex"
    fully_qualified_name: "tornado.testing.ExpectLog.regex"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "27"
  }
  attributes {
    name: "required"
    fully_qualified_name: "tornado.testing.ExpectLog.required"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "27"
  }
  attributes {
    name: "matched"
    fully_qualified_name: "tornado.testing.ExpectLog.matched"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "27"
  }
}
functions {
  name: "get_unused_port"
  fully_qualified_name: "tornado.testing.get_unused_port"
  valid_for: "27"
}
functions {
  name: "bind_unused_port"
  fully_qualified_name: "tornado.testing.bind_unused_port"
  valid_for: "27"
}
functions {
  name: "main"
  fully_qualified_name: "tornado.testing.main"
  parameters {
    name: "kwargs"
    kind: VAR_KEYWORD
  }
  valid_for: "27"
}
overloaded_functions {
  name: "gen_test"
  fullname: "tornado.testing.gen_test"
  definitions {
    name: "gen_test"
    fully_qualified_name: "tornado.testing.gen_test"
    return_annotation {
      pretty_printed_name: "CallableType[builtins.function]"
      kind: CALLABLE
      args {
        pretty_printed_name: "builtins.function"
        fully_qualified_name: "builtins.function"
      }
    }
    parameters {
      name: "timeout"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[builtins.float,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "gen_test"
    fully_qualified_name: "tornado.testing.gen_test"
    return_annotation {
      pretty_printed_name: "CallableType[builtins.function]"
      kind: CALLABLE
      args {
        pretty_printed_name: "builtins.function"
        fully_qualified_name: "builtins.function"
      }
    }
    parameters {
      name: "func"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  valid_for: "27"
}
vars {
  name: "AsyncHTTPClient"
  fully_qualified_name: "tornado.testing.AsyncHTTPClient"
  type_annotation {
    pretty_printed_name: "Any"
    kind: ANY
  }
  valid_for: "27"
}
vars {
  name: "gen"
  fully_qualified_name: "tornado.testing.gen"
  type_annotation {
    pretty_printed_name: "Any"
    kind: ANY
  }
  valid_for: "27"
}
vars {
  name: "HTTPServer"
  fully_qualified_name: "tornado.testing.HTTPServer"
  type_annotation {
    pretty_printed_name: "Any"
    kind: ANY
  }
  valid_for: "27"
}
vars {
  name: "IOLoop"
  fully_qualified_name: "tornado.testing.IOLoop"
  type_annotation {
    pretty_printed_name: "Any"
    kind: ANY
  }
  valid_for: "27"
}
vars {
  name: "netutil"
  fully_qualified_name: "tornado.testing.netutil"
  type_annotation {
    pretty_printed_name: "Any"
    kind: ANY
  }
  valid_for: "27"
}
vars {
  name: "SimpleAsyncHTTPClient"
  fully_qualified_name: "tornado.testing.SimpleAsyncHTTPClient"
  type_annotation {
    pretty_printed_name: "Any"
    kind: ANY
  }
  valid_for: "27"
}
