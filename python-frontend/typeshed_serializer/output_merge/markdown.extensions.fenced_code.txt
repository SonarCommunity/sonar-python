fully_qualified_name: "markdown.extensions.fenced_code"
classes {
  name: "FencedCodeExtension"
  fully_qualified_name: "markdown.extensions.fenced_code.FencedCodeExtension"
  super_classes: "markdown.extensions.Extension"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "FencedBlockPreprocessor"
  fully_qualified_name: "markdown.extensions.fenced_code.FencedBlockPreprocessor"
  super_classes: "markdown.preprocessors.Preprocessor"
  methods {
    name: "__init__"
    fully_qualified_name: "markdown.extensions.fenced_code.FencedBlockPreprocessor.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "markdown.extensions.fenced_code.FencedBlockPreprocessor"
        fully_qualified_name: "markdown.extensions.fenced_code.FencedBlockPreprocessor"
      }
    }
    parameters {
      name: "md"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "FENCED_BLOCK_RE"
    fully_qualified_name: "markdown.extensions.fenced_code.FencedBlockPreprocessor.FENCED_BLOCK_RE"
    type_annotation {
      pretty_printed_name: "typing.Pattern[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "typing.Pattern"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "CODE_WRAP"
    fully_qualified_name: "markdown.extensions.fenced_code.FencedBlockPreprocessor.CODE_WRAP"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "LANG_TAG"
    fully_qualified_name: "markdown.extensions.fenced_code.FencedBlockPreprocessor.LANG_TAG"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "checked_for_codehilite"
    fully_qualified_name: "markdown.extensions.fenced_code.FencedBlockPreprocessor.checked_for_codehilite"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "codehilite_conf"
    fully_qualified_name: "markdown.extensions.fenced_code.FencedBlockPreprocessor.codehilite_conf"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
functions {
  name: "makeExtension"
  fully_qualified_name: "markdown.extensions.fenced_code.makeExtension"
  parameters {
    name: "kwargs"
    kind: VAR_KEYWORD
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
