fully_qualified_name: "PIL.ImageOps"
classes {
  name: "_Deformer"
  fully_qualified_name: "PIL.ImageOps._Deformer"
  super_classes: "builtins.object"
  methods {
    name: "getmesh"
    fully_qualified_name: "PIL.ImageOps._Deformer.getmesh"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "PIL.ImageOps._Deformer"
        fully_qualified_name: "PIL.ImageOps._Deformer"
      }
    }
    parameters {
      name: "image"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "PIL.Image.Image"
        fully_qualified_name: "PIL.Image.Image"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  is_protocol: true
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "autocontrast"
  fully_qualified_name: "PIL.ImageOps.autocontrast"
  return_annotation {
    pretty_printed_name: "PIL.Image.Image"
    fully_qualified_name: "PIL.Image.Image"
  }
  parameters {
    name: "image"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "PIL.Image.Image"
      fully_qualified_name: "PIL.Image.Image"
    }
  }
  parameters {
    name: "cutoff"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    has_default: true
  }
  parameters {
    name: "ignore"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.int,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "mask"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[PIL.Image.Image,None]"
      kind: UNION
      args {
        pretty_printed_name: "PIL.Image.Image"
        fully_qualified_name: "PIL.Image.Image"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "preserve_tone"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "colorize"
  fully_qualified_name: "PIL.ImageOps.colorize"
  return_annotation {
    pretty_printed_name: "PIL.Image.Image"
    fully_qualified_name: "PIL.Image.Image"
  }
  parameters {
    name: "image"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "PIL.Image.Image"
      fully_qualified_name: "PIL.Image.Image"
    }
  }
  parameters {
    name: "black"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.int,builtins.str]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  parameters {
    name: "white"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.int,builtins.str]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  parameters {
    name: "mid"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.int,builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "blackpoint"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    has_default: true
  }
  parameters {
    name: "whitepoint"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    has_default: true
  }
  parameters {
    name: "midpoint"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "pad"
  fully_qualified_name: "PIL.ImageOps.pad"
  return_annotation {
    pretty_printed_name: "PIL.Image.Image"
    fully_qualified_name: "PIL.Image.Image"
  }
  parameters {
    name: "image"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "PIL.Image.Image"
      fully_qualified_name: "PIL.Image.Image"
    }
  }
  parameters {
    name: "size"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Tuple[builtins.int,builtins.int]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Tuple[builtins.int,builtins.int]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
      fully_qualified_name: "PIL.Image._Size"
    }
  }
  parameters {
    name: "method"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[Literal[builtins.int],Literal[builtins.int],Literal[builtins.int],Literal[builtins.int],Literal[builtins.int],Literal[builtins.int]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[Literal[builtins.int],Literal[builtins.int],Literal[builtins.int],Literal[builtins.int],Literal[builtins.int],Literal[builtins.int]]"
        kind: UNION
        args {
          pretty_printed_name: "Literal[builtins.int]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
        }
        args {
          pretty_printed_name: "Literal[builtins.int]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
        }
        args {
          pretty_printed_name: "Literal[builtins.int]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
        }
        args {
          pretty_printed_name: "Literal[builtins.int]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
        }
        args {
          pretty_printed_name: "Literal[builtins.int]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
        }
        args {
          pretty_printed_name: "Literal[builtins.int]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
        }
      }
      fully_qualified_name: "PIL.Image._Resample"
    }
    has_default: true
  }
  parameters {
    name: "color"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "centering"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "typing.Iterable[builtins.float]"
      args {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
      fully_qualified_name: "typing.Iterable"
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "crop"
  fully_qualified_name: "PIL.ImageOps.crop"
  return_annotation {
    pretty_printed_name: "PIL.Image.Image"
    fully_qualified_name: "PIL.Image.Image"
  }
  parameters {
    name: "image"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "PIL.Image.Image"
      fully_qualified_name: "PIL.Image.Image"
    }
  }
  parameters {
    name: "border"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "scale"
  fully_qualified_name: "PIL.ImageOps.scale"
  return_annotation {
    pretty_printed_name: "PIL.Image.Image"
    fully_qualified_name: "PIL.Image.Image"
  }
  parameters {
    name: "image"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "PIL.Image.Image"
      fully_qualified_name: "PIL.Image.Image"
    }
  }
  parameters {
    name: "factor"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.float"
      fully_qualified_name: "builtins.float"
    }
  }
  parameters {
    name: "resample"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[Literal[builtins.int],Literal[builtins.int],Literal[builtins.int],Literal[builtins.int],Literal[builtins.int],Literal[builtins.int]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[Literal[builtins.int],Literal[builtins.int],Literal[builtins.int],Literal[builtins.int],Literal[builtins.int],Literal[builtins.int]]"
        kind: UNION
        args {
          pretty_printed_name: "Literal[builtins.int]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
        }
        args {
          pretty_printed_name: "Literal[builtins.int]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
        }
        args {
          pretty_printed_name: "Literal[builtins.int]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
        }
        args {
          pretty_printed_name: "Literal[builtins.int]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
        }
        args {
          pretty_printed_name: "Literal[builtins.int]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
        }
        args {
          pretty_printed_name: "Literal[builtins.int]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
        }
      }
      fully_qualified_name: "PIL.Image._Resample"
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "deform"
  fully_qualified_name: "PIL.ImageOps.deform"
  return_annotation {
    pretty_printed_name: "PIL.Image.Image"
    fully_qualified_name: "PIL.Image.Image"
  }
  parameters {
    name: "image"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "PIL.Image.Image"
      fully_qualified_name: "PIL.Image.Image"
    }
  }
  parameters {
    name: "deformer"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "PIL.ImageOps._Deformer"
      fully_qualified_name: "PIL.ImageOps._Deformer"
    }
  }
  parameters {
    name: "resample"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[Literal[builtins.int],Literal[builtins.int],Literal[builtins.int],Literal[builtins.int],Literal[builtins.int],Literal[builtins.int]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[Literal[builtins.int],Literal[builtins.int],Literal[builtins.int],Literal[builtins.int],Literal[builtins.int],Literal[builtins.int]]"
        kind: UNION
        args {
          pretty_printed_name: "Literal[builtins.int]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
        }
        args {
          pretty_printed_name: "Literal[builtins.int]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
        }
        args {
          pretty_printed_name: "Literal[builtins.int]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
        }
        args {
          pretty_printed_name: "Literal[builtins.int]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
        }
        args {
          pretty_printed_name: "Literal[builtins.int]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
        }
        args {
          pretty_printed_name: "Literal[builtins.int]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
        }
      }
      fully_qualified_name: "PIL.Image._Resample"
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "equalize"
  fully_qualified_name: "PIL.ImageOps.equalize"
  return_annotation {
    pretty_printed_name: "PIL.Image.Image"
    fully_qualified_name: "PIL.Image.Image"
  }
  parameters {
    name: "image"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "PIL.Image.Image"
      fully_qualified_name: "PIL.Image.Image"
    }
  }
  parameters {
    name: "mask"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "expand"
  fully_qualified_name: "PIL.ImageOps.expand"
  return_annotation {
    pretty_printed_name: "PIL.Image.Image"
    fully_qualified_name: "PIL.Image.Image"
  }
  parameters {
    name: "image"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "PIL.Image.Image"
      fully_qualified_name: "PIL.Image.Image"
    }
  }
  parameters {
    name: "border"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    has_default: true
  }
  parameters {
    name: "fill"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "fit"
  fully_qualified_name: "PIL.ImageOps.fit"
  return_annotation {
    pretty_printed_name: "PIL.Image.Image"
    fully_qualified_name: "PIL.Image.Image"
  }
  parameters {
    name: "image"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "PIL.Image.Image"
      fully_qualified_name: "PIL.Image.Image"
    }
  }
  parameters {
    name: "size"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Tuple[builtins.int,builtins.int]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Tuple[builtins.int,builtins.int]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
      fully_qualified_name: "PIL.Image._Size"
    }
  }
  parameters {
    name: "method"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[Literal[builtins.int],Literal[builtins.int],Literal[builtins.int],Literal[builtins.int],Literal[builtins.int],Literal[builtins.int]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[Literal[builtins.int],Literal[builtins.int],Literal[builtins.int],Literal[builtins.int],Literal[builtins.int],Literal[builtins.int]]"
        kind: UNION
        args {
          pretty_printed_name: "Literal[builtins.int]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
        }
        args {
          pretty_printed_name: "Literal[builtins.int]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
        }
        args {
          pretty_printed_name: "Literal[builtins.int]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
        }
        args {
          pretty_printed_name: "Literal[builtins.int]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
        }
        args {
          pretty_printed_name: "Literal[builtins.int]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
        }
        args {
          pretty_printed_name: "Literal[builtins.int]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
        }
      }
      fully_qualified_name: "PIL.Image._Resample"
    }
    has_default: true
  }
  parameters {
    name: "bleed"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.float"
      fully_qualified_name: "builtins.float"
    }
    has_default: true
  }
  parameters {
    name: "centering"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "typing.Iterable[builtins.float]"
      args {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
      fully_qualified_name: "typing.Iterable"
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "flip"
  fully_qualified_name: "PIL.ImageOps.flip"
  return_annotation {
    pretty_printed_name: "PIL.Image.Image"
    fully_qualified_name: "PIL.Image.Image"
  }
  parameters {
    name: "image"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "PIL.Image.Image"
      fully_qualified_name: "PIL.Image.Image"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "grayscale"
  fully_qualified_name: "PIL.ImageOps.grayscale"
  return_annotation {
    pretty_printed_name: "PIL.Image.Image"
    fully_qualified_name: "PIL.Image.Image"
  }
  parameters {
    name: "image"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "PIL.Image.Image"
      fully_qualified_name: "PIL.Image.Image"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "invert"
  fully_qualified_name: "PIL.ImageOps.invert"
  return_annotation {
    pretty_printed_name: "PIL.Image.Image"
    fully_qualified_name: "PIL.Image.Image"
  }
  parameters {
    name: "image"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "PIL.Image.Image"
      fully_qualified_name: "PIL.Image.Image"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "mirror"
  fully_qualified_name: "PIL.ImageOps.mirror"
  return_annotation {
    pretty_printed_name: "PIL.Image.Image"
    fully_qualified_name: "PIL.Image.Image"
  }
  parameters {
    name: "image"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "PIL.Image.Image"
      fully_qualified_name: "PIL.Image.Image"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "posterize"
  fully_qualified_name: "PIL.ImageOps.posterize"
  return_annotation {
    pretty_printed_name: "PIL.Image.Image"
    fully_qualified_name: "PIL.Image.Image"
  }
  parameters {
    name: "image"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "PIL.Image.Image"
      fully_qualified_name: "PIL.Image.Image"
    }
  }
  parameters {
    name: "bits"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "solarize"
  fully_qualified_name: "PIL.ImageOps.solarize"
  return_annotation {
    pretty_printed_name: "PIL.Image.Image"
    fully_qualified_name: "PIL.Image.Image"
  }
  parameters {
    name: "image"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "PIL.Image.Image"
      fully_qualified_name: "PIL.Image.Image"
    }
  }
  parameters {
    name: "threshold"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "exif_transpose"
  fully_qualified_name: "PIL.ImageOps.exif_transpose"
  return_annotation {
    pretty_printed_name: "PIL.Image.Image"
    fully_qualified_name: "PIL.Image.Image"
  }
  parameters {
    name: "image"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "PIL.Image.Image"
      fully_qualified_name: "PIL.Image.Image"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
