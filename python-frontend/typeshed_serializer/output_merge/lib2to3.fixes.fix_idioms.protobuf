fully_qualified_name: "lib2to3.fixes.fix_idioms"
classes {
  name: "FixIdioms"
  fully_qualified_name: "lib2to3.fixes.fix_idioms.FixIdioms"
  super_classes: "builtins.object"
  methods {
    name: "match"
    fully_qualified_name: "lib2to3.fixes.fix_idioms.FixIdioms.match"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "transform"
    fully_qualified_name: "lib2to3.fixes.fix_idioms.FixIdioms.transform"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "results"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "transform_isinstance"
    fully_qualified_name: "lib2to3.fixes.fix_idioms.FixIdioms.transform_isinstance"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "results"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "transform_while"
    fully_qualified_name: "lib2to3.fixes.fix_idioms.FixIdioms.transform_while"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "lib2to3.fixes.fix_idioms.FixIdioms"
        fully_qualified_name: "lib2to3.fixes.fix_idioms.FixIdioms"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "results"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "transform_sort"
    fully_qualified_name: "lib2to3.fixes.fix_idioms.FixIdioms.transform_sort"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "lib2to3.fixes.fix_idioms.FixIdioms"
        fully_qualified_name: "lib2to3.fixes.fix_idioms.FixIdioms"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "results"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "BM_compatible"
    fully_qualified_name: "lib2to3.fixes.fix_idioms.FixIdioms.BM_compatible"
    type_annotation {
      pretty_printed_name: "Literal[builtins.bool]"
      kind: LITERAL
      args {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "PATTERN"
    fully_qualified_name: "lib2to3.fixes.fix_idioms.FixIdioms.PATTERN"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
vars {
  name: "CMP"
  fully_qualified_name: "lib2to3.fixes.fix_idioms.CMP"
  type_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "TYPE"
  fully_qualified_name: "lib2to3.fixes.fix_idioms.TYPE"
  type_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
