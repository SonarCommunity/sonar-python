fully_qualified_name: "tracemalloc"
classes {
  name: "BaseFilter"
  fully_qualified_name: "tracemalloc.BaseFilter"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "tracemalloc.BaseFilter.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "tracemalloc.BaseFilter"
        fully_qualified_name: "tracemalloc.BaseFilter"
      }
    }
    parameters {
      name: "inclusive"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "inclusive"
    fully_qualified_name: "tracemalloc.BaseFilter.inclusive"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "DomainFilter"
  fully_qualified_name: "tracemalloc.DomainFilter"
  super_classes: "tracemalloc.BaseFilter"
  methods {
    name: "domain"
    fully_qualified_name: "tracemalloc.DomainFilter.domain"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "tracemalloc.DomainFilter"
        fully_qualified_name: "tracemalloc.DomainFilter"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__init__"
    fully_qualified_name: "tracemalloc.DomainFilter.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "tracemalloc.DomainFilter"
        fully_qualified_name: "tracemalloc.DomainFilter"
      }
    }
    parameters {
      name: "inclusive"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    parameters {
      name: "domain"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "Filter"
  fully_qualified_name: "tracemalloc.Filter"
  super_classes: "tracemalloc.BaseFilter"
  methods {
    name: "filename_pattern"
    fully_qualified_name: "tracemalloc.Filter.filename_pattern"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "tracemalloc.Filter"
        fully_qualified_name: "tracemalloc.Filter"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__init__"
    fully_qualified_name: "tracemalloc.Filter.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "tracemalloc.Filter"
        fully_qualified_name: "tracemalloc.Filter"
      }
    }
    parameters {
      name: "inclusive"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    parameters {
      name: "filename_pattern"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "lineno"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "all_frames"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    parameters {
      name: "domain"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "domain"
    fully_qualified_name: "tracemalloc.Filter.domain"
    type_annotation {
      pretty_printed_name: "Union[builtins.int,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "lineno"
    fully_qualified_name: "tracemalloc.Filter.lineno"
    type_annotation {
      pretty_printed_name: "Union[builtins.int,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "all_frames"
    fully_qualified_name: "tracemalloc.Filter.all_frames"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "Statistic"
  fully_qualified_name: "tracemalloc.Statistic"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "tracemalloc.Statistic.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "tracemalloc.Statistic"
        fully_qualified_name: "tracemalloc.Statistic"
      }
    }
    parameters {
      name: "traceback"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "tracemalloc.Traceback"
        fully_qualified_name: "tracemalloc.Traceback"
      }
    }
    parameters {
      name: "size"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "count"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__eq__"
    fully_qualified_name: "tracemalloc.Statistic.__eq__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "tracemalloc.Statistic"
        fully_qualified_name: "tracemalloc.Statistic"
      }
    }
    parameters {
      name: "other"
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "count"
    fully_qualified_name: "tracemalloc.Statistic.count"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "size"
    fully_qualified_name: "tracemalloc.Statistic.size"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "traceback"
    fully_qualified_name: "tracemalloc.Statistic.traceback"
    type_annotation {
      pretty_printed_name: "tracemalloc.Traceback"
      fully_qualified_name: "tracemalloc.Traceback"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "StatisticDiff"
  fully_qualified_name: "tracemalloc.StatisticDiff"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "tracemalloc.StatisticDiff.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "tracemalloc.StatisticDiff"
        fully_qualified_name: "tracemalloc.StatisticDiff"
      }
    }
    parameters {
      name: "traceback"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "tracemalloc.Traceback"
        fully_qualified_name: "tracemalloc.Traceback"
      }
    }
    parameters {
      name: "size"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "size_diff"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "count"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "count_diff"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__eq__"
    fully_qualified_name: "tracemalloc.StatisticDiff.__eq__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "tracemalloc.StatisticDiff"
        fully_qualified_name: "tracemalloc.StatisticDiff"
      }
    }
    parameters {
      name: "other"
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "count"
    fully_qualified_name: "tracemalloc.StatisticDiff.count"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "count_diff"
    fully_qualified_name: "tracemalloc.StatisticDiff.count_diff"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "size"
    fully_qualified_name: "tracemalloc.StatisticDiff.size"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "size_diff"
    fully_qualified_name: "tracemalloc.StatisticDiff.size_diff"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "traceback"
    fully_qualified_name: "tracemalloc.StatisticDiff.traceback"
    type_annotation {
      pretty_printed_name: "tracemalloc.Traceback"
      fully_qualified_name: "tracemalloc.Traceback"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "Frame"
  fully_qualified_name: "tracemalloc.Frame"
  super_classes: "builtins.object"
  methods {
    name: "filename"
    fully_qualified_name: "tracemalloc.Frame.filename"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "tracemalloc.Frame"
        fully_qualified_name: "tracemalloc.Frame"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "lineno"
    fully_qualified_name: "tracemalloc.Frame.lineno"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "tracemalloc.Frame"
        fully_qualified_name: "tracemalloc.Frame"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__init__"
    fully_qualified_name: "tracemalloc.Frame.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "tracemalloc.Frame"
        fully_qualified_name: "tracemalloc.Frame"
      }
    }
    parameters {
      name: "frame"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UnboundType[_FrameTuple]"
        kind: UNBOUND
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__eq__"
    fully_qualified_name: "tracemalloc.Frame.__eq__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "tracemalloc.Frame"
        fully_qualified_name: "tracemalloc.Frame"
      }
    }
    parameters {
      name: "other"
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__lt__"
    fully_qualified_name: "tracemalloc.Frame.__lt__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "tracemalloc.Frame"
        fully_qualified_name: "tracemalloc.Frame"
      }
    }
    parameters {
      name: "other"
      type_annotation {
        pretty_printed_name: "tracemalloc.Frame"
        fully_qualified_name: "tracemalloc.Frame"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__gt__"
    fully_qualified_name: "tracemalloc.Frame.__gt__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "tracemalloc.Frame"
        fully_qualified_name: "tracemalloc.Frame"
      }
    }
    parameters {
      name: "other"
      type_annotation {
        pretty_printed_name: "tracemalloc.Frame"
        fully_qualified_name: "tracemalloc.Frame"
      }
    }
    parameters {
      name: "NotImplemented"
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__ge__"
    fully_qualified_name: "tracemalloc.Frame.__ge__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "tracemalloc.Frame"
        fully_qualified_name: "tracemalloc.Frame"
      }
    }
    parameters {
      name: "other"
      type_annotation {
        pretty_printed_name: "tracemalloc.Frame"
        fully_qualified_name: "tracemalloc.Frame"
      }
    }
    parameters {
      name: "NotImplemented"
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__le__"
    fully_qualified_name: "tracemalloc.Frame.__le__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "tracemalloc.Frame"
        fully_qualified_name: "tracemalloc.Frame"
      }
    }
    parameters {
      name: "other"
      type_annotation {
        pretty_printed_name: "tracemalloc.Frame"
        fully_qualified_name: "tracemalloc.Frame"
      }
    }
    parameters {
      name: "NotImplemented"
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "Trace"
  fully_qualified_name: "tracemalloc.Trace"
  super_classes: "builtins.object"
  methods {
    name: "domain"
    fully_qualified_name: "tracemalloc.Trace.domain"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "tracemalloc.Trace"
        fully_qualified_name: "tracemalloc.Trace"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "size"
    fully_qualified_name: "tracemalloc.Trace.size"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "tracemalloc.Trace"
        fully_qualified_name: "tracemalloc.Trace"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "traceback"
    fully_qualified_name: "tracemalloc.Trace.traceback"
    return_annotation {
      pretty_printed_name: "tracemalloc.Traceback"
      fully_qualified_name: "tracemalloc.Traceback"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "tracemalloc.Trace"
        fully_qualified_name: "tracemalloc.Trace"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__init__"
    fully_qualified_name: "tracemalloc.Trace.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "tracemalloc.Trace"
        fully_qualified_name: "tracemalloc.Trace"
      }
    }
    parameters {
      name: "trace"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UnboundType[_TraceTuple]"
        kind: UNBOUND
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__eq__"
    fully_qualified_name: "tracemalloc.Trace.__eq__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "tracemalloc.Trace"
        fully_qualified_name: "tracemalloc.Trace"
      }
    }
    parameters {
      name: "other"
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "Traceback"
  fully_qualified_name: "tracemalloc.Traceback"
  super_classes: "typing.Sequence"
  methods {
    name: "__init__"
    fully_qualified_name: "tracemalloc.Traceback.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "tracemalloc.Traceback"
        fully_qualified_name: "tracemalloc.Traceback"
      }
    }
    parameters {
      name: "frames"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Sequence[UnboundType[_FrameTuple]]"
        args {
          pretty_printed_name: "UnboundType[_FrameTuple]"
          kind: UNBOUND
        }
        fully_qualified_name: "typing.Sequence"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
  }
  methods {
    name: "__init__"
    fully_qualified_name: "tracemalloc.Traceback.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "tracemalloc.Traceback"
        fully_qualified_name: "tracemalloc.Traceback"
      }
    }
    parameters {
      name: "frames"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Sequence[UnboundType[_FrameTuple]]"
        args {
          pretty_printed_name: "UnboundType[_FrameTuple]"
          kind: UNBOUND
        }
        fully_qualified_name: "typing.Sequence"
      }
    }
    parameters {
      name: "total_nframe"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "format"
    fully_qualified_name: "tracemalloc.Traceback.format"
    return_annotation {
      pretty_printed_name: "builtins.list[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "tracemalloc.Traceback"
        fully_qualified_name: "tracemalloc.Traceback"
      }
    }
    parameters {
      name: "limit"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "most_recent_first"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__contains__"
    fully_qualified_name: "tracemalloc.Traceback.__contains__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "tracemalloc.Traceback"
        fully_qualified_name: "tracemalloc.Traceback"
      }
    }
    parameters {
      name: "frame"
      type_annotation {
        pretty_printed_name: "tracemalloc.Frame"
        fully_qualified_name: "tracemalloc.Frame"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__len__"
    fully_qualified_name: "tracemalloc.Traceback.__len__"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "tracemalloc.Traceback"
        fully_qualified_name: "tracemalloc.Traceback"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__eq__"
    fully_qualified_name: "tracemalloc.Traceback.__eq__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "tracemalloc.Traceback"
        fully_qualified_name: "tracemalloc.Traceback"
      }
    }
    parameters {
      name: "other"
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__lt__"
    fully_qualified_name: "tracemalloc.Traceback.__lt__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "tracemalloc.Traceback"
        fully_qualified_name: "tracemalloc.Traceback"
      }
    }
    parameters {
      name: "other"
      type_annotation {
        pretty_printed_name: "tracemalloc.Traceback"
        fully_qualified_name: "tracemalloc.Traceback"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__gt__"
    fully_qualified_name: "tracemalloc.Traceback.__gt__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "tracemalloc.Traceback"
        fully_qualified_name: "tracemalloc.Traceback"
      }
    }
    parameters {
      name: "other"
      type_annotation {
        pretty_printed_name: "tracemalloc.Traceback"
        fully_qualified_name: "tracemalloc.Traceback"
      }
    }
    parameters {
      name: "NotImplemented"
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__ge__"
    fully_qualified_name: "tracemalloc.Traceback.__ge__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "tracemalloc.Traceback"
        fully_qualified_name: "tracemalloc.Traceback"
      }
    }
    parameters {
      name: "other"
      type_annotation {
        pretty_printed_name: "tracemalloc.Traceback"
        fully_qualified_name: "tracemalloc.Traceback"
      }
    }
    parameters {
      name: "NotImplemented"
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__le__"
    fully_qualified_name: "tracemalloc.Traceback.__le__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "tracemalloc.Traceback"
        fully_qualified_name: "tracemalloc.Traceback"
      }
    }
    parameters {
      name: "other"
      type_annotation {
        pretty_printed_name: "tracemalloc.Traceback"
        fully_qualified_name: "tracemalloc.Traceback"
      }
    }
    parameters {
      name: "NotImplemented"
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "total_nframe"
    fully_qualified_name: "tracemalloc.Traceback.total_nframe"
    return_annotation {
      pretty_printed_name: "Union[builtins.int,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "tracemalloc.Traceback"
        fully_qualified_name: "tracemalloc.Traceback"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "__getitem__"
    fullname: "tracemalloc.Traceback.__getitem__"
    definitions {
      name: "__getitem__"
      fully_qualified_name: "tracemalloc.Traceback.__getitem__"
      return_annotation {
        pretty_printed_name: "tracemalloc.Frame"
        fully_qualified_name: "tracemalloc.Frame"
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "tracemalloc.Traceback"
          fully_qualified_name: "tracemalloc.Traceback"
        }
      }
      parameters {
        name: "index"
        type_annotation {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__getitem__"
      fully_qualified_name: "tracemalloc.Traceback.__getitem__"
      return_annotation {
        pretty_printed_name: "typing.Sequence[tracemalloc.Frame]"
        args {
          pretty_printed_name: "tracemalloc.Frame"
          fully_qualified_name: "tracemalloc.Frame"
        }
        fully_qualified_name: "typing.Sequence"
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "tracemalloc.Traceback"
          fully_qualified_name: "tracemalloc.Traceback"
        }
      }
      parameters {
        name: "index"
        type_annotation {
          pretty_printed_name: "builtins.slice"
          fully_qualified_name: "builtins.slice"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "Snapshot"
  fully_qualified_name: "tracemalloc.Snapshot"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "tracemalloc.Snapshot.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "tracemalloc.Snapshot"
        fully_qualified_name: "tracemalloc.Snapshot"
      }
    }
    parameters {
      name: "traces"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Sequence[UnboundType[_TraceTuple]]"
        args {
          pretty_printed_name: "UnboundType[_TraceTuple]"
          kind: UNBOUND
        }
        fully_qualified_name: "typing.Sequence"
      }
    }
    parameters {
      name: "traceback_limit"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "compare_to"
    fully_qualified_name: "tracemalloc.Snapshot.compare_to"
    return_annotation {
      pretty_printed_name: "builtins.list[tracemalloc.StatisticDiff]"
      args {
        pretty_printed_name: "tracemalloc.StatisticDiff"
        fully_qualified_name: "tracemalloc.StatisticDiff"
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "tracemalloc.Snapshot"
        fully_qualified_name: "tracemalloc.Snapshot"
      }
    }
    parameters {
      name: "old_snapshot"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "tracemalloc.Snapshot"
        fully_qualified_name: "tracemalloc.Snapshot"
      }
    }
    parameters {
      name: "key_type"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "cumulative"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "dump"
    fully_qualified_name: "tracemalloc.Snapshot.dump"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "tracemalloc.Snapshot"
        fully_qualified_name: "tracemalloc.Snapshot"
      }
    }
    parameters {
      name: "filename"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "filter_traces"
    fully_qualified_name: "tracemalloc.Snapshot.filter_traces"
    return_annotation {
      pretty_printed_name: "tracemalloc.Snapshot"
      fully_qualified_name: "tracemalloc.Snapshot"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "tracemalloc.Snapshot"
        fully_qualified_name: "tracemalloc.Snapshot"
      }
    }
    parameters {
      name: "filters"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Sequence[Union[tracemalloc.DomainFilter,tracemalloc.Filter]]"
        args {
          pretty_printed_name: "Union[tracemalloc.DomainFilter,tracemalloc.Filter]"
          kind: UNION
          args {
            pretty_printed_name: "tracemalloc.DomainFilter"
            fully_qualified_name: "tracemalloc.DomainFilter"
          }
          args {
            pretty_printed_name: "tracemalloc.Filter"
            fully_qualified_name: "tracemalloc.Filter"
          }
        }
        fully_qualified_name: "typing.Sequence"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "load"
    fully_qualified_name: "tracemalloc.Snapshot.load"
    return_annotation {
      pretty_printed_name: "tracemalloc.Snapshot"
      fully_qualified_name: "tracemalloc.Snapshot"
    }
    parameters {
      name: "filename"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    has_decorators: true
    resolved_decorator_names: "staticmethod"
    is_static: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "statistics"
    fully_qualified_name: "tracemalloc.Snapshot.statistics"
    return_annotation {
      pretty_printed_name: "builtins.list[tracemalloc.Statistic]"
      args {
        pretty_printed_name: "tracemalloc.Statistic"
        fully_qualified_name: "tracemalloc.Statistic"
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "tracemalloc.Snapshot"
        fully_qualified_name: "tracemalloc.Snapshot"
      }
    }
    parameters {
      name: "key_type"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "cumulative"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "traceback_limit"
    fully_qualified_name: "tracemalloc.Snapshot.traceback_limit"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "traces"
    fully_qualified_name: "tracemalloc.Snapshot.traces"
    type_annotation {
      pretty_printed_name: "typing.Sequence[tracemalloc.Trace]"
      args {
        pretty_printed_name: "tracemalloc.Trace"
        fully_qualified_name: "tracemalloc.Trace"
      }
      fully_qualified_name: "typing.Sequence"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
functions {
  name: "clear_traces"
  fully_qualified_name: "_tracemalloc.clear_traces"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "get_traceback_limit"
  fully_qualified_name: "_tracemalloc.get_traceback_limit"
  return_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "get_traced_memory"
  fully_qualified_name: "_tracemalloc.get_traced_memory"
  return_annotation {
    pretty_printed_name: "Tuple[builtins.int,builtins.int]"
    kind: TUPLE
    args {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    args {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "get_tracemalloc_memory"
  fully_qualified_name: "_tracemalloc.get_tracemalloc_memory"
  return_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "is_tracing"
  fully_qualified_name: "_tracemalloc.is_tracing"
  return_annotation {
    pretty_printed_name: "builtins.bool"
    fully_qualified_name: "builtins.bool"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "start"
  fully_qualified_name: "_tracemalloc.start"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "__nframe"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "stop"
  fully_qualified_name: "_tracemalloc.stop"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "get_object_traceback"
  fully_qualified_name: "tracemalloc.get_object_traceback"
  return_annotation {
    pretty_printed_name: "Union[tracemalloc.Traceback,None]"
    kind: UNION
    args {
      pretty_printed_name: "tracemalloc.Traceback"
      fully_qualified_name: "tracemalloc.Traceback"
    }
    args {
      pretty_printed_name: "None"
      kind: NONE
    }
  }
  parameters {
    name: "obj"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.object"
      fully_qualified_name: "builtins.object"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "take_snapshot"
  fully_qualified_name: "tracemalloc.take_snapshot"
  return_annotation {
    pretty_printed_name: "tracemalloc.Snapshot"
    fully_qualified_name: "tracemalloc.Snapshot"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "reset_peak"
  fully_qualified_name: "_tracemalloc.reset_peak"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "_FrameTuple"
  fully_qualified_name: "tracemalloc._FrameTuple"
  type_annotation {
    pretty_printed_name: "UnboundType[TypeAlias]"
    kind: UNBOUND
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "_TraceTuple"
  fully_qualified_name: "tracemalloc._TraceTuple"
  type_annotation {
    pretty_printed_name: "UnboundType[TypeAlias]"
    kind: UNBOUND
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
