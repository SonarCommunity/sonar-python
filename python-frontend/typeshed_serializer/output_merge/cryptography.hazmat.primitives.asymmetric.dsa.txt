fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dsa"
classes {
  name: "DSAParameters"
  fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAParameters"
  super_classes: "builtins.object"
  methods {
    name: "generate_private_key"
    fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAParameters.generate_private_key"
    return_annotation {
      pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPrivateKey"
      fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPrivateKey"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAParameters"
        fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAParameters"
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  has_metaclass: true
  metaclass_name: "abc.ABCMeta"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "DSAParametersWithNumbers"
  fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAParametersWithNumbers"
  super_classes: "cryptography.hazmat.primitives.asymmetric.dsa.DSAParameters"
  methods {
    name: "parameter_numbers"
    fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAParametersWithNumbers.parameter_numbers"
    return_annotation {
      pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAParameterNumbers"
      fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAParameterNumbers"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAParametersWithNumbers"
        fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAParametersWithNumbers"
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "DSAParameterNumbers"
  fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAParameterNumbers"
  super_classes: "builtins.object"
  methods {
    name: "p"
    fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAParameterNumbers.p"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAParameterNumbers"
        fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAParameterNumbers"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "q"
    fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAParameterNumbers.q"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAParameterNumbers"
        fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAParameterNumbers"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "g"
    fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAParameterNumbers.g"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAParameterNumbers"
        fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAParameterNumbers"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__init__"
    fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAParameterNumbers.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAParameterNumbers"
        fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAParameterNumbers"
      }
    }
    parameters {
      name: "p"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "q"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "g"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "parameters"
    fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAParameterNumbers.parameters"
    return_annotation {
      pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAParameters"
      fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAParameters"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAParameterNumbers"
        fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAParameterNumbers"
      }
    }
    parameters {
      name: "backend"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[cryptography.hazmat.backends.interfaces.DSABackend,None]"
        kind: UNION
        args {
          pretty_printed_name: "cryptography.hazmat.backends.interfaces.DSABackend"
          fully_qualified_name: "cryptography.hazmat.backends.interfaces.DSABackend"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "DSAPrivateKey"
  fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPrivateKey"
  super_classes: "builtins.object"
  methods {
    name: "key_size"
    fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPrivateKey.key_size"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPrivateKey"
        fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPrivateKey"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "parameters"
    fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPrivateKey.parameters"
    return_annotation {
      pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAParameters"
      fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAParameters"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPrivateKey"
        fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPrivateKey"
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "public_key"
    fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPrivateKey.public_key"
    return_annotation {
      pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPublicKey"
      fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPublicKey"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPrivateKey"
        fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPrivateKey"
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "sign"
    fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPrivateKey.sign"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPrivateKey"
        fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPrivateKey"
      }
    }
    parameters {
      name: "data"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    parameters {
      name: "algorithm"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[cryptography.hazmat.primitives.hashes.HashAlgorithm,cryptography.hazmat.primitives.asymmetric.utils.Prehashed]"
        kind: UNION
        args {
          pretty_printed_name: "cryptography.hazmat.primitives.hashes.HashAlgorithm"
          fully_qualified_name: "cryptography.hazmat.primitives.hashes.HashAlgorithm"
        }
        args {
          pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.utils.Prehashed"
          fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.utils.Prehashed"
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  has_metaclass: true
  metaclass_name: "abc.ABCMeta"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "DSAPrivateKeyWithSerialization"
  fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPrivateKeyWithSerialization"
  super_classes: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPrivateKey"
  methods {
    name: "private_bytes"
    fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPrivateKeyWithSerialization.private_bytes"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPrivateKeyWithSerialization"
        fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPrivateKeyWithSerialization"
      }
    }
    parameters {
      name: "encoding"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives.serialization.Encoding"
        fully_qualified_name: "cryptography.hazmat.primitives.serialization.Encoding"
      }
    }
    parameters {
      name: "format"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives.serialization.PrivateFormat"
        fully_qualified_name: "cryptography.hazmat.primitives.serialization.PrivateFormat"
      }
    }
    parameters {
      name: "encryption_algorithm"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives.serialization.KeySerializationEncryption"
        fully_qualified_name: "cryptography.hazmat.primitives.serialization.KeySerializationEncryption"
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "private_numbers"
    fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPrivateKeyWithSerialization.private_numbers"
    return_annotation {
      pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPrivateNumbers"
      fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPrivateNumbers"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPrivateKeyWithSerialization"
        fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPrivateKeyWithSerialization"
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "DSAPrivateNumbers"
  fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPrivateNumbers"
  super_classes: "builtins.object"
  methods {
    name: "x"
    fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPrivateNumbers.x"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPrivateNumbers"
        fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPrivateNumbers"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "public_numbers"
    fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPrivateNumbers.public_numbers"
    return_annotation {
      pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPublicNumbers"
      fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPublicNumbers"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPrivateNumbers"
        fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPrivateNumbers"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__init__"
    fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPrivateNumbers.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPrivateNumbers"
        fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPrivateNumbers"
      }
    }
    parameters {
      name: "x"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "public_numbers"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPublicNumbers"
        fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPublicNumbers"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "DSAPublicKey"
  fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPublicKey"
  super_classes: "builtins.object"
  methods {
    name: "key_size"
    fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPublicKey.key_size"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPublicKey"
        fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPublicKey"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "public_bytes"
    fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPublicKey.public_bytes"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPublicKey"
        fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPublicKey"
      }
    }
    parameters {
      name: "encoding"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives.serialization.Encoding"
        fully_qualified_name: "cryptography.hazmat.primitives.serialization.Encoding"
      }
    }
    parameters {
      name: "format"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives.serialization.PublicFormat"
        fully_qualified_name: "cryptography.hazmat.primitives.serialization.PublicFormat"
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "public_numbers"
    fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPublicKey.public_numbers"
    return_annotation {
      pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPublicNumbers"
      fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPublicNumbers"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPublicKey"
        fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPublicKey"
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "verifier"
    fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPublicKey.verifier"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPublicKey"
        fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPublicKey"
      }
    }
    parameters {
      name: "signature"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    parameters {
      name: "signature_algorithm"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[cryptography.hazmat.primitives.hashes.HashAlgorithm,cryptography.hazmat.primitives.asymmetric.utils.Prehashed]"
        kind: UNION
        args {
          pretty_printed_name: "cryptography.hazmat.primitives.hashes.HashAlgorithm"
          fully_qualified_name: "cryptography.hazmat.primitives.hashes.HashAlgorithm"
        }
        args {
          pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.utils.Prehashed"
          fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.utils.Prehashed"
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "verify"
    fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPublicKey.verify"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPublicKey"
        fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPublicKey"
      }
    }
    parameters {
      name: "signature"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    parameters {
      name: "data"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    parameters {
      name: "algorithm"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[cryptography.hazmat.primitives.hashes.HashAlgorithm,cryptography.hazmat.primitives.asymmetric.utils.Prehashed]"
        kind: UNION
        args {
          pretty_printed_name: "cryptography.hazmat.primitives.hashes.HashAlgorithm"
          fully_qualified_name: "cryptography.hazmat.primitives.hashes.HashAlgorithm"
        }
        args {
          pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.utils.Prehashed"
          fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.utils.Prehashed"
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  has_metaclass: true
  metaclass_name: "abc.ABCMeta"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "DSAPublicNumbers"
  fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPublicNumbers"
  super_classes: "builtins.object"
  methods {
    name: "y"
    fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPublicNumbers.y"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPublicNumbers"
        fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPublicNumbers"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "parameter_numbers"
    fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPublicNumbers.parameter_numbers"
    return_annotation {
      pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAParameterNumbers"
      fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAParameterNumbers"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPublicNumbers"
        fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPublicNumbers"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__init__"
    fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPublicNumbers.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPublicNumbers"
        fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPublicNumbers"
      }
    }
    parameters {
      name: "y"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "parameter_numbers"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAParameterNumbers"
        fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAParameterNumbers"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "generate_parameters"
  fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dsa.generate_parameters"
  return_annotation {
    pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAParameters"
    fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAParameters"
  }
  parameters {
    name: "key_size"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "backend"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[cryptography.hazmat.backends.interfaces.DSABackend,None]"
      kind: UNION
      args {
        pretty_printed_name: "cryptography.hazmat.backends.interfaces.DSABackend"
        fully_qualified_name: "cryptography.hazmat.backends.interfaces.DSABackend"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "generate_private_key"
  fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dsa.generate_private_key"
  return_annotation {
    pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPrivateKey"
    fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPrivateKey"
  }
  parameters {
    name: "key_size"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "backend"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[cryptography.hazmat.backends.interfaces.DSABackend,None]"
      kind: UNION
      args {
        pretty_printed_name: "cryptography.hazmat.backends.interfaces.DSABackend"
        fully_qualified_name: "cryptography.hazmat.backends.interfaces.DSABackend"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
