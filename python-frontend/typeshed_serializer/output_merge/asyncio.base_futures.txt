fully_qualified_name: "asyncio.base_futures"
functions {
  name: "isfuture"
  fully_qualified_name: "asyncio.base_futures.isfuture"
  return_annotation {
    pretty_printed_name: "builtins.bool"
    fully_qualified_name: "builtins.bool"
  }
  parameters {
    name: "obj"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.object"
      fully_qualified_name: "builtins.object"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "_format_callbacks"
  fully_qualified_name: "asyncio.base_futures._format_callbacks"
  return_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
  parameters {
    name: "cb"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "typing.Sequence[CallableType[builtins.function]]"
      args {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
      fully_qualified_name: "typing.Sequence"
    }
  }
  valid_for: "35"
  valid_for: "36"
}
functions {
  name: "_format_callbacks"
  fully_qualified_name: "asyncio.base_futures._format_callbacks"
  return_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
  parameters {
    name: "cb"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "typing.Sequence[Tuple[CallableType[builtins.function],contextvars.Context]]"
      args {
        pretty_printed_name: "Tuple[CallableType[builtins.function],contextvars.Context]"
        kind: TUPLE
        args {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
        args {
          pretty_printed_name: "contextvars.Context"
          fully_qualified_name: "contextvars.Context"
        }
      }
      fully_qualified_name: "typing.Sequence"
    }
  }
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "_future_repr_info"
  fully_qualified_name: "asyncio.base_futures._future_repr_info"
  return_annotation {
    pretty_printed_name: "builtins.list[builtins.str]"
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    fully_qualified_name: "builtins.list"
  }
  parameters {
    name: "future"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "asyncio.futures.Future[Any]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "asyncio.futures.Future"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "_PENDING"
  fully_qualified_name: "asyncio.base_futures._PENDING"
  type_annotation {
    pretty_printed_name: "Literal[builtins.str]"
    kind: LITERAL
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "_CANCELLED"
  fully_qualified_name: "asyncio.base_futures._CANCELLED"
  type_annotation {
    pretty_printed_name: "Literal[builtins.str]"
    kind: LITERAL
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "_FINISHED"
  fully_qualified_name: "asyncio.base_futures._FINISHED"
  type_annotation {
    pretty_printed_name: "Literal[builtins.str]"
    kind: LITERAL
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
