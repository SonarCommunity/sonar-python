fully_qualified_name: "xml.etree.ElementPath"
classes {
  name: "_SelectorContext"
  fully_qualified_name: "xml.etree.ElementPath._SelectorContext"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "xml.etree.ElementPath._SelectorContext.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.etree.ElementPath._SelectorContext"
        fully_qualified_name: "xml.etree.ElementPath._SelectorContext"
      }
    }
    parameters {
      name: "root"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.etree.ElementTree.Element"
        fully_qualified_name: "xml.etree.ElementTree.Element"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "parent_map"
    fully_qualified_name: "xml.etree.ElementPath._SelectorContext.parent_map"
    type_annotation {
      pretty_printed_name: "Union[builtins.dict[xml.etree.ElementTree.Element,xml.etree.ElementTree.Element],None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.dict[xml.etree.ElementTree.Element,xml.etree.ElementTree.Element]"
        args {
          pretty_printed_name: "xml.etree.ElementTree.Element"
          fully_qualified_name: "xml.etree.ElementTree.Element"
        }
        args {
          pretty_printed_name: "xml.etree.ElementTree.Element"
          fully_qualified_name: "xml.etree.ElementTree.Element"
        }
        fully_qualified_name: "builtins.dict"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "root"
    fully_qualified_name: "xml.etree.ElementPath._SelectorContext.root"
    type_annotation {
      pretty_printed_name: "xml.etree.ElementTree.Element"
      fully_qualified_name: "xml.etree.ElementTree.Element"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
functions {
  name: "xpath_tokenizer"
  fully_qualified_name: "xml.etree.ElementPath.xpath_tokenizer"
  return_annotation {
    pretty_printed_name: "typing.Generator[UnboundType[_Token],None,None]"
    args {
      pretty_printed_name: "UnboundType[_Token]"
      kind: UNBOUND
    }
    args {
      pretty_printed_name: "None"
      kind: NONE
    }
    args {
      pretty_printed_name: "None"
      kind: NONE
    }
    fully_qualified_name: "typing.Generator"
  }
  parameters {
    name: "pattern"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  parameters {
    name: "namespaces"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.dict[builtins.str,builtins.str],None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.dict[builtins.str,builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "builtins.dict"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "get_parent_map"
  fully_qualified_name: "xml.etree.ElementPath.get_parent_map"
  return_annotation {
    pretty_printed_name: "builtins.dict[xml.etree.ElementTree.Element,xml.etree.ElementTree.Element]"
    args {
      pretty_printed_name: "xml.etree.ElementTree.Element"
      fully_qualified_name: "xml.etree.ElementTree.Element"
    }
    args {
      pretty_printed_name: "xml.etree.ElementTree.Element"
      fully_qualified_name: "xml.etree.ElementTree.Element"
    }
    fully_qualified_name: "builtins.dict"
  }
  parameters {
    name: "context"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "xml.etree.ElementPath._SelectorContext"
      fully_qualified_name: "xml.etree.ElementPath._SelectorContext"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "prepare_child"
  fully_qualified_name: "xml.etree.ElementPath.prepare_child"
  return_annotation {
    pretty_printed_name: "UnboundType[_Callback]"
    kind: UNBOUND
  }
  parameters {
    name: "next"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "UnboundType[_Next]"
      kind: UNBOUND
    }
  }
  parameters {
    name: "token"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "UnboundType[_Token]"
      kind: UNBOUND
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "prepare_star"
  fully_qualified_name: "xml.etree.ElementPath.prepare_star"
  return_annotation {
    pretty_printed_name: "UnboundType[_Callback]"
    kind: UNBOUND
  }
  parameters {
    name: "next"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "UnboundType[_Next]"
      kind: UNBOUND
    }
  }
  parameters {
    name: "token"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "UnboundType[_Token]"
      kind: UNBOUND
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "prepare_self"
  fully_qualified_name: "xml.etree.ElementPath.prepare_self"
  return_annotation {
    pretty_printed_name: "UnboundType[_Callback]"
    kind: UNBOUND
  }
  parameters {
    name: "next"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "UnboundType[_Next]"
      kind: UNBOUND
    }
  }
  parameters {
    name: "token"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "UnboundType[_Token]"
      kind: UNBOUND
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "prepare_descendant"
  fully_qualified_name: "xml.etree.ElementPath.prepare_descendant"
  return_annotation {
    pretty_printed_name: "UnboundType[_Callback]"
    kind: UNBOUND
  }
  parameters {
    name: "next"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "UnboundType[_Next]"
      kind: UNBOUND
    }
  }
  parameters {
    name: "token"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "UnboundType[_Token]"
      kind: UNBOUND
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "prepare_parent"
  fully_qualified_name: "xml.etree.ElementPath.prepare_parent"
  return_annotation {
    pretty_printed_name: "UnboundType[_Callback]"
    kind: UNBOUND
  }
  parameters {
    name: "next"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "UnboundType[_Next]"
      kind: UNBOUND
    }
  }
  parameters {
    name: "token"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "UnboundType[_Token]"
      kind: UNBOUND
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "prepare_predicate"
  fully_qualified_name: "xml.etree.ElementPath.prepare_predicate"
  return_annotation {
    pretty_printed_name: "UnboundType[_Callback]"
    kind: UNBOUND
  }
  parameters {
    name: "next"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "UnboundType[_Next]"
      kind: UNBOUND
    }
  }
  parameters {
    name: "token"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "UnboundType[_Token]"
      kind: UNBOUND
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "iterfind"
  fully_qualified_name: "xml.etree.ElementPath.iterfind"
  return_annotation {
    pretty_printed_name: "typing.Generator[xml.etree.ElementTree.Element,None,None]"
    args {
      pretty_printed_name: "xml.etree.ElementTree.Element"
      fully_qualified_name: "xml.etree.ElementTree.Element"
    }
    args {
      pretty_printed_name: "None"
      kind: NONE
    }
    args {
      pretty_printed_name: "None"
      kind: NONE
    }
    fully_qualified_name: "typing.Generator"
  }
  parameters {
    name: "elem"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "xml.etree.ElementTree.Element"
      fully_qualified_name: "xml.etree.ElementTree.Element"
    }
  }
  parameters {
    name: "path"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  parameters {
    name: "namespaces"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.dict[builtins.str,builtins.str],None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.dict[builtins.str,builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "builtins.dict"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "find"
  fully_qualified_name: "xml.etree.ElementPath.find"
  return_annotation {
    pretty_printed_name: "Union[xml.etree.ElementTree.Element,None]"
    kind: UNION
    args {
      pretty_printed_name: "xml.etree.ElementTree.Element"
      fully_qualified_name: "xml.etree.ElementTree.Element"
    }
    args {
      pretty_printed_name: "None"
      kind: NONE
    }
  }
  parameters {
    name: "elem"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "xml.etree.ElementTree.Element"
      fully_qualified_name: "xml.etree.ElementTree.Element"
    }
  }
  parameters {
    name: "path"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  parameters {
    name: "namespaces"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.dict[builtins.str,builtins.str],None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.dict[builtins.str,builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "builtins.dict"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "findall"
  fully_qualified_name: "xml.etree.ElementPath.findall"
  return_annotation {
    pretty_printed_name: "builtins.list[xml.etree.ElementTree.Element]"
    args {
      pretty_printed_name: "xml.etree.ElementTree.Element"
      fully_qualified_name: "xml.etree.ElementTree.Element"
    }
    fully_qualified_name: "builtins.list"
  }
  parameters {
    name: "elem"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "xml.etree.ElementTree.Element"
      fully_qualified_name: "xml.etree.ElementTree.Element"
    }
  }
  parameters {
    name: "path"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  parameters {
    name: "namespaces"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.dict[builtins.str,builtins.str],None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.dict[builtins.str,builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "builtins.dict"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "findtext"
  fully_qualified_name: "xml.etree.ElementPath.findtext"
  return_annotation {
    pretty_printed_name: "Union[xml.etree.ElementPath._T,builtins.str]"
    kind: UNION
    args {
      pretty_printed_name: "xml.etree.ElementPath._T"
      kind: TYPE_VAR
    }
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  parameters {
    name: "elem"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "xml.etree.ElementTree.Element"
      fully_qualified_name: "xml.etree.ElementTree.Element"
    }
  }
  parameters {
    name: "path"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  parameters {
    name: "default"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[xml.etree.ElementPath._T,None]"
      kind: UNION
      args {
        pretty_printed_name: "xml.etree.ElementPath._T"
        kind: TYPE_VAR
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "namespaces"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.dict[builtins.str,builtins.str],None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.dict[builtins.str,builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "builtins.dict"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "xpath_tokenizer_re"
  fully_qualified_name: "xml.etree.ElementPath.xpath_tokenizer_re"
  type_annotation {
    pretty_printed_name: "re.Pattern[builtins.str]"
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    fully_qualified_name: "re.Pattern"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "_Token"
  fully_qualified_name: "xml.etree.ElementPath._Token"
  type_annotation {
    pretty_printed_name: "UnboundType[TypeAlias]"
    kind: UNBOUND
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "_Next"
  fully_qualified_name: "xml.etree.ElementPath._Next"
  type_annotation {
    pretty_printed_name: "UnboundType[TypeAlias]"
    kind: UNBOUND
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "_Callback"
  fully_qualified_name: "xml.etree.ElementPath._Callback"
  type_annotation {
    pretty_printed_name: "UnboundType[TypeAlias]"
    kind: UNBOUND
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "ops"
  fully_qualified_name: "xml.etree.ElementPath.ops"
  type_annotation {
    pretty_printed_name: "builtins.dict[builtins.str,CallableType[builtins.function]]"
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    args {
      pretty_printed_name: "CallableType[builtins.function]"
      kind: CALLABLE
      args {
        pretty_printed_name: "builtins.function"
        fully_qualified_name: "builtins.function"
      }
    }
    fully_qualified_name: "builtins.dict"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
