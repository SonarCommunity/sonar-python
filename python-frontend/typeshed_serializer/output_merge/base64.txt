fully_qualified_name: "base64"
functions {
  name: "b64encode"
  fully_qualified_name: "base64.b64encode"
  return_annotation {
    pretty_printed_name: "builtins.bytes"
    fully_qualified_name: "builtins.bytes"
  }
  parameters {
    name: "s"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "UnboundType[ReadableBuffer]"
      kind: UNBOUND
    }
  }
  parameters {
    name: "altchars"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[UnboundType[ReadableBuffer],None]"
      kind: UNION
      args {
        pretty_printed_name: "UnboundType[ReadableBuffer]"
        kind: UNBOUND
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "b64decode"
  fully_qualified_name: "base64.b64decode"
  return_annotation {
    pretty_printed_name: "builtins.bytes"
    fully_qualified_name: "builtins.bytes"
  }
  parameters {
    name: "s"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,UnboundType[ReadableBuffer]]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "UnboundType[ReadableBuffer]"
        kind: UNBOUND
      }
    }
  }
  parameters {
    name: "altchars"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[UnboundType[ReadableBuffer],None]"
      kind: UNION
      args {
        pretty_printed_name: "UnboundType[ReadableBuffer]"
        kind: UNBOUND
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "validate"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "standard_b64encode"
  fully_qualified_name: "base64.standard_b64encode"
  return_annotation {
    pretty_printed_name: "builtins.bytes"
    fully_qualified_name: "builtins.bytes"
  }
  parameters {
    name: "s"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "UnboundType[ReadableBuffer]"
      kind: UNBOUND
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "standard_b64decode"
  fully_qualified_name: "base64.standard_b64decode"
  return_annotation {
    pretty_printed_name: "builtins.bytes"
    fully_qualified_name: "builtins.bytes"
  }
  parameters {
    name: "s"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,UnboundType[ReadableBuffer]]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "UnboundType[ReadableBuffer]"
        kind: UNBOUND
      }
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "urlsafe_b64encode"
  fully_qualified_name: "base64.urlsafe_b64encode"
  return_annotation {
    pretty_printed_name: "builtins.bytes"
    fully_qualified_name: "builtins.bytes"
  }
  parameters {
    name: "s"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "UnboundType[ReadableBuffer]"
      kind: UNBOUND
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "urlsafe_b64decode"
  fully_qualified_name: "base64.urlsafe_b64decode"
  return_annotation {
    pretty_printed_name: "builtins.bytes"
    fully_qualified_name: "builtins.bytes"
  }
  parameters {
    name: "s"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,UnboundType[ReadableBuffer]]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "UnboundType[ReadableBuffer]"
        kind: UNBOUND
      }
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "b32encode"
  fully_qualified_name: "base64.b32encode"
  return_annotation {
    pretty_printed_name: "builtins.bytes"
    fully_qualified_name: "builtins.bytes"
  }
  parameters {
    name: "s"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "UnboundType[ReadableBuffer]"
      kind: UNBOUND
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "b32decode"
  fully_qualified_name: "base64.b32decode"
  return_annotation {
    pretty_printed_name: "builtins.bytes"
    fully_qualified_name: "builtins.bytes"
  }
  parameters {
    name: "s"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,UnboundType[ReadableBuffer]]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "UnboundType[ReadableBuffer]"
        kind: UNBOUND
      }
    }
  }
  parameters {
    name: "casefold"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    has_default: true
  }
  parameters {
    name: "map01"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.bytes,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "b16encode"
  fully_qualified_name: "base64.b16encode"
  return_annotation {
    pretty_printed_name: "builtins.bytes"
    fully_qualified_name: "builtins.bytes"
  }
  parameters {
    name: "s"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "UnboundType[ReadableBuffer]"
      kind: UNBOUND
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "b16decode"
  fully_qualified_name: "base64.b16decode"
  return_annotation {
    pretty_printed_name: "builtins.bytes"
    fully_qualified_name: "builtins.bytes"
  }
  parameters {
    name: "s"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,UnboundType[ReadableBuffer]]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "UnboundType[ReadableBuffer]"
        kind: UNBOUND
      }
    }
  }
  parameters {
    name: "casefold"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "a85encode"
  fully_qualified_name: "base64.a85encode"
  return_annotation {
    pretty_printed_name: "builtins.bytes"
    fully_qualified_name: "builtins.bytes"
  }
  parameters {
    name: "b"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "UnboundType[ReadableBuffer]"
      kind: UNBOUND
    }
  }
  parameters {
    name: "foldspaces"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    has_default: true
  }
  parameters {
    name: "wrapcol"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    has_default: true
  }
  parameters {
    name: "pad"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    has_default: true
  }
  parameters {
    name: "adobe"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "a85decode"
  fully_qualified_name: "base64.a85decode"
  return_annotation {
    pretty_printed_name: "builtins.bytes"
    fully_qualified_name: "builtins.bytes"
  }
  parameters {
    name: "b"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,UnboundType[ReadableBuffer]]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "UnboundType[ReadableBuffer]"
        kind: UNBOUND
      }
    }
  }
  parameters {
    name: "foldspaces"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    has_default: true
  }
  parameters {
    name: "adobe"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    has_default: true
  }
  parameters {
    name: "ignorechars"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[builtins.bytearray,builtins.bytes]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.bytearray"
        fully_qualified_name: "builtins.bytearray"
      }
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "b85encode"
  fully_qualified_name: "base64.b85encode"
  return_annotation {
    pretty_printed_name: "builtins.bytes"
    fully_qualified_name: "builtins.bytes"
  }
  parameters {
    name: "b"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "UnboundType[ReadableBuffer]"
      kind: UNBOUND
    }
  }
  parameters {
    name: "pad"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "b85decode"
  fully_qualified_name: "base64.b85decode"
  return_annotation {
    pretty_printed_name: "builtins.bytes"
    fully_qualified_name: "builtins.bytes"
  }
  parameters {
    name: "b"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,UnboundType[ReadableBuffer]]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "UnboundType[ReadableBuffer]"
        kind: UNBOUND
      }
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "decode"
  fully_qualified_name: "base64.decode"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "input"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "typing.IO[builtins.bytes]"
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
      fully_qualified_name: "typing.IO"
    }
  }
  parameters {
    name: "output"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "typing.IO[builtins.bytes]"
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
      fully_qualified_name: "typing.IO"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "encode"
  fully_qualified_name: "base64.encode"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "input"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "typing.IO[builtins.bytes]"
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
      fully_qualified_name: "typing.IO"
    }
  }
  parameters {
    name: "output"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "typing.IO[builtins.bytes]"
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
      fully_qualified_name: "typing.IO"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "encodebytes"
  fully_qualified_name: "base64.encodebytes"
  return_annotation {
    pretty_printed_name: "builtins.bytes"
    fully_qualified_name: "builtins.bytes"
  }
  parameters {
    name: "s"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "UnboundType[ReadableBuffer]"
      kind: UNBOUND
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "decodebytes"
  fully_qualified_name: "base64.decodebytes"
  return_annotation {
    pretty_printed_name: "builtins.bytes"
    fully_qualified_name: "builtins.bytes"
  }
  parameters {
    name: "s"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "UnboundType[ReadableBuffer]"
      kind: UNBOUND
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "encodestring"
  fully_qualified_name: "base64.encodestring"
  return_annotation {
    pretty_printed_name: "builtins.bytes"
    fully_qualified_name: "builtins.bytes"
  }
  parameters {
    name: "s"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "UnboundType[ReadableBuffer]"
      kind: UNBOUND
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
}
functions {
  name: "decodestring"
  fully_qualified_name: "base64.decodestring"
  return_annotation {
    pretty_printed_name: "builtins.bytes"
    fully_qualified_name: "builtins.bytes"
  }
  parameters {
    name: "s"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "UnboundType[ReadableBuffer]"
      kind: UNBOUND
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
}
functions {
  name: "b32hexencode"
  fully_qualified_name: "base64.b32hexencode"
  return_annotation {
    pretty_printed_name: "builtins.bytes"
    fully_qualified_name: "builtins.bytes"
  }
  parameters {
    name: "s"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "UnboundType[ReadableBuffer]"
      kind: UNBOUND
    }
  }
  valid_for: "310"
}
functions {
  name: "b32hexdecode"
  fully_qualified_name: "base64.b32hexdecode"
  return_annotation {
    pretty_printed_name: "builtins.bytes"
    fully_qualified_name: "builtins.bytes"
  }
  parameters {
    name: "s"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,UnboundType[ReadableBuffer]]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "UnboundType[ReadableBuffer]"
        kind: UNBOUND
      }
    }
  }
  parameters {
    name: "casefold"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    has_default: true
  }
  valid_for: "310"
}
vars {
  name: "__all__"
  fully_qualified_name: "base64.__all__"
  type_annotation {
    pretty_printed_name: "builtins.list[builtins.str]"
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    fully_qualified_name: "builtins.list"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
