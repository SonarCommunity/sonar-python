fully_qualified_name: "lib2to3.pgen2.parse"
classes {
  name: "ParseError"
  fully_qualified_name: "lib2to3.pgen2.parse.ParseError"
  super_classes: "builtins.Exception"
  methods {
    name: "__init__"
    fully_qualified_name: "lib2to3.pgen2.parse.ParseError.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "lib2to3.pgen2.parse.ParseError"
        fully_qualified_name: "lib2to3.pgen2.parse.ParseError"
      }
    }
    parameters {
      name: "msg"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.unicode"
        fully_qualified_name: "builtins.unicode"
      }
    }
    parameters {
      name: "type"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.unicode,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.unicode"
          fully_qualified_name: "builtins.unicode"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "context"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[typing.Sequence[Any]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "typing.Sequence[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "typing.Sequence"
        }
        fully_qualified_name: "lib2to3.pgen2.parse._Context"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__init__"
    fully_qualified_name: "lib2to3.pgen2.parse.ParseError.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "lib2to3.pgen2.parse.ParseError"
        fully_qualified_name: "lib2to3.pgen2.parse.ParseError"
      }
    }
    parameters {
      name: "msg"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "type"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "context"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UnboundType[_Context]"
        kind: UNBOUND
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "msg"
    fully_qualified_name: "lib2to3.pgen2.parse.ParseError.msg"
    type_annotation {
      pretty_printed_name: "builtins.unicode"
      fully_qualified_name: "builtins.unicode"
    }
    valid_for: "27"
  }
  attributes {
    name: "msg"
    fully_qualified_name: "lib2to3.pgen2.parse.ParseError.msg"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "type"
    fully_qualified_name: "lib2to3.pgen2.parse.ParseError.type"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "value"
    fully_qualified_name: "lib2to3.pgen2.parse.ParseError.value"
    type_annotation {
      pretty_printed_name: "Union[builtins.unicode,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.unicode"
        fully_qualified_name: "builtins.unicode"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "27"
  }
  attributes {
    name: "value"
    fully_qualified_name: "lib2to3.pgen2.parse.ParseError.value"
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "context"
    fully_qualified_name: "lib2to3.pgen2.parse.ParseError.context"
    type_annotation {
      pretty_printed_name: "TypeAlias[typing.Sequence[Any]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "typing.Sequence[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "typing.Sequence"
      }
      fully_qualified_name: "lib2to3.pgen2.parse._Context"
    }
    valid_for: "27"
  }
  attributes {
    name: "context"
    fully_qualified_name: "lib2to3.pgen2.parse.ParseError.context"
    type_annotation {
      pretty_printed_name: "UnboundType[_Context]"
      kind: UNBOUND
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "Parser"
  fully_qualified_name: "lib2to3.pgen2.parse.Parser"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "lib2to3.pgen2.parse.Parser.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "lib2to3.pgen2.parse.Parser"
        fully_qualified_name: "lib2to3.pgen2.parse.Parser"
      }
    }
    parameters {
      name: "grammar"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "lib2to3.pgen2.grammar.Grammar"
        fully_qualified_name: "lib2to3.pgen2.grammar.Grammar"
      }
    }
    parameters {
      name: "convert"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[CallableType[builtins.function],None]"
        kind: UNION
        args {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "__init__"
    fully_qualified_name: "lib2to3.pgen2.parse.Parser.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "lib2to3.pgen2.parse.Parser"
        fully_qualified_name: "lib2to3.pgen2.parse.Parser"
      }
    }
    parameters {
      name: "grammar"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "lib2to3.pgen2.grammar.Grammar"
        fully_qualified_name: "lib2to3.pgen2.grammar.Grammar"
      }
    }
    parameters {
      name: "convert"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[UnboundType[_Convert],None]"
        kind: UNION
        args {
          pretty_printed_name: "UnboundType[_Convert]"
          kind: UNBOUND
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "setup"
    fully_qualified_name: "lib2to3.pgen2.parse.Parser.setup"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "lib2to3.pgen2.parse.Parser"
        fully_qualified_name: "lib2to3.pgen2.parse.Parser"
      }
    }
    parameters {
      name: "start"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "addtoken"
    fully_qualified_name: "lib2to3.pgen2.parse.Parser.addtoken"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "lib2to3.pgen2.parse.Parser"
        fully_qualified_name: "lib2to3.pgen2.parse.Parser"
      }
    }
    parameters {
      name: "type"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.unicode,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.unicode"
          fully_qualified_name: "builtins.unicode"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "context"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[typing.Sequence[Any]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "typing.Sequence[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "typing.Sequence"
        }
        fully_qualified_name: "lib2to3.pgen2.parse._Context"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "addtoken"
    fully_qualified_name: "lib2to3.pgen2.parse.Parser.addtoken"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "lib2to3.pgen2.parse.Parser"
        fully_qualified_name: "lib2to3.pgen2.parse.Parser"
      }
    }
    parameters {
      name: "type"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "context"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UnboundType[_Context]"
        kind: UNBOUND
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "classify"
    fully_qualified_name: "lib2to3.pgen2.parse.Parser.classify"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "lib2to3.pgen2.parse.Parser"
        fully_qualified_name: "lib2to3.pgen2.parse.Parser"
      }
    }
    parameters {
      name: "type"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.unicode,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.unicode"
          fully_qualified_name: "builtins.unicode"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "context"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[typing.Sequence[Any]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "typing.Sequence[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "typing.Sequence"
        }
        fully_qualified_name: "lib2to3.pgen2.parse._Context"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "classify"
    fully_qualified_name: "lib2to3.pgen2.parse.Parser.classify"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "lib2to3.pgen2.parse.Parser"
        fully_qualified_name: "lib2to3.pgen2.parse.Parser"
      }
    }
    parameters {
      name: "type"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "context"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UnboundType[_Context]"
        kind: UNBOUND
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "shift"
    fully_qualified_name: "lib2to3.pgen2.parse.Parser.shift"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "lib2to3.pgen2.parse.Parser"
        fully_qualified_name: "lib2to3.pgen2.parse.Parser"
      }
    }
    parameters {
      name: "type"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.unicode,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.unicode"
          fully_qualified_name: "builtins.unicode"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "newstate"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "context"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[typing.Sequence[Any]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "typing.Sequence[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "typing.Sequence"
        }
        fully_qualified_name: "lib2to3.pgen2.parse._Context"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "shift"
    fully_qualified_name: "lib2to3.pgen2.parse.Parser.shift"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "lib2to3.pgen2.parse.Parser"
        fully_qualified_name: "lib2to3.pgen2.parse.Parser"
      }
    }
    parameters {
      name: "type"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "newstate"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "context"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UnboundType[_Context]"
        kind: UNBOUND
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "push"
    fully_qualified_name: "lib2to3.pgen2.parse.Parser.push"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "lib2to3.pgen2.parse.Parser"
        fully_qualified_name: "lib2to3.pgen2.parse.Parser"
      }
    }
    parameters {
      name: "type"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "newdfa"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Tuple[TypeAlias[builtins.list[builtins.list[Tuple[builtins.int,builtins.int]]]],builtins.dict[builtins.int,builtins.int]]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Tuple[TypeAlias[builtins.list[builtins.list[Tuple[builtins.int,builtins.int]]]],builtins.dict[builtins.int,builtins.int]]"
          kind: TUPLE
          args {
            pretty_printed_name: "TypeAlias[builtins.list[builtins.list[Tuple[builtins.int,builtins.int]]]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "builtins.list[builtins.list[Tuple[builtins.int,builtins.int]]]"
              args {
                pretty_printed_name: "builtins.list[Tuple[builtins.int,builtins.int]]"
                args {
                  pretty_printed_name: "Tuple[builtins.int,builtins.int]"
                  kind: TUPLE
                  args {
                    pretty_printed_name: "builtins.int"
                    fully_qualified_name: "builtins.int"
                  }
                  args {
                    pretty_printed_name: "builtins.int"
                    fully_qualified_name: "builtins.int"
                  }
                }
                fully_qualified_name: "builtins.list"
              }
              fully_qualified_name: "builtins.list"
            }
            fully_qualified_name: "lib2to3.pgen2.grammar._DFA"
          }
          args {
            pretty_printed_name: "builtins.dict[builtins.int,builtins.int]"
            args {
              pretty_printed_name: "builtins.int"
              fully_qualified_name: "builtins.int"
            }
            args {
              pretty_printed_name: "builtins.int"
              fully_qualified_name: "builtins.int"
            }
            fully_qualified_name: "builtins.dict"
          }
        }
        fully_qualified_name: "lib2to3.pgen2.grammar._DFAS"
      }
    }
    parameters {
      name: "newstate"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "context"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[typing.Sequence[Any]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "typing.Sequence[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "typing.Sequence"
        }
        fully_qualified_name: "lib2to3.pgen2.parse._Context"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "push"
    fully_qualified_name: "lib2to3.pgen2.parse.Parser.push"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "lib2to3.pgen2.parse.Parser"
        fully_qualified_name: "lib2to3.pgen2.parse.Parser"
      }
    }
    parameters {
      name: "type"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "newdfa"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UnboundType[_DFAS]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "newstate"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "context"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UnboundType[_Context]"
        kind: UNBOUND
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "pop"
    fully_qualified_name: "lib2to3.pgen2.parse.Parser.pop"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "lib2to3.pgen2.parse.Parser"
        fully_qualified_name: "lib2to3.pgen2.parse.Parser"
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "grammar"
    fully_qualified_name: "lib2to3.pgen2.parse.Parser.grammar"
    type_annotation {
      pretty_printed_name: "lib2to3.pgen2.grammar.Grammar"
      fully_qualified_name: "lib2to3.pgen2.grammar.Grammar"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "convert"
    fully_qualified_name: "lib2to3.pgen2.parse.Parser.convert"
    type_annotation {
      pretty_printed_name: "TypeAlias[CallableType[builtins.function]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
      fully_qualified_name: "lib2to3.pytree._Convert"
    }
    valid_for: "27"
  }
  attributes {
    name: "convert"
    fully_qualified_name: "lib2to3.pgen2.parse.Parser.convert"
    type_annotation {
      pretty_printed_name: "UnboundType[_Convert]"
      kind: UNBOUND
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "stack"
    fully_qualified_name: "lib2to3.pgen2.parse.Parser.stack"
    type_annotation {
      pretty_printed_name: "builtins.list[Tuple[TypeAlias[Tuple[TypeAlias[builtins.list[builtins.list[Tuple[builtins.int,builtins.int]]]],builtins.dict[builtins.int,builtins.int]]],builtins.int,TypeAlias[Tuple[builtins.int,builtins.unicode,TypeAlias[Tuple[builtins.unicode,builtins.int,builtins.int]],Union[builtins.list[TypeAlias[Union[lib2to3.pytree.Node,lib2to3.pytree.Leaf]]],None]]]]]"
      args {
        pretty_printed_name: "Tuple[TypeAlias[Tuple[TypeAlias[builtins.list[builtins.list[Tuple[builtins.int,builtins.int]]]],builtins.dict[builtins.int,builtins.int]]],builtins.int,TypeAlias[Tuple[builtins.int,builtins.unicode,TypeAlias[Tuple[builtins.unicode,builtins.int,builtins.int]],Union[builtins.list[TypeAlias[Union[lib2to3.pytree.Node,lib2to3.pytree.Leaf]]],None]]]]"
        kind: TUPLE
        args {
          pretty_printed_name: "TypeAlias[Tuple[TypeAlias[builtins.list[builtins.list[Tuple[builtins.int,builtins.int]]]],builtins.dict[builtins.int,builtins.int]]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Tuple[TypeAlias[builtins.list[builtins.list[Tuple[builtins.int,builtins.int]]]],builtins.dict[builtins.int,builtins.int]]"
            kind: TUPLE
            args {
              pretty_printed_name: "TypeAlias[builtins.list[builtins.list[Tuple[builtins.int,builtins.int]]]]"
              kind: TYPE_ALIAS
              args {
                pretty_printed_name: "builtins.list[builtins.list[Tuple[builtins.int,builtins.int]]]"
                args {
                  pretty_printed_name: "builtins.list[Tuple[builtins.int,builtins.int]]"
                  args {
                    pretty_printed_name: "Tuple[builtins.int,builtins.int]"
                    kind: TUPLE
                    args {
                      pretty_printed_name: "builtins.int"
                      fully_qualified_name: "builtins.int"
                    }
                    args {
                      pretty_printed_name: "builtins.int"
                      fully_qualified_name: "builtins.int"
                    }
                  }
                  fully_qualified_name: "builtins.list"
                }
                fully_qualified_name: "builtins.list"
              }
              fully_qualified_name: "lib2to3.pgen2.grammar._DFA"
            }
            args {
              pretty_printed_name: "builtins.dict[builtins.int,builtins.int]"
              args {
                pretty_printed_name: "builtins.int"
                fully_qualified_name: "builtins.int"
              }
              args {
                pretty_printed_name: "builtins.int"
                fully_qualified_name: "builtins.int"
              }
              fully_qualified_name: "builtins.dict"
            }
          }
          fully_qualified_name: "lib2to3.pgen2.grammar._DFAS"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "TypeAlias[Tuple[builtins.int,builtins.unicode,TypeAlias[Tuple[builtins.unicode,builtins.int,builtins.int]],Union[builtins.list[TypeAlias[Union[lib2to3.pytree.Node,lib2to3.pytree.Leaf]]],None]]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Tuple[builtins.int,builtins.unicode,TypeAlias[Tuple[builtins.unicode,builtins.int,builtins.int]],Union[builtins.list[TypeAlias[Union[lib2to3.pytree.Node,lib2to3.pytree.Leaf]]],None]]"
            kind: TUPLE
            args {
              pretty_printed_name: "builtins.int"
              fully_qualified_name: "builtins.int"
            }
            args {
              pretty_printed_name: "builtins.unicode"
              fully_qualified_name: "builtins.unicode"
            }
            args {
              pretty_printed_name: "TypeAlias[Tuple[builtins.unicode,builtins.int,builtins.int]]"
              kind: TYPE_ALIAS
              args {
                pretty_printed_name: "Tuple[builtins.unicode,builtins.int,builtins.int]"
                kind: TUPLE
                args {
                  pretty_printed_name: "builtins.unicode"
                  fully_qualified_name: "builtins.unicode"
                }
                args {
                  pretty_printed_name: "builtins.int"
                  fully_qualified_name: "builtins.int"
                }
                args {
                  pretty_printed_name: "builtins.int"
                  fully_qualified_name: "builtins.int"
                }
              }
              fully_qualified_name: "lib2to3.pytree._Context"
            }
            args {
              pretty_printed_name: "Union[builtins.list[TypeAlias[Union[lib2to3.pytree.Node,lib2to3.pytree.Leaf]]],None]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.list[TypeAlias[Union[lib2to3.pytree.Node,lib2to3.pytree.Leaf]]]"
                args {
                  pretty_printed_name: "TypeAlias[Union[lib2to3.pytree.Node,lib2to3.pytree.Leaf]]"
                  kind: TYPE_ALIAS
                  args {
                    pretty_printed_name: "Union[lib2to3.pytree.Node,lib2to3.pytree.Leaf]"
                    kind: UNION
                    args {
                      pretty_printed_name: "lib2to3.pytree.Node"
                      fully_qualified_name: "lib2to3.pytree.Node"
                    }
                    args {
                      pretty_printed_name: "lib2to3.pytree.Leaf"
                      fully_qualified_name: "lib2to3.pytree.Leaf"
                    }
                  }
                  fully_qualified_name: "lib2to3.pytree._NL"
                }
                fully_qualified_name: "builtins.list"
              }
              args {
                pretty_printed_name: "None"
                kind: NONE
              }
            }
          }
          fully_qualified_name: "lib2to3.pytree._RawNode"
        }
      }
      fully_qualified_name: "builtins.list"
    }
    valid_for: "27"
  }
  attributes {
    name: "stack"
    fully_qualified_name: "lib2to3.pgen2.parse.Parser.stack"
    type_annotation {
      pretty_printed_name: "builtins.list[Tuple[UnboundType[_DFAS],builtins.int,UnboundType[_RawNode]]]"
      args {
        pretty_printed_name: "Tuple[UnboundType[_DFAS],builtins.int,UnboundType[_RawNode]]"
        kind: TUPLE
        args {
          pretty_printed_name: "UnboundType[_DFAS]"
          kind: UNBOUND
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "UnboundType[_RawNode]"
          kind: UNBOUND
        }
      }
      fully_qualified_name: "builtins.list"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "rootnode"
    fully_qualified_name: "lib2to3.pgen2.parse.Parser.rootnode"
    type_annotation {
      pretty_printed_name: "Union[lib2to3.pytree.Node,lib2to3.pytree.Leaf,None]"
      kind: UNION
      args {
        pretty_printed_name: "lib2to3.pytree.Node"
        fully_qualified_name: "lib2to3.pytree.Node"
      }
      args {
        pretty_printed_name: "lib2to3.pytree.Leaf"
        fully_qualified_name: "lib2to3.pytree.Leaf"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "27"
  }
  attributes {
    name: "rootnode"
    fully_qualified_name: "lib2to3.pgen2.parse.Parser.rootnode"
    type_annotation {
      pretty_printed_name: "Union[UnboundType[_NL],None]"
      kind: UNION
      args {
        pretty_printed_name: "UnboundType[_NL]"
        kind: UNBOUND
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "used_names"
    fully_qualified_name: "lib2to3.pgen2.parse.Parser.used_names"
    type_annotation {
      pretty_printed_name: "builtins.set[builtins.unicode]"
      args {
        pretty_printed_name: "builtins.unicode"
        fully_qualified_name: "builtins.unicode"
      }
      fully_qualified_name: "builtins.set"
    }
    valid_for: "27"
  }
  attributes {
    name: "used_names"
    fully_qualified_name: "lib2to3.pgen2.parse.Parser.used_names"
    type_annotation {
      pretty_printed_name: "builtins.set[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "builtins.set"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
vars {
  name: "_Context"
  fully_qualified_name: "lib2to3.pgen2.parse._Context"
  type_annotation {
    pretty_printed_name: "UnboundType[TypeAlias]"
    kind: UNBOUND
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
