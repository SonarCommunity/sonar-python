fully_qualified_name: "email.headerregistry"
classes {
  name: "_datetime"
  fully_qualified_name: "datetime.datetime"
  super_classes: "datetime.date"
  methods {
    name: "__new__"
    fully_qualified_name: "datetime.datetime.__new__"
    return_annotation {
      pretty_printed_name: "UnboundType[Self]"
      kind: UNBOUND
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[datetime.datetime]"
        kind: TYPE
        args {
          pretty_printed_name: "datetime.datetime"
          fully_qualified_name: "datetime.datetime"
        }
      }
    }
    parameters {
      name: "year"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing_extensions.SupportsIndex"
        fully_qualified_name: "typing_extensions.SupportsIndex"
      }
    }
    parameters {
      name: "month"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing_extensions.SupportsIndex"
        fully_qualified_name: "typing_extensions.SupportsIndex"
      }
    }
    parameters {
      name: "day"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing_extensions.SupportsIndex"
        fully_qualified_name: "typing_extensions.SupportsIndex"
      }
    }
    parameters {
      name: "hour"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing_extensions.SupportsIndex"
        fully_qualified_name: "typing_extensions.SupportsIndex"
      }
      has_default: true
    }
    parameters {
      name: "minute"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing_extensions.SupportsIndex"
        fully_qualified_name: "typing_extensions.SupportsIndex"
      }
      has_default: true
    }
    parameters {
      name: "second"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing_extensions.SupportsIndex"
        fully_qualified_name: "typing_extensions.SupportsIndex"
      }
      has_default: true
    }
    parameters {
      name: "microsecond"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing_extensions.SupportsIndex"
        fully_qualified_name: "typing_extensions.SupportsIndex"
      }
      has_default: true
    }
    parameters {
      name: "tzinfo"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[UnboundType[_TzInfo],None]"
        kind: UNION
        args {
          pretty_printed_name: "UnboundType[_TzInfo]"
          kind: UNBOUND
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "fold"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "hour"
    fully_qualified_name: "datetime.datetime.hour"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "datetime.datetime"
        fully_qualified_name: "datetime.datetime"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "minute"
    fully_qualified_name: "datetime.datetime.minute"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "datetime.datetime"
        fully_qualified_name: "datetime.datetime"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "second"
    fully_qualified_name: "datetime.datetime.second"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "datetime.datetime"
        fully_qualified_name: "datetime.datetime"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "microsecond"
    fully_qualified_name: "datetime.datetime.microsecond"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "datetime.datetime"
        fully_qualified_name: "datetime.datetime"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "tzinfo"
    fully_qualified_name: "datetime.datetime.tzinfo"
    return_annotation {
      pretty_printed_name: "Union[UnboundType[_TzInfo],None]"
      kind: UNION
      args {
        pretty_printed_name: "UnboundType[_TzInfo]"
        kind: UNBOUND
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "datetime.datetime"
        fully_qualified_name: "datetime.datetime"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "fold"
    fully_qualified_name: "datetime.datetime.fold"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "datetime.datetime"
        fully_qualified_name: "datetime.datetime"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "fromtimestamp"
    fully_qualified_name: "datetime.datetime.fromtimestamp"
    return_annotation {
      pretty_printed_name: "UnboundType[Self]"
      kind: UNBOUND
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[datetime.datetime]"
        kind: TYPE
        args {
          pretty_printed_name: "datetime.datetime"
          fully_qualified_name: "datetime.datetime"
        }
      }
    }
    parameters {
      name: "__timestamp"
      type_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
    }
    parameters {
      name: "tz"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[UnboundType[_TzInfo],None]"
        kind: UNION
        args {
          pretty_printed_name: "UnboundType[_TzInfo]"
          kind: UNBOUND
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "classmethod"
    is_class_method: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "utcfromtimestamp"
    fully_qualified_name: "datetime.datetime.utcfromtimestamp"
    return_annotation {
      pretty_printed_name: "UnboundType[Self]"
      kind: UNBOUND
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[datetime.datetime]"
        kind: TYPE
        args {
          pretty_printed_name: "datetime.datetime"
          fully_qualified_name: "datetime.datetime"
        }
      }
    }
    parameters {
      name: "__t"
      type_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
    }
    has_decorators: true
    resolved_decorator_names: "classmethod"
    is_class_method: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "utcnow"
    fully_qualified_name: "datetime.datetime.utcnow"
    return_annotation {
      pretty_printed_name: "UnboundType[Self]"
      kind: UNBOUND
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[datetime.datetime]"
        kind: TYPE
        args {
          pretty_printed_name: "datetime.datetime"
          fully_qualified_name: "datetime.datetime"
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "classmethod"
    is_class_method: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "combine"
    fully_qualified_name: "datetime.datetime.combine"
    return_annotation {
      pretty_printed_name: "UnboundType[Self]"
      kind: UNBOUND
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[datetime.datetime]"
        kind: TYPE
        args {
          pretty_printed_name: "datetime.datetime"
          fully_qualified_name: "datetime.datetime"
        }
      }
    }
    parameters {
      name: "date"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UnboundType[_Date]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "time"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UnboundType[_Time]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "tzinfo"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[UnboundType[_TzInfo],None]"
        kind: UNION
        args {
          pretty_printed_name: "UnboundType[_TzInfo]"
          kind: UNBOUND
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "classmethod"
    is_class_method: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "timestamp"
    fully_qualified_name: "datetime.datetime.timestamp"
    return_annotation {
      pretty_printed_name: "builtins.float"
      fully_qualified_name: "builtins.float"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "datetime.datetime"
        fully_qualified_name: "datetime.datetime"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "utctimetuple"
    fully_qualified_name: "datetime.datetime.utctimetuple"
    return_annotation {
      pretty_printed_name: "time.struct_time"
      fully_qualified_name: "time.struct_time"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "datetime.datetime"
        fully_qualified_name: "datetime.datetime"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "date"
    fully_qualified_name: "datetime.datetime.date"
    return_annotation {
      pretty_printed_name: "UnboundType[_Date]"
      kind: UNBOUND
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "datetime.datetime"
        fully_qualified_name: "datetime.datetime"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "time"
    fully_qualified_name: "datetime.datetime.time"
    return_annotation {
      pretty_printed_name: "UnboundType[_Time]"
      kind: UNBOUND
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "datetime.datetime"
        fully_qualified_name: "datetime.datetime"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "timetz"
    fully_qualified_name: "datetime.datetime.timetz"
    return_annotation {
      pretty_printed_name: "UnboundType[_Time]"
      kind: UNBOUND
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "datetime.datetime"
        fully_qualified_name: "datetime.datetime"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "replace"
    fully_qualified_name: "datetime.datetime.replace"
    return_annotation {
      pretty_printed_name: "UnboundType[Self]"
      kind: UNBOUND
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "datetime.datetime"
        fully_qualified_name: "datetime.datetime"
      }
    }
    parameters {
      name: "year"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing_extensions.SupportsIndex"
        fully_qualified_name: "typing_extensions.SupportsIndex"
      }
      has_default: true
    }
    parameters {
      name: "month"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing_extensions.SupportsIndex"
        fully_qualified_name: "typing_extensions.SupportsIndex"
      }
      has_default: true
    }
    parameters {
      name: "day"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing_extensions.SupportsIndex"
        fully_qualified_name: "typing_extensions.SupportsIndex"
      }
      has_default: true
    }
    parameters {
      name: "hour"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing_extensions.SupportsIndex"
        fully_qualified_name: "typing_extensions.SupportsIndex"
      }
      has_default: true
    }
    parameters {
      name: "minute"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing_extensions.SupportsIndex"
        fully_qualified_name: "typing_extensions.SupportsIndex"
      }
      has_default: true
    }
    parameters {
      name: "second"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing_extensions.SupportsIndex"
        fully_qualified_name: "typing_extensions.SupportsIndex"
      }
      has_default: true
    }
    parameters {
      name: "microsecond"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing_extensions.SupportsIndex"
        fully_qualified_name: "typing_extensions.SupportsIndex"
      }
      has_default: true
    }
    parameters {
      name: "tzinfo"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[UnboundType[_TzInfo],None]"
        kind: UNION
        args {
          pretty_printed_name: "UnboundType[_TzInfo]"
          kind: UNBOUND
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "fold"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "astimezone"
    fully_qualified_name: "datetime.datetime.astimezone"
    return_annotation {
      pretty_printed_name: "datetime.datetime"
      fully_qualified_name: "datetime.datetime"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "datetime.datetime"
        fully_qualified_name: "datetime.datetime"
      }
    }
    parameters {
      name: "tz"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[UnboundType[_TzInfo],None]"
        kind: UNION
        args {
          pretty_printed_name: "UnboundType[_TzInfo]"
          kind: UNBOUND
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
  }
  methods {
    name: "astimezone"
    fully_qualified_name: "datetime.datetime.astimezone"
    return_annotation {
      pretty_printed_name: "UnboundType[Self]"
      kind: UNBOUND
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "datetime.datetime"
        fully_qualified_name: "datetime.datetime"
      }
    }
    parameters {
      name: "tz"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[UnboundType[_TzInfo],None]"
        kind: UNION
        args {
          pretty_printed_name: "UnboundType[_TzInfo]"
          kind: UNBOUND
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "isoformat"
    fully_qualified_name: "datetime.datetime.isoformat"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "datetime.datetime"
        fully_qualified_name: "datetime.datetime"
      }
    }
    parameters {
      name: "sep"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      has_default: true
    }
    parameters {
      name: "timespec"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "strptime"
    fully_qualified_name: "datetime.datetime.strptime"
    return_annotation {
      pretty_printed_name: "UnboundType[Self]"
      kind: UNBOUND
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[datetime.datetime]"
        kind: TYPE
        args {
          pretty_printed_name: "datetime.datetime"
          fully_qualified_name: "datetime.datetime"
        }
      }
    }
    parameters {
      name: "__date_string"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "__format"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    has_decorators: true
    resolved_decorator_names: "classmethod"
    is_class_method: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "utcoffset"
    fully_qualified_name: "datetime.datetime.utcoffset"
    return_annotation {
      pretty_printed_name: "Union[datetime.timedelta,None]"
      kind: UNION
      args {
        pretty_printed_name: "datetime.timedelta"
        fully_qualified_name: "datetime.timedelta"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "datetime.datetime"
        fully_qualified_name: "datetime.datetime"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "tzname"
    fully_qualified_name: "datetime.datetime.tzname"
    return_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "datetime.datetime"
        fully_qualified_name: "datetime.datetime"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "dst"
    fully_qualified_name: "datetime.datetime.dst"
    return_annotation {
      pretty_printed_name: "Union[datetime.timedelta,None]"
      kind: UNION
      args {
        pretty_printed_name: "datetime.timedelta"
        fully_qualified_name: "datetime.timedelta"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "datetime.datetime"
        fully_qualified_name: "datetime.datetime"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__le__"
    fully_qualified_name: "datetime.datetime.__le__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "datetime.datetime"
        fully_qualified_name: "datetime.datetime"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "datetime.datetime"
        fully_qualified_name: "datetime.datetime"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__lt__"
    fully_qualified_name: "datetime.datetime.__lt__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "datetime.datetime"
        fully_qualified_name: "datetime.datetime"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "datetime.datetime"
        fully_qualified_name: "datetime.datetime"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__ge__"
    fully_qualified_name: "datetime.datetime.__ge__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "datetime.datetime"
        fully_qualified_name: "datetime.datetime"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "datetime.datetime"
        fully_qualified_name: "datetime.datetime"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__gt__"
    fully_qualified_name: "datetime.datetime.__gt__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "datetime.datetime"
        fully_qualified_name: "datetime.datetime"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "datetime.datetime"
        fully_qualified_name: "datetime.datetime"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__add__"
    fully_qualified_name: "datetime.datetime.__add__"
    return_annotation {
      pretty_printed_name: "datetime.datetime"
      fully_qualified_name: "datetime.datetime"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "datetime.datetime"
        fully_qualified_name: "datetime.datetime"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "datetime.timedelta"
        fully_qualified_name: "datetime.timedelta"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
  }
  methods {
    name: "__radd__"
    fully_qualified_name: "datetime.datetime.__radd__"
    return_annotation {
      pretty_printed_name: "datetime.datetime"
      fully_qualified_name: "datetime.datetime"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "datetime.datetime"
        fully_qualified_name: "datetime.datetime"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "datetime.timedelta"
        fully_qualified_name: "datetime.timedelta"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
  }
  methods {
    name: "now"
    fully_qualified_name: "datetime.datetime.now"
    return_annotation {
      pretty_printed_name: "UnboundType[Self]"
      kind: UNBOUND
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[datetime.datetime]"
        kind: TYPE
        args {
          pretty_printed_name: "datetime.datetime"
          fully_qualified_name: "datetime.datetime"
        }
      }
    }
    parameters {
      name: "tz"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[UnboundType[_TzInfo],None]"
        kind: UNION
        args {
          pretty_printed_name: "UnboundType[_TzInfo]"
          kind: UNBOUND
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "classmethod"
    is_class_method: true
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "now"
    fullname: "datetime.datetime.now"
    definitions {
      name: "now"
      fully_qualified_name: "datetime.datetime.now"
      return_annotation {
        pretty_printed_name: "UnboundType[Self]"
        kind: UNBOUND
      }
      parameters {
        name: "cls"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Type[datetime.datetime]"
          kind: TYPE
          args {
            pretty_printed_name: "datetime.datetime"
            fully_qualified_name: "datetime.datetime"
          }
        }
      }
      parameters {
        name: "tz"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "None"
          kind: NONE
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      resolved_decorator_names: "classmethod"
      is_overload: true
      is_class_method: true
    }
    definitions {
      name: "now"
      fully_qualified_name: "datetime.datetime.now"
      return_annotation {
        pretty_printed_name: "datetime.datetime"
        fully_qualified_name: "datetime.datetime"
      }
      parameters {
        name: "cls"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Type[datetime.datetime]"
          kind: TYPE
          args {
            pretty_printed_name: "datetime.datetime"
            fully_qualified_name: "datetime.datetime"
          }
        }
      }
      parameters {
        name: "tz"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "UnboundType[_TzInfo]"
          kind: UNBOUND
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      resolved_decorator_names: "classmethod"
      is_overload: true
      is_class_method: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
  }
  overloaded_methods {
    name: "__sub__"
    fullname: "datetime.datetime.__sub__"
    definitions {
      name: "__sub__"
      fully_qualified_name: "datetime.datetime.__sub__"
      return_annotation {
        pretty_printed_name: "datetime.timedelta"
        fully_qualified_name: "datetime.timedelta"
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "datetime.datetime"
          fully_qualified_name: "datetime.datetime"
        }
      }
      parameters {
        name: "__value"
        type_annotation {
          pretty_printed_name: "datetime.datetime"
          fully_qualified_name: "datetime.datetime"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__sub__"
      fully_qualified_name: "datetime.datetime.__sub__"
      return_annotation {
        pretty_printed_name: "datetime.datetime"
        fully_qualified_name: "datetime.datetime"
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "datetime.datetime"
          fully_qualified_name: "datetime.datetime"
        }
      }
      parameters {
        name: "__value"
        type_annotation {
          pretty_printed_name: "datetime.timedelta"
          fully_qualified_name: "datetime.timedelta"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
  }
  overloaded_methods {
    name: "__sub__"
    fullname: "datetime.datetime.__sub__"
    definitions {
      name: "__sub__"
      fully_qualified_name: "datetime.datetime.__sub__"
      return_annotation {
        pretty_printed_name: "UnboundType[Self]"
        kind: UNBOUND
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "datetime.datetime"
          fully_qualified_name: "datetime.datetime"
        }
      }
      parameters {
        name: "__value"
        type_annotation {
          pretty_printed_name: "datetime.timedelta"
          fully_qualified_name: "datetime.timedelta"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__sub__"
      fully_qualified_name: "datetime.datetime.__sub__"
      return_annotation {
        pretty_printed_name: "datetime.timedelta"
        fully_qualified_name: "datetime.timedelta"
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "datetime._D"
          kind: TYPE_VAR
        }
      }
      parameters {
        name: "__value"
        type_annotation {
          pretty_printed_name: "datetime._D"
          kind: TYPE_VAR
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "min"
    fully_qualified_name: "datetime.datetime.min"
    type_annotation {
      pretty_printed_name: "datetime.datetime"
      fully_qualified_name: "datetime.datetime"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "max"
    fully_qualified_name: "datetime.datetime.max"
    type_annotation {
      pretty_printed_name: "datetime.datetime"
      fully_qualified_name: "datetime.datetime"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "BaseHeader"
  fully_qualified_name: "email.headerregistry.BaseHeader"
  super_classes: "builtins.str"
  methods {
    name: "name"
    fully_qualified_name: "email.headerregistry.BaseHeader.name"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "email.headerregistry.BaseHeader"
        fully_qualified_name: "email.headerregistry.BaseHeader"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "defects"
    fully_qualified_name: "email.headerregistry.BaseHeader.defects"
    return_annotation {
      pretty_printed_name: "Tuple[email.errors.MessageDefect,Any]"
      kind: TUPLE
      args {
        pretty_printed_name: "email.errors.MessageDefect"
        fully_qualified_name: "email.errors.MessageDefect"
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "email.headerregistry.BaseHeader"
        fully_qualified_name: "email.headerregistry.BaseHeader"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
  }
  methods {
    name: "defects"
    fully_qualified_name: "email.headerregistry.BaseHeader.defects"
    return_annotation {
      pretty_printed_name: "builtins.tuple[email.errors.MessageDefect]"
      args {
        pretty_printed_name: "email.errors.MessageDefect"
        fully_qualified_name: "email.errors.MessageDefect"
      }
      fully_qualified_name: "builtins.tuple"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "email.headerregistry.BaseHeader"
        fully_qualified_name: "email.headerregistry.BaseHeader"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__new__"
    fully_qualified_name: "email.headerregistry.BaseHeader.__new__"
    return_annotation {
      pretty_printed_name: "UnboundType[Self]"
      kind: UNBOUND
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[email.headerregistry.BaseHeader]"
        kind: TYPE
        args {
          pretty_printed_name: "email.headerregistry.BaseHeader"
          fully_qualified_name: "email.headerregistry.BaseHeader"
        }
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "init"
    fully_qualified_name: "email.headerregistry.BaseHeader.init"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "email.headerregistry.BaseHeader"
        fully_qualified_name: "email.headerregistry.BaseHeader"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "parse_tree"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "email._header_value_parser.TokenList"
        fully_qualified_name: "email._header_value_parser.TokenList"
      }
    }
    parameters {
      name: "defects"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "typing.Iterable[email.errors.MessageDefect]"
        args {
          pretty_printed_name: "email.errors.MessageDefect"
          fully_qualified_name: "email.errors.MessageDefect"
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "fold"
    fully_qualified_name: "email.headerregistry.BaseHeader.fold"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "email.headerregistry.BaseHeader"
        fully_qualified_name: "email.headerregistry.BaseHeader"
      }
    }
    parameters {
      name: "policy"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "email.policy.Policy"
        fully_qualified_name: "email.policy.Policy"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "max_count"
    fully_qualified_name: "email.headerregistry.BaseHeader.max_count"
    type_annotation {
      pretty_printed_name: "Union[Literal[builtins.int],None]"
      kind: UNION
      args {
        pretty_printed_name: "Literal[builtins.int]"
        kind: LITERAL
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "UnstructuredHeader"
  fully_qualified_name: "email.headerregistry.UnstructuredHeader"
  super_classes: "builtins.object"
  methods {
    name: "value_parser"
    fully_qualified_name: "email.headerregistry.UnstructuredHeader.value_parser"
    return_annotation {
      pretty_printed_name: "email._header_value_parser.UnstructuredTokenList"
      fully_qualified_name: "email._header_value_parser.UnstructuredTokenList"
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    has_decorators: true
    resolved_decorator_names: "staticmethod"
    is_static: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "parse"
    fully_qualified_name: "email.headerregistry.UnstructuredHeader.parse"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[email.headerregistry.UnstructuredHeader]"
        kind: TYPE
        args {
          pretty_printed_name: "email.headerregistry.UnstructuredHeader"
          fully_qualified_name: "email.headerregistry.UnstructuredHeader"
        }
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "kwds"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.dict[builtins.str,Any]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "builtins.dict"
      }
    }
    has_decorators: true
    resolved_decorator_names: "classmethod"
    is_class_method: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "max_count"
    fully_qualified_name: "email.headerregistry.UnstructuredHeader.max_count"
    type_annotation {
      pretty_printed_name: "Union[Literal[builtins.int],None]"
      kind: UNION
      args {
        pretty_printed_name: "Literal[builtins.int]"
        kind: LITERAL
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "UniqueUnstructuredHeader"
  fully_qualified_name: "email.headerregistry.UniqueUnstructuredHeader"
  super_classes: "email.headerregistry.UnstructuredHeader"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "max_count"
    fully_qualified_name: "email.headerregistry.UniqueUnstructuredHeader.max_count"
    type_annotation {
      pretty_printed_name: "Literal[builtins.int]"
      kind: LITERAL
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "DateHeader"
  fully_qualified_name: "email.headerregistry.DateHeader"
  super_classes: "builtins.object"
  methods {
    name: "init"
    fully_qualified_name: "email.headerregistry.DateHeader.init"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "email.headerregistry.DateHeader"
        fully_qualified_name: "email.headerregistry.DateHeader"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "parse_tree"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "email._header_value_parser.TokenList"
        fully_qualified_name: "email._header_value_parser.TokenList"
      }
    }
    parameters {
      name: "defects"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "typing.Iterable[email.errors.MessageDefect]"
        args {
          pretty_printed_name: "email.errors.MessageDefect"
          fully_qualified_name: "email.errors.MessageDefect"
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    parameters {
      name: "datetime"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "datetime.datetime"
        fully_qualified_name: "datetime.datetime"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "datetime"
    fully_qualified_name: "email.headerregistry.DateHeader.datetime"
    return_annotation {
      pretty_printed_name: "datetime.datetime"
      fully_qualified_name: "datetime.datetime"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "email.headerregistry.DateHeader"
        fully_qualified_name: "email.headerregistry.DateHeader"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "value_parser"
    fully_qualified_name: "email.headerregistry.DateHeader.value_parser"
    return_annotation {
      pretty_printed_name: "email._header_value_parser.UnstructuredTokenList"
      fully_qualified_name: "email._header_value_parser.UnstructuredTokenList"
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    has_decorators: true
    resolved_decorator_names: "staticmethod"
    is_static: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "parse"
    fully_qualified_name: "email.headerregistry.DateHeader.parse"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[email.headerregistry.DateHeader]"
        kind: TYPE
        args {
          pretty_printed_name: "email.headerregistry.DateHeader"
          fully_qualified_name: "email.headerregistry.DateHeader"
        }
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,datetime.datetime]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "datetime.datetime"
          fully_qualified_name: "datetime.datetime"
        }
      }
    }
    parameters {
      name: "kwds"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.dict[builtins.str,Any]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "builtins.dict"
      }
    }
    has_decorators: true
    resolved_decorator_names: "classmethod"
    is_class_method: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "max_count"
    fully_qualified_name: "email.headerregistry.DateHeader.max_count"
    type_annotation {
      pretty_printed_name: "Union[Literal[builtins.int],None]"
      kind: UNION
      args {
        pretty_printed_name: "Literal[builtins.int]"
        kind: LITERAL
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "UniqueDateHeader"
  fully_qualified_name: "email.headerregistry.UniqueDateHeader"
  super_classes: "email.headerregistry.DateHeader"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "max_count"
    fully_qualified_name: "email.headerregistry.UniqueDateHeader.max_count"
    type_annotation {
      pretty_printed_name: "Literal[builtins.int]"
      kind: LITERAL
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "AddressHeader"
  fully_qualified_name: "email.headerregistry.AddressHeader"
  super_classes: "builtins.object"
  methods {
    name: "init"
    fully_qualified_name: "email.headerregistry.AddressHeader.init"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "email.headerregistry.AddressHeader"
        fully_qualified_name: "email.headerregistry.AddressHeader"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "parse_tree"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "email._header_value_parser.TokenList"
        fully_qualified_name: "email._header_value_parser.TokenList"
      }
    }
    parameters {
      name: "defects"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "typing.Iterable[email.errors.MessageDefect]"
        args {
          pretty_printed_name: "email.errors.MessageDefect"
          fully_qualified_name: "email.errors.MessageDefect"
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    parameters {
      name: "groups"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "typing.Iterable[email.headerregistry.Group]"
        args {
          pretty_printed_name: "email.headerregistry.Group"
          fully_qualified_name: "email.headerregistry.Group"
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "groups"
    fully_qualified_name: "email.headerregistry.AddressHeader.groups"
    return_annotation {
      pretty_printed_name: "Tuple[email.headerregistry.Group,Any]"
      kind: TUPLE
      args {
        pretty_printed_name: "email.headerregistry.Group"
        fully_qualified_name: "email.headerregistry.Group"
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "email.headerregistry.AddressHeader"
        fully_qualified_name: "email.headerregistry.AddressHeader"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
  }
  methods {
    name: "groups"
    fully_qualified_name: "email.headerregistry.AddressHeader.groups"
    return_annotation {
      pretty_printed_name: "builtins.tuple[email.headerregistry.Group]"
      args {
        pretty_printed_name: "email.headerregistry.Group"
        fully_qualified_name: "email.headerregistry.Group"
      }
      fully_qualified_name: "builtins.tuple"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "email.headerregistry.AddressHeader"
        fully_qualified_name: "email.headerregistry.AddressHeader"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "addresses"
    fully_qualified_name: "email.headerregistry.AddressHeader.addresses"
    return_annotation {
      pretty_printed_name: "Tuple[email.headerregistry.Address,Any]"
      kind: TUPLE
      args {
        pretty_printed_name: "email.headerregistry.Address"
        fully_qualified_name: "email.headerregistry.Address"
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "email.headerregistry.AddressHeader"
        fully_qualified_name: "email.headerregistry.AddressHeader"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
  }
  methods {
    name: "addresses"
    fully_qualified_name: "email.headerregistry.AddressHeader.addresses"
    return_annotation {
      pretty_printed_name: "builtins.tuple[email.headerregistry.Address]"
      args {
        pretty_printed_name: "email.headerregistry.Address"
        fully_qualified_name: "email.headerregistry.Address"
      }
      fully_qualified_name: "builtins.tuple"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "email.headerregistry.AddressHeader"
        fully_qualified_name: "email.headerregistry.AddressHeader"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "value_parser"
    fully_qualified_name: "email.headerregistry.AddressHeader.value_parser"
    return_annotation {
      pretty_printed_name: "email._header_value_parser.AddressList"
      fully_qualified_name: "email._header_value_parser.AddressList"
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    has_decorators: true
    resolved_decorator_names: "staticmethod"
    is_static: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "parse"
    fully_qualified_name: "email.headerregistry.AddressHeader.parse"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[email.headerregistry.AddressHeader]"
        kind: TYPE
        args {
          pretty_printed_name: "email.headerregistry.AddressHeader"
          fully_qualified_name: "email.headerregistry.AddressHeader"
        }
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "kwds"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.dict[builtins.str,Any]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "builtins.dict"
      }
    }
    has_decorators: true
    resolved_decorator_names: "classmethod"
    is_class_method: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "max_count"
    fully_qualified_name: "email.headerregistry.AddressHeader.max_count"
    type_annotation {
      pretty_printed_name: "Union[Literal[builtins.int],None]"
      kind: UNION
      args {
        pretty_printed_name: "Literal[builtins.int]"
        kind: LITERAL
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "UniqueAddressHeader"
  fully_qualified_name: "email.headerregistry.UniqueAddressHeader"
  super_classes: "email.headerregistry.AddressHeader"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "max_count"
    fully_qualified_name: "email.headerregistry.UniqueAddressHeader.max_count"
    type_annotation {
      pretty_printed_name: "Literal[builtins.int]"
      kind: LITERAL
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "SingleAddressHeader"
  fully_qualified_name: "email.headerregistry.SingleAddressHeader"
  super_classes: "email.headerregistry.AddressHeader"
  methods {
    name: "address"
    fully_qualified_name: "email.headerregistry.SingleAddressHeader.address"
    return_annotation {
      pretty_printed_name: "email.headerregistry.Address"
      fully_qualified_name: "email.headerregistry.Address"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "email.headerregistry.SingleAddressHeader"
        fully_qualified_name: "email.headerregistry.SingleAddressHeader"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "UniqueSingleAddressHeader"
  fully_qualified_name: "email.headerregistry.UniqueSingleAddressHeader"
  super_classes: "email.headerregistry.SingleAddressHeader"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "max_count"
    fully_qualified_name: "email.headerregistry.UniqueSingleAddressHeader.max_count"
    type_annotation {
      pretty_printed_name: "Literal[builtins.int]"
      kind: LITERAL
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "MIMEVersionHeader"
  fully_qualified_name: "email.headerregistry.MIMEVersionHeader"
  super_classes: "builtins.object"
  methods {
    name: "init"
    fully_qualified_name: "email.headerregistry.MIMEVersionHeader.init"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "email.headerregistry.MIMEVersionHeader"
        fully_qualified_name: "email.headerregistry.MIMEVersionHeader"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "parse_tree"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "email._header_value_parser.TokenList"
        fully_qualified_name: "email._header_value_parser.TokenList"
      }
    }
    parameters {
      name: "defects"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "typing.Iterable[email.errors.MessageDefect]"
        args {
          pretty_printed_name: "email.errors.MessageDefect"
          fully_qualified_name: "email.errors.MessageDefect"
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    parameters {
      name: "version"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "major"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "minor"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "version"
    fully_qualified_name: "email.headerregistry.MIMEVersionHeader.version"
    return_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "email.headerregistry.MIMEVersionHeader"
        fully_qualified_name: "email.headerregistry.MIMEVersionHeader"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "major"
    fully_qualified_name: "email.headerregistry.MIMEVersionHeader.major"
    return_annotation {
      pretty_printed_name: "Union[builtins.int,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "email.headerregistry.MIMEVersionHeader"
        fully_qualified_name: "email.headerregistry.MIMEVersionHeader"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "minor"
    fully_qualified_name: "email.headerregistry.MIMEVersionHeader.minor"
    return_annotation {
      pretty_printed_name: "Union[builtins.int,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "email.headerregistry.MIMEVersionHeader"
        fully_qualified_name: "email.headerregistry.MIMEVersionHeader"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "value_parser"
    fully_qualified_name: "email.headerregistry.MIMEVersionHeader.value_parser"
    return_annotation {
      pretty_printed_name: "email._header_value_parser.MIMEVersion"
      fully_qualified_name: "email._header_value_parser.MIMEVersion"
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    has_decorators: true
    resolved_decorator_names: "staticmethod"
    is_static: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "parse"
    fully_qualified_name: "email.headerregistry.MIMEVersionHeader.parse"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[email.headerregistry.MIMEVersionHeader]"
        kind: TYPE
        args {
          pretty_printed_name: "email.headerregistry.MIMEVersionHeader"
          fully_qualified_name: "email.headerregistry.MIMEVersionHeader"
        }
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "kwds"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.dict[builtins.str,Any]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "builtins.dict"
      }
    }
    has_decorators: true
    resolved_decorator_names: "classmethod"
    is_class_method: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "max_count"
    fully_qualified_name: "email.headerregistry.MIMEVersionHeader.max_count"
    type_annotation {
      pretty_printed_name: "Literal[builtins.int]"
      kind: LITERAL
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "ParameterizedMIMEHeader"
  fully_qualified_name: "email.headerregistry.ParameterizedMIMEHeader"
  super_classes: "builtins.object"
  methods {
    name: "init"
    fully_qualified_name: "email.headerregistry.ParameterizedMIMEHeader.init"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "email.headerregistry.ParameterizedMIMEHeader"
        fully_qualified_name: "email.headerregistry.ParameterizedMIMEHeader"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "parse_tree"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "email._header_value_parser.TokenList"
        fully_qualified_name: "email._header_value_parser.TokenList"
      }
    }
    parameters {
      name: "defects"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "typing.Iterable[email.errors.MessageDefect]"
        args {
          pretty_printed_name: "email.errors.MessageDefect"
          fully_qualified_name: "email.errors.MessageDefect"
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    parameters {
      name: "params"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "typing.Mapping[builtins.str,Any]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "typing.Mapping"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "params"
    fully_qualified_name: "email.headerregistry.ParameterizedMIMEHeader.params"
    return_annotation {
      pretty_printed_name: "types.MappingProxyType[builtins.str,Any]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "types.MappingProxyType"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "email.headerregistry.ParameterizedMIMEHeader"
        fully_qualified_name: "email.headerregistry.ParameterizedMIMEHeader"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "parse"
    fully_qualified_name: "email.headerregistry.ParameterizedMIMEHeader.parse"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[email.headerregistry.ParameterizedMIMEHeader]"
        kind: TYPE
        args {
          pretty_printed_name: "email.headerregistry.ParameterizedMIMEHeader"
          fully_qualified_name: "email.headerregistry.ParameterizedMIMEHeader"
        }
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "kwds"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.dict[builtins.str,Any]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "builtins.dict"
      }
    }
    has_decorators: true
    resolved_decorator_names: "classmethod"
    is_class_method: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "max_count"
    fully_qualified_name: "email.headerregistry.ParameterizedMIMEHeader.max_count"
    type_annotation {
      pretty_printed_name: "Literal[builtins.int]"
      kind: LITERAL
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "ContentTypeHeader"
  fully_qualified_name: "email.headerregistry.ContentTypeHeader"
  super_classes: "email.headerregistry.ParameterizedMIMEHeader"
  methods {
    name: "content_type"
    fully_qualified_name: "email.headerregistry.ContentTypeHeader.content_type"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "email.headerregistry.ContentTypeHeader"
        fully_qualified_name: "email.headerregistry.ContentTypeHeader"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "maintype"
    fully_qualified_name: "email.headerregistry.ContentTypeHeader.maintype"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "email.headerregistry.ContentTypeHeader"
        fully_qualified_name: "email.headerregistry.ContentTypeHeader"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "subtype"
    fully_qualified_name: "email.headerregistry.ContentTypeHeader.subtype"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "email.headerregistry.ContentTypeHeader"
        fully_qualified_name: "email.headerregistry.ContentTypeHeader"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "value_parser"
    fully_qualified_name: "email.headerregistry.ContentTypeHeader.value_parser"
    return_annotation {
      pretty_printed_name: "email._header_value_parser.ContentType"
      fully_qualified_name: "email._header_value_parser.ContentType"
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    has_decorators: true
    resolved_decorator_names: "staticmethod"
    is_static: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "ContentDispositionHeader"
  fully_qualified_name: "email.headerregistry.ContentDispositionHeader"
  super_classes: "email.headerregistry.ParameterizedMIMEHeader"
  methods {
    name: "content_disposition"
    fully_qualified_name: "email.headerregistry.ContentDispositionHeader.content_disposition"
    return_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "email.headerregistry.ContentDispositionHeader"
        fully_qualified_name: "email.headerregistry.ContentDispositionHeader"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "value_parser"
    fully_qualified_name: "email.headerregistry.ContentDispositionHeader.value_parser"
    return_annotation {
      pretty_printed_name: "email._header_value_parser.ContentDisposition"
      fully_qualified_name: "email._header_value_parser.ContentDisposition"
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    has_decorators: true
    resolved_decorator_names: "staticmethod"
    is_static: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "ContentTransferEncodingHeader"
  fully_qualified_name: "email.headerregistry.ContentTransferEncodingHeader"
  super_classes: "builtins.object"
  methods {
    name: "init"
    fully_qualified_name: "email.headerregistry.ContentTransferEncodingHeader.init"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "email.headerregistry.ContentTransferEncodingHeader"
        fully_qualified_name: "email.headerregistry.ContentTransferEncodingHeader"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "parse_tree"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "email._header_value_parser.TokenList"
        fully_qualified_name: "email._header_value_parser.TokenList"
      }
    }
    parameters {
      name: "defects"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "typing.Iterable[email.errors.MessageDefect]"
        args {
          pretty_printed_name: "email.errors.MessageDefect"
          fully_qualified_name: "email.errors.MessageDefect"
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "cte"
    fully_qualified_name: "email.headerregistry.ContentTransferEncodingHeader.cte"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "email.headerregistry.ContentTransferEncodingHeader"
        fully_qualified_name: "email.headerregistry.ContentTransferEncodingHeader"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "parse"
    fully_qualified_name: "email.headerregistry.ContentTransferEncodingHeader.parse"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[email.headerregistry.ContentTransferEncodingHeader]"
        kind: TYPE
        args {
          pretty_printed_name: "email.headerregistry.ContentTransferEncodingHeader"
          fully_qualified_name: "email.headerregistry.ContentTransferEncodingHeader"
        }
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "kwds"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.dict[builtins.str,Any]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "builtins.dict"
      }
    }
    has_decorators: true
    resolved_decorator_names: "classmethod"
    is_class_method: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "value_parser"
    fully_qualified_name: "email.headerregistry.ContentTransferEncodingHeader.value_parser"
    return_annotation {
      pretty_printed_name: "email._header_value_parser.ContentTransferEncoding"
      fully_qualified_name: "email._header_value_parser.ContentTransferEncoding"
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    has_decorators: true
    resolved_decorator_names: "staticmethod"
    is_static: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "max_count"
    fully_qualified_name: "email.headerregistry.ContentTransferEncodingHeader.max_count"
    type_annotation {
      pretty_printed_name: "Literal[builtins.int]"
      kind: LITERAL
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "_HeaderParser"
  fully_qualified_name: "email.headerregistry._HeaderParser"
  super_classes: "builtins.object"
  methods {
    name: "value_parser"
    fully_qualified_name: "email.headerregistry._HeaderParser.value_parser"
    return_annotation {
      pretty_printed_name: "email._header_value_parser.TokenList"
      fully_qualified_name: "email._header_value_parser.TokenList"
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    has_decorators: true
    resolved_decorator_names: "staticmethod"
    is_static: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "parse"
    fully_qualified_name: "email.headerregistry._HeaderParser.parse"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[email.headerregistry._HeaderParser]"
        kind: TYPE
        args {
          pretty_printed_name: "email.headerregistry._HeaderParser"
          fully_qualified_name: "email.headerregistry._HeaderParser"
        }
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "kwds"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.dict[builtins.str,Any]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "builtins.dict"
      }
    }
    has_decorators: true
    resolved_decorator_names: "classmethod"
    is_class_method: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  is_protocol: true
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "max_count"
    fully_qualified_name: "email.headerregistry._HeaderParser.max_count"
    type_annotation {
      pretty_printed_name: "Union[Literal[builtins.int],None]"
      kind: UNION
      args {
        pretty_printed_name: "Literal[builtins.int]"
        kind: LITERAL
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "HeaderRegistry"
  fully_qualified_name: "email.headerregistry.HeaderRegistry"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "email.headerregistry.HeaderRegistry.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "email.headerregistry.HeaderRegistry"
        fully_qualified_name: "email.headerregistry.HeaderRegistry"
      }
    }
    parameters {
      name: "base_class"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.type"
        fully_qualified_name: "builtins.type"
      }
      has_default: true
    }
    parameters {
      name: "default_class"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.type"
        fully_qualified_name: "builtins.type"
      }
      has_default: true
    }
    parameters {
      name: "use_default_map"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
  }
  methods {
    name: "__init__"
    fully_qualified_name: "email.headerregistry.HeaderRegistry.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "email.headerregistry.HeaderRegistry"
        fully_qualified_name: "email.headerregistry.HeaderRegistry"
      }
    }
    parameters {
      name: "base_class"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[email.headerregistry.BaseHeader]"
        kind: TYPE
        args {
          pretty_printed_name: "email.headerregistry.BaseHeader"
          fully_qualified_name: "email.headerregistry.BaseHeader"
        }
      }
      has_default: true
    }
    parameters {
      name: "default_class"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[email.headerregistry._HeaderParser]"
        kind: TYPE
        args {
          pretty_printed_name: "email.headerregistry._HeaderParser"
          fully_qualified_name: "email.headerregistry._HeaderParser"
        }
      }
      has_default: true
    }
    parameters {
      name: "use_default_map"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "map_to_type"
    fully_qualified_name: "email.headerregistry.HeaderRegistry.map_to_type"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "email.headerregistry.HeaderRegistry"
        fully_qualified_name: "email.headerregistry.HeaderRegistry"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.type"
        fully_qualified_name: "builtins.type"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
  }
  methods {
    name: "map_to_type"
    fully_qualified_name: "email.headerregistry.HeaderRegistry.map_to_type"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "email.headerregistry.HeaderRegistry"
        fully_qualified_name: "email.headerregistry.HeaderRegistry"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[email.headerregistry.BaseHeader]"
        kind: TYPE
        args {
          pretty_printed_name: "email.headerregistry.BaseHeader"
          fully_qualified_name: "email.headerregistry.BaseHeader"
        }
      }
    }
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__getitem__"
    fully_qualified_name: "email.headerregistry.HeaderRegistry.__getitem__"
    return_annotation {
      pretty_printed_name: "builtins.type"
      fully_qualified_name: "builtins.type"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "email.headerregistry.HeaderRegistry"
        fully_qualified_name: "email.headerregistry.HeaderRegistry"
      }
    }
    parameters {
      name: "name"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
  }
  methods {
    name: "__getitem__"
    fully_qualified_name: "email.headerregistry.HeaderRegistry.__getitem__"
    return_annotation {
      pretty_printed_name: "Type[email.headerregistry.BaseHeader]"
      kind: TYPE
      args {
        pretty_printed_name: "email.headerregistry.BaseHeader"
        fully_qualified_name: "email.headerregistry.BaseHeader"
      }
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "email.headerregistry.HeaderRegistry"
        fully_qualified_name: "email.headerregistry.HeaderRegistry"
      }
    }
    parameters {
      name: "name"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__call__"
    fully_qualified_name: "email.headerregistry.HeaderRegistry.__call__"
    return_annotation {
      pretty_printed_name: "email.headerregistry.BaseHeader"
      fully_qualified_name: "email.headerregistry.BaseHeader"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "email.headerregistry.HeaderRegistry"
        fully_qualified_name: "email.headerregistry.HeaderRegistry"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "registry"
    fully_qualified_name: "email.headerregistry.HeaderRegistry.registry"
    type_annotation {
      pretty_printed_name: "builtins.dict[builtins.str,builtins.type]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.type"
        fully_qualified_name: "builtins.type"
      }
      fully_qualified_name: "builtins.dict"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
  }
  attributes {
    name: "registry"
    fully_qualified_name: "email.headerregistry.HeaderRegistry.registry"
    type_annotation {
      pretty_printed_name: "builtins.dict[builtins.str,Type[email.headerregistry._HeaderParser]]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "Type[email.headerregistry._HeaderParser]"
        kind: TYPE
        args {
          pretty_printed_name: "email.headerregistry._HeaderParser"
          fully_qualified_name: "email.headerregistry._HeaderParser"
        }
      }
      fully_qualified_name: "builtins.dict"
    }
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "base_class"
    fully_qualified_name: "email.headerregistry.HeaderRegistry.base_class"
    type_annotation {
      pretty_printed_name: "builtins.type"
      fully_qualified_name: "builtins.type"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
  }
  attributes {
    name: "base_class"
    fully_qualified_name: "email.headerregistry.HeaderRegistry.base_class"
    type_annotation {
      pretty_printed_name: "Type[email.headerregistry.BaseHeader]"
      kind: TYPE
      args {
        pretty_printed_name: "email.headerregistry.BaseHeader"
        fully_qualified_name: "email.headerregistry.BaseHeader"
      }
    }
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "default_class"
    fully_qualified_name: "email.headerregistry.HeaderRegistry.default_class"
    type_annotation {
      pretty_printed_name: "builtins.type"
      fully_qualified_name: "builtins.type"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
  }
  attributes {
    name: "default_class"
    fully_qualified_name: "email.headerregistry.HeaderRegistry.default_class"
    type_annotation {
      pretty_printed_name: "Type[email.headerregistry._HeaderParser]"
      kind: TYPE
      args {
        pretty_printed_name: "email.headerregistry._HeaderParser"
        fully_qualified_name: "email.headerregistry._HeaderParser"
      }
    }
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "Address"
  fully_qualified_name: "email.headerregistry.Address"
  super_classes: "builtins.object"
  methods {
    name: "display_name"
    fully_qualified_name: "email.headerregistry.Address.display_name"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "email.headerregistry.Address"
        fully_qualified_name: "email.headerregistry.Address"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "username"
    fully_qualified_name: "email.headerregistry.Address.username"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "email.headerregistry.Address"
        fully_qualified_name: "email.headerregistry.Address"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "domain"
    fully_qualified_name: "email.headerregistry.Address.domain"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "email.headerregistry.Address"
        fully_qualified_name: "email.headerregistry.Address"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "addr_spec"
    fully_qualified_name: "email.headerregistry.Address.addr_spec"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "email.headerregistry.Address"
        fully_qualified_name: "email.headerregistry.Address"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__init__"
    fully_qualified_name: "email.headerregistry.Address.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "email.headerregistry.Address"
        fully_qualified_name: "email.headerregistry.Address"
      }
    }
    parameters {
      name: "display_name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      has_default: true
    }
    parameters {
      name: "username"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "domain"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "addr_spec"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__eq__"
    fully_qualified_name: "email.headerregistry.Address.__eq__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "email.headerregistry.Address"
        fully_qualified_name: "email.headerregistry.Address"
      }
    }
    parameters {
      name: "other"
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "Group"
  fully_qualified_name: "email.headerregistry.Group"
  super_classes: "builtins.object"
  methods {
    name: "display_name"
    fully_qualified_name: "email.headerregistry.Group.display_name"
    return_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "email.headerregistry.Group"
        fully_qualified_name: "email.headerregistry.Group"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "addresses"
    fully_qualified_name: "email.headerregistry.Group.addresses"
    return_annotation {
      pretty_printed_name: "Tuple[email.headerregistry.Address,Any]"
      kind: TUPLE
      args {
        pretty_printed_name: "email.headerregistry.Address"
        fully_qualified_name: "email.headerregistry.Address"
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "email.headerregistry.Group"
        fully_qualified_name: "email.headerregistry.Group"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
  }
  methods {
    name: "addresses"
    fully_qualified_name: "email.headerregistry.Group.addresses"
    return_annotation {
      pretty_printed_name: "builtins.tuple[email.headerregistry.Address]"
      args {
        pretty_printed_name: "email.headerregistry.Address"
        fully_qualified_name: "email.headerregistry.Address"
      }
      fully_qualified_name: "builtins.tuple"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "email.headerregistry.Group"
        fully_qualified_name: "email.headerregistry.Group"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__init__"
    fully_qualified_name: "email.headerregistry.Group.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "email.headerregistry.Group"
        fully_qualified_name: "email.headerregistry.Group"
      }
    }
    parameters {
      name: "display_name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "addresses"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.Iterable[email.headerregistry.Address],None]"
        kind: UNION
        args {
          pretty_printed_name: "typing.Iterable[email.headerregistry.Address]"
          args {
            pretty_printed_name: "email.headerregistry.Address"
            fully_qualified_name: "email.headerregistry.Address"
          }
          fully_qualified_name: "typing.Iterable"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__eq__"
    fully_qualified_name: "email.headerregistry.Group.__eq__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "email.headerregistry.Group"
        fully_qualified_name: "email.headerregistry.Group"
      }
    }
    parameters {
      name: "other"
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "MessageIDHeader"
  fully_qualified_name: "email.headerregistry.MessageIDHeader"
  super_classes: "builtins.object"
  methods {
    name: "parse"
    fully_qualified_name: "email.headerregistry.MessageIDHeader.parse"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[email.headerregistry.MessageIDHeader]"
        kind: TYPE
        args {
          pretty_printed_name: "email.headerregistry.MessageIDHeader"
          fully_qualified_name: "email.headerregistry.MessageIDHeader"
        }
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "kwds"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.dict[builtins.str,Any]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "builtins.dict"
      }
    }
    has_decorators: true
    resolved_decorator_names: "classmethod"
    is_class_method: true
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "value_parser"
    fully_qualified_name: "email.headerregistry.MessageIDHeader.value_parser"
    return_annotation {
      pretty_printed_name: "email._header_value_parser.MessageID"
      fully_qualified_name: "email._header_value_parser.MessageID"
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    has_decorators: true
    resolved_decorator_names: "staticmethod"
    is_static: true
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "max_count"
    fully_qualified_name: "email.headerregistry.MessageIDHeader.max_count"
    type_annotation {
      pretty_printed_name: "Literal[builtins.int]"
      kind: LITERAL
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
