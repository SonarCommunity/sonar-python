fully_qualified_name: "asyncio.staggered"
functions {
  name: "staggered_race"
  fully_qualified_name: "asyncio.staggered.staggered_race"
  return_annotation {
    pretty_printed_name: "typing.Coroutine[Any,Any,Tuple[Any,Union[builtins.int,None],builtins.list[Union[builtins.Exception,None]]]]"
    args {
      pretty_printed_name: "Any"
      kind: ANY
    }
    args {
      pretty_printed_name: "Any"
      kind: ANY
    }
    args {
      pretty_printed_name: "Tuple[Any,Union[builtins.int,None],builtins.list[Union[builtins.Exception,None]]]"
      kind: TUPLE
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      args {
        pretty_printed_name: "builtins.list[Union[builtins.Exception,None]]"
        args {
          pretty_printed_name: "Union[builtins.Exception,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.Exception"
            fully_qualified_name: "builtins.Exception"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        fully_qualified_name: "builtins.list"
      }
    }
    fully_qualified_name: "typing.Coroutine"
  }
  parameters {
    name: "coro_fns"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "typing.Iterable[CallableType[builtins.function]]"
      args {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
      fully_qualified_name: "typing.Iterable"
    }
  }
  parameters {
    name: "delay"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.float,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  parameters {
    name: "loop"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[asyncio.events.AbstractEventLoop,None]"
      kind: UNION
      args {
        pretty_printed_name: "asyncio.events.AbstractEventLoop"
        fully_qualified_name: "asyncio.events.AbstractEventLoop"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  is_asynchronous: true
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "__all__"
  fully_qualified_name: "asyncio.staggered.__all__"
  type_annotation {
    pretty_printed_name: "Tuple[builtins.str]"
    kind: TUPLE
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
