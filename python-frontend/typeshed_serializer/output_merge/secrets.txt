fully_qualified_name: "secrets"
classes {
  name: "SystemRandom"
  fully_qualified_name: "random.SystemRandom"
  super_classes: "random.Random"
  methods {
    name: "getstate"
    fully_qualified_name: "random.SystemRandom.getstate"
    return_annotation {
      pretty_printed_name: "NoReturn"
      kind: UNINHABITED
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "random.SystemRandom"
        fully_qualified_name: "random.SystemRandom"
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "kwds"
      kind: VAR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "setstate"
    fully_qualified_name: "random.SystemRandom.setstate"
    return_annotation {
      pretty_printed_name: "NoReturn"
      kind: UNINHABITED
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "random.SystemRandom"
        fully_qualified_name: "random.SystemRandom"
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "kwds"
      kind: VAR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "randbelow"
  fully_qualified_name: "secrets.randbelow"
  return_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
  parameters {
    name: "exclusive_upper_bound"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "randbits"
  fully_qualified_name: "secrets.randbits"
  return_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
  parameters {
    name: "k"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "choice"
  fully_qualified_name: "secrets.choice"
  return_annotation {
    pretty_printed_name: "secrets._T"
    kind: TYPE_VAR
  }
  parameters {
    name: "seq"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "typing.Sequence[secrets._T]"
      args {
        pretty_printed_name: "secrets._T"
        kind: TYPE_VAR
      }
      fully_qualified_name: "typing.Sequence"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "token_bytes"
  fully_qualified_name: "secrets.token_bytes"
  return_annotation {
    pretty_printed_name: "builtins.bytes"
    fully_qualified_name: "builtins.bytes"
  }
  parameters {
    name: "nbytes"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.int,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "token_hex"
  fully_qualified_name: "secrets.token_hex"
  return_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
  parameters {
    name: "nbytes"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.int,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "token_urlsafe"
  fully_qualified_name: "secrets.token_urlsafe"
  return_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
  parameters {
    name: "nbytes"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.int,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
overloaded_functions {
  name: "compare_digest"
  fullname: "hmac.compare_digest"
  definitions {
    name: "compare_digest"
    fully_qualified_name: "hmac.compare_digest"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "__a"
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.bytearray"
            fully_qualified_name: "builtins.bytearray"
          }
          args {
            pretty_printed_name: "builtins.memoryview"
            fully_qualified_name: "builtins.memoryview"
          }
          args {
            pretty_printed_name: "array.array[Any]"
            args {
              pretty_printed_name: "Any"
              kind: ANY
            }
            fully_qualified_name: "array.array"
          }
          args {
            pretty_printed_name: "mmap.mmap"
            fully_qualified_name: "mmap.mmap"
          }
        }
        fully_qualified_name: "_typeshed.ReadableBuffer"
      }
    }
    parameters {
      name: "__b"
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.bytearray"
            fully_qualified_name: "builtins.bytearray"
          }
          args {
            pretty_printed_name: "builtins.memoryview"
            fully_qualified_name: "builtins.memoryview"
          }
          args {
            pretty_printed_name: "array.array[Any]"
            args {
              pretty_printed_name: "Any"
              kind: ANY
            }
            fully_qualified_name: "array.array"
          }
          args {
            pretty_printed_name: "mmap.mmap"
            fully_qualified_name: "mmap.mmap"
          }
        }
        fully_qualified_name: "_typeshed.ReadableBuffer"
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "compare_digest"
    fully_qualified_name: "hmac.compare_digest"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "__a"
      type_annotation {
        pretty_printed_name: "typing.AnyStr"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "__b"
      type_annotation {
        pretty_printed_name: "typing.AnyStr"
        kind: TYPE_VAR
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
