fully_qualified_name: "jinja2.utils"
classes {
  name: "Markup"
  fully_qualified_name: "markupsafe.Markup"
  super_classes: "builtins.str"
  methods {
    name: "__new__"
    fully_qualified_name: "markupsafe.Markup.__new__"
    return_annotation {
      pretty_printed_name: "markupsafe.Markup"
      fully_qualified_name: "markupsafe.Markup"
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[markupsafe.Markup]"
        kind: TYPE
        args {
          pretty_printed_name: "markupsafe.Markup"
          fully_qualified_name: "markupsafe.Markup"
        }
      }
    }
    parameters {
      name: "base"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      has_default: true
    }
    parameters {
      name: "encoding"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "errors"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__html__"
    fully_qualified_name: "markupsafe.Markup.__html__"
    return_annotation {
      pretty_printed_name: "markupsafe.Markup"
      fully_qualified_name: "markupsafe.Markup"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "markupsafe.Markup"
        fully_qualified_name: "markupsafe.Markup"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__add__"
    fully_qualified_name: "markupsafe.Markup.__add__"
    return_annotation {
      pretty_printed_name: "markupsafe.Markup"
      fully_qualified_name: "markupsafe.Markup"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "markupsafe.Markup"
        fully_qualified_name: "markupsafe.Markup"
      }
    }
    parameters {
      name: "other"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__radd__"
    fully_qualified_name: "markupsafe.Markup.__radd__"
    return_annotation {
      pretty_printed_name: "markupsafe.Markup"
      fully_qualified_name: "markupsafe.Markup"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "markupsafe.Markup"
        fully_qualified_name: "markupsafe.Markup"
      }
    }
    parameters {
      name: "other"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__mul__"
    fully_qualified_name: "markupsafe.Markup.__mul__"
    return_annotation {
      pretty_printed_name: "markupsafe.Markup"
      fully_qualified_name: "markupsafe.Markup"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "markupsafe.Markup"
        fully_qualified_name: "markupsafe.Markup"
      }
    }
    parameters {
      name: "num"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__rmul__"
    fully_qualified_name: "markupsafe.Markup.__rmul__"
    return_annotation {
      pretty_printed_name: "markupsafe.Markup"
      fully_qualified_name: "markupsafe.Markup"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "markupsafe.Markup"
        fully_qualified_name: "markupsafe.Markup"
      }
    }
    parameters {
      name: "num"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__mod__"
    fully_qualified_name: "markupsafe.Markup.__mod__"
    return_annotation {
      pretty_printed_name: "markupsafe.Markup"
      fully_qualified_name: "markupsafe.Markup"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "markupsafe.Markup"
        fully_qualified_name: "markupsafe.Markup"
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "join"
    fully_qualified_name: "markupsafe.Markup.join"
    return_annotation {
      pretty_printed_name: "markupsafe.Markup"
      fully_qualified_name: "markupsafe.Markup"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "markupsafe.Markup"
        fully_qualified_name: "markupsafe.Markup"
      }
    }
    parameters {
      name: "seq"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "split"
    fully_qualified_name: "markupsafe.Markup.split"
    return_annotation {
      pretty_printed_name: "builtins.list[markupsafe.Markup]"
      args {
        pretty_printed_name: "markupsafe.Markup"
        fully_qualified_name: "markupsafe.Markup"
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "markupsafe.Markup"
        fully_qualified_name: "markupsafe.Markup"
      }
    }
    parameters {
      name: "sep"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "maxsplit"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing_extensions.SupportsIndex"
        fully_qualified_name: "typing_extensions.SupportsIndex"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "rsplit"
    fully_qualified_name: "markupsafe.Markup.rsplit"
    return_annotation {
      pretty_printed_name: "builtins.list[markupsafe.Markup]"
      args {
        pretty_printed_name: "markupsafe.Markup"
        fully_qualified_name: "markupsafe.Markup"
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "markupsafe.Markup"
        fully_qualified_name: "markupsafe.Markup"
      }
    }
    parameters {
      name: "sep"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "maxsplit"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing_extensions.SupportsIndex"
        fully_qualified_name: "typing_extensions.SupportsIndex"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "splitlines"
    fully_qualified_name: "markupsafe.Markup.splitlines"
    return_annotation {
      pretty_printed_name: "builtins.list[markupsafe.Markup]"
      args {
        pretty_printed_name: "markupsafe.Markup"
        fully_qualified_name: "markupsafe.Markup"
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "markupsafe.Markup"
        fully_qualified_name: "markupsafe.Markup"
      }
    }
    parameters {
      name: "keepends"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "unescape"
    fully_qualified_name: "markupsafe.Markup.unescape"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "markupsafe.Markup"
        fully_qualified_name: "markupsafe.Markup"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "striptags"
    fully_qualified_name: "markupsafe.Markup.striptags"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "markupsafe.Markup"
        fully_qualified_name: "markupsafe.Markup"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "escape"
    fully_qualified_name: "markupsafe.Markup.escape"
    return_annotation {
      pretty_printed_name: "markupsafe.Markup"
      fully_qualified_name: "markupsafe.Markup"
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[markupsafe.Markup]"
        kind: TYPE
        args {
          pretty_printed_name: "markupsafe.Markup"
          fully_qualified_name: "markupsafe.Markup"
        }
      }
    }
    parameters {
      name: "s"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    has_decorators: true
    resolved_decorator_names: "classmethod"
    is_class_method: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "partition"
    fully_qualified_name: "markupsafe.Markup.partition"
    return_annotation {
      pretty_printed_name: "Tuple[markupsafe.Markup,markupsafe.Markup,markupsafe.Markup]"
      kind: TUPLE
      args {
        pretty_printed_name: "markupsafe.Markup"
        fully_qualified_name: "markupsafe.Markup"
      }
      args {
        pretty_printed_name: "markupsafe.Markup"
        fully_qualified_name: "markupsafe.Markup"
      }
      args {
        pretty_printed_name: "markupsafe.Markup"
        fully_qualified_name: "markupsafe.Markup"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "markupsafe.Markup"
        fully_qualified_name: "markupsafe.Markup"
      }
    }
    parameters {
      name: "sep"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "rpartition"
    fully_qualified_name: "markupsafe.Markup.rpartition"
    return_annotation {
      pretty_printed_name: "Tuple[markupsafe.Markup,markupsafe.Markup,markupsafe.Markup]"
      kind: TUPLE
      args {
        pretty_printed_name: "markupsafe.Markup"
        fully_qualified_name: "markupsafe.Markup"
      }
      args {
        pretty_printed_name: "markupsafe.Markup"
        fully_qualified_name: "markupsafe.Markup"
      }
      args {
        pretty_printed_name: "markupsafe.Markup"
        fully_qualified_name: "markupsafe.Markup"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "markupsafe.Markup"
        fully_qualified_name: "markupsafe.Markup"
      }
    }
    parameters {
      name: "sep"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "format"
    fully_qualified_name: "markupsafe.Markup.format"
    return_annotation {
      pretty_printed_name: "markupsafe.Markup"
      fully_qualified_name: "markupsafe.Markup"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "markupsafe.Markup"
        fully_qualified_name: "markupsafe.Markup"
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "kwargs"
      kind: VAR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__html_format__"
    fully_qualified_name: "markupsafe.Markup.__html_format__"
    return_annotation {
      pretty_printed_name: "markupsafe.Markup"
      fully_qualified_name: "markupsafe.Markup"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "markupsafe.Markup"
        fully_qualified_name: "markupsafe.Markup"
      }
    }
    parameters {
      name: "format_spec"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__getslice__"
    fully_qualified_name: "markupsafe.Markup.__getslice__"
    return_annotation {
      pretty_printed_name: "markupsafe.Markup"
      fully_qualified_name: "markupsafe.Markup"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "markupsafe.Markup"
        fully_qualified_name: "markupsafe.Markup"
      }
    }
    parameters {
      name: "start"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "stop"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__getitem__"
    fully_qualified_name: "markupsafe.Markup.__getitem__"
    return_annotation {
      pretty_printed_name: "markupsafe.Markup"
      fully_qualified_name: "markupsafe.Markup"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "markupsafe.Markup"
        fully_qualified_name: "markupsafe.Markup"
      }
    }
    parameters {
      name: "i"
      type_annotation {
        pretty_printed_name: "Union[builtins.int,builtins.slice]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.slice"
          fully_qualified_name: "builtins.slice"
        }
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "capitalize"
    fully_qualified_name: "markupsafe.Markup.capitalize"
    return_annotation {
      pretty_printed_name: "markupsafe.Markup"
      fully_qualified_name: "markupsafe.Markup"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "markupsafe.Markup"
        fully_qualified_name: "markupsafe.Markup"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "title"
    fully_qualified_name: "markupsafe.Markup.title"
    return_annotation {
      pretty_printed_name: "markupsafe.Markup"
      fully_qualified_name: "markupsafe.Markup"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "markupsafe.Markup"
        fully_qualified_name: "markupsafe.Markup"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "lower"
    fully_qualified_name: "markupsafe.Markup.lower"
    return_annotation {
      pretty_printed_name: "markupsafe.Markup"
      fully_qualified_name: "markupsafe.Markup"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "markupsafe.Markup"
        fully_qualified_name: "markupsafe.Markup"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "upper"
    fully_qualified_name: "markupsafe.Markup.upper"
    return_annotation {
      pretty_printed_name: "markupsafe.Markup"
      fully_qualified_name: "markupsafe.Markup"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "markupsafe.Markup"
        fully_qualified_name: "markupsafe.Markup"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "swapcase"
    fully_qualified_name: "markupsafe.Markup.swapcase"
    return_annotation {
      pretty_printed_name: "markupsafe.Markup"
      fully_qualified_name: "markupsafe.Markup"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "markupsafe.Markup"
        fully_qualified_name: "markupsafe.Markup"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "replace"
    fully_qualified_name: "markupsafe.Markup.replace"
    return_annotation {
      pretty_printed_name: "markupsafe.Markup"
      fully_qualified_name: "markupsafe.Markup"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "markupsafe.Markup"
        fully_qualified_name: "markupsafe.Markup"
      }
    }
    parameters {
      name: "old"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "new"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "count"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing_extensions.SupportsIndex"
        fully_qualified_name: "typing_extensions.SupportsIndex"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "ljust"
    fully_qualified_name: "markupsafe.Markup.ljust"
    return_annotation {
      pretty_printed_name: "markupsafe.Markup"
      fully_qualified_name: "markupsafe.Markup"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "markupsafe.Markup"
        fully_qualified_name: "markupsafe.Markup"
      }
    }
    parameters {
      name: "width"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing_extensions.SupportsIndex"
        fully_qualified_name: "typing_extensions.SupportsIndex"
      }
    }
    parameters {
      name: "fillchar"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "rjust"
    fully_qualified_name: "markupsafe.Markup.rjust"
    return_annotation {
      pretty_printed_name: "markupsafe.Markup"
      fully_qualified_name: "markupsafe.Markup"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "markupsafe.Markup"
        fully_qualified_name: "markupsafe.Markup"
      }
    }
    parameters {
      name: "width"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing_extensions.SupportsIndex"
        fully_qualified_name: "typing_extensions.SupportsIndex"
      }
    }
    parameters {
      name: "fillchar"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "lstrip"
    fully_qualified_name: "markupsafe.Markup.lstrip"
    return_annotation {
      pretty_printed_name: "markupsafe.Markup"
      fully_qualified_name: "markupsafe.Markup"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "markupsafe.Markup"
        fully_qualified_name: "markupsafe.Markup"
      }
    }
    parameters {
      name: "chars"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "rstrip"
    fully_qualified_name: "markupsafe.Markup.rstrip"
    return_annotation {
      pretty_printed_name: "markupsafe.Markup"
      fully_qualified_name: "markupsafe.Markup"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "markupsafe.Markup"
        fully_qualified_name: "markupsafe.Markup"
      }
    }
    parameters {
      name: "chars"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "strip"
    fully_qualified_name: "markupsafe.Markup.strip"
    return_annotation {
      pretty_printed_name: "markupsafe.Markup"
      fully_qualified_name: "markupsafe.Markup"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "markupsafe.Markup"
        fully_qualified_name: "markupsafe.Markup"
      }
    }
    parameters {
      name: "chars"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "center"
    fully_qualified_name: "markupsafe.Markup.center"
    return_annotation {
      pretty_printed_name: "markupsafe.Markup"
      fully_qualified_name: "markupsafe.Markup"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "markupsafe.Markup"
        fully_qualified_name: "markupsafe.Markup"
      }
    }
    parameters {
      name: "width"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing_extensions.SupportsIndex"
        fully_qualified_name: "typing_extensions.SupportsIndex"
      }
    }
    parameters {
      name: "fillchar"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "zfill"
    fully_qualified_name: "markupsafe.Markup.zfill"
    return_annotation {
      pretty_printed_name: "markupsafe.Markup"
      fully_qualified_name: "markupsafe.Markup"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "markupsafe.Markup"
        fully_qualified_name: "markupsafe.Markup"
      }
    }
    parameters {
      name: "width"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing_extensions.SupportsIndex"
        fully_qualified_name: "typing_extensions.SupportsIndex"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "translate"
    fully_qualified_name: "markupsafe.Markup.translate"
    return_annotation {
      pretty_printed_name: "markupsafe.Markup"
      fully_qualified_name: "markupsafe.Markup"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "markupsafe.Markup"
        fully_qualified_name: "markupsafe.Markup"
      }
    }
    parameters {
      name: "table"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.Mapping[builtins.int,Union[builtins.int,builtins.str,None]],typing.Sequence[Union[builtins.int,builtins.str,None]]]"
        kind: UNION
        args {
          pretty_printed_name: "typing.Mapping[builtins.int,Union[builtins.int,builtins.str,None]]"
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "Union[builtins.int,builtins.str,None]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.int"
              fully_qualified_name: "builtins.int"
            }
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "None"
              kind: NONE
            }
          }
          fully_qualified_name: "typing.Mapping"
        }
        args {
          pretty_printed_name: "typing.Sequence[Union[builtins.int,builtins.str,None]]"
          args {
            pretty_printed_name: "Union[builtins.int,builtins.str,None]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.int"
              fully_qualified_name: "builtins.int"
            }
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "None"
              kind: NONE
            }
          }
          fully_qualified_name: "typing.Sequence"
        }
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "expandtabs"
    fully_qualified_name: "markupsafe.Markup.expandtabs"
    return_annotation {
      pretty_printed_name: "markupsafe.Markup"
      fully_qualified_name: "markupsafe.Markup"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "markupsafe.Markup"
        fully_qualified_name: "markupsafe.Markup"
      }
    }
    parameters {
      name: "tabsize"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
  }
  methods {
    name: "expandtabs"
    fully_qualified_name: "markupsafe.Markup.expandtabs"
    return_annotation {
      pretty_printed_name: "markupsafe.Markup"
      fully_qualified_name: "markupsafe.Markup"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "markupsafe.Markup"
        fully_qualified_name: "markupsafe.Markup"
      }
    }
    parameters {
      name: "tabsize"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing_extensions.SupportsIndex"
        fully_qualified_name: "typing_extensions.SupportsIndex"
      }
      has_default: true
    }
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "_ContextFunction"
  fully_qualified_name: "jinja2.utils._ContextFunction"
  super_classes: "builtins.object"
  is_generic: true
  is_protocol: true
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "contextfunction"
    fully_qualified_name: "jinja2.utils._ContextFunction.contextfunction"
    type_annotation {
      pretty_printed_name: "Literal[builtins.bool]"
      kind: LITERAL
      args {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "__call__"
    fully_qualified_name: "jinja2.utils._ContextFunction.__call__"
    type_annotation {
      pretty_printed_name: "jinja2.utils._CallableT"
      kind: TYPE_VAR
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "_EvalContextFunction"
  fully_qualified_name: "jinja2.utils._EvalContextFunction"
  super_classes: "builtins.object"
  is_generic: true
  is_protocol: true
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "evalcontextfunction"
    fully_qualified_name: "jinja2.utils._EvalContextFunction.evalcontextfunction"
    type_annotation {
      pretty_printed_name: "Literal[builtins.bool]"
      kind: LITERAL
      args {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "__call__"
    fully_qualified_name: "jinja2.utils._EvalContextFunction.__call__"
    type_annotation {
      pretty_printed_name: "jinja2.utils._CallableT"
      kind: TYPE_VAR
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "_EnvironmentFunction"
  fully_qualified_name: "jinja2.utils._EnvironmentFunction"
  super_classes: "builtins.object"
  is_generic: true
  is_protocol: true
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "environmentfunction"
    fully_qualified_name: "jinja2.utils._EnvironmentFunction.environmentfunction"
    type_annotation {
      pretty_printed_name: "Literal[builtins.bool]"
      kind: LITERAL
      args {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "__call__"
    fully_qualified_name: "jinja2.utils._EnvironmentFunction.__call__"
    type_annotation {
      pretty_printed_name: "jinja2.utils._CallableT"
      kind: TYPE_VAR
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "LRUCache"
  fully_qualified_name: "jinja2.utils.LRUCache"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "jinja2.utils.LRUCache.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "jinja2.utils.LRUCache"
        fully_qualified_name: "jinja2.utils.LRUCache"
      }
    }
    parameters {
      name: "capacity"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__getnewargs__"
    fully_qualified_name: "jinja2.utils.LRUCache.__getnewargs__"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "copy"
    fully_qualified_name: "jinja2.utils.LRUCache.copy"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "get"
    fully_qualified_name: "jinja2.utils.LRUCache.get"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "jinja2.utils.LRUCache"
        fully_qualified_name: "jinja2.utils.LRUCache"
      }
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "default"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "setdefault"
    fully_qualified_name: "jinja2.utils.LRUCache.setdefault"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "jinja2.utils.LRUCache"
        fully_qualified_name: "jinja2.utils.LRUCache"
      }
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "default"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "clear"
    fully_qualified_name: "jinja2.utils.LRUCache.clear"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__contains__"
    fully_qualified_name: "jinja2.utils.LRUCache.__contains__"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__len__"
    fully_qualified_name: "jinja2.utils.LRUCache.__len__"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__getitem__"
    fully_qualified_name: "jinja2.utils.LRUCache.__getitem__"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__setitem__"
    fully_qualified_name: "jinja2.utils.LRUCache.__setitem__"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__delitem__"
    fully_qualified_name: "jinja2.utils.LRUCache.__delitem__"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "items"
    fully_qualified_name: "jinja2.utils.LRUCache.items"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "iteritems"
    fully_qualified_name: "jinja2.utils.LRUCache.iteritems"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "values"
    fully_qualified_name: "jinja2.utils.LRUCache.values"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "itervalue"
    fully_qualified_name: "jinja2.utils.LRUCache.itervalue"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "keys"
    fully_qualified_name: "jinja2.utils.LRUCache.keys"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "iterkeys"
    fully_qualified_name: "jinja2.utils.LRUCache.iterkeys"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__reversed__"
    fully_qualified_name: "jinja2.utils.LRUCache.__reversed__"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "capacity"
    fully_qualified_name: "jinja2.utils.LRUCache.capacity"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "__iter__"
    fully_qualified_name: "jinja2.utils.LRUCache.__iter__"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "__copy__"
    fully_qualified_name: "jinja2.utils.LRUCache.__copy__"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "Cycler"
  fully_qualified_name: "jinja2.utils.Cycler"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "jinja2.utils.Cycler.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "jinja2.utils.Cycler"
        fully_qualified_name: "jinja2.utils.Cycler"
      }
    }
    parameters {
      name: "items"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "reset"
    fully_qualified_name: "jinja2.utils.Cycler.reset"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "current"
    fully_qualified_name: "jinja2.utils.Cycler.current"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__next__"
    fully_qualified_name: "jinja2.utils.Cycler.__next__"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "items"
    fully_qualified_name: "jinja2.utils.Cycler.items"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "pos"
    fully_qualified_name: "jinja2.utils.Cycler.pos"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "Joiner"
  fully_qualified_name: "jinja2.utils.Joiner"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "jinja2.utils.Joiner.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "jinja2.utils.Joiner"
        fully_qualified_name: "jinja2.utils.Joiner"
      }
    }
    parameters {
      name: "sep"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__call__"
    fully_qualified_name: "jinja2.utils.Joiner.__call__"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "sep"
    fully_qualified_name: "jinja2.utils.Joiner.sep"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "used"
    fully_qualified_name: "jinja2.utils.Joiner.used"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
functions {
  name: "escape"
  fully_qualified_name: "markupsafe._native.escape"
  return_annotation {
    pretty_printed_name: "markupsafe.Markup"
    fully_qualified_name: "markupsafe.Markup"
  }
  parameters {
    name: "s"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[markupsafe.Markup,builtins.str]"
      kind: UNION
      args {
        pretty_printed_name: "markupsafe.Markup"
        fully_qualified_name: "markupsafe.Markup"
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "soft_unicode"
  fully_qualified_name: "markupsafe._native.soft_unicode"
  return_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
  parameters {
    name: "s"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "contextfunction"
  fully_qualified_name: "jinja2.utils.contextfunction"
  return_annotation {
    pretty_printed_name: "jinja2.utils._ContextFunction[jinja2.utils._CallableT]"
    args {
      pretty_printed_name: "jinja2.utils._CallableT"
      kind: TYPE_VAR
    }
    fully_qualified_name: "jinja2.utils._ContextFunction"
  }
  parameters {
    name: "f"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "jinja2.utils._CallableT"
      kind: TYPE_VAR
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "evalcontextfunction"
  fully_qualified_name: "jinja2.utils.evalcontextfunction"
  return_annotation {
    pretty_printed_name: "jinja2.utils._EvalContextFunction[jinja2.utils._CallableT]"
    args {
      pretty_printed_name: "jinja2.utils._CallableT"
      kind: TYPE_VAR
    }
    fully_qualified_name: "jinja2.utils._EvalContextFunction"
  }
  parameters {
    name: "f"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "jinja2.utils._CallableT"
      kind: TYPE_VAR
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "environmentfunction"
  fully_qualified_name: "jinja2.utils.environmentfunction"
  return_annotation {
    pretty_printed_name: "jinja2.utils._EnvironmentFunction[jinja2.utils._CallableT]"
    args {
      pretty_printed_name: "jinja2.utils._CallableT"
      kind: TYPE_VAR
    }
    fully_qualified_name: "jinja2.utils._EnvironmentFunction"
  }
  parameters {
    name: "f"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "jinja2.utils._CallableT"
      kind: TYPE_VAR
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "internalcode"
  fully_qualified_name: "jinja2.utils.internalcode"
  return_annotation {
    pretty_printed_name: "jinja2.utils._CallableT"
    kind: TYPE_VAR
  }
  parameters {
    name: "f"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "jinja2.utils._CallableT"
      kind: TYPE_VAR
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "is_undefined"
  fully_qualified_name: "jinja2.utils.is_undefined"
  return_annotation {
    pretty_printed_name: "builtins.bool"
    fully_qualified_name: "builtins.bool"
  }
  parameters {
    name: "obj"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.object"
      fully_qualified_name: "builtins.object"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "select_autoescape"
  fully_qualified_name: "jinja2.utils.select_autoescape"
  return_annotation {
    pretty_printed_name: "CallableType[builtins.function]"
    kind: CALLABLE
    args {
      pretty_printed_name: "builtins.function"
      fully_qualified_name: "builtins.function"
    }
  }
  parameters {
    name: "enabled_extensions"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "typing.Iterable[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "typing.Iterable"
    }
    has_default: true
  }
  parameters {
    name: "disabled_extensions"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "typing.Iterable[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "typing.Iterable"
    }
    has_default: true
  }
  parameters {
    name: "default_for_string"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    has_default: true
  }
  parameters {
    name: "default"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "consume"
  fully_qualified_name: "jinja2.utils.consume"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "iterable"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "typing.Iterable[builtins.object]"
      args {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
      fully_qualified_name: "typing.Iterable"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "clear_caches"
  fully_qualified_name: "jinja2.utils.clear_caches"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "import_string"
  fully_qualified_name: "jinja2.utils.import_string"
  return_annotation {
    pretty_printed_name: "Any"
    kind: ANY
  }
  parameters {
    name: "import_name"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  parameters {
    name: "silent"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "open_if_exists"
  fully_qualified_name: "jinja2.utils.open_if_exists"
  return_annotation {
    pretty_printed_name: "Union[typing.IO[Any],None]"
    kind: UNION
    args {
      pretty_printed_name: "typing.IO[Any]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "typing.IO"
    }
    args {
      pretty_printed_name: "None"
      kind: NONE
    }
  }
  parameters {
    name: "filename"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  parameters {
    name: "mode"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "object_type_repr"
  fully_qualified_name: "jinja2.utils.object_type_repr"
  return_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
  parameters {
    name: "obj"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.object"
      fully_qualified_name: "builtins.object"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "pformat"
  fully_qualified_name: "jinja2.utils.pformat"
  return_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
  parameters {
    name: "obj"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.object"
      fully_qualified_name: "builtins.object"
    }
  }
  parameters {
    name: "verbose"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "urlize"
  fully_qualified_name: "jinja2.utils.urlize"
  return_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
  parameters {
    name: "text"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[markupsafe.Markup,builtins.str]"
      kind: UNION
      args {
        pretty_printed_name: "markupsafe.Markup"
        fully_qualified_name: "markupsafe.Markup"
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  parameters {
    name: "trim_url_limit"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.int,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "rel"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[markupsafe.Markup,builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "markupsafe.Markup"
        fully_qualified_name: "markupsafe.Markup"
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "target"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[markupsafe.Markup,builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "markupsafe.Markup"
        fully_qualified_name: "markupsafe.Markup"
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "generate_lorem_ipsum"
  fully_qualified_name: "jinja2.utils.generate_lorem_ipsum"
  return_annotation {
    pretty_printed_name: "Union[markupsafe.Markup,builtins.str]"
    kind: UNION
    args {
      pretty_printed_name: "markupsafe.Markup"
      fully_qualified_name: "markupsafe.Markup"
    }
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  parameters {
    name: "n"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    has_default: true
  }
  parameters {
    name: "html"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    has_default: true
  }
  parameters {
    name: "min"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    has_default: true
  }
  parameters {
    name: "max"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "unicode_urlencode"
  fully_qualified_name: "jinja2.utils.unicode_urlencode"
  return_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
  parameters {
    name: "obj"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.object"
      fully_qualified_name: "builtins.object"
    }
  }
  parameters {
    name: "charset"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    has_default: true
  }
  parameters {
    name: "for_qs"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "StrOrBytesPath"
  fully_qualified_name: "jinja2.utils.StrOrBytesPath"
  type_annotation {
    pretty_printed_name: "Any"
    kind: ANY
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "missing"
  fully_qualified_name: "jinja2.utils.missing"
  type_annotation {
    pretty_printed_name: "Any"
    kind: ANY
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "internal_code"
  fully_qualified_name: "jinja2.utils.internal_code"
  type_annotation {
    pretty_printed_name: "Any"
    kind: ANY
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "concat"
  fully_qualified_name: "jinja2.utils.concat"
  type_annotation {
    pretty_printed_name: "Any"
    kind: ANY
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
