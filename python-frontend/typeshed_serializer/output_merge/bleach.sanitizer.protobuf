fully_qualified_name: "bleach.sanitizer"
classes {
  name: "Cleaner"
  fully_qualified_name: "bleach.sanitizer.Cleaner"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "bleach.sanitizer.Cleaner.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "bleach.sanitizer.Cleaner"
        fully_qualified_name: "bleach.sanitizer.Cleaner"
      }
    }
    parameters {
      name: "tags"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Container[builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "typing.Container"
      }
      has_default: true
    }
    parameters {
      name: "attributes"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[TypeAlias[CallableType[builtins.function]],TypeAlias[Union[builtins.dict[builtins.str,Union[builtins.list[builtins.str],TypeAlias[CallableType[builtins.function]]]],builtins.dict[builtins.str,builtins.list[builtins.str]],builtins.dict[builtins.str,TypeAlias[CallableType[builtins.function]]]]],builtins.list[builtins.str]]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[TypeAlias[CallableType[builtins.function]],TypeAlias[Union[builtins.dict[builtins.str,Union[builtins.list[builtins.str],TypeAlias[CallableType[builtins.function]]]],builtins.dict[builtins.str,builtins.list[builtins.str]],builtins.dict[builtins.str,TypeAlias[CallableType[builtins.function]]]]],builtins.list[builtins.str]]"
          kind: UNION
          args {
            pretty_printed_name: "TypeAlias[CallableType[builtins.function]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "CallableType[builtins.function]"
              kind: CALLABLE
              args {
                pretty_printed_name: "builtins.function"
                fully_qualified_name: "builtins.function"
              }
            }
            fully_qualified_name: "bleach.sanitizer._AttributeFilter"
          }
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.dict[builtins.str,Union[builtins.list[builtins.str],TypeAlias[CallableType[builtins.function]]]],builtins.dict[builtins.str,builtins.list[builtins.str]],builtins.dict[builtins.str,TypeAlias[CallableType[builtins.function]]]]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.dict[builtins.str,Union[builtins.list[builtins.str],TypeAlias[CallableType[builtins.function]]]],builtins.dict[builtins.str,builtins.list[builtins.str]],builtins.dict[builtins.str,TypeAlias[CallableType[builtins.function]]]]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.dict[builtins.str,Union[builtins.list[builtins.str],TypeAlias[CallableType[builtins.function]]]]"
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
                args {
                  pretty_printed_name: "Union[builtins.list[builtins.str],TypeAlias[CallableType[builtins.function]]]"
                  kind: UNION
                  args {
                    pretty_printed_name: "builtins.list[builtins.str]"
                    args {
                      pretty_printed_name: "builtins.str"
                      fully_qualified_name: "builtins.str"
                    }
                    fully_qualified_name: "builtins.list"
                  }
                  args {
                    pretty_printed_name: "TypeAlias[CallableType[builtins.function]]"
                    kind: TYPE_ALIAS
                    args {
                      pretty_printed_name: "CallableType[builtins.function]"
                      kind: CALLABLE
                      args {
                        pretty_printed_name: "builtins.function"
                        fully_qualified_name: "builtins.function"
                      }
                    }
                    fully_qualified_name: "bleach.sanitizer._AttributeFilter"
                  }
                }
                fully_qualified_name: "builtins.dict"
              }
              args {
                pretty_printed_name: "builtins.dict[builtins.str,builtins.list[builtins.str]]"
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
                args {
                  pretty_printed_name: "builtins.list[builtins.str]"
                  args {
                    pretty_printed_name: "builtins.str"
                    fully_qualified_name: "builtins.str"
                  }
                  fully_qualified_name: "builtins.list"
                }
                fully_qualified_name: "builtins.dict"
              }
              args {
                pretty_printed_name: "builtins.dict[builtins.str,TypeAlias[CallableType[builtins.function]]]"
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
                args {
                  pretty_printed_name: "TypeAlias[CallableType[builtins.function]]"
                  kind: TYPE_ALIAS
                  args {
                    pretty_printed_name: "CallableType[builtins.function]"
                    kind: CALLABLE
                    args {
                      pretty_printed_name: "builtins.function"
                      fully_qualified_name: "builtins.function"
                    }
                  }
                  fully_qualified_name: "bleach.sanitizer._AttributeFilter"
                }
                fully_qualified_name: "builtins.dict"
              }
            }
            fully_qualified_name: "bleach.sanitizer._AttributeDict"
          }
          args {
            pretty_printed_name: "builtins.list[builtins.str]"
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            fully_qualified_name: "builtins.list"
          }
        }
        fully_qualified_name: "bleach.sanitizer._Attributes"
      }
      has_default: true
    }
    parameters {
      name: "styles"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Container[builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "typing.Container"
      }
      has_default: true
    }
    parameters {
      name: "protocols"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Container[builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "typing.Container"
      }
      has_default: true
    }
    parameters {
      name: "strip"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    parameters {
      name: "strip_comments"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    parameters {
      name: "filters"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.Iterable[TypeAlias[Any]],None]"
        kind: UNION
        args {
          pretty_printed_name: "typing.Iterable[TypeAlias[Any]]"
          args {
            pretty_printed_name: "TypeAlias[Any]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Any"
              kind: ANY
            }
            fully_qualified_name: "bleach.sanitizer._Filter"
          }
          fully_qualified_name: "typing.Iterable"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "clean"
    fully_qualified_name: "bleach.sanitizer.Cleaner.clean"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "bleach.sanitizer.Cleaner"
        fully_qualified_name: "bleach.sanitizer.Cleaner"
      }
    }
    parameters {
      name: "text"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "tags"
    fully_qualified_name: "bleach.sanitizer.Cleaner.tags"
    type_annotation {
      pretty_printed_name: "typing.Container[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "typing.Container"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "attributes"
    fully_qualified_name: "bleach.sanitizer.Cleaner.attributes"
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[TypeAlias[CallableType[builtins.function]],TypeAlias[Union[builtins.dict[builtins.str,Union[builtins.list[builtins.str],TypeAlias[CallableType[builtins.function]]]],builtins.dict[builtins.str,builtins.list[builtins.str]],builtins.dict[builtins.str,TypeAlias[CallableType[builtins.function]]]]],builtins.list[builtins.str]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[TypeAlias[CallableType[builtins.function]],TypeAlias[Union[builtins.dict[builtins.str,Union[builtins.list[builtins.str],TypeAlias[CallableType[builtins.function]]]],builtins.dict[builtins.str,builtins.list[builtins.str]],builtins.dict[builtins.str,TypeAlias[CallableType[builtins.function]]]]],builtins.list[builtins.str]]"
        kind: UNION
        args {
          pretty_printed_name: "TypeAlias[CallableType[builtins.function]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "CallableType[builtins.function]"
            kind: CALLABLE
            args {
              pretty_printed_name: "builtins.function"
              fully_qualified_name: "builtins.function"
            }
          }
          fully_qualified_name: "bleach.sanitizer._AttributeFilter"
        }
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.dict[builtins.str,Union[builtins.list[builtins.str],TypeAlias[CallableType[builtins.function]]]],builtins.dict[builtins.str,builtins.list[builtins.str]],builtins.dict[builtins.str,TypeAlias[CallableType[builtins.function]]]]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.dict[builtins.str,Union[builtins.list[builtins.str],TypeAlias[CallableType[builtins.function]]]],builtins.dict[builtins.str,builtins.list[builtins.str]],builtins.dict[builtins.str,TypeAlias[CallableType[builtins.function]]]]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.dict[builtins.str,Union[builtins.list[builtins.str],TypeAlias[CallableType[builtins.function]]]]"
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "Union[builtins.list[builtins.str],TypeAlias[CallableType[builtins.function]]]"
                kind: UNION
                args {
                  pretty_printed_name: "builtins.list[builtins.str]"
                  args {
                    pretty_printed_name: "builtins.str"
                    fully_qualified_name: "builtins.str"
                  }
                  fully_qualified_name: "builtins.list"
                }
                args {
                  pretty_printed_name: "TypeAlias[CallableType[builtins.function]]"
                  kind: TYPE_ALIAS
                  args {
                    pretty_printed_name: "CallableType[builtins.function]"
                    kind: CALLABLE
                    args {
                      pretty_printed_name: "builtins.function"
                      fully_qualified_name: "builtins.function"
                    }
                  }
                  fully_qualified_name: "bleach.sanitizer._AttributeFilter"
                }
              }
              fully_qualified_name: "builtins.dict"
            }
            args {
              pretty_printed_name: "builtins.dict[builtins.str,builtins.list[builtins.str]]"
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.list[builtins.str]"
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
                fully_qualified_name: "builtins.list"
              }
              fully_qualified_name: "builtins.dict"
            }
            args {
              pretty_printed_name: "builtins.dict[builtins.str,TypeAlias[CallableType[builtins.function]]]"
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "TypeAlias[CallableType[builtins.function]]"
                kind: TYPE_ALIAS
                args {
                  pretty_printed_name: "CallableType[builtins.function]"
                  kind: CALLABLE
                  args {
                    pretty_printed_name: "builtins.function"
                    fully_qualified_name: "builtins.function"
                  }
                }
                fully_qualified_name: "bleach.sanitizer._AttributeFilter"
              }
              fully_qualified_name: "builtins.dict"
            }
          }
          fully_qualified_name: "bleach.sanitizer._AttributeDict"
        }
        args {
          pretty_printed_name: "builtins.list[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "builtins.list"
        }
      }
      fully_qualified_name: "bleach.sanitizer._Attributes"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "styles"
    fully_qualified_name: "bleach.sanitizer.Cleaner.styles"
    type_annotation {
      pretty_printed_name: "typing.Container[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "typing.Container"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "protocols"
    fully_qualified_name: "bleach.sanitizer.Cleaner.protocols"
    type_annotation {
      pretty_printed_name: "typing.Container[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "typing.Container"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "strip"
    fully_qualified_name: "bleach.sanitizer.Cleaner.strip"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "strip_comments"
    fully_qualified_name: "bleach.sanitizer.Cleaner.strip_comments"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "filters"
    fully_qualified_name: "bleach.sanitizer.Cleaner.filters"
    type_annotation {
      pretty_printed_name: "typing.Iterable[TypeAlias[Any]]"
      args {
        pretty_printed_name: "TypeAlias[Any]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "bleach.sanitizer._Filter"
      }
      fully_qualified_name: "typing.Iterable"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "parser"
    fully_qualified_name: "bleach.sanitizer.Cleaner.parser"
    type_annotation {
      pretty_printed_name: "bleach.html5lib_shim.BleachHTMLParser"
      fully_qualified_name: "bleach.html5lib_shim.BleachHTMLParser"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "walker"
    fully_qualified_name: "bleach.sanitizer.Cleaner.walker"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "serializer"
    fully_qualified_name: "bleach.sanitizer.Cleaner.serializer"
    type_annotation {
      pretty_printed_name: "bleach.html5lib_shim.BleachHTMLSerializer"
      fully_qualified_name: "bleach.html5lib_shim.BleachHTMLSerializer"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "BleachSanitizerFilter"
  fully_qualified_name: "bleach.sanitizer.BleachSanitizerFilter"
  super_classes: "bleach.html5lib_shim.SanitizerFilter"
  methods {
    name: "__init__"
    fully_qualified_name: "bleach.sanitizer.BleachSanitizerFilter.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "bleach.sanitizer.BleachSanitizerFilter"
        fully_qualified_name: "bleach.sanitizer.BleachSanitizerFilter"
      }
    }
    parameters {
      name: "source"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "attributes"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[TypeAlias[CallableType[builtins.function]],TypeAlias[Union[builtins.dict[builtins.str,Union[builtins.list[builtins.str],TypeAlias[CallableType[builtins.function]]]],builtins.dict[builtins.str,builtins.list[builtins.str]],builtins.dict[builtins.str,TypeAlias[CallableType[builtins.function]]]]],builtins.list[builtins.str]]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[TypeAlias[CallableType[builtins.function]],TypeAlias[Union[builtins.dict[builtins.str,Union[builtins.list[builtins.str],TypeAlias[CallableType[builtins.function]]]],builtins.dict[builtins.str,builtins.list[builtins.str]],builtins.dict[builtins.str,TypeAlias[CallableType[builtins.function]]]]],builtins.list[builtins.str]]"
          kind: UNION
          args {
            pretty_printed_name: "TypeAlias[CallableType[builtins.function]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "CallableType[builtins.function]"
              kind: CALLABLE
              args {
                pretty_printed_name: "builtins.function"
                fully_qualified_name: "builtins.function"
              }
            }
            fully_qualified_name: "bleach.sanitizer._AttributeFilter"
          }
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.dict[builtins.str,Union[builtins.list[builtins.str],TypeAlias[CallableType[builtins.function]]]],builtins.dict[builtins.str,builtins.list[builtins.str]],builtins.dict[builtins.str,TypeAlias[CallableType[builtins.function]]]]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.dict[builtins.str,Union[builtins.list[builtins.str],TypeAlias[CallableType[builtins.function]]]],builtins.dict[builtins.str,builtins.list[builtins.str]],builtins.dict[builtins.str,TypeAlias[CallableType[builtins.function]]]]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.dict[builtins.str,Union[builtins.list[builtins.str],TypeAlias[CallableType[builtins.function]]]]"
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
                args {
                  pretty_printed_name: "Union[builtins.list[builtins.str],TypeAlias[CallableType[builtins.function]]]"
                  kind: UNION
                  args {
                    pretty_printed_name: "builtins.list[builtins.str]"
                    args {
                      pretty_printed_name: "builtins.str"
                      fully_qualified_name: "builtins.str"
                    }
                    fully_qualified_name: "builtins.list"
                  }
                  args {
                    pretty_printed_name: "TypeAlias[CallableType[builtins.function]]"
                    kind: TYPE_ALIAS
                    args {
                      pretty_printed_name: "CallableType[builtins.function]"
                      kind: CALLABLE
                      args {
                        pretty_printed_name: "builtins.function"
                        fully_qualified_name: "builtins.function"
                      }
                    }
                    fully_qualified_name: "bleach.sanitizer._AttributeFilter"
                  }
                }
                fully_qualified_name: "builtins.dict"
              }
              args {
                pretty_printed_name: "builtins.dict[builtins.str,builtins.list[builtins.str]]"
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
                args {
                  pretty_printed_name: "builtins.list[builtins.str]"
                  args {
                    pretty_printed_name: "builtins.str"
                    fully_qualified_name: "builtins.str"
                  }
                  fully_qualified_name: "builtins.list"
                }
                fully_qualified_name: "builtins.dict"
              }
              args {
                pretty_printed_name: "builtins.dict[builtins.str,TypeAlias[CallableType[builtins.function]]]"
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
                args {
                  pretty_printed_name: "TypeAlias[CallableType[builtins.function]]"
                  kind: TYPE_ALIAS
                  args {
                    pretty_printed_name: "CallableType[builtins.function]"
                    kind: CALLABLE
                    args {
                      pretty_printed_name: "builtins.function"
                      fully_qualified_name: "builtins.function"
                    }
                  }
                  fully_qualified_name: "bleach.sanitizer._AttributeFilter"
                }
                fully_qualified_name: "builtins.dict"
              }
            }
            fully_qualified_name: "bleach.sanitizer._AttributeDict"
          }
          args {
            pretty_printed_name: "builtins.list[builtins.str]"
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            fully_qualified_name: "builtins.list"
          }
        }
        fully_qualified_name: "bleach.sanitizer._Attributes"
      }
      has_default: true
    }
    parameters {
      name: "strip_disallowed_elements"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    parameters {
      name: "strip_html_comments"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    parameters {
      name: "kwargs"
      kind: VAR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "sanitize_stream"
    fully_qualified_name: "bleach.sanitizer.BleachSanitizerFilter.sanitize_stream"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "token_iterator"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "merge_characters"
    fully_qualified_name: "bleach.sanitizer.BleachSanitizerFilter.merge_characters"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "token_iterator"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__iter__"
    fully_qualified_name: "bleach.sanitizer.BleachSanitizerFilter.__iter__"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "sanitize_token"
    fully_qualified_name: "bleach.sanitizer.BleachSanitizerFilter.sanitize_token"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "token"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "sanitize_characters"
    fully_qualified_name: "bleach.sanitizer.BleachSanitizerFilter.sanitize_characters"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "token"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "sanitize_uri_value"
    fully_qualified_name: "bleach.sanitizer.BleachSanitizerFilter.sanitize_uri_value"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "allowed_protocols"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "allow_token"
    fully_qualified_name: "bleach.sanitizer.BleachSanitizerFilter.allow_token"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "token"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "disallowed_token"
    fully_qualified_name: "bleach.sanitizer.BleachSanitizerFilter.disallowed_token"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "token"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "sanitize_css"
    fully_qualified_name: "bleach.sanitizer.BleachSanitizerFilter.sanitize_css"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "style"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "attr_filter"
    fully_qualified_name: "bleach.sanitizer.BleachSanitizerFilter.attr_filter"
    type_annotation {
      pretty_printed_name: "TypeAlias[CallableType[builtins.function]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
      fully_qualified_name: "bleach.sanitizer._AttributeFilter"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "strip_disallowed_elements"
    fully_qualified_name: "bleach.sanitizer.BleachSanitizerFilter.strip_disallowed_elements"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "strip_html_comments"
    fully_qualified_name: "bleach.sanitizer.BleachSanitizerFilter.strip_html_comments"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
functions {
  name: "attribute_filter_factory"
  fully_qualified_name: "bleach.sanitizer.attribute_filter_factory"
  return_annotation {
    pretty_printed_name: "TypeAlias[CallableType[builtins.function]]"
    kind: TYPE_ALIAS
    args {
      pretty_printed_name: "CallableType[builtins.function]"
      kind: CALLABLE
      args {
        pretty_printed_name: "builtins.function"
        fully_qualified_name: "builtins.function"
      }
    }
    fully_qualified_name: "bleach.sanitizer._AttributeFilter"
  }
  parameters {
    name: "attributes"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[TypeAlias[CallableType[builtins.function]],TypeAlias[Union[builtins.dict[builtins.str,Union[builtins.list[builtins.str],TypeAlias[CallableType[builtins.function]]]],builtins.dict[builtins.str,builtins.list[builtins.str]],builtins.dict[builtins.str,TypeAlias[CallableType[builtins.function]]]]],builtins.list[builtins.str]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[TypeAlias[CallableType[builtins.function]],TypeAlias[Union[builtins.dict[builtins.str,Union[builtins.list[builtins.str],TypeAlias[CallableType[builtins.function]]]],builtins.dict[builtins.str,builtins.list[builtins.str]],builtins.dict[builtins.str,TypeAlias[CallableType[builtins.function]]]]],builtins.list[builtins.str]]"
        kind: UNION
        args {
          pretty_printed_name: "TypeAlias[CallableType[builtins.function]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "CallableType[builtins.function]"
            kind: CALLABLE
            args {
              pretty_printed_name: "builtins.function"
              fully_qualified_name: "builtins.function"
            }
          }
          fully_qualified_name: "bleach.sanitizer._AttributeFilter"
        }
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.dict[builtins.str,Union[builtins.list[builtins.str],TypeAlias[CallableType[builtins.function]]]],builtins.dict[builtins.str,builtins.list[builtins.str]],builtins.dict[builtins.str,TypeAlias[CallableType[builtins.function]]]]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.dict[builtins.str,Union[builtins.list[builtins.str],TypeAlias[CallableType[builtins.function]]]],builtins.dict[builtins.str,builtins.list[builtins.str]],builtins.dict[builtins.str,TypeAlias[CallableType[builtins.function]]]]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.dict[builtins.str,Union[builtins.list[builtins.str],TypeAlias[CallableType[builtins.function]]]]"
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "Union[builtins.list[builtins.str],TypeAlias[CallableType[builtins.function]]]"
                kind: UNION
                args {
                  pretty_printed_name: "builtins.list[builtins.str]"
                  args {
                    pretty_printed_name: "builtins.str"
                    fully_qualified_name: "builtins.str"
                  }
                  fully_qualified_name: "builtins.list"
                }
                args {
                  pretty_printed_name: "TypeAlias[CallableType[builtins.function]]"
                  kind: TYPE_ALIAS
                  args {
                    pretty_printed_name: "CallableType[builtins.function]"
                    kind: CALLABLE
                    args {
                      pretty_printed_name: "builtins.function"
                      fully_qualified_name: "builtins.function"
                    }
                  }
                  fully_qualified_name: "bleach.sanitizer._AttributeFilter"
                }
              }
              fully_qualified_name: "builtins.dict"
            }
            args {
              pretty_printed_name: "builtins.dict[builtins.str,builtins.list[builtins.str]]"
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.list[builtins.str]"
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
                fully_qualified_name: "builtins.list"
              }
              fully_qualified_name: "builtins.dict"
            }
            args {
              pretty_printed_name: "builtins.dict[builtins.str,TypeAlias[CallableType[builtins.function]]]"
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "TypeAlias[CallableType[builtins.function]]"
                kind: TYPE_ALIAS
                args {
                  pretty_printed_name: "CallableType[builtins.function]"
                  kind: CALLABLE
                  args {
                    pretty_printed_name: "builtins.function"
                    fully_qualified_name: "builtins.function"
                  }
                }
                fully_qualified_name: "bleach.sanitizer._AttributeFilter"
              }
              fully_qualified_name: "builtins.dict"
            }
          }
          fully_qualified_name: "bleach.sanitizer._AttributeDict"
        }
        args {
          pretty_printed_name: "builtins.list[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "builtins.list"
        }
      }
      fully_qualified_name: "bleach.sanitizer._Attributes"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "ALLOWED_TAGS"
  fully_qualified_name: "bleach.sanitizer.ALLOWED_TAGS"
  type_annotation {
    pretty_printed_name: "builtins.list[builtins.str]"
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    fully_qualified_name: "builtins.list"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "ALLOWED_ATTRIBUTES"
  fully_qualified_name: "bleach.sanitizer.ALLOWED_ATTRIBUTES"
  type_annotation {
    pretty_printed_name: "builtins.dict[builtins.str,builtins.list[builtins.str]]"
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    args {
      pretty_printed_name: "builtins.list[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "builtins.list"
    }
    fully_qualified_name: "builtins.dict"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "ALLOWED_STYLES"
  fully_qualified_name: "bleach.sanitizer.ALLOWED_STYLES"
  type_annotation {
    pretty_printed_name: "builtins.list[builtins.str]"
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    fully_qualified_name: "builtins.list"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "ALLOWED_PROTOCOLS"
  fully_qualified_name: "bleach.sanitizer.ALLOWED_PROTOCOLS"
  type_annotation {
    pretty_printed_name: "builtins.list[builtins.str]"
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    fully_qualified_name: "builtins.list"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "INVISIBLE_CHARACTERS"
  fully_qualified_name: "bleach.sanitizer.INVISIBLE_CHARACTERS"
  type_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "INVISIBLE_CHARACTERS_RE"
  fully_qualified_name: "bleach.sanitizer.INVISIBLE_CHARACTERS_RE"
  type_annotation {
    pretty_printed_name: "typing.Pattern[builtins.str]"
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    fully_qualified_name: "typing.Pattern"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "INVISIBLE_REPLACEMENT_CHAR"
  fully_qualified_name: "bleach.sanitizer.INVISIBLE_REPLACEMENT_CHAR"
  type_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
