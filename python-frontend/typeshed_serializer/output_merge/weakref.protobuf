fully_qualified_name: "weakref"
classes {
  name: "WeakSet"
  fully_qualified_name: "_weakrefset.WeakSet"
  super_classes: "typing.MutableSet"
  methods {
    name: "__init__"
    fully_qualified_name: "_weakrefset.WeakSet.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_weakrefset.WeakSet[_weakrefset._T]"
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_weakrefset.WeakSet"
      }
    }
    parameters {
      name: "data"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.Iterable[_weakrefset._T],None]"
        kind: UNION
        args {
          pretty_printed_name: "typing.Iterable[_weakrefset._T]"
          args {
            pretty_printed_name: "_weakrefset._T"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "add"
    fully_qualified_name: "_weakrefset.WeakSet.add"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_weakrefset.WeakSet[_weakrefset._T]"
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_weakrefset.WeakSet"
      }
    }
    parameters {
      name: "item"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_weakrefset._T"
        kind: TYPE_VAR
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "clear"
    fully_qualified_name: "_weakrefset.WeakSet.clear"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_weakrefset.WeakSet[_weakrefset._T]"
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_weakrefset.WeakSet"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "discard"
    fully_qualified_name: "_weakrefset.WeakSet.discard"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_weakrefset.WeakSet[_weakrefset._T]"
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_weakrefset.WeakSet"
      }
    }
    parameters {
      name: "item"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_weakrefset._T"
        kind: TYPE_VAR
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "copy"
    fully_qualified_name: "_weakrefset.WeakSet.copy"
    return_annotation {
      pretty_printed_name: "_weakrefset._SelfT"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_weakrefset._SelfT"
        kind: TYPE_VAR
      }
    }
    valid_for: "27"
  }
  methods {
    name: "copy"
    fully_qualified_name: "_weakrefset.WeakSet.copy"
    return_annotation {
      pretty_printed_name: "UnboundType[Self]"
      kind: UNBOUND
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_weakrefset.WeakSet[_weakrefset._T]"
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_weakrefset.WeakSet"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "pop"
    fully_qualified_name: "_weakrefset.WeakSet.pop"
    return_annotation {
      pretty_printed_name: "_weakrefset._T"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_weakrefset.WeakSet[_weakrefset._T]"
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_weakrefset.WeakSet"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "remove"
    fully_qualified_name: "_weakrefset.WeakSet.remove"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_weakrefset.WeakSet[_weakrefset._T]"
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_weakrefset.WeakSet"
      }
    }
    parameters {
      name: "item"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_weakrefset._T"
        kind: TYPE_VAR
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "update"
    fully_qualified_name: "_weakrefset.WeakSet.update"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_weakrefset.WeakSet[_weakrefset._T]"
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_weakrefset.WeakSet"
      }
    }
    parameters {
      name: "other"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[_weakrefset._T]"
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__contains__"
    fully_qualified_name: "_weakrefset.WeakSet.__contains__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "_weakrefset.WeakSet[_weakrefset._T]"
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_weakrefset.WeakSet"
      }
    }
    parameters {
      name: "item"
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__len__"
    fully_qualified_name: "_weakrefset.WeakSet.__len__"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "_weakrefset.WeakSet[_weakrefset._T]"
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_weakrefset.WeakSet"
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__iter__"
    fully_qualified_name: "_weakrefset.WeakSet.__iter__"
    return_annotation {
      pretty_printed_name: "typing.Iterator[_weakrefset._T]"
      args {
        pretty_printed_name: "_weakrefset._T"
        kind: TYPE_VAR
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "_weakrefset.WeakSet[_weakrefset._T]"
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_weakrefset.WeakSet"
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__ior__"
    fully_qualified_name: "_weakrefset.WeakSet.__ior__"
    return_annotation {
      pretty_printed_name: "_weakrefset.WeakSet[Union[_weakrefset._S,_weakrefset._T]]"
      args {
        pretty_printed_name: "Union[_weakrefset._S,_weakrefset._T]"
        kind: UNION
        args {
          pretty_printed_name: "_weakrefset._S"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
      }
      fully_qualified_name: "_weakrefset.WeakSet"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "_weakrefset.WeakSet[_weakrefset._T]"
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_weakrefset.WeakSet"
      }
    }
    parameters {
      name: "other"
      type_annotation {
        pretty_printed_name: "typing.Iterable[_weakrefset._S]"
        args {
          pretty_printed_name: "_weakrefset._S"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__ior__"
    fully_qualified_name: "_weakrefset.WeakSet.__ior__"
    return_annotation {
      pretty_printed_name: "UnboundType[Self]"
      kind: UNBOUND
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "_weakrefset.WeakSet[_weakrefset._T]"
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_weakrefset.WeakSet"
      }
    }
    parameters {
      name: "other"
      type_annotation {
        pretty_printed_name: "typing.Iterable[_weakrefset._T]"
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "difference"
    fully_qualified_name: "_weakrefset.WeakSet.difference"
    return_annotation {
      pretty_printed_name: "_weakrefset._SelfT"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_weakrefset._SelfT"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "other"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[_weakrefset._T]"
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "difference"
    fully_qualified_name: "_weakrefset.WeakSet.difference"
    return_annotation {
      pretty_printed_name: "UnboundType[Self]"
      kind: UNBOUND
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_weakrefset.WeakSet[_weakrefset._T]"
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_weakrefset.WeakSet"
      }
    }
    parameters {
      name: "other"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[_weakrefset._T]"
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__sub__"
    fully_qualified_name: "_weakrefset.WeakSet.__sub__"
    return_annotation {
      pretty_printed_name: "_weakrefset._SelfT"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "_weakrefset._SelfT"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "other"
      type_annotation {
        pretty_printed_name: "typing.Iterable[_weakrefset._T]"
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__sub__"
    fully_qualified_name: "_weakrefset.WeakSet.__sub__"
    return_annotation {
      pretty_printed_name: "UnboundType[Self]"
      kind: UNBOUND
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "_weakrefset.WeakSet[_weakrefset._T]"
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_weakrefset.WeakSet"
      }
    }
    parameters {
      name: "other"
      type_annotation {
        pretty_printed_name: "typing.Iterable[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "difference_update"
    fully_qualified_name: "_weakrefset.WeakSet.difference_update"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_weakrefset.WeakSet[_weakrefset._T]"
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_weakrefset.WeakSet"
      }
    }
    parameters {
      name: "other"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[_weakrefset._T]"
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "difference_update"
    fully_qualified_name: "_weakrefset.WeakSet.difference_update"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_weakrefset.WeakSet[_weakrefset._T]"
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_weakrefset.WeakSet"
      }
    }
    parameters {
      name: "other"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__isub__"
    fully_qualified_name: "_weakrefset.WeakSet.__isub__"
    return_annotation {
      pretty_printed_name: "_weakrefset._SelfT"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "_weakrefset._SelfT"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "other"
      type_annotation {
        pretty_printed_name: "typing.Iterable[_weakrefset._T]"
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__isub__"
    fully_qualified_name: "_weakrefset.WeakSet.__isub__"
    return_annotation {
      pretty_printed_name: "UnboundType[Self]"
      kind: UNBOUND
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "_weakrefset.WeakSet[_weakrefset._T]"
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_weakrefset.WeakSet"
      }
    }
    parameters {
      name: "other"
      type_annotation {
        pretty_printed_name: "typing.Iterable[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "intersection"
    fully_qualified_name: "_weakrefset.WeakSet.intersection"
    return_annotation {
      pretty_printed_name: "_weakrefset._SelfT"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_weakrefset._SelfT"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "other"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[_weakrefset._T]"
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "intersection"
    fully_qualified_name: "_weakrefset.WeakSet.intersection"
    return_annotation {
      pretty_printed_name: "UnboundType[Self]"
      kind: UNBOUND
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_weakrefset.WeakSet[_weakrefset._T]"
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_weakrefset.WeakSet"
      }
    }
    parameters {
      name: "other"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[_weakrefset._T]"
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__and__"
    fully_qualified_name: "_weakrefset.WeakSet.__and__"
    return_annotation {
      pretty_printed_name: "_weakrefset._SelfT"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "_weakrefset._SelfT"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "other"
      type_annotation {
        pretty_printed_name: "typing.Iterable[_weakrefset._T]"
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__and__"
    fully_qualified_name: "_weakrefset.WeakSet.__and__"
    return_annotation {
      pretty_printed_name: "UnboundType[Self]"
      kind: UNBOUND
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "_weakrefset.WeakSet[_weakrefset._T]"
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_weakrefset.WeakSet"
      }
    }
    parameters {
      name: "other"
      type_annotation {
        pretty_printed_name: "typing.Iterable[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "intersection_update"
    fully_qualified_name: "_weakrefset.WeakSet.intersection_update"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_weakrefset.WeakSet[_weakrefset._T]"
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_weakrefset.WeakSet"
      }
    }
    parameters {
      name: "other"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[_weakrefset._T]"
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "intersection_update"
    fully_qualified_name: "_weakrefset.WeakSet.intersection_update"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_weakrefset.WeakSet[_weakrefset._T]"
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_weakrefset.WeakSet"
      }
    }
    parameters {
      name: "other"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__iand__"
    fully_qualified_name: "_weakrefset.WeakSet.__iand__"
    return_annotation {
      pretty_printed_name: "_weakrefset._SelfT"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "_weakrefset._SelfT"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "other"
      type_annotation {
        pretty_printed_name: "typing.Iterable[_weakrefset._T]"
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__iand__"
    fully_qualified_name: "_weakrefset.WeakSet.__iand__"
    return_annotation {
      pretty_printed_name: "UnboundType[Self]"
      kind: UNBOUND
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "_weakrefset.WeakSet[_weakrefset._T]"
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_weakrefset.WeakSet"
      }
    }
    parameters {
      name: "other"
      type_annotation {
        pretty_printed_name: "typing.Iterable[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "issubset"
    fully_qualified_name: "_weakrefset.WeakSet.issubset"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_weakrefset.WeakSet[_weakrefset._T]"
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_weakrefset.WeakSet"
      }
    }
    parameters {
      name: "other"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[_weakrefset._T]"
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__le__"
    fully_qualified_name: "_weakrefset.WeakSet.__le__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "_weakrefset.WeakSet[_weakrefset._T]"
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_weakrefset.WeakSet"
      }
    }
    parameters {
      name: "other"
      type_annotation {
        pretty_printed_name: "typing.Iterable[_weakrefset._T]"
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__lt__"
    fully_qualified_name: "_weakrefset.WeakSet.__lt__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "_weakrefset.WeakSet[_weakrefset._T]"
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_weakrefset.WeakSet"
      }
    }
    parameters {
      name: "other"
      type_annotation {
        pretty_printed_name: "typing.Iterable[_weakrefset._T]"
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "issuperset"
    fully_qualified_name: "_weakrefset.WeakSet.issuperset"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_weakrefset.WeakSet[_weakrefset._T]"
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_weakrefset.WeakSet"
      }
    }
    parameters {
      name: "other"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[_weakrefset._T]"
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__ge__"
    fully_qualified_name: "_weakrefset.WeakSet.__ge__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "_weakrefset.WeakSet[_weakrefset._T]"
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_weakrefset.WeakSet"
      }
    }
    parameters {
      name: "other"
      type_annotation {
        pretty_printed_name: "typing.Iterable[_weakrefset._T]"
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__gt__"
    fully_qualified_name: "_weakrefset.WeakSet.__gt__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "_weakrefset.WeakSet[_weakrefset._T]"
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_weakrefset.WeakSet"
      }
    }
    parameters {
      name: "other"
      type_annotation {
        pretty_printed_name: "typing.Iterable[_weakrefset._T]"
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__eq__"
    fully_qualified_name: "_weakrefset.WeakSet.__eq__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "_weakrefset.WeakSet[_weakrefset._T]"
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_weakrefset.WeakSet"
      }
    }
    parameters {
      name: "other"
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "symmetric_difference"
    fully_qualified_name: "_weakrefset.WeakSet.symmetric_difference"
    return_annotation {
      pretty_printed_name: "_weakrefset.WeakSet[Union[_weakrefset._S,_weakrefset._T]]"
      args {
        pretty_printed_name: "Union[_weakrefset._S,_weakrefset._T]"
        kind: UNION
        args {
          pretty_printed_name: "_weakrefset._S"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
      }
      fully_qualified_name: "_weakrefset.WeakSet"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_weakrefset.WeakSet[_weakrefset._T]"
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_weakrefset.WeakSet"
      }
    }
    parameters {
      name: "other"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[_weakrefset._S]"
        args {
          pretty_printed_name: "_weakrefset._S"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__xor__"
    fully_qualified_name: "_weakrefset.WeakSet.__xor__"
    return_annotation {
      pretty_printed_name: "_weakrefset.WeakSet[Union[_weakrefset._S,_weakrefset._T]]"
      args {
        pretty_printed_name: "Union[_weakrefset._S,_weakrefset._T]"
        kind: UNION
        args {
          pretty_printed_name: "_weakrefset._S"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
      }
      fully_qualified_name: "_weakrefset.WeakSet"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "_weakrefset.WeakSet[_weakrefset._T]"
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_weakrefset.WeakSet"
      }
    }
    parameters {
      name: "other"
      type_annotation {
        pretty_printed_name: "typing.Iterable[_weakrefset._S]"
        args {
          pretty_printed_name: "_weakrefset._S"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "symmetric_difference_update"
    fully_qualified_name: "_weakrefset.WeakSet.symmetric_difference_update"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_weakrefset.WeakSet[_weakrefset._T]"
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_weakrefset.WeakSet"
      }
    }
    parameters {
      name: "other"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "symmetric_difference_update"
    fully_qualified_name: "_weakrefset.WeakSet.symmetric_difference_update"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_weakrefset.WeakSet[_weakrefset._T]"
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_weakrefset.WeakSet"
      }
    }
    parameters {
      name: "other"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[_weakrefset._T]"
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__ixor__"
    fully_qualified_name: "_weakrefset.WeakSet.__ixor__"
    return_annotation {
      pretty_printed_name: "_weakrefset.WeakSet[Union[_weakrefset._S,_weakrefset._T]]"
      args {
        pretty_printed_name: "Union[_weakrefset._S,_weakrefset._T]"
        kind: UNION
        args {
          pretty_printed_name: "_weakrefset._S"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
      }
      fully_qualified_name: "_weakrefset.WeakSet"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "_weakrefset.WeakSet[_weakrefset._T]"
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_weakrefset.WeakSet"
      }
    }
    parameters {
      name: "other"
      type_annotation {
        pretty_printed_name: "typing.Iterable[_weakrefset._S]"
        args {
          pretty_printed_name: "_weakrefset._S"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__ixor__"
    fully_qualified_name: "_weakrefset.WeakSet.__ixor__"
    return_annotation {
      pretty_printed_name: "UnboundType[Self]"
      kind: UNBOUND
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "_weakrefset.WeakSet[_weakrefset._T]"
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_weakrefset.WeakSet"
      }
    }
    parameters {
      name: "other"
      type_annotation {
        pretty_printed_name: "typing.Iterable[_weakrefset._T]"
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "union"
    fully_qualified_name: "_weakrefset.WeakSet.union"
    return_annotation {
      pretty_printed_name: "_weakrefset.WeakSet[Union[_weakrefset._S,_weakrefset._T]]"
      args {
        pretty_printed_name: "Union[_weakrefset._S,_weakrefset._T]"
        kind: UNION
        args {
          pretty_printed_name: "_weakrefset._S"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
      }
      fully_qualified_name: "_weakrefset.WeakSet"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_weakrefset.WeakSet[_weakrefset._T]"
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_weakrefset.WeakSet"
      }
    }
    parameters {
      name: "other"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[_weakrefset._S]"
        args {
          pretty_printed_name: "_weakrefset._S"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__or__"
    fully_qualified_name: "_weakrefset.WeakSet.__or__"
    return_annotation {
      pretty_printed_name: "_weakrefset.WeakSet[Union[_weakrefset._S,_weakrefset._T]]"
      args {
        pretty_printed_name: "Union[_weakrefset._S,_weakrefset._T]"
        kind: UNION
        args {
          pretty_printed_name: "_weakrefset._S"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
      }
      fully_qualified_name: "_weakrefset.WeakSet"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "_weakrefset.WeakSet[_weakrefset._T]"
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_weakrefset.WeakSet"
      }
    }
    parameters {
      name: "other"
      type_annotation {
        pretty_printed_name: "typing.Iterable[_weakrefset._S]"
        args {
          pretty_printed_name: "_weakrefset._S"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "isdisjoint"
    fully_qualified_name: "_weakrefset.WeakSet.isdisjoint"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_weakrefset.WeakSet[_weakrefset._T]"
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_weakrefset.WeakSet"
      }
    }
    parameters {
      name: "other"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[_weakrefset._T]"
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__class_getitem__"
    fully_qualified_name: "_weakrefset.WeakSet.__class_getitem__"
    return_annotation {
      pretty_printed_name: "types.GenericAlias"
      fully_qualified_name: "types.GenericAlias"
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[_weakrefset.WeakSet[_weakrefset._T]]"
        kind: TYPE
        args {
          pretty_printed_name: "_weakrefset.WeakSet[_weakrefset._T]"
          args {
            pretty_printed_name: "_weakrefset._T"
            kind: TYPE_VAR
          }
          fully_qualified_name: "_weakrefset.WeakSet"
        }
      }
    }
    parameters {
      name: "item"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    is_class_method: true
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "__init__"
    fullname: "_weakrefset.WeakSet.__init__"
    definitions {
      name: "__init__"
      fully_qualified_name: "_weakrefset.WeakSet.__init__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "_weakrefset.WeakSet[_weakrefset._T]"
          args {
            pretty_printed_name: "_weakrefset._T"
            kind: TYPE_VAR
          }
          fully_qualified_name: "_weakrefset.WeakSet"
        }
      }
      parameters {
        name: "data"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "None"
          kind: NONE
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__init__"
      fully_qualified_name: "_weakrefset.WeakSet.__init__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "_weakrefset.WeakSet[_weakrefset._T]"
          args {
            pretty_printed_name: "_weakrefset._T"
            kind: TYPE_VAR
          }
          fully_qualified_name: "_weakrefset.WeakSet"
        }
      }
      parameters {
        name: "data"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "typing.Iterable[_weakrefset._T]"
          args {
            pretty_printed_name: "_weakrefset._T"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  is_generic: true
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "CallableProxyType"
  fully_qualified_name: "_weakref.CallableProxyType"
  super_classes: "builtins.object"
  methods {
    name: "__getattr__"
    fully_qualified_name: "_weakref.CallableProxyType.__getattr__"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "_weakref.CallableProxyType[_weakref._C]"
        args {
          pretty_printed_name: "_weakref._C"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_weakref.CallableProxyType"
      }
    }
    parameters {
      name: "attr"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "27"
  }
  is_generic: true
  valid_for: "27"
}
classes {
  name: "CallableProxyType"
  fully_qualified_name: "_weakref.CallableProxyType"
  super_classes: "builtins.object"
  methods {
    name: "__getattr__"
    fully_qualified_name: "_weakref.CallableProxyType.__getattr__"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "_weakref.CallableProxyType[_weakref._C]"
        args {
          pretty_printed_name: "_weakref._C"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_weakref.CallableProxyType"
      }
    }
    parameters {
      name: "attr"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  has_decorators: true
  is_generic: true
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "__call__"
    fully_qualified_name: "_weakref.CallableProxyType.__call__"
    type_annotation {
      pretty_printed_name: "_weakref._C"
      kind: TYPE_VAR
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "ProxyType"
  fully_qualified_name: "_weakref.ProxyType"
  super_classes: "builtins.object"
  methods {
    name: "__getattr__"
    fully_qualified_name: "_weakref.ProxyType.__getattr__"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "_weakref.ProxyType[_weakref._T]"
        args {
          pretty_printed_name: "_weakref._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_weakref.ProxyType"
      }
    }
    parameters {
      name: "attr"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "27"
  }
  is_generic: true
  valid_for: "27"
}
classes {
  name: "ProxyType"
  fully_qualified_name: "_weakref.ProxyType"
  super_classes: "builtins.object"
  methods {
    name: "__getattr__"
    fully_qualified_name: "_weakref.ProxyType.__getattr__"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "_weakref.ProxyType[_weakref._T]"
        args {
          pretty_printed_name: "_weakref._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_weakref.ProxyType"
      }
    }
    parameters {
      name: "attr"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  has_decorators: true
  is_generic: true
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "ReferenceType"
  fully_qualified_name: "_weakref.ReferenceType"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "_weakref.ReferenceType.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_weakref.ReferenceType[_weakref._T]"
        args {
          pretty_printed_name: "_weakref._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_weakref.ReferenceType"
      }
    }
    parameters {
      name: "o"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_weakref._T"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "callback"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[CallableType[builtins.function],None]"
        kind: UNION
        args {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "__call__"
    fully_qualified_name: "_weakref.ReferenceType.__call__"
    return_annotation {
      pretty_printed_name: "Union[_weakref._T,None]"
      kind: UNION
      args {
        pretty_printed_name: "_weakref._T"
        kind: TYPE_VAR
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_weakref.ReferenceType[_weakref._T]"
        args {
          pretty_printed_name: "_weakref._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_weakref.ReferenceType"
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__hash__"
    fully_qualified_name: "_weakref.ReferenceType.__hash__"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_weakref.ReferenceType[_weakref._T]"
        args {
          pretty_printed_name: "_weakref._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_weakref.ReferenceType"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__new__"
    fully_qualified_name: "_weakref.ReferenceType.__new__"
    return_annotation {
      pretty_printed_name: "UnboundType[Self]"
      kind: UNBOUND
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[_weakref.ReferenceType[_weakref._T]]"
        kind: TYPE
        args {
          pretty_printed_name: "_weakref.ReferenceType[_weakref._T]"
          args {
            pretty_printed_name: "_weakref._T"
            kind: TYPE_VAR
          }
          fully_qualified_name: "_weakref.ReferenceType"
        }
      }
    }
    parameters {
      name: "__o"
      type_annotation {
        pretty_printed_name: "_weakref._T"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "__callback"
      type_annotation {
        pretty_printed_name: "Union[CallableType[builtins.function],None]"
        kind: UNION
        args {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__class_getitem__"
    fully_qualified_name: "_weakref.ReferenceType.__class_getitem__"
    return_annotation {
      pretty_printed_name: "types.GenericAlias"
      fully_qualified_name: "types.GenericAlias"
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[_weakref.ReferenceType[_weakref._T]]"
        kind: TYPE
        args {
          pretty_printed_name: "_weakref.ReferenceType[_weakref._T]"
          args {
            pretty_printed_name: "_weakref._T"
            kind: TYPE_VAR
          }
          fully_qualified_name: "_weakref.ReferenceType"
        }
      }
    }
    parameters {
      name: "item"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    is_class_method: true
    valid_for: "39"
    valid_for: "310"
  }
  is_generic: true
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "__callback__"
    fully_qualified_name: "_weakref.ReferenceType.__callback__"
    type_annotation {
      pretty_printed_name: "CallableType[builtins.function]"
      kind: CALLABLE
      args {
        pretty_printed_name: "builtins.function"
        fully_qualified_name: "builtins.function"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "ReferenceError"
  fully_qualified_name: "builtins.ReferenceError"
  super_classes: "builtins.StandardError"
  valid_for: "27"
}
classes {
  name: "WeakValueDictionary"
  fully_qualified_name: "weakref.WeakValueDictionary"
  super_classes: "typing.MutableMapping"
  methods {
    name: "__len__"
    fully_qualified_name: "weakref.WeakValueDictionary.__len__"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "weakref.WeakValueDictionary[weakref._KT,weakref._VT]"
        args {
          pretty_printed_name: "weakref._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "weakref._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "weakref.WeakValueDictionary"
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__getitem__"
    fully_qualified_name: "weakref.WeakValueDictionary.__getitem__"
    return_annotation {
      pretty_printed_name: "weakref._VT"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "weakref.WeakValueDictionary[weakref._KT,weakref._VT]"
        args {
          pretty_printed_name: "weakref._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "weakref._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "weakref.WeakValueDictionary"
      }
    }
    parameters {
      name: "k"
      type_annotation {
        pretty_printed_name: "weakref._KT"
        kind: TYPE_VAR
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__getitem__"
    fully_qualified_name: "weakref.WeakValueDictionary.__getitem__"
    return_annotation {
      pretty_printed_name: "weakref._VT"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "weakref.WeakValueDictionary[weakref._KT,weakref._VT]"
        args {
          pretty_printed_name: "weakref._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "weakref._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "weakref.WeakValueDictionary"
      }
    }
    parameters {
      name: "key"
      type_annotation {
        pretty_printed_name: "weakref._KT"
        kind: TYPE_VAR
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__setitem__"
    fully_qualified_name: "weakref.WeakValueDictionary.__setitem__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "weakref.WeakValueDictionary[weakref._KT,weakref._VT]"
        args {
          pretty_printed_name: "weakref._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "weakref._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "weakref.WeakValueDictionary"
      }
    }
    parameters {
      name: "k"
      type_annotation {
        pretty_printed_name: "weakref._KT"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "v"
      type_annotation {
        pretty_printed_name: "weakref._VT"
        kind: TYPE_VAR
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__setitem__"
    fully_qualified_name: "weakref.WeakValueDictionary.__setitem__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "weakref.WeakValueDictionary[weakref._KT,weakref._VT]"
        args {
          pretty_printed_name: "weakref._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "weakref._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "weakref.WeakValueDictionary"
      }
    }
    parameters {
      name: "key"
      type_annotation {
        pretty_printed_name: "weakref._KT"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "value"
      type_annotation {
        pretty_printed_name: "weakref._VT"
        kind: TYPE_VAR
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__delitem__"
    fully_qualified_name: "weakref.WeakValueDictionary.__delitem__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "weakref.WeakValueDictionary[weakref._KT,weakref._VT]"
        args {
          pretty_printed_name: "weakref._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "weakref._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "weakref.WeakValueDictionary"
      }
    }
    parameters {
      name: "v"
      type_annotation {
        pretty_printed_name: "weakref._KT"
        kind: TYPE_VAR
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__delitem__"
    fully_qualified_name: "weakref.WeakValueDictionary.__delitem__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "weakref.WeakValueDictionary[weakref._KT,weakref._VT]"
        args {
          pretty_printed_name: "weakref._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "weakref._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "weakref.WeakValueDictionary"
      }
    }
    parameters {
      name: "key"
      type_annotation {
        pretty_printed_name: "weakref._KT"
        kind: TYPE_VAR
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "has_key"
    fully_qualified_name: "weakref.WeakValueDictionary.has_key"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "weakref.WeakValueDictionary[weakref._KT,weakref._VT]"
        args {
          pretty_printed_name: "weakref._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "weakref._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "weakref.WeakValueDictionary"
      }
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__contains__"
    fully_qualified_name: "weakref.WeakValueDictionary.__contains__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "weakref.WeakValueDictionary[weakref._KT,weakref._VT]"
        args {
          pretty_printed_name: "weakref._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "weakref._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "weakref.WeakValueDictionary"
      }
    }
    parameters {
      name: "o"
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__contains__"
    fully_qualified_name: "weakref.WeakValueDictionary.__contains__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "weakref.WeakValueDictionary[weakref._KT,weakref._VT]"
        args {
          pretty_printed_name: "weakref._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "weakref._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "weakref.WeakValueDictionary"
      }
    }
    parameters {
      name: "key"
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__iter__"
    fully_qualified_name: "weakref.WeakValueDictionary.__iter__"
    return_annotation {
      pretty_printed_name: "typing.Iterator[weakref._KT]"
      args {
        pretty_printed_name: "weakref._KT"
        kind: TYPE_VAR
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "weakref.WeakValueDictionary[weakref._KT,weakref._VT]"
        args {
          pretty_printed_name: "weakref._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "weakref._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "weakref.WeakValueDictionary"
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__str__"
    fully_qualified_name: "weakref.WeakValueDictionary.__str__"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "weakref.WeakValueDictionary[weakref._KT,weakref._VT]"
        args {
          pretty_printed_name: "weakref._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "weakref._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "weakref.WeakValueDictionary"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "copy"
    fully_qualified_name: "weakref.WeakValueDictionary.copy"
    return_annotation {
      pretty_printed_name: "weakref.WeakValueDictionary[weakref._KT,weakref._VT]"
      args {
        pretty_printed_name: "weakref._KT"
        kind: TYPE_VAR
      }
      args {
        pretty_printed_name: "weakref._VT"
        kind: TYPE_VAR
      }
      fully_qualified_name: "weakref.WeakValueDictionary"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "weakref.WeakValueDictionary[weakref._KT,weakref._VT]"
        args {
          pretty_printed_name: "weakref._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "weakref._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "weakref.WeakValueDictionary"
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "keys"
    fully_qualified_name: "weakref.WeakValueDictionary.keys"
    return_annotation {
      pretty_printed_name: "builtins.list[weakref._KT]"
      args {
        pretty_printed_name: "weakref._KT"
        kind: TYPE_VAR
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "weakref.WeakValueDictionary[weakref._KT,weakref._VT]"
        args {
          pretty_printed_name: "weakref._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "weakref._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "weakref.WeakValueDictionary"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "keys"
    fully_qualified_name: "weakref.WeakValueDictionary.keys"
    return_annotation {
      pretty_printed_name: "typing.Iterator[weakref._KT]"
      args {
        pretty_printed_name: "weakref._KT"
        kind: TYPE_VAR
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "weakref.WeakValueDictionary[weakref._KT,weakref._VT]"
        args {
          pretty_printed_name: "weakref._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "weakref._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "weakref.WeakValueDictionary"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "values"
    fully_qualified_name: "weakref.WeakValueDictionary.values"
    return_annotation {
      pretty_printed_name: "builtins.list[weakref._VT]"
      args {
        pretty_printed_name: "weakref._VT"
        kind: TYPE_VAR
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "weakref.WeakValueDictionary[weakref._KT,weakref._VT]"
        args {
          pretty_printed_name: "weakref._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "weakref._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "weakref.WeakValueDictionary"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "values"
    fully_qualified_name: "weakref.WeakValueDictionary.values"
    return_annotation {
      pretty_printed_name: "typing.Iterator[weakref._VT]"
      args {
        pretty_printed_name: "weakref._VT"
        kind: TYPE_VAR
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "weakref.WeakValueDictionary[weakref._KT,weakref._VT]"
        args {
          pretty_printed_name: "weakref._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "weakref._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "weakref.WeakValueDictionary"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "items"
    fully_qualified_name: "weakref.WeakValueDictionary.items"
    return_annotation {
      pretty_printed_name: "builtins.list[Tuple[weakref._KT,weakref._VT]]"
      args {
        pretty_printed_name: "Tuple[weakref._KT,weakref._VT]"
        kind: TUPLE
        args {
          pretty_printed_name: "weakref._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "weakref._VT"
          kind: TYPE_VAR
        }
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "weakref.WeakValueDictionary[weakref._KT,weakref._VT]"
        args {
          pretty_printed_name: "weakref._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "weakref._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "weakref.WeakValueDictionary"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "items"
    fully_qualified_name: "weakref.WeakValueDictionary.items"
    return_annotation {
      pretty_printed_name: "typing.Iterator[Tuple[weakref._KT,weakref._VT]]"
      args {
        pretty_printed_name: "Tuple[weakref._KT,weakref._VT]"
        kind: TUPLE
        args {
          pretty_printed_name: "weakref._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "weakref._VT"
          kind: TYPE_VAR
        }
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "weakref.WeakValueDictionary[weakref._KT,weakref._VT]"
        args {
          pretty_printed_name: "weakref._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "weakref._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "weakref.WeakValueDictionary"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "iterkeys"
    fully_qualified_name: "weakref.WeakValueDictionary.iterkeys"
    return_annotation {
      pretty_printed_name: "typing.Iterator[weakref._KT]"
      args {
        pretty_printed_name: "weakref._KT"
        kind: TYPE_VAR
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "weakref.WeakValueDictionary[weakref._KT,weakref._VT]"
        args {
          pretty_printed_name: "weakref._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "weakref._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "weakref.WeakValueDictionary"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "itervalues"
    fully_qualified_name: "weakref.WeakValueDictionary.itervalues"
    return_annotation {
      pretty_printed_name: "typing.Iterator[weakref._VT]"
      args {
        pretty_printed_name: "weakref._VT"
        kind: TYPE_VAR
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "weakref.WeakValueDictionary[weakref._KT,weakref._VT]"
        args {
          pretty_printed_name: "weakref._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "weakref._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "weakref.WeakValueDictionary"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "iteritems"
    fully_qualified_name: "weakref.WeakValueDictionary.iteritems"
    return_annotation {
      pretty_printed_name: "typing.Iterator[Tuple[weakref._KT,weakref._VT]]"
      args {
        pretty_printed_name: "Tuple[weakref._KT,weakref._VT]"
        kind: TUPLE
        args {
          pretty_printed_name: "weakref._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "weakref._VT"
          kind: TYPE_VAR
        }
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "weakref.WeakValueDictionary[weakref._KT,weakref._VT]"
        args {
          pretty_printed_name: "weakref._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "weakref._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "weakref.WeakValueDictionary"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "itervaluerefs"
    fully_qualified_name: "weakref.WeakValueDictionary.itervaluerefs"
    return_annotation {
      pretty_printed_name: "typing.Iterator[weakref.KeyedRef[weakref._KT,weakref._VT]]"
      args {
        pretty_printed_name: "weakref.KeyedRef[weakref._KT,weakref._VT]"
        args {
          pretty_printed_name: "weakref._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "weakref._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "weakref.KeyedRef"
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "weakref.WeakValueDictionary[weakref._KT,weakref._VT]"
        args {
          pretty_printed_name: "weakref._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "weakref._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "weakref.WeakValueDictionary"
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "valuerefs"
    fully_qualified_name: "weakref.WeakValueDictionary.valuerefs"
    return_annotation {
      pretty_printed_name: "builtins.list[weakref.KeyedRef[weakref._KT,weakref._VT]]"
      args {
        pretty_printed_name: "weakref.KeyedRef[weakref._KT,weakref._VT]"
        args {
          pretty_printed_name: "weakref._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "weakref._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "weakref.KeyedRef"
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "weakref.WeakValueDictionary[weakref._KT,weakref._VT]"
        args {
          pretty_printed_name: "weakref._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "weakref._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "weakref.WeakValueDictionary"
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__deepcopy__"
    fully_qualified_name: "weakref.WeakValueDictionary.__deepcopy__"
    return_annotation {
      pretty_printed_name: "UnboundType[Self]"
      kind: UNBOUND
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "weakref.WeakValueDictionary[weakref._KT,weakref._VT]"
        args {
          pretty_printed_name: "weakref._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "weakref._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "weakref.WeakValueDictionary"
      }
    }
    parameters {
      name: "memo"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "setdefault"
    fully_qualified_name: "weakref.WeakValueDictionary.setdefault"
    return_annotation {
      pretty_printed_name: "weakref._VT"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "weakref.WeakValueDictionary[weakref._KT,weakref._VT]"
        args {
          pretty_printed_name: "weakref._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "weakref._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "weakref.WeakValueDictionary"
      }
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "weakref._KT"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "default"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "weakref._VT"
        kind: TYPE_VAR
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__or__"
    fully_qualified_name: "weakref.WeakValueDictionary.__or__"
    return_annotation {
      pretty_printed_name: "weakref.WeakValueDictionary[Union[weakref._KT,weakref._T1],Union[weakref._VT,weakref._T2]]"
      args {
        pretty_printed_name: "Union[weakref._KT,weakref._T1]"
        kind: UNION
        args {
          pretty_printed_name: "weakref._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "weakref._T1"
          kind: TYPE_VAR
        }
      }
      args {
        pretty_printed_name: "Union[weakref._VT,weakref._T2]"
        kind: UNION
        args {
          pretty_printed_name: "weakref._VT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "weakref._T2"
          kind: TYPE_VAR
        }
      }
      fully_qualified_name: "weakref.WeakValueDictionary"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "weakref.WeakValueDictionary[weakref._KT,weakref._VT]"
        args {
          pretty_printed_name: "weakref._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "weakref._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "weakref.WeakValueDictionary"
      }
    }
    parameters {
      name: "other"
      type_annotation {
        pretty_printed_name: "typing.Mapping[weakref._T1,weakref._T2]"
        args {
          pretty_printed_name: "weakref._T1"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "weakref._T2"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Mapping"
      }
    }
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__ror__"
    fully_qualified_name: "weakref.WeakValueDictionary.__ror__"
    return_annotation {
      pretty_printed_name: "weakref.WeakValueDictionary[Union[weakref._KT,weakref._T1],Union[weakref._VT,weakref._T2]]"
      args {
        pretty_printed_name: "Union[weakref._KT,weakref._T1]"
        kind: UNION
        args {
          pretty_printed_name: "weakref._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "weakref._T1"
          kind: TYPE_VAR
        }
      }
      args {
        pretty_printed_name: "Union[weakref._VT,weakref._T2]"
        kind: UNION
        args {
          pretty_printed_name: "weakref._VT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "weakref._T2"
          kind: TYPE_VAR
        }
      }
      fully_qualified_name: "weakref.WeakValueDictionary"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "weakref.WeakValueDictionary[weakref._KT,weakref._VT]"
        args {
          pretty_printed_name: "weakref._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "weakref._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "weakref.WeakValueDictionary"
      }
    }
    parameters {
      name: "other"
      type_annotation {
        pretty_printed_name: "typing.Mapping[weakref._T1,weakref._T2]"
        args {
          pretty_printed_name: "weakref._T1"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "weakref._T2"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Mapping"
      }
    }
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "__init__"
    fullname: "weakref.WeakValueDictionary.__init__"
    definitions {
      name: "__init__"
      fully_qualified_name: "weakref.WeakValueDictionary.__init__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "weakref.WeakValueDictionary[weakref._KT,weakref._VT]"
          args {
            pretty_printed_name: "weakref._KT"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "weakref._VT"
            kind: TYPE_VAR
          }
          fully_qualified_name: "weakref.WeakValueDictionary"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__init__"
      fully_qualified_name: "weakref.WeakValueDictionary.__init__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "weakref.WeakValueDictionary[weakref._KT,weakref._VT]"
          args {
            pretty_printed_name: "weakref._KT"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "weakref._VT"
            kind: TYPE_VAR
          }
          fully_qualified_name: "weakref.WeakValueDictionary"
        }
      }
      parameters {
        name: "__other"
        type_annotation {
          pretty_printed_name: "Union[typing.Mapping[weakref._KT,weakref._VT],typing.Iterable[Tuple[weakref._KT,weakref._VT]]]"
          kind: UNION
          args {
            pretty_printed_name: "typing.Mapping[weakref._KT,weakref._VT]"
            args {
              pretty_printed_name: "weakref._KT"
              kind: TYPE_VAR
            }
            args {
              pretty_printed_name: "weakref._VT"
              kind: TYPE_VAR
            }
            fully_qualified_name: "typing.Mapping"
          }
          args {
            pretty_printed_name: "typing.Iterable[Tuple[weakref._KT,weakref._VT]]"
            args {
              pretty_printed_name: "Tuple[weakref._KT,weakref._VT]"
              kind: TUPLE
              args {
                pretty_printed_name: "weakref._KT"
                kind: TYPE_VAR
              }
              args {
                pretty_printed_name: "weakref._VT"
                kind: TYPE_VAR
              }
            }
            fully_qualified_name: "typing.Iterable"
          }
        }
      }
      parameters {
        name: "kwargs"
        kind: VAR_KEYWORD
        type_annotation {
          pretty_printed_name: "weakref._VT"
          kind: TYPE_VAR
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "27"
  }
  overloaded_methods {
    name: "__init__"
    fullname: "weakref.WeakValueDictionary.__init__"
    definitions {
      name: "__init__"
      fully_qualified_name: "weakref.WeakValueDictionary.__init__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "weakref.WeakValueDictionary[weakref._KT,weakref._VT]"
          args {
            pretty_printed_name: "weakref._KT"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "weakref._VT"
            kind: TYPE_VAR
          }
          fully_qualified_name: "weakref.WeakValueDictionary"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__init__"
      fully_qualified_name: "weakref.WeakValueDictionary.__init__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "weakref.WeakValueDictionary[weakref._KT,weakref._VT]"
          args {
            pretty_printed_name: "weakref._KT"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "weakref._VT"
            kind: TYPE_VAR
          }
          fully_qualified_name: "weakref.WeakValueDictionary"
        }
      }
      parameters {
        name: "__other"
        type_annotation {
          pretty_printed_name: "Union[typing.Mapping[weakref._KT,weakref._VT],typing.Iterable[Tuple[weakref._KT,weakref._VT]]]"
          kind: UNION
          args {
            pretty_printed_name: "typing.Mapping[weakref._KT,weakref._VT]"
            args {
              pretty_printed_name: "weakref._KT"
              kind: TYPE_VAR
            }
            args {
              pretty_printed_name: "weakref._VT"
              kind: TYPE_VAR
            }
            fully_qualified_name: "typing.Mapping"
          }
          args {
            pretty_printed_name: "typing.Iterable[Tuple[weakref._KT,weakref._VT]]"
            args {
              pretty_printed_name: "Tuple[weakref._KT,weakref._VT]"
              kind: TUPLE
              args {
                pretty_printed_name: "weakref._KT"
                kind: TYPE_VAR
              }
              args {
                pretty_printed_name: "weakref._VT"
                kind: TYPE_VAR
              }
            }
            fully_qualified_name: "typing.Iterable"
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__init__"
      fully_qualified_name: "weakref.WeakValueDictionary.__init__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "weakref.WeakValueDictionary[builtins.str,weakref._VT]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "weakref._VT"
            kind: TYPE_VAR
          }
          fully_qualified_name: "weakref.WeakValueDictionary"
        }
      }
      parameters {
        name: "__other"
        type_annotation {
          pretty_printed_name: "Union[typing.Mapping[builtins.str,weakref._VT],typing.Iterable[Tuple[builtins.str,weakref._VT]]]"
          kind: UNION
          args {
            pretty_printed_name: "typing.Mapping[builtins.str,weakref._VT]"
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "weakref._VT"
              kind: TYPE_VAR
            }
            fully_qualified_name: "typing.Mapping"
          }
          args {
            pretty_printed_name: "typing.Iterable[Tuple[builtins.str,weakref._VT]]"
            args {
              pretty_printed_name: "Tuple[builtins.str,weakref._VT]"
              kind: TUPLE
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "weakref._VT"
                kind: TYPE_VAR
              }
            }
            fully_qualified_name: "typing.Iterable"
          }
        }
        has_default: true
      }
      parameters {
        name: "kwargs"
        kind: VAR_KEYWORD
        type_annotation {
          pretty_printed_name: "weakref._VT"
          kind: TYPE_VAR
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "pop"
    fullname: "weakref.WeakValueDictionary.pop"
    definitions {
      name: "pop"
      fully_qualified_name: "weakref.WeakValueDictionary.pop"
      return_annotation {
        pretty_printed_name: "weakref._VT"
        kind: TYPE_VAR
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "weakref.WeakValueDictionary[weakref._KT,weakref._VT]"
          args {
            pretty_printed_name: "weakref._KT"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "weakref._VT"
            kind: TYPE_VAR
          }
          fully_qualified_name: "weakref.WeakValueDictionary"
        }
      }
      parameters {
        name: "key"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "weakref._KT"
          kind: TYPE_VAR
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "pop"
      fully_qualified_name: "weakref.WeakValueDictionary.pop"
      return_annotation {
        pretty_printed_name: "Union[weakref._VT,weakref._T]"
        kind: UNION
        args {
          pretty_printed_name: "weakref._VT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "weakref._T"
          kind: TYPE_VAR
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "weakref.WeakValueDictionary[weakref._KT,weakref._VT]"
          args {
            pretty_printed_name: "weakref._KT"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "weakref._VT"
            kind: TYPE_VAR
          }
          fully_qualified_name: "weakref.WeakValueDictionary"
        }
      }
      parameters {
        name: "key"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "weakref._KT"
          kind: TYPE_VAR
        }
      }
      parameters {
        name: "default"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[weakref._VT,weakref._T]"
          kind: UNION
          args {
            pretty_printed_name: "weakref._VT"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "weakref._T"
            kind: TYPE_VAR
          }
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "__ior__"
    fullname: "weakref.WeakValueDictionary.__ior__"
    definitions {
      name: "__ior__"
      fully_qualified_name: "weakref.WeakValueDictionary.__ior__"
      return_annotation {
        pretty_printed_name: "UnboundType[Self]"
        kind: UNBOUND
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "weakref.WeakValueDictionary[weakref._KT,weakref._VT]"
          args {
            pretty_printed_name: "weakref._KT"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "weakref._VT"
            kind: TYPE_VAR
          }
          fully_qualified_name: "weakref.WeakValueDictionary"
        }
      }
      parameters {
        name: "other"
        type_annotation {
          pretty_printed_name: "_typeshed.SupportsKeysAndGetItem[weakref._KT,weakref._VT]"
          args {
            pretty_printed_name: "weakref._KT"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "weakref._VT"
            kind: TYPE_VAR
          }
          fully_qualified_name: "_typeshed.SupportsKeysAndGetItem"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__ior__"
      fully_qualified_name: "weakref.WeakValueDictionary.__ior__"
      return_annotation {
        pretty_printed_name: "UnboundType[Self]"
        kind: UNBOUND
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "weakref.WeakValueDictionary[weakref._KT,weakref._VT]"
          args {
            pretty_printed_name: "weakref._KT"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "weakref._VT"
            kind: TYPE_VAR
          }
          fully_qualified_name: "weakref.WeakValueDictionary"
        }
      }
      parameters {
        name: "other"
        type_annotation {
          pretty_printed_name: "typing.Iterable[Tuple[weakref._KT,weakref._VT]]"
          args {
            pretty_printed_name: "Tuple[weakref._KT,weakref._VT]"
            kind: TUPLE
            args {
              pretty_printed_name: "weakref._KT"
              kind: TYPE_VAR
            }
            args {
              pretty_printed_name: "weakref._VT"
              kind: TYPE_VAR
            }
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "39"
    valid_for: "310"
  }
  is_generic: true
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "__copy__"
    fully_qualified_name: "weakref.WeakValueDictionary.__copy__"
    type_annotation {
      pretty_printed_name: "CallableType[builtins.function]"
      kind: CALLABLE
      args {
        pretty_printed_name: "builtins.function"
        fully_qualified_name: "builtins.function"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "KeyedRef"
  fully_qualified_name: "weakref.KeyedRef"
  super_classes: "_weakref.ReferenceType"
  methods {
    name: "__new__"
    fully_qualified_name: "weakref.KeyedRef.__new__"
    return_annotation {
      pretty_printed_name: "weakref.KeyedRef[weakref._KT,weakref._T]"
      args {
        pretty_printed_name: "weakref._KT"
        kind: TYPE_VAR
      }
      args {
        pretty_printed_name: "weakref._T"
        kind: TYPE_VAR
      }
      fully_qualified_name: "weakref.KeyedRef"
    }
    parameters {
      name: "type"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[weakref.KeyedRef[weakref._KT,weakref._T]]"
        kind: TYPE
        args {
          pretty_printed_name: "weakref.KeyedRef[weakref._KT,weakref._T]"
          args {
            pretty_printed_name: "weakref._KT"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "weakref._T"
            kind: TYPE_VAR
          }
          fully_qualified_name: "weakref.KeyedRef"
        }
      }
    }
    parameters {
      name: "ob"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "weakref._T"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "callback"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "weakref._KT"
        kind: TYPE_VAR
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__new__"
    fully_qualified_name: "weakref.KeyedRef.__new__"
    return_annotation {
      pretty_printed_name: "UnboundType[Self]"
      kind: UNBOUND
    }
    parameters {
      name: "type"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[weakref.KeyedRef[weakref._KT,weakref._T]]"
        kind: TYPE
        args {
          pretty_printed_name: "weakref.KeyedRef[weakref._KT,weakref._T]"
          args {
            pretty_printed_name: "weakref._KT"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "weakref._T"
            kind: TYPE_VAR
          }
          fully_qualified_name: "weakref.KeyedRef"
        }
      }
    }
    parameters {
      name: "ob"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "weakref._T"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "callback"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "weakref._KT"
        kind: TYPE_VAR
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__init__"
    fully_qualified_name: "weakref.KeyedRef.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "weakref.KeyedRef[weakref._KT,weakref._T]"
        args {
          pretty_printed_name: "weakref._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "weakref._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "weakref.KeyedRef"
      }
    }
    parameters {
      name: "ob"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "weakref._T"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "callback"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "weakref._KT"
        kind: TYPE_VAR
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  is_generic: true
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "key"
    fully_qualified_name: "weakref.KeyedRef.key"
    type_annotation {
      pretty_printed_name: "weakref._KT"
      kind: TYPE_VAR
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "WeakKeyDictionary"
  fully_qualified_name: "weakref.WeakKeyDictionary"
  super_classes: "typing.MutableMapping"
  methods {
    name: "__len__"
    fully_qualified_name: "weakref.WeakKeyDictionary.__len__"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "weakref.WeakKeyDictionary[weakref._KT,weakref._VT]"
        args {
          pretty_printed_name: "weakref._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "weakref._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "weakref.WeakKeyDictionary"
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__getitem__"
    fully_qualified_name: "weakref.WeakKeyDictionary.__getitem__"
    return_annotation {
      pretty_printed_name: "weakref._VT"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "weakref.WeakKeyDictionary[weakref._KT,weakref._VT]"
        args {
          pretty_printed_name: "weakref._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "weakref._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "weakref.WeakKeyDictionary"
      }
    }
    parameters {
      name: "k"
      type_annotation {
        pretty_printed_name: "weakref._KT"
        kind: TYPE_VAR
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__getitem__"
    fully_qualified_name: "weakref.WeakKeyDictionary.__getitem__"
    return_annotation {
      pretty_printed_name: "weakref._VT"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "weakref.WeakKeyDictionary[weakref._KT,weakref._VT]"
        args {
          pretty_printed_name: "weakref._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "weakref._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "weakref.WeakKeyDictionary"
      }
    }
    parameters {
      name: "key"
      type_annotation {
        pretty_printed_name: "weakref._KT"
        kind: TYPE_VAR
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__setitem__"
    fully_qualified_name: "weakref.WeakKeyDictionary.__setitem__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "weakref.WeakKeyDictionary[weakref._KT,weakref._VT]"
        args {
          pretty_printed_name: "weakref._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "weakref._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "weakref.WeakKeyDictionary"
      }
    }
    parameters {
      name: "k"
      type_annotation {
        pretty_printed_name: "weakref._KT"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "v"
      type_annotation {
        pretty_printed_name: "weakref._VT"
        kind: TYPE_VAR
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__setitem__"
    fully_qualified_name: "weakref.WeakKeyDictionary.__setitem__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "weakref.WeakKeyDictionary[weakref._KT,weakref._VT]"
        args {
          pretty_printed_name: "weakref._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "weakref._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "weakref.WeakKeyDictionary"
      }
    }
    parameters {
      name: "key"
      type_annotation {
        pretty_printed_name: "weakref._KT"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "value"
      type_annotation {
        pretty_printed_name: "weakref._VT"
        kind: TYPE_VAR
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__delitem__"
    fully_qualified_name: "weakref.WeakKeyDictionary.__delitem__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "weakref.WeakKeyDictionary[weakref._KT,weakref._VT]"
        args {
          pretty_printed_name: "weakref._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "weakref._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "weakref.WeakKeyDictionary"
      }
    }
    parameters {
      name: "v"
      type_annotation {
        pretty_printed_name: "weakref._KT"
        kind: TYPE_VAR
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__delitem__"
    fully_qualified_name: "weakref.WeakKeyDictionary.__delitem__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "weakref.WeakKeyDictionary[weakref._KT,weakref._VT]"
        args {
          pretty_printed_name: "weakref._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "weakref._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "weakref.WeakKeyDictionary"
      }
    }
    parameters {
      name: "key"
      type_annotation {
        pretty_printed_name: "weakref._KT"
        kind: TYPE_VAR
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "has_key"
    fully_qualified_name: "weakref.WeakKeyDictionary.has_key"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "weakref.WeakKeyDictionary[weakref._KT,weakref._VT]"
        args {
          pretty_printed_name: "weakref._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "weakref._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "weakref.WeakKeyDictionary"
      }
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__contains__"
    fully_qualified_name: "weakref.WeakKeyDictionary.__contains__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "weakref.WeakKeyDictionary[weakref._KT,weakref._VT]"
        args {
          pretty_printed_name: "weakref._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "weakref._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "weakref.WeakKeyDictionary"
      }
    }
    parameters {
      name: "o"
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__contains__"
    fully_qualified_name: "weakref.WeakKeyDictionary.__contains__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "weakref.WeakKeyDictionary[weakref._KT,weakref._VT]"
        args {
          pretty_printed_name: "weakref._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "weakref._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "weakref.WeakKeyDictionary"
      }
    }
    parameters {
      name: "key"
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__iter__"
    fully_qualified_name: "weakref.WeakKeyDictionary.__iter__"
    return_annotation {
      pretty_printed_name: "typing.Iterator[weakref._KT]"
      args {
        pretty_printed_name: "weakref._KT"
        kind: TYPE_VAR
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "weakref.WeakKeyDictionary[weakref._KT,weakref._VT]"
        args {
          pretty_printed_name: "weakref._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "weakref._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "weakref.WeakKeyDictionary"
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__str__"
    fully_qualified_name: "weakref.WeakKeyDictionary.__str__"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "weakref.WeakKeyDictionary[weakref._KT,weakref._VT]"
        args {
          pretty_printed_name: "weakref._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "weakref._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "weakref.WeakKeyDictionary"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "copy"
    fully_qualified_name: "weakref.WeakKeyDictionary.copy"
    return_annotation {
      pretty_printed_name: "weakref.WeakKeyDictionary[weakref._KT,weakref._VT]"
      args {
        pretty_printed_name: "weakref._KT"
        kind: TYPE_VAR
      }
      args {
        pretty_printed_name: "weakref._VT"
        kind: TYPE_VAR
      }
      fully_qualified_name: "weakref.WeakKeyDictionary"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "weakref.WeakKeyDictionary[weakref._KT,weakref._VT]"
        args {
          pretty_printed_name: "weakref._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "weakref._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "weakref.WeakKeyDictionary"
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "keys"
    fully_qualified_name: "weakref.WeakKeyDictionary.keys"
    return_annotation {
      pretty_printed_name: "builtins.list[weakref._KT]"
      args {
        pretty_printed_name: "weakref._KT"
        kind: TYPE_VAR
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "weakref.WeakKeyDictionary[weakref._KT,weakref._VT]"
        args {
          pretty_printed_name: "weakref._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "weakref._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "weakref.WeakKeyDictionary"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "keys"
    fully_qualified_name: "weakref.WeakKeyDictionary.keys"
    return_annotation {
      pretty_printed_name: "typing.Iterator[weakref._KT]"
      args {
        pretty_printed_name: "weakref._KT"
        kind: TYPE_VAR
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "weakref.WeakKeyDictionary[weakref._KT,weakref._VT]"
        args {
          pretty_printed_name: "weakref._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "weakref._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "weakref.WeakKeyDictionary"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "values"
    fully_qualified_name: "weakref.WeakKeyDictionary.values"
    return_annotation {
      pretty_printed_name: "builtins.list[weakref._VT]"
      args {
        pretty_printed_name: "weakref._VT"
        kind: TYPE_VAR
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "weakref.WeakKeyDictionary[weakref._KT,weakref._VT]"
        args {
          pretty_printed_name: "weakref._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "weakref._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "weakref.WeakKeyDictionary"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "values"
    fully_qualified_name: "weakref.WeakKeyDictionary.values"
    return_annotation {
      pretty_printed_name: "typing.Iterator[weakref._VT]"
      args {
        pretty_printed_name: "weakref._VT"
        kind: TYPE_VAR
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "weakref.WeakKeyDictionary[weakref._KT,weakref._VT]"
        args {
          pretty_printed_name: "weakref._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "weakref._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "weakref.WeakKeyDictionary"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "items"
    fully_qualified_name: "weakref.WeakKeyDictionary.items"
    return_annotation {
      pretty_printed_name: "builtins.list[Tuple[weakref._KT,weakref._VT]]"
      args {
        pretty_printed_name: "Tuple[weakref._KT,weakref._VT]"
        kind: TUPLE
        args {
          pretty_printed_name: "weakref._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "weakref._VT"
          kind: TYPE_VAR
        }
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "weakref.WeakKeyDictionary[weakref._KT,weakref._VT]"
        args {
          pretty_printed_name: "weakref._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "weakref._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "weakref.WeakKeyDictionary"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "items"
    fully_qualified_name: "weakref.WeakKeyDictionary.items"
    return_annotation {
      pretty_printed_name: "typing.Iterator[Tuple[weakref._KT,weakref._VT]]"
      args {
        pretty_printed_name: "Tuple[weakref._KT,weakref._VT]"
        kind: TUPLE
        args {
          pretty_printed_name: "weakref._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "weakref._VT"
          kind: TYPE_VAR
        }
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "weakref.WeakKeyDictionary[weakref._KT,weakref._VT]"
        args {
          pretty_printed_name: "weakref._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "weakref._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "weakref.WeakKeyDictionary"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "iterkeys"
    fully_qualified_name: "weakref.WeakKeyDictionary.iterkeys"
    return_annotation {
      pretty_printed_name: "typing.Iterator[weakref._KT]"
      args {
        pretty_printed_name: "weakref._KT"
        kind: TYPE_VAR
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "weakref.WeakKeyDictionary[weakref._KT,weakref._VT]"
        args {
          pretty_printed_name: "weakref._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "weakref._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "weakref.WeakKeyDictionary"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "itervalues"
    fully_qualified_name: "weakref.WeakKeyDictionary.itervalues"
    return_annotation {
      pretty_printed_name: "typing.Iterator[weakref._VT]"
      args {
        pretty_printed_name: "weakref._VT"
        kind: TYPE_VAR
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "weakref.WeakKeyDictionary[weakref._KT,weakref._VT]"
        args {
          pretty_printed_name: "weakref._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "weakref._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "weakref.WeakKeyDictionary"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "iteritems"
    fully_qualified_name: "weakref.WeakKeyDictionary.iteritems"
    return_annotation {
      pretty_printed_name: "typing.Iterator[Tuple[weakref._KT,weakref._VT]]"
      args {
        pretty_printed_name: "Tuple[weakref._KT,weakref._VT]"
        kind: TUPLE
        args {
          pretty_printed_name: "weakref._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "weakref._VT"
          kind: TYPE_VAR
        }
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "weakref.WeakKeyDictionary[weakref._KT,weakref._VT]"
        args {
          pretty_printed_name: "weakref._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "weakref._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "weakref.WeakKeyDictionary"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "iterkeyrefs"
    fully_qualified_name: "weakref.WeakKeyDictionary.iterkeyrefs"
    return_annotation {
      pretty_printed_name: "typing.Iterator[_weakref.ReferenceType[weakref._KT]]"
      args {
        pretty_printed_name: "_weakref.ReferenceType[weakref._KT]"
        args {
          pretty_printed_name: "weakref._KT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_weakref.ReferenceType"
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "weakref.WeakKeyDictionary[weakref._KT,weakref._VT]"
        args {
          pretty_printed_name: "weakref._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "weakref._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "weakref.WeakKeyDictionary"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "keyrefs"
    fully_qualified_name: "weakref.WeakKeyDictionary.keyrefs"
    return_annotation {
      pretty_printed_name: "builtins.list[_weakref.ReferenceType[weakref._KT]]"
      args {
        pretty_printed_name: "_weakref.ReferenceType[weakref._KT]"
        args {
          pretty_printed_name: "weakref._KT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_weakref.ReferenceType"
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "weakref.WeakKeyDictionary[weakref._KT,weakref._VT]"
        args {
          pretty_printed_name: "weakref._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "weakref._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "weakref.WeakKeyDictionary"
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__deepcopy__"
    fully_qualified_name: "weakref.WeakKeyDictionary.__deepcopy__"
    return_annotation {
      pretty_printed_name: "UnboundType[Self]"
      kind: UNBOUND
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "weakref.WeakKeyDictionary[weakref._KT,weakref._VT]"
        args {
          pretty_printed_name: "weakref._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "weakref._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "weakref.WeakKeyDictionary"
      }
    }
    parameters {
      name: "memo"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__or__"
    fully_qualified_name: "weakref.WeakKeyDictionary.__or__"
    return_annotation {
      pretty_printed_name: "weakref.WeakKeyDictionary[Union[weakref._KT,weakref._T1],Union[weakref._VT,weakref._T2]]"
      args {
        pretty_printed_name: "Union[weakref._KT,weakref._T1]"
        kind: UNION
        args {
          pretty_printed_name: "weakref._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "weakref._T1"
          kind: TYPE_VAR
        }
      }
      args {
        pretty_printed_name: "Union[weakref._VT,weakref._T2]"
        kind: UNION
        args {
          pretty_printed_name: "weakref._VT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "weakref._T2"
          kind: TYPE_VAR
        }
      }
      fully_qualified_name: "weakref.WeakKeyDictionary"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "weakref.WeakKeyDictionary[weakref._KT,weakref._VT]"
        args {
          pretty_printed_name: "weakref._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "weakref._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "weakref.WeakKeyDictionary"
      }
    }
    parameters {
      name: "other"
      type_annotation {
        pretty_printed_name: "typing.Mapping[weakref._T1,weakref._T2]"
        args {
          pretty_printed_name: "weakref._T1"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "weakref._T2"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Mapping"
      }
    }
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__ror__"
    fully_qualified_name: "weakref.WeakKeyDictionary.__ror__"
    return_annotation {
      pretty_printed_name: "weakref.WeakKeyDictionary[Union[weakref._KT,weakref._T1],Union[weakref._VT,weakref._T2]]"
      args {
        pretty_printed_name: "Union[weakref._KT,weakref._T1]"
        kind: UNION
        args {
          pretty_printed_name: "weakref._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "weakref._T1"
          kind: TYPE_VAR
        }
      }
      args {
        pretty_printed_name: "Union[weakref._VT,weakref._T2]"
        kind: UNION
        args {
          pretty_printed_name: "weakref._VT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "weakref._T2"
          kind: TYPE_VAR
        }
      }
      fully_qualified_name: "weakref.WeakKeyDictionary"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "weakref.WeakKeyDictionary[weakref._KT,weakref._VT]"
        args {
          pretty_printed_name: "weakref._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "weakref._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "weakref.WeakKeyDictionary"
      }
    }
    parameters {
      name: "other"
      type_annotation {
        pretty_printed_name: "typing.Mapping[weakref._T1,weakref._T2]"
        args {
          pretty_printed_name: "weakref._T1"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "weakref._T2"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Mapping"
      }
    }
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "__init__"
    fullname: "weakref.WeakKeyDictionary.__init__"
    definitions {
      name: "__init__"
      fully_qualified_name: "weakref.WeakKeyDictionary.__init__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "weakref.WeakKeyDictionary[weakref._KT,weakref._VT]"
          args {
            pretty_printed_name: "weakref._KT"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "weakref._VT"
            kind: TYPE_VAR
          }
          fully_qualified_name: "weakref.WeakKeyDictionary"
        }
      }
      parameters {
        name: "dict"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "None"
          kind: NONE
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__init__"
      fully_qualified_name: "weakref.WeakKeyDictionary.__init__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "weakref.WeakKeyDictionary[weakref._KT,weakref._VT]"
          args {
            pretty_printed_name: "weakref._KT"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "weakref._VT"
            kind: TYPE_VAR
          }
          fully_qualified_name: "weakref.WeakKeyDictionary"
        }
      }
      parameters {
        name: "dict"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[typing.Mapping[weakref._KT,weakref._VT],typing.Iterable[Tuple[weakref._KT,weakref._VT]]]"
          kind: UNION
          args {
            pretty_printed_name: "typing.Mapping[weakref._KT,weakref._VT]"
            args {
              pretty_printed_name: "weakref._KT"
              kind: TYPE_VAR
            }
            args {
              pretty_printed_name: "weakref._VT"
              kind: TYPE_VAR
            }
            fully_qualified_name: "typing.Mapping"
          }
          args {
            pretty_printed_name: "typing.Iterable[Tuple[weakref._KT,weakref._VT]]"
            args {
              pretty_printed_name: "Tuple[weakref._KT,weakref._VT]"
              kind: TUPLE
              args {
                pretty_printed_name: "weakref._KT"
                kind: TYPE_VAR
              }
              args {
                pretty_printed_name: "weakref._VT"
                kind: TYPE_VAR
              }
            }
            fully_qualified_name: "typing.Iterable"
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "setdefault"
    fullname: "weakref.WeakKeyDictionary.setdefault"
    definitions {
      name: "setdefault"
      fully_qualified_name: "weakref.WeakKeyDictionary.setdefault"
      return_annotation {
        pretty_printed_name: "weakref._VT"
        kind: TYPE_VAR
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "weakref.WeakKeyDictionary[weakref._KT,Union[weakref._VT,None]]"
          args {
            pretty_printed_name: "weakref._KT"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "Union[weakref._VT,None]"
            kind: UNION
            args {
              pretty_printed_name: "weakref._VT"
              kind: TYPE_VAR
            }
            args {
              pretty_printed_name: "None"
              kind: NONE
            }
          }
          fully_qualified_name: "weakref.WeakKeyDictionary"
        }
      }
      parameters {
        name: "key"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "weakref._KT"
          kind: TYPE_VAR
        }
      }
      parameters {
        name: "default"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "None"
          kind: NONE
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "setdefault"
      fully_qualified_name: "weakref.WeakKeyDictionary.setdefault"
      return_annotation {
        pretty_printed_name: "weakref._VT"
        kind: TYPE_VAR
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "weakref.WeakKeyDictionary[weakref._KT,weakref._VT]"
          args {
            pretty_printed_name: "weakref._KT"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "weakref._VT"
            kind: TYPE_VAR
          }
          fully_qualified_name: "weakref.WeakKeyDictionary"
        }
      }
      parameters {
        name: "key"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "weakref._KT"
          kind: TYPE_VAR
        }
      }
      parameters {
        name: "default"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "weakref._VT"
          kind: TYPE_VAR
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "pop"
    fullname: "weakref.WeakKeyDictionary.pop"
    definitions {
      name: "pop"
      fully_qualified_name: "weakref.WeakKeyDictionary.pop"
      return_annotation {
        pretty_printed_name: "weakref._VT"
        kind: TYPE_VAR
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "weakref.WeakKeyDictionary[weakref._KT,weakref._VT]"
          args {
            pretty_printed_name: "weakref._KT"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "weakref._VT"
            kind: TYPE_VAR
          }
          fully_qualified_name: "weakref.WeakKeyDictionary"
        }
      }
      parameters {
        name: "key"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "weakref._KT"
          kind: TYPE_VAR
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "pop"
      fully_qualified_name: "weakref.WeakKeyDictionary.pop"
      return_annotation {
        pretty_printed_name: "Union[weakref._VT,weakref._T]"
        kind: UNION
        args {
          pretty_printed_name: "weakref._VT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "weakref._T"
          kind: TYPE_VAR
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "weakref.WeakKeyDictionary[weakref._KT,weakref._VT]"
          args {
            pretty_printed_name: "weakref._KT"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "weakref._VT"
            kind: TYPE_VAR
          }
          fully_qualified_name: "weakref.WeakKeyDictionary"
        }
      }
      parameters {
        name: "key"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "weakref._KT"
          kind: TYPE_VAR
        }
      }
      parameters {
        name: "default"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[weakref._VT,weakref._T]"
          kind: UNION
          args {
            pretty_printed_name: "weakref._VT"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "weakref._T"
            kind: TYPE_VAR
          }
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "__ior__"
    fullname: "weakref.WeakKeyDictionary.__ior__"
    definitions {
      name: "__ior__"
      fully_qualified_name: "weakref.WeakKeyDictionary.__ior__"
      return_annotation {
        pretty_printed_name: "UnboundType[Self]"
        kind: UNBOUND
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "weakref.WeakKeyDictionary[weakref._KT,weakref._VT]"
          args {
            pretty_printed_name: "weakref._KT"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "weakref._VT"
            kind: TYPE_VAR
          }
          fully_qualified_name: "weakref.WeakKeyDictionary"
        }
      }
      parameters {
        name: "other"
        type_annotation {
          pretty_printed_name: "_typeshed.SupportsKeysAndGetItem[weakref._KT,weakref._VT]"
          args {
            pretty_printed_name: "weakref._KT"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "weakref._VT"
            kind: TYPE_VAR
          }
          fully_qualified_name: "_typeshed.SupportsKeysAndGetItem"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__ior__"
      fully_qualified_name: "weakref.WeakKeyDictionary.__ior__"
      return_annotation {
        pretty_printed_name: "UnboundType[Self]"
        kind: UNBOUND
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "weakref.WeakKeyDictionary[weakref._KT,weakref._VT]"
          args {
            pretty_printed_name: "weakref._KT"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "weakref._VT"
            kind: TYPE_VAR
          }
          fully_qualified_name: "weakref.WeakKeyDictionary"
        }
      }
      parameters {
        name: "other"
        type_annotation {
          pretty_printed_name: "typing.Iterable[Tuple[weakref._KT,weakref._VT]]"
          args {
            pretty_printed_name: "Tuple[weakref._KT,weakref._VT]"
            kind: TUPLE
            args {
              pretty_printed_name: "weakref._KT"
              kind: TYPE_VAR
            }
            args {
              pretty_printed_name: "weakref._VT"
              kind: TYPE_VAR
            }
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "39"
    valid_for: "310"
  }
  is_generic: true
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "__copy__"
    fully_qualified_name: "weakref.WeakKeyDictionary.__copy__"
    type_annotation {
      pretty_printed_name: "CallableType[builtins.function]"
      kind: CALLABLE
      args {
        pretty_printed_name: "builtins.function"
        fully_qualified_name: "builtins.function"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "WeakMethod"
  fully_qualified_name: "weakref.WeakMethod"
  super_classes: "_weakref.ReferenceType"
  methods {
    name: "__new__"
    fully_qualified_name: "weakref.WeakMethod.__new__"
    return_annotation {
      pretty_printed_name: "UnboundType[Self]"
      kind: UNBOUND
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[weakref.WeakMethod[weakref._CallableT]]"
        kind: TYPE
        args {
          pretty_printed_name: "weakref.WeakMethod[weakref._CallableT]"
          args {
            pretty_printed_name: "weakref._CallableT"
            kind: TYPE_VAR
          }
          fully_qualified_name: "weakref.WeakMethod"
        }
      }
    }
    parameters {
      name: "meth"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "weakref._CallableT"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "callback"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[CallableType[builtins.function],None]"
        kind: UNION
        args {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__call__"
    fully_qualified_name: "weakref.WeakMethod.__call__"
    return_annotation {
      pretty_printed_name: "Union[weakref._CallableT,None]"
      kind: UNION
      args {
        pretty_printed_name: "weakref._CallableT"
        kind: TYPE_VAR
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "weakref.WeakMethod[weakref._CallableT]"
        args {
          pretty_printed_name: "weakref._CallableT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "weakref.WeakMethod"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__eq__"
    fully_qualified_name: "weakref.WeakMethod.__eq__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "weakref.WeakMethod[weakref._CallableT]"
        args {
          pretty_printed_name: "weakref._CallableT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "weakref.WeakMethod"
      }
    }
    parameters {
      name: "other"
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__ne__"
    fully_qualified_name: "weakref.WeakMethod.__ne__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "weakref.WeakMethod[weakref._CallableT]"
        args {
          pretty_printed_name: "weakref._CallableT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "weakref.WeakMethod"
      }
    }
    parameters {
      name: "other"
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  is_generic: true
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "finalize"
  fully_qualified_name: "weakref.finalize"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "weakref.finalize.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "weakref.finalize"
        fully_qualified_name: "weakref.finalize"
      }
    }
    parameters {
      name: "__obj"
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
    parameters {
      name: "__func"
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "kwargs"
      kind: VAR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__call__"
    fully_qualified_name: "weakref.finalize.__call__"
    return_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "weakref.finalize"
        fully_qualified_name: "weakref.finalize"
      }
    }
    parameters {
      name: "_"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "detach"
    fully_qualified_name: "weakref.finalize.detach"
    return_annotation {
      pretty_printed_name: "Union[Tuple[Any,Any,Tuple[Any,Any],builtins.dict[builtins.str,Any]],None]"
      kind: UNION
      args {
        pretty_printed_name: "Tuple[Any,Any,Tuple[Any,Any],builtins.dict[builtins.str,Any]]"
        kind: TUPLE
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "Tuple[Any,Any]"
          kind: TUPLE
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
        }
        args {
          pretty_printed_name: "builtins.dict[builtins.str,Any]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "builtins.dict"
        }
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "weakref.finalize"
        fully_qualified_name: "weakref.finalize"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
  }
  methods {
    name: "detach"
    fully_qualified_name: "weakref.finalize.detach"
    return_annotation {
      pretty_printed_name: "Union[Tuple[Any,Any,builtins.tuple[Any],builtins.dict[builtins.str,Any]],None]"
      kind: UNION
      args {
        pretty_printed_name: "Tuple[Any,Any,builtins.tuple[Any],builtins.dict[builtins.str,Any]]"
        kind: TUPLE
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "builtins.tuple[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "builtins.tuple"
        }
        args {
          pretty_printed_name: "builtins.dict[builtins.str,Any]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "builtins.dict"
        }
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "weakref.finalize"
        fully_qualified_name: "weakref.finalize"
      }
    }
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "peek"
    fully_qualified_name: "weakref.finalize.peek"
    return_annotation {
      pretty_printed_name: "Union[Tuple[Any,Any,Tuple[Any,Any],builtins.dict[builtins.str,Any]],None]"
      kind: UNION
      args {
        pretty_printed_name: "Tuple[Any,Any,Tuple[Any,Any],builtins.dict[builtins.str,Any]]"
        kind: TUPLE
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "Tuple[Any,Any]"
          kind: TUPLE
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
        }
        args {
          pretty_printed_name: "builtins.dict[builtins.str,Any]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "builtins.dict"
        }
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "weakref.finalize"
        fully_qualified_name: "weakref.finalize"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
  }
  methods {
    name: "peek"
    fully_qualified_name: "weakref.finalize.peek"
    return_annotation {
      pretty_printed_name: "Union[Tuple[Any,Any,builtins.tuple[Any],builtins.dict[builtins.str,Any]],None]"
      kind: UNION
      args {
        pretty_printed_name: "Tuple[Any,Any,builtins.tuple[Any],builtins.dict[builtins.str,Any]]"
        kind: TUPLE
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "builtins.tuple[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "builtins.tuple"
        }
        args {
          pretty_printed_name: "builtins.dict[builtins.str,Any]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "builtins.dict"
        }
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "weakref.finalize"
        fully_qualified_name: "weakref.finalize"
      }
    }
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "alive"
    fully_qualified_name: "weakref.finalize.alive"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "weakref.finalize"
        fully_qualified_name: "weakref.finalize"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "atexit"
    fully_qualified_name: "weakref.finalize.atexit"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
functions {
  name: "getweakrefcount"
  fully_qualified_name: "_weakref.getweakrefcount"
  return_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
  parameters {
    name: "__object"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "getweakrefs"
  fully_qualified_name: "_weakref.getweakrefs"
  return_annotation {
    pretty_printed_name: "builtins.list[Any]"
    args {
      pretty_printed_name: "Any"
      kind: ANY
    }
    fully_qualified_name: "builtins.list"
  }
  parameters {
    name: "object"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  valid_for: "27"
}
functions {
  name: "getweakrefs"
  fully_qualified_name: "_weakref.getweakrefs"
  return_annotation {
    pretty_printed_name: "builtins.list[Any]"
    args {
      pretty_printed_name: "Any"
      kind: ANY
    }
    fully_qualified_name: "builtins.list"
  }
  parameters {
    name: "__object"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
overloaded_functions {
  name: "proxy"
  fullname: "_weakref.proxy"
  definitions {
    name: "proxy"
    fully_qualified_name: "_weakref.proxy"
    return_annotation {
      pretty_printed_name: "_weakref.CallableProxyType[_weakref._C]"
      args {
        pretty_printed_name: "_weakref._C"
        kind: TYPE_VAR
      }
      fully_qualified_name: "_weakref.CallableProxyType"
    }
    parameters {
      name: "object"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_weakref._C"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "callback"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[CallableType[builtins.function],None]"
        kind: UNION
        args {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "proxy"
    fully_qualified_name: "_weakref.proxy"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "object"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_weakref._T"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "callback"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[CallableType[builtins.function],None]"
        kind: UNION
        args {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  valid_for: "27"
}
overloaded_functions {
  name: "proxy"
  fullname: "_weakref.proxy"
  definitions {
    name: "proxy"
    fully_qualified_name: "_weakref.proxy"
    return_annotation {
      pretty_printed_name: "_weakref.CallableProxyType[_weakref._C]"
      args {
        pretty_printed_name: "_weakref._C"
        kind: TYPE_VAR
      }
      fully_qualified_name: "_weakref.CallableProxyType"
    }
    parameters {
      name: "__object"
      type_annotation {
        pretty_printed_name: "_weakref._C"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "__callback"
      type_annotation {
        pretty_printed_name: "Union[CallableType[builtins.function],None]"
        kind: UNION
        args {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "proxy"
    fully_qualified_name: "_weakref.proxy"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "__object"
      type_annotation {
        pretty_printed_name: "_weakref._T"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "__callback"
      type_annotation {
        pretty_printed_name: "Union[CallableType[builtins.function],None]"
        kind: UNION
        args {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "ProxyTypes"
  fully_qualified_name: "weakref.ProxyTypes"
  type_annotation {
    pretty_printed_name: "builtins.tuple[Type[Any]]"
    args {
      pretty_printed_name: "Type[Any]"
      kind: TYPE
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    fully_qualified_name: "builtins.tuple"
  }
  valid_for: "27"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "ProxyTypes"
  fully_qualified_name: "weakref.ProxyTypes"
  type_annotation {
    pretty_printed_name: "Tuple[builtins.type,Any]"
    kind: TUPLE
    args {
      pretty_printed_name: "builtins.type"
      fully_qualified_name: "builtins.type"
    }
    args {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
}
vars {
  name: "__all__"
  fully_qualified_name: "weakref.__all__"
  type_annotation {
    pretty_printed_name: "builtins.list[builtins.str]"
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    fully_qualified_name: "builtins.list"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "_P"
  fully_qualified_name: "weakref._P"
  type_annotation {
    pretty_printed_name: "typing_extensions.ParamSpec"
    fully_qualified_name: "typing_extensions.ParamSpec"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
