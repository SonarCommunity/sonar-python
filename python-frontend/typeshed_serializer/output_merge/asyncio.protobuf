fully_qualified_name: "asyncio"
classes {
  name: "BaseEventLoop"
  fully_qualified_name: "asyncio.base_events.BaseEventLoop"
  super_classes: "asyncio.events.AbstractEventLoop"
  methods {
    name: "run_forever"
    fully_qualified_name: "asyncio.base_events.BaseEventLoop.run_forever"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.base_events.BaseEventLoop"
        fully_qualified_name: "asyncio.base_events.BaseEventLoop"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "stop"
    fully_qualified_name: "asyncio.base_events.BaseEventLoop.stop"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.base_events.BaseEventLoop"
        fully_qualified_name: "asyncio.base_events.BaseEventLoop"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "is_running"
    fully_qualified_name: "asyncio.base_events.BaseEventLoop.is_running"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.base_events.BaseEventLoop"
        fully_qualified_name: "asyncio.base_events.BaseEventLoop"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "is_closed"
    fully_qualified_name: "asyncio.base_events.BaseEventLoop.is_closed"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.base_events.BaseEventLoop"
        fully_qualified_name: "asyncio.base_events.BaseEventLoop"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "close"
    fully_qualified_name: "asyncio.base_events.BaseEventLoop.close"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.base_events.BaseEventLoop"
        fully_qualified_name: "asyncio.base_events.BaseEventLoop"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "shutdown_asyncgens"
    fully_qualified_name: "asyncio.base_events.BaseEventLoop.shutdown_asyncgens"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,None]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.base_events.BaseEventLoop"
        fully_qualified_name: "asyncio.base_events.BaseEventLoop"
      }
    }
    is_asynchronous: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "call_soon"
    fully_qualified_name: "asyncio.base_events.BaseEventLoop.call_soon"
    return_annotation {
      pretty_printed_name: "asyncio.events.Handle"
      fully_qualified_name: "asyncio.events.Handle"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.base_events.BaseEventLoop"
        fully_qualified_name: "asyncio.base_events.BaseEventLoop"
      }
    }
    parameters {
      name: "callback"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "context"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[contextvars.Context,None]"
        kind: UNION
        args {
          pretty_printed_name: "contextvars.Context"
          fully_qualified_name: "contextvars.Context"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "call_later"
    fully_qualified_name: "asyncio.base_events.BaseEventLoop.call_later"
    return_annotation {
      pretty_printed_name: "asyncio.events.TimerHandle"
      fully_qualified_name: "asyncio.events.TimerHandle"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.base_events.BaseEventLoop"
        fully_qualified_name: "asyncio.base_events.BaseEventLoop"
      }
    }
    parameters {
      name: "delay"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
    }
    parameters {
      name: "callback"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "context"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[contextvars.Context,None]"
        kind: UNION
        args {
          pretty_printed_name: "contextvars.Context"
          fully_qualified_name: "contextvars.Context"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "call_at"
    fully_qualified_name: "asyncio.base_events.BaseEventLoop.call_at"
    return_annotation {
      pretty_printed_name: "asyncio.events.TimerHandle"
      fully_qualified_name: "asyncio.events.TimerHandle"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.base_events.BaseEventLoop"
        fully_qualified_name: "asyncio.base_events.BaseEventLoop"
      }
    }
    parameters {
      name: "when"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
    }
    parameters {
      name: "callback"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "context"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[contextvars.Context,None]"
        kind: UNION
        args {
          pretty_printed_name: "contextvars.Context"
          fully_qualified_name: "contextvars.Context"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "time"
    fully_qualified_name: "asyncio.base_events.BaseEventLoop.time"
    return_annotation {
      pretty_printed_name: "builtins.float"
      fully_qualified_name: "builtins.float"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.base_events.BaseEventLoop"
        fully_qualified_name: "asyncio.base_events.BaseEventLoop"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "create_future"
    fully_qualified_name: "asyncio.base_events.BaseEventLoop.create_future"
    return_annotation {
      pretty_printed_name: "asyncio.futures.Future[Any]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "asyncio.futures.Future"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.base_events.BaseEventLoop"
        fully_qualified_name: "asyncio.base_events.BaseEventLoop"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "create_task"
    fully_qualified_name: "asyncio.base_events.BaseEventLoop.create_task"
    return_annotation {
      pretty_printed_name: "asyncio.tasks.Task[asyncio.base_events._T]"
      args {
        pretty_printed_name: "asyncio.base_events._T"
        kind: TYPE_VAR
      }
      fully_qualified_name: "asyncio.tasks.Task"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.base_events.BaseEventLoop"
        fully_qualified_name: "asyncio.base_events.BaseEventLoop"
      }
    }
    parameters {
      name: "coro"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.Coroutine[Any,Any,asyncio.base_events._T],typing.Generator[Any,None,asyncio.base_events._T]]"
        kind: UNION
        args {
          pretty_printed_name: "typing.Coroutine[Any,Any,asyncio.base_events._T]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          args {
            pretty_printed_name: "asyncio.base_events._T"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Coroutine"
        }
        args {
          pretty_printed_name: "typing.Generator[Any,None,asyncio.base_events._T]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
          args {
            pretty_printed_name: "asyncio.base_events._T"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Generator"
        }
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
  }
  methods {
    name: "create_task"
    fully_qualified_name: "asyncio.base_events.BaseEventLoop.create_task"
    return_annotation {
      pretty_printed_name: "asyncio.tasks.Task[asyncio.base_events._T]"
      args {
        pretty_printed_name: "asyncio.base_events._T"
        kind: TYPE_VAR
      }
      fully_qualified_name: "asyncio.tasks.Task"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.base_events.BaseEventLoop"
        fully_qualified_name: "asyncio.base_events.BaseEventLoop"
      }
    }
    parameters {
      name: "coro"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.Coroutine[Any,Any,asyncio.base_events._T],typing.Generator[Any,None,asyncio.base_events._T]]"
        kind: UNION
        args {
          pretty_printed_name: "typing.Coroutine[Any,Any,asyncio.base_events._T]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          args {
            pretty_printed_name: "asyncio.base_events._T"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Coroutine"
        }
        args {
          pretty_printed_name: "typing.Generator[Any,None,asyncio.base_events._T]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
          args {
            pretty_printed_name: "asyncio.base_events._T"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Generator"
        }
      }
    }
    parameters {
      name: "name"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[builtins.object,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.object"
          fully_qualified_name: "builtins.object"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "set_task_factory"
    fully_qualified_name: "asyncio.base_events.BaseEventLoop.set_task_factory"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.base_events.BaseEventLoop"
        fully_qualified_name: "asyncio.base_events.BaseEventLoop"
      }
    }
    parameters {
      name: "factory"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[asyncio.events._TaskFactory,None]"
        kind: UNION
        args {
          pretty_printed_name: "asyncio.events._TaskFactory"
          fully_qualified_name: "asyncio.events._TaskFactory"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "get_task_factory"
    fully_qualified_name: "asyncio.base_events.BaseEventLoop.get_task_factory"
    return_annotation {
      pretty_printed_name: "Union[asyncio.events._TaskFactory,None]"
      kind: UNION
      args {
        pretty_printed_name: "asyncio.events._TaskFactory"
        fully_qualified_name: "asyncio.events._TaskFactory"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.base_events.BaseEventLoop"
        fully_qualified_name: "asyncio.base_events.BaseEventLoop"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "call_soon_threadsafe"
    fully_qualified_name: "asyncio.base_events.BaseEventLoop.call_soon_threadsafe"
    return_annotation {
      pretty_printed_name: "asyncio.events.Handle"
      fully_qualified_name: "asyncio.events.Handle"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.base_events.BaseEventLoop"
        fully_qualified_name: "asyncio.base_events.BaseEventLoop"
      }
    }
    parameters {
      name: "callback"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "context"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[contextvars.Context,None]"
        kind: UNION
        args {
          pretty_printed_name: "contextvars.Context"
          fully_qualified_name: "contextvars.Context"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "run_in_executor"
    fully_qualified_name: "asyncio.base_events.BaseEventLoop.run_in_executor"
    return_annotation {
      pretty_printed_name: "asyncio.futures.Future[asyncio.base_events._T]"
      args {
        pretty_printed_name: "asyncio.base_events._T"
        kind: TYPE_VAR
      }
      fully_qualified_name: "asyncio.futures.Future"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.base_events.BaseEventLoop"
        fully_qualified_name: "asyncio.base_events.BaseEventLoop"
      }
    }
    parameters {
      name: "executor"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "func"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "set_default_executor"
    fully_qualified_name: "asyncio.base_events.BaseEventLoop.set_default_executor"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.base_events.BaseEventLoop"
        fully_qualified_name: "asyncio.base_events.BaseEventLoop"
      }
    }
    parameters {
      name: "executor"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "getaddrinfo"
    fully_qualified_name: "asyncio.base_events.BaseEventLoop.getaddrinfo"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,builtins.list[Tuple[socket.AddressFamily,socket.SocketKind,builtins.int,builtins.str,Union[Tuple[builtins.str,builtins.int],Tuple[builtins.str,builtins.int,builtins.int,builtins.int]]]]]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "builtins.list[Tuple[socket.AddressFamily,socket.SocketKind,builtins.int,builtins.str,Union[Tuple[builtins.str,builtins.int],Tuple[builtins.str,builtins.int,builtins.int,builtins.int]]]]"
        args {
          pretty_printed_name: "Tuple[socket.AddressFamily,socket.SocketKind,builtins.int,builtins.str,Union[Tuple[builtins.str,builtins.int],Tuple[builtins.str,builtins.int,builtins.int,builtins.int]]]"
          kind: TUPLE
          args {
            pretty_printed_name: "socket.AddressFamily"
            fully_qualified_name: "socket.AddressFamily"
          }
          args {
            pretty_printed_name: "socket.SocketKind"
            fully_qualified_name: "socket.SocketKind"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "Union[Tuple[builtins.str,builtins.int],Tuple[builtins.str,builtins.int,builtins.int,builtins.int]]"
            kind: UNION
            args {
              pretty_printed_name: "Tuple[builtins.str,builtins.int]"
              kind: TUPLE
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.int"
                fully_qualified_name: "builtins.int"
              }
            }
            args {
              pretty_printed_name: "Tuple[builtins.str,builtins.int,builtins.int,builtins.int]"
              kind: TUPLE
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.int"
                fully_qualified_name: "builtins.int"
              }
              args {
                pretty_printed_name: "builtins.int"
                fully_qualified_name: "builtins.int"
              }
              args {
                pretty_printed_name: "builtins.int"
                fully_qualified_name: "builtins.int"
              }
            }
          }
        }
        fully_qualified_name: "builtins.list"
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.base_events.BaseEventLoop"
        fully_qualified_name: "asyncio.base_events.BaseEventLoop"
      }
    }
    parameters {
      name: "host"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.bytes,builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "port"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.bytes,builtins.str,builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "family"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    parameters {
      name: "type"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    parameters {
      name: "proto"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    parameters {
      name: "flags"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    is_asynchronous: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "getnameinfo"
    fully_qualified_name: "asyncio.base_events.BaseEventLoop.getnameinfo"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,Tuple[builtins.str,builtins.str]]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Tuple[builtins.str,builtins.str]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.base_events.BaseEventLoop"
        fully_qualified_name: "asyncio.base_events.BaseEventLoop"
      }
    }
    parameters {
      name: "sockaddr"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Tuple[builtins.str,builtins.int],Tuple[builtins.str,builtins.int,builtins.int,builtins.int]]"
        kind: UNION
        args {
          pretty_printed_name: "Tuple[builtins.str,builtins.int]"
          kind: TUPLE
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
        }
        args {
          pretty_printed_name: "Tuple[builtins.str,builtins.int,builtins.int,builtins.int]"
          kind: TUPLE
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
        }
      }
    }
    parameters {
      name: "flags"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    is_asynchronous: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "start_tls"
    fully_qualified_name: "asyncio.base_events.BaseEventLoop.start_tls"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,asyncio.transports.Transport]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "asyncio.transports.Transport"
        fully_qualified_name: "asyncio.transports.Transport"
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.base_events.BaseEventLoop"
        fully_qualified_name: "asyncio.base_events.BaseEventLoop"
      }
    }
    parameters {
      name: "transport"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.transports.BaseTransport"
        fully_qualified_name: "asyncio.transports.BaseTransport"
      }
    }
    parameters {
      name: "protocol"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.protocols.BaseProtocol"
        fully_qualified_name: "asyncio.protocols.BaseProtocol"
      }
    }
    parameters {
      name: "sslcontext"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ssl.SSLContext"
        fully_qualified_name: "ssl.SSLContext"
      }
    }
    parameters {
      name: "server_side"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    parameters {
      name: "server_hostname"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "ssl_handshake_timeout"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[builtins.float,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    is_asynchronous: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "connect_accepted_socket"
    fully_qualified_name: "asyncio.base_events.BaseEventLoop.connect_accepted_socket"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,Tuple[asyncio.transports.Transport,asyncio.base_events._ProtocolT]]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Tuple[asyncio.transports.Transport,asyncio.base_events._ProtocolT]"
        kind: TUPLE
        args {
          pretty_printed_name: "asyncio.transports.Transport"
          fully_qualified_name: "asyncio.transports.Transport"
        }
        args {
          pretty_printed_name: "asyncio.base_events._ProtocolT"
          kind: TYPE_VAR
        }
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.base_events.BaseEventLoop"
        fully_qualified_name: "asyncio.base_events.BaseEventLoop"
      }
    }
    parameters {
      name: "protocol_factory"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    parameters {
      name: "sock"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "socket.socket"
        fully_qualified_name: "socket.socket"
      }
    }
    parameters {
      name: "ssl"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[UnboundType[_SSLContext],None]"
        kind: UNION
        args {
          pretty_printed_name: "UnboundType[_SSLContext]"
          kind: UNBOUND
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "ssl_handshake_timeout"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[builtins.float,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    is_asynchronous: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "sock_sendfile"
    fully_qualified_name: "asyncio.base_events.BaseEventLoop.sock_sendfile"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,builtins.int]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.base_events.BaseEventLoop"
        fully_qualified_name: "asyncio.base_events.BaseEventLoop"
      }
    }
    parameters {
      name: "sock"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "socket.socket"
        fully_qualified_name: "socket.socket"
      }
    }
    parameters {
      name: "file"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.IO[builtins.bytes]"
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        fully_qualified_name: "typing.IO"
      }
    }
    parameters {
      name: "offset"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    parameters {
      name: "count"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "fallback"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[builtins.bool,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    is_asynchronous: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "sendfile"
    fully_qualified_name: "asyncio.base_events.BaseEventLoop.sendfile"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,builtins.int]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.base_events.BaseEventLoop"
        fully_qualified_name: "asyncio.base_events.BaseEventLoop"
      }
    }
    parameters {
      name: "transport"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.transports.WriteTransport"
        fully_qualified_name: "asyncio.transports.WriteTransport"
      }
    }
    parameters {
      name: "file"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.IO[builtins.bytes]"
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        fully_qualified_name: "typing.IO"
      }
    }
    parameters {
      name: "offset"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    parameters {
      name: "count"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "fallback"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    is_asynchronous: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "create_datagram_endpoint"
    fully_qualified_name: "asyncio.base_events.BaseEventLoop.create_datagram_endpoint"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,Tuple[asyncio.transports.DatagramTransport,asyncio.base_events._ProtocolT]]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Tuple[asyncio.transports.DatagramTransport,asyncio.base_events._ProtocolT]"
        kind: TUPLE
        args {
          pretty_printed_name: "asyncio.transports.DatagramTransport"
          fully_qualified_name: "asyncio.transports.DatagramTransport"
        }
        args {
          pretty_printed_name: "asyncio.base_events._ProtocolT"
          kind: TYPE_VAR
        }
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.base_events.BaseEventLoop"
        fully_qualified_name: "asyncio.base_events.BaseEventLoop"
      }
    }
    parameters {
      name: "protocol_factory"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    parameters {
      name: "local_addr"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Tuple[builtins.str,builtins.int],builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "Tuple[builtins.str,builtins.int]"
          kind: TUPLE
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "remote_addr"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Tuple[builtins.str,builtins.int],builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "Tuple[builtins.str,builtins.int]"
          kind: TUPLE
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "family"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    parameters {
      name: "proto"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    parameters {
      name: "flags"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    parameters {
      name: "reuse_address"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[builtins.bool,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "reuse_port"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[builtins.bool,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "allow_broadcast"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[builtins.bool,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "sock"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[socket.socket,None]"
        kind: UNION
        args {
          pretty_printed_name: "socket.socket"
          fully_qualified_name: "socket.socket"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    is_asynchronous: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "connect_read_pipe"
    fully_qualified_name: "asyncio.base_events.BaseEventLoop.connect_read_pipe"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,Tuple[asyncio.transports.ReadTransport,asyncio.base_events._ProtocolT]]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Tuple[asyncio.transports.ReadTransport,asyncio.base_events._ProtocolT]"
        kind: TUPLE
        args {
          pretty_printed_name: "asyncio.transports.ReadTransport"
          fully_qualified_name: "asyncio.transports.ReadTransport"
        }
        args {
          pretty_printed_name: "asyncio.base_events._ProtocolT"
          kind: TYPE_VAR
        }
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.base_events.BaseEventLoop"
        fully_qualified_name: "asyncio.base_events.BaseEventLoop"
      }
    }
    parameters {
      name: "protocol_factory"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    parameters {
      name: "pipe"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    is_asynchronous: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "connect_write_pipe"
    fully_qualified_name: "asyncio.base_events.BaseEventLoop.connect_write_pipe"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,Tuple[asyncio.transports.WriteTransport,asyncio.base_events._ProtocolT]]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Tuple[asyncio.transports.WriteTransport,asyncio.base_events._ProtocolT]"
        kind: TUPLE
        args {
          pretty_printed_name: "asyncio.transports.WriteTransport"
          fully_qualified_name: "asyncio.transports.WriteTransport"
        }
        args {
          pretty_printed_name: "asyncio.base_events._ProtocolT"
          kind: TYPE_VAR
        }
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.base_events.BaseEventLoop"
        fully_qualified_name: "asyncio.base_events.BaseEventLoop"
      }
    }
    parameters {
      name: "protocol_factory"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    parameters {
      name: "pipe"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    is_asynchronous: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "subprocess_shell"
    fully_qualified_name: "asyncio.base_events.BaseEventLoop.subprocess_shell"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,Tuple[asyncio.transports.SubprocessTransport,asyncio.base_events._ProtocolT]]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Tuple[asyncio.transports.SubprocessTransport,asyncio.base_events._ProtocolT]"
        kind: TUPLE
        args {
          pretty_printed_name: "asyncio.transports.SubprocessTransport"
          fully_qualified_name: "asyncio.transports.SubprocessTransport"
        }
        args {
          pretty_printed_name: "asyncio.base_events._ProtocolT"
          kind: TYPE_VAR
        }
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.base_events.BaseEventLoop"
        fully_qualified_name: "asyncio.base_events.BaseEventLoop"
      }
    }
    parameters {
      name: "protocol_factory"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    parameters {
      name: "cmd"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.bytes,builtins.str]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
    }
    parameters {
      name: "stdin"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[builtins.int,typing.IO[Any],None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "typing.IO[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "typing.IO"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "stdout"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[builtins.int,typing.IO[Any],None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "typing.IO[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "typing.IO"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "stderr"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[builtins.int,typing.IO[Any],None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "typing.IO[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "typing.IO"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "universal_newlines"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Literal[builtins.bool]"
        kind: LITERAL
        args {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
      }
      has_default: true
    }
    parameters {
      name: "shell"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Literal[builtins.bool]"
        kind: LITERAL
        args {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
      }
      has_default: true
    }
    parameters {
      name: "bufsize"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Literal[builtins.int]"
        kind: LITERAL
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
      has_default: true
    }
    parameters {
      name: "encoding"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      has_default: true
    }
    parameters {
      name: "errors"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      has_default: true
    }
    parameters {
      name: "text"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[Literal[builtins.bool],None]"
        kind: UNION
        args {
          pretty_printed_name: "Literal[builtins.bool]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.bool"
            fully_qualified_name: "builtins.bool"
          }
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "kwargs"
      kind: VAR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    is_asynchronous: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "subprocess_exec"
    fully_qualified_name: "asyncio.base_events.BaseEventLoop.subprocess_exec"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,Tuple[asyncio.transports.SubprocessTransport,asyncio.base_events._ProtocolT]]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Tuple[asyncio.transports.SubprocessTransport,asyncio.base_events._ProtocolT]"
        kind: TUPLE
        args {
          pretty_printed_name: "asyncio.transports.SubprocessTransport"
          fully_qualified_name: "asyncio.transports.SubprocessTransport"
        }
        args {
          pretty_printed_name: "asyncio.base_events._ProtocolT"
          kind: TYPE_VAR
        }
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.base_events.BaseEventLoop"
        fully_qualified_name: "asyncio.base_events.BaseEventLoop"
      }
    }
    parameters {
      name: "protocol_factory"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    parameters {
      name: "program"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "stdin"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[builtins.int,typing.IO[Any],None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "typing.IO[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "typing.IO"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "stdout"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[builtins.int,typing.IO[Any],None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "typing.IO[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "typing.IO"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "stderr"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[builtins.int,typing.IO[Any],None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "typing.IO[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "typing.IO"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "universal_newlines"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Literal[builtins.bool]"
        kind: LITERAL
        args {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
      }
      has_default: true
    }
    parameters {
      name: "shell"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Literal[builtins.bool]"
        kind: LITERAL
        args {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
      }
      has_default: true
    }
    parameters {
      name: "bufsize"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Literal[builtins.int]"
        kind: LITERAL
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
      has_default: true
    }
    parameters {
      name: "encoding"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      has_default: true
    }
    parameters {
      name: "errors"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      has_default: true
    }
    parameters {
      name: "kwargs"
      kind: VAR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    is_asynchronous: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "add_reader"
    fully_qualified_name: "asyncio.base_events.BaseEventLoop.add_reader"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.base_events.BaseEventLoop"
        fully_qualified_name: "asyncio.base_events.BaseEventLoop"
      }
    }
    parameters {
      name: "fd"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UnboundType[FileDescriptorLike]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "callback"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "remove_reader"
    fully_qualified_name: "asyncio.base_events.BaseEventLoop.remove_reader"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.base_events.BaseEventLoop"
        fully_qualified_name: "asyncio.base_events.BaseEventLoop"
      }
    }
    parameters {
      name: "fd"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UnboundType[FileDescriptorLike]"
        kind: UNBOUND
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "add_writer"
    fully_qualified_name: "asyncio.base_events.BaseEventLoop.add_writer"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.base_events.BaseEventLoop"
        fully_qualified_name: "asyncio.base_events.BaseEventLoop"
      }
    }
    parameters {
      name: "fd"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UnboundType[FileDescriptorLike]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "callback"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "remove_writer"
    fully_qualified_name: "asyncio.base_events.BaseEventLoop.remove_writer"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.base_events.BaseEventLoop"
        fully_qualified_name: "asyncio.base_events.BaseEventLoop"
      }
    }
    parameters {
      name: "fd"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UnboundType[FileDescriptorLike]"
        kind: UNBOUND
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "sock_recv"
    fully_qualified_name: "asyncio.base_events.BaseEventLoop.sock_recv"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,builtins.bytes]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.base_events.BaseEventLoop"
        fully_qualified_name: "asyncio.base_events.BaseEventLoop"
      }
    }
    parameters {
      name: "sock"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "socket.socket"
        fully_qualified_name: "socket.socket"
      }
    }
    parameters {
      name: "nbytes"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    is_asynchronous: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "sock_recv_into"
    fully_qualified_name: "asyncio.base_events.BaseEventLoop.sock_recv_into"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,builtins.int]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.base_events.BaseEventLoop"
        fully_qualified_name: "asyncio.base_events.BaseEventLoop"
      }
    }
    parameters {
      name: "sock"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "socket.socket"
        fully_qualified_name: "socket.socket"
      }
    }
    parameters {
      name: "buf"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UnboundType[WriteableBuffer]"
        kind: UNBOUND
      }
    }
    is_asynchronous: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "sock_sendall"
    fully_qualified_name: "asyncio.base_events.BaseEventLoop.sock_sendall"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,None]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.base_events.BaseEventLoop"
        fully_qualified_name: "asyncio.base_events.BaseEventLoop"
      }
    }
    parameters {
      name: "sock"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "socket.socket"
        fully_qualified_name: "socket.socket"
      }
    }
    parameters {
      name: "data"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UnboundType[ReadableBuffer]"
        kind: UNBOUND
      }
    }
    is_asynchronous: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "sock_connect"
    fully_qualified_name: "asyncio.base_events.BaseEventLoop.sock_connect"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,None]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.base_events.BaseEventLoop"
        fully_qualified_name: "asyncio.base_events.BaseEventLoop"
      }
    }
    parameters {
      name: "sock"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "socket.socket"
        fully_qualified_name: "socket.socket"
      }
    }
    parameters {
      name: "address"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UnboundType[_Address]"
        kind: UNBOUND
      }
    }
    is_asynchronous: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "sock_accept"
    fully_qualified_name: "asyncio.base_events.BaseEventLoop.sock_accept"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,Tuple[socket.socket,UnboundType[_RetAddress]]]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Tuple[socket.socket,UnboundType[_RetAddress]]"
        kind: TUPLE
        args {
          pretty_printed_name: "socket.socket"
          fully_qualified_name: "socket.socket"
        }
        args {
          pretty_printed_name: "UnboundType[_RetAddress]"
          kind: UNBOUND
        }
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.base_events.BaseEventLoop"
        fully_qualified_name: "asyncio.base_events.BaseEventLoop"
      }
    }
    parameters {
      name: "sock"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "socket.socket"
        fully_qualified_name: "socket.socket"
      }
    }
    is_asynchronous: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "add_signal_handler"
    fully_qualified_name: "asyncio.base_events.BaseEventLoop.add_signal_handler"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.base_events.BaseEventLoop"
        fully_qualified_name: "asyncio.base_events.BaseEventLoop"
      }
    }
    parameters {
      name: "sig"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "callback"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "remove_signal_handler"
    fully_qualified_name: "asyncio.base_events.BaseEventLoop.remove_signal_handler"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.base_events.BaseEventLoop"
        fully_qualified_name: "asyncio.base_events.BaseEventLoop"
      }
    }
    parameters {
      name: "sig"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "set_exception_handler"
    fully_qualified_name: "asyncio.base_events.BaseEventLoop.set_exception_handler"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.base_events.BaseEventLoop"
        fully_qualified_name: "asyncio.base_events.BaseEventLoop"
      }
    }
    parameters {
      name: "handler"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[UnboundType[_ExceptionHandler],None]"
        kind: UNION
        args {
          pretty_printed_name: "UnboundType[_ExceptionHandler]"
          kind: UNBOUND
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "get_exception_handler"
    fully_qualified_name: "asyncio.base_events.BaseEventLoop.get_exception_handler"
    return_annotation {
      pretty_printed_name: "Union[UnboundType[_ExceptionHandler],None]"
      kind: UNION
      args {
        pretty_printed_name: "UnboundType[_ExceptionHandler]"
        kind: UNBOUND
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.base_events.BaseEventLoop"
        fully_qualified_name: "asyncio.base_events.BaseEventLoop"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "default_exception_handler"
    fully_qualified_name: "asyncio.base_events.BaseEventLoop.default_exception_handler"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.base_events.BaseEventLoop"
        fully_qualified_name: "asyncio.base_events.BaseEventLoop"
      }
    }
    parameters {
      name: "context"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UnboundType[_Context]"
        kind: UNBOUND
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "call_exception_handler"
    fully_qualified_name: "asyncio.base_events.BaseEventLoop.call_exception_handler"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.base_events.BaseEventLoop"
        fully_qualified_name: "asyncio.base_events.BaseEventLoop"
      }
    }
    parameters {
      name: "context"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UnboundType[_Context]"
        kind: UNBOUND
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "get_debug"
    fully_qualified_name: "asyncio.base_events.BaseEventLoop.get_debug"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.base_events.BaseEventLoop"
        fully_qualified_name: "asyncio.base_events.BaseEventLoop"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "set_debug"
    fully_qualified_name: "asyncio.base_events.BaseEventLoop.set_debug"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.base_events.BaseEventLoop"
        fully_qualified_name: "asyncio.base_events.BaseEventLoop"
      }
    }
    parameters {
      name: "enabled"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "shutdown_default_executor"
    fully_qualified_name: "asyncio.base_events.BaseEventLoop.shutdown_default_executor"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,None]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.base_events.BaseEventLoop"
        fully_qualified_name: "asyncio.base_events.BaseEventLoop"
      }
    }
    is_asynchronous: true
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "run_until_complete"
    fullname: "asyncio.base_events.BaseEventLoop.run_until_complete"
    definitions {
      name: "run_until_complete"
      fully_qualified_name: "asyncio.base_events.BaseEventLoop.run_until_complete"
      return_annotation {
        pretty_printed_name: "asyncio.base_events._T"
        kind: TYPE_VAR
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "asyncio.base_events.BaseEventLoop"
          fully_qualified_name: "asyncio.base_events.BaseEventLoop"
        }
      }
      parameters {
        name: "future"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "typing.Generator[Any,None,asyncio.base_events._T]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
          args {
            pretty_printed_name: "asyncio.base_events._T"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Generator"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "run_until_complete"
      fully_qualified_name: "asyncio.base_events.BaseEventLoop.run_until_complete"
      return_annotation {
        pretty_printed_name: "asyncio.base_events._T"
        kind: TYPE_VAR
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "asyncio.base_events.BaseEventLoop"
          fully_qualified_name: "asyncio.base_events.BaseEventLoop"
        }
      }
      parameters {
        name: "future"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "typing.Awaitable[asyncio.base_events._T]"
          args {
            pretty_printed_name: "asyncio.base_events._T"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Awaitable"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "create_connection"
    fullname: "asyncio.base_events.BaseEventLoop.create_connection"
    definitions {
      name: "create_connection"
      fully_qualified_name: "asyncio.base_events.BaseEventLoop.create_connection"
      return_annotation {
        pretty_printed_name: "typing.Coroutine[Any,Any,Tuple[asyncio.transports.Transport,asyncio.base_events._ProtocolT]]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "Tuple[asyncio.transports.Transport,asyncio.base_events._ProtocolT]"
          kind: TUPLE
          args {
            pretty_printed_name: "asyncio.transports.Transport"
            fully_qualified_name: "asyncio.transports.Transport"
          }
          args {
            pretty_printed_name: "asyncio.base_events._ProtocolT"
            kind: TYPE_VAR
          }
        }
        fully_qualified_name: "typing.Coroutine"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "asyncio.base_events.BaseEventLoop"
          fully_qualified_name: "asyncio.base_events.BaseEventLoop"
        }
      }
      parameters {
        name: "protocol_factory"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
      }
      parameters {
        name: "host"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        has_default: true
      }
      parameters {
        name: "port"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        has_default: true
      }
      parameters {
        name: "ssl"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "Union[UnboundType[_SSLContext],None]"
          kind: UNION
          args {
            pretty_printed_name: "UnboundType[_SSLContext]"
            kind: UNBOUND
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "family"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        has_default: true
      }
      parameters {
        name: "proto"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        has_default: true
      }
      parameters {
        name: "flags"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        has_default: true
      }
      parameters {
        name: "sock"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "None"
          kind: NONE
        }
        has_default: true
      }
      parameters {
        name: "local_addr"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "Union[Tuple[builtins.str,builtins.int],None]"
          kind: UNION
          args {
            pretty_printed_name: "Tuple[builtins.str,builtins.int]"
            kind: TUPLE
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.int"
              fully_qualified_name: "builtins.int"
            }
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "server_hostname"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "ssl_handshake_timeout"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "Union[builtins.float,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_asynchronous: true
      is_overload: true
    }
    definitions {
      name: "create_connection"
      fully_qualified_name: "asyncio.base_events.BaseEventLoop.create_connection"
      return_annotation {
        pretty_printed_name: "typing.Coroutine[Any,Any,Tuple[asyncio.transports.Transport,asyncio.base_events._ProtocolT]]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "Tuple[asyncio.transports.Transport,asyncio.base_events._ProtocolT]"
          kind: TUPLE
          args {
            pretty_printed_name: "asyncio.transports.Transport"
            fully_qualified_name: "asyncio.transports.Transport"
          }
          args {
            pretty_printed_name: "asyncio.base_events._ProtocolT"
            kind: TYPE_VAR
          }
        }
        fully_qualified_name: "typing.Coroutine"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "asyncio.base_events.BaseEventLoop"
          fully_qualified_name: "asyncio.base_events.BaseEventLoop"
        }
      }
      parameters {
        name: "protocol_factory"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
      }
      parameters {
        name: "host"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "None"
          kind: NONE
        }
        has_default: true
      }
      parameters {
        name: "port"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "None"
          kind: NONE
        }
        has_default: true
      }
      parameters {
        name: "ssl"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "Union[UnboundType[_SSLContext],None]"
          kind: UNION
          args {
            pretty_printed_name: "UnboundType[_SSLContext]"
            kind: UNBOUND
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "family"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        has_default: true
      }
      parameters {
        name: "proto"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        has_default: true
      }
      parameters {
        name: "flags"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        has_default: true
      }
      parameters {
        name: "sock"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "socket.socket"
          fully_qualified_name: "socket.socket"
        }
      }
      parameters {
        name: "local_addr"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "None"
          kind: NONE
        }
        has_default: true
      }
      parameters {
        name: "server_hostname"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "ssl_handshake_timeout"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "Union[builtins.float,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_asynchronous: true
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
  }
  overloaded_methods {
    name: "create_connection"
    fullname: "asyncio.base_events.BaseEventLoop.create_connection"
    definitions {
      name: "create_connection"
      fully_qualified_name: "asyncio.base_events.BaseEventLoop.create_connection"
      return_annotation {
        pretty_printed_name: "typing.Coroutine[Any,Any,Tuple[asyncio.transports.Transport,asyncio.base_events._ProtocolT]]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "Tuple[asyncio.transports.Transport,asyncio.base_events._ProtocolT]"
          kind: TUPLE
          args {
            pretty_printed_name: "asyncio.transports.Transport"
            fully_qualified_name: "asyncio.transports.Transport"
          }
          args {
            pretty_printed_name: "asyncio.base_events._ProtocolT"
            kind: TYPE_VAR
          }
        }
        fully_qualified_name: "typing.Coroutine"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "asyncio.base_events.BaseEventLoop"
          fully_qualified_name: "asyncio.base_events.BaseEventLoop"
        }
      }
      parameters {
        name: "protocol_factory"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
      }
      parameters {
        name: "host"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        has_default: true
      }
      parameters {
        name: "port"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        has_default: true
      }
      parameters {
        name: "ssl"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "Union[UnboundType[_SSLContext],None]"
          kind: UNION
          args {
            pretty_printed_name: "UnboundType[_SSLContext]"
            kind: UNBOUND
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "family"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        has_default: true
      }
      parameters {
        name: "proto"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        has_default: true
      }
      parameters {
        name: "flags"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        has_default: true
      }
      parameters {
        name: "sock"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "None"
          kind: NONE
        }
        has_default: true
      }
      parameters {
        name: "local_addr"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "Union[Tuple[builtins.str,builtins.int],None]"
          kind: UNION
          args {
            pretty_printed_name: "Tuple[builtins.str,builtins.int]"
            kind: TUPLE
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.int"
              fully_qualified_name: "builtins.int"
            }
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "server_hostname"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "ssl_handshake_timeout"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "Union[builtins.float,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "happy_eyeballs_delay"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "Union[builtins.float,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "interleave"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "Union[builtins.int,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_asynchronous: true
      is_overload: true
    }
    definitions {
      name: "create_connection"
      fully_qualified_name: "asyncio.base_events.BaseEventLoop.create_connection"
      return_annotation {
        pretty_printed_name: "typing.Coroutine[Any,Any,Tuple[asyncio.transports.Transport,asyncio.base_events._ProtocolT]]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "Tuple[asyncio.transports.Transport,asyncio.base_events._ProtocolT]"
          kind: TUPLE
          args {
            pretty_printed_name: "asyncio.transports.Transport"
            fully_qualified_name: "asyncio.transports.Transport"
          }
          args {
            pretty_printed_name: "asyncio.base_events._ProtocolT"
            kind: TYPE_VAR
          }
        }
        fully_qualified_name: "typing.Coroutine"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "asyncio.base_events.BaseEventLoop"
          fully_qualified_name: "asyncio.base_events.BaseEventLoop"
        }
      }
      parameters {
        name: "protocol_factory"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
      }
      parameters {
        name: "host"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "None"
          kind: NONE
        }
        has_default: true
      }
      parameters {
        name: "port"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "None"
          kind: NONE
        }
        has_default: true
      }
      parameters {
        name: "ssl"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "Union[UnboundType[_SSLContext],None]"
          kind: UNION
          args {
            pretty_printed_name: "UnboundType[_SSLContext]"
            kind: UNBOUND
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "family"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        has_default: true
      }
      parameters {
        name: "proto"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        has_default: true
      }
      parameters {
        name: "flags"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        has_default: true
      }
      parameters {
        name: "sock"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "socket.socket"
          fully_qualified_name: "socket.socket"
        }
      }
      parameters {
        name: "local_addr"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "None"
          kind: NONE
        }
        has_default: true
      }
      parameters {
        name: "server_hostname"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "ssl_handshake_timeout"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "Union[builtins.float,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "happy_eyeballs_delay"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "Union[builtins.float,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "interleave"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "Union[builtins.int,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_asynchronous: true
      is_overload: true
    }
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "create_server"
    fullname: "asyncio.base_events.BaseEventLoop.create_server"
    definitions {
      name: "create_server"
      fully_qualified_name: "asyncio.base_events.BaseEventLoop.create_server"
      return_annotation {
        pretty_printed_name: "typing.Coroutine[Any,Any,asyncio.base_events.Server]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "asyncio.base_events.Server"
          fully_qualified_name: "asyncio.base_events.Server"
        }
        fully_qualified_name: "typing.Coroutine"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "asyncio.base_events.BaseEventLoop"
          fully_qualified_name: "asyncio.base_events.BaseEventLoop"
        }
      }
      parameters {
        name: "protocol_factory"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "UnboundType[_ProtocolFactory]"
          kind: UNBOUND
        }
      }
      parameters {
        name: "host"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,typing.Sequence[builtins.str],None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "typing.Sequence[builtins.str]"
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            fully_qualified_name: "typing.Sequence"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "port"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        has_default: true
      }
      parameters {
        name: "family"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        has_default: true
      }
      parameters {
        name: "flags"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        has_default: true
      }
      parameters {
        name: "sock"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "None"
          kind: NONE
        }
        has_default: true
      }
      parameters {
        name: "backlog"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        has_default: true
      }
      parameters {
        name: "ssl"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "Union[UnboundType[_SSLContext],None]"
          kind: UNION
          args {
            pretty_printed_name: "UnboundType[_SSLContext]"
            kind: UNBOUND
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "reuse_address"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "Union[builtins.bool,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bool"
            fully_qualified_name: "builtins.bool"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "reuse_port"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "Union[builtins.bool,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bool"
            fully_qualified_name: "builtins.bool"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "ssl_handshake_timeout"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "Union[builtins.float,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "start_serving"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_asynchronous: true
      is_overload: true
    }
    definitions {
      name: "create_server"
      fully_qualified_name: "asyncio.base_events.BaseEventLoop.create_server"
      return_annotation {
        pretty_printed_name: "typing.Coroutine[Any,Any,asyncio.base_events.Server]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "asyncio.base_events.Server"
          fully_qualified_name: "asyncio.base_events.Server"
        }
        fully_qualified_name: "typing.Coroutine"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "asyncio.base_events.BaseEventLoop"
          fully_qualified_name: "asyncio.base_events.BaseEventLoop"
        }
      }
      parameters {
        name: "protocol_factory"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "UnboundType[_ProtocolFactory]"
          kind: UNBOUND
        }
      }
      parameters {
        name: "host"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "None"
          kind: NONE
        }
        has_default: true
      }
      parameters {
        name: "port"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "None"
          kind: NONE
        }
        has_default: true
      }
      parameters {
        name: "family"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        has_default: true
      }
      parameters {
        name: "flags"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        has_default: true
      }
      parameters {
        name: "sock"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "socket.socket"
          fully_qualified_name: "socket.socket"
        }
        has_default: true
      }
      parameters {
        name: "backlog"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        has_default: true
      }
      parameters {
        name: "ssl"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "Union[UnboundType[_SSLContext],None]"
          kind: UNION
          args {
            pretty_printed_name: "UnboundType[_SSLContext]"
            kind: UNBOUND
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "reuse_address"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "Union[builtins.bool,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bool"
            fully_qualified_name: "builtins.bool"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "reuse_port"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "Union[builtins.bool,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bool"
            fully_qualified_name: "builtins.bool"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "ssl_handshake_timeout"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "Union[builtins.float,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "start_serving"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_asynchronous: true
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "Handle"
  fully_qualified_name: "asyncio.events.Handle"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "asyncio.events.Handle.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.events.Handle"
        fully_qualified_name: "asyncio.events.Handle"
      }
    }
    parameters {
      name: "callback"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    parameters {
      name: "args"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Sequence[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "typing.Sequence"
      }
    }
    parameters {
      name: "loop"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.events.AbstractEventLoop"
        fully_qualified_name: "asyncio.events.AbstractEventLoop"
      }
    }
    parameters {
      name: "context"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[contextvars.Context,None]"
        kind: UNION
        args {
          pretty_printed_name: "contextvars.Context"
          fully_qualified_name: "contextvars.Context"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "cancel"
    fully_qualified_name: "asyncio.events.Handle.cancel"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.events.Handle"
        fully_qualified_name: "asyncio.events.Handle"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "_run"
    fully_qualified_name: "asyncio.events.Handle._run"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.events.Handle"
        fully_qualified_name: "asyncio.events.Handle"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "cancelled"
    fully_qualified_name: "asyncio.events.Handle.cancelled"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.events.Handle"
        fully_qualified_name: "asyncio.events.Handle"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "_cancelled"
    fully_qualified_name: "asyncio.events.Handle._cancelled"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "_args"
    fully_qualified_name: "asyncio.events.Handle._args"
    type_annotation {
      pretty_printed_name: "typing.Sequence[Any]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "typing.Sequence"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "TimerHandle"
  fully_qualified_name: "asyncio.events.TimerHandle"
  super_classes: "asyncio.events.Handle"
  methods {
    name: "__init__"
    fully_qualified_name: "asyncio.events.TimerHandle.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.events.TimerHandle"
        fully_qualified_name: "asyncio.events.TimerHandle"
      }
    }
    parameters {
      name: "when"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
    }
    parameters {
      name: "callback"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    parameters {
      name: "args"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Sequence[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "typing.Sequence"
      }
    }
    parameters {
      name: "loop"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.events.AbstractEventLoop"
        fully_qualified_name: "asyncio.events.AbstractEventLoop"
      }
    }
    parameters {
      name: "context"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[contextvars.Context,None]"
        kind: UNION
        args {
          pretty_printed_name: "contextvars.Context"
          fully_qualified_name: "contextvars.Context"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "when"
    fully_qualified_name: "asyncio.events.TimerHandle.when"
    return_annotation {
      pretty_printed_name: "builtins.float"
      fully_qualified_name: "builtins.float"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.events.TimerHandle"
        fully_qualified_name: "asyncio.events.TimerHandle"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__lt__"
    fully_qualified_name: "asyncio.events.TimerHandle.__lt__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "asyncio.events.TimerHandle"
        fully_qualified_name: "asyncio.events.TimerHandle"
      }
    }
    parameters {
      name: "other"
      type_annotation {
        pretty_printed_name: "asyncio.events.TimerHandle"
        fully_qualified_name: "asyncio.events.TimerHandle"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__le__"
    fully_qualified_name: "asyncio.events.TimerHandle.__le__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "asyncio.events.TimerHandle"
        fully_qualified_name: "asyncio.events.TimerHandle"
      }
    }
    parameters {
      name: "other"
      type_annotation {
        pretty_printed_name: "asyncio.events.TimerHandle"
        fully_qualified_name: "asyncio.events.TimerHandle"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__gt__"
    fully_qualified_name: "asyncio.events.TimerHandle.__gt__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "asyncio.events.TimerHandle"
        fully_qualified_name: "asyncio.events.TimerHandle"
      }
    }
    parameters {
      name: "other"
      type_annotation {
        pretty_printed_name: "asyncio.events.TimerHandle"
        fully_qualified_name: "asyncio.events.TimerHandle"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__ge__"
    fully_qualified_name: "asyncio.events.TimerHandle.__ge__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "asyncio.events.TimerHandle"
        fully_qualified_name: "asyncio.events.TimerHandle"
      }
    }
    parameters {
      name: "other"
      type_annotation {
        pretty_printed_name: "asyncio.events.TimerHandle"
        fully_qualified_name: "asyncio.events.TimerHandle"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__eq__"
    fully_qualified_name: "asyncio.events.TimerHandle.__eq__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "asyncio.events.TimerHandle"
        fully_qualified_name: "asyncio.events.TimerHandle"
      }
    }
    parameters {
      name: "other"
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "AbstractServer"
  fully_qualified_name: "asyncio.events.AbstractServer"
  super_classes: "builtins.object"
  methods {
    name: "close"
    fully_qualified_name: "asyncio.events.AbstractServer.close"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.events.AbstractServer"
        fully_qualified_name: "asyncio.events.AbstractServer"
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__aenter__"
    fully_qualified_name: "asyncio.events.AbstractServer.__aenter__"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,UnboundType[Self]]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "UnboundType[Self]"
        kind: UNBOUND
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.events.AbstractServer"
        fully_qualified_name: "asyncio.events.AbstractServer"
      }
    }
    is_asynchronous: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__aexit__"
    fully_qualified_name: "asyncio.events.AbstractServer.__aexit__"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,None]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.events.AbstractServer"
        fully_qualified_name: "asyncio.events.AbstractServer"
      }
    }
    parameters {
      name: "exc"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "UnboundType[Unused]"
        kind: UNBOUND
      }
    }
    is_asynchronous: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "get_loop"
    fully_qualified_name: "asyncio.events.AbstractServer.get_loop"
    return_annotation {
      pretty_printed_name: "asyncio.events.AbstractEventLoop"
      fully_qualified_name: "asyncio.events.AbstractEventLoop"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.events.AbstractServer"
        fully_qualified_name: "asyncio.events.AbstractServer"
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "is_serving"
    fully_qualified_name: "asyncio.events.AbstractServer.is_serving"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.events.AbstractServer"
        fully_qualified_name: "asyncio.events.AbstractServer"
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "start_serving"
    fully_qualified_name: "asyncio.events.AbstractServer.start_serving"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,None]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.events.AbstractServer"
        fully_qualified_name: "asyncio.events.AbstractServer"
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    is_asynchronous: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "serve_forever"
    fully_qualified_name: "asyncio.events.AbstractServer.serve_forever"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,None]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.events.AbstractServer"
        fully_qualified_name: "asyncio.events.AbstractServer"
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    is_asynchronous: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "wait_closed"
    fully_qualified_name: "asyncio.events.AbstractServer.wait_closed"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,None]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.events.AbstractServer"
        fully_qualified_name: "asyncio.events.AbstractServer"
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    is_asynchronous: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "AbstractEventLoop"
  fully_qualified_name: "asyncio.events.AbstractEventLoop"
  super_classes: "builtins.object"
  methods {
    name: "run_forever"
    fully_qualified_name: "asyncio.events.AbstractEventLoop.run_forever"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.events.AbstractEventLoop"
        fully_qualified_name: "asyncio.events.AbstractEventLoop"
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "stop"
    fully_qualified_name: "asyncio.events.AbstractEventLoop.stop"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.events.AbstractEventLoop"
        fully_qualified_name: "asyncio.events.AbstractEventLoop"
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "is_running"
    fully_qualified_name: "asyncio.events.AbstractEventLoop.is_running"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.events.AbstractEventLoop"
        fully_qualified_name: "asyncio.events.AbstractEventLoop"
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "is_closed"
    fully_qualified_name: "asyncio.events.AbstractEventLoop.is_closed"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.events.AbstractEventLoop"
        fully_qualified_name: "asyncio.events.AbstractEventLoop"
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "close"
    fully_qualified_name: "asyncio.events.AbstractEventLoop.close"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.events.AbstractEventLoop"
        fully_qualified_name: "asyncio.events.AbstractEventLoop"
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "shutdown_asyncgens"
    fully_qualified_name: "asyncio.events.AbstractEventLoop.shutdown_asyncgens"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,None]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.events.AbstractEventLoop"
        fully_qualified_name: "asyncio.events.AbstractEventLoop"
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    is_asynchronous: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "call_soon"
    fully_qualified_name: "asyncio.events.AbstractEventLoop.call_soon"
    return_annotation {
      pretty_printed_name: "asyncio.events.Handle"
      fully_qualified_name: "asyncio.events.Handle"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.events.AbstractEventLoop"
        fully_qualified_name: "asyncio.events.AbstractEventLoop"
      }
    }
    parameters {
      name: "callback"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
  }
  methods {
    name: "call_soon"
    fully_qualified_name: "asyncio.events.AbstractEventLoop.call_soon"
    return_annotation {
      pretty_printed_name: "asyncio.events.Handle"
      fully_qualified_name: "asyncio.events.Handle"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.events.AbstractEventLoop"
        fully_qualified_name: "asyncio.events.AbstractEventLoop"
      }
    }
    parameters {
      name: "callback"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "context"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[contextvars.Context,None]"
        kind: UNION
        args {
          pretty_printed_name: "contextvars.Context"
          fully_qualified_name: "contextvars.Context"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "call_later"
    fully_qualified_name: "asyncio.events.AbstractEventLoop.call_later"
    return_annotation {
      pretty_printed_name: "asyncio.events.TimerHandle"
      fully_qualified_name: "asyncio.events.TimerHandle"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.events.AbstractEventLoop"
        fully_qualified_name: "asyncio.events.AbstractEventLoop"
      }
    }
    parameters {
      name: "delay"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
    }
    parameters {
      name: "callback"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
  }
  methods {
    name: "call_later"
    fully_qualified_name: "asyncio.events.AbstractEventLoop.call_later"
    return_annotation {
      pretty_printed_name: "asyncio.events.TimerHandle"
      fully_qualified_name: "asyncio.events.TimerHandle"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.events.AbstractEventLoop"
        fully_qualified_name: "asyncio.events.AbstractEventLoop"
      }
    }
    parameters {
      name: "delay"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
    }
    parameters {
      name: "callback"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "context"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[contextvars.Context,None]"
        kind: UNION
        args {
          pretty_printed_name: "contextvars.Context"
          fully_qualified_name: "contextvars.Context"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "call_at"
    fully_qualified_name: "asyncio.events.AbstractEventLoop.call_at"
    return_annotation {
      pretty_printed_name: "asyncio.events.TimerHandle"
      fully_qualified_name: "asyncio.events.TimerHandle"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.events.AbstractEventLoop"
        fully_qualified_name: "asyncio.events.AbstractEventLoop"
      }
    }
    parameters {
      name: "when"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
    }
    parameters {
      name: "callback"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
  }
  methods {
    name: "call_at"
    fully_qualified_name: "asyncio.events.AbstractEventLoop.call_at"
    return_annotation {
      pretty_printed_name: "asyncio.events.TimerHandle"
      fully_qualified_name: "asyncio.events.TimerHandle"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.events.AbstractEventLoop"
        fully_qualified_name: "asyncio.events.AbstractEventLoop"
      }
    }
    parameters {
      name: "when"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
    }
    parameters {
      name: "callback"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "context"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[contextvars.Context,None]"
        kind: UNION
        args {
          pretty_printed_name: "contextvars.Context"
          fully_qualified_name: "contextvars.Context"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "time"
    fully_qualified_name: "asyncio.events.AbstractEventLoop.time"
    return_annotation {
      pretty_printed_name: "builtins.float"
      fully_qualified_name: "builtins.float"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.events.AbstractEventLoop"
        fully_qualified_name: "asyncio.events.AbstractEventLoop"
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "create_future"
    fully_qualified_name: "asyncio.events.AbstractEventLoop.create_future"
    return_annotation {
      pretty_printed_name: "asyncio.futures.Future[Any]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "asyncio.futures.Future"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.events.AbstractEventLoop"
        fully_qualified_name: "asyncio.events.AbstractEventLoop"
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "create_task"
    fully_qualified_name: "asyncio.events.AbstractEventLoop.create_task"
    return_annotation {
      pretty_printed_name: "asyncio.tasks.Task[asyncio.events._T]"
      args {
        pretty_printed_name: "asyncio.events._T"
        kind: TYPE_VAR
      }
      fully_qualified_name: "asyncio.tasks.Task"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.events.AbstractEventLoop"
        fully_qualified_name: "asyncio.events.AbstractEventLoop"
      }
    }
    parameters {
      name: "coro"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.Coroutine[Any,Any,asyncio.events._T],typing.Generator[Any,None,asyncio.events._T]]"
        kind: UNION
        args {
          pretty_printed_name: "typing.Coroutine[Any,Any,asyncio.events._T]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          args {
            pretty_printed_name: "asyncio.events._T"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Coroutine"
        }
        args {
          pretty_printed_name: "typing.Generator[Any,None,asyncio.events._T]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
          args {
            pretty_printed_name: "asyncio.events._T"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Generator"
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
  }
  methods {
    name: "create_task"
    fully_qualified_name: "asyncio.events.AbstractEventLoop.create_task"
    return_annotation {
      pretty_printed_name: "asyncio.tasks.Task[asyncio.events._T]"
      args {
        pretty_printed_name: "asyncio.events._T"
        kind: TYPE_VAR
      }
      fully_qualified_name: "asyncio.tasks.Task"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.events.AbstractEventLoop"
        fully_qualified_name: "asyncio.events.AbstractEventLoop"
      }
    }
    parameters {
      name: "coro"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.Coroutine[Any,Any,asyncio.events._T],typing.Generator[Any,None,asyncio.events._T]]"
        kind: UNION
        args {
          pretty_printed_name: "typing.Coroutine[Any,Any,asyncio.events._T]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          args {
            pretty_printed_name: "asyncio.events._T"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Coroutine"
        }
        args {
          pretty_printed_name: "typing.Generator[Any,None,asyncio.events._T]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
          args {
            pretty_printed_name: "asyncio.events._T"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Generator"
        }
      }
    }
    parameters {
      name: "name"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "set_task_factory"
    fully_qualified_name: "asyncio.events.AbstractEventLoop.set_task_factory"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.events.AbstractEventLoop"
        fully_qualified_name: "asyncio.events.AbstractEventLoop"
      }
    }
    parameters {
      name: "factory"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[asyncio.events._TaskFactory,None]"
        kind: UNION
        args {
          pretty_printed_name: "asyncio.events._TaskFactory"
          fully_qualified_name: "asyncio.events._TaskFactory"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "get_task_factory"
    fully_qualified_name: "asyncio.events.AbstractEventLoop.get_task_factory"
    return_annotation {
      pretty_printed_name: "Union[asyncio.events._TaskFactory,None]"
      kind: UNION
      args {
        pretty_printed_name: "asyncio.events._TaskFactory"
        fully_qualified_name: "asyncio.events._TaskFactory"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.events.AbstractEventLoop"
        fully_qualified_name: "asyncio.events.AbstractEventLoop"
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "call_soon_threadsafe"
    fully_qualified_name: "asyncio.events.AbstractEventLoop.call_soon_threadsafe"
    return_annotation {
      pretty_printed_name: "asyncio.events.Handle"
      fully_qualified_name: "asyncio.events.Handle"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.events.AbstractEventLoop"
        fully_qualified_name: "asyncio.events.AbstractEventLoop"
      }
    }
    parameters {
      name: "callback"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
  }
  methods {
    name: "call_soon_threadsafe"
    fully_qualified_name: "asyncio.events.AbstractEventLoop.call_soon_threadsafe"
    return_annotation {
      pretty_printed_name: "asyncio.events.Handle"
      fully_qualified_name: "asyncio.events.Handle"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.events.AbstractEventLoop"
        fully_qualified_name: "asyncio.events.AbstractEventLoop"
      }
    }
    parameters {
      name: "callback"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "context"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[contextvars.Context,None]"
        kind: UNION
        args {
          pretty_printed_name: "contextvars.Context"
          fully_qualified_name: "contextvars.Context"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "run_in_executor"
    fully_qualified_name: "asyncio.events.AbstractEventLoop.run_in_executor"
    return_annotation {
      pretty_printed_name: "asyncio.futures.Future[asyncio.events._T]"
      args {
        pretty_printed_name: "asyncio.events._T"
        kind: TYPE_VAR
      }
      fully_qualified_name: "asyncio.futures.Future"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.events.AbstractEventLoop"
        fully_qualified_name: "asyncio.events.AbstractEventLoop"
      }
    }
    parameters {
      name: "executor"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "func"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "set_default_executor"
    fully_qualified_name: "asyncio.events.AbstractEventLoop.set_default_executor"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.events.AbstractEventLoop"
        fully_qualified_name: "asyncio.events.AbstractEventLoop"
      }
    }
    parameters {
      name: "executor"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "getaddrinfo"
    fully_qualified_name: "asyncio.events.AbstractEventLoop.getaddrinfo"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,builtins.list[Tuple[socket.AddressFamily,socket.SocketKind,builtins.int,builtins.str,Union[Tuple[builtins.str,builtins.int],Tuple[builtins.str,builtins.int,builtins.int,builtins.int]]]]]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "builtins.list[Tuple[socket.AddressFamily,socket.SocketKind,builtins.int,builtins.str,Union[Tuple[builtins.str,builtins.int],Tuple[builtins.str,builtins.int,builtins.int,builtins.int]]]]"
        args {
          pretty_printed_name: "Tuple[socket.AddressFamily,socket.SocketKind,builtins.int,builtins.str,Union[Tuple[builtins.str,builtins.int],Tuple[builtins.str,builtins.int,builtins.int,builtins.int]]]"
          kind: TUPLE
          args {
            pretty_printed_name: "socket.AddressFamily"
            fully_qualified_name: "socket.AddressFamily"
          }
          args {
            pretty_printed_name: "socket.SocketKind"
            fully_qualified_name: "socket.SocketKind"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "Union[Tuple[builtins.str,builtins.int],Tuple[builtins.str,builtins.int,builtins.int,builtins.int]]"
            kind: UNION
            args {
              pretty_printed_name: "Tuple[builtins.str,builtins.int]"
              kind: TUPLE
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.int"
                fully_qualified_name: "builtins.int"
              }
            }
            args {
              pretty_printed_name: "Tuple[builtins.str,builtins.int,builtins.int,builtins.int]"
              kind: TUPLE
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.int"
                fully_qualified_name: "builtins.int"
              }
              args {
                pretty_printed_name: "builtins.int"
                fully_qualified_name: "builtins.int"
              }
              args {
                pretty_printed_name: "builtins.int"
                fully_qualified_name: "builtins.int"
              }
            }
          }
        }
        fully_qualified_name: "builtins.list"
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.events.AbstractEventLoop"
        fully_qualified_name: "asyncio.events.AbstractEventLoop"
      }
    }
    parameters {
      name: "host"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.bytes,builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "port"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.bytes,builtins.str,builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "family"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    parameters {
      name: "type"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    parameters {
      name: "proto"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    parameters {
      name: "flags"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    is_asynchronous: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "getnameinfo"
    fully_qualified_name: "asyncio.events.AbstractEventLoop.getnameinfo"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,Tuple[builtins.str,builtins.str]]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Tuple[builtins.str,builtins.str]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.events.AbstractEventLoop"
        fully_qualified_name: "asyncio.events.AbstractEventLoop"
      }
    }
    parameters {
      name: "sockaddr"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Tuple[builtins.str,builtins.int],Tuple[builtins.str,builtins.int,builtins.int,builtins.int]]"
        kind: UNION
        args {
          pretty_printed_name: "Tuple[builtins.str,builtins.int]"
          kind: TUPLE
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
        }
        args {
          pretty_printed_name: "Tuple[builtins.str,builtins.int,builtins.int,builtins.int]"
          kind: TUPLE
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
        }
      }
    }
    parameters {
      name: "flags"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    is_asynchronous: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "start_tls"
    fully_qualified_name: "asyncio.events.AbstractEventLoop.start_tls"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,asyncio.transports.Transport]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "asyncio.transports.Transport"
        fully_qualified_name: "asyncio.transports.Transport"
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.events.AbstractEventLoop"
        fully_qualified_name: "asyncio.events.AbstractEventLoop"
      }
    }
    parameters {
      name: "transport"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.transports.BaseTransport"
        fully_qualified_name: "asyncio.transports.BaseTransport"
      }
    }
    parameters {
      name: "protocol"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.protocols.BaseProtocol"
        fully_qualified_name: "asyncio.protocols.BaseProtocol"
      }
    }
    parameters {
      name: "sslcontext"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "ssl.SSLContext"
        fully_qualified_name: "ssl.SSLContext"
      }
    }
    parameters {
      name: "server_side"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    parameters {
      name: "server_hostname"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "ssl_handshake_timeout"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[builtins.float,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    is_asynchronous: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "create_unix_server"
    fully_qualified_name: "asyncio.events.AbstractEventLoop.create_unix_server"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,asyncio.base_events.Server]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "asyncio.base_events.Server"
        fully_qualified_name: "asyncio.base_events.Server"
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.events.AbstractEventLoop"
        fully_qualified_name: "asyncio.events.AbstractEventLoop"
      }
    }
    parameters {
      name: "protocol_factory"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UnboundType[_ProtocolFactory]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "path"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[UnboundType[StrPath],None]"
        kind: UNION
        args {
          pretty_printed_name: "UnboundType[StrPath]"
          kind: UNBOUND
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "sock"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[socket.socket,None]"
        kind: UNION
        args {
          pretty_printed_name: "socket.socket"
          fully_qualified_name: "socket.socket"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "backlog"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    parameters {
      name: "ssl"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[UnboundType[_SSLContext],None]"
        kind: UNION
        args {
          pretty_printed_name: "UnboundType[_SSLContext]"
          kind: UNBOUND
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "ssl_handshake_timeout"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[builtins.float,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "start_serving"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    is_asynchronous: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "create_unix_connection"
    fully_qualified_name: "asyncio.events.AbstractEventLoop.create_unix_connection"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,Tuple[asyncio.transports.Transport,asyncio.events._ProtocolT]]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Tuple[asyncio.transports.Transport,asyncio.events._ProtocolT]"
        kind: TUPLE
        args {
          pretty_printed_name: "asyncio.transports.Transport"
          fully_qualified_name: "asyncio.transports.Transport"
        }
        args {
          pretty_printed_name: "asyncio.events._ProtocolT"
          kind: TYPE_VAR
        }
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.events.AbstractEventLoop"
        fully_qualified_name: "asyncio.events.AbstractEventLoop"
      }
    }
    parameters {
      name: "protocol_factory"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    parameters {
      name: "path"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "ssl"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[UnboundType[_SSLContext],None]"
        kind: UNION
        args {
          pretty_printed_name: "UnboundType[_SSLContext]"
          kind: UNBOUND
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "sock"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[socket.socket,None]"
        kind: UNION
        args {
          pretty_printed_name: "socket.socket"
          fully_qualified_name: "socket.socket"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "server_hostname"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "ssl_handshake_timeout"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[builtins.float,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    is_asynchronous: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "sock_sendfile"
    fully_qualified_name: "asyncio.events.AbstractEventLoop.sock_sendfile"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,builtins.int]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.events.AbstractEventLoop"
        fully_qualified_name: "asyncio.events.AbstractEventLoop"
      }
    }
    parameters {
      name: "sock"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "socket.socket"
        fully_qualified_name: "socket.socket"
      }
    }
    parameters {
      name: "file"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.IO[builtins.bytes]"
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        fully_qualified_name: "typing.IO"
      }
    }
    parameters {
      name: "offset"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    parameters {
      name: "count"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "fallback"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[builtins.bool,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    is_asynchronous: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "sendfile"
    fully_qualified_name: "asyncio.events.AbstractEventLoop.sendfile"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,builtins.int]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.events.AbstractEventLoop"
        fully_qualified_name: "asyncio.events.AbstractEventLoop"
      }
    }
    parameters {
      name: "transport"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.transports.WriteTransport"
        fully_qualified_name: "asyncio.transports.WriteTransport"
      }
    }
    parameters {
      name: "file"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.IO[builtins.bytes]"
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        fully_qualified_name: "typing.IO"
      }
    }
    parameters {
      name: "offset"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    parameters {
      name: "count"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "fallback"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    is_asynchronous: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "create_datagram_endpoint"
    fully_qualified_name: "asyncio.events.AbstractEventLoop.create_datagram_endpoint"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,Tuple[asyncio.transports.DatagramTransport,asyncio.events._ProtocolT]]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Tuple[asyncio.transports.DatagramTransport,asyncio.events._ProtocolT]"
        kind: TUPLE
        args {
          pretty_printed_name: "asyncio.transports.DatagramTransport"
          fully_qualified_name: "asyncio.transports.DatagramTransport"
        }
        args {
          pretty_printed_name: "asyncio.events._ProtocolT"
          kind: TYPE_VAR
        }
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.events.AbstractEventLoop"
        fully_qualified_name: "asyncio.events.AbstractEventLoop"
      }
    }
    parameters {
      name: "protocol_factory"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    parameters {
      name: "local_addr"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Tuple[builtins.str,builtins.int],builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "Tuple[builtins.str,builtins.int]"
          kind: TUPLE
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "remote_addr"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Tuple[builtins.str,builtins.int],builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "Tuple[builtins.str,builtins.int]"
          kind: TUPLE
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "family"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    parameters {
      name: "proto"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    parameters {
      name: "flags"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    parameters {
      name: "reuse_address"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[builtins.bool,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "reuse_port"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[builtins.bool,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "allow_broadcast"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[builtins.bool,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "sock"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[socket.socket,None]"
        kind: UNION
        args {
          pretty_printed_name: "socket.socket"
          fully_qualified_name: "socket.socket"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    is_asynchronous: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "connect_read_pipe"
    fully_qualified_name: "asyncio.events.AbstractEventLoop.connect_read_pipe"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,Tuple[asyncio.transports.ReadTransport,asyncio.events._ProtocolT]]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Tuple[asyncio.transports.ReadTransport,asyncio.events._ProtocolT]"
        kind: TUPLE
        args {
          pretty_printed_name: "asyncio.transports.ReadTransport"
          fully_qualified_name: "asyncio.transports.ReadTransport"
        }
        args {
          pretty_printed_name: "asyncio.events._ProtocolT"
          kind: TYPE_VAR
        }
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.events.AbstractEventLoop"
        fully_qualified_name: "asyncio.events.AbstractEventLoop"
      }
    }
    parameters {
      name: "protocol_factory"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    parameters {
      name: "pipe"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    is_asynchronous: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "connect_write_pipe"
    fully_qualified_name: "asyncio.events.AbstractEventLoop.connect_write_pipe"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,Tuple[asyncio.transports.WriteTransport,asyncio.events._ProtocolT]]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Tuple[asyncio.transports.WriteTransport,asyncio.events._ProtocolT]"
        kind: TUPLE
        args {
          pretty_printed_name: "asyncio.transports.WriteTransport"
          fully_qualified_name: "asyncio.transports.WriteTransport"
        }
        args {
          pretty_printed_name: "asyncio.events._ProtocolT"
          kind: TYPE_VAR
        }
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.events.AbstractEventLoop"
        fully_qualified_name: "asyncio.events.AbstractEventLoop"
      }
    }
    parameters {
      name: "protocol_factory"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    parameters {
      name: "pipe"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    is_asynchronous: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "subprocess_shell"
    fully_qualified_name: "asyncio.events.AbstractEventLoop.subprocess_shell"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,Tuple[asyncio.transports.SubprocessTransport,asyncio.events._ProtocolT]]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Tuple[asyncio.transports.SubprocessTransport,asyncio.events._ProtocolT]"
        kind: TUPLE
        args {
          pretty_printed_name: "asyncio.transports.SubprocessTransport"
          fully_qualified_name: "asyncio.transports.SubprocessTransport"
        }
        args {
          pretty_printed_name: "asyncio.events._ProtocolT"
          kind: TYPE_VAR
        }
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.events.AbstractEventLoop"
        fully_qualified_name: "asyncio.events.AbstractEventLoop"
      }
    }
    parameters {
      name: "protocol_factory"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    parameters {
      name: "cmd"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.bytes,builtins.str]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
    }
    parameters {
      name: "stdin"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[builtins.int,typing.IO[Any],None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "typing.IO[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "typing.IO"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "stdout"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[builtins.int,typing.IO[Any],None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "typing.IO[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "typing.IO"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "stderr"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[builtins.int,typing.IO[Any],None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "typing.IO[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "typing.IO"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "universal_newlines"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Literal[builtins.bool]"
        kind: LITERAL
        args {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
      }
      has_default: true
    }
    parameters {
      name: "shell"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Literal[builtins.bool]"
        kind: LITERAL
        args {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
      }
      has_default: true
    }
    parameters {
      name: "bufsize"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Literal[builtins.int]"
        kind: LITERAL
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
      has_default: true
    }
    parameters {
      name: "encoding"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      has_default: true
    }
    parameters {
      name: "errors"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      has_default: true
    }
    parameters {
      name: "text"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[Literal[builtins.bool],None]"
        kind: UNION
        args {
          pretty_printed_name: "Literal[builtins.bool]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.bool"
            fully_qualified_name: "builtins.bool"
          }
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "kwargs"
      kind: VAR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    is_asynchronous: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "subprocess_exec"
    fully_qualified_name: "asyncio.events.AbstractEventLoop.subprocess_exec"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,Tuple[asyncio.transports.SubprocessTransport,asyncio.events._ProtocolT]]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Tuple[asyncio.transports.SubprocessTransport,asyncio.events._ProtocolT]"
        kind: TUPLE
        args {
          pretty_printed_name: "asyncio.transports.SubprocessTransport"
          fully_qualified_name: "asyncio.transports.SubprocessTransport"
        }
        args {
          pretty_printed_name: "asyncio.events._ProtocolT"
          kind: TYPE_VAR
        }
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.events.AbstractEventLoop"
        fully_qualified_name: "asyncio.events.AbstractEventLoop"
      }
    }
    parameters {
      name: "protocol_factory"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    parameters {
      name: "program"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "stdin"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[builtins.int,typing.IO[Any],None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "typing.IO[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "typing.IO"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "stdout"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[builtins.int,typing.IO[Any],None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "typing.IO[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "typing.IO"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "stderr"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[builtins.int,typing.IO[Any],None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "typing.IO[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "typing.IO"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "universal_newlines"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Literal[builtins.bool]"
        kind: LITERAL
        args {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
      }
      has_default: true
    }
    parameters {
      name: "shell"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Literal[builtins.bool]"
        kind: LITERAL
        args {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
      }
      has_default: true
    }
    parameters {
      name: "bufsize"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Literal[builtins.int]"
        kind: LITERAL
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
      has_default: true
    }
    parameters {
      name: "encoding"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      has_default: true
    }
    parameters {
      name: "errors"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      has_default: true
    }
    parameters {
      name: "kwargs"
      kind: VAR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    is_asynchronous: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "add_reader"
    fully_qualified_name: "asyncio.events.AbstractEventLoop.add_reader"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.events.AbstractEventLoop"
        fully_qualified_name: "asyncio.events.AbstractEventLoop"
      }
    }
    parameters {
      name: "fd"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UnboundType[FileDescriptorLike]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "callback"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "remove_reader"
    fully_qualified_name: "asyncio.events.AbstractEventLoop.remove_reader"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.events.AbstractEventLoop"
        fully_qualified_name: "asyncio.events.AbstractEventLoop"
      }
    }
    parameters {
      name: "fd"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UnboundType[FileDescriptorLike]"
        kind: UNBOUND
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "add_writer"
    fully_qualified_name: "asyncio.events.AbstractEventLoop.add_writer"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.events.AbstractEventLoop"
        fully_qualified_name: "asyncio.events.AbstractEventLoop"
      }
    }
    parameters {
      name: "fd"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UnboundType[FileDescriptorLike]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "callback"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "remove_writer"
    fully_qualified_name: "asyncio.events.AbstractEventLoop.remove_writer"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.events.AbstractEventLoop"
        fully_qualified_name: "asyncio.events.AbstractEventLoop"
      }
    }
    parameters {
      name: "fd"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UnboundType[FileDescriptorLike]"
        kind: UNBOUND
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "sock_recv"
    fully_qualified_name: "asyncio.events.AbstractEventLoop.sock_recv"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,builtins.bytes]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.events.AbstractEventLoop"
        fully_qualified_name: "asyncio.events.AbstractEventLoop"
      }
    }
    parameters {
      name: "sock"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "socket.socket"
        fully_qualified_name: "socket.socket"
      }
    }
    parameters {
      name: "nbytes"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    is_asynchronous: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "sock_recv_into"
    fully_qualified_name: "asyncio.events.AbstractEventLoop.sock_recv_into"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,builtins.int]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.events.AbstractEventLoop"
        fully_qualified_name: "asyncio.events.AbstractEventLoop"
      }
    }
    parameters {
      name: "sock"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "socket.socket"
        fully_qualified_name: "socket.socket"
      }
    }
    parameters {
      name: "buf"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UnboundType[WriteableBuffer]"
        kind: UNBOUND
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    is_asynchronous: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "sock_sendall"
    fully_qualified_name: "asyncio.events.AbstractEventLoop.sock_sendall"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,None]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.events.AbstractEventLoop"
        fully_qualified_name: "asyncio.events.AbstractEventLoop"
      }
    }
    parameters {
      name: "sock"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "socket.socket"
        fully_qualified_name: "socket.socket"
      }
    }
    parameters {
      name: "data"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UnboundType[ReadableBuffer]"
        kind: UNBOUND
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    is_asynchronous: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "sock_connect"
    fully_qualified_name: "asyncio.events.AbstractEventLoop.sock_connect"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,None]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.events.AbstractEventLoop"
        fully_qualified_name: "asyncio.events.AbstractEventLoop"
      }
    }
    parameters {
      name: "sock"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "socket.socket"
        fully_qualified_name: "socket.socket"
      }
    }
    parameters {
      name: "address"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UnboundType[_Address]"
        kind: UNBOUND
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    is_asynchronous: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "sock_accept"
    fully_qualified_name: "asyncio.events.AbstractEventLoop.sock_accept"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,Tuple[socket.socket,UnboundType[_RetAddress]]]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Tuple[socket.socket,UnboundType[_RetAddress]]"
        kind: TUPLE
        args {
          pretty_printed_name: "socket.socket"
          fully_qualified_name: "socket.socket"
        }
        args {
          pretty_printed_name: "UnboundType[_RetAddress]"
          kind: UNBOUND
        }
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.events.AbstractEventLoop"
        fully_qualified_name: "asyncio.events.AbstractEventLoop"
      }
    }
    parameters {
      name: "sock"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "socket.socket"
        fully_qualified_name: "socket.socket"
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    is_asynchronous: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "add_signal_handler"
    fully_qualified_name: "asyncio.events.AbstractEventLoop.add_signal_handler"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.events.AbstractEventLoop"
        fully_qualified_name: "asyncio.events.AbstractEventLoop"
      }
    }
    parameters {
      name: "sig"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "callback"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "remove_signal_handler"
    fully_qualified_name: "asyncio.events.AbstractEventLoop.remove_signal_handler"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.events.AbstractEventLoop"
        fully_qualified_name: "asyncio.events.AbstractEventLoop"
      }
    }
    parameters {
      name: "sig"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "set_exception_handler"
    fully_qualified_name: "asyncio.events.AbstractEventLoop.set_exception_handler"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.events.AbstractEventLoop"
        fully_qualified_name: "asyncio.events.AbstractEventLoop"
      }
    }
    parameters {
      name: "handler"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[UnboundType[_ExceptionHandler],None]"
        kind: UNION
        args {
          pretty_printed_name: "UnboundType[_ExceptionHandler]"
          kind: UNBOUND
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "get_exception_handler"
    fully_qualified_name: "asyncio.events.AbstractEventLoop.get_exception_handler"
    return_annotation {
      pretty_printed_name: "Union[UnboundType[_ExceptionHandler],None]"
      kind: UNION
      args {
        pretty_printed_name: "UnboundType[_ExceptionHandler]"
        kind: UNBOUND
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.events.AbstractEventLoop"
        fully_qualified_name: "asyncio.events.AbstractEventLoop"
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "default_exception_handler"
    fully_qualified_name: "asyncio.events.AbstractEventLoop.default_exception_handler"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.events.AbstractEventLoop"
        fully_qualified_name: "asyncio.events.AbstractEventLoop"
      }
    }
    parameters {
      name: "context"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UnboundType[_Context]"
        kind: UNBOUND
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "call_exception_handler"
    fully_qualified_name: "asyncio.events.AbstractEventLoop.call_exception_handler"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.events.AbstractEventLoop"
        fully_qualified_name: "asyncio.events.AbstractEventLoop"
      }
    }
    parameters {
      name: "context"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UnboundType[_Context]"
        kind: UNBOUND
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "get_debug"
    fully_qualified_name: "asyncio.events.AbstractEventLoop.get_debug"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.events.AbstractEventLoop"
        fully_qualified_name: "asyncio.events.AbstractEventLoop"
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "set_debug"
    fully_qualified_name: "asyncio.events.AbstractEventLoop.set_debug"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.events.AbstractEventLoop"
        fully_qualified_name: "asyncio.events.AbstractEventLoop"
      }
    }
    parameters {
      name: "enabled"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "shutdown_default_executor"
    fully_qualified_name: "asyncio.events.AbstractEventLoop.shutdown_default_executor"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,None]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.events.AbstractEventLoop"
        fully_qualified_name: "asyncio.events.AbstractEventLoop"
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    is_asynchronous: true
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "connect_accepted_socket"
    fully_qualified_name: "asyncio.events.AbstractEventLoop.connect_accepted_socket"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,Tuple[asyncio.transports.Transport,asyncio.events._ProtocolT]]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Tuple[asyncio.transports.Transport,asyncio.events._ProtocolT]"
        kind: TUPLE
        args {
          pretty_printed_name: "asyncio.transports.Transport"
          fully_qualified_name: "asyncio.transports.Transport"
        }
        args {
          pretty_printed_name: "asyncio.events._ProtocolT"
          kind: TYPE_VAR
        }
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.events.AbstractEventLoop"
        fully_qualified_name: "asyncio.events.AbstractEventLoop"
      }
    }
    parameters {
      name: "protocol_factory"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    parameters {
      name: "sock"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "socket.socket"
        fully_qualified_name: "socket.socket"
      }
    }
    parameters {
      name: "ssl"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[UnboundType[_SSLContext],None]"
        kind: UNION
        args {
          pretty_printed_name: "UnboundType[_SSLContext]"
          kind: UNBOUND
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "ssl_handshake_timeout"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[builtins.float,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    is_asynchronous: true
    valid_for: "310"
  }
  overloaded_methods {
    name: "run_until_complete"
    fullname: "asyncio.events.AbstractEventLoop.run_until_complete"
    definitions {
      name: "run_until_complete"
      fully_qualified_name: "asyncio.events.AbstractEventLoop.run_until_complete"
      return_annotation {
        pretty_printed_name: "asyncio.events._T"
        kind: TYPE_VAR
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "asyncio.events.AbstractEventLoop"
          fully_qualified_name: "asyncio.events.AbstractEventLoop"
        }
      }
      parameters {
        name: "future"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "typing.Generator[Any,None,asyncio.events._T]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
          args {
            pretty_printed_name: "asyncio.events._T"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Generator"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      resolved_decorator_names: "abstractmethod"
      is_abstract: true
      is_overload: true
    }
    definitions {
      name: "run_until_complete"
      fully_qualified_name: "asyncio.events.AbstractEventLoop.run_until_complete"
      return_annotation {
        pretty_printed_name: "asyncio.events._T"
        kind: TYPE_VAR
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "asyncio.events.AbstractEventLoop"
          fully_qualified_name: "asyncio.events.AbstractEventLoop"
        }
      }
      parameters {
        name: "future"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "typing.Awaitable[asyncio.events._T]"
          args {
            pretty_printed_name: "asyncio.events._T"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Awaitable"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      resolved_decorator_names: "abstractmethod"
      is_abstract: true
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "create_connection"
    fullname: "asyncio.events.AbstractEventLoop.create_connection"
    definitions {
      name: "create_connection"
      fully_qualified_name: "asyncio.events.AbstractEventLoop.create_connection"
      return_annotation {
        pretty_printed_name: "typing.Coroutine[Any,Any,Tuple[asyncio.transports.Transport,asyncio.events._ProtocolT]]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "Tuple[asyncio.transports.Transport,asyncio.events._ProtocolT]"
          kind: TUPLE
          args {
            pretty_printed_name: "asyncio.transports.Transport"
            fully_qualified_name: "asyncio.transports.Transport"
          }
          args {
            pretty_printed_name: "asyncio.events._ProtocolT"
            kind: TYPE_VAR
          }
        }
        fully_qualified_name: "typing.Coroutine"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "asyncio.events.AbstractEventLoop"
          fully_qualified_name: "asyncio.events.AbstractEventLoop"
        }
      }
      parameters {
        name: "protocol_factory"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
      }
      parameters {
        name: "host"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        has_default: true
      }
      parameters {
        name: "port"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        has_default: true
      }
      parameters {
        name: "ssl"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "Union[UnboundType[_SSLContext],None]"
          kind: UNION
          args {
            pretty_printed_name: "UnboundType[_SSLContext]"
            kind: UNBOUND
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "family"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        has_default: true
      }
      parameters {
        name: "proto"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        has_default: true
      }
      parameters {
        name: "flags"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        has_default: true
      }
      parameters {
        name: "sock"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "None"
          kind: NONE
        }
        has_default: true
      }
      parameters {
        name: "local_addr"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "Union[Tuple[builtins.str,builtins.int],None]"
          kind: UNION
          args {
            pretty_printed_name: "Tuple[builtins.str,builtins.int]"
            kind: TUPLE
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.int"
              fully_qualified_name: "builtins.int"
            }
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "server_hostname"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "ssl_handshake_timeout"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "Union[builtins.float,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      resolved_decorator_names: "abstractmethod"
      is_abstract: true
      is_asynchronous: true
      is_overload: true
    }
    definitions {
      name: "create_connection"
      fully_qualified_name: "asyncio.events.AbstractEventLoop.create_connection"
      return_annotation {
        pretty_printed_name: "typing.Coroutine[Any,Any,Tuple[asyncio.transports.Transport,asyncio.events._ProtocolT]]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "Tuple[asyncio.transports.Transport,asyncio.events._ProtocolT]"
          kind: TUPLE
          args {
            pretty_printed_name: "asyncio.transports.Transport"
            fully_qualified_name: "asyncio.transports.Transport"
          }
          args {
            pretty_printed_name: "asyncio.events._ProtocolT"
            kind: TYPE_VAR
          }
        }
        fully_qualified_name: "typing.Coroutine"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "asyncio.events.AbstractEventLoop"
          fully_qualified_name: "asyncio.events.AbstractEventLoop"
        }
      }
      parameters {
        name: "protocol_factory"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
      }
      parameters {
        name: "host"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "None"
          kind: NONE
        }
        has_default: true
      }
      parameters {
        name: "port"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "None"
          kind: NONE
        }
        has_default: true
      }
      parameters {
        name: "ssl"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "Union[UnboundType[_SSLContext],None]"
          kind: UNION
          args {
            pretty_printed_name: "UnboundType[_SSLContext]"
            kind: UNBOUND
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "family"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        has_default: true
      }
      parameters {
        name: "proto"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        has_default: true
      }
      parameters {
        name: "flags"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        has_default: true
      }
      parameters {
        name: "sock"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "socket.socket"
          fully_qualified_name: "socket.socket"
        }
      }
      parameters {
        name: "local_addr"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "None"
          kind: NONE
        }
        has_default: true
      }
      parameters {
        name: "server_hostname"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "ssl_handshake_timeout"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "Union[builtins.float,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      resolved_decorator_names: "abstractmethod"
      is_abstract: true
      is_asynchronous: true
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
  }
  overloaded_methods {
    name: "create_connection"
    fullname: "asyncio.events.AbstractEventLoop.create_connection"
    definitions {
      name: "create_connection"
      fully_qualified_name: "asyncio.events.AbstractEventLoop.create_connection"
      return_annotation {
        pretty_printed_name: "typing.Coroutine[Any,Any,Tuple[asyncio.transports.Transport,asyncio.events._ProtocolT]]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "Tuple[asyncio.transports.Transport,asyncio.events._ProtocolT]"
          kind: TUPLE
          args {
            pretty_printed_name: "asyncio.transports.Transport"
            fully_qualified_name: "asyncio.transports.Transport"
          }
          args {
            pretty_printed_name: "asyncio.events._ProtocolT"
            kind: TYPE_VAR
          }
        }
        fully_qualified_name: "typing.Coroutine"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "asyncio.events.AbstractEventLoop"
          fully_qualified_name: "asyncio.events.AbstractEventLoop"
        }
      }
      parameters {
        name: "protocol_factory"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
      }
      parameters {
        name: "host"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        has_default: true
      }
      parameters {
        name: "port"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        has_default: true
      }
      parameters {
        name: "ssl"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "Union[UnboundType[_SSLContext],None]"
          kind: UNION
          args {
            pretty_printed_name: "UnboundType[_SSLContext]"
            kind: UNBOUND
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "family"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        has_default: true
      }
      parameters {
        name: "proto"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        has_default: true
      }
      parameters {
        name: "flags"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        has_default: true
      }
      parameters {
        name: "sock"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "None"
          kind: NONE
        }
        has_default: true
      }
      parameters {
        name: "local_addr"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "Union[Tuple[builtins.str,builtins.int],None]"
          kind: UNION
          args {
            pretty_printed_name: "Tuple[builtins.str,builtins.int]"
            kind: TUPLE
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.int"
              fully_qualified_name: "builtins.int"
            }
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "server_hostname"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "ssl_handshake_timeout"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "Union[builtins.float,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "happy_eyeballs_delay"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "Union[builtins.float,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "interleave"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "Union[builtins.int,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      resolved_decorator_names: "abstractmethod"
      is_abstract: true
      is_asynchronous: true
      is_overload: true
    }
    definitions {
      name: "create_connection"
      fully_qualified_name: "asyncio.events.AbstractEventLoop.create_connection"
      return_annotation {
        pretty_printed_name: "typing.Coroutine[Any,Any,Tuple[asyncio.transports.Transport,asyncio.events._ProtocolT]]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "Tuple[asyncio.transports.Transport,asyncio.events._ProtocolT]"
          kind: TUPLE
          args {
            pretty_printed_name: "asyncio.transports.Transport"
            fully_qualified_name: "asyncio.transports.Transport"
          }
          args {
            pretty_printed_name: "asyncio.events._ProtocolT"
            kind: TYPE_VAR
          }
        }
        fully_qualified_name: "typing.Coroutine"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "asyncio.events.AbstractEventLoop"
          fully_qualified_name: "asyncio.events.AbstractEventLoop"
        }
      }
      parameters {
        name: "protocol_factory"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
      }
      parameters {
        name: "host"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "None"
          kind: NONE
        }
        has_default: true
      }
      parameters {
        name: "port"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "None"
          kind: NONE
        }
        has_default: true
      }
      parameters {
        name: "ssl"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "Union[UnboundType[_SSLContext],None]"
          kind: UNION
          args {
            pretty_printed_name: "UnboundType[_SSLContext]"
            kind: UNBOUND
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "family"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        has_default: true
      }
      parameters {
        name: "proto"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        has_default: true
      }
      parameters {
        name: "flags"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        has_default: true
      }
      parameters {
        name: "sock"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "socket.socket"
          fully_qualified_name: "socket.socket"
        }
      }
      parameters {
        name: "local_addr"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "None"
          kind: NONE
        }
        has_default: true
      }
      parameters {
        name: "server_hostname"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "ssl_handshake_timeout"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "Union[builtins.float,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "happy_eyeballs_delay"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "Union[builtins.float,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "interleave"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "Union[builtins.int,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      resolved_decorator_names: "abstractmethod"
      is_abstract: true
      is_asynchronous: true
      is_overload: true
    }
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "create_server"
    fullname: "asyncio.events.AbstractEventLoop.create_server"
    definitions {
      name: "create_server"
      fully_qualified_name: "asyncio.events.AbstractEventLoop.create_server"
      return_annotation {
        pretty_printed_name: "typing.Coroutine[Any,Any,asyncio.base_events.Server]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "asyncio.base_events.Server"
          fully_qualified_name: "asyncio.base_events.Server"
        }
        fully_qualified_name: "typing.Coroutine"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "asyncio.events.AbstractEventLoop"
          fully_qualified_name: "asyncio.events.AbstractEventLoop"
        }
      }
      parameters {
        name: "protocol_factory"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "UnboundType[_ProtocolFactory]"
          kind: UNBOUND
        }
      }
      parameters {
        name: "host"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,typing.Sequence[builtins.str],None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "typing.Sequence[builtins.str]"
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            fully_qualified_name: "typing.Sequence"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "port"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        has_default: true
      }
      parameters {
        name: "family"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        has_default: true
      }
      parameters {
        name: "flags"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        has_default: true
      }
      parameters {
        name: "sock"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "None"
          kind: NONE
        }
        has_default: true
      }
      parameters {
        name: "backlog"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        has_default: true
      }
      parameters {
        name: "ssl"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "Union[UnboundType[_SSLContext],None]"
          kind: UNION
          args {
            pretty_printed_name: "UnboundType[_SSLContext]"
            kind: UNBOUND
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "reuse_address"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "Union[builtins.bool,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bool"
            fully_qualified_name: "builtins.bool"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "reuse_port"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "Union[builtins.bool,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bool"
            fully_qualified_name: "builtins.bool"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "ssl_handshake_timeout"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "Union[builtins.float,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "start_serving"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      resolved_decorator_names: "abstractmethod"
      is_abstract: true
      is_asynchronous: true
      is_overload: true
    }
    definitions {
      name: "create_server"
      fully_qualified_name: "asyncio.events.AbstractEventLoop.create_server"
      return_annotation {
        pretty_printed_name: "typing.Coroutine[Any,Any,asyncio.base_events.Server]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "asyncio.base_events.Server"
          fully_qualified_name: "asyncio.base_events.Server"
        }
        fully_qualified_name: "typing.Coroutine"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "asyncio.events.AbstractEventLoop"
          fully_qualified_name: "asyncio.events.AbstractEventLoop"
        }
      }
      parameters {
        name: "protocol_factory"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "UnboundType[_ProtocolFactory]"
          kind: UNBOUND
        }
      }
      parameters {
        name: "host"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "None"
          kind: NONE
        }
        has_default: true
      }
      parameters {
        name: "port"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "None"
          kind: NONE
        }
        has_default: true
      }
      parameters {
        name: "family"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        has_default: true
      }
      parameters {
        name: "flags"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        has_default: true
      }
      parameters {
        name: "sock"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "socket.socket"
          fully_qualified_name: "socket.socket"
        }
        has_default: true
      }
      parameters {
        name: "backlog"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        has_default: true
      }
      parameters {
        name: "ssl"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "Union[UnboundType[_SSLContext],None]"
          kind: UNION
          args {
            pretty_printed_name: "UnboundType[_SSLContext]"
            kind: UNBOUND
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "reuse_address"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "Union[builtins.bool,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bool"
            fully_qualified_name: "builtins.bool"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "reuse_port"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "Union[builtins.bool,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bool"
            fully_qualified_name: "builtins.bool"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "ssl_handshake_timeout"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "Union[builtins.float,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "start_serving"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      resolved_decorator_names: "abstractmethod"
      is_abstract: true
      is_asynchronous: true
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "slow_callback_duration"
    fully_qualified_name: "asyncio.events.AbstractEventLoop.slow_callback_duration"
    type_annotation {
      pretty_printed_name: "builtins.float"
      fully_qualified_name: "builtins.float"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "AbstractEventLoopPolicy"
  fully_qualified_name: "asyncio.events.AbstractEventLoopPolicy"
  super_classes: "builtins.object"
  methods {
    name: "get_event_loop"
    fully_qualified_name: "asyncio.events.AbstractEventLoopPolicy.get_event_loop"
    return_annotation {
      pretty_printed_name: "asyncio.events.AbstractEventLoop"
      fully_qualified_name: "asyncio.events.AbstractEventLoop"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.events.AbstractEventLoopPolicy"
        fully_qualified_name: "asyncio.events.AbstractEventLoopPolicy"
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "set_event_loop"
    fully_qualified_name: "asyncio.events.AbstractEventLoopPolicy.set_event_loop"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.events.AbstractEventLoopPolicy"
        fully_qualified_name: "asyncio.events.AbstractEventLoopPolicy"
      }
    }
    parameters {
      name: "loop"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[asyncio.events.AbstractEventLoop,None]"
        kind: UNION
        args {
          pretty_printed_name: "asyncio.events.AbstractEventLoop"
          fully_qualified_name: "asyncio.events.AbstractEventLoop"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "new_event_loop"
    fully_qualified_name: "asyncio.events.AbstractEventLoopPolicy.new_event_loop"
    return_annotation {
      pretty_printed_name: "asyncio.events.AbstractEventLoop"
      fully_qualified_name: "asyncio.events.AbstractEventLoop"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.events.AbstractEventLoopPolicy"
        fully_qualified_name: "asyncio.events.AbstractEventLoopPolicy"
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "get_child_watcher"
    fully_qualified_name: "asyncio.events.AbstractEventLoopPolicy.get_child_watcher"
    return_annotation {
      pretty_printed_name: "asyncio.unix_events.AbstractChildWatcher"
      fully_qualified_name: "asyncio.unix_events.AbstractChildWatcher"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.events.AbstractEventLoopPolicy"
        fully_qualified_name: "asyncio.events.AbstractEventLoopPolicy"
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "set_child_watcher"
    fully_qualified_name: "asyncio.events.AbstractEventLoopPolicy.set_child_watcher"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.events.AbstractEventLoopPolicy"
        fully_qualified_name: "asyncio.events.AbstractEventLoopPolicy"
      }
    }
    parameters {
      name: "watcher"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.unix_events.AbstractChildWatcher"
        fully_qualified_name: "asyncio.unix_events.AbstractChildWatcher"
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "SendfileNotAvailableError"
  fully_qualified_name: "asyncio.events.SendfileNotAvailableError"
  super_classes: "builtins.RuntimeError"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
}
classes {
  name: "CancelledError"
  fully_qualified_name: "concurrent.futures._base.CancelledError"
  super_classes: "concurrent.futures._base.Error"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
}
classes {
  name: "TimeoutError"
  fully_qualified_name: "concurrent.futures._base.TimeoutError"
  super_classes: "concurrent.futures._base.Error"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
}
classes {
  name: "InvalidStateError"
  fully_qualified_name: "asyncio.futures.InvalidStateError"
  super_classes: "concurrent.futures._base.Error"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
}
classes {
  name: "Future"
  fully_qualified_name: "asyncio.futures.Future"
  super_classes: "typing.Awaitable"
  super_classes: "typing.Iterable"
  methods {
    name: "_exception"
    fully_qualified_name: "asyncio.futures.Future._exception"
    return_annotation {
      pretty_printed_name: "builtins.BaseException"
      fully_qualified_name: "builtins.BaseException"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.futures.Future[asyncio.futures._T]"
        args {
          pretty_printed_name: "asyncio.futures._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "asyncio.futures.Future"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__init__"
    fully_qualified_name: "asyncio.futures.Future.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.futures.Future[asyncio.futures._T]"
        args {
          pretty_printed_name: "asyncio.futures._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "asyncio.futures.Future"
      }
    }
    parameters {
      name: "loop"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[asyncio.events.AbstractEventLoop,None]"
        kind: UNION
        args {
          pretty_printed_name: "asyncio.events.AbstractEventLoop"
          fully_qualified_name: "asyncio.events.AbstractEventLoop"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__del__"
    fully_qualified_name: "asyncio.futures.Future.__del__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "asyncio.futures.Future[asyncio.futures._T]"
        args {
          pretty_printed_name: "asyncio.futures._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "asyncio.futures.Future"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "get_loop"
    fully_qualified_name: "asyncio.futures.Future.get_loop"
    return_annotation {
      pretty_printed_name: "asyncio.events.AbstractEventLoop"
      fully_qualified_name: "asyncio.events.AbstractEventLoop"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.futures.Future[asyncio.futures._T]"
        args {
          pretty_printed_name: "asyncio.futures._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "asyncio.futures.Future"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "_callbacks"
    fully_qualified_name: "asyncio.futures.Future._callbacks"
    return_annotation {
      pretty_printed_name: "builtins.list[Tuple[CallableType[builtins.function],contextvars.Context]]"
      args {
        pretty_printed_name: "Tuple[CallableType[builtins.function],contextvars.Context]"
        kind: TUPLE
        args {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
        args {
          pretty_printed_name: "contextvars.Context"
          fully_qualified_name: "contextvars.Context"
        }
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.futures.Future[asyncio.futures._T]"
        args {
          pretty_printed_name: "asyncio.futures._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "asyncio.futures.Future"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "add_done_callback"
    fully_qualified_name: "asyncio.futures.Future.add_done_callback"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.futures.Future[asyncio.futures._T]"
        args {
          pretty_printed_name: "asyncio.futures._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "asyncio.futures.Future"
      }
    }
    parameters {
      name: "__fn"
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    parameters {
      name: "context"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[contextvars.Context,None]"
        kind: UNION
        args {
          pretty_printed_name: "contextvars.Context"
          fully_qualified_name: "contextvars.Context"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "cancel"
    fully_qualified_name: "asyncio.futures.Future.cancel"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.futures.Future[asyncio.futures._T]"
        args {
          pretty_printed_name: "asyncio.futures._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "asyncio.futures.Future"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
  }
  methods {
    name: "cancel"
    fully_qualified_name: "asyncio.futures.Future.cancel"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.futures.Future[asyncio.futures._T]"
        args {
          pretty_printed_name: "asyncio.futures._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "asyncio.futures.Future"
      }
    }
    parameters {
      name: "msg"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "cancelled"
    fully_qualified_name: "asyncio.futures.Future.cancelled"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.futures.Future[asyncio.futures._T]"
        args {
          pretty_printed_name: "asyncio.futures._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "asyncio.futures.Future"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "done"
    fully_qualified_name: "asyncio.futures.Future.done"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.futures.Future[asyncio.futures._T]"
        args {
          pretty_printed_name: "asyncio.futures._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "asyncio.futures.Future"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "result"
    fully_qualified_name: "asyncio.futures.Future.result"
    return_annotation {
      pretty_printed_name: "asyncio.futures._T"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.futures.Future[asyncio.futures._T]"
        args {
          pretty_printed_name: "asyncio.futures._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "asyncio.futures.Future"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "exception"
    fully_qualified_name: "asyncio.futures.Future.exception"
    return_annotation {
      pretty_printed_name: "Union[builtins.BaseException,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.BaseException"
        fully_qualified_name: "builtins.BaseException"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.futures.Future[asyncio.futures._T]"
        args {
          pretty_printed_name: "asyncio.futures._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "asyncio.futures.Future"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "remove_done_callback"
    fully_qualified_name: "asyncio.futures.Future.remove_done_callback"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.futures.Future[asyncio.futures._T]"
        args {
          pretty_printed_name: "asyncio.futures._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "asyncio.futures.Future"
      }
    }
    parameters {
      name: "__fn"
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "set_result"
    fully_qualified_name: "asyncio.futures.Future.set_result"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.futures.Future[asyncio.futures._T]"
        args {
          pretty_printed_name: "asyncio.futures._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "asyncio.futures.Future"
      }
    }
    parameters {
      name: "__result"
      type_annotation {
        pretty_printed_name: "asyncio.futures._T"
        kind: TYPE_VAR
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "set_exception"
    fully_qualified_name: "asyncio.futures.Future.set_exception"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.futures.Future[asyncio.futures._T]"
        args {
          pretty_printed_name: "asyncio.futures._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "asyncio.futures.Future"
      }
    }
    parameters {
      name: "__exception"
      type_annotation {
        pretty_printed_name: "Union[builtins.type,builtins.BaseException]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.type"
          fully_qualified_name: "builtins.type"
        }
        args {
          pretty_printed_name: "builtins.BaseException"
          fully_qualified_name: "builtins.BaseException"
        }
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__iter__"
    fully_qualified_name: "asyncio.futures.Future.__iter__"
    return_annotation {
      pretty_printed_name: "typing.Generator[Any,None,asyncio.futures._T]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
      args {
        pretty_printed_name: "asyncio.futures._T"
        kind: TYPE_VAR
      }
      fully_qualified_name: "typing.Generator"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "asyncio.futures.Future[asyncio.futures._T]"
        args {
          pretty_printed_name: "asyncio.futures._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "asyncio.futures.Future"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__await__"
    fully_qualified_name: "asyncio.futures.Future.__await__"
    return_annotation {
      pretty_printed_name: "typing.Generator[Any,None,asyncio.futures._T]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
      args {
        pretty_printed_name: "asyncio.futures._T"
        kind: TYPE_VAR
      }
      fully_qualified_name: "typing.Generator"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.futures.Future[asyncio.futures._T]"
        args {
          pretty_printed_name: "asyncio.futures._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "asyncio.futures.Future"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "_loop"
    fully_qualified_name: "asyncio.futures.Future._loop"
    return_annotation {
      pretty_printed_name: "asyncio.events.AbstractEventLoop"
      fully_qualified_name: "asyncio.events.AbstractEventLoop"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.futures.Future[asyncio.futures._T]"
        args {
          pretty_printed_name: "asyncio.futures._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "asyncio.futures.Future"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__class_getitem__"
    fully_qualified_name: "asyncio.futures.Future.__class_getitem__"
    return_annotation {
      pretty_printed_name: "types.GenericAlias"
      fully_qualified_name: "types.GenericAlias"
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[asyncio.futures.Future[asyncio.futures._T]]"
        kind: TYPE
        args {
          pretty_printed_name: "asyncio.futures.Future[asyncio.futures._T]"
          args {
            pretty_printed_name: "asyncio.futures._T"
            kind: TYPE_VAR
          }
          fully_qualified_name: "asyncio.futures.Future"
        }
      }
    }
    parameters {
      name: "item"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    is_class_method: true
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "_log_traceback"
    fullname: "asyncio.futures.Future._log_traceback"
    definitions {
      name: "_log_traceback"
      fully_qualified_name: "asyncio.futures.Future._log_traceback"
      return_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "asyncio.futures.Future[asyncio.futures._T]"
          args {
            pretty_printed_name: "asyncio.futures._T"
            kind: TYPE_VAR
          }
          fully_qualified_name: "asyncio.futures.Future"
        }
      }
      has_decorators: true
      resolved_decorator_names: "property"
      is_overload: true
      is_property: true
    }
    definitions {
      name: "_log_traceback"
      fully_qualified_name: "asyncio.futures.Future._log_traceback"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "asyncio.futures.Future[asyncio.futures._T]"
          args {
            pretty_printed_name: "asyncio.futures._T"
            kind: TYPE_VAR
          }
          fully_qualified_name: "asyncio.futures.Future"
        }
      }
      parameters {
        name: "val"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Literal[builtins.bool]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.bool"
            fully_qualified_name: "builtins.bool"
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "_log_traceback.setter"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  is_generic: true
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "_state"
    fully_qualified_name: "asyncio.futures.Future._state"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "_blocking"
    fully_qualified_name: "asyncio.futures.Future._blocking"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "_asyncio_future_blocking"
    fully_qualified_name: "asyncio.futures.Future._asyncio_future_blocking"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "Lock"
  fully_qualified_name: "asyncio.locks.Lock"
  super_classes: "asyncio.locks._ContextManagerMixin"
  methods {
    name: "__init__"
    fully_qualified_name: "asyncio.locks.Lock.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.locks.Lock"
        fully_qualified_name: "asyncio.locks.Lock"
      }
    }
    parameters {
      name: "loop"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[asyncio.events.AbstractEventLoop,None]"
        kind: UNION
        args {
          pretty_printed_name: "asyncio.events.AbstractEventLoop"
          fully_qualified_name: "asyncio.events.AbstractEventLoop"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
  }
  methods {
    name: "__init__"
    fully_qualified_name: "asyncio.locks.Lock.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.locks.Lock"
        fully_qualified_name: "asyncio.locks.Lock"
      }
    }
    valid_for: "310"
  }
  methods {
    name: "locked"
    fully_qualified_name: "asyncio.locks.Lock.locked"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.locks.Lock"
        fully_qualified_name: "asyncio.locks.Lock"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "acquire"
    fully_qualified_name: "asyncio.locks.Lock.acquire"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,Literal[builtins.bool]]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Literal[builtins.bool]"
        kind: LITERAL
        args {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.locks.Lock"
        fully_qualified_name: "asyncio.locks.Lock"
      }
    }
    is_asynchronous: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "release"
    fully_qualified_name: "asyncio.locks.Lock.release"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.locks.Lock"
        fully_qualified_name: "asyncio.locks.Lock"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "Event"
  fully_qualified_name: "asyncio.locks.Event"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "asyncio.locks.Event.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.locks.Event"
        fully_qualified_name: "asyncio.locks.Event"
      }
    }
    parameters {
      name: "loop"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[asyncio.events.AbstractEventLoop,None]"
        kind: UNION
        args {
          pretty_printed_name: "asyncio.events.AbstractEventLoop"
          fully_qualified_name: "asyncio.events.AbstractEventLoop"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
  }
  methods {
    name: "__init__"
    fully_qualified_name: "asyncio.locks.Event.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.locks.Event"
        fully_qualified_name: "asyncio.locks.Event"
      }
    }
    valid_for: "310"
  }
  methods {
    name: "is_set"
    fully_qualified_name: "asyncio.locks.Event.is_set"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.locks.Event"
        fully_qualified_name: "asyncio.locks.Event"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "set"
    fully_qualified_name: "asyncio.locks.Event.set"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.locks.Event"
        fully_qualified_name: "asyncio.locks.Event"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "clear"
    fully_qualified_name: "asyncio.locks.Event.clear"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.locks.Event"
        fully_qualified_name: "asyncio.locks.Event"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "wait"
    fully_qualified_name: "asyncio.locks.Event.wait"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,Literal[builtins.bool]]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Literal[builtins.bool]"
        kind: LITERAL
        args {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.locks.Event"
        fully_qualified_name: "asyncio.locks.Event"
      }
    }
    is_asynchronous: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "Condition"
  fully_qualified_name: "asyncio.locks.Condition"
  super_classes: "asyncio.locks._ContextManagerMixin"
  methods {
    name: "__init__"
    fully_qualified_name: "asyncio.locks.Condition.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.locks.Condition"
        fully_qualified_name: "asyncio.locks.Condition"
      }
    }
    parameters {
      name: "lock"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[asyncio.locks.Lock,None]"
        kind: UNION
        args {
          pretty_printed_name: "asyncio.locks.Lock"
          fully_qualified_name: "asyncio.locks.Lock"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "loop"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[asyncio.events.AbstractEventLoop,None]"
        kind: UNION
        args {
          pretty_printed_name: "asyncio.events.AbstractEventLoop"
          fully_qualified_name: "asyncio.events.AbstractEventLoop"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
  }
  methods {
    name: "__init__"
    fully_qualified_name: "asyncio.locks.Condition.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.locks.Condition"
        fully_qualified_name: "asyncio.locks.Condition"
      }
    }
    parameters {
      name: "lock"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[asyncio.locks.Lock,None]"
        kind: UNION
        args {
          pretty_printed_name: "asyncio.locks.Lock"
          fully_qualified_name: "asyncio.locks.Lock"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "310"
  }
  methods {
    name: "locked"
    fully_qualified_name: "asyncio.locks.Condition.locked"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.locks.Condition"
        fully_qualified_name: "asyncio.locks.Condition"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "acquire"
    fully_qualified_name: "asyncio.locks.Condition.acquire"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,Literal[builtins.bool]]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Literal[builtins.bool]"
        kind: LITERAL
        args {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.locks.Condition"
        fully_qualified_name: "asyncio.locks.Condition"
      }
    }
    is_asynchronous: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "release"
    fully_qualified_name: "asyncio.locks.Condition.release"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.locks.Condition"
        fully_qualified_name: "asyncio.locks.Condition"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "wait"
    fully_qualified_name: "asyncio.locks.Condition.wait"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,Literal[builtins.bool]]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Literal[builtins.bool]"
        kind: LITERAL
        args {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.locks.Condition"
        fully_qualified_name: "asyncio.locks.Condition"
      }
    }
    is_asynchronous: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "wait_for"
    fully_qualified_name: "asyncio.locks.Condition.wait_for"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,asyncio.locks._T]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "asyncio.locks._T"
        kind: TYPE_VAR
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.locks.Condition"
        fully_qualified_name: "asyncio.locks.Condition"
      }
    }
    parameters {
      name: "predicate"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    is_asynchronous: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "notify"
    fully_qualified_name: "asyncio.locks.Condition.notify"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.locks.Condition"
        fully_qualified_name: "asyncio.locks.Condition"
      }
    }
    parameters {
      name: "n"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "notify_all"
    fully_qualified_name: "asyncio.locks.Condition.notify_all"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.locks.Condition"
        fully_qualified_name: "asyncio.locks.Condition"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "Semaphore"
  fully_qualified_name: "asyncio.locks.Semaphore"
  super_classes: "asyncio.locks._ContextManagerMixin"
  methods {
    name: "__init__"
    fully_qualified_name: "asyncio.locks.Semaphore.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.locks.Semaphore"
        fully_qualified_name: "asyncio.locks.Semaphore"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    parameters {
      name: "loop"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[asyncio.events.AbstractEventLoop,None]"
        kind: UNION
        args {
          pretty_printed_name: "asyncio.events.AbstractEventLoop"
          fully_qualified_name: "asyncio.events.AbstractEventLoop"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
  }
  methods {
    name: "__init__"
    fully_qualified_name: "asyncio.locks.Semaphore.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.locks.Semaphore"
        fully_qualified_name: "asyncio.locks.Semaphore"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    valid_for: "310"
  }
  methods {
    name: "locked"
    fully_qualified_name: "asyncio.locks.Semaphore.locked"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.locks.Semaphore"
        fully_qualified_name: "asyncio.locks.Semaphore"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "acquire"
    fully_qualified_name: "asyncio.locks.Semaphore.acquire"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,Literal[builtins.bool]]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Literal[builtins.bool]"
        kind: LITERAL
        args {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.locks.Semaphore"
        fully_qualified_name: "asyncio.locks.Semaphore"
      }
    }
    is_asynchronous: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "release"
    fully_qualified_name: "asyncio.locks.Semaphore.release"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.locks.Semaphore"
        fully_qualified_name: "asyncio.locks.Semaphore"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "_wake_up_next"
    fully_qualified_name: "asyncio.locks.Semaphore._wake_up_next"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.locks.Semaphore"
        fully_qualified_name: "asyncio.locks.Semaphore"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "_value"
    fully_qualified_name: "asyncio.locks.Semaphore._value"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "_waiters"
    fully_qualified_name: "asyncio.locks.Semaphore._waiters"
    type_annotation {
      pretty_printed_name: "collections.deque[asyncio.futures.Future[Any]]"
      args {
        pretty_printed_name: "asyncio.futures.Future[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "asyncio.futures.Future"
      }
      fully_qualified_name: "collections.deque"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "BoundedSemaphore"
  fully_qualified_name: "asyncio.locks.BoundedSemaphore"
  super_classes: "asyncio.locks.Semaphore"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "BaseProtocol"
  fully_qualified_name: "asyncio.protocols.BaseProtocol"
  super_classes: "builtins.object"
  methods {
    name: "connection_made"
    fully_qualified_name: "asyncio.protocols.BaseProtocol.connection_made"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.protocols.BaseProtocol"
        fully_qualified_name: "asyncio.protocols.BaseProtocol"
      }
    }
    parameters {
      name: "transport"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.transports.BaseTransport"
        fully_qualified_name: "asyncio.transports.BaseTransport"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "connection_lost"
    fully_qualified_name: "asyncio.protocols.BaseProtocol.connection_lost"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.protocols.BaseProtocol"
        fully_qualified_name: "asyncio.protocols.BaseProtocol"
      }
    }
    parameters {
      name: "exc"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.Exception,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.Exception"
          fully_qualified_name: "builtins.Exception"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "pause_writing"
    fully_qualified_name: "asyncio.protocols.BaseProtocol.pause_writing"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.protocols.BaseProtocol"
        fully_qualified_name: "asyncio.protocols.BaseProtocol"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "resume_writing"
    fully_qualified_name: "asyncio.protocols.BaseProtocol.resume_writing"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.protocols.BaseProtocol"
        fully_qualified_name: "asyncio.protocols.BaseProtocol"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "Protocol"
  fully_qualified_name: "asyncio.protocols.Protocol"
  super_classes: "asyncio.protocols.BaseProtocol"
  methods {
    name: "data_received"
    fully_qualified_name: "asyncio.protocols.Protocol.data_received"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.protocols.Protocol"
        fully_qualified_name: "asyncio.protocols.Protocol"
      }
    }
    parameters {
      name: "data"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "eof_received"
    fully_qualified_name: "asyncio.protocols.Protocol.eof_received"
    return_annotation {
      pretty_printed_name: "Union[builtins.bool,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.protocols.Protocol"
        fully_qualified_name: "asyncio.protocols.Protocol"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "BufferedProtocol"
  fully_qualified_name: "asyncio.protocols.BufferedProtocol"
  super_classes: "asyncio.protocols.BaseProtocol"
  methods {
    name: "get_buffer"
    fully_qualified_name: "asyncio.protocols.BufferedProtocol.get_buffer"
    return_annotation {
      pretty_printed_name: "UnboundType[ReadableBuffer]"
      kind: UNBOUND
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.protocols.BufferedProtocol"
        fully_qualified_name: "asyncio.protocols.BufferedProtocol"
      }
    }
    parameters {
      name: "sizehint"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "buffer_updated"
    fully_qualified_name: "asyncio.protocols.BufferedProtocol.buffer_updated"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.protocols.BufferedProtocol"
        fully_qualified_name: "asyncio.protocols.BufferedProtocol"
      }
    }
    parameters {
      name: "nbytes"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "eof_received"
    fully_qualified_name: "asyncio.protocols.BufferedProtocol.eof_received"
    return_annotation {
      pretty_printed_name: "Union[builtins.bool,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.protocols.BufferedProtocol"
        fully_qualified_name: "asyncio.protocols.BufferedProtocol"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "DatagramProtocol"
  fully_qualified_name: "asyncio.protocols.DatagramProtocol"
  super_classes: "asyncio.protocols.BaseProtocol"
  methods {
    name: "connection_made"
    fully_qualified_name: "asyncio.protocols.DatagramProtocol.connection_made"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.protocols.DatagramProtocol"
        fully_qualified_name: "asyncio.protocols.DatagramProtocol"
      }
    }
    parameters {
      name: "transport"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.transports.DatagramTransport"
        fully_qualified_name: "asyncio.transports.DatagramTransport"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "datagram_received"
    fully_qualified_name: "asyncio.protocols.DatagramProtocol.datagram_received"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.protocols.DatagramProtocol"
        fully_qualified_name: "asyncio.protocols.DatagramProtocol"
      }
    }
    parameters {
      name: "data"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    parameters {
      name: "addr"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Tuple[Union[builtins.str,Any],builtins.int]"
        kind: TUPLE
        args {
          pretty_printed_name: "Union[builtins.str,Any]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "error_received"
    fully_qualified_name: "asyncio.protocols.DatagramProtocol.error_received"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.protocols.DatagramProtocol"
        fully_qualified_name: "asyncio.protocols.DatagramProtocol"
      }
    }
    parameters {
      name: "exc"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.Exception"
        fully_qualified_name: "builtins.Exception"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "SubprocessProtocol"
  fully_qualified_name: "asyncio.protocols.SubprocessProtocol"
  super_classes: "asyncio.protocols.BaseProtocol"
  methods {
    name: "pipe_data_received"
    fully_qualified_name: "asyncio.protocols.SubprocessProtocol.pipe_data_received"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.protocols.SubprocessProtocol"
        fully_qualified_name: "asyncio.protocols.SubprocessProtocol"
      }
    }
    parameters {
      name: "fd"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "data"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "pipe_connection_lost"
    fully_qualified_name: "asyncio.protocols.SubprocessProtocol.pipe_connection_lost"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.protocols.SubprocessProtocol"
        fully_qualified_name: "asyncio.protocols.SubprocessProtocol"
      }
    }
    parameters {
      name: "fd"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "exc"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.Exception,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.Exception"
          fully_qualified_name: "builtins.Exception"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "process_exited"
    fully_qualified_name: "asyncio.protocols.SubprocessProtocol.process_exited"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.protocols.SubprocessProtocol"
        fully_qualified_name: "asyncio.protocols.SubprocessProtocol"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "QueueEmpty"
  fully_qualified_name: "asyncio.queues.QueueEmpty"
  super_classes: "builtins.Exception"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "QueueFull"
  fully_qualified_name: "asyncio.queues.QueueFull"
  super_classes: "builtins.Exception"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "Queue"
  fully_qualified_name: "asyncio.queues.Queue"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "asyncio.queues.Queue.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.queues.Queue[asyncio.queues._T]"
        args {
          pretty_printed_name: "asyncio.queues._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "asyncio.queues.Queue"
      }
    }
    parameters {
      name: "maxsize"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    parameters {
      name: "loop"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[asyncio.events.AbstractEventLoop,None]"
        kind: UNION
        args {
          pretty_printed_name: "asyncio.events.AbstractEventLoop"
          fully_qualified_name: "asyncio.events.AbstractEventLoop"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
  }
  methods {
    name: "__init__"
    fully_qualified_name: "asyncio.queues.Queue.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.queues.Queue[asyncio.queues._T]"
        args {
          pretty_printed_name: "asyncio.queues._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "asyncio.queues.Queue"
      }
    }
    parameters {
      name: "maxsize"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    valid_for: "310"
  }
  methods {
    name: "_init"
    fully_qualified_name: "asyncio.queues.Queue._init"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.queues.Queue[asyncio.queues._T]"
        args {
          pretty_printed_name: "asyncio.queues._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "asyncio.queues.Queue"
      }
    }
    parameters {
      name: "maxsize"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "_get"
    fully_qualified_name: "asyncio.queues.Queue._get"
    return_annotation {
      pretty_printed_name: "asyncio.queues._T"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.queues.Queue[asyncio.queues._T]"
        args {
          pretty_printed_name: "asyncio.queues._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "asyncio.queues.Queue"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "_put"
    fully_qualified_name: "asyncio.queues.Queue._put"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.queues.Queue[asyncio.queues._T]"
        args {
          pretty_printed_name: "asyncio.queues._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "asyncio.queues.Queue"
      }
    }
    parameters {
      name: "item"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.queues._T"
        kind: TYPE_VAR
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "_format"
    fully_qualified_name: "asyncio.queues.Queue._format"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.queues.Queue[asyncio.queues._T]"
        args {
          pretty_printed_name: "asyncio.queues._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "asyncio.queues.Queue"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "qsize"
    fully_qualified_name: "asyncio.queues.Queue.qsize"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.queues.Queue[asyncio.queues._T]"
        args {
          pretty_printed_name: "asyncio.queues._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "asyncio.queues.Queue"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "maxsize"
    fully_qualified_name: "asyncio.queues.Queue.maxsize"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.queues.Queue[asyncio.queues._T]"
        args {
          pretty_printed_name: "asyncio.queues._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "asyncio.queues.Queue"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "empty"
    fully_qualified_name: "asyncio.queues.Queue.empty"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.queues.Queue[asyncio.queues._T]"
        args {
          pretty_printed_name: "asyncio.queues._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "asyncio.queues.Queue"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "full"
    fully_qualified_name: "asyncio.queues.Queue.full"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.queues.Queue[asyncio.queues._T]"
        args {
          pretty_printed_name: "asyncio.queues._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "asyncio.queues.Queue"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "put"
    fully_qualified_name: "asyncio.queues.Queue.put"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,None]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.queues.Queue[asyncio.queues._T]"
        args {
          pretty_printed_name: "asyncio.queues._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "asyncio.queues.Queue"
      }
    }
    parameters {
      name: "item"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.queues._T"
        kind: TYPE_VAR
      }
    }
    is_asynchronous: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "put_nowait"
    fully_qualified_name: "asyncio.queues.Queue.put_nowait"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.queues.Queue[asyncio.queues._T]"
        args {
          pretty_printed_name: "asyncio.queues._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "asyncio.queues.Queue"
      }
    }
    parameters {
      name: "item"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.queues._T"
        kind: TYPE_VAR
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "get"
    fully_qualified_name: "asyncio.queues.Queue.get"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,asyncio.queues._T]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "asyncio.queues._T"
        kind: TYPE_VAR
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.queues.Queue[asyncio.queues._T]"
        args {
          pretty_printed_name: "asyncio.queues._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "asyncio.queues.Queue"
      }
    }
    is_asynchronous: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "get_nowait"
    fully_qualified_name: "asyncio.queues.Queue.get_nowait"
    return_annotation {
      pretty_printed_name: "asyncio.queues._T"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.queues.Queue[asyncio.queues._T]"
        args {
          pretty_printed_name: "asyncio.queues._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "asyncio.queues.Queue"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "join"
    fully_qualified_name: "asyncio.queues.Queue.join"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,None]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.queues.Queue[asyncio.queues._T]"
        args {
          pretty_printed_name: "asyncio.queues._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "asyncio.queues.Queue"
      }
    }
    is_asynchronous: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "task_done"
    fully_qualified_name: "asyncio.queues.Queue.task_done"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.queues.Queue[asyncio.queues._T]"
        args {
          pretty_printed_name: "asyncio.queues._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "asyncio.queues.Queue"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__class_getitem__"
    fully_qualified_name: "asyncio.queues.Queue.__class_getitem__"
    return_annotation {
      pretty_printed_name: "types.GenericAlias"
      fully_qualified_name: "types.GenericAlias"
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[asyncio.queues.Queue[asyncio.queues._T]]"
        kind: TYPE
        args {
          pretty_printed_name: "asyncio.queues.Queue[asyncio.queues._T]"
          args {
            pretty_printed_name: "asyncio.queues._T"
            kind: TYPE_VAR
          }
          fully_qualified_name: "asyncio.queues.Queue"
        }
      }
    }
    parameters {
      name: "type"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    is_class_method: true
    valid_for: "39"
    valid_for: "310"
  }
  is_generic: true
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "PriorityQueue"
  fully_qualified_name: "asyncio.queues.PriorityQueue"
  super_classes: "asyncio.queues.Queue"
  is_generic: true
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "LifoQueue"
  fully_qualified_name: "asyncio.queues.LifoQueue"
  super_classes: "asyncio.queues.Queue"
  is_generic: true
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "IncompleteReadError"
  fully_qualified_name: "asyncio.streams.IncompleteReadError"
  super_classes: "builtins.EOFError"
  methods {
    name: "__init__"
    fully_qualified_name: "asyncio.streams.IncompleteReadError.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.streams.IncompleteReadError"
        fully_qualified_name: "asyncio.streams.IncompleteReadError"
      }
    }
    parameters {
      name: "partial"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    parameters {
      name: "expected"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  attributes {
    name: "expected"
    fully_qualified_name: "asyncio.streams.IncompleteReadError.expected"
    type_annotation {
      pretty_printed_name: "Union[builtins.int,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
  }
  attributes {
    name: "partial"
    fully_qualified_name: "asyncio.streams.IncompleteReadError.partial"
    type_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
  }
}
classes {
  name: "LimitOverrunError"
  fully_qualified_name: "asyncio.streams.LimitOverrunError"
  super_classes: "builtins.Exception"
  methods {
    name: "__init__"
    fully_qualified_name: "asyncio.streams.LimitOverrunError.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.streams.LimitOverrunError"
        fully_qualified_name: "asyncio.streams.LimitOverrunError"
      }
    }
    parameters {
      name: "message"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "consumed"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  attributes {
    name: "consumed"
    fully_qualified_name: "asyncio.streams.LimitOverrunError.consumed"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
  }
}
classes {
  name: "StreamReaderProtocol"
  fully_qualified_name: "asyncio.streams.StreamReaderProtocol"
  super_classes: "asyncio.streams.FlowControlMixin"
  super_classes: "asyncio.protocols.Protocol"
  methods {
    name: "__init__"
    fully_qualified_name: "asyncio.streams.StreamReaderProtocol.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.streams.StreamReaderProtocol"
        fully_qualified_name: "asyncio.streams.StreamReaderProtocol"
      }
    }
    parameters {
      name: "stream_reader"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.streams.StreamReader"
        fully_qualified_name: "asyncio.streams.StreamReader"
      }
    }
    parameters {
      name: "client_connected_cb"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[UnboundType[_ClientConnectedCallback],None]"
        kind: UNION
        args {
          pretty_printed_name: "UnboundType[_ClientConnectedCallback]"
          kind: UNBOUND
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "loop"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[asyncio.events.AbstractEventLoop,None]"
        kind: UNION
        args {
          pretty_printed_name: "asyncio.events.AbstractEventLoop"
          fully_qualified_name: "asyncio.events.AbstractEventLoop"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "StreamWriter"
  fully_qualified_name: "asyncio.streams.StreamWriter"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "asyncio.streams.StreamWriter.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.streams.StreamWriter"
        fully_qualified_name: "asyncio.streams.StreamWriter"
      }
    }
    parameters {
      name: "transport"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.transports.WriteTransport"
        fully_qualified_name: "asyncio.transports.WriteTransport"
      }
    }
    parameters {
      name: "protocol"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.protocols.BaseProtocol"
        fully_qualified_name: "asyncio.protocols.BaseProtocol"
      }
    }
    parameters {
      name: "reader"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[asyncio.streams.StreamReader,None]"
        kind: UNION
        args {
          pretty_printed_name: "asyncio.streams.StreamReader"
          fully_qualified_name: "asyncio.streams.StreamReader"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "loop"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.events.AbstractEventLoop"
        fully_qualified_name: "asyncio.events.AbstractEventLoop"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "transport"
    fully_qualified_name: "asyncio.streams.StreamWriter.transport"
    return_annotation {
      pretty_printed_name: "asyncio.transports.WriteTransport"
      fully_qualified_name: "asyncio.transports.WriteTransport"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.streams.StreamWriter"
        fully_qualified_name: "asyncio.streams.StreamWriter"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "write"
    fully_qualified_name: "asyncio.streams.StreamWriter.write"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.streams.StreamWriter"
        fully_qualified_name: "asyncio.streams.StreamWriter"
      }
    }
    parameters {
      name: "data"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.bytes,builtins.bytearray,builtins.memoryview]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "builtins.bytearray"
          fully_qualified_name: "builtins.bytearray"
        }
        args {
          pretty_printed_name: "builtins.memoryview"
          fully_qualified_name: "builtins.memoryview"
        }
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "writelines"
    fully_qualified_name: "asyncio.streams.StreamWriter.writelines"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.streams.StreamWriter"
        fully_qualified_name: "asyncio.streams.StreamWriter"
      }
    }
    parameters {
      name: "data"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[Union[builtins.bytes,builtins.bytearray,builtins.memoryview]]"
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.bytearray,builtins.memoryview]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.bytearray"
            fully_qualified_name: "builtins.bytearray"
          }
          args {
            pretty_printed_name: "builtins.memoryview"
            fully_qualified_name: "builtins.memoryview"
          }
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "write_eof"
    fully_qualified_name: "asyncio.streams.StreamWriter.write_eof"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.streams.StreamWriter"
        fully_qualified_name: "asyncio.streams.StreamWriter"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "can_write_eof"
    fully_qualified_name: "asyncio.streams.StreamWriter.can_write_eof"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.streams.StreamWriter"
        fully_qualified_name: "asyncio.streams.StreamWriter"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "close"
    fully_qualified_name: "asyncio.streams.StreamWriter.close"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.streams.StreamWriter"
        fully_qualified_name: "asyncio.streams.StreamWriter"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "is_closing"
    fully_qualified_name: "asyncio.streams.StreamWriter.is_closing"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.streams.StreamWriter"
        fully_qualified_name: "asyncio.streams.StreamWriter"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "wait_closed"
    fully_qualified_name: "asyncio.streams.StreamWriter.wait_closed"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,None]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.streams.StreamWriter"
        fully_qualified_name: "asyncio.streams.StreamWriter"
      }
    }
    is_asynchronous: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "get_extra_info"
    fully_qualified_name: "asyncio.streams.StreamWriter.get_extra_info"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.streams.StreamWriter"
        fully_qualified_name: "asyncio.streams.StreamWriter"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "default"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "drain"
    fully_qualified_name: "asyncio.streams.StreamWriter.drain"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,None]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.streams.StreamWriter"
        fully_qualified_name: "asyncio.streams.StreamWriter"
      }
    }
    is_asynchronous: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "StreamReader"
  fully_qualified_name: "asyncio.streams.StreamReader"
  super_classes: "typing.AsyncIterator"
  methods {
    name: "__init__"
    fully_qualified_name: "asyncio.streams.StreamReader.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.streams.StreamReader"
        fully_qualified_name: "asyncio.streams.StreamReader"
      }
    }
    parameters {
      name: "limit"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    parameters {
      name: "loop"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[asyncio.events.AbstractEventLoop,None]"
        kind: UNION
        args {
          pretty_printed_name: "asyncio.events.AbstractEventLoop"
          fully_qualified_name: "asyncio.events.AbstractEventLoop"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "exception"
    fully_qualified_name: "asyncio.streams.StreamReader.exception"
    return_annotation {
      pretty_printed_name: "builtins.Exception"
      fully_qualified_name: "builtins.Exception"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.streams.StreamReader"
        fully_qualified_name: "asyncio.streams.StreamReader"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "set_exception"
    fully_qualified_name: "asyncio.streams.StreamReader.set_exception"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.streams.StreamReader"
        fully_qualified_name: "asyncio.streams.StreamReader"
      }
    }
    parameters {
      name: "exc"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.Exception"
        fully_qualified_name: "builtins.Exception"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "set_transport"
    fully_qualified_name: "asyncio.streams.StreamReader.set_transport"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.streams.StreamReader"
        fully_qualified_name: "asyncio.streams.StreamReader"
      }
    }
    parameters {
      name: "transport"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.transports.BaseTransport"
        fully_qualified_name: "asyncio.transports.BaseTransport"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "feed_eof"
    fully_qualified_name: "asyncio.streams.StreamReader.feed_eof"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.streams.StreamReader"
        fully_qualified_name: "asyncio.streams.StreamReader"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "at_eof"
    fully_qualified_name: "asyncio.streams.StreamReader.at_eof"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.streams.StreamReader"
        fully_qualified_name: "asyncio.streams.StreamReader"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "feed_data"
    fully_qualified_name: "asyncio.streams.StreamReader.feed_data"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.streams.StreamReader"
        fully_qualified_name: "asyncio.streams.StreamReader"
      }
    }
    parameters {
      name: "data"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[typing_extensions.SupportsIndex]"
        args {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "readline"
    fully_qualified_name: "asyncio.streams.StreamReader.readline"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,builtins.bytes]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.streams.StreamReader"
        fully_qualified_name: "asyncio.streams.StreamReader"
      }
    }
    is_asynchronous: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "readuntil"
    fully_qualified_name: "asyncio.streams.StreamReader.readuntil"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,builtins.bytes]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.streams.StreamReader"
        fully_qualified_name: "asyncio.streams.StreamReader"
      }
    }
    parameters {
      name: "separator"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.bytes,builtins.bytearray,builtins.memoryview]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "builtins.bytearray"
          fully_qualified_name: "builtins.bytearray"
        }
        args {
          pretty_printed_name: "builtins.memoryview"
          fully_qualified_name: "builtins.memoryview"
        }
      }
      has_default: true
    }
    is_asynchronous: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "read"
    fully_qualified_name: "asyncio.streams.StreamReader.read"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,builtins.bytes]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.streams.StreamReader"
        fully_qualified_name: "asyncio.streams.StreamReader"
      }
    }
    parameters {
      name: "n"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    is_asynchronous: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "readexactly"
    fully_qualified_name: "asyncio.streams.StreamReader.readexactly"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,builtins.bytes]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.streams.StreamReader"
        fully_qualified_name: "asyncio.streams.StreamReader"
      }
    }
    parameters {
      name: "n"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    is_asynchronous: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__aiter__"
    fully_qualified_name: "asyncio.streams.StreamReader.__aiter__"
    return_annotation {
      pretty_printed_name: "UnboundType[Self]"
      kind: UNBOUND
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.streams.StreamReader"
        fully_qualified_name: "asyncio.streams.StreamReader"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__anext__"
    fully_qualified_name: "asyncio.streams.StreamReader.__anext__"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,builtins.bytes]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.streams.StreamReader"
        fully_qualified_name: "asyncio.streams.StreamReader"
      }
    }
    is_asynchronous: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "Task"
  fully_qualified_name: "asyncio.tasks.Task"
  super_classes: "asyncio.futures.Future"
  methods {
    name: "__init__"
    fully_qualified_name: "asyncio.tasks.Task.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.tasks.Task[asyncio.tasks._T_co]"
        args {
          pretty_printed_name: "asyncio.tasks._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "asyncio.tasks.Task"
      }
    }
    parameters {
      name: "coro"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.Generator[UnboundType[_TaskYieldType],None,asyncio.tasks._T_co],typing.Awaitable[asyncio.tasks._T_co]]"
        kind: UNION
        args {
          pretty_printed_name: "typing.Generator[UnboundType[_TaskYieldType],None,asyncio.tasks._T_co]"
          args {
            pretty_printed_name: "UnboundType[_TaskYieldType]"
            kind: UNBOUND
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
          args {
            pretty_printed_name: "asyncio.tasks._T_co"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Generator"
        }
        args {
          pretty_printed_name: "typing.Awaitable[asyncio.tasks._T_co]"
          args {
            pretty_printed_name: "asyncio.tasks._T_co"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Awaitable"
        }
      }
    }
    parameters {
      name: "loop"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "asyncio.events.AbstractEventLoop"
        fully_qualified_name: "asyncio.events.AbstractEventLoop"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
  }
  methods {
    name: "__init__"
    fully_qualified_name: "asyncio.tasks.Task.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.tasks.Task[asyncio.tasks._T_co]"
        args {
          pretty_printed_name: "asyncio.tasks._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "asyncio.tasks.Task"
      }
    }
    parameters {
      name: "coro"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.Generator[UnboundType[_TaskYieldType],None,asyncio.tasks._T_co],typing.Awaitable[asyncio.tasks._T_co]]"
        kind: UNION
        args {
          pretty_printed_name: "typing.Generator[UnboundType[_TaskYieldType],None,asyncio.tasks._T_co]"
          args {
            pretty_printed_name: "UnboundType[_TaskYieldType]"
            kind: UNBOUND
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
          args {
            pretty_printed_name: "asyncio.tasks._T_co"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Generator"
        }
        args {
          pretty_printed_name: "typing.Awaitable[asyncio.tasks._T_co]"
          args {
            pretty_printed_name: "asyncio.tasks._T_co"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Awaitable"
        }
      }
    }
    parameters {
      name: "loop"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "asyncio.events.AbstractEventLoop"
        fully_qualified_name: "asyncio.events.AbstractEventLoop"
      }
      has_default: true
    }
    parameters {
      name: "name"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "get_stack"
    fully_qualified_name: "asyncio.tasks.Task.get_stack"
    return_annotation {
      pretty_printed_name: "builtins.list[types.FrameType]"
      args {
        pretty_printed_name: "types.FrameType"
        fully_qualified_name: "types.FrameType"
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.tasks.Task[asyncio.tasks._T_co]"
        args {
          pretty_printed_name: "asyncio.tasks._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "asyncio.tasks.Task"
      }
    }
    parameters {
      name: "limit"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "print_stack"
    fully_qualified_name: "asyncio.tasks.Task.print_stack"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.tasks.Task[asyncio.tasks._T_co]"
        args {
          pretty_printed_name: "asyncio.tasks._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "asyncio.tasks.Task"
      }
    }
    parameters {
      name: "limit"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "file"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[typing.TextIO,None]"
        kind: UNION
        args {
          pretty_printed_name: "typing.TextIO"
          fully_qualified_name: "typing.TextIO"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "current_task"
    fully_qualified_name: "asyncio.tasks.Task.current_task"
    return_annotation {
      pretty_printed_name: "Union[asyncio.tasks.Task[Any],None]"
      kind: UNION
      args {
        pretty_printed_name: "asyncio.tasks.Task[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "asyncio.tasks.Task"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[asyncio.tasks.Task[asyncio.tasks._T_co]]"
        kind: TYPE
        args {
          pretty_printed_name: "asyncio.tasks.Task[asyncio.tasks._T_co]"
          args {
            pretty_printed_name: "asyncio.tasks._T_co"
            kind: TYPE_VAR
          }
          fully_qualified_name: "asyncio.tasks.Task"
        }
      }
    }
    parameters {
      name: "loop"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[asyncio.events.AbstractEventLoop,None]"
        kind: UNION
        args {
          pretty_printed_name: "asyncio.events.AbstractEventLoop"
          fully_qualified_name: "asyncio.events.AbstractEventLoop"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "classmethod"
    is_class_method: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
  }
  methods {
    name: "all_tasks"
    fully_qualified_name: "asyncio.tasks.Task.all_tasks"
    return_annotation {
      pretty_printed_name: "builtins.set[asyncio.tasks.Task[Any]]"
      args {
        pretty_printed_name: "asyncio.tasks.Task[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "asyncio.tasks.Task"
      }
      fully_qualified_name: "builtins.set"
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[asyncio.tasks.Task[asyncio.tasks._T_co]]"
        kind: TYPE
        args {
          pretty_printed_name: "asyncio.tasks.Task[asyncio.tasks._T_co]"
          args {
            pretty_printed_name: "asyncio.tasks._T_co"
            kind: TYPE_VAR
          }
          fully_qualified_name: "asyncio.tasks.Task"
        }
      }
    }
    parameters {
      name: "loop"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[asyncio.events.AbstractEventLoop,None]"
        kind: UNION
        args {
          pretty_printed_name: "asyncio.events.AbstractEventLoop"
          fully_qualified_name: "asyncio.events.AbstractEventLoop"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "classmethod"
    is_class_method: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
  }
  methods {
    name: "get_coro"
    fully_qualified_name: "asyncio.tasks.Task.get_coro"
    return_annotation {
      pretty_printed_name: "Union[typing.Generator[UnboundType[_TaskYieldType],None,asyncio.tasks._T_co],typing.Awaitable[asyncio.tasks._T_co]]"
      kind: UNION
      args {
        pretty_printed_name: "typing.Generator[UnboundType[_TaskYieldType],None,asyncio.tasks._T_co]"
        args {
          pretty_printed_name: "UnboundType[_TaskYieldType]"
          kind: UNBOUND
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
        args {
          pretty_printed_name: "asyncio.tasks._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Generator"
      }
      args {
        pretty_printed_name: "typing.Awaitable[asyncio.tasks._T_co]"
        args {
          pretty_printed_name: "asyncio.tasks._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Awaitable"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.tasks.Task[asyncio.tasks._T_co]"
        args {
          pretty_printed_name: "asyncio.tasks._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "asyncio.tasks.Task"
      }
    }
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "get_name"
    fully_qualified_name: "asyncio.tasks.Task.get_name"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.tasks.Task[asyncio.tasks._T_co]"
        args {
          pretty_printed_name: "asyncio.tasks._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "asyncio.tasks.Task"
      }
    }
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "set_name"
    fully_qualified_name: "asyncio.tasks.Task.set_name"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.tasks.Task[asyncio.tasks._T_co]"
        args {
          pretty_printed_name: "asyncio.tasks._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "asyncio.tasks.Task"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__class_getitem__"
    fully_qualified_name: "asyncio.tasks.Task.__class_getitem__"
    return_annotation {
      pretty_printed_name: "types.GenericAlias"
      fully_qualified_name: "types.GenericAlias"
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[asyncio.tasks.Task[asyncio.tasks._T_co]]"
        kind: TYPE
        args {
          pretty_printed_name: "asyncio.tasks.Task[asyncio.tasks._T_co]"
          args {
            pretty_printed_name: "asyncio.tasks._T_co"
            kind: TYPE_VAR
          }
          fully_qualified_name: "asyncio.tasks.Task"
        }
      }
    }
    parameters {
      name: "item"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    is_class_method: true
    valid_for: "39"
    valid_for: "310"
  }
  is_generic: true
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "BaseTransport"
  fully_qualified_name: "asyncio.transports.BaseTransport"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "asyncio.transports.BaseTransport.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.transports.BaseTransport"
        fully_qualified_name: "asyncio.transports.BaseTransport"
      }
    }
    parameters {
      name: "extra"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.Mapping[builtins.str,Any],None]"
        kind: UNION
        args {
          pretty_printed_name: "typing.Mapping[builtins.str,Any]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "typing.Mapping"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "get_extra_info"
    fully_qualified_name: "asyncio.transports.BaseTransport.get_extra_info"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.transports.BaseTransport"
        fully_qualified_name: "asyncio.transports.BaseTransport"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "default"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "is_closing"
    fully_qualified_name: "asyncio.transports.BaseTransport.is_closing"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.transports.BaseTransport"
        fully_qualified_name: "asyncio.transports.BaseTransport"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "close"
    fully_qualified_name: "asyncio.transports.BaseTransport.close"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.transports.BaseTransport"
        fully_qualified_name: "asyncio.transports.BaseTransport"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "set_protocol"
    fully_qualified_name: "asyncio.transports.BaseTransport.set_protocol"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.transports.BaseTransport"
        fully_qualified_name: "asyncio.transports.BaseTransport"
      }
    }
    parameters {
      name: "protocol"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.protocols.BaseProtocol"
        fully_qualified_name: "asyncio.protocols.BaseProtocol"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "get_protocol"
    fully_qualified_name: "asyncio.transports.BaseTransport.get_protocol"
    return_annotation {
      pretty_printed_name: "asyncio.protocols.BaseProtocol"
      fully_qualified_name: "asyncio.protocols.BaseProtocol"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.transports.BaseTransport"
        fully_qualified_name: "asyncio.transports.BaseTransport"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "ReadTransport"
  fully_qualified_name: "asyncio.transports.ReadTransport"
  super_classes: "asyncio.transports.BaseTransport"
  methods {
    name: "is_reading"
    fully_qualified_name: "asyncio.transports.ReadTransport.is_reading"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.transports.ReadTransport"
        fully_qualified_name: "asyncio.transports.ReadTransport"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "pause_reading"
    fully_qualified_name: "asyncio.transports.ReadTransport.pause_reading"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.transports.ReadTransport"
        fully_qualified_name: "asyncio.transports.ReadTransport"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "resume_reading"
    fully_qualified_name: "asyncio.transports.ReadTransport.resume_reading"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.transports.ReadTransport"
        fully_qualified_name: "asyncio.transports.ReadTransport"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "WriteTransport"
  fully_qualified_name: "asyncio.transports.WriteTransport"
  super_classes: "asyncio.transports.BaseTransport"
  methods {
    name: "set_write_buffer_limits"
    fully_qualified_name: "asyncio.transports.WriteTransport.set_write_buffer_limits"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.transports.WriteTransport"
        fully_qualified_name: "asyncio.transports.WriteTransport"
      }
    }
    parameters {
      name: "high"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "low"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "get_write_buffer_size"
    fully_qualified_name: "asyncio.transports.WriteTransport.get_write_buffer_size"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.transports.WriteTransport"
        fully_qualified_name: "asyncio.transports.WriteTransport"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "get_write_buffer_limits"
    fully_qualified_name: "asyncio.transports.WriteTransport.get_write_buffer_limits"
    return_annotation {
      pretty_printed_name: "Tuple[builtins.int,builtins.int]"
      kind: TUPLE
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.transports.WriteTransport"
        fully_qualified_name: "asyncio.transports.WriteTransport"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "write"
    fully_qualified_name: "asyncio.transports.WriteTransport.write"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.transports.WriteTransport"
        fully_qualified_name: "asyncio.transports.WriteTransport"
      }
    }
    parameters {
      name: "data"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.bytes,builtins.bytearray,builtins.memoryview]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "builtins.bytearray"
          fully_qualified_name: "builtins.bytearray"
        }
        args {
          pretty_printed_name: "builtins.memoryview"
          fully_qualified_name: "builtins.memoryview"
        }
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "writelines"
    fully_qualified_name: "asyncio.transports.WriteTransport.writelines"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.transports.WriteTransport"
        fully_qualified_name: "asyncio.transports.WriteTransport"
      }
    }
    parameters {
      name: "list_of_data"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[Union[builtins.bytes,builtins.bytearray,builtins.memoryview]]"
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.bytearray,builtins.memoryview]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.bytearray"
            fully_qualified_name: "builtins.bytearray"
          }
          args {
            pretty_printed_name: "builtins.memoryview"
            fully_qualified_name: "builtins.memoryview"
          }
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "write_eof"
    fully_qualified_name: "asyncio.transports.WriteTransport.write_eof"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.transports.WriteTransport"
        fully_qualified_name: "asyncio.transports.WriteTransport"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "can_write_eof"
    fully_qualified_name: "asyncio.transports.WriteTransport.can_write_eof"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.transports.WriteTransport"
        fully_qualified_name: "asyncio.transports.WriteTransport"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "abort"
    fully_qualified_name: "asyncio.transports.WriteTransport.abort"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.transports.WriteTransport"
        fully_qualified_name: "asyncio.transports.WriteTransport"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "Transport"
  fully_qualified_name: "asyncio.transports.Transport"
  super_classes: "asyncio.transports.ReadTransport"
  super_classes: "asyncio.transports.WriteTransport"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "DatagramTransport"
  fully_qualified_name: "asyncio.transports.DatagramTransport"
  super_classes: "asyncio.transports.BaseTransport"
  methods {
    name: "sendto"
    fully_qualified_name: "asyncio.transports.DatagramTransport.sendto"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.transports.DatagramTransport"
        fully_qualified_name: "asyncio.transports.DatagramTransport"
      }
    }
    parameters {
      name: "data"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.bytes,builtins.bytearray,builtins.memoryview]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "builtins.bytearray"
          fully_qualified_name: "builtins.bytearray"
        }
        args {
          pretty_printed_name: "builtins.memoryview"
          fully_qualified_name: "builtins.memoryview"
        }
      }
    }
    parameters {
      name: "addr"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[UnboundType[_Address],None]"
        kind: UNION
        args {
          pretty_printed_name: "UnboundType[_Address]"
          kind: UNBOUND
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "abort"
    fully_qualified_name: "asyncio.transports.DatagramTransport.abort"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.transports.DatagramTransport"
        fully_qualified_name: "asyncio.transports.DatagramTransport"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "SubprocessTransport"
  fully_qualified_name: "asyncio.transports.SubprocessTransport"
  super_classes: "asyncio.transports.BaseTransport"
  methods {
    name: "get_pid"
    fully_qualified_name: "asyncio.transports.SubprocessTransport.get_pid"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.transports.SubprocessTransport"
        fully_qualified_name: "asyncio.transports.SubprocessTransport"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "get_returncode"
    fully_qualified_name: "asyncio.transports.SubprocessTransport.get_returncode"
    return_annotation {
      pretty_printed_name: "Union[builtins.int,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.transports.SubprocessTransport"
        fully_qualified_name: "asyncio.transports.SubprocessTransport"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "get_pipe_transport"
    fully_qualified_name: "asyncio.transports.SubprocessTransport.get_pipe_transport"
    return_annotation {
      pretty_printed_name: "Union[asyncio.transports.BaseTransport,None]"
      kind: UNION
      args {
        pretty_printed_name: "asyncio.transports.BaseTransport"
        fully_qualified_name: "asyncio.transports.BaseTransport"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.transports.SubprocessTransport"
        fully_qualified_name: "asyncio.transports.SubprocessTransport"
      }
    }
    parameters {
      name: "fd"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "send_signal"
    fully_qualified_name: "asyncio.transports.SubprocessTransport.send_signal"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.transports.SubprocessTransport"
        fully_qualified_name: "asyncio.transports.SubprocessTransport"
      }
    }
    parameters {
      name: "signal"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "terminate"
    fully_qualified_name: "asyncio.transports.SubprocessTransport.terminate"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.transports.SubprocessTransport"
        fully_qualified_name: "asyncio.transports.SubprocessTransport"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "kill"
    fully_qualified_name: "asyncio.transports.SubprocessTransport.kill"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.transports.SubprocessTransport"
        fully_qualified_name: "asyncio.transports.SubprocessTransport"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "AbstractChildWatcher"
  fully_qualified_name: "asyncio.unix_events.AbstractChildWatcher"
  super_classes: "builtins.object"
  methods {
    name: "add_child_handler"
    fully_qualified_name: "asyncio.unix_events.AbstractChildWatcher.add_child_handler"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.unix_events.AbstractChildWatcher"
        fully_qualified_name: "asyncio.unix_events.AbstractChildWatcher"
      }
    }
    parameters {
      name: "pid"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "callback"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "remove_child_handler"
    fully_qualified_name: "asyncio.unix_events.AbstractChildWatcher.remove_child_handler"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.unix_events.AbstractChildWatcher"
        fully_qualified_name: "asyncio.unix_events.AbstractChildWatcher"
      }
    }
    parameters {
      name: "pid"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "attach_loop"
    fully_qualified_name: "asyncio.unix_events.AbstractChildWatcher.attach_loop"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.unix_events.AbstractChildWatcher"
        fully_qualified_name: "asyncio.unix_events.AbstractChildWatcher"
      }
    }
    parameters {
      name: "loop"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[asyncio.events.AbstractEventLoop,None]"
        kind: UNION
        args {
          pretty_printed_name: "asyncio.events.AbstractEventLoop"
          fully_qualified_name: "asyncio.events.AbstractEventLoop"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "close"
    fully_qualified_name: "asyncio.unix_events.AbstractChildWatcher.close"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.unix_events.AbstractChildWatcher"
        fully_qualified_name: "asyncio.unix_events.AbstractChildWatcher"
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__enter__"
    fully_qualified_name: "asyncio.unix_events.AbstractChildWatcher.__enter__"
    return_annotation {
      pretty_printed_name: "UnboundType[Self]"
      kind: UNBOUND
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "asyncio.unix_events.AbstractChildWatcher"
        fully_qualified_name: "asyncio.unix_events.AbstractChildWatcher"
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__exit__"
    fully_qualified_name: "asyncio.unix_events.AbstractChildWatcher.__exit__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "asyncio.unix_events.AbstractChildWatcher"
        fully_qualified_name: "asyncio.unix_events.AbstractChildWatcher"
      }
    }
    parameters {
      name: "typ"
      type_annotation {
        pretty_printed_name: "Union[builtins.type,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.type"
          fully_qualified_name: "builtins.type"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "exc"
      type_annotation {
        pretty_printed_name: "Union[builtins.BaseException,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.BaseException"
          fully_qualified_name: "builtins.BaseException"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "tb"
      type_annotation {
        pretty_printed_name: "Union[types.TracebackType,None]"
        kind: UNION
        args {
          pretty_printed_name: "types.TracebackType"
          fully_qualified_name: "types.TracebackType"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
  }
  methods {
    name: "__exit__"
    fully_qualified_name: "asyncio.unix_events.AbstractChildWatcher.__exit__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "asyncio.unix_events.AbstractChildWatcher"
        fully_qualified_name: "asyncio.unix_events.AbstractChildWatcher"
      }
    }
    parameters {
      name: "typ"
      type_annotation {
        pretty_printed_name: "Union[Type[builtins.BaseException],None]"
        kind: UNION
        args {
          pretty_printed_name: "Type[builtins.BaseException]"
          kind: TYPE
          args {
            pretty_printed_name: "builtins.BaseException"
            fully_qualified_name: "builtins.BaseException"
          }
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "exc"
      type_annotation {
        pretty_printed_name: "Union[builtins.BaseException,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.BaseException"
          fully_qualified_name: "builtins.BaseException"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "tb"
      type_annotation {
        pretty_printed_name: "Union[types.TracebackType,None]"
        kind: UNION
        args {
          pretty_printed_name: "types.TracebackType"
          fully_qualified_name: "types.TracebackType"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "is_active"
    fully_qualified_name: "asyncio.unix_events.AbstractChildWatcher.is_active"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.unix_events.AbstractChildWatcher"
        fully_qualified_name: "asyncio.unix_events.AbstractChildWatcher"
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "SafeChildWatcher"
  fully_qualified_name: "asyncio.unix_events.SafeChildWatcher"
  super_classes: "asyncio.unix_events.BaseChildWatcher"
  methods {
    name: "__enter__"
    fully_qualified_name: "asyncio.unix_events.SafeChildWatcher.__enter__"
    return_annotation {
      pretty_printed_name: "UnboundType[Self]"
      kind: UNBOUND
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "asyncio.unix_events.SafeChildWatcher"
        fully_qualified_name: "asyncio.unix_events.SafeChildWatcher"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__exit__"
    fully_qualified_name: "asyncio.unix_events.SafeChildWatcher.__exit__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "asyncio.unix_events.SafeChildWatcher"
        fully_qualified_name: "asyncio.unix_events.SafeChildWatcher"
      }
    }
    parameters {
      name: "a"
      type_annotation {
        pretty_printed_name: "Union[builtins.type,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.type"
          fully_qualified_name: "builtins.type"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "b"
      type_annotation {
        pretty_printed_name: "Union[builtins.BaseException,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.BaseException"
          fully_qualified_name: "builtins.BaseException"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "c"
      type_annotation {
        pretty_printed_name: "Union[types.TracebackType,None]"
        kind: UNION
        args {
          pretty_printed_name: "types.TracebackType"
          fully_qualified_name: "types.TracebackType"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
  }
  methods {
    name: "__exit__"
    fully_qualified_name: "asyncio.unix_events.SafeChildWatcher.__exit__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "asyncio.unix_events.SafeChildWatcher"
        fully_qualified_name: "asyncio.unix_events.SafeChildWatcher"
      }
    }
    parameters {
      name: "a"
      type_annotation {
        pretty_printed_name: "Union[Type[builtins.BaseException],None]"
        kind: UNION
        args {
          pretty_printed_name: "Type[builtins.BaseException]"
          kind: TYPE
          args {
            pretty_printed_name: "builtins.BaseException"
            fully_qualified_name: "builtins.BaseException"
          }
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "b"
      type_annotation {
        pretty_printed_name: "Union[builtins.BaseException,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.BaseException"
          fully_qualified_name: "builtins.BaseException"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "c"
      type_annotation {
        pretty_printed_name: "Union[types.TracebackType,None]"
        kind: UNION
        args {
          pretty_printed_name: "types.TracebackType"
          fully_qualified_name: "types.TracebackType"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "add_child_handler"
    fully_qualified_name: "asyncio.unix_events.SafeChildWatcher.add_child_handler"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.unix_events.SafeChildWatcher"
        fully_qualified_name: "asyncio.unix_events.SafeChildWatcher"
      }
    }
    parameters {
      name: "pid"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "callback"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "remove_child_handler"
    fully_qualified_name: "asyncio.unix_events.SafeChildWatcher.remove_child_handler"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.unix_events.SafeChildWatcher"
        fully_qualified_name: "asyncio.unix_events.SafeChildWatcher"
      }
    }
    parameters {
      name: "pid"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "FastChildWatcher"
  fully_qualified_name: "asyncio.unix_events.FastChildWatcher"
  super_classes: "asyncio.unix_events.BaseChildWatcher"
  methods {
    name: "__enter__"
    fully_qualified_name: "asyncio.unix_events.FastChildWatcher.__enter__"
    return_annotation {
      pretty_printed_name: "UnboundType[Self]"
      kind: UNBOUND
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "asyncio.unix_events.FastChildWatcher"
        fully_qualified_name: "asyncio.unix_events.FastChildWatcher"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__exit__"
    fully_qualified_name: "asyncio.unix_events.FastChildWatcher.__exit__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "asyncio.unix_events.FastChildWatcher"
        fully_qualified_name: "asyncio.unix_events.FastChildWatcher"
      }
    }
    parameters {
      name: "a"
      type_annotation {
        pretty_printed_name: "Union[builtins.type,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.type"
          fully_qualified_name: "builtins.type"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "b"
      type_annotation {
        pretty_printed_name: "Union[builtins.BaseException,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.BaseException"
          fully_qualified_name: "builtins.BaseException"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "c"
      type_annotation {
        pretty_printed_name: "Union[types.TracebackType,None]"
        kind: UNION
        args {
          pretty_printed_name: "types.TracebackType"
          fully_qualified_name: "types.TracebackType"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
  }
  methods {
    name: "__exit__"
    fully_qualified_name: "asyncio.unix_events.FastChildWatcher.__exit__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "asyncio.unix_events.FastChildWatcher"
        fully_qualified_name: "asyncio.unix_events.FastChildWatcher"
      }
    }
    parameters {
      name: "a"
      type_annotation {
        pretty_printed_name: "Union[Type[builtins.BaseException],None]"
        kind: UNION
        args {
          pretty_printed_name: "Type[builtins.BaseException]"
          kind: TYPE
          args {
            pretty_printed_name: "builtins.BaseException"
            fully_qualified_name: "builtins.BaseException"
          }
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "b"
      type_annotation {
        pretty_printed_name: "Union[builtins.BaseException,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.BaseException"
          fully_qualified_name: "builtins.BaseException"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "c"
      type_annotation {
        pretty_printed_name: "Union[types.TracebackType,None]"
        kind: UNION
        args {
          pretty_printed_name: "types.TracebackType"
          fully_qualified_name: "types.TracebackType"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "add_child_handler"
    fully_qualified_name: "asyncio.unix_events.FastChildWatcher.add_child_handler"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.unix_events.FastChildWatcher"
        fully_qualified_name: "asyncio.unix_events.FastChildWatcher"
      }
    }
    parameters {
      name: "pid"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "callback"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "remove_child_handler"
    fully_qualified_name: "asyncio.unix_events.FastChildWatcher.remove_child_handler"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.unix_events.FastChildWatcher"
        fully_qualified_name: "asyncio.unix_events.FastChildWatcher"
      }
    }
    parameters {
      name: "pid"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "CancelledError"
  fully_qualified_name: "asyncio.exceptions.CancelledError"
  super_classes: "builtins.BaseException"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "TimeoutError"
  fully_qualified_name: "asyncio.exceptions.TimeoutError"
  super_classes: "builtins.Exception"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "InvalidStateError"
  fully_qualified_name: "asyncio.exceptions.InvalidStateError"
  super_classes: "builtins.Exception"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "SendfileNotAvailableError"
  fully_qualified_name: "asyncio.exceptions.SendfileNotAvailableError"
  super_classes: "builtins.RuntimeError"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "IncompleteReadError"
  fully_qualified_name: "asyncio.exceptions.IncompleteReadError"
  super_classes: "builtins.EOFError"
  methods {
    name: "__init__"
    fully_qualified_name: "asyncio.exceptions.IncompleteReadError.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.exceptions.IncompleteReadError"
        fully_qualified_name: "asyncio.exceptions.IncompleteReadError"
      }
    }
    parameters {
      name: "partial"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    parameters {
      name: "expected"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "expected"
    fully_qualified_name: "asyncio.exceptions.IncompleteReadError.expected"
    type_annotation {
      pretty_printed_name: "Union[builtins.int,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "partial"
    fully_qualified_name: "asyncio.exceptions.IncompleteReadError.partial"
    type_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "LimitOverrunError"
  fully_qualified_name: "asyncio.exceptions.LimitOverrunError"
  super_classes: "builtins.Exception"
  methods {
    name: "__init__"
    fully_qualified_name: "asyncio.exceptions.LimitOverrunError.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.exceptions.LimitOverrunError"
        fully_qualified_name: "asyncio.exceptions.LimitOverrunError"
      }
    }
    parameters {
      name: "message"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "consumed"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "consumed"
    fully_qualified_name: "asyncio.exceptions.LimitOverrunError.consumed"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "MultiLoopChildWatcher"
  fully_qualified_name: "asyncio.unix_events.MultiLoopChildWatcher"
  super_classes: "asyncio.unix_events.AbstractChildWatcher"
  methods {
    name: "is_active"
    fully_qualified_name: "asyncio.unix_events.MultiLoopChildWatcher.is_active"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.unix_events.MultiLoopChildWatcher"
        fully_qualified_name: "asyncio.unix_events.MultiLoopChildWatcher"
      }
    }
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "close"
    fully_qualified_name: "asyncio.unix_events.MultiLoopChildWatcher.close"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.unix_events.MultiLoopChildWatcher"
        fully_qualified_name: "asyncio.unix_events.MultiLoopChildWatcher"
      }
    }
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__enter__"
    fully_qualified_name: "asyncio.unix_events.MultiLoopChildWatcher.__enter__"
    return_annotation {
      pretty_printed_name: "UnboundType[Self]"
      kind: UNBOUND
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "asyncio.unix_events.MultiLoopChildWatcher"
        fully_qualified_name: "asyncio.unix_events.MultiLoopChildWatcher"
      }
    }
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__exit__"
    fully_qualified_name: "asyncio.unix_events.MultiLoopChildWatcher.__exit__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "asyncio.unix_events.MultiLoopChildWatcher"
        fully_qualified_name: "asyncio.unix_events.MultiLoopChildWatcher"
      }
    }
    parameters {
      name: "exc_type"
      type_annotation {
        pretty_printed_name: "Union[builtins.type,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.type"
          fully_qualified_name: "builtins.type"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "exc_val"
      type_annotation {
        pretty_printed_name: "Union[builtins.BaseException,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.BaseException"
          fully_qualified_name: "builtins.BaseException"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "exc_tb"
      type_annotation {
        pretty_printed_name: "Union[types.TracebackType,None]"
        kind: UNION
        args {
          pretty_printed_name: "types.TracebackType"
          fully_qualified_name: "types.TracebackType"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    valid_for: "38"
  }
  methods {
    name: "__exit__"
    fully_qualified_name: "asyncio.unix_events.MultiLoopChildWatcher.__exit__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "asyncio.unix_events.MultiLoopChildWatcher"
        fully_qualified_name: "asyncio.unix_events.MultiLoopChildWatcher"
      }
    }
    parameters {
      name: "exc_type"
      type_annotation {
        pretty_printed_name: "Union[Type[builtins.BaseException],None]"
        kind: UNION
        args {
          pretty_printed_name: "Type[builtins.BaseException]"
          kind: TYPE
          args {
            pretty_printed_name: "builtins.BaseException"
            fully_qualified_name: "builtins.BaseException"
          }
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "exc_val"
      type_annotation {
        pretty_printed_name: "Union[builtins.BaseException,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.BaseException"
          fully_qualified_name: "builtins.BaseException"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "exc_tb"
      type_annotation {
        pretty_printed_name: "Union[types.TracebackType,None]"
        kind: UNION
        args {
          pretty_printed_name: "types.TracebackType"
          fully_qualified_name: "types.TracebackType"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "add_child_handler"
    fully_qualified_name: "asyncio.unix_events.MultiLoopChildWatcher.add_child_handler"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.unix_events.MultiLoopChildWatcher"
        fully_qualified_name: "asyncio.unix_events.MultiLoopChildWatcher"
      }
    }
    parameters {
      name: "pid"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "callback"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "remove_child_handler"
    fully_qualified_name: "asyncio.unix_events.MultiLoopChildWatcher.remove_child_handler"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.unix_events.MultiLoopChildWatcher"
        fully_qualified_name: "asyncio.unix_events.MultiLoopChildWatcher"
      }
    }
    parameters {
      name: "pid"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "attach_loop"
    fully_qualified_name: "asyncio.unix_events.MultiLoopChildWatcher.attach_loop"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.unix_events.MultiLoopChildWatcher"
        fully_qualified_name: "asyncio.unix_events.MultiLoopChildWatcher"
      }
    }
    parameters {
      name: "loop"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[asyncio.events.AbstractEventLoop,None]"
        kind: UNION
        args {
          pretty_printed_name: "asyncio.events.AbstractEventLoop"
          fully_qualified_name: "asyncio.events.AbstractEventLoop"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "ThreadedChildWatcher"
  fully_qualified_name: "asyncio.unix_events.ThreadedChildWatcher"
  super_classes: "asyncio.unix_events.AbstractChildWatcher"
  methods {
    name: "is_active"
    fully_qualified_name: "asyncio.unix_events.ThreadedChildWatcher.is_active"
    return_annotation {
      pretty_printed_name: "Literal[builtins.bool]"
      kind: LITERAL
      args {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.unix_events.ThreadedChildWatcher"
        fully_qualified_name: "asyncio.unix_events.ThreadedChildWatcher"
      }
    }
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "close"
    fully_qualified_name: "asyncio.unix_events.ThreadedChildWatcher.close"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.unix_events.ThreadedChildWatcher"
        fully_qualified_name: "asyncio.unix_events.ThreadedChildWatcher"
      }
    }
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__enter__"
    fully_qualified_name: "asyncio.unix_events.ThreadedChildWatcher.__enter__"
    return_annotation {
      pretty_printed_name: "UnboundType[Self]"
      kind: UNBOUND
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "asyncio.unix_events.ThreadedChildWatcher"
        fully_qualified_name: "asyncio.unix_events.ThreadedChildWatcher"
      }
    }
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__exit__"
    fully_qualified_name: "asyncio.unix_events.ThreadedChildWatcher.__exit__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "asyncio.unix_events.ThreadedChildWatcher"
        fully_qualified_name: "asyncio.unix_events.ThreadedChildWatcher"
      }
    }
    parameters {
      name: "exc_type"
      type_annotation {
        pretty_printed_name: "Union[builtins.type,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.type"
          fully_qualified_name: "builtins.type"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "exc_val"
      type_annotation {
        pretty_printed_name: "Union[builtins.BaseException,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.BaseException"
          fully_qualified_name: "builtins.BaseException"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "exc_tb"
      type_annotation {
        pretty_printed_name: "Union[types.TracebackType,None]"
        kind: UNION
        args {
          pretty_printed_name: "types.TracebackType"
          fully_qualified_name: "types.TracebackType"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    valid_for: "38"
  }
  methods {
    name: "__exit__"
    fully_qualified_name: "asyncio.unix_events.ThreadedChildWatcher.__exit__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "asyncio.unix_events.ThreadedChildWatcher"
        fully_qualified_name: "asyncio.unix_events.ThreadedChildWatcher"
      }
    }
    parameters {
      name: "exc_type"
      type_annotation {
        pretty_printed_name: "Union[Type[builtins.BaseException],None]"
        kind: UNION
        args {
          pretty_printed_name: "Type[builtins.BaseException]"
          kind: TYPE
          args {
            pretty_printed_name: "builtins.BaseException"
            fully_qualified_name: "builtins.BaseException"
          }
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "exc_val"
      type_annotation {
        pretty_printed_name: "Union[builtins.BaseException,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.BaseException"
          fully_qualified_name: "builtins.BaseException"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "exc_tb"
      type_annotation {
        pretty_printed_name: "Union[types.TracebackType,None]"
        kind: UNION
        args {
          pretty_printed_name: "types.TracebackType"
          fully_qualified_name: "types.TracebackType"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__del__"
    fully_qualified_name: "asyncio.unix_events.ThreadedChildWatcher.__del__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "asyncio.unix_events.ThreadedChildWatcher"
        fully_qualified_name: "asyncio.unix_events.ThreadedChildWatcher"
      }
    }
    parameters {
      name: "_warn"
      type_annotation {
        pretty_printed_name: "asyncio.unix_events._Warn"
        fully_qualified_name: "asyncio.unix_events._Warn"
      }
      has_default: true
    }
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "add_child_handler"
    fully_qualified_name: "asyncio.unix_events.ThreadedChildWatcher.add_child_handler"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.unix_events.ThreadedChildWatcher"
        fully_qualified_name: "asyncio.unix_events.ThreadedChildWatcher"
      }
    }
    parameters {
      name: "pid"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "callback"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "remove_child_handler"
    fully_qualified_name: "asyncio.unix_events.ThreadedChildWatcher.remove_child_handler"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.unix_events.ThreadedChildWatcher"
        fully_qualified_name: "asyncio.unix_events.ThreadedChildWatcher"
      }
    }
    parameters {
      name: "pid"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "attach_loop"
    fully_qualified_name: "asyncio.unix_events.ThreadedChildWatcher.attach_loop"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.unix_events.ThreadedChildWatcher"
        fully_qualified_name: "asyncio.unix_events.ThreadedChildWatcher"
      }
    }
    parameters {
      name: "loop"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[asyncio.events.AbstractEventLoop,None]"
        kind: UNION
        args {
          pretty_printed_name: "asyncio.events.AbstractEventLoop"
          fully_qualified_name: "asyncio.events.AbstractEventLoop"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "Server"
  fully_qualified_name: "asyncio.base_events.Server"
  super_classes: "asyncio.events.AbstractServer"
  methods {
    name: "__init__"
    fully_qualified_name: "asyncio.base_events.Server.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.base_events.Server"
        fully_qualified_name: "asyncio.base_events.Server"
      }
    }
    parameters {
      name: "loop"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.events.AbstractEventLoop"
        fully_qualified_name: "asyncio.events.AbstractEventLoop"
      }
    }
    parameters {
      name: "sockets"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[socket.socket]"
        args {
          pretty_printed_name: "socket.socket"
          fully_qualified_name: "socket.socket"
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    parameters {
      name: "protocol_factory"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UnboundType[_ProtocolFactory]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "ssl_context"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UnboundType[_SSLContext]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "backlog"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "ssl_handshake_timeout"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.float,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "get_loop"
    fully_qualified_name: "asyncio.base_events.Server.get_loop"
    return_annotation {
      pretty_printed_name: "asyncio.events.AbstractEventLoop"
      fully_qualified_name: "asyncio.events.AbstractEventLoop"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.base_events.Server"
        fully_qualified_name: "asyncio.base_events.Server"
      }
    }
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "is_serving"
    fully_qualified_name: "asyncio.base_events.Server.is_serving"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.base_events.Server"
        fully_qualified_name: "asyncio.base_events.Server"
      }
    }
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "start_serving"
    fully_qualified_name: "asyncio.base_events.Server.start_serving"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,None]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.base_events.Server"
        fully_qualified_name: "asyncio.base_events.Server"
      }
    }
    is_asynchronous: true
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "serve_forever"
    fully_qualified_name: "asyncio.base_events.Server.serve_forever"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,None]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.base_events.Server"
        fully_qualified_name: "asyncio.base_events.Server"
      }
    }
    is_asynchronous: true
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "sockets"
    fully_qualified_name: "asyncio.base_events.Server.sockets"
    return_annotation {
      pretty_printed_name: "builtins.tuple[socket.socket]"
      args {
        pretty_printed_name: "socket.socket"
        fully_qualified_name: "socket.socket"
      }
      fully_qualified_name: "builtins.tuple"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.base_events.Server"
        fully_qualified_name: "asyncio.base_events.Server"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "close"
    fully_qualified_name: "asyncio.base_events.Server.close"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.base_events.Server"
        fully_qualified_name: "asyncio.base_events.Server"
      }
    }
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "wait_closed"
    fully_qualified_name: "asyncio.base_events.Server.wait_closed"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,None]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.base_events.Server"
        fully_qualified_name: "asyncio.base_events.Server"
      }
    }
    is_asynchronous: true
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "PidfdChildWatcher"
  fully_qualified_name: "asyncio.unix_events.PidfdChildWatcher"
  super_classes: "asyncio.unix_events.AbstractChildWatcher"
  methods {
    name: "__enter__"
    fully_qualified_name: "asyncio.unix_events.PidfdChildWatcher.__enter__"
    return_annotation {
      pretty_printed_name: "UnboundType[Self]"
      kind: UNBOUND
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "asyncio.unix_events.PidfdChildWatcher"
        fully_qualified_name: "asyncio.unix_events.PidfdChildWatcher"
      }
    }
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__exit__"
    fully_qualified_name: "asyncio.unix_events.PidfdChildWatcher.__exit__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "asyncio.unix_events.PidfdChildWatcher"
        fully_qualified_name: "asyncio.unix_events.PidfdChildWatcher"
      }
    }
    parameters {
      name: "exc_type"
      type_annotation {
        pretty_printed_name: "Union[Type[builtins.BaseException],None]"
        kind: UNION
        args {
          pretty_printed_name: "Type[builtins.BaseException]"
          kind: TYPE
          args {
            pretty_printed_name: "builtins.BaseException"
            fully_qualified_name: "builtins.BaseException"
          }
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "exc_val"
      type_annotation {
        pretty_printed_name: "Union[builtins.BaseException,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.BaseException"
          fully_qualified_name: "builtins.BaseException"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "exc_tb"
      type_annotation {
        pretty_printed_name: "Union[types.TracebackType,None]"
        kind: UNION
        args {
          pretty_printed_name: "types.TracebackType"
          fully_qualified_name: "types.TracebackType"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "is_active"
    fully_qualified_name: "asyncio.unix_events.PidfdChildWatcher.is_active"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.unix_events.PidfdChildWatcher"
        fully_qualified_name: "asyncio.unix_events.PidfdChildWatcher"
      }
    }
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "close"
    fully_qualified_name: "asyncio.unix_events.PidfdChildWatcher.close"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.unix_events.PidfdChildWatcher"
        fully_qualified_name: "asyncio.unix_events.PidfdChildWatcher"
      }
    }
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "attach_loop"
    fully_qualified_name: "asyncio.unix_events.PidfdChildWatcher.attach_loop"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.unix_events.PidfdChildWatcher"
        fully_qualified_name: "asyncio.unix_events.PidfdChildWatcher"
      }
    }
    parameters {
      name: "loop"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[asyncio.events.AbstractEventLoop,None]"
        kind: UNION
        args {
          pretty_printed_name: "asyncio.events.AbstractEventLoop"
          fully_qualified_name: "asyncio.events.AbstractEventLoop"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "add_child_handler"
    fully_qualified_name: "asyncio.unix_events.PidfdChildWatcher.add_child_handler"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.unix_events.PidfdChildWatcher"
        fully_qualified_name: "asyncio.unix_events.PidfdChildWatcher"
      }
    }
    parameters {
      name: "pid"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "callback"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "remove_child_handler"
    fully_qualified_name: "asyncio.unix_events.PidfdChildWatcher.remove_child_handler"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.unix_events.PidfdChildWatcher"
        fully_qualified_name: "asyncio.unix_events.PidfdChildWatcher"
      }
    }
    parameters {
      name: "pid"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "coroutine"
  fully_qualified_name: "asyncio.coroutines.coroutine"
  return_annotation {
    pretty_printed_name: "asyncio.coroutines._FunctionT"
    kind: TYPE_VAR
  }
  parameters {
    name: "func"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "asyncio.coroutines._FunctionT"
      kind: TYPE_VAR
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "iscoroutine"
  fully_qualified_name: "asyncio.coroutines.iscoroutine"
  return_annotation {
    pretty_printed_name: "builtins.bool"
    fully_qualified_name: "builtins.bool"
  }
  parameters {
    name: "obj"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.object"
      fully_qualified_name: "builtins.object"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "get_event_loop_policy"
  fully_qualified_name: "asyncio.events.get_event_loop_policy"
  return_annotation {
    pretty_printed_name: "asyncio.events.AbstractEventLoopPolicy"
    fully_qualified_name: "asyncio.events.AbstractEventLoopPolicy"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "set_event_loop_policy"
  fully_qualified_name: "asyncio.events.set_event_loop_policy"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "policy"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[asyncio.events.AbstractEventLoopPolicy,None]"
      kind: UNION
      args {
        pretty_printed_name: "asyncio.events.AbstractEventLoopPolicy"
        fully_qualified_name: "asyncio.events.AbstractEventLoopPolicy"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "get_event_loop"
  fully_qualified_name: "asyncio.events.get_event_loop"
  return_annotation {
    pretty_printed_name: "asyncio.events.AbstractEventLoop"
    fully_qualified_name: "asyncio.events.AbstractEventLoop"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "set_event_loop"
  fully_qualified_name: "asyncio.events.set_event_loop"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "loop"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[asyncio.events.AbstractEventLoop,None]"
      kind: UNION
      args {
        pretty_printed_name: "asyncio.events.AbstractEventLoop"
        fully_qualified_name: "asyncio.events.AbstractEventLoop"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "new_event_loop"
  fully_qualified_name: "asyncio.events.new_event_loop"
  return_annotation {
    pretty_printed_name: "asyncio.events.AbstractEventLoop"
    fully_qualified_name: "asyncio.events.AbstractEventLoop"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "get_child_watcher"
  fully_qualified_name: "asyncio.events.get_child_watcher"
  return_annotation {
    pretty_printed_name: "asyncio.unix_events.AbstractChildWatcher"
    fully_qualified_name: "asyncio.unix_events.AbstractChildWatcher"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "set_child_watcher"
  fully_qualified_name: "asyncio.events.set_child_watcher"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "watcher"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "asyncio.unix_events.AbstractChildWatcher"
      fully_qualified_name: "asyncio.unix_events.AbstractChildWatcher"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "_set_running_loop"
  fully_qualified_name: "asyncio.events._set_running_loop"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "__loop"
    type_annotation {
      pretty_printed_name: "Union[asyncio.events.AbstractEventLoop,None]"
      kind: UNION
      args {
        pretty_printed_name: "asyncio.events.AbstractEventLoop"
        fully_qualified_name: "asyncio.events.AbstractEventLoop"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "_get_running_loop"
  fully_qualified_name: "asyncio.events._get_running_loop"
  return_annotation {
    pretty_printed_name: "asyncio.events.AbstractEventLoop"
    fully_qualified_name: "asyncio.events.AbstractEventLoop"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "get_running_loop"
  fully_qualified_name: "asyncio.events.get_running_loop"
  return_annotation {
    pretty_printed_name: "asyncio.events.AbstractEventLoop"
    fully_qualified_name: "asyncio.events.AbstractEventLoop"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "isfuture"
  fully_qualified_name: "asyncio.futures.isfuture"
  return_annotation {
    pretty_printed_name: "builtins.bool"
    fully_qualified_name: "builtins.bool"
  }
  parameters {
    name: "obj"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.object"
      fully_qualified_name: "builtins.object"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "wrap_future"
  fully_qualified_name: "asyncio.futures.wrap_future"
  return_annotation {
    pretty_printed_name: "asyncio.futures.Future[asyncio.futures._T]"
    args {
      pretty_printed_name: "asyncio.futures._T"
      kind: TYPE_VAR
    }
    fully_qualified_name: "asyncio.futures.Future"
  }
  parameters {
    name: "future"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[concurrent.futures._base.Future[asyncio.futures._T],asyncio.futures.Future[asyncio.futures._T]]"
      kind: UNION
      args {
        pretty_printed_name: "concurrent.futures._base.Future[asyncio.futures._T]"
        args {
          pretty_printed_name: "asyncio.futures._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "concurrent.futures._base.Future"
      }
      args {
        pretty_printed_name: "asyncio.futures.Future[asyncio.futures._T]"
        args {
          pretty_printed_name: "asyncio.futures._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "asyncio.futures.Future"
      }
    }
  }
  parameters {
    name: "loop"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[asyncio.events.AbstractEventLoop,None]"
      kind: UNION
      args {
        pretty_printed_name: "asyncio.events.AbstractEventLoop"
        fully_qualified_name: "asyncio.events.AbstractEventLoop"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "run"
  fully_qualified_name: "asyncio.runners.run"
  return_annotation {
    pretty_printed_name: "asyncio.runners._T"
    kind: TYPE_VAR
  }
  parameters {
    name: "main"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,asyncio.runners._T]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "asyncio.runners._T"
        kind: TYPE_VAR
      }
      fully_qualified_name: "typing.Coroutine"
    }
  }
  parameters {
    name: "debug"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
}
functions {
  name: "run"
  fully_qualified_name: "asyncio.runners.run"
  return_annotation {
    pretty_printed_name: "asyncio.runners._T"
    kind: TYPE_VAR
  }
  parameters {
    name: "main"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,asyncio.runners._T]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "asyncio.runners._T"
        kind: TYPE_VAR
      }
      fully_qualified_name: "typing.Coroutine"
    }
  }
  parameters {
    name: "debug"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[builtins.bool,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "open_connection"
  fully_qualified_name: "asyncio.streams.open_connection"
  return_annotation {
    pretty_printed_name: "typing.Coroutine[Any,Any,Tuple[asyncio.streams.StreamReader,asyncio.streams.StreamWriter]]"
    args {
      pretty_printed_name: "Any"
      kind: ANY
    }
    args {
      pretty_printed_name: "Any"
      kind: ANY
    }
    args {
      pretty_printed_name: "Tuple[asyncio.streams.StreamReader,asyncio.streams.StreamWriter]"
      kind: TUPLE
      args {
        pretty_printed_name: "asyncio.streams.StreamReader"
        fully_qualified_name: "asyncio.streams.StreamReader"
      }
      args {
        pretty_printed_name: "asyncio.streams.StreamWriter"
        fully_qualified_name: "asyncio.streams.StreamWriter"
      }
    }
    fully_qualified_name: "typing.Coroutine"
  }
  parameters {
    name: "host"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "port"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.int,builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "loop"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[asyncio.events.AbstractEventLoop,None]"
      kind: UNION
      args {
        pretty_printed_name: "asyncio.events.AbstractEventLoop"
        fully_qualified_name: "asyncio.events.AbstractEventLoop"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "limit"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    has_default: true
  }
  parameters {
    name: "ssl_handshake_timeout"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[builtins.float,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "kwds"
    kind: VAR_KEYWORD
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  is_asynchronous: true
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
}
functions {
  name: "open_connection"
  fully_qualified_name: "asyncio.streams.open_connection"
  return_annotation {
    pretty_printed_name: "typing.Coroutine[Any,Any,Tuple[asyncio.streams.StreamReader,asyncio.streams.StreamWriter]]"
    args {
      pretty_printed_name: "Any"
      kind: ANY
    }
    args {
      pretty_printed_name: "Any"
      kind: ANY
    }
    args {
      pretty_printed_name: "Tuple[asyncio.streams.StreamReader,asyncio.streams.StreamWriter]"
      kind: TUPLE
      args {
        pretty_printed_name: "asyncio.streams.StreamReader"
        fully_qualified_name: "asyncio.streams.StreamReader"
      }
      args {
        pretty_printed_name: "asyncio.streams.StreamWriter"
        fully_qualified_name: "asyncio.streams.StreamWriter"
      }
    }
    fully_qualified_name: "typing.Coroutine"
  }
  parameters {
    name: "host"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "port"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.int,builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "limit"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    has_default: true
  }
  parameters {
    name: "ssl_handshake_timeout"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[builtins.float,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "kwds"
    kind: VAR_KEYWORD
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  is_asynchronous: true
  valid_for: "310"
}
functions {
  name: "start_server"
  fully_qualified_name: "asyncio.streams.start_server"
  return_annotation {
    pretty_printed_name: "typing.Coroutine[Any,Any,asyncio.base_events.Server]"
    args {
      pretty_printed_name: "Any"
      kind: ANY
    }
    args {
      pretty_printed_name: "Any"
      kind: ANY
    }
    args {
      pretty_printed_name: "asyncio.base_events.Server"
      fully_qualified_name: "asyncio.base_events.Server"
    }
    fully_qualified_name: "typing.Coroutine"
  }
  parameters {
    name: "client_connected_cb"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "UnboundType[_ClientConnectedCallback]"
      kind: UNBOUND
    }
  }
  parameters {
    name: "host"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "port"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.int,builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "loop"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[asyncio.events.AbstractEventLoop,None]"
      kind: UNION
      args {
        pretty_printed_name: "asyncio.events.AbstractEventLoop"
        fully_qualified_name: "asyncio.events.AbstractEventLoop"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "limit"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    has_default: true
  }
  parameters {
    name: "ssl_handshake_timeout"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[builtins.float,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "kwds"
    kind: VAR_KEYWORD
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  is_asynchronous: true
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
}
functions {
  name: "start_server"
  fully_qualified_name: "asyncio.streams.start_server"
  return_annotation {
    pretty_printed_name: "typing.Coroutine[Any,Any,asyncio.base_events.Server]"
    args {
      pretty_printed_name: "Any"
      kind: ANY
    }
    args {
      pretty_printed_name: "Any"
      kind: ANY
    }
    args {
      pretty_printed_name: "asyncio.base_events.Server"
      fully_qualified_name: "asyncio.base_events.Server"
    }
    fully_qualified_name: "typing.Coroutine"
  }
  parameters {
    name: "client_connected_cb"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "UnboundType[_ClientConnectedCallback]"
      kind: UNBOUND
    }
  }
  parameters {
    name: "host"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,typing.Sequence[builtins.str],None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "typing.Sequence[builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "typing.Sequence"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "port"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.int,builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "limit"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    has_default: true
  }
  parameters {
    name: "ssl_handshake_timeout"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[builtins.float,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "kwds"
    kind: VAR_KEYWORD
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  is_asynchronous: true
  valid_for: "310"
}
functions {
  name: "open_unix_connection"
  fully_qualified_name: "asyncio.streams.open_unix_connection"
  return_annotation {
    pretty_printed_name: "typing.Coroutine[Any,Any,Tuple[asyncio.streams.StreamReader,asyncio.streams.StreamWriter]]"
    args {
      pretty_printed_name: "Any"
      kind: ANY
    }
    args {
      pretty_printed_name: "Any"
      kind: ANY
    }
    args {
      pretty_printed_name: "Tuple[asyncio.streams.StreamReader,asyncio.streams.StreamWriter]"
      kind: TUPLE
      args {
        pretty_printed_name: "asyncio.streams.StreamReader"
        fully_qualified_name: "asyncio.streams.StreamReader"
      }
      args {
        pretty_printed_name: "asyncio.streams.StreamWriter"
        fully_qualified_name: "asyncio.streams.StreamWriter"
      }
    }
    fully_qualified_name: "typing.Coroutine"
  }
  parameters {
    name: "path"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[UnboundType[StrPath],None]"
      kind: UNION
      args {
        pretty_printed_name: "UnboundType[StrPath]"
        kind: UNBOUND
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "loop"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[asyncio.events.AbstractEventLoop,None]"
      kind: UNION
      args {
        pretty_printed_name: "asyncio.events.AbstractEventLoop"
        fully_qualified_name: "asyncio.events.AbstractEventLoop"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "limit"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    has_default: true
  }
  parameters {
    name: "kwds"
    kind: VAR_KEYWORD
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  is_asynchronous: true
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
}
functions {
  name: "open_unix_connection"
  fully_qualified_name: "asyncio.streams.open_unix_connection"
  return_annotation {
    pretty_printed_name: "typing.Coroutine[Any,Any,Tuple[asyncio.streams.StreamReader,asyncio.streams.StreamWriter]]"
    args {
      pretty_printed_name: "Any"
      kind: ANY
    }
    args {
      pretty_printed_name: "Any"
      kind: ANY
    }
    args {
      pretty_printed_name: "Tuple[asyncio.streams.StreamReader,asyncio.streams.StreamWriter]"
      kind: TUPLE
      args {
        pretty_printed_name: "asyncio.streams.StreamReader"
        fully_qualified_name: "asyncio.streams.StreamReader"
      }
      args {
        pretty_printed_name: "asyncio.streams.StreamWriter"
        fully_qualified_name: "asyncio.streams.StreamWriter"
      }
    }
    fully_qualified_name: "typing.Coroutine"
  }
  parameters {
    name: "path"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[UnboundType[StrPath],None]"
      kind: UNION
      args {
        pretty_printed_name: "UnboundType[StrPath]"
        kind: UNBOUND
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "limit"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    has_default: true
  }
  parameters {
    name: "kwds"
    kind: VAR_KEYWORD
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  is_asynchronous: true
  valid_for: "310"
}
functions {
  name: "start_unix_server"
  fully_qualified_name: "asyncio.streams.start_unix_server"
  return_annotation {
    pretty_printed_name: "typing.Coroutine[Any,Any,asyncio.base_events.Server]"
    args {
      pretty_printed_name: "Any"
      kind: ANY
    }
    args {
      pretty_printed_name: "Any"
      kind: ANY
    }
    args {
      pretty_printed_name: "asyncio.base_events.Server"
      fully_qualified_name: "asyncio.base_events.Server"
    }
    fully_qualified_name: "typing.Coroutine"
  }
  parameters {
    name: "client_connected_cb"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "UnboundType[_ClientConnectedCallback]"
      kind: UNBOUND
    }
  }
  parameters {
    name: "path"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[UnboundType[StrPath],None]"
      kind: UNION
      args {
        pretty_printed_name: "UnboundType[StrPath]"
        kind: UNBOUND
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "loop"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[asyncio.events.AbstractEventLoop,None]"
      kind: UNION
      args {
        pretty_printed_name: "asyncio.events.AbstractEventLoop"
        fully_qualified_name: "asyncio.events.AbstractEventLoop"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "limit"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    has_default: true
  }
  parameters {
    name: "kwds"
    kind: VAR_KEYWORD
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  is_asynchronous: true
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
}
functions {
  name: "start_unix_server"
  fully_qualified_name: "asyncio.streams.start_unix_server"
  return_annotation {
    pretty_printed_name: "typing.Coroutine[Any,Any,asyncio.base_events.Server]"
    args {
      pretty_printed_name: "Any"
      kind: ANY
    }
    args {
      pretty_printed_name: "Any"
      kind: ANY
    }
    args {
      pretty_printed_name: "asyncio.base_events.Server"
      fully_qualified_name: "asyncio.base_events.Server"
    }
    fully_qualified_name: "typing.Coroutine"
  }
  parameters {
    name: "client_connected_cb"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "UnboundType[_ClientConnectedCallback]"
      kind: UNBOUND
    }
  }
  parameters {
    name: "path"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[UnboundType[StrPath],None]"
      kind: UNION
      args {
        pretty_printed_name: "UnboundType[StrPath]"
        kind: UNBOUND
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "limit"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    has_default: true
  }
  parameters {
    name: "kwds"
    kind: VAR_KEYWORD
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  is_asynchronous: true
  valid_for: "310"
}
functions {
  name: "create_subprocess_shell"
  fully_qualified_name: "asyncio.subprocess.create_subprocess_shell"
  return_annotation {
    pretty_printed_name: "typing.Coroutine[Any,Any,asyncio.subprocess.Process]"
    args {
      pretty_printed_name: "Any"
      kind: ANY
    }
    args {
      pretty_printed_name: "Any"
      kind: ANY
    }
    args {
      pretty_printed_name: "asyncio.subprocess.Process"
      fully_qualified_name: "asyncio.subprocess.Process"
    }
    fully_qualified_name: "typing.Coroutine"
  }
  parameters {
    name: "cmd"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,builtins.bytes]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
  }
  parameters {
    name: "stdin"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.int,typing.IO[Any],None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "typing.IO[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "typing.IO"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "stdout"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.int,typing.IO[Any],None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "typing.IO[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "typing.IO"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "stderr"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.int,typing.IO[Any],None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "typing.IO[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "typing.IO"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "loop"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[asyncio.events.AbstractEventLoop,None]"
      kind: UNION
      args {
        pretty_printed_name: "asyncio.events.AbstractEventLoop"
        fully_qualified_name: "asyncio.events.AbstractEventLoop"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "limit"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    has_default: true
  }
  parameters {
    name: "universal_newlines"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Literal[builtins.bool]"
      kind: LITERAL
      args {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    has_default: true
  }
  parameters {
    name: "shell"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Literal[builtins.bool]"
      kind: LITERAL
      args {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    has_default: true
  }
  parameters {
    name: "bufsize"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Literal[builtins.int]"
      kind: LITERAL
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    has_default: true
  }
  parameters {
    name: "encoding"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    has_default: true
  }
  parameters {
    name: "errors"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    has_default: true
  }
  parameters {
    name: "text"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[Literal[builtins.bool],None]"
      kind: UNION
      args {
        pretty_printed_name: "Literal[builtins.bool]"
        kind: LITERAL
        args {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "executable"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[UnboundType[StrOrBytesPath],None]"
      kind: UNION
      args {
        pretty_printed_name: "UnboundType[StrOrBytesPath]"
        kind: UNBOUND
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "preexec_fn"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[CallableType[builtins.function],None]"
      kind: UNION
      args {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "close_fds"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    has_default: true
  }
  parameters {
    name: "cwd"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[UnboundType[StrOrBytesPath],None]"
      kind: UNION
      args {
        pretty_printed_name: "UnboundType[StrOrBytesPath]"
        kind: UNBOUND
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "env"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[UnboundType[subprocess._ENV],None]"
      kind: UNION
      args {
        pretty_printed_name: "UnboundType[subprocess._ENV]"
        kind: UNBOUND
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "startupinfo"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "creationflags"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    has_default: true
  }
  parameters {
    name: "restore_signals"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    has_default: true
  }
  parameters {
    name: "start_new_session"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    has_default: true
  }
  parameters {
    name: "pass_fds"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "typing.Collection[builtins.int]"
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      fully_qualified_name: "typing.Collection"
    }
    has_default: true
  }
  parameters {
    name: "group"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[None,builtins.str,builtins.int]"
      kind: UNION
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    has_default: true
  }
  parameters {
    name: "extra_groups"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[None,typing.Collection[Union[builtins.str,builtins.int]]]"
      kind: UNION
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
      args {
        pretty_printed_name: "typing.Collection[Union[builtins.str,builtins.int]]"
        args {
          pretty_printed_name: "Union[builtins.str,builtins.int]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
        }
        fully_qualified_name: "typing.Collection"
      }
    }
    has_default: true
  }
  parameters {
    name: "user"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[None,builtins.str,builtins.int]"
      kind: UNION
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    has_default: true
  }
  parameters {
    name: "umask"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    has_default: true
  }
  is_asynchronous: true
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
}
functions {
  name: "create_subprocess_shell"
  fully_qualified_name: "asyncio.subprocess.create_subprocess_shell"
  return_annotation {
    pretty_printed_name: "typing.Coroutine[Any,Any,asyncio.subprocess.Process]"
    args {
      pretty_printed_name: "Any"
      kind: ANY
    }
    args {
      pretty_printed_name: "Any"
      kind: ANY
    }
    args {
      pretty_printed_name: "asyncio.subprocess.Process"
      fully_qualified_name: "asyncio.subprocess.Process"
    }
    fully_qualified_name: "typing.Coroutine"
  }
  parameters {
    name: "cmd"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,builtins.bytes]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
  }
  parameters {
    name: "stdin"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.int,typing.IO[Any],None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "typing.IO[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "typing.IO"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "stdout"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.int,typing.IO[Any],None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "typing.IO[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "typing.IO"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "stderr"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.int,typing.IO[Any],None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "typing.IO[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "typing.IO"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "limit"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    has_default: true
  }
  parameters {
    name: "universal_newlines"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Literal[builtins.bool]"
      kind: LITERAL
      args {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    has_default: true
  }
  parameters {
    name: "shell"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Literal[builtins.bool]"
      kind: LITERAL
      args {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    has_default: true
  }
  parameters {
    name: "bufsize"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Literal[builtins.int]"
      kind: LITERAL
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    has_default: true
  }
  parameters {
    name: "encoding"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    has_default: true
  }
  parameters {
    name: "errors"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    has_default: true
  }
  parameters {
    name: "text"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[Literal[builtins.bool],None]"
      kind: UNION
      args {
        pretty_printed_name: "Literal[builtins.bool]"
        kind: LITERAL
        args {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "executable"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[UnboundType[StrOrBytesPath],None]"
      kind: UNION
      args {
        pretty_printed_name: "UnboundType[StrOrBytesPath]"
        kind: UNBOUND
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "preexec_fn"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[CallableType[builtins.function],None]"
      kind: UNION
      args {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "close_fds"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    has_default: true
  }
  parameters {
    name: "cwd"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[UnboundType[StrOrBytesPath],None]"
      kind: UNION
      args {
        pretty_printed_name: "UnboundType[StrOrBytesPath]"
        kind: UNBOUND
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "env"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[UnboundType[subprocess._ENV],None]"
      kind: UNION
      args {
        pretty_printed_name: "UnboundType[subprocess._ENV]"
        kind: UNBOUND
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "startupinfo"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "creationflags"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    has_default: true
  }
  parameters {
    name: "restore_signals"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    has_default: true
  }
  parameters {
    name: "start_new_session"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    has_default: true
  }
  parameters {
    name: "pass_fds"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "typing.Collection[builtins.int]"
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      fully_qualified_name: "typing.Collection"
    }
    has_default: true
  }
  parameters {
    name: "group"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[None,builtins.str,builtins.int]"
      kind: UNION
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    has_default: true
  }
  parameters {
    name: "extra_groups"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[None,typing.Collection[Union[builtins.str,builtins.int]]]"
      kind: UNION
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
      args {
        pretty_printed_name: "typing.Collection[Union[builtins.str,builtins.int]]"
        args {
          pretty_printed_name: "Union[builtins.str,builtins.int]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
        }
        fully_qualified_name: "typing.Collection"
      }
    }
    has_default: true
  }
  parameters {
    name: "user"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[None,builtins.str,builtins.int]"
      kind: UNION
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    has_default: true
  }
  parameters {
    name: "umask"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    has_default: true
  }
  parameters {
    name: "pipesize"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    has_default: true
  }
  is_asynchronous: true
  valid_for: "310"
}
functions {
  name: "create_subprocess_exec"
  fully_qualified_name: "asyncio.subprocess.create_subprocess_exec"
  return_annotation {
    pretty_printed_name: "typing.Coroutine[Any,Any,asyncio.subprocess.Process]"
    args {
      pretty_printed_name: "Any"
      kind: ANY
    }
    args {
      pretty_printed_name: "Any"
      kind: ANY
    }
    args {
      pretty_printed_name: "asyncio.subprocess.Process"
      fully_qualified_name: "asyncio.subprocess.Process"
    }
    fully_qualified_name: "typing.Coroutine"
  }
  parameters {
    name: "program"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "UnboundType[_ExecArg]"
      kind: UNBOUND
    }
  }
  parameters {
    name: "args"
    kind: VAR_POSITIONAL
    type_annotation {
      pretty_printed_name: "UnboundType[_ExecArg]"
      kind: UNBOUND
    }
  }
  parameters {
    name: "stdin"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[builtins.int,typing.IO[Any],None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "typing.IO[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "typing.IO"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "stdout"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[builtins.int,typing.IO[Any],None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "typing.IO[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "typing.IO"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "stderr"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[builtins.int,typing.IO[Any],None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "typing.IO[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "typing.IO"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "loop"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[asyncio.events.AbstractEventLoop,None]"
      kind: UNION
      args {
        pretty_printed_name: "asyncio.events.AbstractEventLoop"
        fully_qualified_name: "asyncio.events.AbstractEventLoop"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "limit"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    has_default: true
  }
  parameters {
    name: "universal_newlines"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Literal[builtins.bool]"
      kind: LITERAL
      args {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    has_default: true
  }
  parameters {
    name: "shell"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Literal[builtins.bool]"
      kind: LITERAL
      args {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    has_default: true
  }
  parameters {
    name: "bufsize"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Literal[builtins.int]"
      kind: LITERAL
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    has_default: true
  }
  parameters {
    name: "encoding"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    has_default: true
  }
  parameters {
    name: "errors"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    has_default: true
  }
  parameters {
    name: "text"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[builtins.bool,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "executable"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[UnboundType[StrOrBytesPath],None]"
      kind: UNION
      args {
        pretty_printed_name: "UnboundType[StrOrBytesPath]"
        kind: UNBOUND
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "preexec_fn"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[CallableType[builtins.function],None]"
      kind: UNION
      args {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "close_fds"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    has_default: true
  }
  parameters {
    name: "cwd"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[UnboundType[StrOrBytesPath],None]"
      kind: UNION
      args {
        pretty_printed_name: "UnboundType[StrOrBytesPath]"
        kind: UNBOUND
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "env"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[UnboundType[subprocess._ENV],None]"
      kind: UNION
      args {
        pretty_printed_name: "UnboundType[subprocess._ENV]"
        kind: UNBOUND
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "startupinfo"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "creationflags"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    has_default: true
  }
  parameters {
    name: "restore_signals"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    has_default: true
  }
  parameters {
    name: "start_new_session"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    has_default: true
  }
  parameters {
    name: "pass_fds"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "typing.Collection[builtins.int]"
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      fully_qualified_name: "typing.Collection"
    }
    has_default: true
  }
  parameters {
    name: "group"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[None,builtins.str,builtins.int]"
      kind: UNION
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    has_default: true
  }
  parameters {
    name: "extra_groups"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[None,typing.Collection[Union[builtins.str,builtins.int]]]"
      kind: UNION
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
      args {
        pretty_printed_name: "typing.Collection[Union[builtins.str,builtins.int]]"
        args {
          pretty_printed_name: "Union[builtins.str,builtins.int]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
        }
        fully_qualified_name: "typing.Collection"
      }
    }
    has_default: true
  }
  parameters {
    name: "user"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[None,builtins.str,builtins.int]"
      kind: UNION
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    has_default: true
  }
  parameters {
    name: "umask"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    has_default: true
  }
  is_asynchronous: true
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
}
functions {
  name: "create_subprocess_exec"
  fully_qualified_name: "asyncio.subprocess.create_subprocess_exec"
  return_annotation {
    pretty_printed_name: "typing.Coroutine[Any,Any,asyncio.subprocess.Process]"
    args {
      pretty_printed_name: "Any"
      kind: ANY
    }
    args {
      pretty_printed_name: "Any"
      kind: ANY
    }
    args {
      pretty_printed_name: "asyncio.subprocess.Process"
      fully_qualified_name: "asyncio.subprocess.Process"
    }
    fully_qualified_name: "typing.Coroutine"
  }
  parameters {
    name: "program"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "UnboundType[_ExecArg]"
      kind: UNBOUND
    }
  }
  parameters {
    name: "args"
    kind: VAR_POSITIONAL
    type_annotation {
      pretty_printed_name: "UnboundType[_ExecArg]"
      kind: UNBOUND
    }
  }
  parameters {
    name: "stdin"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[builtins.int,typing.IO[Any],None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "typing.IO[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "typing.IO"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "stdout"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[builtins.int,typing.IO[Any],None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "typing.IO[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "typing.IO"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "stderr"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[builtins.int,typing.IO[Any],None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "typing.IO[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "typing.IO"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "limit"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    has_default: true
  }
  parameters {
    name: "universal_newlines"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Literal[builtins.bool]"
      kind: LITERAL
      args {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    has_default: true
  }
  parameters {
    name: "shell"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Literal[builtins.bool]"
      kind: LITERAL
      args {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    has_default: true
  }
  parameters {
    name: "bufsize"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Literal[builtins.int]"
      kind: LITERAL
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    has_default: true
  }
  parameters {
    name: "encoding"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    has_default: true
  }
  parameters {
    name: "errors"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    has_default: true
  }
  parameters {
    name: "text"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[builtins.bool,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "executable"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[UnboundType[StrOrBytesPath],None]"
      kind: UNION
      args {
        pretty_printed_name: "UnboundType[StrOrBytesPath]"
        kind: UNBOUND
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "preexec_fn"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[CallableType[builtins.function],None]"
      kind: UNION
      args {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "close_fds"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    has_default: true
  }
  parameters {
    name: "cwd"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[UnboundType[StrOrBytesPath],None]"
      kind: UNION
      args {
        pretty_printed_name: "UnboundType[StrOrBytesPath]"
        kind: UNBOUND
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "env"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[UnboundType[subprocess._ENV],None]"
      kind: UNION
      args {
        pretty_printed_name: "UnboundType[subprocess._ENV]"
        kind: UNBOUND
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "startupinfo"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "creationflags"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    has_default: true
  }
  parameters {
    name: "restore_signals"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    has_default: true
  }
  parameters {
    name: "start_new_session"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    has_default: true
  }
  parameters {
    name: "pass_fds"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "typing.Collection[builtins.int]"
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      fully_qualified_name: "typing.Collection"
    }
    has_default: true
  }
  parameters {
    name: "group"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[None,builtins.str,builtins.int]"
      kind: UNION
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    has_default: true
  }
  parameters {
    name: "extra_groups"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[None,typing.Collection[Union[builtins.str,builtins.int]]]"
      kind: UNION
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
      args {
        pretty_printed_name: "typing.Collection[Union[builtins.str,builtins.int]]"
        args {
          pretty_printed_name: "Union[builtins.str,builtins.int]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
        }
        fully_qualified_name: "typing.Collection"
      }
    }
    has_default: true
  }
  parameters {
    name: "user"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[None,builtins.str,builtins.int]"
      kind: UNION
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    has_default: true
  }
  parameters {
    name: "umask"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    has_default: true
  }
  parameters {
    name: "pipesize"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    has_default: true
  }
  is_asynchronous: true
  valid_for: "310"
}
functions {
  name: "as_completed"
  fully_qualified_name: "asyncio.tasks.as_completed"
  return_annotation {
    pretty_printed_name: "typing.Iterator[asyncio.futures.Future[asyncio.tasks._T]]"
    args {
      pretty_printed_name: "asyncio.futures.Future[asyncio.tasks._T]"
      args {
        pretty_printed_name: "asyncio.tasks._T"
        kind: TYPE_VAR
      }
      fully_qualified_name: "asyncio.futures.Future"
    }
    fully_qualified_name: "typing.Iterator"
  }
  parameters {
    name: "fs"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "typing.Iterable[UnboundType[_FutureLike]]"
      args {
        pretty_printed_name: "UnboundType[_FutureLike]"
        kind: UNBOUND
      }
      fully_qualified_name: "typing.Iterable"
    }
  }
  parameters {
    name: "loop"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[asyncio.events.AbstractEventLoop,None]"
      kind: UNION
      args {
        pretty_printed_name: "asyncio.events.AbstractEventLoop"
        fully_qualified_name: "asyncio.events.AbstractEventLoop"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "timeout"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[builtins.float,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
}
functions {
  name: "as_completed"
  fully_qualified_name: "asyncio.tasks.as_completed"
  return_annotation {
    pretty_printed_name: "typing.Iterator[asyncio.futures.Future[asyncio.tasks._T]]"
    args {
      pretty_printed_name: "asyncio.futures.Future[asyncio.tasks._T]"
      args {
        pretty_printed_name: "asyncio.tasks._T"
        kind: TYPE_VAR
      }
      fully_qualified_name: "asyncio.futures.Future"
    }
    fully_qualified_name: "typing.Iterator"
  }
  parameters {
    name: "fs"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "typing.Iterable[UnboundType[_FutureLike]]"
      args {
        pretty_printed_name: "UnboundType[_FutureLike]"
        kind: UNBOUND
      }
      fully_qualified_name: "typing.Iterable"
    }
  }
  parameters {
    name: "timeout"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[builtins.float,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  valid_for: "310"
}
functions {
  name: "run_coroutine_threadsafe"
  fully_qualified_name: "asyncio.tasks.run_coroutine_threadsafe"
  return_annotation {
    pretty_printed_name: "concurrent.futures._base.Future[asyncio.tasks._T]"
    args {
      pretty_printed_name: "asyncio.tasks._T"
      kind: TYPE_VAR
    }
    fully_qualified_name: "concurrent.futures._base.Future"
  }
  parameters {
    name: "coro"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "UnboundType[_FutureLike]"
      kind: UNBOUND
    }
  }
  parameters {
    name: "loop"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "asyncio.events.AbstractEventLoop"
      fully_qualified_name: "asyncio.events.AbstractEventLoop"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "shield"
  fully_qualified_name: "asyncio.tasks.shield"
  return_annotation {
    pretty_printed_name: "asyncio.futures.Future[asyncio.tasks._T]"
    args {
      pretty_printed_name: "asyncio.tasks._T"
      kind: TYPE_VAR
    }
    fully_qualified_name: "asyncio.futures.Future"
  }
  parameters {
    name: "arg"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "UnboundType[_FutureLike]"
      kind: UNBOUND
    }
  }
  parameters {
    name: "loop"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[asyncio.events.AbstractEventLoop,None]"
      kind: UNION
      args {
        pretty_printed_name: "asyncio.events.AbstractEventLoop"
        fully_qualified_name: "asyncio.events.AbstractEventLoop"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
}
functions {
  name: "shield"
  fully_qualified_name: "asyncio.tasks.shield"
  return_annotation {
    pretty_printed_name: "asyncio.futures.Future[asyncio.tasks._T]"
    args {
      pretty_printed_name: "asyncio.tasks._T"
      kind: TYPE_VAR
    }
    fully_qualified_name: "asyncio.futures.Future"
  }
  parameters {
    name: "arg"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "UnboundType[_FutureLike]"
      kind: UNBOUND
    }
  }
  valid_for: "310"
}
functions {
  name: "wait_for"
  fully_qualified_name: "asyncio.tasks.wait_for"
  return_annotation {
    pretty_printed_name: "typing.Coroutine[Any,Any,asyncio.tasks._T]"
    args {
      pretty_printed_name: "Any"
      kind: ANY
    }
    args {
      pretty_printed_name: "Any"
      kind: ANY
    }
    args {
      pretty_printed_name: "asyncio.tasks._T"
      kind: TYPE_VAR
    }
    fully_qualified_name: "typing.Coroutine"
  }
  parameters {
    name: "fut"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "UnboundType[_FutureLike]"
      kind: UNBOUND
    }
  }
  parameters {
    name: "timeout"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.float,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  parameters {
    name: "loop"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[asyncio.events.AbstractEventLoop,None]"
      kind: UNION
      args {
        pretty_printed_name: "asyncio.events.AbstractEventLoop"
        fully_qualified_name: "asyncio.events.AbstractEventLoop"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  is_asynchronous: true
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
}
functions {
  name: "wait_for"
  fully_qualified_name: "asyncio.tasks.wait_for"
  return_annotation {
    pretty_printed_name: "typing.Coroutine[Any,Any,asyncio.tasks._T]"
    args {
      pretty_printed_name: "Any"
      kind: ANY
    }
    args {
      pretty_printed_name: "Any"
      kind: ANY
    }
    args {
      pretty_printed_name: "asyncio.tasks._T"
      kind: TYPE_VAR
    }
    fully_qualified_name: "typing.Coroutine"
  }
  parameters {
    name: "fut"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "UnboundType[_FutureLike]"
      kind: UNBOUND
    }
  }
  parameters {
    name: "timeout"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.float,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  is_asynchronous: true
  valid_for: "310"
}
functions {
  name: "all_tasks"
  fully_qualified_name: "asyncio.tasks.all_tasks"
  return_annotation {
    pretty_printed_name: "builtins.set[asyncio.tasks.Task[Any]]"
    args {
      pretty_printed_name: "asyncio.tasks.Task[Any]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "asyncio.tasks.Task"
    }
    fully_qualified_name: "builtins.set"
  }
  parameters {
    name: "loop"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[asyncio.events.AbstractEventLoop,None]"
      kind: UNION
      args {
        pretty_printed_name: "asyncio.events.AbstractEventLoop"
        fully_qualified_name: "asyncio.events.AbstractEventLoop"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "create_task"
  fully_qualified_name: "asyncio.tasks.create_task"
  return_annotation {
    pretty_printed_name: "asyncio.tasks.Task[asyncio.tasks._T]"
    args {
      pretty_printed_name: "asyncio.tasks._T"
      kind: TYPE_VAR
    }
    fully_qualified_name: "asyncio.tasks.Task"
  }
  parameters {
    name: "coro"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[typing.Generator[Any,None,asyncio.tasks._T],typing.Coroutine[Any,Any,asyncio.tasks._T]]"
      kind: UNION
      args {
        pretty_printed_name: "typing.Generator[Any,None,asyncio.tasks._T]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
        args {
          pretty_printed_name: "asyncio.tasks._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Generator"
      }
      args {
        pretty_printed_name: "typing.Coroutine[Any,Any,asyncio.tasks._T]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "asyncio.tasks._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Coroutine"
      }
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
}
functions {
  name: "create_task"
  fully_qualified_name: "asyncio.tasks.create_task"
  return_annotation {
    pretty_printed_name: "asyncio.tasks.Task[asyncio.tasks._T]"
    args {
      pretty_printed_name: "asyncio.tasks._T"
      kind: TYPE_VAR
    }
    fully_qualified_name: "asyncio.tasks.Task"
  }
  parameters {
    name: "coro"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[typing.Generator[Any,None,asyncio.tasks._T],typing.Coroutine[Any,Any,asyncio.tasks._T]]"
      kind: UNION
      args {
        pretty_printed_name: "typing.Generator[Any,None,asyncio.tasks._T]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
        args {
          pretty_printed_name: "asyncio.tasks._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Generator"
      }
      args {
        pretty_printed_name: "typing.Coroutine[Any,Any,asyncio.tasks._T]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "asyncio.tasks._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Coroutine"
      }
    }
  }
  parameters {
    name: "name"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "current_task"
  fully_qualified_name: "asyncio.tasks.current_task"
  return_annotation {
    pretty_printed_name: "Union[asyncio.tasks.Task[Any],None]"
    kind: UNION
    args {
      pretty_printed_name: "asyncio.tasks.Task[Any]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "asyncio.tasks.Task"
    }
    args {
      pretty_printed_name: "None"
      kind: NONE
    }
  }
  parameters {
    name: "loop"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[asyncio.events.AbstractEventLoop,None]"
      kind: UNION
      args {
        pretty_printed_name: "asyncio.events.AbstractEventLoop"
        fully_qualified_name: "asyncio.events.AbstractEventLoop"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "_enter_task"
  fully_qualified_name: "asyncio.tasks._enter_task"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "loop"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "asyncio.events.AbstractEventLoop"
      fully_qualified_name: "asyncio.events.AbstractEventLoop"
    }
  }
  parameters {
    name: "task"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "asyncio.tasks.Task[Any]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "asyncio.tasks.Task"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "_leave_task"
  fully_qualified_name: "asyncio.tasks._leave_task"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "loop"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "asyncio.events.AbstractEventLoop"
      fully_qualified_name: "asyncio.events.AbstractEventLoop"
    }
  }
  parameters {
    name: "task"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "asyncio.tasks.Task[Any]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "asyncio.tasks.Task"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "_register_task"
  fully_qualified_name: "asyncio.tasks._register_task"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "task"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "asyncio.tasks.Task[Any]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "asyncio.tasks.Task"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "_unregister_task"
  fully_qualified_name: "asyncio.tasks._unregister_task"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "task"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "asyncio.tasks.Task[Any]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "asyncio.tasks.Task"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "to_thread"
  fully_qualified_name: "asyncio.threads.to_thread"
  return_annotation {
    pretty_printed_name: "typing.Coroutine[Any,Any,asyncio.threads._R]"
    args {
      pretty_printed_name: "Any"
      kind: ANY
    }
    args {
      pretty_printed_name: "Any"
      kind: ANY
    }
    args {
      pretty_printed_name: "asyncio.threads._R"
      kind: TYPE_VAR
    }
    fully_qualified_name: "typing.Coroutine"
  }
  parameters {
    name: "__func"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  parameters {
    name: "args"
    kind: VAR_POSITIONAL
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  parameters {
    name: "kwargs"
    kind: VAR_KEYWORD
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  is_asynchronous: true
  valid_for: "39"
  valid_for: "310"
}
overloaded_functions {
  name: "iscoroutinefunction"
  fullname: "asyncio.coroutines.iscoroutinefunction"
  definitions {
    name: "iscoroutinefunction"
    fully_qualified_name: "asyncio.coroutines.iscoroutinefunction"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "func"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "iscoroutinefunction"
    fully_qualified_name: "asyncio.coroutines.iscoroutinefunction"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "func"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "iscoroutinefunction"
    fully_qualified_name: "asyncio.coroutines.iscoroutinefunction"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "func"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "iscoroutinefunction"
    fully_qualified_name: "asyncio.coroutines.iscoroutinefunction"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "func"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
overloaded_functions {
  name: "ensure_future"
  fullname: "asyncio.tasks.ensure_future"
  definitions {
    name: "ensure_future"
    fully_qualified_name: "asyncio.tasks.ensure_future"
    return_annotation {
      pretty_printed_name: "asyncio.tasks._FT"
      kind: TYPE_VAR
    }
    parameters {
      name: "coro_or_future"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.tasks._FT"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "loop"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[asyncio.events.AbstractEventLoop,None]"
        kind: UNION
        args {
          pretty_printed_name: "asyncio.events.AbstractEventLoop"
          fully_qualified_name: "asyncio.events.AbstractEventLoop"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "ensure_future"
    fully_qualified_name: "asyncio.tasks.ensure_future"
    return_annotation {
      pretty_printed_name: "asyncio.tasks.Task[asyncio.tasks._T]"
      args {
        pretty_printed_name: "asyncio.tasks._T"
        kind: TYPE_VAR
      }
      fully_qualified_name: "asyncio.tasks.Task"
    }
    parameters {
      name: "coro_or_future"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Awaitable[asyncio.tasks._T]"
        args {
          pretty_printed_name: "asyncio.tasks._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Awaitable"
      }
    }
    parameters {
      name: "loop"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[asyncio.events.AbstractEventLoop,None]"
        kind: UNION
        args {
          pretty_printed_name: "asyncio.events.AbstractEventLoop"
          fully_qualified_name: "asyncio.events.AbstractEventLoop"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
overloaded_functions {
  name: "gather"
  fullname: "asyncio.tasks.gather"
  definitions {
    name: "gather"
    fully_qualified_name: "asyncio.tasks.gather"
    return_annotation {
      pretty_printed_name: "asyncio.futures.Future[Tuple[asyncio.tasks._T1]]"
      args {
        pretty_printed_name: "Tuple[asyncio.tasks._T1]"
        kind: TUPLE
        args {
          pretty_printed_name: "asyncio.tasks._T1"
          kind: TYPE_VAR
        }
      }
      fully_qualified_name: "asyncio.futures.Future"
    }
    parameters {
      name: "__coro_or_future1"
      type_annotation {
        pretty_printed_name: "UnboundType[_FutureLike]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "loop"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[asyncio.events.AbstractEventLoop,None]"
        kind: UNION
        args {
          pretty_printed_name: "asyncio.events.AbstractEventLoop"
          fully_qualified_name: "asyncio.events.AbstractEventLoop"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "return_exceptions"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Literal[builtins.bool]"
        kind: LITERAL
        args {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "gather"
    fully_qualified_name: "asyncio.tasks.gather"
    return_annotation {
      pretty_printed_name: "asyncio.futures.Future[Tuple[asyncio.tasks._T1,asyncio.tasks._T2]]"
      args {
        pretty_printed_name: "Tuple[asyncio.tasks._T1,asyncio.tasks._T2]"
        kind: TUPLE
        args {
          pretty_printed_name: "asyncio.tasks._T1"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "asyncio.tasks._T2"
          kind: TYPE_VAR
        }
      }
      fully_qualified_name: "asyncio.futures.Future"
    }
    parameters {
      name: "__coro_or_future1"
      type_annotation {
        pretty_printed_name: "UnboundType[_FutureLike]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "__coro_or_future2"
      type_annotation {
        pretty_printed_name: "UnboundType[_FutureLike]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "loop"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[asyncio.events.AbstractEventLoop,None]"
        kind: UNION
        args {
          pretty_printed_name: "asyncio.events.AbstractEventLoop"
          fully_qualified_name: "asyncio.events.AbstractEventLoop"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "return_exceptions"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Literal[builtins.bool]"
        kind: LITERAL
        args {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "gather"
    fully_qualified_name: "asyncio.tasks.gather"
    return_annotation {
      pretty_printed_name: "asyncio.futures.Future[Tuple[asyncio.tasks._T1,asyncio.tasks._T2,asyncio.tasks._T3]]"
      args {
        pretty_printed_name: "Tuple[asyncio.tasks._T1,asyncio.tasks._T2,asyncio.tasks._T3]"
        kind: TUPLE
        args {
          pretty_printed_name: "asyncio.tasks._T1"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "asyncio.tasks._T2"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "asyncio.tasks._T3"
          kind: TYPE_VAR
        }
      }
      fully_qualified_name: "asyncio.futures.Future"
    }
    parameters {
      name: "__coro_or_future1"
      type_annotation {
        pretty_printed_name: "UnboundType[_FutureLike]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "__coro_or_future2"
      type_annotation {
        pretty_printed_name: "UnboundType[_FutureLike]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "__coro_or_future3"
      type_annotation {
        pretty_printed_name: "UnboundType[_FutureLike]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "loop"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[asyncio.events.AbstractEventLoop,None]"
        kind: UNION
        args {
          pretty_printed_name: "asyncio.events.AbstractEventLoop"
          fully_qualified_name: "asyncio.events.AbstractEventLoop"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "return_exceptions"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Literal[builtins.bool]"
        kind: LITERAL
        args {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "gather"
    fully_qualified_name: "asyncio.tasks.gather"
    return_annotation {
      pretty_printed_name: "asyncio.futures.Future[Tuple[asyncio.tasks._T1,asyncio.tasks._T2,asyncio.tasks._T3,asyncio.tasks._T4]]"
      args {
        pretty_printed_name: "Tuple[asyncio.tasks._T1,asyncio.tasks._T2,asyncio.tasks._T3,asyncio.tasks._T4]"
        kind: TUPLE
        args {
          pretty_printed_name: "asyncio.tasks._T1"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "asyncio.tasks._T2"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "asyncio.tasks._T3"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "asyncio.tasks._T4"
          kind: TYPE_VAR
        }
      }
      fully_qualified_name: "asyncio.futures.Future"
    }
    parameters {
      name: "__coro_or_future1"
      type_annotation {
        pretty_printed_name: "UnboundType[_FutureLike]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "__coro_or_future2"
      type_annotation {
        pretty_printed_name: "UnboundType[_FutureLike]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "__coro_or_future3"
      type_annotation {
        pretty_printed_name: "UnboundType[_FutureLike]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "__coro_or_future4"
      type_annotation {
        pretty_printed_name: "UnboundType[_FutureLike]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "loop"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[asyncio.events.AbstractEventLoop,None]"
        kind: UNION
        args {
          pretty_printed_name: "asyncio.events.AbstractEventLoop"
          fully_qualified_name: "asyncio.events.AbstractEventLoop"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "return_exceptions"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Literal[builtins.bool]"
        kind: LITERAL
        args {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "gather"
    fully_qualified_name: "asyncio.tasks.gather"
    return_annotation {
      pretty_printed_name: "asyncio.futures.Future[Tuple[asyncio.tasks._T1,asyncio.tasks._T2,asyncio.tasks._T3,asyncio.tasks._T4,asyncio.tasks._T5]]"
      args {
        pretty_printed_name: "Tuple[asyncio.tasks._T1,asyncio.tasks._T2,asyncio.tasks._T3,asyncio.tasks._T4,asyncio.tasks._T5]"
        kind: TUPLE
        args {
          pretty_printed_name: "asyncio.tasks._T1"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "asyncio.tasks._T2"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "asyncio.tasks._T3"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "asyncio.tasks._T4"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "asyncio.tasks._T5"
          kind: TYPE_VAR
        }
      }
      fully_qualified_name: "asyncio.futures.Future"
    }
    parameters {
      name: "__coro_or_future1"
      type_annotation {
        pretty_printed_name: "UnboundType[_FutureLike]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "__coro_or_future2"
      type_annotation {
        pretty_printed_name: "UnboundType[_FutureLike]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "__coro_or_future3"
      type_annotation {
        pretty_printed_name: "UnboundType[_FutureLike]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "__coro_or_future4"
      type_annotation {
        pretty_printed_name: "UnboundType[_FutureLike]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "__coro_or_future5"
      type_annotation {
        pretty_printed_name: "UnboundType[_FutureLike]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "loop"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[asyncio.events.AbstractEventLoop,None]"
        kind: UNION
        args {
          pretty_printed_name: "asyncio.events.AbstractEventLoop"
          fully_qualified_name: "asyncio.events.AbstractEventLoop"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "return_exceptions"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Literal[builtins.bool]"
        kind: LITERAL
        args {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "gather"
    fully_qualified_name: "asyncio.tasks.gather"
    return_annotation {
      pretty_printed_name: "asyncio.futures.Future[Tuple[Union[asyncio.tasks._T1,builtins.BaseException]]]"
      args {
        pretty_printed_name: "Tuple[Union[asyncio.tasks._T1,builtins.BaseException]]"
        kind: TUPLE
        args {
          pretty_printed_name: "Union[asyncio.tasks._T1,builtins.BaseException]"
          kind: UNION
          args {
            pretty_printed_name: "asyncio.tasks._T1"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "builtins.BaseException"
            fully_qualified_name: "builtins.BaseException"
          }
        }
      }
      fully_qualified_name: "asyncio.futures.Future"
    }
    parameters {
      name: "__coro_or_future1"
      type_annotation {
        pretty_printed_name: "UnboundType[_FutureLike]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "loop"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[asyncio.events.AbstractEventLoop,None]"
        kind: UNION
        args {
          pretty_printed_name: "asyncio.events.AbstractEventLoop"
          fully_qualified_name: "asyncio.events.AbstractEventLoop"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "return_exceptions"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "gather"
    fully_qualified_name: "asyncio.tasks.gather"
    return_annotation {
      pretty_printed_name: "asyncio.futures.Future[Tuple[Union[asyncio.tasks._T1,builtins.BaseException],Union[asyncio.tasks._T2,builtins.BaseException]]]"
      args {
        pretty_printed_name: "Tuple[Union[asyncio.tasks._T1,builtins.BaseException],Union[asyncio.tasks._T2,builtins.BaseException]]"
        kind: TUPLE
        args {
          pretty_printed_name: "Union[asyncio.tasks._T1,builtins.BaseException]"
          kind: UNION
          args {
            pretty_printed_name: "asyncio.tasks._T1"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "builtins.BaseException"
            fully_qualified_name: "builtins.BaseException"
          }
        }
        args {
          pretty_printed_name: "Union[asyncio.tasks._T2,builtins.BaseException]"
          kind: UNION
          args {
            pretty_printed_name: "asyncio.tasks._T2"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "builtins.BaseException"
            fully_qualified_name: "builtins.BaseException"
          }
        }
      }
      fully_qualified_name: "asyncio.futures.Future"
    }
    parameters {
      name: "__coro_or_future1"
      type_annotation {
        pretty_printed_name: "UnboundType[_FutureLike]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "__coro_or_future2"
      type_annotation {
        pretty_printed_name: "UnboundType[_FutureLike]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "loop"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[asyncio.events.AbstractEventLoop,None]"
        kind: UNION
        args {
          pretty_printed_name: "asyncio.events.AbstractEventLoop"
          fully_qualified_name: "asyncio.events.AbstractEventLoop"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "return_exceptions"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "gather"
    fully_qualified_name: "asyncio.tasks.gather"
    return_annotation {
      pretty_printed_name: "asyncio.futures.Future[Tuple[Union[asyncio.tasks._T1,builtins.BaseException],Union[asyncio.tasks._T2,builtins.BaseException],Union[asyncio.tasks._T3,builtins.BaseException]]]"
      args {
        pretty_printed_name: "Tuple[Union[asyncio.tasks._T1,builtins.BaseException],Union[asyncio.tasks._T2,builtins.BaseException],Union[asyncio.tasks._T3,builtins.BaseException]]"
        kind: TUPLE
        args {
          pretty_printed_name: "Union[asyncio.tasks._T1,builtins.BaseException]"
          kind: UNION
          args {
            pretty_printed_name: "asyncio.tasks._T1"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "builtins.BaseException"
            fully_qualified_name: "builtins.BaseException"
          }
        }
        args {
          pretty_printed_name: "Union[asyncio.tasks._T2,builtins.BaseException]"
          kind: UNION
          args {
            pretty_printed_name: "asyncio.tasks._T2"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "builtins.BaseException"
            fully_qualified_name: "builtins.BaseException"
          }
        }
        args {
          pretty_printed_name: "Union[asyncio.tasks._T3,builtins.BaseException]"
          kind: UNION
          args {
            pretty_printed_name: "asyncio.tasks._T3"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "builtins.BaseException"
            fully_qualified_name: "builtins.BaseException"
          }
        }
      }
      fully_qualified_name: "asyncio.futures.Future"
    }
    parameters {
      name: "__coro_or_future1"
      type_annotation {
        pretty_printed_name: "UnboundType[_FutureLike]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "__coro_or_future2"
      type_annotation {
        pretty_printed_name: "UnboundType[_FutureLike]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "__coro_or_future3"
      type_annotation {
        pretty_printed_name: "UnboundType[_FutureLike]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "loop"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[asyncio.events.AbstractEventLoop,None]"
        kind: UNION
        args {
          pretty_printed_name: "asyncio.events.AbstractEventLoop"
          fully_qualified_name: "asyncio.events.AbstractEventLoop"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "return_exceptions"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "gather"
    fully_qualified_name: "asyncio.tasks.gather"
    return_annotation {
      pretty_printed_name: "asyncio.futures.Future[Tuple[Union[asyncio.tasks._T1,builtins.BaseException],Union[asyncio.tasks._T2,builtins.BaseException],Union[asyncio.tasks._T3,builtins.BaseException],Union[asyncio.tasks._T4,builtins.BaseException]]]"
      args {
        pretty_printed_name: "Tuple[Union[asyncio.tasks._T1,builtins.BaseException],Union[asyncio.tasks._T2,builtins.BaseException],Union[asyncio.tasks._T3,builtins.BaseException],Union[asyncio.tasks._T4,builtins.BaseException]]"
        kind: TUPLE
        args {
          pretty_printed_name: "Union[asyncio.tasks._T1,builtins.BaseException]"
          kind: UNION
          args {
            pretty_printed_name: "asyncio.tasks._T1"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "builtins.BaseException"
            fully_qualified_name: "builtins.BaseException"
          }
        }
        args {
          pretty_printed_name: "Union[asyncio.tasks._T2,builtins.BaseException]"
          kind: UNION
          args {
            pretty_printed_name: "asyncio.tasks._T2"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "builtins.BaseException"
            fully_qualified_name: "builtins.BaseException"
          }
        }
        args {
          pretty_printed_name: "Union[asyncio.tasks._T3,builtins.BaseException]"
          kind: UNION
          args {
            pretty_printed_name: "asyncio.tasks._T3"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "builtins.BaseException"
            fully_qualified_name: "builtins.BaseException"
          }
        }
        args {
          pretty_printed_name: "Union[asyncio.tasks._T4,builtins.BaseException]"
          kind: UNION
          args {
            pretty_printed_name: "asyncio.tasks._T4"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "builtins.BaseException"
            fully_qualified_name: "builtins.BaseException"
          }
        }
      }
      fully_qualified_name: "asyncio.futures.Future"
    }
    parameters {
      name: "__coro_or_future1"
      type_annotation {
        pretty_printed_name: "UnboundType[_FutureLike]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "__coro_or_future2"
      type_annotation {
        pretty_printed_name: "UnboundType[_FutureLike]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "__coro_or_future3"
      type_annotation {
        pretty_printed_name: "UnboundType[_FutureLike]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "__coro_or_future4"
      type_annotation {
        pretty_printed_name: "UnboundType[_FutureLike]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "loop"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[asyncio.events.AbstractEventLoop,None]"
        kind: UNION
        args {
          pretty_printed_name: "asyncio.events.AbstractEventLoop"
          fully_qualified_name: "asyncio.events.AbstractEventLoop"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "return_exceptions"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "gather"
    fully_qualified_name: "asyncio.tasks.gather"
    return_annotation {
      pretty_printed_name: "asyncio.futures.Future[Tuple[Union[asyncio.tasks._T1,builtins.BaseException],Union[asyncio.tasks._T2,builtins.BaseException],Union[asyncio.tasks._T3,builtins.BaseException],Union[asyncio.tasks._T4,builtins.BaseException],Union[asyncio.tasks._T5,builtins.BaseException]]]"
      args {
        pretty_printed_name: "Tuple[Union[asyncio.tasks._T1,builtins.BaseException],Union[asyncio.tasks._T2,builtins.BaseException],Union[asyncio.tasks._T3,builtins.BaseException],Union[asyncio.tasks._T4,builtins.BaseException],Union[asyncio.tasks._T5,builtins.BaseException]]"
        kind: TUPLE
        args {
          pretty_printed_name: "Union[asyncio.tasks._T1,builtins.BaseException]"
          kind: UNION
          args {
            pretty_printed_name: "asyncio.tasks._T1"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "builtins.BaseException"
            fully_qualified_name: "builtins.BaseException"
          }
        }
        args {
          pretty_printed_name: "Union[asyncio.tasks._T2,builtins.BaseException]"
          kind: UNION
          args {
            pretty_printed_name: "asyncio.tasks._T2"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "builtins.BaseException"
            fully_qualified_name: "builtins.BaseException"
          }
        }
        args {
          pretty_printed_name: "Union[asyncio.tasks._T3,builtins.BaseException]"
          kind: UNION
          args {
            pretty_printed_name: "asyncio.tasks._T3"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "builtins.BaseException"
            fully_qualified_name: "builtins.BaseException"
          }
        }
        args {
          pretty_printed_name: "Union[asyncio.tasks._T4,builtins.BaseException]"
          kind: UNION
          args {
            pretty_printed_name: "asyncio.tasks._T4"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "builtins.BaseException"
            fully_qualified_name: "builtins.BaseException"
          }
        }
        args {
          pretty_printed_name: "Union[asyncio.tasks._T5,builtins.BaseException]"
          kind: UNION
          args {
            pretty_printed_name: "asyncio.tasks._T5"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "builtins.BaseException"
            fully_qualified_name: "builtins.BaseException"
          }
        }
      }
      fully_qualified_name: "asyncio.futures.Future"
    }
    parameters {
      name: "__coro_or_future1"
      type_annotation {
        pretty_printed_name: "UnboundType[_FutureLike]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "__coro_or_future2"
      type_annotation {
        pretty_printed_name: "UnboundType[_FutureLike]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "__coro_or_future3"
      type_annotation {
        pretty_printed_name: "UnboundType[_FutureLike]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "__coro_or_future4"
      type_annotation {
        pretty_printed_name: "UnboundType[_FutureLike]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "__coro_or_future5"
      type_annotation {
        pretty_printed_name: "UnboundType[_FutureLike]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "loop"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[asyncio.events.AbstractEventLoop,None]"
        kind: UNION
        args {
          pretty_printed_name: "asyncio.events.AbstractEventLoop"
          fully_qualified_name: "asyncio.events.AbstractEventLoop"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "return_exceptions"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "gather"
    fully_qualified_name: "asyncio.tasks.gather"
    return_annotation {
      pretty_printed_name: "asyncio.futures.Future[builtins.list[Any]]"
      args {
        pretty_printed_name: "builtins.list[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "builtins.list"
      }
      fully_qualified_name: "asyncio.futures.Future"
    }
    parameters {
      name: "coros_or_futures"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "UnboundType[_FutureLike]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "loop"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[asyncio.events.AbstractEventLoop,None]"
        kind: UNION
        args {
          pretty_printed_name: "asyncio.events.AbstractEventLoop"
          fully_qualified_name: "asyncio.events.AbstractEventLoop"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "return_exceptions"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
}
overloaded_functions {
  name: "gather"
  fullname: "asyncio.tasks.gather"
  definitions {
    name: "gather"
    fully_qualified_name: "asyncio.tasks.gather"
    return_annotation {
      pretty_printed_name: "asyncio.futures.Future[Tuple[asyncio.tasks._T1]]"
      args {
        pretty_printed_name: "Tuple[asyncio.tasks._T1]"
        kind: TUPLE
        args {
          pretty_printed_name: "asyncio.tasks._T1"
          kind: TYPE_VAR
        }
      }
      fully_qualified_name: "asyncio.futures.Future"
    }
    parameters {
      name: "__coro_or_future1"
      type_annotation {
        pretty_printed_name: "UnboundType[_FutureLike]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "return_exceptions"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Literal[builtins.bool]"
        kind: LITERAL
        args {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "gather"
    fully_qualified_name: "asyncio.tasks.gather"
    return_annotation {
      pretty_printed_name: "asyncio.futures.Future[Tuple[asyncio.tasks._T1,asyncio.tasks._T2]]"
      args {
        pretty_printed_name: "Tuple[asyncio.tasks._T1,asyncio.tasks._T2]"
        kind: TUPLE
        args {
          pretty_printed_name: "asyncio.tasks._T1"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "asyncio.tasks._T2"
          kind: TYPE_VAR
        }
      }
      fully_qualified_name: "asyncio.futures.Future"
    }
    parameters {
      name: "__coro_or_future1"
      type_annotation {
        pretty_printed_name: "UnboundType[_FutureLike]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "__coro_or_future2"
      type_annotation {
        pretty_printed_name: "UnboundType[_FutureLike]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "return_exceptions"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Literal[builtins.bool]"
        kind: LITERAL
        args {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "gather"
    fully_qualified_name: "asyncio.tasks.gather"
    return_annotation {
      pretty_printed_name: "asyncio.futures.Future[Tuple[asyncio.tasks._T1,asyncio.tasks._T2,asyncio.tasks._T3]]"
      args {
        pretty_printed_name: "Tuple[asyncio.tasks._T1,asyncio.tasks._T2,asyncio.tasks._T3]"
        kind: TUPLE
        args {
          pretty_printed_name: "asyncio.tasks._T1"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "asyncio.tasks._T2"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "asyncio.tasks._T3"
          kind: TYPE_VAR
        }
      }
      fully_qualified_name: "asyncio.futures.Future"
    }
    parameters {
      name: "__coro_or_future1"
      type_annotation {
        pretty_printed_name: "UnboundType[_FutureLike]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "__coro_or_future2"
      type_annotation {
        pretty_printed_name: "UnboundType[_FutureLike]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "__coro_or_future3"
      type_annotation {
        pretty_printed_name: "UnboundType[_FutureLike]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "return_exceptions"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Literal[builtins.bool]"
        kind: LITERAL
        args {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "gather"
    fully_qualified_name: "asyncio.tasks.gather"
    return_annotation {
      pretty_printed_name: "asyncio.futures.Future[Tuple[asyncio.tasks._T1,asyncio.tasks._T2,asyncio.tasks._T3,asyncio.tasks._T4]]"
      args {
        pretty_printed_name: "Tuple[asyncio.tasks._T1,asyncio.tasks._T2,asyncio.tasks._T3,asyncio.tasks._T4]"
        kind: TUPLE
        args {
          pretty_printed_name: "asyncio.tasks._T1"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "asyncio.tasks._T2"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "asyncio.tasks._T3"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "asyncio.tasks._T4"
          kind: TYPE_VAR
        }
      }
      fully_qualified_name: "asyncio.futures.Future"
    }
    parameters {
      name: "__coro_or_future1"
      type_annotation {
        pretty_printed_name: "UnboundType[_FutureLike]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "__coro_or_future2"
      type_annotation {
        pretty_printed_name: "UnboundType[_FutureLike]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "__coro_or_future3"
      type_annotation {
        pretty_printed_name: "UnboundType[_FutureLike]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "__coro_or_future4"
      type_annotation {
        pretty_printed_name: "UnboundType[_FutureLike]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "return_exceptions"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Literal[builtins.bool]"
        kind: LITERAL
        args {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "gather"
    fully_qualified_name: "asyncio.tasks.gather"
    return_annotation {
      pretty_printed_name: "asyncio.futures.Future[Tuple[asyncio.tasks._T1,asyncio.tasks._T2,asyncio.tasks._T3,asyncio.tasks._T4,asyncio.tasks._T5]]"
      args {
        pretty_printed_name: "Tuple[asyncio.tasks._T1,asyncio.tasks._T2,asyncio.tasks._T3,asyncio.tasks._T4,asyncio.tasks._T5]"
        kind: TUPLE
        args {
          pretty_printed_name: "asyncio.tasks._T1"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "asyncio.tasks._T2"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "asyncio.tasks._T3"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "asyncio.tasks._T4"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "asyncio.tasks._T5"
          kind: TYPE_VAR
        }
      }
      fully_qualified_name: "asyncio.futures.Future"
    }
    parameters {
      name: "__coro_or_future1"
      type_annotation {
        pretty_printed_name: "UnboundType[_FutureLike]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "__coro_or_future2"
      type_annotation {
        pretty_printed_name: "UnboundType[_FutureLike]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "__coro_or_future3"
      type_annotation {
        pretty_printed_name: "UnboundType[_FutureLike]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "__coro_or_future4"
      type_annotation {
        pretty_printed_name: "UnboundType[_FutureLike]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "__coro_or_future5"
      type_annotation {
        pretty_printed_name: "UnboundType[_FutureLike]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "return_exceptions"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Literal[builtins.bool]"
        kind: LITERAL
        args {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "gather"
    fully_qualified_name: "asyncio.tasks.gather"
    return_annotation {
      pretty_printed_name: "asyncio.futures.Future[Tuple[Union[asyncio.tasks._T1,builtins.BaseException]]]"
      args {
        pretty_printed_name: "Tuple[Union[asyncio.tasks._T1,builtins.BaseException]]"
        kind: TUPLE
        args {
          pretty_printed_name: "Union[asyncio.tasks._T1,builtins.BaseException]"
          kind: UNION
          args {
            pretty_printed_name: "asyncio.tasks._T1"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "builtins.BaseException"
            fully_qualified_name: "builtins.BaseException"
          }
        }
      }
      fully_qualified_name: "asyncio.futures.Future"
    }
    parameters {
      name: "__coro_or_future1"
      type_annotation {
        pretty_printed_name: "UnboundType[_FutureLike]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "return_exceptions"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "gather"
    fully_qualified_name: "asyncio.tasks.gather"
    return_annotation {
      pretty_printed_name: "asyncio.futures.Future[Tuple[Union[asyncio.tasks._T1,builtins.BaseException],Union[asyncio.tasks._T2,builtins.BaseException]]]"
      args {
        pretty_printed_name: "Tuple[Union[asyncio.tasks._T1,builtins.BaseException],Union[asyncio.tasks._T2,builtins.BaseException]]"
        kind: TUPLE
        args {
          pretty_printed_name: "Union[asyncio.tasks._T1,builtins.BaseException]"
          kind: UNION
          args {
            pretty_printed_name: "asyncio.tasks._T1"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "builtins.BaseException"
            fully_qualified_name: "builtins.BaseException"
          }
        }
        args {
          pretty_printed_name: "Union[asyncio.tasks._T2,builtins.BaseException]"
          kind: UNION
          args {
            pretty_printed_name: "asyncio.tasks._T2"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "builtins.BaseException"
            fully_qualified_name: "builtins.BaseException"
          }
        }
      }
      fully_qualified_name: "asyncio.futures.Future"
    }
    parameters {
      name: "__coro_or_future1"
      type_annotation {
        pretty_printed_name: "UnboundType[_FutureLike]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "__coro_or_future2"
      type_annotation {
        pretty_printed_name: "UnboundType[_FutureLike]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "return_exceptions"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "gather"
    fully_qualified_name: "asyncio.tasks.gather"
    return_annotation {
      pretty_printed_name: "asyncio.futures.Future[Tuple[Union[asyncio.tasks._T1,builtins.BaseException],Union[asyncio.tasks._T2,builtins.BaseException],Union[asyncio.tasks._T3,builtins.BaseException]]]"
      args {
        pretty_printed_name: "Tuple[Union[asyncio.tasks._T1,builtins.BaseException],Union[asyncio.tasks._T2,builtins.BaseException],Union[asyncio.tasks._T3,builtins.BaseException]]"
        kind: TUPLE
        args {
          pretty_printed_name: "Union[asyncio.tasks._T1,builtins.BaseException]"
          kind: UNION
          args {
            pretty_printed_name: "asyncio.tasks._T1"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "builtins.BaseException"
            fully_qualified_name: "builtins.BaseException"
          }
        }
        args {
          pretty_printed_name: "Union[asyncio.tasks._T2,builtins.BaseException]"
          kind: UNION
          args {
            pretty_printed_name: "asyncio.tasks._T2"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "builtins.BaseException"
            fully_qualified_name: "builtins.BaseException"
          }
        }
        args {
          pretty_printed_name: "Union[asyncio.tasks._T3,builtins.BaseException]"
          kind: UNION
          args {
            pretty_printed_name: "asyncio.tasks._T3"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "builtins.BaseException"
            fully_qualified_name: "builtins.BaseException"
          }
        }
      }
      fully_qualified_name: "asyncio.futures.Future"
    }
    parameters {
      name: "__coro_or_future1"
      type_annotation {
        pretty_printed_name: "UnboundType[_FutureLike]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "__coro_or_future2"
      type_annotation {
        pretty_printed_name: "UnboundType[_FutureLike]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "__coro_or_future3"
      type_annotation {
        pretty_printed_name: "UnboundType[_FutureLike]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "return_exceptions"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "gather"
    fully_qualified_name: "asyncio.tasks.gather"
    return_annotation {
      pretty_printed_name: "asyncio.futures.Future[Tuple[Union[asyncio.tasks._T1,builtins.BaseException],Union[asyncio.tasks._T2,builtins.BaseException],Union[asyncio.tasks._T3,builtins.BaseException],Union[asyncio.tasks._T4,builtins.BaseException]]]"
      args {
        pretty_printed_name: "Tuple[Union[asyncio.tasks._T1,builtins.BaseException],Union[asyncio.tasks._T2,builtins.BaseException],Union[asyncio.tasks._T3,builtins.BaseException],Union[asyncio.tasks._T4,builtins.BaseException]]"
        kind: TUPLE
        args {
          pretty_printed_name: "Union[asyncio.tasks._T1,builtins.BaseException]"
          kind: UNION
          args {
            pretty_printed_name: "asyncio.tasks._T1"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "builtins.BaseException"
            fully_qualified_name: "builtins.BaseException"
          }
        }
        args {
          pretty_printed_name: "Union[asyncio.tasks._T2,builtins.BaseException]"
          kind: UNION
          args {
            pretty_printed_name: "asyncio.tasks._T2"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "builtins.BaseException"
            fully_qualified_name: "builtins.BaseException"
          }
        }
        args {
          pretty_printed_name: "Union[asyncio.tasks._T3,builtins.BaseException]"
          kind: UNION
          args {
            pretty_printed_name: "asyncio.tasks._T3"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "builtins.BaseException"
            fully_qualified_name: "builtins.BaseException"
          }
        }
        args {
          pretty_printed_name: "Union[asyncio.tasks._T4,builtins.BaseException]"
          kind: UNION
          args {
            pretty_printed_name: "asyncio.tasks._T4"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "builtins.BaseException"
            fully_qualified_name: "builtins.BaseException"
          }
        }
      }
      fully_qualified_name: "asyncio.futures.Future"
    }
    parameters {
      name: "__coro_or_future1"
      type_annotation {
        pretty_printed_name: "UnboundType[_FutureLike]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "__coro_or_future2"
      type_annotation {
        pretty_printed_name: "UnboundType[_FutureLike]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "__coro_or_future3"
      type_annotation {
        pretty_printed_name: "UnboundType[_FutureLike]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "__coro_or_future4"
      type_annotation {
        pretty_printed_name: "UnboundType[_FutureLike]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "return_exceptions"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "gather"
    fully_qualified_name: "asyncio.tasks.gather"
    return_annotation {
      pretty_printed_name: "asyncio.futures.Future[Tuple[Union[asyncio.tasks._T1,builtins.BaseException],Union[asyncio.tasks._T2,builtins.BaseException],Union[asyncio.tasks._T3,builtins.BaseException],Union[asyncio.tasks._T4,builtins.BaseException],Union[asyncio.tasks._T5,builtins.BaseException]]]"
      args {
        pretty_printed_name: "Tuple[Union[asyncio.tasks._T1,builtins.BaseException],Union[asyncio.tasks._T2,builtins.BaseException],Union[asyncio.tasks._T3,builtins.BaseException],Union[asyncio.tasks._T4,builtins.BaseException],Union[asyncio.tasks._T5,builtins.BaseException]]"
        kind: TUPLE
        args {
          pretty_printed_name: "Union[asyncio.tasks._T1,builtins.BaseException]"
          kind: UNION
          args {
            pretty_printed_name: "asyncio.tasks._T1"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "builtins.BaseException"
            fully_qualified_name: "builtins.BaseException"
          }
        }
        args {
          pretty_printed_name: "Union[asyncio.tasks._T2,builtins.BaseException]"
          kind: UNION
          args {
            pretty_printed_name: "asyncio.tasks._T2"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "builtins.BaseException"
            fully_qualified_name: "builtins.BaseException"
          }
        }
        args {
          pretty_printed_name: "Union[asyncio.tasks._T3,builtins.BaseException]"
          kind: UNION
          args {
            pretty_printed_name: "asyncio.tasks._T3"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "builtins.BaseException"
            fully_qualified_name: "builtins.BaseException"
          }
        }
        args {
          pretty_printed_name: "Union[asyncio.tasks._T4,builtins.BaseException]"
          kind: UNION
          args {
            pretty_printed_name: "asyncio.tasks._T4"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "builtins.BaseException"
            fully_qualified_name: "builtins.BaseException"
          }
        }
        args {
          pretty_printed_name: "Union[asyncio.tasks._T5,builtins.BaseException]"
          kind: UNION
          args {
            pretty_printed_name: "asyncio.tasks._T5"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "builtins.BaseException"
            fully_qualified_name: "builtins.BaseException"
          }
        }
      }
      fully_qualified_name: "asyncio.futures.Future"
    }
    parameters {
      name: "__coro_or_future1"
      type_annotation {
        pretty_printed_name: "UnboundType[_FutureLike]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "__coro_or_future2"
      type_annotation {
        pretty_printed_name: "UnboundType[_FutureLike]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "__coro_or_future3"
      type_annotation {
        pretty_printed_name: "UnboundType[_FutureLike]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "__coro_or_future4"
      type_annotation {
        pretty_printed_name: "UnboundType[_FutureLike]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "__coro_or_future5"
      type_annotation {
        pretty_printed_name: "UnboundType[_FutureLike]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "return_exceptions"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "gather"
    fully_qualified_name: "asyncio.tasks.gather"
    return_annotation {
      pretty_printed_name: "asyncio.futures.Future[builtins.list[Any]]"
      args {
        pretty_printed_name: "builtins.list[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "builtins.list"
      }
      fully_qualified_name: "asyncio.futures.Future"
    }
    parameters {
      name: "coros_or_futures"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "UnboundType[_FutureLike]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "return_exceptions"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  valid_for: "310"
}
overloaded_functions {
  name: "sleep"
  fullname: "asyncio.tasks.sleep"
  definitions {
    name: "sleep"
    fully_qualified_name: "asyncio.tasks.sleep"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,None]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "delay"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
    }
    parameters {
      name: "loop"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[asyncio.events.AbstractEventLoop,None]"
        kind: UNION
        args {
          pretty_printed_name: "asyncio.events.AbstractEventLoop"
          fully_qualified_name: "asyncio.events.AbstractEventLoop"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_asynchronous: true
    is_overload: true
  }
  definitions {
    name: "sleep"
    fully_qualified_name: "asyncio.tasks.sleep"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,asyncio.tasks._T]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "asyncio.tasks._T"
        kind: TYPE_VAR
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "delay"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
    }
    parameters {
      name: "result"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.tasks._T"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "loop"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[asyncio.events.AbstractEventLoop,None]"
        kind: UNION
        args {
          pretty_printed_name: "asyncio.events.AbstractEventLoop"
          fully_qualified_name: "asyncio.events.AbstractEventLoop"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_asynchronous: true
    is_overload: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
}
overloaded_functions {
  name: "sleep"
  fullname: "asyncio.tasks.sleep"
  definitions {
    name: "sleep"
    fully_qualified_name: "asyncio.tasks.sleep"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,None]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "delay"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_asynchronous: true
    is_overload: true
  }
  definitions {
    name: "sleep"
    fully_qualified_name: "asyncio.tasks.sleep"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,asyncio.tasks._T]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "asyncio.tasks._T"
        kind: TYPE_VAR
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "delay"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
    }
    parameters {
      name: "result"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "asyncio.tasks._T"
        kind: TYPE_VAR
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_asynchronous: true
    is_overload: true
  }
  valid_for: "310"
}
overloaded_functions {
  name: "wait"
  fullname: "asyncio.tasks.wait"
  definitions {
    name: "wait"
    fully_qualified_name: "asyncio.tasks.wait"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,Tuple[builtins.set[asyncio.tasks._FT],builtins.set[asyncio.tasks._FT]]]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Tuple[builtins.set[asyncio.tasks._FT],builtins.set[asyncio.tasks._FT]]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.set[asyncio.tasks._FT]"
          args {
            pretty_printed_name: "asyncio.tasks._FT"
            kind: TYPE_VAR
          }
          fully_qualified_name: "builtins.set"
        }
        args {
          pretty_printed_name: "builtins.set[asyncio.tasks._FT]"
          args {
            pretty_printed_name: "asyncio.tasks._FT"
            kind: TYPE_VAR
          }
          fully_qualified_name: "builtins.set"
        }
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "fs"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[asyncio.tasks._FT]"
        args {
          pretty_printed_name: "asyncio.tasks._FT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    parameters {
      name: "loop"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[asyncio.events.AbstractEventLoop,None]"
        kind: UNION
        args {
          pretty_printed_name: "asyncio.events.AbstractEventLoop"
          fully_qualified_name: "asyncio.events.AbstractEventLoop"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "timeout"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[builtins.float,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "return_when"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_asynchronous: true
    is_overload: true
  }
  definitions {
    name: "wait"
    fully_qualified_name: "asyncio.tasks.wait"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,Tuple[builtins.set[asyncio.tasks.Task[asyncio.tasks._T]],builtins.set[asyncio.tasks.Task[asyncio.tasks._T]]]]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Tuple[builtins.set[asyncio.tasks.Task[asyncio.tasks._T]],builtins.set[asyncio.tasks.Task[asyncio.tasks._T]]]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.set[asyncio.tasks.Task[asyncio.tasks._T]]"
          args {
            pretty_printed_name: "asyncio.tasks.Task[asyncio.tasks._T]"
            args {
              pretty_printed_name: "asyncio.tasks._T"
              kind: TYPE_VAR
            }
            fully_qualified_name: "asyncio.tasks.Task"
          }
          fully_qualified_name: "builtins.set"
        }
        args {
          pretty_printed_name: "builtins.set[asyncio.tasks.Task[asyncio.tasks._T]]"
          args {
            pretty_printed_name: "asyncio.tasks.Task[asyncio.tasks._T]"
            args {
              pretty_printed_name: "asyncio.tasks._T"
              kind: TYPE_VAR
            }
            fully_qualified_name: "asyncio.tasks.Task"
          }
          fully_qualified_name: "builtins.set"
        }
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "fs"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[typing.Awaitable[asyncio.tasks._T]]"
        args {
          pretty_printed_name: "typing.Awaitable[asyncio.tasks._T]"
          args {
            pretty_printed_name: "asyncio.tasks._T"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Awaitable"
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    parameters {
      name: "loop"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[asyncio.events.AbstractEventLoop,None]"
        kind: UNION
        args {
          pretty_printed_name: "asyncio.events.AbstractEventLoop"
          fully_qualified_name: "asyncio.events.AbstractEventLoop"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "timeout"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[builtins.float,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "return_when"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_asynchronous: true
    is_overload: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
}
overloaded_functions {
  name: "wait"
  fullname: "asyncio.tasks.wait"
  definitions {
    name: "wait"
    fully_qualified_name: "asyncio.tasks.wait"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,Tuple[builtins.set[asyncio.tasks._FT],builtins.set[asyncio.tasks._FT]]]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Tuple[builtins.set[asyncio.tasks._FT],builtins.set[asyncio.tasks._FT]]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.set[asyncio.tasks._FT]"
          args {
            pretty_printed_name: "asyncio.tasks._FT"
            kind: TYPE_VAR
          }
          fully_qualified_name: "builtins.set"
        }
        args {
          pretty_printed_name: "builtins.set[asyncio.tasks._FT]"
          args {
            pretty_printed_name: "asyncio.tasks._FT"
            kind: TYPE_VAR
          }
          fully_qualified_name: "builtins.set"
        }
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "fs"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[asyncio.tasks._FT]"
        args {
          pretty_printed_name: "asyncio.tasks._FT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    parameters {
      name: "timeout"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[builtins.float,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "return_when"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_asynchronous: true
    is_overload: true
  }
  definitions {
    name: "wait"
    fully_qualified_name: "asyncio.tasks.wait"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,Tuple[builtins.set[asyncio.tasks.Task[asyncio.tasks._T]],builtins.set[asyncio.tasks.Task[asyncio.tasks._T]]]]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Tuple[builtins.set[asyncio.tasks.Task[asyncio.tasks._T]],builtins.set[asyncio.tasks.Task[asyncio.tasks._T]]]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.set[asyncio.tasks.Task[asyncio.tasks._T]]"
          args {
            pretty_printed_name: "asyncio.tasks.Task[asyncio.tasks._T]"
            args {
              pretty_printed_name: "asyncio.tasks._T"
              kind: TYPE_VAR
            }
            fully_qualified_name: "asyncio.tasks.Task"
          }
          fully_qualified_name: "builtins.set"
        }
        args {
          pretty_printed_name: "builtins.set[asyncio.tasks.Task[asyncio.tasks._T]]"
          args {
            pretty_printed_name: "asyncio.tasks.Task[asyncio.tasks._T]"
            args {
              pretty_printed_name: "asyncio.tasks._T"
              kind: TYPE_VAR
            }
            fully_qualified_name: "asyncio.tasks.Task"
          }
          fully_qualified_name: "builtins.set"
        }
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "fs"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[typing.Awaitable[asyncio.tasks._T]]"
        args {
          pretty_printed_name: "typing.Awaitable[asyncio.tasks._T]"
          args {
            pretty_printed_name: "asyncio.tasks._T"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Awaitable"
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    parameters {
      name: "timeout"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[builtins.float,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "return_when"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_asynchronous: true
    is_overload: true
  }
  valid_for: "310"
}
vars {
  name: "FIRST_COMPLETED"
  fully_qualified_name: "asyncio.tasks.FIRST_COMPLETED"
  type_annotation {
    pretty_printed_name: "Literal[builtins.str]"
    kind: LITERAL
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "FIRST_EXCEPTION"
  fully_qualified_name: "asyncio.tasks.FIRST_EXCEPTION"
  type_annotation {
    pretty_printed_name: "Literal[builtins.str]"
    kind: LITERAL
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "ALL_COMPLETED"
  fully_qualified_name: "asyncio.tasks.ALL_COMPLETED"
  type_annotation {
    pretty_printed_name: "Literal[builtins.str]"
    kind: LITERAL
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
