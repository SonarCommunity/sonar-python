fully_qualified_name: "OpenSSL.crypto"
classes {
  name: "_EllipticCurve"
  fully_qualified_name: "OpenSSL.crypto._EllipticCurve"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "OpenSSL.crypto._EllipticCurve.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto._EllipticCurve"
        fully_qualified_name: "OpenSSL.crypto._EllipticCurve"
      }
    }
    parameters {
      name: "lib"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "nid"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "Error"
  fully_qualified_name: "OpenSSL.crypto.Error"
  super_classes: "builtins.Exception"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "PKey"
  fully_qualified_name: "OpenSSL.crypto.PKey"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "OpenSSL.crypto.PKey.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.PKey"
        fully_qualified_name: "OpenSSL.crypto.PKey"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "bits"
    fully_qualified_name: "OpenSSL.crypto.PKey.bits"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.PKey"
        fully_qualified_name: "OpenSSL.crypto.PKey"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "check"
    fully_qualified_name: "OpenSSL.crypto.PKey.check"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.PKey"
        fully_qualified_name: "OpenSSL.crypto.PKey"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "from_cryptography_key"
    fully_qualified_name: "OpenSSL.crypto.PKey.from_cryptography_key"
    return_annotation {
      pretty_printed_name: "OpenSSL.crypto.PKey"
      fully_qualified_name: "OpenSSL.crypto.PKey"
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[OpenSSL.crypto.PKey]"
        kind: TYPE
        args {
          pretty_printed_name: "OpenSSL.crypto.PKey"
          fully_qualified_name: "OpenSSL.crypto.PKey"
        }
      }
    }
    parameters {
      name: "crypto_key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[cryptography.hazmat.primitives.asymmetric.dsa.DSAPrivateKey,cryptography.hazmat.primitives.asymmetric.dsa.DSAPublicKey,cryptography.hazmat.primitives.asymmetric.rsa.RSAPrivateKey,cryptography.hazmat.primitives.asymmetric.rsa.RSAPublicKey]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[cryptography.hazmat.primitives.asymmetric.dsa.DSAPrivateKey,cryptography.hazmat.primitives.asymmetric.dsa.DSAPublicKey,cryptography.hazmat.primitives.asymmetric.rsa.RSAPrivateKey,cryptography.hazmat.primitives.asymmetric.rsa.RSAPublicKey]"
          kind: UNION
          args {
            pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPrivateKey"
            fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPrivateKey"
          }
          args {
            pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPublicKey"
            fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPublicKey"
          }
          args {
            pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.rsa.RSAPrivateKey"
            fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.rsa.RSAPrivateKey"
          }
          args {
            pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.rsa.RSAPublicKey"
            fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.rsa.RSAPublicKey"
          }
        }
        fully_qualified_name: "OpenSSL.crypto._Key"
      }
    }
    has_decorators: true
    resolved_decorator_names: "classmethod"
    is_class_method: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "generate_key"
    fully_qualified_name: "OpenSSL.crypto.PKey.generate_key"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.PKey"
        fully_qualified_name: "OpenSSL.crypto.PKey"
      }
    }
    parameters {
      name: "type"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "bits"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "to_cryptography_key"
    fully_qualified_name: "OpenSSL.crypto.PKey.to_cryptography_key"
    return_annotation {
      pretty_printed_name: "TypeAlias[Union[cryptography.hazmat.primitives.asymmetric.dsa.DSAPrivateKey,cryptography.hazmat.primitives.asymmetric.dsa.DSAPublicKey,cryptography.hazmat.primitives.asymmetric.rsa.RSAPrivateKey,cryptography.hazmat.primitives.asymmetric.rsa.RSAPublicKey]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[cryptography.hazmat.primitives.asymmetric.dsa.DSAPrivateKey,cryptography.hazmat.primitives.asymmetric.dsa.DSAPublicKey,cryptography.hazmat.primitives.asymmetric.rsa.RSAPrivateKey,cryptography.hazmat.primitives.asymmetric.rsa.RSAPublicKey]"
        kind: UNION
        args {
          pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPrivateKey"
          fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPrivateKey"
        }
        args {
          pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPublicKey"
          fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPublicKey"
        }
        args {
          pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.rsa.RSAPrivateKey"
          fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.rsa.RSAPrivateKey"
        }
        args {
          pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.rsa.RSAPublicKey"
          fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.rsa.RSAPublicKey"
        }
      }
      fully_qualified_name: "OpenSSL.crypto._Key"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.PKey"
        fully_qualified_name: "OpenSSL.crypto.PKey"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "type"
    fully_qualified_name: "OpenSSL.crypto.PKey.type"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.PKey"
        fully_qualified_name: "OpenSSL.crypto.PKey"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "X509Name"
  fully_qualified_name: "OpenSSL.crypto.X509Name"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "OpenSSL.crypto.X509Name.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.X509Name"
        fully_qualified_name: "OpenSSL.crypto.X509Name"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.X509Name"
        fully_qualified_name: "OpenSSL.crypto.X509Name"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "der"
    fully_qualified_name: "OpenSSL.crypto.X509Name.der"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.X509Name"
        fully_qualified_name: "OpenSSL.crypto.X509Name"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "get_components"
    fully_qualified_name: "OpenSSL.crypto.X509Name.get_components"
    return_annotation {
      pretty_printed_name: "builtins.list[Tuple[builtins.str,builtins.str]]"
      args {
        pretty_printed_name: "Tuple[builtins.str,builtins.str]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.X509Name"
        fully_qualified_name: "OpenSSL.crypto.X509Name"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "hash"
    fully_qualified_name: "OpenSSL.crypto.X509Name.hash"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.X509Name"
        fully_qualified_name: "OpenSSL.crypto.X509Name"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "countryName"
    fully_qualified_name: "OpenSSL.crypto.X509Name.countryName"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "C"
    fully_qualified_name: "OpenSSL.crypto.X509Name.C"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "stateOrProvinceName"
    fully_qualified_name: "OpenSSL.crypto.X509Name.stateOrProvinceName"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "ST"
    fully_qualified_name: "OpenSSL.crypto.X509Name.ST"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "localityName"
    fully_qualified_name: "OpenSSL.crypto.X509Name.localityName"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "L"
    fully_qualified_name: "OpenSSL.crypto.X509Name.L"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "organizationName"
    fully_qualified_name: "OpenSSL.crypto.X509Name.organizationName"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "O"
    fully_qualified_name: "OpenSSL.crypto.X509Name.O"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "organizationalUnitName"
    fully_qualified_name: "OpenSSL.crypto.X509Name.organizationalUnitName"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "OU"
    fully_qualified_name: "OpenSSL.crypto.X509Name.OU"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "commonName"
    fully_qualified_name: "OpenSSL.crypto.X509Name.commonName"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "CN"
    fully_qualified_name: "OpenSSL.crypto.X509Name.CN"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "emailAddress"
    fully_qualified_name: "OpenSSL.crypto.X509Name.emailAddress"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "X509"
  fully_qualified_name: "OpenSSL.crypto.X509"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "OpenSSL.crypto.X509.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.X509"
        fully_qualified_name: "OpenSSL.crypto.X509"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "add_extensions"
    fully_qualified_name: "OpenSSL.crypto.X509.add_extensions"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.X509"
        fully_qualified_name: "OpenSSL.crypto.X509"
      }
    }
    parameters {
      name: "extensions"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[OpenSSL.crypto.X509Extension]"
        args {
          pretty_printed_name: "OpenSSL.crypto.X509Extension"
          fully_qualified_name: "OpenSSL.crypto.X509Extension"
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "digest"
    fully_qualified_name: "OpenSSL.crypto.X509.digest"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.X509"
        fully_qualified_name: "OpenSSL.crypto.X509"
      }
    }
    parameters {
      name: "digest_name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "from_cryptography"
    fully_qualified_name: "OpenSSL.crypto.X509.from_cryptography"
    return_annotation {
      pretty_printed_name: "OpenSSL.crypto.X509"
      fully_qualified_name: "OpenSSL.crypto.X509"
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[OpenSSL.crypto.X509]"
        kind: TYPE
        args {
          pretty_printed_name: "OpenSSL.crypto.X509"
          fully_qualified_name: "OpenSSL.crypto.X509"
        }
      }
    }
    parameters {
      name: "crypto_cert"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.Certificate"
        fully_qualified_name: "cryptography.x509.Certificate"
      }
    }
    has_decorators: true
    resolved_decorator_names: "classmethod"
    is_class_method: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "get_extension"
    fully_qualified_name: "OpenSSL.crypto.X509.get_extension"
    return_annotation {
      pretty_printed_name: "OpenSSL.crypto.X509Extension"
      fully_qualified_name: "OpenSSL.crypto.X509Extension"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.X509"
        fully_qualified_name: "OpenSSL.crypto.X509"
      }
    }
    parameters {
      name: "index"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "get_extension_count"
    fully_qualified_name: "OpenSSL.crypto.X509.get_extension_count"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.X509"
        fully_qualified_name: "OpenSSL.crypto.X509"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "get_issuer"
    fully_qualified_name: "OpenSSL.crypto.X509.get_issuer"
    return_annotation {
      pretty_printed_name: "OpenSSL.crypto.X509Name"
      fully_qualified_name: "OpenSSL.crypto.X509Name"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.X509"
        fully_qualified_name: "OpenSSL.crypto.X509"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "get_notAfter"
    fully_qualified_name: "OpenSSL.crypto.X509.get_notAfter"
    return_annotation {
      pretty_printed_name: "Union[builtins.bytes,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.X509"
        fully_qualified_name: "OpenSSL.crypto.X509"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "get_notBefore"
    fully_qualified_name: "OpenSSL.crypto.X509.get_notBefore"
    return_annotation {
      pretty_printed_name: "Union[builtins.bytes,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.X509"
        fully_qualified_name: "OpenSSL.crypto.X509"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "get_pubkey"
    fully_qualified_name: "OpenSSL.crypto.X509.get_pubkey"
    return_annotation {
      pretty_printed_name: "OpenSSL.crypto.PKey"
      fully_qualified_name: "OpenSSL.crypto.PKey"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.X509"
        fully_qualified_name: "OpenSSL.crypto.X509"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "get_serial_number"
    fully_qualified_name: "OpenSSL.crypto.X509.get_serial_number"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.X509"
        fully_qualified_name: "OpenSSL.crypto.X509"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "get_signature_algorithm"
    fully_qualified_name: "OpenSSL.crypto.X509.get_signature_algorithm"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.X509"
        fully_qualified_name: "OpenSSL.crypto.X509"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "get_subject"
    fully_qualified_name: "OpenSSL.crypto.X509.get_subject"
    return_annotation {
      pretty_printed_name: "OpenSSL.crypto.X509Name"
      fully_qualified_name: "OpenSSL.crypto.X509Name"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.X509"
        fully_qualified_name: "OpenSSL.crypto.X509"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "get_version"
    fully_qualified_name: "OpenSSL.crypto.X509.get_version"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.X509"
        fully_qualified_name: "OpenSSL.crypto.X509"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "gmtime_adj_notAfter"
    fully_qualified_name: "OpenSSL.crypto.X509.gmtime_adj_notAfter"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.X509"
        fully_qualified_name: "OpenSSL.crypto.X509"
      }
    }
    parameters {
      name: "amount"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "gmtime_adj_notBefore"
    fully_qualified_name: "OpenSSL.crypto.X509.gmtime_adj_notBefore"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.X509"
        fully_qualified_name: "OpenSSL.crypto.X509"
      }
    }
    parameters {
      name: "amount"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "has_expired"
    fully_qualified_name: "OpenSSL.crypto.X509.has_expired"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.X509"
        fully_qualified_name: "OpenSSL.crypto.X509"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "set_issuer"
    fully_qualified_name: "OpenSSL.crypto.X509.set_issuer"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.X509"
        fully_qualified_name: "OpenSSL.crypto.X509"
      }
    }
    parameters {
      name: "issuer"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.X509Name"
        fully_qualified_name: "OpenSSL.crypto.X509Name"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "set_notAfter"
    fully_qualified_name: "OpenSSL.crypto.X509.set_notAfter"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.X509"
        fully_qualified_name: "OpenSSL.crypto.X509"
      }
    }
    parameters {
      name: "when"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "set_notBefore"
    fully_qualified_name: "OpenSSL.crypto.X509.set_notBefore"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.X509"
        fully_qualified_name: "OpenSSL.crypto.X509"
      }
    }
    parameters {
      name: "when"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "set_pubkey"
    fully_qualified_name: "OpenSSL.crypto.X509.set_pubkey"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.X509"
        fully_qualified_name: "OpenSSL.crypto.X509"
      }
    }
    parameters {
      name: "pkey"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.PKey"
        fully_qualified_name: "OpenSSL.crypto.PKey"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "set_serial_number"
    fully_qualified_name: "OpenSSL.crypto.X509.set_serial_number"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.X509"
        fully_qualified_name: "OpenSSL.crypto.X509"
      }
    }
    parameters {
      name: "serial"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "set_subject"
    fully_qualified_name: "OpenSSL.crypto.X509.set_subject"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.X509"
        fully_qualified_name: "OpenSSL.crypto.X509"
      }
    }
    parameters {
      name: "subject"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.X509Name"
        fully_qualified_name: "OpenSSL.crypto.X509Name"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "set_version"
    fully_qualified_name: "OpenSSL.crypto.X509.set_version"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.X509"
        fully_qualified_name: "OpenSSL.crypto.X509"
      }
    }
    parameters {
      name: "version"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "sign"
    fully_qualified_name: "OpenSSL.crypto.X509.sign"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.X509"
        fully_qualified_name: "OpenSSL.crypto.X509"
      }
    }
    parameters {
      name: "pkey"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.PKey"
        fully_qualified_name: "OpenSSL.crypto.PKey"
      }
    }
    parameters {
      name: "digest"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,builtins.bytes]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "subject_name_hash"
    fully_qualified_name: "OpenSSL.crypto.X509.subject_name_hash"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.X509"
        fully_qualified_name: "OpenSSL.crypto.X509"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "to_cryptography"
    fully_qualified_name: "OpenSSL.crypto.X509.to_cryptography"
    return_annotation {
      pretty_printed_name: "cryptography.x509.Certificate"
      fully_qualified_name: "cryptography.x509.Certificate"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.X509"
        fully_qualified_name: "OpenSSL.crypto.X509"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "X509Req"
  fully_qualified_name: "OpenSSL.crypto.X509Req"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "OpenSSL.crypto.X509Req.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.X509Req"
        fully_qualified_name: "OpenSSL.crypto.X509Req"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "add_extensions"
    fully_qualified_name: "OpenSSL.crypto.X509Req.add_extensions"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.X509Req"
        fully_qualified_name: "OpenSSL.crypto.X509Req"
      }
    }
    parameters {
      name: "extensions"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[OpenSSL.crypto.X509Extension]"
        args {
          pretty_printed_name: "OpenSSL.crypto.X509Extension"
          fully_qualified_name: "OpenSSL.crypto.X509Extension"
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "from_cryptography"
    fully_qualified_name: "OpenSSL.crypto.X509Req.from_cryptography"
    return_annotation {
      pretty_printed_name: "OpenSSL.crypto.X509Req"
      fully_qualified_name: "OpenSSL.crypto.X509Req"
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[OpenSSL.crypto.X509Req]"
        kind: TYPE
        args {
          pretty_printed_name: "OpenSSL.crypto.X509Req"
          fully_qualified_name: "OpenSSL.crypto.X509Req"
        }
      }
    }
    parameters {
      name: "crypto_req"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.CertificateSigningRequest"
        fully_qualified_name: "cryptography.x509.CertificateSigningRequest"
      }
    }
    has_decorators: true
    resolved_decorator_names: "classmethod"
    is_class_method: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "get_extensions"
    fully_qualified_name: "OpenSSL.crypto.X509Req.get_extensions"
    return_annotation {
      pretty_printed_name: "builtins.list[OpenSSL.crypto.X509Extension]"
      args {
        pretty_printed_name: "OpenSSL.crypto.X509Extension"
        fully_qualified_name: "OpenSSL.crypto.X509Extension"
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.X509Req"
        fully_qualified_name: "OpenSSL.crypto.X509Req"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "get_pubkey"
    fully_qualified_name: "OpenSSL.crypto.X509Req.get_pubkey"
    return_annotation {
      pretty_printed_name: "OpenSSL.crypto.PKey"
      fully_qualified_name: "OpenSSL.crypto.PKey"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.X509Req"
        fully_qualified_name: "OpenSSL.crypto.X509Req"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "get_subject"
    fully_qualified_name: "OpenSSL.crypto.X509Req.get_subject"
    return_annotation {
      pretty_printed_name: "OpenSSL.crypto.X509Name"
      fully_qualified_name: "OpenSSL.crypto.X509Name"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.X509Req"
        fully_qualified_name: "OpenSSL.crypto.X509Req"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "get_version"
    fully_qualified_name: "OpenSSL.crypto.X509Req.get_version"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.X509Req"
        fully_qualified_name: "OpenSSL.crypto.X509Req"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "set_pubkey"
    fully_qualified_name: "OpenSSL.crypto.X509Req.set_pubkey"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.X509Req"
        fully_qualified_name: "OpenSSL.crypto.X509Req"
      }
    }
    parameters {
      name: "pkey"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.PKey"
        fully_qualified_name: "OpenSSL.crypto.PKey"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "set_version"
    fully_qualified_name: "OpenSSL.crypto.X509Req.set_version"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.X509Req"
        fully_qualified_name: "OpenSSL.crypto.X509Req"
      }
    }
    parameters {
      name: "version"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "sign"
    fully_qualified_name: "OpenSSL.crypto.X509Req.sign"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.X509Req"
        fully_qualified_name: "OpenSSL.crypto.X509Req"
      }
    }
    parameters {
      name: "pkey"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.PKey"
        fully_qualified_name: "OpenSSL.crypto.PKey"
      }
    }
    parameters {
      name: "digest"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,builtins.bytes]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "to_cryptography"
    fully_qualified_name: "OpenSSL.crypto.X509Req.to_cryptography"
    return_annotation {
      pretty_printed_name: "cryptography.x509.CertificateSigningRequest"
      fully_qualified_name: "cryptography.x509.CertificateSigningRequest"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.X509Req"
        fully_qualified_name: "OpenSSL.crypto.X509Req"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "verify"
    fully_qualified_name: "OpenSSL.crypto.X509Req.verify"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.X509Req"
        fully_qualified_name: "OpenSSL.crypto.X509Req"
      }
    }
    parameters {
      name: "pkey"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.PKey"
        fully_qualified_name: "OpenSSL.crypto.PKey"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "X509Extension"
  fully_qualified_name: "OpenSSL.crypto.X509Extension"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "OpenSSL.crypto.X509Extension.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.X509Extension"
        fully_qualified_name: "OpenSSL.crypto.X509Extension"
      }
    }
    parameters {
      name: "type_name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    parameters {
      name: "critical"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    parameters {
      name: "subject"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[OpenSSL.crypto.X509,None]"
        kind: UNION
        args {
          pretty_printed_name: "OpenSSL.crypto.X509"
          fully_qualified_name: "OpenSSL.crypto.X509"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "issuer"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[OpenSSL.crypto.X509,None]"
        kind: UNION
        args {
          pretty_printed_name: "OpenSSL.crypto.X509"
          fully_qualified_name: "OpenSSL.crypto.X509"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "get_critical"
    fully_qualified_name: "OpenSSL.crypto.X509Extension.get_critical"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.X509Extension"
        fully_qualified_name: "OpenSSL.crypto.X509Extension"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "get_data"
    fully_qualified_name: "OpenSSL.crypto.X509Extension.get_data"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.X509Extension"
        fully_qualified_name: "OpenSSL.crypto.X509Extension"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "get_short_name"
    fully_qualified_name: "OpenSSL.crypto.X509Extension.get_short_name"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.X509Extension"
        fully_qualified_name: "OpenSSL.crypto.X509Extension"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "Revoked"
  fully_qualified_name: "OpenSSL.crypto.Revoked"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "OpenSSL.crypto.Revoked.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.Revoked"
        fully_qualified_name: "OpenSSL.crypto.Revoked"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "all_reasons"
    fully_qualified_name: "OpenSSL.crypto.Revoked.all_reasons"
    return_annotation {
      pretty_printed_name: "builtins.list[builtins.bytes]"
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.Revoked"
        fully_qualified_name: "OpenSSL.crypto.Revoked"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "get_reason"
    fully_qualified_name: "OpenSSL.crypto.Revoked.get_reason"
    return_annotation {
      pretty_printed_name: "Union[builtins.bytes,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.Revoked"
        fully_qualified_name: "OpenSSL.crypto.Revoked"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "get_rev_date"
    fully_qualified_name: "OpenSSL.crypto.Revoked.get_rev_date"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.Revoked"
        fully_qualified_name: "OpenSSL.crypto.Revoked"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "get_serial"
    fully_qualified_name: "OpenSSL.crypto.Revoked.get_serial"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.Revoked"
        fully_qualified_name: "OpenSSL.crypto.Revoked"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "set_reason"
    fully_qualified_name: "OpenSSL.crypto.Revoked.set_reason"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.Revoked"
        fully_qualified_name: "OpenSSL.crypto.Revoked"
      }
    }
    parameters {
      name: "reason"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.bytes,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "set_rev_date"
    fully_qualified_name: "OpenSSL.crypto.Revoked.set_rev_date"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.Revoked"
        fully_qualified_name: "OpenSSL.crypto.Revoked"
      }
    }
    parameters {
      name: "when"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "set_serial"
    fully_qualified_name: "OpenSSL.crypto.Revoked.set_serial"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.Revoked"
        fully_qualified_name: "OpenSSL.crypto.Revoked"
      }
    }
    parameters {
      name: "hex_str"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "CRL"
  fully_qualified_name: "OpenSSL.crypto.CRL"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "OpenSSL.crypto.CRL.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.CRL"
        fully_qualified_name: "OpenSSL.crypto.CRL"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "add_revoked"
    fully_qualified_name: "OpenSSL.crypto.CRL.add_revoked"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.CRL"
        fully_qualified_name: "OpenSSL.crypto.CRL"
      }
    }
    parameters {
      name: "revoked"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.Revoked"
        fully_qualified_name: "OpenSSL.crypto.Revoked"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "export"
    fully_qualified_name: "OpenSSL.crypto.CRL.export"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.CRL"
        fully_qualified_name: "OpenSSL.crypto.CRL"
      }
    }
    parameters {
      name: "cert"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.X509"
        fully_qualified_name: "OpenSSL.crypto.X509"
      }
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.PKey"
        fully_qualified_name: "OpenSSL.crypto.PKey"
      }
    }
    parameters {
      name: "type"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    parameters {
      name: "days"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    parameters {
      name: "digest"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "from_cryptography"
    fully_qualified_name: "OpenSSL.crypto.CRL.from_cryptography"
    return_annotation {
      pretty_printed_name: "OpenSSL.crypto.CRL"
      fully_qualified_name: "OpenSSL.crypto.CRL"
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[OpenSSL.crypto.CRL]"
        kind: TYPE
        args {
          pretty_printed_name: "OpenSSL.crypto.CRL"
          fully_qualified_name: "OpenSSL.crypto.CRL"
        }
      }
    }
    parameters {
      name: "crypto_crl"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.CertificateRevocationList"
        fully_qualified_name: "cryptography.x509.CertificateRevocationList"
      }
    }
    has_decorators: true
    resolved_decorator_names: "classmethod"
    is_class_method: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "get_issuer"
    fully_qualified_name: "OpenSSL.crypto.CRL.get_issuer"
    return_annotation {
      pretty_printed_name: "OpenSSL.crypto.X509Name"
      fully_qualified_name: "OpenSSL.crypto.X509Name"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.CRL"
        fully_qualified_name: "OpenSSL.crypto.CRL"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "get_revoked"
    fully_qualified_name: "OpenSSL.crypto.CRL.get_revoked"
    return_annotation {
      pretty_printed_name: "builtins.tuple[OpenSSL.crypto.Revoked]"
      args {
        pretty_printed_name: "OpenSSL.crypto.Revoked"
        fully_qualified_name: "OpenSSL.crypto.Revoked"
      }
      fully_qualified_name: "builtins.tuple"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.CRL"
        fully_qualified_name: "OpenSSL.crypto.CRL"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "set_lastUpdate"
    fully_qualified_name: "OpenSSL.crypto.CRL.set_lastUpdate"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.CRL"
        fully_qualified_name: "OpenSSL.crypto.CRL"
      }
    }
    parameters {
      name: "when"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "set_nextUpdate"
    fully_qualified_name: "OpenSSL.crypto.CRL.set_nextUpdate"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.CRL"
        fully_qualified_name: "OpenSSL.crypto.CRL"
      }
    }
    parameters {
      name: "when"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "set_version"
    fully_qualified_name: "OpenSSL.crypto.CRL.set_version"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.CRL"
        fully_qualified_name: "OpenSSL.crypto.CRL"
      }
    }
    parameters {
      name: "version"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "sign"
    fully_qualified_name: "OpenSSL.crypto.CRL.sign"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.CRL"
        fully_qualified_name: "OpenSSL.crypto.CRL"
      }
    }
    parameters {
      name: "issuer_cert"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.X509"
        fully_qualified_name: "OpenSSL.crypto.X509"
      }
    }
    parameters {
      name: "issuer_key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.PKey"
        fully_qualified_name: "OpenSSL.crypto.PKey"
      }
    }
    parameters {
      name: "digest"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "to_cryptography"
    fully_qualified_name: "OpenSSL.crypto.CRL.to_cryptography"
    return_annotation {
      pretty_printed_name: "cryptography.x509.CertificateRevocationList"
      fully_qualified_name: "cryptography.x509.CertificateRevocationList"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.CRL"
        fully_qualified_name: "OpenSSL.crypto.CRL"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "X509Store"
  fully_qualified_name: "OpenSSL.crypto.X509Store"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "OpenSSL.crypto.X509Store.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.X509Store"
        fully_qualified_name: "OpenSSL.crypto.X509Store"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "add_cert"
    fully_qualified_name: "OpenSSL.crypto.X509Store.add_cert"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.X509Store"
        fully_qualified_name: "OpenSSL.crypto.X509Store"
      }
    }
    parameters {
      name: "cert"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.X509"
        fully_qualified_name: "OpenSSL.crypto.X509"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "add_crl"
    fully_qualified_name: "OpenSSL.crypto.X509Store.add_crl"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.X509Store"
        fully_qualified_name: "OpenSSL.crypto.X509Store"
      }
    }
    parameters {
      name: "crl"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.CRL"
        fully_qualified_name: "OpenSSL.crypto.CRL"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "load_locations"
    fully_qualified_name: "OpenSSL.crypto.X509Store.load_locations"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.X509Store"
        fully_qualified_name: "OpenSSL.crypto.X509Store"
      }
    }
    parameters {
      name: "cafile"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,builtins.bytes]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
      }
    }
    parameters {
      name: "capath"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,builtins.bytes,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "set_flags"
    fully_qualified_name: "OpenSSL.crypto.X509Store.set_flags"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.X509Store"
        fully_qualified_name: "OpenSSL.crypto.X509Store"
      }
    }
    parameters {
      name: "flags"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "set_time"
    fully_qualified_name: "OpenSSL.crypto.X509Store.set_time"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.X509Store"
        fully_qualified_name: "OpenSSL.crypto.X509Store"
      }
    }
    parameters {
      name: "vfy_time"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "datetime.datetime"
        fully_qualified_name: "datetime.datetime"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "X509StoreContext"
  fully_qualified_name: "OpenSSL.crypto.X509StoreContext"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "OpenSSL.crypto.X509StoreContext.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.X509StoreContext"
        fully_qualified_name: "OpenSSL.crypto.X509StoreContext"
      }
    }
    parameters {
      name: "store"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.X509Store"
        fully_qualified_name: "OpenSSL.crypto.X509Store"
      }
    }
    parameters {
      name: "certificate"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.X509"
        fully_qualified_name: "OpenSSL.crypto.X509"
      }
    }
    parameters {
      name: "chain"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.Sequence[OpenSSL.crypto.X509],None]"
        kind: UNION
        args {
          pretty_printed_name: "typing.Sequence[OpenSSL.crypto.X509]"
          args {
            pretty_printed_name: "OpenSSL.crypto.X509"
            fully_qualified_name: "OpenSSL.crypto.X509"
          }
          fully_qualified_name: "typing.Sequence"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "get_verified_chain"
    fully_qualified_name: "OpenSSL.crypto.X509StoreContext.get_verified_chain"
    return_annotation {
      pretty_printed_name: "builtins.list[OpenSSL.crypto.X509]"
      args {
        pretty_printed_name: "OpenSSL.crypto.X509"
        fully_qualified_name: "OpenSSL.crypto.X509"
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.X509StoreContext"
        fully_qualified_name: "OpenSSL.crypto.X509StoreContext"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "set_store"
    fully_qualified_name: "OpenSSL.crypto.X509StoreContext.set_store"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.X509StoreContext"
        fully_qualified_name: "OpenSSL.crypto.X509StoreContext"
      }
    }
    parameters {
      name: "store"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.X509Store"
        fully_qualified_name: "OpenSSL.crypto.X509Store"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "verify_certificate"
    fully_qualified_name: "OpenSSL.crypto.X509StoreContext.verify_certificate"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.X509StoreContext"
        fully_qualified_name: "OpenSSL.crypto.X509StoreContext"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "X509StoreContextError"
  fully_qualified_name: "OpenSSL.crypto.X509StoreContextError"
  super_classes: "builtins.Exception"
  methods {
    name: "__init__"
    fully_qualified_name: "OpenSSL.crypto.X509StoreContextError.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.X509StoreContextError"
        fully_qualified_name: "OpenSSL.crypto.X509StoreContextError"
      }
    }
    parameters {
      name: "message"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,builtins.bytes]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
      }
    }
    parameters {
      name: "certificate"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.X509"
        fully_qualified_name: "OpenSSL.crypto.X509"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "certificate"
    fully_qualified_name: "OpenSSL.crypto.X509StoreContextError.certificate"
    type_annotation {
      pretty_printed_name: "OpenSSL.crypto.X509"
      fully_qualified_name: "OpenSSL.crypto.X509"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "X509StoreFlags"
  fully_qualified_name: "OpenSSL.crypto.X509StoreFlags"
  super_classes: "builtins.object"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "CRL_CHECK"
    fully_qualified_name: "OpenSSL.crypto.X509StoreFlags.CRL_CHECK"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "CRL_CHECK_ALL"
    fully_qualified_name: "OpenSSL.crypto.X509StoreFlags.CRL_CHECK_ALL"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "IGNORE_CRITICAL"
    fully_qualified_name: "OpenSSL.crypto.X509StoreFlags.IGNORE_CRITICAL"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "X509_STRICT"
    fully_qualified_name: "OpenSSL.crypto.X509StoreFlags.X509_STRICT"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "ALLOW_PROXY_CERTS"
    fully_qualified_name: "OpenSSL.crypto.X509StoreFlags.ALLOW_PROXY_CERTS"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "POLICY_CHECK"
    fully_qualified_name: "OpenSSL.crypto.X509StoreFlags.POLICY_CHECK"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "EXPLICIT_POLICY"
    fully_qualified_name: "OpenSSL.crypto.X509StoreFlags.EXPLICIT_POLICY"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "INHIBIT_MAP"
    fully_qualified_name: "OpenSSL.crypto.X509StoreFlags.INHIBIT_MAP"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "NOTIFY_POLICY"
    fully_qualified_name: "OpenSSL.crypto.X509StoreFlags.NOTIFY_POLICY"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "CHECK_SS_SIGNATURE"
    fully_qualified_name: "OpenSSL.crypto.X509StoreFlags.CHECK_SS_SIGNATURE"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "CB_ISSUER_CHECK"
    fully_qualified_name: "OpenSSL.crypto.X509StoreFlags.CB_ISSUER_CHECK"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "PKCS7"
  fully_qualified_name: "OpenSSL.crypto.PKCS7"
  super_classes: "builtins.object"
  methods {
    name: "get_type_name"
    fully_qualified_name: "OpenSSL.crypto.PKCS7.get_type_name"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.PKCS7"
        fully_qualified_name: "OpenSSL.crypto.PKCS7"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "type_is_data"
    fully_qualified_name: "OpenSSL.crypto.PKCS7.type_is_data"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.PKCS7"
        fully_qualified_name: "OpenSSL.crypto.PKCS7"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "type_is_enveloped"
    fully_qualified_name: "OpenSSL.crypto.PKCS7.type_is_enveloped"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.PKCS7"
        fully_qualified_name: "OpenSSL.crypto.PKCS7"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "type_is_signed"
    fully_qualified_name: "OpenSSL.crypto.PKCS7.type_is_signed"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.PKCS7"
        fully_qualified_name: "OpenSSL.crypto.PKCS7"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "type_is_signedAndEnveloped"
    fully_qualified_name: "OpenSSL.crypto.PKCS7.type_is_signedAndEnveloped"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.PKCS7"
        fully_qualified_name: "OpenSSL.crypto.PKCS7"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "PKCS12"
  fully_qualified_name: "OpenSSL.crypto.PKCS12"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "OpenSSL.crypto.PKCS12.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.PKCS12"
        fully_qualified_name: "OpenSSL.crypto.PKCS12"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "export"
    fully_qualified_name: "OpenSSL.crypto.PKCS12.export"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.PKCS12"
        fully_qualified_name: "OpenSSL.crypto.PKCS12"
      }
    }
    parameters {
      name: "passphrase"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.bytes,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "iter"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    parameters {
      name: "maciter"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "get_ca_certificates"
    fully_qualified_name: "OpenSSL.crypto.PKCS12.get_ca_certificates"
    return_annotation {
      pretty_printed_name: "builtins.tuple[OpenSSL.crypto.X509]"
      args {
        pretty_printed_name: "OpenSSL.crypto.X509"
        fully_qualified_name: "OpenSSL.crypto.X509"
      }
      fully_qualified_name: "builtins.tuple"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.PKCS12"
        fully_qualified_name: "OpenSSL.crypto.PKCS12"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "get_certificate"
    fully_qualified_name: "OpenSSL.crypto.PKCS12.get_certificate"
    return_annotation {
      pretty_printed_name: "OpenSSL.crypto.X509"
      fully_qualified_name: "OpenSSL.crypto.X509"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.PKCS12"
        fully_qualified_name: "OpenSSL.crypto.PKCS12"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "get_friendlyname"
    fully_qualified_name: "OpenSSL.crypto.PKCS12.get_friendlyname"
    return_annotation {
      pretty_printed_name: "Union[builtins.bytes,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.PKCS12"
        fully_qualified_name: "OpenSSL.crypto.PKCS12"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "get_privatekey"
    fully_qualified_name: "OpenSSL.crypto.PKCS12.get_privatekey"
    return_annotation {
      pretty_printed_name: "OpenSSL.crypto.PKey"
      fully_qualified_name: "OpenSSL.crypto.PKey"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.PKCS12"
        fully_qualified_name: "OpenSSL.crypto.PKCS12"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "set_ca_certificates"
    fully_qualified_name: "OpenSSL.crypto.PKCS12.set_ca_certificates"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.PKCS12"
        fully_qualified_name: "OpenSSL.crypto.PKCS12"
      }
    }
    parameters {
      name: "cacerts"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.Iterable[OpenSSL.crypto.X509],None]"
        kind: UNION
        args {
          pretty_printed_name: "typing.Iterable[OpenSSL.crypto.X509]"
          args {
            pretty_printed_name: "OpenSSL.crypto.X509"
            fully_qualified_name: "OpenSSL.crypto.X509"
          }
          fully_qualified_name: "typing.Iterable"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "set_certificate"
    fully_qualified_name: "OpenSSL.crypto.PKCS12.set_certificate"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.PKCS12"
        fully_qualified_name: "OpenSSL.crypto.PKCS12"
      }
    }
    parameters {
      name: "cert"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.X509"
        fully_qualified_name: "OpenSSL.crypto.X509"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "set_friendlyname"
    fully_qualified_name: "OpenSSL.crypto.PKCS12.set_friendlyname"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.PKCS12"
        fully_qualified_name: "OpenSSL.crypto.PKCS12"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.bytes,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "set_privatekey"
    fully_qualified_name: "OpenSSL.crypto.PKCS12.set_privatekey"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.PKCS12"
        fully_qualified_name: "OpenSSL.crypto.PKCS12"
      }
    }
    parameters {
      name: "pkey"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.PKey"
        fully_qualified_name: "OpenSSL.crypto.PKey"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "NetscapeSPKI"
  fully_qualified_name: "OpenSSL.crypto.NetscapeSPKI"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "OpenSSL.crypto.NetscapeSPKI.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.NetscapeSPKI"
        fully_qualified_name: "OpenSSL.crypto.NetscapeSPKI"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "b64_encode"
    fully_qualified_name: "OpenSSL.crypto.NetscapeSPKI.b64_encode"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.NetscapeSPKI"
        fully_qualified_name: "OpenSSL.crypto.NetscapeSPKI"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "get_pubkey"
    fully_qualified_name: "OpenSSL.crypto.NetscapeSPKI.get_pubkey"
    return_annotation {
      pretty_printed_name: "OpenSSL.crypto.PKey"
      fully_qualified_name: "OpenSSL.crypto.PKey"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.NetscapeSPKI"
        fully_qualified_name: "OpenSSL.crypto.NetscapeSPKI"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "set_pubkey"
    fully_qualified_name: "OpenSSL.crypto.NetscapeSPKI.set_pubkey"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.NetscapeSPKI"
        fully_qualified_name: "OpenSSL.crypto.NetscapeSPKI"
      }
    }
    parameters {
      name: "pkey"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.PKey"
        fully_qualified_name: "OpenSSL.crypto.PKey"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "sign"
    fully_qualified_name: "OpenSSL.crypto.NetscapeSPKI.sign"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.NetscapeSPKI"
        fully_qualified_name: "OpenSSL.crypto.NetscapeSPKI"
      }
    }
    parameters {
      name: "pkey"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.PKey"
        fully_qualified_name: "OpenSSL.crypto.PKey"
      }
    }
    parameters {
      name: "digest"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "verify"
    fully_qualified_name: "OpenSSL.crypto.NetscapeSPKI.verify"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.NetscapeSPKI"
        fully_qualified_name: "OpenSSL.crypto.NetscapeSPKI"
      }
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "OpenSSL.crypto.PKey"
        fully_qualified_name: "OpenSSL.crypto.PKey"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "get_elliptic_curves"
  fully_qualified_name: "OpenSSL.crypto.get_elliptic_curves"
  return_annotation {
    pretty_printed_name: "builtins.set[OpenSSL.crypto._EllipticCurve]"
    args {
      pretty_printed_name: "OpenSSL.crypto._EllipticCurve"
      fully_qualified_name: "OpenSSL.crypto._EllipticCurve"
    }
    fully_qualified_name: "builtins.set"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "get_elliptic_curve"
  fully_qualified_name: "OpenSSL.crypto.get_elliptic_curve"
  return_annotation {
    pretty_printed_name: "OpenSSL.crypto._EllipticCurve"
    fully_qualified_name: "OpenSSL.crypto._EllipticCurve"
  }
  parameters {
    name: "name"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "dump_certificate"
  fully_qualified_name: "OpenSSL.crypto.dump_certificate"
  return_annotation {
    pretty_printed_name: "builtins.bytes"
    fully_qualified_name: "builtins.bytes"
  }
  parameters {
    name: "type"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "cert"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "OpenSSL.crypto.X509"
      fully_qualified_name: "OpenSSL.crypto.X509"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "load_certificate"
  fully_qualified_name: "OpenSSL.crypto.load_certificate"
  return_annotation {
    pretty_printed_name: "OpenSSL.crypto.X509"
    fully_qualified_name: "OpenSSL.crypto.X509"
  }
  parameters {
    name: "type"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "buffer"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "dump_certificate_request"
  fully_qualified_name: "OpenSSL.crypto.dump_certificate_request"
  return_annotation {
    pretty_printed_name: "builtins.bytes"
    fully_qualified_name: "builtins.bytes"
  }
  parameters {
    name: "type"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "req"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "OpenSSL.crypto.X509Req"
      fully_qualified_name: "OpenSSL.crypto.X509Req"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "load_certificate_request"
  fully_qualified_name: "OpenSSL.crypto.load_certificate_request"
  return_annotation {
    pretty_printed_name: "OpenSSL.crypto.X509Req"
    fully_qualified_name: "OpenSSL.crypto.X509Req"
  }
  parameters {
    name: "type"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "buffer"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "dump_privatekey"
  fully_qualified_name: "OpenSSL.crypto.dump_privatekey"
  return_annotation {
    pretty_printed_name: "builtins.bytes"
    fully_qualified_name: "builtins.bytes"
  }
  parameters {
    name: "type"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "pkey"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "OpenSSL.crypto.PKey"
      fully_qualified_name: "OpenSSL.crypto.PKey"
    }
  }
  parameters {
    name: "cipher"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.bytes,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "passphrase"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.bytes,CallableType[builtins.function],None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
      args {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "load_privatekey"
  fully_qualified_name: "OpenSSL.crypto.load_privatekey"
  return_annotation {
    pretty_printed_name: "OpenSSL.crypto.PKey"
    fully_qualified_name: "OpenSSL.crypto.PKey"
  }
  parameters {
    name: "type"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "buffer"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,builtins.bytes]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
  }
  parameters {
    name: "passphrase"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.bytes,CallableType[builtins.function],None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
      args {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "dump_publickey"
  fully_qualified_name: "OpenSSL.crypto.dump_publickey"
  return_annotation {
    pretty_printed_name: "builtins.bytes"
    fully_qualified_name: "builtins.bytes"
  }
  parameters {
    name: "type"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "pkey"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "OpenSSL.crypto.PKey"
      fully_qualified_name: "OpenSSL.crypto.PKey"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "load_publickey"
  fully_qualified_name: "OpenSSL.crypto.load_publickey"
  return_annotation {
    pretty_printed_name: "OpenSSL.crypto.PKey"
    fully_qualified_name: "OpenSSL.crypto.PKey"
  }
  parameters {
    name: "type"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "buffer"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,builtins.bytes]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "dump_crl"
  fully_qualified_name: "OpenSSL.crypto.dump_crl"
  return_annotation {
    pretty_printed_name: "builtins.bytes"
    fully_qualified_name: "builtins.bytes"
  }
  parameters {
    name: "type"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "crl"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "OpenSSL.crypto.CRL"
      fully_qualified_name: "OpenSSL.crypto.CRL"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "load_crl"
  fully_qualified_name: "OpenSSL.crypto.load_crl"
  return_annotation {
    pretty_printed_name: "OpenSSL.crypto.CRL"
    fully_qualified_name: "OpenSSL.crypto.CRL"
  }
  parameters {
    name: "type"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "buffer"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,builtins.bytes]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "load_pkcs7_data"
  fully_qualified_name: "OpenSSL.crypto.load_pkcs7_data"
  return_annotation {
    pretty_printed_name: "OpenSSL.crypto.PKCS7"
    fully_qualified_name: "OpenSSL.crypto.PKCS7"
  }
  parameters {
    name: "type"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "buffer"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,builtins.bytes]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "load_pkcs12"
  fully_qualified_name: "OpenSSL.crypto.load_pkcs12"
  return_annotation {
    pretty_printed_name: "OpenSSL.crypto.PKCS12"
    fully_qualified_name: "OpenSSL.crypto.PKCS12"
  }
  parameters {
    name: "buffer"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,builtins.bytes]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
  }
  parameters {
    name: "passphrase"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.bytes,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "sign"
  fully_qualified_name: "OpenSSL.crypto.sign"
  return_annotation {
    pretty_printed_name: "builtins.bytes"
    fully_qualified_name: "builtins.bytes"
  }
  parameters {
    name: "pkey"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "OpenSSL.crypto.PKey"
      fully_qualified_name: "OpenSSL.crypto.PKey"
    }
  }
  parameters {
    name: "data"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,builtins.bytes]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
  }
  parameters {
    name: "digest"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,builtins.bytes]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "verify"
  fully_qualified_name: "OpenSSL.crypto.verify"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "cert"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "OpenSSL.crypto.X509"
      fully_qualified_name: "OpenSSL.crypto.X509"
    }
  }
  parameters {
    name: "signature"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
  }
  parameters {
    name: "data"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,builtins.bytes]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
  }
  parameters {
    name: "digest"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,builtins.bytes]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "FILETYPE_PEM"
  fully_qualified_name: "OpenSSL.crypto.FILETYPE_PEM"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "FILETYPE_ASN1"
  fully_qualified_name: "OpenSSL.crypto.FILETYPE_ASN1"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "FILETYPE_TEXT"
  fully_qualified_name: "OpenSSL.crypto.FILETYPE_TEXT"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "TYPE_RSA"
  fully_qualified_name: "OpenSSL.crypto.TYPE_RSA"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "TYPE_DSA"
  fully_qualified_name: "OpenSSL.crypto.TYPE_DSA"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
