fully_qualified_name: "lib2to3.pgen2.driver"
classes {
  name: "Driver"
  fully_qualified_name: "lib2to3.pgen2.driver.Driver"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "lib2to3.pgen2.driver.Driver.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "lib2to3.pgen2.driver.Driver"
        fully_qualified_name: "lib2to3.pgen2.driver.Driver"
      }
    }
    parameters {
      name: "grammar"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "lib2to3.pgen2.grammar.Grammar"
        fully_qualified_name: "lib2to3.pgen2.grammar.Grammar"
      }
    }
    parameters {
      name: "convert"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[CallableType[builtins.function],None]"
        kind: UNION
        args {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "logger"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[logging.Logger,None]"
        kind: UNION
        args {
          pretty_printed_name: "logging.Logger"
          fully_qualified_name: "logging.Logger"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "parse_tokens"
    fully_qualified_name: "lib2to3.pgen2.driver.Driver.parse_tokens"
    return_annotation {
      pretty_printed_name: "TypeAlias[Union[lib2to3.pytree.Node,lib2to3.pytree.Leaf]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[lib2to3.pytree.Node,lib2to3.pytree.Leaf]"
        kind: UNION
        args {
          pretty_printed_name: "lib2to3.pytree.Node"
          fully_qualified_name: "lib2to3.pytree.Node"
        }
        args {
          pretty_printed_name: "lib2to3.pytree.Leaf"
          fully_qualified_name: "lib2to3.pytree.Leaf"
        }
      }
      fully_qualified_name: "lib2to3.pytree._NL"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "lib2to3.pgen2.driver.Driver"
        fully_qualified_name: "lib2to3.pgen2.driver.Driver"
      }
    }
    parameters {
      name: "tokens"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    parameters {
      name: "debug"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "parse_stream_raw"
    fully_qualified_name: "lib2to3.pgen2.driver.Driver.parse_stream_raw"
    return_annotation {
      pretty_printed_name: "TypeAlias[Union[lib2to3.pytree.Node,lib2to3.pytree.Leaf]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[lib2to3.pytree.Node,lib2to3.pytree.Leaf]"
        kind: UNION
        args {
          pretty_printed_name: "lib2to3.pytree.Node"
          fully_qualified_name: "lib2to3.pytree.Node"
        }
        args {
          pretty_printed_name: "lib2to3.pytree.Leaf"
          fully_qualified_name: "lib2to3.pytree.Leaf"
        }
      }
      fully_qualified_name: "lib2to3.pytree._NL"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "lib2to3.pgen2.driver.Driver"
        fully_qualified_name: "lib2to3.pgen2.driver.Driver"
      }
    }
    parameters {
      name: "stream"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.IO[builtins.unicode]"
        args {
          pretty_printed_name: "builtins.unicode"
          fully_qualified_name: "builtins.unicode"
        }
        fully_qualified_name: "typing.IO"
      }
    }
    parameters {
      name: "debug"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "parse_stream_raw"
    fully_qualified_name: "lib2to3.pgen2.driver.Driver.parse_stream_raw"
    return_annotation {
      pretty_printed_name: "TypeAlias[Union[lib2to3.pytree.Node,lib2to3.pytree.Leaf]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[lib2to3.pytree.Node,lib2to3.pytree.Leaf]"
        kind: UNION
        args {
          pretty_printed_name: "lib2to3.pytree.Node"
          fully_qualified_name: "lib2to3.pytree.Node"
        }
        args {
          pretty_printed_name: "lib2to3.pytree.Leaf"
          fully_qualified_name: "lib2to3.pytree.Leaf"
        }
      }
      fully_qualified_name: "lib2to3.pytree._NL"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "lib2to3.pgen2.driver.Driver"
        fully_qualified_name: "lib2to3.pgen2.driver.Driver"
      }
    }
    parameters {
      name: "stream"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.IO[builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "typing.IO"
      }
    }
    parameters {
      name: "debug"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "parse_stream"
    fully_qualified_name: "lib2to3.pgen2.driver.Driver.parse_stream"
    return_annotation {
      pretty_printed_name: "TypeAlias[Union[lib2to3.pytree.Node,lib2to3.pytree.Leaf]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[lib2to3.pytree.Node,lib2to3.pytree.Leaf]"
        kind: UNION
        args {
          pretty_printed_name: "lib2to3.pytree.Node"
          fully_qualified_name: "lib2to3.pytree.Node"
        }
        args {
          pretty_printed_name: "lib2to3.pytree.Leaf"
          fully_qualified_name: "lib2to3.pytree.Leaf"
        }
      }
      fully_qualified_name: "lib2to3.pytree._NL"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "lib2to3.pgen2.driver.Driver"
        fully_qualified_name: "lib2to3.pgen2.driver.Driver"
      }
    }
    parameters {
      name: "stream"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.IO[builtins.unicode]"
        args {
          pretty_printed_name: "builtins.unicode"
          fully_qualified_name: "builtins.unicode"
        }
        fully_qualified_name: "typing.IO"
      }
    }
    parameters {
      name: "debug"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "parse_stream"
    fully_qualified_name: "lib2to3.pgen2.driver.Driver.parse_stream"
    return_annotation {
      pretty_printed_name: "TypeAlias[Union[lib2to3.pytree.Node,lib2to3.pytree.Leaf]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[lib2to3.pytree.Node,lib2to3.pytree.Leaf]"
        kind: UNION
        args {
          pretty_printed_name: "lib2to3.pytree.Node"
          fully_qualified_name: "lib2to3.pytree.Node"
        }
        args {
          pretty_printed_name: "lib2to3.pytree.Leaf"
          fully_qualified_name: "lib2to3.pytree.Leaf"
        }
      }
      fully_qualified_name: "lib2to3.pytree._NL"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "lib2to3.pgen2.driver.Driver"
        fully_qualified_name: "lib2to3.pgen2.driver.Driver"
      }
    }
    parameters {
      name: "stream"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.IO[builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "typing.IO"
      }
    }
    parameters {
      name: "debug"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "parse_file"
    fully_qualified_name: "lib2to3.pgen2.driver.Driver.parse_file"
    return_annotation {
      pretty_printed_name: "TypeAlias[Union[lib2to3.pytree.Node,lib2to3.pytree.Leaf]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[lib2to3.pytree.Node,lib2to3.pytree.Leaf]"
        kind: UNION
        args {
          pretty_printed_name: "lib2to3.pytree.Node"
          fully_qualified_name: "lib2to3.pytree.Node"
        }
        args {
          pretty_printed_name: "lib2to3.pytree.Leaf"
          fully_qualified_name: "lib2to3.pytree.Leaf"
        }
      }
      fully_qualified_name: "lib2to3.pytree._NL"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "lib2to3.pgen2.driver.Driver"
        fully_qualified_name: "lib2to3.pgen2.driver.Driver"
      }
    }
    parameters {
      name: "filename"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.unicode"
        fully_qualified_name: "builtins.unicode"
      }
    }
    parameters {
      name: "encoding"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.unicode,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.unicode"
          fully_qualified_name: "builtins.unicode"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "debug"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "parse_file"
    fully_qualified_name: "lib2to3.pgen2.driver.Driver.parse_file"
    return_annotation {
      pretty_printed_name: "TypeAlias[Union[lib2to3.pytree.Node,lib2to3.pytree.Leaf]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[lib2to3.pytree.Node,lib2to3.pytree.Leaf]"
        kind: UNION
        args {
          pretty_printed_name: "lib2to3.pytree.Node"
          fully_qualified_name: "lib2to3.pytree.Node"
        }
        args {
          pretty_printed_name: "lib2to3.pytree.Leaf"
          fully_qualified_name: "lib2to3.pytree.Leaf"
        }
      }
      fully_qualified_name: "lib2to3.pytree._NL"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "lib2to3.pgen2.driver.Driver"
        fully_qualified_name: "lib2to3.pgen2.driver.Driver"
      }
    }
    parameters {
      name: "filename"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,os.PathLike[builtins.str]]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "os.PathLike[builtins.str]"
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            fully_qualified_name: "os.PathLike"
          }
        }
        fully_qualified_name: "_typeshed.StrPath"
      }
    }
    parameters {
      name: "encoding"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "debug"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "parse_string"
    fully_qualified_name: "lib2to3.pgen2.driver.Driver.parse_string"
    return_annotation {
      pretty_printed_name: "TypeAlias[Union[lib2to3.pytree.Node,lib2to3.pytree.Leaf]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[lib2to3.pytree.Node,lib2to3.pytree.Leaf]"
        kind: UNION
        args {
          pretty_printed_name: "lib2to3.pytree.Node"
          fully_qualified_name: "lib2to3.pytree.Node"
        }
        args {
          pretty_printed_name: "lib2to3.pytree.Leaf"
          fully_qualified_name: "lib2to3.pytree.Leaf"
        }
      }
      fully_qualified_name: "lib2to3.pytree._NL"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "lib2to3.pgen2.driver.Driver"
        fully_qualified_name: "lib2to3.pgen2.driver.Driver"
      }
    }
    parameters {
      name: "text"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.unicode"
        fully_qualified_name: "builtins.unicode"
      }
    }
    parameters {
      name: "debug"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "parse_string"
    fully_qualified_name: "lib2to3.pgen2.driver.Driver.parse_string"
    return_annotation {
      pretty_printed_name: "TypeAlias[Union[lib2to3.pytree.Node,lib2to3.pytree.Leaf]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[lib2to3.pytree.Node,lib2to3.pytree.Leaf]"
        kind: UNION
        args {
          pretty_printed_name: "lib2to3.pytree.Node"
          fully_qualified_name: "lib2to3.pytree.Node"
        }
        args {
          pretty_printed_name: "lib2to3.pytree.Leaf"
          fully_qualified_name: "lib2to3.pytree.Leaf"
        }
      }
      fully_qualified_name: "lib2to3.pytree._NL"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "lib2to3.pgen2.driver.Driver"
        fully_qualified_name: "lib2to3.pgen2.driver.Driver"
      }
    }
    parameters {
      name: "text"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "debug"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "grammar"
    fully_qualified_name: "lib2to3.pgen2.driver.Driver.grammar"
    type_annotation {
      pretty_printed_name: "lib2to3.pgen2.grammar.Grammar"
      fully_qualified_name: "lib2to3.pgen2.grammar.Grammar"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "logger"
    fully_qualified_name: "lib2to3.pgen2.driver.Driver.logger"
    type_annotation {
      pretty_printed_name: "logging.Logger"
      fully_qualified_name: "logging.Logger"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "convert"
    fully_qualified_name: "lib2to3.pgen2.driver.Driver.convert"
    type_annotation {
      pretty_printed_name: "TypeAlias[CallableType[builtins.function]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
      fully_qualified_name: "lib2to3.pytree._Convert"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
functions {
  name: "load_grammar"
  fully_qualified_name: "lib2to3.pgen2.driver.load_grammar"
  return_annotation {
    pretty_printed_name: "lib2to3.pgen2.grammar.Grammar"
    fully_qualified_name: "lib2to3.pgen2.grammar.Grammar"
  }
  parameters {
    name: "gt"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.unicode"
      fully_qualified_name: "builtins.unicode"
    }
    has_default: true
  }
  parameters {
    name: "gp"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.unicode,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.unicode"
        fully_qualified_name: "builtins.unicode"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "save"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    has_default: true
  }
  parameters {
    name: "force"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    has_default: true
  }
  parameters {
    name: "logger"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[logging.Logger,None]"
      kind: UNION
      args {
        pretty_printed_name: "logging.Logger"
        fully_qualified_name: "logging.Logger"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  valid_for: "27"
}
functions {
  name: "load_grammar"
  fully_qualified_name: "lib2to3.pgen2.driver.load_grammar"
  return_annotation {
    pretty_printed_name: "lib2to3.pgen2.grammar.Grammar"
    fully_qualified_name: "lib2to3.pgen2.grammar.Grammar"
  }
  parameters {
    name: "gt"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    has_default: true
  }
  parameters {
    name: "gp"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "save"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    has_default: true
  }
  parameters {
    name: "force"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    has_default: true
  }
  parameters {
    name: "logger"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[logging.Logger,None]"
      kind: UNION
      args {
        pretty_printed_name: "logging.Logger"
        fully_qualified_name: "logging.Logger"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
