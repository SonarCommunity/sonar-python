fully_qualified_name: "asyncio.runners"
functions {
  name: "run"
  fully_qualified_name: "asyncio.runners.run"
  return_annotation {
    pretty_printed_name: "asyncio.runners._T"
    kind: TYPE_VAR
  }
  parameters {
    name: "main"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,asyncio.runners._T]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "asyncio.runners._T"
        kind: TYPE_VAR
      }
      fully_qualified_name: "typing.Coroutine"
    }
  }
  parameters {
    name: "debug"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
}
functions {
  name: "run"
  fully_qualified_name: "asyncio.runners.run"
  return_annotation {
    pretty_printed_name: "asyncio.runners._T"
    kind: TYPE_VAR
  }
  parameters {
    name: "main"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,asyncio.runners._T]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "asyncio.runners._T"
        kind: TYPE_VAR
      }
      fully_qualified_name: "typing.Coroutine"
    }
  }
  parameters {
    name: "debug"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[builtins.bool,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "__all__"
  fully_qualified_name: "asyncio.runners.__all__"
  type_annotation {
    pretty_printed_name: "Tuple[builtins.str]"
    kind: TUPLE
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
