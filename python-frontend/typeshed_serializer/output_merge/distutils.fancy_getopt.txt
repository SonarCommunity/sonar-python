fully_qualified_name: "distutils.fancy_getopt"
classes {
  name: "FancyGetopt"
  fully_qualified_name: "distutils.fancy_getopt.FancyGetopt"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "distutils.fancy_getopt.FancyGetopt.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "distutils.fancy_getopt.FancyGetopt"
        fully_qualified_name: "distutils.fancy_getopt.FancyGetopt"
      }
    }
    parameters {
      name: "option_table"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.list[TypeAlias[Tuple[builtins.str,Union[builtins.str,None],builtins.str]]],None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.list[TypeAlias[Tuple[builtins.str,Union[builtins.str,None],builtins.str]]]"
          args {
            pretty_printed_name: "TypeAlias[Tuple[builtins.str,Union[builtins.str,None],builtins.str]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Tuple[builtins.str,Union[builtins.str,None],builtins.str]"
              kind: TUPLE
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "Union[builtins.str,None]"
                kind: UNION
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
                args {
                  pretty_printed_name: "None"
                  kind: NONE
                }
              }
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
            }
            fully_qualified_name: "distutils.fancy_getopt._Option"
          }
          fully_qualified_name: "builtins.list"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "get_option_order"
    fully_qualified_name: "distutils.fancy_getopt.FancyGetopt.get_option_order"
    return_annotation {
      pretty_printed_name: "builtins.list[Tuple[builtins.str,builtins.str]]"
      args {
        pretty_printed_name: "Tuple[builtins.str,builtins.str]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "distutils.fancy_getopt.FancyGetopt"
        fully_qualified_name: "distutils.fancy_getopt.FancyGetopt"
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "generate_help"
    fully_qualified_name: "distutils.fancy_getopt.FancyGetopt.generate_help"
    return_annotation {
      pretty_printed_name: "builtins.list[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "distutils.fancy_getopt.FancyGetopt"
        fully_qualified_name: "distutils.fancy_getopt.FancyGetopt"
      }
    }
    parameters {
      name: "header"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "getopt"
    fullname: "distutils.fancy_getopt.FancyGetopt.getopt"
    definitions {
      name: "getopt"
      fully_qualified_name: "distutils.fancy_getopt.FancyGetopt.getopt"
      return_annotation {
        pretty_printed_name: "TypeAlias[Tuple[builtins.list[builtins.str],distutils.fancy_getopt.OptionDummy]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Tuple[builtins.list[builtins.str],distutils.fancy_getopt.OptionDummy]"
          kind: TUPLE
          args {
            pretty_printed_name: "builtins.list[builtins.str]"
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            fully_qualified_name: "builtins.list"
          }
          args {
            pretty_printed_name: "distutils.fancy_getopt.OptionDummy"
            fully_qualified_name: "distutils.fancy_getopt.OptionDummy"
          }
        }
        fully_qualified_name: "distutils.fancy_getopt._GR"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "distutils.fancy_getopt.FancyGetopt"
          fully_qualified_name: "distutils.fancy_getopt.FancyGetopt"
        }
      }
      parameters {
        name: "args"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.list[builtins.str],None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.list[builtins.str]"
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            fully_qualified_name: "builtins.list"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "getopt"
      fully_qualified_name: "distutils.fancy_getopt.FancyGetopt.getopt"
      return_annotation {
        pretty_printed_name: "builtins.list[builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "builtins.list"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "distutils.fancy_getopt.FancyGetopt"
          fully_qualified_name: "distutils.fancy_getopt.FancyGetopt"
        }
      }
      parameters {
        name: "args"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.list[builtins.str],None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.list[builtins.str]"
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            fully_qualified_name: "builtins.list"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      parameters {
        name: "object"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Any"
          kind: ANY
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "OptionDummy"
  fully_qualified_name: "distutils.fancy_getopt.OptionDummy"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "distutils.fancy_getopt.OptionDummy.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "distutils.fancy_getopt.OptionDummy"
        fully_qualified_name: "distutils.fancy_getopt.OptionDummy"
      }
    }
    parameters {
      name: "options"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "typing.Iterable"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "fancy_getopt"
  fully_qualified_name: "distutils.fancy_getopt.fancy_getopt"
  return_annotation {
    pretty_printed_name: "Union[builtins.list[builtins.str],TypeAlias[Tuple[builtins.list[builtins.str],distutils.fancy_getopt.OptionDummy]]]"
    kind: UNION
    args {
      pretty_printed_name: "builtins.list[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "builtins.list"
    }
    args {
      pretty_printed_name: "TypeAlias[Tuple[builtins.list[builtins.str],distutils.fancy_getopt.OptionDummy]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Tuple[builtins.list[builtins.str],distutils.fancy_getopt.OptionDummy]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.list[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "builtins.list"
        }
        args {
          pretty_printed_name: "distutils.fancy_getopt.OptionDummy"
          fully_qualified_name: "distutils.fancy_getopt.OptionDummy"
        }
      }
      fully_qualified_name: "distutils.fancy_getopt._GR"
    }
  }
  parameters {
    name: "options"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.list[TypeAlias[Tuple[builtins.str,Union[builtins.str,None],builtins.str]]]"
      args {
        pretty_printed_name: "TypeAlias[Tuple[builtins.str,Union[builtins.str,None],builtins.str]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Tuple[builtins.str,Union[builtins.str,None],builtins.str]"
          kind: TUPLE
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "Union[builtins.str,None]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "None"
              kind: NONE
            }
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        fully_qualified_name: "distutils.fancy_getopt._Option"
      }
      fully_qualified_name: "builtins.list"
    }
  }
  parameters {
    name: "negative_opt"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "typing.Mapping[TypeAlias[Tuple[builtins.str,Union[builtins.str,None],builtins.str]],TypeAlias[Tuple[builtins.str,Union[builtins.str,None],builtins.str]]]"
      args {
        pretty_printed_name: "TypeAlias[Tuple[builtins.str,Union[builtins.str,None],builtins.str]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Tuple[builtins.str,Union[builtins.str,None],builtins.str]"
          kind: TUPLE
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "Union[builtins.str,None]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "None"
              kind: NONE
            }
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        fully_qualified_name: "distutils.fancy_getopt._Option"
      }
      args {
        pretty_printed_name: "TypeAlias[Tuple[builtins.str,Union[builtins.str,None],builtins.str]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Tuple[builtins.str,Union[builtins.str,None],builtins.str]"
          kind: TUPLE
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "Union[builtins.str,None]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "None"
              kind: NONE
            }
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        fully_qualified_name: "distutils.fancy_getopt._Option"
      }
      fully_qualified_name: "typing.Mapping"
    }
  }
  parameters {
    name: "object"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  parameters {
    name: "args"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.list[builtins.str],None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.list[builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "builtins.list"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "wrap_text"
  fully_qualified_name: "distutils.fancy_getopt.wrap_text"
  return_annotation {
    pretty_printed_name: "builtins.list[builtins.str]"
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    fully_qualified_name: "builtins.list"
  }
  parameters {
    name: "text"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  parameters {
    name: "width"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
