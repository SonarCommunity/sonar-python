fully_qualified_name: "xml.dom.minicompat"
classes {
  name: "NodeList"
  fully_qualified_name: "xml.dom.minicompat.NodeList"
  super_classes: "builtins.list"
  methods {
    name: "item"
    fully_qualified_name: "xml.dom.minicompat.NodeList.item"
    return_annotation {
      pretty_printed_name: "Union[xml.dom.minicompat._T,None]"
      kind: UNION
      args {
        pretty_printed_name: "xml.dom.minicompat._T"
        kind: TYPE_VAR
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minicompat.NodeList[xml.dom.minicompat._T]"
        args {
          pretty_printed_name: "xml.dom.minicompat._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "xml.dom.minicompat.NodeList"
      }
    }
    parameters {
      name: "index"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "length"
    fully_qualified_name: "xml.dom.minicompat.NodeList.length"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minicompat.NodeList[xml.dom.minicompat._T]"
        args {
          pretty_printed_name: "xml.dom.minicompat._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "xml.dom.minicompat.NodeList"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  is_generic: true
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "length"
    fully_qualified_name: "xml.dom.minicompat.NodeList.length"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "27"
  }
}
classes {
  name: "EmptyNodeList"
  fully_qualified_name: "xml.dom.minicompat.EmptyNodeList"
  super_classes: "builtins.tuple"
  methods {
    name: "item"
    fully_qualified_name: "xml.dom.minicompat.EmptyNodeList.item"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minicompat.EmptyNodeList"
        fully_qualified_name: "xml.dom.minicompat.EmptyNodeList"
      }
    }
    parameters {
      name: "index"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
  }
  methods {
    name: "item"
    fully_qualified_name: "xml.dom.minicompat.EmptyNodeList.item"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Tuple[]"
        kind: TUPLE
      }
    }
    parameters {
      name: "index"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__add__"
    fully_qualified_name: "xml.dom.minicompat.EmptyNodeList.__add__"
    return_annotation {
      pretty_printed_name: "xml.dom.minicompat.NodeList[xml.dom.minicompat._T]"
      args {
        pretty_printed_name: "xml.dom.minicompat._T"
        kind: TYPE_VAR
      }
      fully_qualified_name: "xml.dom.minicompat.NodeList"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "xml.dom.minicompat.EmptyNodeList"
        fully_qualified_name: "xml.dom.minicompat.EmptyNodeList"
      }
    }
    parameters {
      name: "other"
      type_annotation {
        pretty_printed_name: "typing.Iterable[xml.dom.minicompat._T]"
        args {
          pretty_printed_name: "xml.dom.minicompat._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
  }
  methods {
    name: "__add__"
    fully_qualified_name: "xml.dom.minicompat.EmptyNodeList.__add__"
    return_annotation {
      pretty_printed_name: "xml.dom.minicompat.NodeList[xml.dom.minicompat._T]"
      args {
        pretty_printed_name: "xml.dom.minicompat._T"
        kind: TYPE_VAR
      }
      fully_qualified_name: "xml.dom.minicompat.NodeList"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "Tuple[]"
        kind: TUPLE
      }
    }
    parameters {
      name: "other"
      type_annotation {
        pretty_printed_name: "typing.Iterable[xml.dom.minicompat._T]"
        args {
          pretty_printed_name: "xml.dom.minicompat._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__radd__"
    fully_qualified_name: "xml.dom.minicompat.EmptyNodeList.__radd__"
    return_annotation {
      pretty_printed_name: "xml.dom.minicompat.NodeList[xml.dom.minicompat._T]"
      args {
        pretty_printed_name: "xml.dom.minicompat._T"
        kind: TYPE_VAR
      }
      fully_qualified_name: "xml.dom.minicompat.NodeList"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "xml.dom.minicompat.EmptyNodeList"
        fully_qualified_name: "xml.dom.minicompat.EmptyNodeList"
      }
    }
    parameters {
      name: "other"
      type_annotation {
        pretty_printed_name: "typing.Iterable[xml.dom.minicompat._T]"
        args {
          pretty_printed_name: "xml.dom.minicompat._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
  }
  methods {
    name: "__radd__"
    fully_qualified_name: "xml.dom.minicompat.EmptyNodeList.__radd__"
    return_annotation {
      pretty_printed_name: "xml.dom.minicompat.NodeList[xml.dom.minicompat._T]"
      args {
        pretty_printed_name: "xml.dom.minicompat._T"
        kind: TYPE_VAR
      }
      fully_qualified_name: "xml.dom.minicompat.NodeList"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "Tuple[]"
        kind: TUPLE
      }
    }
    parameters {
      name: "other"
      type_annotation {
        pretty_printed_name: "typing.Iterable[xml.dom.minicompat._T]"
        args {
          pretty_printed_name: "xml.dom.minicompat._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "length"
    fully_qualified_name: "xml.dom.minicompat.EmptyNodeList.length"
    return_annotation {
      pretty_printed_name: "Literal[builtins.int]"
      kind: LITERAL
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xml.dom.minicompat.EmptyNodeList"
        fully_qualified_name: "xml.dom.minicompat.EmptyNodeList"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
  }
  methods {
    name: "length"
    fully_qualified_name: "xml.dom.minicompat.EmptyNodeList.length"
    return_annotation {
      pretty_printed_name: "Literal[builtins.int]"
      kind: LITERAL
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Tuple[]"
        kind: TUPLE
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "length"
    fully_qualified_name: "xml.dom.minicompat.EmptyNodeList.length"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "27"
  }
}
functions {
  name: "defproperty"
  fully_qualified_name: "xml.dom.minicompat.defproperty"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "klass"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Type[Any]"
      kind: TYPE
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
  }
  parameters {
    name: "name"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  parameters {
    name: "doc"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  valid_for: "27"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "defproperty"
  fully_qualified_name: "xml.dom.minicompat.defproperty"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "klass"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.type"
      fully_qualified_name: "builtins.type"
    }
  }
  parameters {
    name: "name"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  parameters {
    name: "doc"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
}
vars {
  name: "StringTypes"
  fully_qualified_name: "xml.dom.minicompat.StringTypes"
  type_annotation {
    pretty_printed_name: "Tuple[Type[builtins.str]]"
    kind: TUPLE
    args {
      pretty_printed_name: "Type[builtins.str]"
      kind: TYPE
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  valid_for: "27"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "StringTypes"
  fully_qualified_name: "xml.dom.minicompat.StringTypes"
  type_annotation {
    pretty_printed_name: "Tuple[builtins.type]"
    kind: TUPLE
    args {
      pretty_printed_name: "builtins.type"
      fully_qualified_name: "builtins.type"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
}
vars {
  name: "__all__"
  fully_qualified_name: "xml.dom.minicompat.__all__"
  type_annotation {
    pretty_printed_name: "builtins.list[builtins.str]"
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    fully_qualified_name: "builtins.list"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
