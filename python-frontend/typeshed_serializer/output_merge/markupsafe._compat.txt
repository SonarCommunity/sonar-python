fully_qualified_name: "markupsafe._compat"
functions {
  name: "iteritems"
  fully_qualified_name: "markupsafe._compat.iteritems"
  return_annotation {
    pretty_printed_name: "typing.Iterator[Tuple[markupsafe._compat._K,markupsafe._compat._V]]"
    args {
      pretty_printed_name: "Tuple[markupsafe._compat._K,markupsafe._compat._V]"
      kind: TUPLE
      args {
        pretty_printed_name: "markupsafe._compat._K"
        kind: TYPE_VAR
      }
      args {
        pretty_printed_name: "markupsafe._compat._V"
        kind: TYPE_VAR
      }
    }
    fully_qualified_name: "typing.Iterator"
  }
  parameters {
    name: "d"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "typing.Mapping[markupsafe._compat._K,markupsafe._compat._V]"
      args {
        pretty_printed_name: "markupsafe._compat._K"
        kind: TYPE_VAR
      }
      args {
        pretty_printed_name: "markupsafe._compat._V"
        kind: TYPE_VAR
      }
      fully_qualified_name: "typing.Mapping"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "PY2"
  fully_qualified_name: "markupsafe._compat.PY2"
  type_annotation {
    pretty_printed_name: "builtins.bool"
    fully_qualified_name: "builtins.bool"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "string_types"
  fully_qualified_name: "markupsafe._compat.string_types"
  type_annotation {
    pretty_printed_name: "Tuple[CallableType[abc.ABCMeta]]"
    kind: TUPLE
    args {
      pretty_printed_name: "CallableType[abc.ABCMeta]"
      kind: CALLABLE
      args {
        pretty_printed_name: "abc.ABCMeta"
        fully_qualified_name: "abc.ABCMeta"
      }
      fully_qualified_name: "abc.ABCMeta"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "unichr"
  fully_qualified_name: "markupsafe._compat.unichr"
  type_annotation {
    pretty_printed_name: "CallableType[builtins.function]"
    kind: CALLABLE
    args {
      pretty_printed_name: "builtins.function"
      fully_qualified_name: "builtins.function"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "int_types"
  fully_qualified_name: "markupsafe._compat.int_types"
  type_annotation {
    pretty_printed_name: "Tuple[CallableType[builtins.type]]"
    kind: TUPLE
    args {
      pretty_printed_name: "CallableType[builtins.type]"
      kind: CALLABLE
      args {
        pretty_printed_name: "builtins.type"
        fully_qualified_name: "builtins.type"
      }
      fully_qualified_name: "builtins.type"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
