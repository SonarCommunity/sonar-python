fully_qualified_name: "abc"
classes {
  name: "ABCMeta"
  fully_qualified_name: "abc.ABCMeta"
  super_classes: "builtins.type"
  methods {
    name: "__init__"
    fully_qualified_name: "abc.ABCMeta.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "abc.ABCMeta"
        fully_qualified_name: "abc.ABCMeta"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "bases"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.tuple[builtins.type]"
        args {
          pretty_printed_name: "builtins.type"
          fully_qualified_name: "builtins.type"
        }
        fully_qualified_name: "builtins.tuple"
      }
    }
    parameters {
      name: "namespace"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.dict[builtins.str,Any]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "builtins.dict"
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__instancecheck__"
    fully_qualified_name: "abc.ABCMeta.__instancecheck__"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "abc.ABCMeta"
        fully_qualified_name: "abc.ABCMeta"
      }
    }
    parameters {
      name: "instance"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__subclasscheck__"
    fully_qualified_name: "abc.ABCMeta.__subclasscheck__"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "abc.ABCMeta"
        fully_qualified_name: "abc.ABCMeta"
      }
    }
    parameters {
      name: "subclass"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "_dump_registry"
    fully_qualified_name: "abc.ABCMeta._dump_registry"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "abc.ABCMeta"
        fully_qualified_name: "abc.ABCMeta"
      }
    }
    parameters {
      name: "file"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[_typeshed.SupportsWrite[Any],None]"
        kind: UNION
        args {
          pretty_printed_name: "_typeshed.SupportsWrite[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "_typeshed.SupportsWrite"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "_dump_registry"
    fully_qualified_name: "abc.ABCMeta._dump_registry"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "abc.ABCMeta"
        fully_qualified_name: "abc.ABCMeta"
      }
    }
    parameters {
      name: "file"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[_typeshed.SupportsWrite[builtins.str],None]"
        kind: UNION
        args {
          pretty_printed_name: "_typeshed.SupportsWrite[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "_typeshed.SupportsWrite"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "register"
    fully_qualified_name: "abc.ABCMeta.register"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "abc.ABCMeta"
        fully_qualified_name: "abc.ABCMeta"
      }
    }
    parameters {
      name: "subclass"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[Any]"
        kind: TYPE
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
      }
    }
    valid_for: "27"
  }
  methods {
    name: "register"
    fully_qualified_name: "abc.ABCMeta.register"
    return_annotation {
      pretty_printed_name: "Type[abc._T]"
      kind: TYPE
      args {
        pretty_printed_name: "abc._T"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "abc.ABCMeta"
        fully_qualified_name: "abc.ABCMeta"
      }
    }
    parameters {
      name: "subclass"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[abc._T]"
        kind: TYPE
        args {
          pretty_printed_name: "abc._T"
          kind: TYPE_VAR
        }
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "__abstractmethods__"
    fully_qualified_name: "abc.ABCMeta.__abstractmethods__"
    type_annotation {
      pretty_printed_name: "builtins.frozenset[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "builtins.frozenset"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "_abc_cache"
    fully_qualified_name: "abc.ABCMeta._abc_cache"
    type_annotation {
      pretty_printed_name: "_weakrefset.WeakSet[Any]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "_weakrefset.WeakSet"
    }
    valid_for: "27"
  }
  attributes {
    name: "_abc_invalidation_counter"
    fully_qualified_name: "abc.ABCMeta._abc_invalidation_counter"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "27"
  }
  attributes {
    name: "_abc_negative_cache"
    fully_qualified_name: "abc.ABCMeta._abc_negative_cache"
    type_annotation {
      pretty_printed_name: "_weakrefset.WeakSet[Any]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "_weakrefset.WeakSet"
    }
    valid_for: "27"
  }
  attributes {
    name: "_abc_negative_cache_version"
    fully_qualified_name: "abc.ABCMeta._abc_negative_cache_version"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "27"
  }
  attributes {
    name: "_abc_registry"
    fully_qualified_name: "abc.ABCMeta._abc_registry"
    type_annotation {
      pretty_printed_name: "_weakrefset.WeakSet[Any]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "_weakrefset.WeakSet"
    }
    valid_for: "27"
  }
}
classes {
  name: "abstractproperty"
  fully_qualified_name: "abc.abstractproperty"
  super_classes: "builtins.object"
  methods {
    name: "__new__"
    fully_qualified_name: "abc.abstractproperty.__new__"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[abc.abstractproperty]"
        kind: TYPE
        args {
          pretty_printed_name: "abc.abstractproperty"
          fully_qualified_name: "abc.abstractproperty"
        }
      }
    }
    parameters {
      name: "func"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "27"
  }
  valid_for: "27"
  attributes {
    name: "__isabstractmethod__"
    fully_qualified_name: "abc.abstractproperty.__isabstractmethod__"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    valid_for: "27"
  }
  attributes {
    name: "doc"
    fully_qualified_name: "abc.abstractproperty.doc"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "27"
  }
  attributes {
    name: "fdel"
    fully_qualified_name: "abc.abstractproperty.fdel"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "27"
  }
  attributes {
    name: "fget"
    fully_qualified_name: "abc.abstractproperty.fget"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "27"
  }
  attributes {
    name: "fset"
    fully_qualified_name: "abc.abstractproperty.fset"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "27"
  }
}
classes {
  name: "abstractproperty"
  fully_qualified_name: "abc.abstractproperty"
  super_classes: "builtins.property"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "ABC"
  fully_qualified_name: "abc.ABC"
  super_classes: "builtins.object"
  has_metaclass: true
  metaclass_name: "abc.ABCMeta"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "abstractmethod"
  fully_qualified_name: "abc.abstractmethod"
  return_annotation {
    pretty_printed_name: "abc._FuncT"
    kind: TYPE_VAR
  }
  parameters {
    name: "funcobj"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "abc._FuncT"
      kind: TYPE_VAR
    }
  }
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "abstractstaticmethod"
  fully_qualified_name: "abc.abstractstaticmethod"
  return_annotation {
    pretty_printed_name: "abc._FuncT"
    kind: TYPE_VAR
  }
  parameters {
    name: "callable"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "abc._FuncT"
      kind: TYPE_VAR
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "abstractclassmethod"
  fully_qualified_name: "abc.abstractclassmethod"
  return_annotation {
    pretty_printed_name: "abc._FuncT"
    kind: TYPE_VAR
  }
  parameters {
    name: "callable"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "abc._FuncT"
      kind: TYPE_VAR
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "get_cache_token"
  fully_qualified_name: "abc.get_cache_token"
  return_annotation {
    pretty_printed_name: "builtins.object"
    fully_qualified_name: "builtins.object"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
