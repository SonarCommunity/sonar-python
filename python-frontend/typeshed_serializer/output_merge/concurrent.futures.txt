fully_qualified_name: "concurrent.futures"
classes {
  name: "CancelledError"
  fully_qualified_name: "concurrent.futures._base.CancelledError"
  super_classes: "concurrent.futures._base.Error"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "Executor"
  fully_qualified_name: "concurrent.futures._base.Executor"
  super_classes: "builtins.object"
  methods {
    name: "submit"
    fully_qualified_name: "concurrent.futures._base.Executor.submit"
    return_annotation {
      pretty_printed_name: "concurrent.futures._base.Future[concurrent.futures._base._T]"
      args {
        pretty_printed_name: "concurrent.futures._base._T"
        kind: TYPE_VAR
      }
      fully_qualified_name: "concurrent.futures._base.Future"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "concurrent.futures._base.Executor"
        fully_qualified_name: "concurrent.futures._base.Executor"
      }
    }
    parameters {
      name: "fn"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "kwargs"
      kind: VAR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
  }
  methods {
    name: "submit"
    fully_qualified_name: "concurrent.futures._base.Executor.submit"
    return_annotation {
      pretty_printed_name: "concurrent.futures._base.Future[concurrent.futures._base._T]"
      args {
        pretty_printed_name: "concurrent.futures._base._T"
        kind: TYPE_VAR
      }
      fully_qualified_name: "concurrent.futures._base.Future"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "concurrent.futures._base.Executor"
        fully_qualified_name: "concurrent.futures._base.Executor"
      }
    }
    parameters {
      name: "__fn"
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "kwargs"
      kind: VAR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "map"
    fully_qualified_name: "concurrent.futures._base.Executor.map"
    return_annotation {
      pretty_printed_name: "typing.Iterator[concurrent.futures._base._T]"
      args {
        pretty_printed_name: "concurrent.futures._base._T"
        kind: TYPE_VAR
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "concurrent.futures._base.Executor"
        fully_qualified_name: "concurrent.futures._base.Executor"
      }
    }
    parameters {
      name: "fn"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    parameters {
      name: "iterables"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "typing.Iterable[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    parameters {
      name: "timeout"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[builtins.float,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "chunksize"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "shutdown"
    fully_qualified_name: "concurrent.futures._base.Executor.shutdown"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "concurrent.futures._base.Executor"
        fully_qualified_name: "concurrent.futures._base.Executor"
      }
    }
    parameters {
      name: "wait"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
  }
  methods {
    name: "shutdown"
    fully_qualified_name: "concurrent.futures._base.Executor.shutdown"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "concurrent.futures._base.Executor"
        fully_qualified_name: "concurrent.futures._base.Executor"
      }
    }
    parameters {
      name: "wait"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    parameters {
      name: "cancel_futures"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__enter__"
    fully_qualified_name: "concurrent.futures._base.Executor.__enter__"
    return_annotation {
      pretty_printed_name: "concurrent.futures._base._T"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "concurrent.futures._base._T"
        kind: TYPE_VAR
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__exit__"
    fully_qualified_name: "concurrent.futures._base.Executor.__exit__"
    return_annotation {
      pretty_printed_name: "Union[builtins.bool,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "concurrent.futures._base.Executor"
        fully_qualified_name: "concurrent.futures._base.Executor"
      }
    }
    parameters {
      name: "exc_type"
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "exc_val"
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "exc_tb"
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "Future"
  fully_qualified_name: "concurrent.futures._base.Future"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "concurrent.futures._base.Future.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "concurrent.futures._base.Future[concurrent.futures._base._T]"
        args {
          pretty_printed_name: "concurrent.futures._base._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "concurrent.futures._base.Future"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "cancel"
    fully_qualified_name: "concurrent.futures._base.Future.cancel"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "concurrent.futures._base.Future[concurrent.futures._base._T]"
        args {
          pretty_printed_name: "concurrent.futures._base._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "concurrent.futures._base.Future"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "cancelled"
    fully_qualified_name: "concurrent.futures._base.Future.cancelled"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "concurrent.futures._base.Future[concurrent.futures._base._T]"
        args {
          pretty_printed_name: "concurrent.futures._base._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "concurrent.futures._base.Future"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "running"
    fully_qualified_name: "concurrent.futures._base.Future.running"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "concurrent.futures._base.Future[concurrent.futures._base._T]"
        args {
          pretty_printed_name: "concurrent.futures._base._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "concurrent.futures._base.Future"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "done"
    fully_qualified_name: "concurrent.futures._base.Future.done"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "concurrent.futures._base.Future[concurrent.futures._base._T]"
        args {
          pretty_printed_name: "concurrent.futures._base._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "concurrent.futures._base.Future"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "add_done_callback"
    fully_qualified_name: "concurrent.futures._base.Future.add_done_callback"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "concurrent.futures._base.Future[concurrent.futures._base._T]"
        args {
          pretty_printed_name: "concurrent.futures._base._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "concurrent.futures._base.Future"
      }
    }
    parameters {
      name: "fn"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "result"
    fully_qualified_name: "concurrent.futures._base.Future.result"
    return_annotation {
      pretty_printed_name: "concurrent.futures._base._T"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "concurrent.futures._base.Future[concurrent.futures._base._T]"
        args {
          pretty_printed_name: "concurrent.futures._base._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "concurrent.futures._base.Future"
      }
    }
    parameters {
      name: "timeout"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.float,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "set_running_or_notify_cancel"
    fully_qualified_name: "concurrent.futures._base.Future.set_running_or_notify_cancel"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "concurrent.futures._base.Future[concurrent.futures._base._T]"
        args {
          pretty_printed_name: "concurrent.futures._base._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "concurrent.futures._base.Future"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "set_result"
    fully_qualified_name: "concurrent.futures._base.Future.set_result"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "concurrent.futures._base.Future[concurrent.futures._base._T]"
        args {
          pretty_printed_name: "concurrent.futures._base._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "concurrent.futures._base.Future"
      }
    }
    parameters {
      name: "result"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "concurrent.futures._base._T"
        kind: TYPE_VAR
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "exception"
    fully_qualified_name: "concurrent.futures._base.Future.exception"
    return_annotation {
      pretty_printed_name: "Union[builtins.BaseException,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.BaseException"
        fully_qualified_name: "builtins.BaseException"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "concurrent.futures._base.Future[concurrent.futures._base._T]"
        args {
          pretty_printed_name: "concurrent.futures._base._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "concurrent.futures._base.Future"
      }
    }
    parameters {
      name: "timeout"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.float,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "set_exception"
    fully_qualified_name: "concurrent.futures._base.Future.set_exception"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "concurrent.futures._base.Future[concurrent.futures._base._T]"
        args {
          pretty_printed_name: "concurrent.futures._base._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "concurrent.futures._base.Future"
      }
    }
    parameters {
      name: "exception"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.BaseException,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.BaseException"
          fully_qualified_name: "builtins.BaseException"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__class_getitem__"
    fully_qualified_name: "concurrent.futures._base.Future.__class_getitem__"
    return_annotation {
      pretty_printed_name: "types.GenericAlias"
      fully_qualified_name: "types.GenericAlias"
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[concurrent.futures._base.Future[concurrent.futures._base._T]]"
        kind: TYPE
        args {
          pretty_printed_name: "concurrent.futures._base.Future[concurrent.futures._base._T]"
          args {
            pretty_printed_name: "concurrent.futures._base._T"
            kind: TYPE_VAR
          }
          fully_qualified_name: "concurrent.futures._base.Future"
        }
      }
    }
    parameters {
      name: "item"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    is_class_method: true
    valid_for: "39"
    valid_for: "310"
  }
  is_generic: true
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "TimeoutError"
  fully_qualified_name: "concurrent.futures._base.TimeoutError"
  super_classes: "concurrent.futures._base.Error"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "ProcessPoolExecutor"
  fully_qualified_name: "concurrent.futures.process.ProcessPoolExecutor"
  super_classes: "concurrent.futures._base.Executor"
  methods {
    name: "__init__"
    fully_qualified_name: "concurrent.futures.process.ProcessPoolExecutor.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "concurrent.futures.process.ProcessPoolExecutor"
        fully_qualified_name: "concurrent.futures.process.ProcessPoolExecutor"
      }
    }
    parameters {
      name: "max_workers"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
  }
  methods {
    name: "__init__"
    fully_qualified_name: "concurrent.futures.process.ProcessPoolExecutor.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "concurrent.futures.process.ProcessPoolExecutor"
        fully_qualified_name: "concurrent.futures.process.ProcessPoolExecutor"
      }
    }
    parameters {
      name: "max_workers"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "mp_context"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[multiprocessing.context.BaseContext,None]"
        kind: UNION
        args {
          pretty_printed_name: "multiprocessing.context.BaseContext"
          fully_qualified_name: "multiprocessing.context.BaseContext"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "initializer"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[CallableType[builtins.function],None]"
        kind: UNION
        args {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "initargs"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.tuple[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "builtins.tuple"
      }
      has_default: true
    }
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "ThreadPoolExecutor"
  fully_qualified_name: "concurrent.futures.thread.ThreadPoolExecutor"
  super_classes: "concurrent.futures._base.Executor"
  methods {
    name: "__init__"
    fully_qualified_name: "concurrent.futures.thread.ThreadPoolExecutor.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "concurrent.futures.thread.ThreadPoolExecutor"
        fully_qualified_name: "concurrent.futures.thread.ThreadPoolExecutor"
      }
    }
    parameters {
      name: "max_workers"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "thread_name_prefix"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
  }
  methods {
    name: "__init__"
    fully_qualified_name: "concurrent.futures.thread.ThreadPoolExecutor.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "concurrent.futures.thread.ThreadPoolExecutor"
        fully_qualified_name: "concurrent.futures.thread.ThreadPoolExecutor"
      }
    }
    parameters {
      name: "max_workers"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "thread_name_prefix"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      has_default: true
    }
    parameters {
      name: "initializer"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[CallableType[builtins.function],None]"
        kind: UNION
        args {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "initargs"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.tuple[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "builtins.tuple"
      }
      has_default: true
    }
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "_work_queue"
    fully_qualified_name: "concurrent.futures.thread.ThreadPoolExecutor._work_queue"
    type_annotation {
      pretty_printed_name: "queue.Queue[Any]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "queue.Queue"
    }
    valid_for: "35"
    valid_for: "36"
  }
  attributes {
    name: "_work_queue"
    fully_qualified_name: "concurrent.futures.thread.ThreadPoolExecutor._work_queue"
    type_annotation {
      pretty_printed_name: "queue.SimpleQueue[Any]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "queue.SimpleQueue"
    }
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "BrokenExecutor"
  fully_qualified_name: "concurrent.futures._base.BrokenExecutor"
  super_classes: "builtins.RuntimeError"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "InvalidStateError"
  fully_qualified_name: "concurrent.futures._base.InvalidStateError"
  super_classes: "concurrent.futures._base.Error"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "as_completed"
  fully_qualified_name: "concurrent.futures._base.as_completed"
  return_annotation {
    pretty_printed_name: "typing.Iterator[concurrent.futures._base.Future[concurrent.futures._base._T]]"
    args {
      pretty_printed_name: "concurrent.futures._base.Future[concurrent.futures._base._T]"
      args {
        pretty_printed_name: "concurrent.futures._base._T"
        kind: TYPE_VAR
      }
      fully_qualified_name: "concurrent.futures._base.Future"
    }
    fully_qualified_name: "typing.Iterator"
  }
  parameters {
    name: "fs"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "typing.Iterable[concurrent.futures._base.Future[concurrent.futures._base._T]]"
      args {
        pretty_printed_name: "concurrent.futures._base.Future[concurrent.futures._base._T]"
        args {
          pretty_printed_name: "concurrent.futures._base._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "concurrent.futures._base.Future"
      }
      fully_qualified_name: "typing.Iterable"
    }
  }
  parameters {
    name: "timeout"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.float,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "wait"
  fully_qualified_name: "concurrent.futures._base.wait"
  return_annotation {
    pretty_printed_name: "concurrent.futures._base.DoneAndNotDoneFutures[concurrent.futures._base._T]"
    args {
      pretty_printed_name: "concurrent.futures._base._T"
      kind: TYPE_VAR
    }
    fully_qualified_name: "concurrent.futures._base.DoneAndNotDoneFutures"
  }
  parameters {
    name: "fs"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "typing.Iterable[concurrent.futures._base.Future[concurrent.futures._base._T]]"
      args {
        pretty_printed_name: "concurrent.futures._base.Future[concurrent.futures._base._T]"
        args {
          pretty_printed_name: "concurrent.futures._base._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "concurrent.futures._base.Future"
      }
      fully_qualified_name: "typing.Iterable"
    }
  }
  parameters {
    name: "timeout"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.float,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "return_when"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "ALL_COMPLETED"
  fully_qualified_name: "concurrent.futures._base.ALL_COMPLETED"
  type_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "FIRST_COMPLETED"
  fully_qualified_name: "concurrent.futures._base.FIRST_COMPLETED"
  type_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "FIRST_EXCEPTION"
  fully_qualified_name: "concurrent.futures._base.FIRST_EXCEPTION"
  type_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
