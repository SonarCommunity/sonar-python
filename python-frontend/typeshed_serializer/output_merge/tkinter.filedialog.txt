fully_qualified_name: "tkinter.filedialog"
classes {
  name: "FileDialog"
  fully_qualified_name: "tkinter.filedialog.FileDialog"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "tkinter.filedialog.FileDialog.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "tkinter.filedialog.FileDialog"
        fully_qualified_name: "tkinter.filedialog.FileDialog"
      }
    }
    parameters {
      name: "master"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "title"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "go"
    fully_qualified_name: "tkinter.filedialog.FileDialog.go"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "tkinter.filedialog.FileDialog"
        fully_qualified_name: "tkinter.filedialog.FileDialog"
      }
    }
    parameters {
      name: "dir_or_file"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
      has_default: true
    }
    parameters {
      name: "pattern"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      has_default: true
    }
    parameters {
      name: "default"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      has_default: true
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "quit"
    fully_qualified_name: "tkinter.filedialog.FileDialog.quit"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "tkinter.filedialog.FileDialog"
        fully_qualified_name: "tkinter.filedialog.FileDialog"
      }
    }
    parameters {
      name: "how"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "dirs_double_event"
    fully_qualified_name: "tkinter.filedialog.FileDialog.dirs_double_event"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "tkinter.filedialog.FileDialog"
        fully_qualified_name: "tkinter.filedialog.FileDialog"
      }
    }
    parameters {
      name: "event"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "dirs_select_event"
    fully_qualified_name: "tkinter.filedialog.FileDialog.dirs_select_event"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "tkinter.filedialog.FileDialog"
        fully_qualified_name: "tkinter.filedialog.FileDialog"
      }
    }
    parameters {
      name: "event"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "files_double_event"
    fully_qualified_name: "tkinter.filedialog.FileDialog.files_double_event"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "tkinter.filedialog.FileDialog"
        fully_qualified_name: "tkinter.filedialog.FileDialog"
      }
    }
    parameters {
      name: "event"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "files_select_event"
    fully_qualified_name: "tkinter.filedialog.FileDialog.files_select_event"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "tkinter.filedialog.FileDialog"
        fully_qualified_name: "tkinter.filedialog.FileDialog"
      }
    }
    parameters {
      name: "event"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "ok_event"
    fully_qualified_name: "tkinter.filedialog.FileDialog.ok_event"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "tkinter.filedialog.FileDialog"
        fully_qualified_name: "tkinter.filedialog.FileDialog"
      }
    }
    parameters {
      name: "event"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "ok_command"
    fully_qualified_name: "tkinter.filedialog.FileDialog.ok_command"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "tkinter.filedialog.FileDialog"
        fully_qualified_name: "tkinter.filedialog.FileDialog"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "filter_command"
    fully_qualified_name: "tkinter.filedialog.FileDialog.filter_command"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "tkinter.filedialog.FileDialog"
        fully_qualified_name: "tkinter.filedialog.FileDialog"
      }
    }
    parameters {
      name: "event"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "get_filter"
    fully_qualified_name: "tkinter.filedialog.FileDialog.get_filter"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "get_selection"
    fully_qualified_name: "tkinter.filedialog.FileDialog.get_selection"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "cancel_command"
    fully_qualified_name: "tkinter.filedialog.FileDialog.cancel_command"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "tkinter.filedialog.FileDialog"
        fully_qualified_name: "tkinter.filedialog.FileDialog"
      }
    }
    parameters {
      name: "event"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "set_filter"
    fully_qualified_name: "tkinter.filedialog.FileDialog.set_filter"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "tkinter.filedialog.FileDialog"
        fully_qualified_name: "tkinter.filedialog.FileDialog"
      }
    }
    parameters {
      name: "dir"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "pat"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "set_selection"
    fully_qualified_name: "tkinter.filedialog.FileDialog.set_selection"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "tkinter.filedialog.FileDialog"
        fully_qualified_name: "tkinter.filedialog.FileDialog"
      }
    }
    parameters {
      name: "file"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "title"
    fully_qualified_name: "tkinter.filedialog.FileDialog.title"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "master"
    fully_qualified_name: "tkinter.filedialog.FileDialog.master"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "directory"
    fully_qualified_name: "tkinter.filedialog.FileDialog.directory"
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "top"
    fully_qualified_name: "tkinter.filedialog.FileDialog.top"
    type_annotation {
      pretty_printed_name: "tkinter.Toplevel"
      fully_qualified_name: "tkinter.Toplevel"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "botframe"
    fully_qualified_name: "tkinter.filedialog.FileDialog.botframe"
    type_annotation {
      pretty_printed_name: "tkinter.Frame"
      fully_qualified_name: "tkinter.Frame"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "selection"
    fully_qualified_name: "tkinter.filedialog.FileDialog.selection"
    type_annotation {
      pretty_printed_name: "tkinter.Entry"
      fully_qualified_name: "tkinter.Entry"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "filter"
    fully_qualified_name: "tkinter.filedialog.FileDialog.filter"
    type_annotation {
      pretty_printed_name: "tkinter.Entry"
      fully_qualified_name: "tkinter.Entry"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "midframe"
    fully_qualified_name: "tkinter.filedialog.FileDialog.midframe"
    type_annotation {
      pretty_printed_name: "tkinter.Entry"
      fully_qualified_name: "tkinter.Entry"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "filesbar"
    fully_qualified_name: "tkinter.filedialog.FileDialog.filesbar"
    type_annotation {
      pretty_printed_name: "tkinter.Scrollbar"
      fully_qualified_name: "tkinter.Scrollbar"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "files"
    fully_qualified_name: "tkinter.filedialog.FileDialog.files"
    type_annotation {
      pretty_printed_name: "tkinter.Listbox"
      fully_qualified_name: "tkinter.Listbox"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "dirsbar"
    fully_qualified_name: "tkinter.filedialog.FileDialog.dirsbar"
    type_annotation {
      pretty_printed_name: "tkinter.Scrollbar"
      fully_qualified_name: "tkinter.Scrollbar"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "dirs"
    fully_qualified_name: "tkinter.filedialog.FileDialog.dirs"
    type_annotation {
      pretty_printed_name: "tkinter.Listbox"
      fully_qualified_name: "tkinter.Listbox"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "ok_button"
    fully_qualified_name: "tkinter.filedialog.FileDialog.ok_button"
    type_annotation {
      pretty_printed_name: "tkinter.Button"
      fully_qualified_name: "tkinter.Button"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "filter_button"
    fully_qualified_name: "tkinter.filedialog.FileDialog.filter_button"
    type_annotation {
      pretty_printed_name: "tkinter.Button"
      fully_qualified_name: "tkinter.Button"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "cancel_button"
    fully_qualified_name: "tkinter.filedialog.FileDialog.cancel_button"
    type_annotation {
      pretty_printed_name: "tkinter.Button"
      fully_qualified_name: "tkinter.Button"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "how"
    fully_qualified_name: "tkinter.filedialog.FileDialog.how"
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "LoadFileDialog"
  fully_qualified_name: "tkinter.filedialog.LoadFileDialog"
  super_classes: "tkinter.filedialog.FileDialog"
  methods {
    name: "ok_command"
    fully_qualified_name: "tkinter.filedialog.LoadFileDialog.ok_command"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "tkinter.filedialog.LoadFileDialog"
        fully_qualified_name: "tkinter.filedialog.LoadFileDialog"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "title"
    fully_qualified_name: "tkinter.filedialog.LoadFileDialog.title"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "SaveFileDialog"
  fully_qualified_name: "tkinter.filedialog.SaveFileDialog"
  super_classes: "tkinter.filedialog.FileDialog"
  methods {
    name: "ok_command"
    fully_qualified_name: "tkinter.filedialog.SaveFileDialog.ok_command"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "title"
    fully_qualified_name: "tkinter.filedialog.SaveFileDialog.title"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "_Dialog"
  fully_qualified_name: "tkinter.filedialog._Dialog"
  super_classes: "tkinter.commondialog.Dialog"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "Open"
  fully_qualified_name: "tkinter.filedialog.Open"
  super_classes: "tkinter.filedialog._Dialog"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "command"
    fully_qualified_name: "tkinter.filedialog.Open.command"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "SaveAs"
  fully_qualified_name: "tkinter.filedialog.SaveAs"
  super_classes: "tkinter.filedialog._Dialog"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "command"
    fully_qualified_name: "tkinter.filedialog.SaveAs.command"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "Directory"
  fully_qualified_name: "tkinter.filedialog.Directory"
  super_classes: "tkinter.commondialog.Dialog"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "command"
    fully_qualified_name: "tkinter.filedialog.Directory.command"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
functions {
  name: "asksaveasfilename"
  fully_qualified_name: "tkinter.filedialog.asksaveasfilename"
  return_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
  parameters {
    name: "confirmoverwrite"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[builtins.bool,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "defaultextension"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "filetypes"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[typing.Iterable[Union[Tuple[builtins.str,builtins.str],Tuple[builtins.str,TypeAlias[Union[builtins.list[UnboundType[_T]],builtins.tuple[UnboundType[_T]]]]]]],None]"
      kind: UNION
      args {
        pretty_printed_name: "typing.Iterable[Union[Tuple[builtins.str,builtins.str],Tuple[builtins.str,TypeAlias[Union[builtins.list[UnboundType[_T]],builtins.tuple[UnboundType[_T]]]]]]]"
        args {
          pretty_printed_name: "Union[Tuple[builtins.str,builtins.str],Tuple[builtins.str,TypeAlias[Union[builtins.list[UnboundType[_T]],builtins.tuple[UnboundType[_T]]]]]]"
          kind: UNION
          args {
            pretty_printed_name: "Tuple[builtins.str,builtins.str]"
            kind: TUPLE
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          args {
            pretty_printed_name: "Tuple[builtins.str,TypeAlias[Union[builtins.list[UnboundType[_T]],builtins.tuple[UnboundType[_T]]]]]"
            kind: TUPLE
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "TypeAlias[Union[builtins.list[UnboundType[_T]],builtins.tuple[UnboundType[_T]]]]"
              kind: TYPE_ALIAS
              args {
                pretty_printed_name: "Union[builtins.list[UnboundType[_T]],builtins.tuple[UnboundType[_T]]]"
                kind: UNION
                args {
                  pretty_printed_name: "builtins.list[UnboundType[_T]]"
                  args {
                    pretty_printed_name: "UnboundType[_T]"
                    kind: UNBOUND
                  }
                  fully_qualified_name: "builtins.list"
                }
                args {
                  pretty_printed_name: "builtins.tuple[UnboundType[_T]]"
                  args {
                    pretty_printed_name: "UnboundType[_T]"
                    kind: UNBOUND
                  }
                  fully_qualified_name: "builtins.tuple"
                }
              }
              fully_qualified_name: "tkinter._TkinterSequence"
            }
          }
        }
        fully_qualified_name: "typing.Iterable"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "initialdir"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],None]"
      kind: UNION
      args {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "os.PathLike[builtins.str]"
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            fully_qualified_name: "os.PathLike"
          }
          args {
            pretty_printed_name: "os.PathLike[builtins.bytes]"
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            fully_qualified_name: "os.PathLike"
          }
        }
        fully_qualified_name: "_typeshed.StrOrBytesPath"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "initialfile"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],None]"
      kind: UNION
      args {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "os.PathLike[builtins.str]"
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            fully_qualified_name: "os.PathLike"
          }
          args {
            pretty_printed_name: "os.PathLike[builtins.bytes]"
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            fully_qualified_name: "os.PathLike"
          }
        }
        fully_qualified_name: "_typeshed.StrOrBytesPath"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "parent"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[tkinter.Misc,None]"
      kind: UNION
      args {
        pretty_printed_name: "tkinter.Misc"
        fully_qualified_name: "tkinter.Misc"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "title"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "typevariable"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[tkinter.StringVar,builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "tkinter.StringVar"
        fully_qualified_name: "tkinter.StringVar"
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "askopenfilename"
  fully_qualified_name: "tkinter.filedialog.askopenfilename"
  return_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
  parameters {
    name: "defaultextension"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "filetypes"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[typing.Iterable[Union[Tuple[builtins.str,builtins.str],Tuple[builtins.str,TypeAlias[Union[builtins.list[UnboundType[_T]],builtins.tuple[UnboundType[_T]]]]]]],None]"
      kind: UNION
      args {
        pretty_printed_name: "typing.Iterable[Union[Tuple[builtins.str,builtins.str],Tuple[builtins.str,TypeAlias[Union[builtins.list[UnboundType[_T]],builtins.tuple[UnboundType[_T]]]]]]]"
        args {
          pretty_printed_name: "Union[Tuple[builtins.str,builtins.str],Tuple[builtins.str,TypeAlias[Union[builtins.list[UnboundType[_T]],builtins.tuple[UnboundType[_T]]]]]]"
          kind: UNION
          args {
            pretty_printed_name: "Tuple[builtins.str,builtins.str]"
            kind: TUPLE
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          args {
            pretty_printed_name: "Tuple[builtins.str,TypeAlias[Union[builtins.list[UnboundType[_T]],builtins.tuple[UnboundType[_T]]]]]"
            kind: TUPLE
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "TypeAlias[Union[builtins.list[UnboundType[_T]],builtins.tuple[UnboundType[_T]]]]"
              kind: TYPE_ALIAS
              args {
                pretty_printed_name: "Union[builtins.list[UnboundType[_T]],builtins.tuple[UnboundType[_T]]]"
                kind: UNION
                args {
                  pretty_printed_name: "builtins.list[UnboundType[_T]]"
                  args {
                    pretty_printed_name: "UnboundType[_T]"
                    kind: UNBOUND
                  }
                  fully_qualified_name: "builtins.list"
                }
                args {
                  pretty_printed_name: "builtins.tuple[UnboundType[_T]]"
                  args {
                    pretty_printed_name: "UnboundType[_T]"
                    kind: UNBOUND
                  }
                  fully_qualified_name: "builtins.tuple"
                }
              }
              fully_qualified_name: "tkinter._TkinterSequence"
            }
          }
        }
        fully_qualified_name: "typing.Iterable"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "initialdir"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],None]"
      kind: UNION
      args {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "os.PathLike[builtins.str]"
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            fully_qualified_name: "os.PathLike"
          }
          args {
            pretty_printed_name: "os.PathLike[builtins.bytes]"
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            fully_qualified_name: "os.PathLike"
          }
        }
        fully_qualified_name: "_typeshed.StrOrBytesPath"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "initialfile"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],None]"
      kind: UNION
      args {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "os.PathLike[builtins.str]"
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            fully_qualified_name: "os.PathLike"
          }
          args {
            pretty_printed_name: "os.PathLike[builtins.bytes]"
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            fully_qualified_name: "os.PathLike"
          }
        }
        fully_qualified_name: "_typeshed.StrOrBytesPath"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "parent"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[tkinter.Misc,None]"
      kind: UNION
      args {
        pretty_printed_name: "tkinter.Misc"
        fully_qualified_name: "tkinter.Misc"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "title"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "typevariable"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[tkinter.StringVar,builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "tkinter.StringVar"
        fully_qualified_name: "tkinter.StringVar"
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "askopenfilenames"
  fully_qualified_name: "tkinter.filedialog.askopenfilenames"
  return_annotation {
    pretty_printed_name: "Union[Literal[builtins.str],builtins.tuple[builtins.str]]"
    kind: UNION
    args {
      pretty_printed_name: "Literal[builtins.str]"
      kind: LITERAL
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    args {
      pretty_printed_name: "builtins.tuple[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "builtins.tuple"
    }
  }
  parameters {
    name: "defaultextension"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "filetypes"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[typing.Iterable[Union[Tuple[builtins.str,builtins.str],Tuple[builtins.str,TypeAlias[Union[builtins.list[UnboundType[_T]],builtins.tuple[UnboundType[_T]]]]]]],None]"
      kind: UNION
      args {
        pretty_printed_name: "typing.Iterable[Union[Tuple[builtins.str,builtins.str],Tuple[builtins.str,TypeAlias[Union[builtins.list[UnboundType[_T]],builtins.tuple[UnboundType[_T]]]]]]]"
        args {
          pretty_printed_name: "Union[Tuple[builtins.str,builtins.str],Tuple[builtins.str,TypeAlias[Union[builtins.list[UnboundType[_T]],builtins.tuple[UnboundType[_T]]]]]]"
          kind: UNION
          args {
            pretty_printed_name: "Tuple[builtins.str,builtins.str]"
            kind: TUPLE
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          args {
            pretty_printed_name: "Tuple[builtins.str,TypeAlias[Union[builtins.list[UnboundType[_T]],builtins.tuple[UnboundType[_T]]]]]"
            kind: TUPLE
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "TypeAlias[Union[builtins.list[UnboundType[_T]],builtins.tuple[UnboundType[_T]]]]"
              kind: TYPE_ALIAS
              args {
                pretty_printed_name: "Union[builtins.list[UnboundType[_T]],builtins.tuple[UnboundType[_T]]]"
                kind: UNION
                args {
                  pretty_printed_name: "builtins.list[UnboundType[_T]]"
                  args {
                    pretty_printed_name: "UnboundType[_T]"
                    kind: UNBOUND
                  }
                  fully_qualified_name: "builtins.list"
                }
                args {
                  pretty_printed_name: "builtins.tuple[UnboundType[_T]]"
                  args {
                    pretty_printed_name: "UnboundType[_T]"
                    kind: UNBOUND
                  }
                  fully_qualified_name: "builtins.tuple"
                }
              }
              fully_qualified_name: "tkinter._TkinterSequence"
            }
          }
        }
        fully_qualified_name: "typing.Iterable"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "initialdir"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],None]"
      kind: UNION
      args {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "os.PathLike[builtins.str]"
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            fully_qualified_name: "os.PathLike"
          }
          args {
            pretty_printed_name: "os.PathLike[builtins.bytes]"
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            fully_qualified_name: "os.PathLike"
          }
        }
        fully_qualified_name: "_typeshed.StrOrBytesPath"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "initialfile"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],None]"
      kind: UNION
      args {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "os.PathLike[builtins.str]"
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            fully_qualified_name: "os.PathLike"
          }
          args {
            pretty_printed_name: "os.PathLike[builtins.bytes]"
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            fully_qualified_name: "os.PathLike"
          }
        }
        fully_qualified_name: "_typeshed.StrOrBytesPath"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "parent"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[tkinter.Misc,None]"
      kind: UNION
      args {
        pretty_printed_name: "tkinter.Misc"
        fully_qualified_name: "tkinter.Misc"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "title"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "typevariable"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[tkinter.StringVar,builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "tkinter.StringVar"
        fully_qualified_name: "tkinter.StringVar"
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "askdirectory"
  fully_qualified_name: "tkinter.filedialog.askdirectory"
  return_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
  parameters {
    name: "initialdir"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],None]"
      kind: UNION
      args {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "os.PathLike[builtins.str]"
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            fully_qualified_name: "os.PathLike"
          }
          args {
            pretty_printed_name: "os.PathLike[builtins.bytes]"
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            fully_qualified_name: "os.PathLike"
          }
        }
        fully_qualified_name: "_typeshed.StrOrBytesPath"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "mustexist"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[builtins.bool,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "parent"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[tkinter.Misc,None]"
      kind: UNION
      args {
        pretty_printed_name: "tkinter.Misc"
        fully_qualified_name: "tkinter.Misc"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "title"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "asksaveasfile"
  fully_qualified_name: "tkinter.filedialog.asksaveasfile"
  return_annotation {
    pretty_printed_name: "Union[typing.IO[Any],None]"
    kind: UNION
    args {
      pretty_printed_name: "typing.IO[Any]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "typing.IO"
    }
    args {
      pretty_printed_name: "None"
      kind: NONE
    }
  }
  parameters {
    name: "mode"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    has_default: true
  }
  parameters {
    name: "confirmoverwrite"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[builtins.bool,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "defaultextension"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "filetypes"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[typing.Iterable[Union[Tuple[builtins.str,builtins.str],Tuple[builtins.str,TypeAlias[Union[builtins.list[UnboundType[_T]],builtins.tuple[UnboundType[_T]]]]]]],None]"
      kind: UNION
      args {
        pretty_printed_name: "typing.Iterable[Union[Tuple[builtins.str,builtins.str],Tuple[builtins.str,TypeAlias[Union[builtins.list[UnboundType[_T]],builtins.tuple[UnboundType[_T]]]]]]]"
        args {
          pretty_printed_name: "Union[Tuple[builtins.str,builtins.str],Tuple[builtins.str,TypeAlias[Union[builtins.list[UnboundType[_T]],builtins.tuple[UnboundType[_T]]]]]]"
          kind: UNION
          args {
            pretty_printed_name: "Tuple[builtins.str,builtins.str]"
            kind: TUPLE
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          args {
            pretty_printed_name: "Tuple[builtins.str,TypeAlias[Union[builtins.list[UnboundType[_T]],builtins.tuple[UnboundType[_T]]]]]"
            kind: TUPLE
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "TypeAlias[Union[builtins.list[UnboundType[_T]],builtins.tuple[UnboundType[_T]]]]"
              kind: TYPE_ALIAS
              args {
                pretty_printed_name: "Union[builtins.list[UnboundType[_T]],builtins.tuple[UnboundType[_T]]]"
                kind: UNION
                args {
                  pretty_printed_name: "builtins.list[UnboundType[_T]]"
                  args {
                    pretty_printed_name: "UnboundType[_T]"
                    kind: UNBOUND
                  }
                  fully_qualified_name: "builtins.list"
                }
                args {
                  pretty_printed_name: "builtins.tuple[UnboundType[_T]]"
                  args {
                    pretty_printed_name: "UnboundType[_T]"
                    kind: UNBOUND
                  }
                  fully_qualified_name: "builtins.tuple"
                }
              }
              fully_qualified_name: "tkinter._TkinterSequence"
            }
          }
        }
        fully_qualified_name: "typing.Iterable"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "initialdir"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],None]"
      kind: UNION
      args {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "os.PathLike[builtins.str]"
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            fully_qualified_name: "os.PathLike"
          }
          args {
            pretty_printed_name: "os.PathLike[builtins.bytes]"
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            fully_qualified_name: "os.PathLike"
          }
        }
        fully_qualified_name: "_typeshed.StrOrBytesPath"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "initialfile"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],None]"
      kind: UNION
      args {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "os.PathLike[builtins.str]"
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            fully_qualified_name: "os.PathLike"
          }
          args {
            pretty_printed_name: "os.PathLike[builtins.bytes]"
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            fully_qualified_name: "os.PathLike"
          }
        }
        fully_qualified_name: "_typeshed.StrOrBytesPath"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "parent"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[tkinter.Misc,None]"
      kind: UNION
      args {
        pretty_printed_name: "tkinter.Misc"
        fully_qualified_name: "tkinter.Misc"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "title"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "typevariable"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[tkinter.StringVar,builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "tkinter.StringVar"
        fully_qualified_name: "tkinter.StringVar"
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "askopenfile"
  fully_qualified_name: "tkinter.filedialog.askopenfile"
  return_annotation {
    pretty_printed_name: "Union[typing.IO[Any],None]"
    kind: UNION
    args {
      pretty_printed_name: "typing.IO[Any]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "typing.IO"
    }
    args {
      pretty_printed_name: "None"
      kind: NONE
    }
  }
  parameters {
    name: "mode"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    has_default: true
  }
  parameters {
    name: "defaultextension"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "filetypes"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[typing.Iterable[Union[Tuple[builtins.str,builtins.str],Tuple[builtins.str,TypeAlias[Union[builtins.list[UnboundType[_T]],builtins.tuple[UnboundType[_T]]]]]]],None]"
      kind: UNION
      args {
        pretty_printed_name: "typing.Iterable[Union[Tuple[builtins.str,builtins.str],Tuple[builtins.str,TypeAlias[Union[builtins.list[UnboundType[_T]],builtins.tuple[UnboundType[_T]]]]]]]"
        args {
          pretty_printed_name: "Union[Tuple[builtins.str,builtins.str],Tuple[builtins.str,TypeAlias[Union[builtins.list[UnboundType[_T]],builtins.tuple[UnboundType[_T]]]]]]"
          kind: UNION
          args {
            pretty_printed_name: "Tuple[builtins.str,builtins.str]"
            kind: TUPLE
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          args {
            pretty_printed_name: "Tuple[builtins.str,TypeAlias[Union[builtins.list[UnboundType[_T]],builtins.tuple[UnboundType[_T]]]]]"
            kind: TUPLE
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "TypeAlias[Union[builtins.list[UnboundType[_T]],builtins.tuple[UnboundType[_T]]]]"
              kind: TYPE_ALIAS
              args {
                pretty_printed_name: "Union[builtins.list[UnboundType[_T]],builtins.tuple[UnboundType[_T]]]"
                kind: UNION
                args {
                  pretty_printed_name: "builtins.list[UnboundType[_T]]"
                  args {
                    pretty_printed_name: "UnboundType[_T]"
                    kind: UNBOUND
                  }
                  fully_qualified_name: "builtins.list"
                }
                args {
                  pretty_printed_name: "builtins.tuple[UnboundType[_T]]"
                  args {
                    pretty_printed_name: "UnboundType[_T]"
                    kind: UNBOUND
                  }
                  fully_qualified_name: "builtins.tuple"
                }
              }
              fully_qualified_name: "tkinter._TkinterSequence"
            }
          }
        }
        fully_qualified_name: "typing.Iterable"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "initialdir"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],None]"
      kind: UNION
      args {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "os.PathLike[builtins.str]"
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            fully_qualified_name: "os.PathLike"
          }
          args {
            pretty_printed_name: "os.PathLike[builtins.bytes]"
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            fully_qualified_name: "os.PathLike"
          }
        }
        fully_qualified_name: "_typeshed.StrOrBytesPath"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "initialfile"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],None]"
      kind: UNION
      args {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "os.PathLike[builtins.str]"
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            fully_qualified_name: "os.PathLike"
          }
          args {
            pretty_printed_name: "os.PathLike[builtins.bytes]"
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            fully_qualified_name: "os.PathLike"
          }
        }
        fully_qualified_name: "_typeshed.StrOrBytesPath"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "parent"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[tkinter.Misc,None]"
      kind: UNION
      args {
        pretty_printed_name: "tkinter.Misc"
        fully_qualified_name: "tkinter.Misc"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "title"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "typevariable"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[tkinter.StringVar,builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "tkinter.StringVar"
        fully_qualified_name: "tkinter.StringVar"
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "askopenfiles"
  fully_qualified_name: "tkinter.filedialog.askopenfiles"
  return_annotation {
    pretty_printed_name: "builtins.tuple[typing.IO[Any]]"
    args {
      pretty_printed_name: "typing.IO[Any]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "typing.IO"
    }
    fully_qualified_name: "builtins.tuple"
  }
  parameters {
    name: "mode"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    has_default: true
  }
  parameters {
    name: "defaultextension"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "filetypes"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[typing.Iterable[Union[Tuple[builtins.str,builtins.str],Tuple[builtins.str,TypeAlias[Union[builtins.list[UnboundType[_T]],builtins.tuple[UnboundType[_T]]]]]]],None]"
      kind: UNION
      args {
        pretty_printed_name: "typing.Iterable[Union[Tuple[builtins.str,builtins.str],Tuple[builtins.str,TypeAlias[Union[builtins.list[UnboundType[_T]],builtins.tuple[UnboundType[_T]]]]]]]"
        args {
          pretty_printed_name: "Union[Tuple[builtins.str,builtins.str],Tuple[builtins.str,TypeAlias[Union[builtins.list[UnboundType[_T]],builtins.tuple[UnboundType[_T]]]]]]"
          kind: UNION
          args {
            pretty_printed_name: "Tuple[builtins.str,builtins.str]"
            kind: TUPLE
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          args {
            pretty_printed_name: "Tuple[builtins.str,TypeAlias[Union[builtins.list[UnboundType[_T]],builtins.tuple[UnboundType[_T]]]]]"
            kind: TUPLE
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "TypeAlias[Union[builtins.list[UnboundType[_T]],builtins.tuple[UnboundType[_T]]]]"
              kind: TYPE_ALIAS
              args {
                pretty_printed_name: "Union[builtins.list[UnboundType[_T]],builtins.tuple[UnboundType[_T]]]"
                kind: UNION
                args {
                  pretty_printed_name: "builtins.list[UnboundType[_T]]"
                  args {
                    pretty_printed_name: "UnboundType[_T]"
                    kind: UNBOUND
                  }
                  fully_qualified_name: "builtins.list"
                }
                args {
                  pretty_printed_name: "builtins.tuple[UnboundType[_T]]"
                  args {
                    pretty_printed_name: "UnboundType[_T]"
                    kind: UNBOUND
                  }
                  fully_qualified_name: "builtins.tuple"
                }
              }
              fully_qualified_name: "tkinter._TkinterSequence"
            }
          }
        }
        fully_qualified_name: "typing.Iterable"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "initialdir"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],None]"
      kind: UNION
      args {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "os.PathLike[builtins.str]"
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            fully_qualified_name: "os.PathLike"
          }
          args {
            pretty_printed_name: "os.PathLike[builtins.bytes]"
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            fully_qualified_name: "os.PathLike"
          }
        }
        fully_qualified_name: "_typeshed.StrOrBytesPath"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "initialfile"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],None]"
      kind: UNION
      args {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "os.PathLike[builtins.str]"
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            fully_qualified_name: "os.PathLike"
          }
          args {
            pretty_printed_name: "os.PathLike[builtins.bytes]"
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            fully_qualified_name: "os.PathLike"
          }
        }
        fully_qualified_name: "_typeshed.StrOrBytesPath"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "parent"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[tkinter.Misc,None]"
      kind: UNION
      args {
        pretty_printed_name: "tkinter.Misc"
        fully_qualified_name: "tkinter.Misc"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "title"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "typevariable"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[tkinter.StringVar,builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "tkinter.StringVar"
        fully_qualified_name: "tkinter.StringVar"
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "test"
  fully_qualified_name: "tkinter.filedialog.test"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "dialogstates"
  fully_qualified_name: "tkinter.filedialog.dialogstates"
  type_annotation {
    pretty_printed_name: "builtins.dict[Any,Tuple[Any,Any]]"
    args {
      pretty_printed_name: "Any"
      kind: ANY
    }
    args {
      pretty_printed_name: "Tuple[Any,Any]"
      kind: TUPLE
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    fully_qualified_name: "builtins.dict"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
