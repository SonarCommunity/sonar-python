fully_qualified_name: "lib2to3.fixes.fix_exitfunc"
classes {
  name: "FixExitfunc"
  fully_qualified_name: "lib2to3.fixes.fix_exitfunc.FixExitfunc"
  super_classes: "lib2to3.fixer_base.BaseFix"
  methods {
    name: "__init__"
    fully_qualified_name: "lib2to3.fixes.fix_exitfunc.FixExitfunc.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "lib2to3.fixes.fix_exitfunc.FixExitfunc"
        fully_qualified_name: "lib2to3.fixes.fix_exitfunc.FixExitfunc"
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "start_tree"
    fully_qualified_name: "lib2to3.fixes.fix_exitfunc.FixExitfunc.start_tree"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "lib2to3.fixes.fix_exitfunc.FixExitfunc"
        fully_qualified_name: "lib2to3.fixes.fix_exitfunc.FixExitfunc"
      }
    }
    parameters {
      name: "tree"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "lib2to3.pytree.Node"
        fully_qualified_name: "lib2to3.pytree.Node"
      }
    }
    parameters {
      name: "filename"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UnboundType[StrPath]"
        kind: UNBOUND
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "transform"
    fully_qualified_name: "lib2to3.fixes.fix_exitfunc.FixExitfunc.transform"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "lib2to3.fixes.fix_exitfunc.FixExitfunc"
        fully_qualified_name: "lib2to3.fixes.fix_exitfunc.FixExitfunc"
      }
    }
    parameters {
      name: "node"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "results"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "BM_compatible"
    fully_qualified_name: "lib2to3.fixes.fix_exitfunc.FixExitfunc.BM_compatible"
    type_annotation {
      pretty_printed_name: "Literal[builtins.bool]"
      kind: LITERAL
      args {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "PATTERN"
    fully_qualified_name: "lib2to3.fixes.fix_exitfunc.FixExitfunc.PATTERN"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "sys_import"
    fully_qualified_name: "lib2to3.fixes.fix_exitfunc.FixExitfunc.sys_import"
    type_annotation {
      pretty_printed_name: "Union[UnboundType[Incomplete],None]"
      kind: UNION
      args {
        pretty_printed_name: "UnboundType[Incomplete]"
        kind: UNBOUND
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
