fully_qualified_name: "jinja2.runtime"
classes {
  name: "TemplateNotFound"
  fully_qualified_name: "jinja2.exceptions.TemplateNotFound"
  super_classes: "builtins.OSError"
  super_classes: "builtins.LookupError"
  super_classes: "jinja2.exceptions.TemplateError"
  methods {
    name: "__init__"
    fully_qualified_name: "jinja2.exceptions.TemplateNotFound.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "jinja2.exceptions.TemplateNotFound"
        fully_qualified_name: "jinja2.exceptions.TemplateNotFound"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "message"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "message"
    fully_qualified_name: "jinja2.exceptions.TemplateNotFound.message"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "name"
    fully_qualified_name: "jinja2.exceptions.TemplateNotFound.name"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "templates"
    fully_qualified_name: "jinja2.exceptions.TemplateNotFound.templates"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "TemplateRuntimeError"
  fully_qualified_name: "jinja2.exceptions.TemplateRuntimeError"
  super_classes: "jinja2.exceptions.TemplateError"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "Markup"
  fully_qualified_name: "markupsafe.Markup"
  super_classes: "builtins.str"
  methods {
    name: "__new__"
    fully_qualified_name: "markupsafe.Markup.__new__"
    return_annotation {
      pretty_printed_name: "markupsafe.Markup"
      fully_qualified_name: "markupsafe.Markup"
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[markupsafe.Markup]"
        kind: TYPE
        args {
          pretty_printed_name: "markupsafe.Markup"
          fully_qualified_name: "markupsafe.Markup"
        }
      }
    }
    parameters {
      name: "base"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      has_default: true
    }
    parameters {
      name: "encoding"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "errors"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__html__"
    fully_qualified_name: "markupsafe.Markup.__html__"
    return_annotation {
      pretty_printed_name: "markupsafe.Markup"
      fully_qualified_name: "markupsafe.Markup"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "markupsafe.Markup"
        fully_qualified_name: "markupsafe.Markup"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__add__"
    fully_qualified_name: "markupsafe.Markup.__add__"
    return_annotation {
      pretty_printed_name: "markupsafe.Markup"
      fully_qualified_name: "markupsafe.Markup"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "markupsafe.Markup"
        fully_qualified_name: "markupsafe.Markup"
      }
    }
    parameters {
      name: "other"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__radd__"
    fully_qualified_name: "markupsafe.Markup.__radd__"
    return_annotation {
      pretty_printed_name: "markupsafe.Markup"
      fully_qualified_name: "markupsafe.Markup"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "markupsafe.Markup"
        fully_qualified_name: "markupsafe.Markup"
      }
    }
    parameters {
      name: "other"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__mul__"
    fully_qualified_name: "markupsafe.Markup.__mul__"
    return_annotation {
      pretty_printed_name: "markupsafe.Markup"
      fully_qualified_name: "markupsafe.Markup"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "markupsafe.Markup"
        fully_qualified_name: "markupsafe.Markup"
      }
    }
    parameters {
      name: "num"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__rmul__"
    fully_qualified_name: "markupsafe.Markup.__rmul__"
    return_annotation {
      pretty_printed_name: "markupsafe.Markup"
      fully_qualified_name: "markupsafe.Markup"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "markupsafe.Markup"
        fully_qualified_name: "markupsafe.Markup"
      }
    }
    parameters {
      name: "num"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__mod__"
    fully_qualified_name: "markupsafe.Markup.__mod__"
    return_annotation {
      pretty_printed_name: "markupsafe.Markup"
      fully_qualified_name: "markupsafe.Markup"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "markupsafe.Markup"
        fully_qualified_name: "markupsafe.Markup"
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "join"
    fully_qualified_name: "markupsafe.Markup.join"
    return_annotation {
      pretty_printed_name: "markupsafe.Markup"
      fully_qualified_name: "markupsafe.Markup"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "markupsafe.Markup"
        fully_qualified_name: "markupsafe.Markup"
      }
    }
    parameters {
      name: "seq"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "split"
    fully_qualified_name: "markupsafe.Markup.split"
    return_annotation {
      pretty_printed_name: "builtins.list[markupsafe.Markup]"
      args {
        pretty_printed_name: "markupsafe.Markup"
        fully_qualified_name: "markupsafe.Markup"
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "markupsafe.Markup"
        fully_qualified_name: "markupsafe.Markup"
      }
    }
    parameters {
      name: "sep"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "maxsplit"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing_extensions.SupportsIndex"
        fully_qualified_name: "typing_extensions.SupportsIndex"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "rsplit"
    fully_qualified_name: "markupsafe.Markup.rsplit"
    return_annotation {
      pretty_printed_name: "builtins.list[markupsafe.Markup]"
      args {
        pretty_printed_name: "markupsafe.Markup"
        fully_qualified_name: "markupsafe.Markup"
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "markupsafe.Markup"
        fully_qualified_name: "markupsafe.Markup"
      }
    }
    parameters {
      name: "sep"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "maxsplit"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing_extensions.SupportsIndex"
        fully_qualified_name: "typing_extensions.SupportsIndex"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "splitlines"
    fully_qualified_name: "markupsafe.Markup.splitlines"
    return_annotation {
      pretty_printed_name: "builtins.list[markupsafe.Markup]"
      args {
        pretty_printed_name: "markupsafe.Markup"
        fully_qualified_name: "markupsafe.Markup"
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "markupsafe.Markup"
        fully_qualified_name: "markupsafe.Markup"
      }
    }
    parameters {
      name: "keepends"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "unescape"
    fully_qualified_name: "markupsafe.Markup.unescape"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "markupsafe.Markup"
        fully_qualified_name: "markupsafe.Markup"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "striptags"
    fully_qualified_name: "markupsafe.Markup.striptags"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "markupsafe.Markup"
        fully_qualified_name: "markupsafe.Markup"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "escape"
    fully_qualified_name: "markupsafe.Markup.escape"
    return_annotation {
      pretty_printed_name: "markupsafe.Markup"
      fully_qualified_name: "markupsafe.Markup"
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[markupsafe.Markup]"
        kind: TYPE
        args {
          pretty_printed_name: "markupsafe.Markup"
          fully_qualified_name: "markupsafe.Markup"
        }
      }
    }
    parameters {
      name: "s"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    has_decorators: true
    resolved_decorator_names: "classmethod"
    is_class_method: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "partition"
    fully_qualified_name: "markupsafe.Markup.partition"
    return_annotation {
      pretty_printed_name: "Tuple[markupsafe.Markup,markupsafe.Markup,markupsafe.Markup]"
      kind: TUPLE
      args {
        pretty_printed_name: "markupsafe.Markup"
        fully_qualified_name: "markupsafe.Markup"
      }
      args {
        pretty_printed_name: "markupsafe.Markup"
        fully_qualified_name: "markupsafe.Markup"
      }
      args {
        pretty_printed_name: "markupsafe.Markup"
        fully_qualified_name: "markupsafe.Markup"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "markupsafe.Markup"
        fully_qualified_name: "markupsafe.Markup"
      }
    }
    parameters {
      name: "sep"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "rpartition"
    fully_qualified_name: "markupsafe.Markup.rpartition"
    return_annotation {
      pretty_printed_name: "Tuple[markupsafe.Markup,markupsafe.Markup,markupsafe.Markup]"
      kind: TUPLE
      args {
        pretty_printed_name: "markupsafe.Markup"
        fully_qualified_name: "markupsafe.Markup"
      }
      args {
        pretty_printed_name: "markupsafe.Markup"
        fully_qualified_name: "markupsafe.Markup"
      }
      args {
        pretty_printed_name: "markupsafe.Markup"
        fully_qualified_name: "markupsafe.Markup"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "markupsafe.Markup"
        fully_qualified_name: "markupsafe.Markup"
      }
    }
    parameters {
      name: "sep"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "format"
    fully_qualified_name: "markupsafe.Markup.format"
    return_annotation {
      pretty_printed_name: "markupsafe.Markup"
      fully_qualified_name: "markupsafe.Markup"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "markupsafe.Markup"
        fully_qualified_name: "markupsafe.Markup"
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "kwargs"
      kind: VAR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__html_format__"
    fully_qualified_name: "markupsafe.Markup.__html_format__"
    return_annotation {
      pretty_printed_name: "markupsafe.Markup"
      fully_qualified_name: "markupsafe.Markup"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "markupsafe.Markup"
        fully_qualified_name: "markupsafe.Markup"
      }
    }
    parameters {
      name: "format_spec"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__getslice__"
    fully_qualified_name: "markupsafe.Markup.__getslice__"
    return_annotation {
      pretty_printed_name: "markupsafe.Markup"
      fully_qualified_name: "markupsafe.Markup"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "markupsafe.Markup"
        fully_qualified_name: "markupsafe.Markup"
      }
    }
    parameters {
      name: "start"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "stop"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__getitem__"
    fully_qualified_name: "markupsafe.Markup.__getitem__"
    return_annotation {
      pretty_printed_name: "markupsafe.Markup"
      fully_qualified_name: "markupsafe.Markup"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "markupsafe.Markup"
        fully_qualified_name: "markupsafe.Markup"
      }
    }
    parameters {
      name: "i"
      type_annotation {
        pretty_printed_name: "Union[builtins.int,builtins.slice]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.slice"
          fully_qualified_name: "builtins.slice"
        }
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "capitalize"
    fully_qualified_name: "markupsafe.Markup.capitalize"
    return_annotation {
      pretty_printed_name: "markupsafe.Markup"
      fully_qualified_name: "markupsafe.Markup"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "markupsafe.Markup"
        fully_qualified_name: "markupsafe.Markup"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "title"
    fully_qualified_name: "markupsafe.Markup.title"
    return_annotation {
      pretty_printed_name: "markupsafe.Markup"
      fully_qualified_name: "markupsafe.Markup"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "markupsafe.Markup"
        fully_qualified_name: "markupsafe.Markup"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "lower"
    fully_qualified_name: "markupsafe.Markup.lower"
    return_annotation {
      pretty_printed_name: "markupsafe.Markup"
      fully_qualified_name: "markupsafe.Markup"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "markupsafe.Markup"
        fully_qualified_name: "markupsafe.Markup"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "upper"
    fully_qualified_name: "markupsafe.Markup.upper"
    return_annotation {
      pretty_printed_name: "markupsafe.Markup"
      fully_qualified_name: "markupsafe.Markup"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "markupsafe.Markup"
        fully_qualified_name: "markupsafe.Markup"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "swapcase"
    fully_qualified_name: "markupsafe.Markup.swapcase"
    return_annotation {
      pretty_printed_name: "markupsafe.Markup"
      fully_qualified_name: "markupsafe.Markup"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "markupsafe.Markup"
        fully_qualified_name: "markupsafe.Markup"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "replace"
    fully_qualified_name: "markupsafe.Markup.replace"
    return_annotation {
      pretty_printed_name: "markupsafe.Markup"
      fully_qualified_name: "markupsafe.Markup"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "markupsafe.Markup"
        fully_qualified_name: "markupsafe.Markup"
      }
    }
    parameters {
      name: "old"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "new"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "count"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing_extensions.SupportsIndex"
        fully_qualified_name: "typing_extensions.SupportsIndex"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "ljust"
    fully_qualified_name: "markupsafe.Markup.ljust"
    return_annotation {
      pretty_printed_name: "markupsafe.Markup"
      fully_qualified_name: "markupsafe.Markup"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "markupsafe.Markup"
        fully_qualified_name: "markupsafe.Markup"
      }
    }
    parameters {
      name: "width"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing_extensions.SupportsIndex"
        fully_qualified_name: "typing_extensions.SupportsIndex"
      }
    }
    parameters {
      name: "fillchar"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "rjust"
    fully_qualified_name: "markupsafe.Markup.rjust"
    return_annotation {
      pretty_printed_name: "markupsafe.Markup"
      fully_qualified_name: "markupsafe.Markup"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "markupsafe.Markup"
        fully_qualified_name: "markupsafe.Markup"
      }
    }
    parameters {
      name: "width"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing_extensions.SupportsIndex"
        fully_qualified_name: "typing_extensions.SupportsIndex"
      }
    }
    parameters {
      name: "fillchar"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "lstrip"
    fully_qualified_name: "markupsafe.Markup.lstrip"
    return_annotation {
      pretty_printed_name: "markupsafe.Markup"
      fully_qualified_name: "markupsafe.Markup"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "markupsafe.Markup"
        fully_qualified_name: "markupsafe.Markup"
      }
    }
    parameters {
      name: "chars"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "rstrip"
    fully_qualified_name: "markupsafe.Markup.rstrip"
    return_annotation {
      pretty_printed_name: "markupsafe.Markup"
      fully_qualified_name: "markupsafe.Markup"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "markupsafe.Markup"
        fully_qualified_name: "markupsafe.Markup"
      }
    }
    parameters {
      name: "chars"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "strip"
    fully_qualified_name: "markupsafe.Markup.strip"
    return_annotation {
      pretty_printed_name: "markupsafe.Markup"
      fully_qualified_name: "markupsafe.Markup"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "markupsafe.Markup"
        fully_qualified_name: "markupsafe.Markup"
      }
    }
    parameters {
      name: "chars"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "center"
    fully_qualified_name: "markupsafe.Markup.center"
    return_annotation {
      pretty_printed_name: "markupsafe.Markup"
      fully_qualified_name: "markupsafe.Markup"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "markupsafe.Markup"
        fully_qualified_name: "markupsafe.Markup"
      }
    }
    parameters {
      name: "width"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing_extensions.SupportsIndex"
        fully_qualified_name: "typing_extensions.SupportsIndex"
      }
    }
    parameters {
      name: "fillchar"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "zfill"
    fully_qualified_name: "markupsafe.Markup.zfill"
    return_annotation {
      pretty_printed_name: "markupsafe.Markup"
      fully_qualified_name: "markupsafe.Markup"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "markupsafe.Markup"
        fully_qualified_name: "markupsafe.Markup"
      }
    }
    parameters {
      name: "width"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing_extensions.SupportsIndex"
        fully_qualified_name: "typing_extensions.SupportsIndex"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "translate"
    fully_qualified_name: "markupsafe.Markup.translate"
    return_annotation {
      pretty_printed_name: "markupsafe.Markup"
      fully_qualified_name: "markupsafe.Markup"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "markupsafe.Markup"
        fully_qualified_name: "markupsafe.Markup"
      }
    }
    parameters {
      name: "table"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.Mapping[builtins.int,Union[builtins.int,builtins.str,None]],typing.Sequence[Union[builtins.int,builtins.str,None]]]"
        kind: UNION
        args {
          pretty_printed_name: "typing.Mapping[builtins.int,Union[builtins.int,builtins.str,None]]"
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "Union[builtins.int,builtins.str,None]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.int"
              fully_qualified_name: "builtins.int"
            }
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "None"
              kind: NONE
            }
          }
          fully_qualified_name: "typing.Mapping"
        }
        args {
          pretty_printed_name: "typing.Sequence[Union[builtins.int,builtins.str,None]]"
          args {
            pretty_printed_name: "Union[builtins.int,builtins.str,None]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.int"
              fully_qualified_name: "builtins.int"
            }
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "None"
              kind: NONE
            }
          }
          fully_qualified_name: "typing.Sequence"
        }
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "expandtabs"
    fully_qualified_name: "markupsafe.Markup.expandtabs"
    return_annotation {
      pretty_printed_name: "markupsafe.Markup"
      fully_qualified_name: "markupsafe.Markup"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "markupsafe.Markup"
        fully_qualified_name: "markupsafe.Markup"
      }
    }
    parameters {
      name: "tabsize"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
  }
  methods {
    name: "expandtabs"
    fully_qualified_name: "markupsafe.Markup.expandtabs"
    return_annotation {
      pretty_printed_name: "markupsafe.Markup"
      fully_qualified_name: "markupsafe.Markup"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "markupsafe.Markup"
        fully_qualified_name: "markupsafe.Markup"
      }
    }
    parameters {
      name: "tabsize"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing_extensions.SupportsIndex"
        fully_qualified_name: "typing_extensions.SupportsIndex"
      }
      has_default: true
    }
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "TemplateReference"
  fully_qualified_name: "jinja2.runtime.TemplateReference"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "jinja2.runtime.TemplateReference.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "jinja2.runtime.TemplateReference"
        fully_qualified_name: "jinja2.runtime.TemplateReference"
      }
    }
    parameters {
      name: "context"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__getitem__"
    fully_qualified_name: "jinja2.runtime.TemplateReference.__getitem__"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "Context"
  fully_qualified_name: "jinja2.runtime.Context"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "jinja2.runtime.Context.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "jinja2.runtime.Context"
        fully_qualified_name: "jinja2.runtime.Context"
      }
    }
    parameters {
      name: "environment"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "jinja2.environment.Environment"
        fully_qualified_name: "jinja2.environment.Environment"
      }
    }
    parameters {
      name: "parent"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[jinja2.runtime.Context,builtins.dict[builtins.str,Any]]"
        kind: UNION
        args {
          pretty_printed_name: "jinja2.runtime.Context"
          fully_qualified_name: "jinja2.runtime.Context"
        }
        args {
          pretty_printed_name: "builtins.dict[builtins.str,Any]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "builtins.dict"
        }
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "blocks"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.dict[builtins.str,Any]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "builtins.dict"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "super"
    fully_qualified_name: "jinja2.runtime.Context.super"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "current"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "get"
    fully_qualified_name: "jinja2.runtime.Context.get"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "jinja2.runtime.Context"
        fully_qualified_name: "jinja2.runtime.Context"
      }
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "default"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "resolve"
    fully_qualified_name: "jinja2.runtime.Context.resolve"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "get_exported"
    fully_qualified_name: "jinja2.runtime.Context.get_exported"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "get_all"
    fully_qualified_name: "jinja2.runtime.Context.get_all"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "call"
    fully_qualified_name: "jinja2.runtime.Context.call"
    parameters {
      name: "__self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "__obj"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
    }
    parameters {
      name: "kwargs"
      kind: VAR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "derived"
    fully_qualified_name: "jinja2.runtime.Context.derived"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "jinja2.runtime.Context"
        fully_qualified_name: "jinja2.runtime.Context"
      }
    }
    parameters {
      name: "locals"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__contains__"
    fully_qualified_name: "jinja2.runtime.Context.__contains__"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__getitem__"
    fully_qualified_name: "jinja2.runtime.Context.__getitem__"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "parent"
    fully_qualified_name: "jinja2.runtime.Context.parent"
    type_annotation {
      pretty_printed_name: "Union[jinja2.runtime.Context,builtins.dict[builtins.str,Any]]"
      kind: UNION
      args {
        pretty_printed_name: "jinja2.runtime.Context"
        fully_qualified_name: "jinja2.runtime.Context"
      }
      args {
        pretty_printed_name: "builtins.dict[builtins.str,Any]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "builtins.dict"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "vars"
    fully_qualified_name: "jinja2.runtime.Context.vars"
    type_annotation {
      pretty_printed_name: "builtins.dict[builtins.str,Any]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "builtins.dict"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "environment"
    fully_qualified_name: "jinja2.runtime.Context.environment"
    type_annotation {
      pretty_printed_name: "jinja2.environment.Environment"
      fully_qualified_name: "jinja2.environment.Environment"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "eval_ctx"
    fully_qualified_name: "jinja2.runtime.Context.eval_ctx"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "exported_vars"
    fully_qualified_name: "jinja2.runtime.Context.exported_vars"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "name"
    fully_qualified_name: "jinja2.runtime.Context.name"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "blocks"
    fully_qualified_name: "jinja2.runtime.Context.blocks"
    type_annotation {
      pretty_printed_name: "builtins.dict[builtins.str,Any]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "builtins.dict"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "keys"
    fully_qualified_name: "jinja2.runtime.Context.keys"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "values"
    fully_qualified_name: "jinja2.runtime.Context.values"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "items"
    fully_qualified_name: "jinja2.runtime.Context.items"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "iterkeys"
    fully_qualified_name: "jinja2.runtime.Context.iterkeys"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "itervalues"
    fully_qualified_name: "jinja2.runtime.Context.itervalues"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "iteritems"
    fully_qualified_name: "jinja2.runtime.Context.iteritems"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "BlockReference"
  fully_qualified_name: "jinja2.runtime.BlockReference"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "jinja2.runtime.BlockReference.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "jinja2.runtime.BlockReference"
        fully_qualified_name: "jinja2.runtime.BlockReference"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "context"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "stack"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "depth"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "super"
    fully_qualified_name: "jinja2.runtime.BlockReference.super"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__call__"
    fully_qualified_name: "jinja2.runtime.BlockReference.__call__"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "name"
    fully_qualified_name: "jinja2.runtime.BlockReference.name"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "LoopContext"
  fully_qualified_name: "jinja2.runtime.LoopContext"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "jinja2.runtime.LoopContext.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "jinja2.runtime.LoopContext"
        fully_qualified_name: "jinja2.runtime.LoopContext"
      }
    }
    parameters {
      name: "iterable"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "recurse"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "depth0"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "cycle"
    fully_qualified_name: "jinja2.runtime.LoopContext.cycle"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__len__"
    fully_qualified_name: "jinja2.runtime.LoopContext.__len__"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__iter__"
    fully_qualified_name: "jinja2.runtime.LoopContext.__iter__"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "loop"
    fully_qualified_name: "jinja2.runtime.LoopContext.loop"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "iterable"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "length"
    fully_qualified_name: "jinja2.runtime.LoopContext.length"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "index0"
    fully_qualified_name: "jinja2.runtime.LoopContext.index0"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "depth0"
    fully_qualified_name: "jinja2.runtime.LoopContext.depth0"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "first"
    fully_qualified_name: "jinja2.runtime.LoopContext.first"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "last"
    fully_qualified_name: "jinja2.runtime.LoopContext.last"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "index"
    fully_qualified_name: "jinja2.runtime.LoopContext.index"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "revindex"
    fully_qualified_name: "jinja2.runtime.LoopContext.revindex"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "revindex0"
    fully_qualified_name: "jinja2.runtime.LoopContext.revindex0"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "depth"
    fully_qualified_name: "jinja2.runtime.LoopContext.depth"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "__call__"
    fully_qualified_name: "jinja2.runtime.LoopContext.__call__"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "LoopContextIterator"
  fully_qualified_name: "jinja2.runtime.LoopContextIterator"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "jinja2.runtime.LoopContextIterator.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "jinja2.runtime.LoopContextIterator"
        fully_qualified_name: "jinja2.runtime.LoopContextIterator"
      }
    }
    parameters {
      name: "context"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__iter__"
    fully_qualified_name: "jinja2.runtime.LoopContextIterator.__iter__"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__next__"
    fully_qualified_name: "jinja2.runtime.LoopContextIterator.__next__"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "context"
    fully_qualified_name: "jinja2.runtime.LoopContextIterator.context"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "Macro"
  fully_qualified_name: "jinja2.runtime.Macro"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "jinja2.runtime.Macro.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "jinja2.runtime.Macro"
        fully_qualified_name: "jinja2.runtime.Macro"
      }
    }
    parameters {
      name: "environment"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "func"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "arguments"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "defaults"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "catch_kwargs"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "catch_varargs"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "caller"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__call__"
    fully_qualified_name: "jinja2.runtime.Macro.__call__"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
    }
    parameters {
      name: "kwargs"
      kind: VAR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "name"
    fully_qualified_name: "jinja2.runtime.Macro.name"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "arguments"
    fully_qualified_name: "jinja2.runtime.Macro.arguments"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "defaults"
    fully_qualified_name: "jinja2.runtime.Macro.defaults"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "catch_kwargs"
    fully_qualified_name: "jinja2.runtime.Macro.catch_kwargs"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "catch_varargs"
    fully_qualified_name: "jinja2.runtime.Macro.catch_varargs"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "caller"
    fully_qualified_name: "jinja2.runtime.Macro.caller"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "Undefined"
  fully_qualified_name: "jinja2.runtime.Undefined"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "jinja2.runtime.Undefined.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "jinja2.runtime.Undefined"
        fully_qualified_name: "jinja2.runtime.Undefined"
      }
    }
    parameters {
      name: "hint"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "obj"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
      has_default: true
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "exc"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__getattr__"
    fully_qualified_name: "jinja2.runtime.Undefined.__getattr__"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__eq__"
    fully_qualified_name: "jinja2.runtime.Undefined.__eq__"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "other"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__ne__"
    fully_qualified_name: "jinja2.runtime.Undefined.__ne__"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "other"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__hash__"
    fully_qualified_name: "jinja2.runtime.Undefined.__hash__"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__len__"
    fully_qualified_name: "jinja2.runtime.Undefined.__len__"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__iter__"
    fully_qualified_name: "jinja2.runtime.Undefined.__iter__"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__nonzero__"
    fully_qualified_name: "jinja2.runtime.Undefined.__nonzero__"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "__add__"
    fully_qualified_name: "jinja2.runtime.Undefined.__add__"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "__radd__"
    fully_qualified_name: "jinja2.runtime.Undefined.__radd__"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "__mul__"
    fully_qualified_name: "jinja2.runtime.Undefined.__mul__"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "__rmul__"
    fully_qualified_name: "jinja2.runtime.Undefined.__rmul__"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "__div__"
    fully_qualified_name: "jinja2.runtime.Undefined.__div__"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "__rdiv__"
    fully_qualified_name: "jinja2.runtime.Undefined.__rdiv__"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "__truediv__"
    fully_qualified_name: "jinja2.runtime.Undefined.__truediv__"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "__rtruediv__"
    fully_qualified_name: "jinja2.runtime.Undefined.__rtruediv__"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "__floordiv__"
    fully_qualified_name: "jinja2.runtime.Undefined.__floordiv__"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "__rfloordiv__"
    fully_qualified_name: "jinja2.runtime.Undefined.__rfloordiv__"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "__mod__"
    fully_qualified_name: "jinja2.runtime.Undefined.__mod__"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "__rmod__"
    fully_qualified_name: "jinja2.runtime.Undefined.__rmod__"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "__pos__"
    fully_qualified_name: "jinja2.runtime.Undefined.__pos__"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "__neg__"
    fully_qualified_name: "jinja2.runtime.Undefined.__neg__"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "__call__"
    fully_qualified_name: "jinja2.runtime.Undefined.__call__"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "__getitem__"
    fully_qualified_name: "jinja2.runtime.Undefined.__getitem__"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "__lt__"
    fully_qualified_name: "jinja2.runtime.Undefined.__lt__"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "__le__"
    fully_qualified_name: "jinja2.runtime.Undefined.__le__"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "__gt__"
    fully_qualified_name: "jinja2.runtime.Undefined.__gt__"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "__ge__"
    fully_qualified_name: "jinja2.runtime.Undefined.__ge__"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "__int__"
    fully_qualified_name: "jinja2.runtime.Undefined.__int__"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "__float__"
    fully_qualified_name: "jinja2.runtime.Undefined.__float__"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "__complex__"
    fully_qualified_name: "jinja2.runtime.Undefined.__complex__"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "__pow__"
    fully_qualified_name: "jinja2.runtime.Undefined.__pow__"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "__rpow__"
    fully_qualified_name: "jinja2.runtime.Undefined.__rpow__"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "__bool__"
    fully_qualified_name: "jinja2.runtime.Undefined.__bool__"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "DebugUndefined"
  fully_qualified_name: "jinja2.runtime.DebugUndefined"
  super_classes: "jinja2.runtime.Undefined"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "StrictUndefined"
  fully_qualified_name: "jinja2.runtime.StrictUndefined"
  super_classes: "jinja2.runtime.Undefined"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "__iter__"
    fully_qualified_name: "jinja2.runtime.StrictUndefined.__iter__"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "__len__"
    fully_qualified_name: "jinja2.runtime.StrictUndefined.__len__"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "__nonzero__"
    fully_qualified_name: "jinja2.runtime.StrictUndefined.__nonzero__"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "__eq__"
    fully_qualified_name: "jinja2.runtime.StrictUndefined.__eq__"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "__ne__"
    fully_qualified_name: "jinja2.runtime.StrictUndefined.__ne__"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "__bool__"
    fully_qualified_name: "jinja2.runtime.StrictUndefined.__bool__"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "__hash__"
    fully_qualified_name: "jinja2.runtime.StrictUndefined.__hash__"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
functions {
  name: "escape"
  fully_qualified_name: "markupsafe._native.escape"
  return_annotation {
    pretty_printed_name: "markupsafe.Markup"
    fully_qualified_name: "markupsafe.Markup"
  }
  parameters {
    name: "s"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[markupsafe.Markup,builtins.str]"
      kind: UNION
      args {
        pretty_printed_name: "markupsafe.Markup"
        fully_qualified_name: "markupsafe.Markup"
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "markup_join"
  fully_qualified_name: "jinja2.runtime.markup_join"
  parameters {
    name: "seq"
    kind: POSITIONAL_OR_KEYWORD
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "unicode_join"
  fully_qualified_name: "jinja2.runtime.unicode_join"
  parameters {
    name: "seq"
    kind: POSITIONAL_OR_KEYWORD
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "make_logging_undefined"
  fully_qualified_name: "jinja2.runtime.make_logging_undefined"
  return_annotation {
    pretty_printed_name: "Any"
    kind: ANY
  }
  parameters {
    name: "logger"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "base"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "concat"
  fully_qualified_name: "jinja2.utils.concat"
  type_annotation {
    pretty_printed_name: "Any"
    kind: ANY
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "missing"
  fully_qualified_name: "jinja2.utils.missing"
  type_annotation {
    pretty_printed_name: "Any"
    kind: ANY
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "to_string"
  fully_qualified_name: "jinja2.runtime.to_string"
  type_annotation {
    pretty_printed_name: "Any"
    kind: ANY
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "identity"
  fully_qualified_name: "jinja2.runtime.identity"
  type_annotation {
    pretty_printed_name: "Any"
    kind: ANY
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
