fully_qualified_name: "six.moves"
classes {
  name: "xrange"
  fully_qualified_name: "builtins.xrange"
  super_classes: "typing.Sized"
  super_classes: "typing.Iterable"
  super_classes: "typing.Reversible"
  methods {
    name: "__len__"
    fully_qualified_name: "builtins.xrange.__len__"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.xrange"
        fully_qualified_name: "builtins.xrange"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__iter__"
    fully_qualified_name: "builtins.xrange.__iter__"
    return_annotation {
      pretty_printed_name: "typing.Iterator[builtins.int]"
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.xrange"
        fully_qualified_name: "builtins.xrange"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__getitem__"
    fully_qualified_name: "builtins.xrange.__getitem__"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.xrange"
        fully_qualified_name: "builtins.xrange"
      }
    }
    parameters {
      name: "i"
      type_annotation {
        pretty_printed_name: "builtins._SupportsIndex"
        fully_qualified_name: "builtins._SupportsIndex"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__reversed__"
    fully_qualified_name: "builtins.xrange.__reversed__"
    return_annotation {
      pretty_printed_name: "typing.Iterator[builtins.int]"
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.xrange"
        fully_qualified_name: "builtins.xrange"
      }
    }
    valid_for: "27"
  }
  overloaded_methods {
    name: "__init__"
    fullname: "builtins.xrange.__init__"
    definitions {
      name: "__init__"
      fully_qualified_name: "builtins.xrange.__init__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.xrange"
          fully_qualified_name: "builtins.xrange"
        }
      }
      parameters {
        name: "stop"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__init__"
      fully_qualified_name: "builtins.xrange.__init__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.xrange"
          fully_qualified_name: "builtins.xrange"
        }
      }
      parameters {
        name: "start"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
      parameters {
        name: "stop"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
      parameters {
        name: "step"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "27"
  }
  valid_for: "27"
}
classes {
  name: "UserDict"
  fully_qualified_name: "UserDict.UserDict"
  super_classes: "builtins.dict"
  methods {
    name: "__init__"
    fully_qualified_name: "UserDict.UserDict.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UserDict.UserDict[UserDict._KT,UserDict._VT]"
        args {
          pretty_printed_name: "UserDict._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "UserDict._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "UserDict.UserDict"
      }
    }
    parameters {
      name: "initialdata"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Mapping[UserDict._KT,UserDict._VT]"
        args {
          pretty_printed_name: "UserDict._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "UserDict._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Mapping"
      }
      has_default: true
    }
    valid_for: "27"
  }
  is_generic: true
  valid_for: "27"
  attributes {
    name: "data"
    fully_qualified_name: "UserDict.UserDict.data"
    type_annotation {
      pretty_printed_name: "builtins.dict[UserDict._KT,UserDict._VT]"
      args {
        pretty_printed_name: "UserDict._KT"
        kind: TYPE_VAR
      }
      args {
        pretty_printed_name: "UserDict._VT"
        kind: TYPE_VAR
      }
      fully_qualified_name: "builtins.dict"
    }
    valid_for: "27"
  }
}
classes {
  name: "UserList"
  fully_qualified_name: "UserList.UserList"
  super_classes: "typing.MutableSequence"
  methods {
    name: "insert"
    fully_qualified_name: "UserList.UserList.insert"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UserList.UserList[UserList._T]"
        args {
          pretty_printed_name: "UserList._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "UserList.UserList"
      }
    }
    parameters {
      name: "index"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "object"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UserList._T"
        kind: TYPE_VAR
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__delitem__"
    fully_qualified_name: "UserList.UserList.__delitem__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "UserList.UserList[UserList._T]"
        args {
          pretty_printed_name: "UserList._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "UserList.UserList"
      }
    }
    parameters {
      name: "i"
      type_annotation {
        pretty_printed_name: "Union[builtins.int,builtins.slice]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.slice"
          fully_qualified_name: "builtins.slice"
        }
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__len__"
    fully_qualified_name: "UserList.UserList.__len__"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "UserList.UserList[UserList._T]"
        args {
          pretty_printed_name: "UserList._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "UserList.UserList"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "sort"
    fully_qualified_name: "UserList.UserList.sort"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UserList.UserList[UserList._T]"
        args {
          pretty_printed_name: "UserList._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "UserList.UserList"
      }
    }
    valid_for: "27"
  }
  overloaded_methods {
    name: "__setitem__"
    fullname: "UserList.UserList.__setitem__"
    definitions {
      name: "__setitem__"
      fully_qualified_name: "UserList.UserList.__setitem__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "UserList.UserList[UserList._T]"
          args {
            pretty_printed_name: "UserList._T"
            kind: TYPE_VAR
          }
          fully_qualified_name: "UserList.UserList"
        }
      }
      parameters {
        name: "i"
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
      parameters {
        name: "o"
        type_annotation {
          pretty_printed_name: "UserList._T"
          kind: TYPE_VAR
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__setitem__"
      fully_qualified_name: "UserList.UserList.__setitem__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "UserList.UserList[UserList._T]"
          args {
            pretty_printed_name: "UserList._T"
            kind: TYPE_VAR
          }
          fully_qualified_name: "UserList.UserList"
        }
      }
      parameters {
        name: "s"
        type_annotation {
          pretty_printed_name: "builtins.slice"
          fully_qualified_name: "builtins.slice"
        }
      }
      parameters {
        name: "o"
        type_annotation {
          pretty_printed_name: "typing.Iterable[UserList._T]"
          args {
            pretty_printed_name: "UserList._T"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "27"
  }
  overloaded_methods {
    name: "__getitem__"
    fullname: "UserList.UserList.__getitem__"
    definitions {
      name: "__getitem__"
      fully_qualified_name: "UserList.UserList.__getitem__"
      return_annotation {
        pretty_printed_name: "UserList._T"
        kind: TYPE_VAR
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "UserList.UserList[UserList._T]"
          args {
            pretty_printed_name: "UserList._T"
            kind: TYPE_VAR
          }
          fully_qualified_name: "UserList.UserList"
        }
      }
      parameters {
        name: "i"
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__getitem__"
      fully_qualified_name: "UserList.UserList.__getitem__"
      return_annotation {
        pretty_printed_name: "UserList._S"
        kind: TYPE_VAR
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "UserList._S"
          kind: TYPE_VAR
        }
      }
      parameters {
        name: "s"
        type_annotation {
          pretty_printed_name: "builtins.slice"
          fully_qualified_name: "builtins.slice"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "27"
  }
  is_generic: true
  valid_for: "27"
  attributes {
    name: "data"
    fully_qualified_name: "UserList.UserList.data"
    type_annotation {
      pretty_printed_name: "builtins.list[UserList._T]"
      args {
        pretty_printed_name: "UserList._T"
        kind: TYPE_VAR
      }
      fully_qualified_name: "builtins.list"
    }
    valid_for: "27"
  }
}
classes {
  name: "UserString"
  fully_qualified_name: "UserString.UserString"
  super_classes: "typing.Sequence"
  methods {
    name: "__init__"
    fully_qualified_name: "UserString.UserString.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UserString.UserString"
        fully_qualified_name: "UserString.UserString"
      }
    }
    parameters {
      name: "seq"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__int__"
    fully_qualified_name: "UserString.UserString.__int__"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "UserString.UserString"
        fully_qualified_name: "UserString.UserString"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__long__"
    fully_qualified_name: "UserString.UserString.__long__"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "UserString.UserString"
        fully_qualified_name: "UserString.UserString"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__float__"
    fully_qualified_name: "UserString.UserString.__float__"
    return_annotation {
      pretty_printed_name: "builtins.float"
      fully_qualified_name: "builtins.float"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "UserString.UserString"
        fully_qualified_name: "UserString.UserString"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__complex__"
    fully_qualified_name: "UserString.UserString.__complex__"
    return_annotation {
      pretty_printed_name: "builtins.complex"
      fully_qualified_name: "builtins.complex"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "UserString.UserString"
        fully_qualified_name: "UserString.UserString"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__hash__"
    fully_qualified_name: "UserString.UserString.__hash__"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UserString.UserString"
        fully_qualified_name: "UserString.UserString"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__len__"
    fully_qualified_name: "UserString.UserString.__len__"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "UserString.UserString"
        fully_qualified_name: "UserString.UserString"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__add__"
    fully_qualified_name: "UserString.UserString.__add__"
    return_annotation {
      pretty_printed_name: "UserString._UST"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "UserString._UST"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "other"
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__radd__"
    fully_qualified_name: "UserString.UserString.__radd__"
    return_annotation {
      pretty_printed_name: "UserString._UST"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "UserString._UST"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "other"
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__mul__"
    fully_qualified_name: "UserString.UserString.__mul__"
    return_annotation {
      pretty_printed_name: "UserString._UST"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "UserString._UST"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "other"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__rmul__"
    fully_qualified_name: "UserString.UserString.__rmul__"
    return_annotation {
      pretty_printed_name: "UserString._UST"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "UserString._UST"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "other"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__mod__"
    fully_qualified_name: "UserString.UserString.__mod__"
    return_annotation {
      pretty_printed_name: "UserString._UST"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "UserString._UST"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "args"
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "27"
  }
  methods {
    name: "capitalize"
    fully_qualified_name: "UserString.UserString.capitalize"
    return_annotation {
      pretty_printed_name: "UserString._UST"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UserString._UST"
        kind: TYPE_VAR
      }
    }
    valid_for: "27"
  }
  methods {
    name: "center"
    fully_qualified_name: "UserString.UserString.center"
    return_annotation {
      pretty_printed_name: "UserString._UST"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UserString._UST"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "width"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "27"
  }
  methods {
    name: "count"
    fully_qualified_name: "UserString.UserString.count"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UserString.UserString"
        fully_qualified_name: "UserString.UserString"
      }
    }
    parameters {
      name: "sub"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "start"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    parameters {
      name: "end"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "decode"
    fully_qualified_name: "UserString.UserString.decode"
    return_annotation {
      pretty_printed_name: "UserString._UST"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UserString._UST"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "encoding"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "errors"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "encode"
    fully_qualified_name: "UserString.UserString.encode"
    return_annotation {
      pretty_printed_name: "UserString._UST"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UserString._UST"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "encoding"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "errors"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "endswith"
    fully_qualified_name: "UserString.UserString.endswith"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UserString.UserString"
        fully_qualified_name: "UserString.UserString"
      }
    }
    parameters {
      name: "suffix"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.unicode,builtins.tuple[builtins.unicode]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.unicode"
          fully_qualified_name: "builtins.unicode"
        }
        args {
          pretty_printed_name: "builtins.tuple[builtins.unicode]"
          args {
            pretty_printed_name: "builtins.unicode"
            fully_qualified_name: "builtins.unicode"
          }
          fully_qualified_name: "builtins.tuple"
        }
      }
    }
    parameters {
      name: "start"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "end"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "expandtabs"
    fully_qualified_name: "UserString.UserString.expandtabs"
    return_annotation {
      pretty_printed_name: "UserString._UST"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UserString._UST"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "tabsize"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "find"
    fully_qualified_name: "UserString.UserString.find"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UserString.UserString"
        fully_qualified_name: "UserString.UserString"
      }
    }
    parameters {
      name: "sub"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.unicode"
        fully_qualified_name: "builtins.unicode"
      }
    }
    parameters {
      name: "start"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    parameters {
      name: "end"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "index"
    fully_qualified_name: "UserString.UserString.index"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UserString.UserString"
        fully_qualified_name: "UserString.UserString"
      }
    }
    parameters {
      name: "sub"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.unicode"
        fully_qualified_name: "builtins.unicode"
      }
    }
    parameters {
      name: "start"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    parameters {
      name: "end"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "isalpha"
    fully_qualified_name: "UserString.UserString.isalpha"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UserString.UserString"
        fully_qualified_name: "UserString.UserString"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "isalnum"
    fully_qualified_name: "UserString.UserString.isalnum"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UserString.UserString"
        fully_qualified_name: "UserString.UserString"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "isdecimal"
    fully_qualified_name: "UserString.UserString.isdecimal"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UserString.UserString"
        fully_qualified_name: "UserString.UserString"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "isdigit"
    fully_qualified_name: "UserString.UserString.isdigit"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UserString.UserString"
        fully_qualified_name: "UserString.UserString"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "islower"
    fully_qualified_name: "UserString.UserString.islower"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UserString.UserString"
        fully_qualified_name: "UserString.UserString"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "isnumeric"
    fully_qualified_name: "UserString.UserString.isnumeric"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UserString.UserString"
        fully_qualified_name: "UserString.UserString"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "isspace"
    fully_qualified_name: "UserString.UserString.isspace"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UserString.UserString"
        fully_qualified_name: "UserString.UserString"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "istitle"
    fully_qualified_name: "UserString.UserString.istitle"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UserString.UserString"
        fully_qualified_name: "UserString.UserString"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "isupper"
    fully_qualified_name: "UserString.UserString.isupper"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UserString.UserString"
        fully_qualified_name: "UserString.UserString"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "join"
    fully_qualified_name: "UserString.UserString.join"
    return_annotation {
      pretty_printed_name: "builtins.unicode"
      fully_qualified_name: "builtins.unicode"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UserString.UserString"
        fully_qualified_name: "UserString.UserString"
      }
    }
    parameters {
      name: "seq"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[builtins.unicode]"
        args {
          pretty_printed_name: "builtins.unicode"
          fully_qualified_name: "builtins.unicode"
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "ljust"
    fully_qualified_name: "UserString.UserString.ljust"
    return_annotation {
      pretty_printed_name: "UserString._UST"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UserString._UST"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "width"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "27"
  }
  methods {
    name: "lower"
    fully_qualified_name: "UserString.UserString.lower"
    return_annotation {
      pretty_printed_name: "UserString._UST"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UserString._UST"
        kind: TYPE_VAR
      }
    }
    valid_for: "27"
  }
  methods {
    name: "lstrip"
    fully_qualified_name: "UserString.UserString.lstrip"
    return_annotation {
      pretty_printed_name: "UserString._UST"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UserString._UST"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "chars"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.unicode,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.unicode"
          fully_qualified_name: "builtins.unicode"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "partition"
    fully_qualified_name: "UserString.UserString.partition"
    return_annotation {
      pretty_printed_name: "Tuple[builtins.unicode,builtins.unicode,builtins.unicode]"
      kind: TUPLE
      args {
        pretty_printed_name: "builtins.unicode"
        fully_qualified_name: "builtins.unicode"
      }
      args {
        pretty_printed_name: "builtins.unicode"
        fully_qualified_name: "builtins.unicode"
      }
      args {
        pretty_printed_name: "builtins.unicode"
        fully_qualified_name: "builtins.unicode"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UserString.UserString"
        fully_qualified_name: "UserString.UserString"
      }
    }
    parameters {
      name: "sep"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.unicode"
        fully_qualified_name: "builtins.unicode"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "replace"
    fully_qualified_name: "UserString.UserString.replace"
    return_annotation {
      pretty_printed_name: "UserString._UST"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UserString._UST"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "old"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.unicode"
        fully_qualified_name: "builtins.unicode"
      }
    }
    parameters {
      name: "new"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.unicode"
        fully_qualified_name: "builtins.unicode"
      }
    }
    parameters {
      name: "maxsplit"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "rfind"
    fully_qualified_name: "UserString.UserString.rfind"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UserString.UserString"
        fully_qualified_name: "UserString.UserString"
      }
    }
    parameters {
      name: "sub"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.unicode"
        fully_qualified_name: "builtins.unicode"
      }
    }
    parameters {
      name: "start"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    parameters {
      name: "end"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "rindex"
    fully_qualified_name: "UserString.UserString.rindex"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UserString.UserString"
        fully_qualified_name: "UserString.UserString"
      }
    }
    parameters {
      name: "sub"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.unicode"
        fully_qualified_name: "builtins.unicode"
      }
    }
    parameters {
      name: "start"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    parameters {
      name: "end"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "rjust"
    fully_qualified_name: "UserString.UserString.rjust"
    return_annotation {
      pretty_printed_name: "UserString._UST"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UserString._UST"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "width"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "27"
  }
  methods {
    name: "rpartition"
    fully_qualified_name: "UserString.UserString.rpartition"
    return_annotation {
      pretty_printed_name: "Tuple[builtins.unicode,builtins.unicode,builtins.unicode]"
      kind: TUPLE
      args {
        pretty_printed_name: "builtins.unicode"
        fully_qualified_name: "builtins.unicode"
      }
      args {
        pretty_printed_name: "builtins.unicode"
        fully_qualified_name: "builtins.unicode"
      }
      args {
        pretty_printed_name: "builtins.unicode"
        fully_qualified_name: "builtins.unicode"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UserString.UserString"
        fully_qualified_name: "UserString.UserString"
      }
    }
    parameters {
      name: "sep"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.unicode"
        fully_qualified_name: "builtins.unicode"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "rstrip"
    fully_qualified_name: "UserString.UserString.rstrip"
    return_annotation {
      pretty_printed_name: "UserString._UST"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UserString._UST"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "chars"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.unicode,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.unicode"
          fully_qualified_name: "builtins.unicode"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "split"
    fully_qualified_name: "UserString.UserString.split"
    return_annotation {
      pretty_printed_name: "builtins.list[builtins.unicode]"
      args {
        pretty_printed_name: "builtins.unicode"
        fully_qualified_name: "builtins.unicode"
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UserString.UserString"
        fully_qualified_name: "UserString.UserString"
      }
    }
    parameters {
      name: "sep"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.unicode,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.unicode"
          fully_qualified_name: "builtins.unicode"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "maxsplit"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "rsplit"
    fully_qualified_name: "UserString.UserString.rsplit"
    return_annotation {
      pretty_printed_name: "builtins.list[builtins.unicode]"
      args {
        pretty_printed_name: "builtins.unicode"
        fully_qualified_name: "builtins.unicode"
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UserString.UserString"
        fully_qualified_name: "UserString.UserString"
      }
    }
    parameters {
      name: "sep"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.unicode,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.unicode"
          fully_qualified_name: "builtins.unicode"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "maxsplit"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "splitlines"
    fully_qualified_name: "UserString.UserString.splitlines"
    return_annotation {
      pretty_printed_name: "builtins.list[builtins.unicode]"
      args {
        pretty_printed_name: "builtins.unicode"
        fully_qualified_name: "builtins.unicode"
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UserString.UserString"
        fully_qualified_name: "UserString.UserString"
      }
    }
    parameters {
      name: "keepends"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "startswith"
    fully_qualified_name: "UserString.UserString.startswith"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UserString.UserString"
        fully_qualified_name: "UserString.UserString"
      }
    }
    parameters {
      name: "prefix"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.unicode,builtins.tuple[builtins.unicode]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.unicode"
          fully_qualified_name: "builtins.unicode"
        }
        args {
          pretty_printed_name: "builtins.tuple[builtins.unicode]"
          args {
            pretty_printed_name: "builtins.unicode"
            fully_qualified_name: "builtins.unicode"
          }
          fully_qualified_name: "builtins.tuple"
        }
      }
    }
    parameters {
      name: "start"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "end"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "strip"
    fully_qualified_name: "UserString.UserString.strip"
    return_annotation {
      pretty_printed_name: "UserString._UST"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UserString._UST"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "chars"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.unicode,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.unicode"
          fully_qualified_name: "builtins.unicode"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "swapcase"
    fully_qualified_name: "UserString.UserString.swapcase"
    return_annotation {
      pretty_printed_name: "UserString._UST"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UserString._UST"
        kind: TYPE_VAR
      }
    }
    valid_for: "27"
  }
  methods {
    name: "title"
    fully_qualified_name: "UserString.UserString.title"
    return_annotation {
      pretty_printed_name: "UserString._UST"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UserString._UST"
        kind: TYPE_VAR
      }
    }
    valid_for: "27"
  }
  methods {
    name: "translate"
    fully_qualified_name: "UserString.UserString.translate"
    return_annotation {
      pretty_printed_name: "UserString._UST"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UserString._UST"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "27"
  }
  methods {
    name: "upper"
    fully_qualified_name: "UserString.UserString.upper"
    return_annotation {
      pretty_printed_name: "UserString._UST"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UserString._UST"
        kind: TYPE_VAR
      }
    }
    valid_for: "27"
  }
  methods {
    name: "zfill"
    fully_qualified_name: "UserString.UserString.zfill"
    return_annotation {
      pretty_printed_name: "UserString._UST"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UserString._UST"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "width"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "27"
  }
  overloaded_methods {
    name: "__getitem__"
    fullname: "UserString.UserString.__getitem__"
    definitions {
      name: "__getitem__"
      fully_qualified_name: "UserString.UserString.__getitem__"
      return_annotation {
        pretty_printed_name: "UserString._UST"
        kind: TYPE_VAR
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "UserString._UST"
          kind: TYPE_VAR
        }
      }
      parameters {
        name: "i"
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__getitem__"
      fully_qualified_name: "UserString.UserString.__getitem__"
      return_annotation {
        pretty_printed_name: "UserString._UST"
        kind: TYPE_VAR
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "UserString._UST"
          kind: TYPE_VAR
        }
      }
      parameters {
        name: "s"
        type_annotation {
          pretty_printed_name: "builtins.slice"
          fully_qualified_name: "builtins.slice"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "27"
  }
  valid_for: "27"
  attributes {
    name: "data"
    fully_qualified_name: "UserString.UserString.data"
    type_annotation {
      pretty_printed_name: "builtins.unicode"
      fully_qualified_name: "builtins.unicode"
    }
    valid_for: "27"
  }
}
classes {
  name: "filter"
  fully_qualified_name: "builtins.filter"
  super_classes: "typing.Iterator"
  methods {
    name: "__iter__"
    fully_qualified_name: "builtins.filter.__iter__"
    return_annotation {
      pretty_printed_name: "typing.Iterator[builtins._T]"
      args {
        pretty_printed_name: "builtins._T"
        kind: TYPE_VAR
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.filter[builtins._T]"
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.filter"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__next__"
    fully_qualified_name: "builtins.filter.__next__"
    return_annotation {
      pretty_printed_name: "builtins._T"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.filter[builtins._T]"
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.filter"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "__init__"
    fullname: "builtins.filter.__init__"
    definitions {
      name: "__init__"
      fully_qualified_name: "builtins.filter.__init__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.filter[builtins._T]"
          args {
            pretty_printed_name: "builtins._T"
            kind: TYPE_VAR
          }
          fully_qualified_name: "builtins.filter"
        }
      }
      parameters {
        name: "__function"
        type_annotation {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      parameters {
        name: "__iterable"
        type_annotation {
          pretty_printed_name: "typing.Iterable[Union[builtins._T,None]]"
          args {
            pretty_printed_name: "Union[builtins._T,None]"
            kind: UNION
            args {
              pretty_printed_name: "builtins._T"
              kind: TYPE_VAR
            }
            args {
              pretty_printed_name: "None"
              kind: NONE
            }
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__init__"
      fully_qualified_name: "builtins.filter.__init__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.filter[builtins._T]"
          args {
            pretty_printed_name: "builtins._T"
            kind: TYPE_VAR
          }
          fully_qualified_name: "builtins.filter"
        }
      }
      parameters {
        name: "__function"
        type_annotation {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
      }
      parameters {
        name: "__iterable"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T]"
          args {
            pretty_printed_name: "builtins._T"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  is_generic: true
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "map"
  fully_qualified_name: "builtins.map"
  super_classes: "typing.Iterator"
  methods {
    name: "__iter__"
    fully_qualified_name: "builtins.map.__iter__"
    return_annotation {
      pretty_printed_name: "typing.Iterator[builtins._S]"
      args {
        pretty_printed_name: "builtins._S"
        kind: TYPE_VAR
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.map[builtins._S]"
        args {
          pretty_printed_name: "builtins._S"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.map"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__next__"
    fully_qualified_name: "builtins.map.__next__"
    return_annotation {
      pretty_printed_name: "builtins._S"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.map[builtins._S]"
        args {
          pretty_printed_name: "builtins._S"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.map"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "__init__"
    fullname: "builtins.map.__init__"
    definitions {
      name: "__init__"
      fully_qualified_name: "builtins.map.__init__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.map[builtins._S]"
          args {
            pretty_printed_name: "builtins._S"
            kind: TYPE_VAR
          }
          fully_qualified_name: "builtins.map"
        }
      }
      parameters {
        name: "__func"
        type_annotation {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
      }
      parameters {
        name: "__iter1"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T1]"
          args {
            pretty_printed_name: "builtins._T1"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__init__"
      fully_qualified_name: "builtins.map.__init__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.map[builtins._S]"
          args {
            pretty_printed_name: "builtins._S"
            kind: TYPE_VAR
          }
          fully_qualified_name: "builtins.map"
        }
      }
      parameters {
        name: "__func"
        type_annotation {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
      }
      parameters {
        name: "__iter1"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T1]"
          args {
            pretty_printed_name: "builtins._T1"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "__iter2"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T2]"
          args {
            pretty_printed_name: "builtins._T2"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__init__"
      fully_qualified_name: "builtins.map.__init__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.map[builtins._S]"
          args {
            pretty_printed_name: "builtins._S"
            kind: TYPE_VAR
          }
          fully_qualified_name: "builtins.map"
        }
      }
      parameters {
        name: "__func"
        type_annotation {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
      }
      parameters {
        name: "__iter1"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T1]"
          args {
            pretty_printed_name: "builtins._T1"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "__iter2"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T2]"
          args {
            pretty_printed_name: "builtins._T2"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "__iter3"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T3]"
          args {
            pretty_printed_name: "builtins._T3"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__init__"
      fully_qualified_name: "builtins.map.__init__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.map[builtins._S]"
          args {
            pretty_printed_name: "builtins._S"
            kind: TYPE_VAR
          }
          fully_qualified_name: "builtins.map"
        }
      }
      parameters {
        name: "__func"
        type_annotation {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
      }
      parameters {
        name: "__iter1"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T1]"
          args {
            pretty_printed_name: "builtins._T1"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "__iter2"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T2]"
          args {
            pretty_printed_name: "builtins._T2"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "__iter3"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T3]"
          args {
            pretty_printed_name: "builtins._T3"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "__iter4"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T4]"
          args {
            pretty_printed_name: "builtins._T4"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__init__"
      fully_qualified_name: "builtins.map.__init__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.map[builtins._S]"
          args {
            pretty_printed_name: "builtins._S"
            kind: TYPE_VAR
          }
          fully_qualified_name: "builtins.map"
        }
      }
      parameters {
        name: "__func"
        type_annotation {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
      }
      parameters {
        name: "__iter1"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T1]"
          args {
            pretty_printed_name: "builtins._T1"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "__iter2"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T2]"
          args {
            pretty_printed_name: "builtins._T2"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "__iter3"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T3]"
          args {
            pretty_printed_name: "builtins._T3"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "__iter4"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T4]"
          args {
            pretty_printed_name: "builtins._T4"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "__iter5"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T5]"
          args {
            pretty_printed_name: "builtins._T5"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__init__"
      fully_qualified_name: "builtins.map.__init__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.map[builtins._S]"
          args {
            pretty_printed_name: "builtins._S"
            kind: TYPE_VAR
          }
          fully_qualified_name: "builtins.map"
        }
      }
      parameters {
        name: "__func"
        type_annotation {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
      }
      parameters {
        name: "__iter1"
        type_annotation {
          pretty_printed_name: "typing.Iterable[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "__iter2"
        type_annotation {
          pretty_printed_name: "typing.Iterable[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "__iter3"
        type_annotation {
          pretty_printed_name: "typing.Iterable[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "__iter4"
        type_annotation {
          pretty_printed_name: "typing.Iterable[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "__iter5"
        type_annotation {
          pretty_printed_name: "typing.Iterable[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "__iter6"
        type_annotation {
          pretty_printed_name: "typing.Iterable[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "iterables"
        kind: VAR_POSITIONAL
        type_annotation {
          pretty_printed_name: "typing.Iterable[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  is_generic: true
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "range"
  fully_qualified_name: "builtins.range"
  super_classes: "typing.Sequence"
  methods {
    name: "count"
    fully_qualified_name: "builtins.range.count"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.range"
        fully_qualified_name: "builtins.range"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "index"
    fully_qualified_name: "builtins.range.index"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.range"
        fully_qualified_name: "builtins.range"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__len__"
    fully_qualified_name: "builtins.range.__len__"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.range"
        fully_qualified_name: "builtins.range"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__contains__"
    fully_qualified_name: "builtins.range.__contains__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.range"
        fully_qualified_name: "builtins.range"
      }
    }
    parameters {
      name: "o"
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__iter__"
    fully_qualified_name: "builtins.range.__iter__"
    return_annotation {
      pretty_printed_name: "typing.Iterator[builtins.int]"
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.range"
        fully_qualified_name: "builtins.range"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__repr__"
    fully_qualified_name: "builtins.range.__repr__"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.range"
        fully_qualified_name: "builtins.range"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__reversed__"
    fully_qualified_name: "builtins.range.__reversed__"
    return_annotation {
      pretty_printed_name: "typing.Iterator[builtins.int]"
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.range"
        fully_qualified_name: "builtins.range"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "__init__"
    fullname: "builtins.range.__init__"
    definitions {
      name: "__init__"
      fully_qualified_name: "builtins.range.__init__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.range"
          fully_qualified_name: "builtins.range"
        }
      }
      parameters {
        name: "stop"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__init__"
      fully_qualified_name: "builtins.range.__init__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.range"
          fully_qualified_name: "builtins.range"
        }
      }
      parameters {
        name: "start"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
      }
      parameters {
        name: "stop"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
      }
      parameters {
        name: "step"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "__getitem__"
    fullname: "builtins.range.__getitem__"
    definitions {
      name: "__getitem__"
      fully_qualified_name: "builtins.range.__getitem__"
      return_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "builtins.range"
          fully_qualified_name: "builtins.range"
        }
      }
      parameters {
        name: "i"
        type_annotation {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__getitem__"
      fully_qualified_name: "builtins.range.__getitem__"
      return_annotation {
        pretty_printed_name: "builtins.range"
        fully_qualified_name: "builtins.range"
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "builtins.range"
          fully_qualified_name: "builtins.range"
        }
      }
      parameters {
        name: "s"
        type_annotation {
          pretty_printed_name: "builtins.slice"
          fully_qualified_name: "builtins.slice"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "start"
    fully_qualified_name: "builtins.range.start"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "stop"
    fully_qualified_name: "builtins.range.stop"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "step"
    fully_qualified_name: "builtins.range.step"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "zip"
  fully_qualified_name: "builtins.zip"
  super_classes: "typing.Iterator"
  methods {
    name: "__iter__"
    fully_qualified_name: "builtins.zip.__iter__"
    return_annotation {
      pretty_printed_name: "typing.Iterator[builtins._T_co]"
      args {
        pretty_printed_name: "builtins._T_co"
        kind: TYPE_VAR
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.zip[builtins._T_co]"
        args {
          pretty_printed_name: "builtins._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.zip"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__next__"
    fully_qualified_name: "builtins.zip.__next__"
    return_annotation {
      pretty_printed_name: "builtins._T_co"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.zip[builtins._T_co]"
        args {
          pretty_printed_name: "builtins._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.zip"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "__new__"
    fullname: "builtins.zip.__new__"
    definitions {
      name: "__new__"
      fully_qualified_name: "builtins.zip.__new__"
      return_annotation {
        pretty_printed_name: "builtins.zip[Tuple[builtins._T1]]"
        args {
          pretty_printed_name: "Tuple[builtins._T1]"
          kind: TUPLE
          args {
            pretty_printed_name: "builtins._T1"
            kind: TYPE_VAR
          }
        }
        fully_qualified_name: "builtins.zip"
      }
      parameters {
        name: "cls"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Type[builtins.zip[builtins._T_co]]"
          kind: TYPE
          args {
            pretty_printed_name: "builtins.zip[builtins._T_co]"
            args {
              pretty_printed_name: "builtins._T_co"
              kind: TYPE_VAR
            }
            fully_qualified_name: "builtins.zip"
          }
        }
      }
      parameters {
        name: "__iter1"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T1]"
          args {
            pretty_printed_name: "builtins._T1"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__new__"
      fully_qualified_name: "builtins.zip.__new__"
      return_annotation {
        pretty_printed_name: "builtins.zip[Tuple[builtins._T1,builtins._T2]]"
        args {
          pretty_printed_name: "Tuple[builtins._T1,builtins._T2]"
          kind: TUPLE
          args {
            pretty_printed_name: "builtins._T1"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "builtins._T2"
            kind: TYPE_VAR
          }
        }
        fully_qualified_name: "builtins.zip"
      }
      parameters {
        name: "cls"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Type[builtins.zip[builtins._T_co]]"
          kind: TYPE
          args {
            pretty_printed_name: "builtins.zip[builtins._T_co]"
            args {
              pretty_printed_name: "builtins._T_co"
              kind: TYPE_VAR
            }
            fully_qualified_name: "builtins.zip"
          }
        }
      }
      parameters {
        name: "__iter1"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T1]"
          args {
            pretty_printed_name: "builtins._T1"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "__iter2"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T2]"
          args {
            pretty_printed_name: "builtins._T2"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__new__"
      fully_qualified_name: "builtins.zip.__new__"
      return_annotation {
        pretty_printed_name: "builtins.zip[Tuple[builtins._T1,builtins._T2,builtins._T3]]"
        args {
          pretty_printed_name: "Tuple[builtins._T1,builtins._T2,builtins._T3]"
          kind: TUPLE
          args {
            pretty_printed_name: "builtins._T1"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "builtins._T2"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "builtins._T3"
            kind: TYPE_VAR
          }
        }
        fully_qualified_name: "builtins.zip"
      }
      parameters {
        name: "cls"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Type[builtins.zip[builtins._T_co]]"
          kind: TYPE
          args {
            pretty_printed_name: "builtins.zip[builtins._T_co]"
            args {
              pretty_printed_name: "builtins._T_co"
              kind: TYPE_VAR
            }
            fully_qualified_name: "builtins.zip"
          }
        }
      }
      parameters {
        name: "__iter1"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T1]"
          args {
            pretty_printed_name: "builtins._T1"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "__iter2"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T2]"
          args {
            pretty_printed_name: "builtins._T2"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "__iter3"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T3]"
          args {
            pretty_printed_name: "builtins._T3"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__new__"
      fully_qualified_name: "builtins.zip.__new__"
      return_annotation {
        pretty_printed_name: "builtins.zip[Tuple[builtins._T1,builtins._T2,builtins._T3,builtins._T4]]"
        args {
          pretty_printed_name: "Tuple[builtins._T1,builtins._T2,builtins._T3,builtins._T4]"
          kind: TUPLE
          args {
            pretty_printed_name: "builtins._T1"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "builtins._T2"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "builtins._T3"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "builtins._T4"
            kind: TYPE_VAR
          }
        }
        fully_qualified_name: "builtins.zip"
      }
      parameters {
        name: "cls"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Type[builtins.zip[builtins._T_co]]"
          kind: TYPE
          args {
            pretty_printed_name: "builtins.zip[builtins._T_co]"
            args {
              pretty_printed_name: "builtins._T_co"
              kind: TYPE_VAR
            }
            fully_qualified_name: "builtins.zip"
          }
        }
      }
      parameters {
        name: "__iter1"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T1]"
          args {
            pretty_printed_name: "builtins._T1"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "__iter2"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T2]"
          args {
            pretty_printed_name: "builtins._T2"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "__iter3"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T3]"
          args {
            pretty_printed_name: "builtins._T3"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "__iter4"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T4]"
          args {
            pretty_printed_name: "builtins._T4"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__new__"
      fully_qualified_name: "builtins.zip.__new__"
      return_annotation {
        pretty_printed_name: "builtins.zip[Tuple[builtins._T1,builtins._T2,builtins._T3,builtins._T4,builtins._T5]]"
        args {
          pretty_printed_name: "Tuple[builtins._T1,builtins._T2,builtins._T3,builtins._T4,builtins._T5]"
          kind: TUPLE
          args {
            pretty_printed_name: "builtins._T1"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "builtins._T2"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "builtins._T3"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "builtins._T4"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "builtins._T5"
            kind: TYPE_VAR
          }
        }
        fully_qualified_name: "builtins.zip"
      }
      parameters {
        name: "cls"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Type[builtins.zip[builtins._T_co]]"
          kind: TYPE
          args {
            pretty_printed_name: "builtins.zip[builtins._T_co]"
            args {
              pretty_printed_name: "builtins._T_co"
              kind: TYPE_VAR
            }
            fully_qualified_name: "builtins.zip"
          }
        }
      }
      parameters {
        name: "__iter1"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T1]"
          args {
            pretty_printed_name: "builtins._T1"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "__iter2"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T2]"
          args {
            pretty_printed_name: "builtins._T2"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "__iter3"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T3]"
          args {
            pretty_printed_name: "builtins._T3"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "__iter4"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T4]"
          args {
            pretty_printed_name: "builtins._T4"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "__iter5"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T5]"
          args {
            pretty_printed_name: "builtins._T5"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__new__"
      fully_qualified_name: "builtins.zip.__new__"
      return_annotation {
        pretty_printed_name: "builtins.zip[builtins.tuple[Any]]"
        args {
          pretty_printed_name: "builtins.tuple[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "builtins.tuple"
        }
        fully_qualified_name: "builtins.zip"
      }
      parameters {
        name: "cls"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Type[builtins.zip[builtins._T_co]]"
          kind: TYPE
          args {
            pretty_printed_name: "builtins.zip[builtins._T_co]"
            args {
              pretty_printed_name: "builtins._T_co"
              kind: TYPE_VAR
            }
            fully_qualified_name: "builtins.zip"
          }
        }
      }
      parameters {
        name: "__iter1"
        type_annotation {
          pretty_printed_name: "typing.Iterable[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "__iter2"
        type_annotation {
          pretty_printed_name: "typing.Iterable[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "__iter3"
        type_annotation {
          pretty_printed_name: "typing.Iterable[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "__iter4"
        type_annotation {
          pretty_printed_name: "typing.Iterable[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "__iter5"
        type_annotation {
          pretty_printed_name: "typing.Iterable[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "__iter6"
        type_annotation {
          pretty_printed_name: "typing.Iterable[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "iterables"
        kind: VAR_POSITIONAL
        type_annotation {
          pretty_printed_name: "typing.Iterable[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  is_generic: true
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "UserDict"
  fully_qualified_name: "collections.UserDict"
  super_classes: "typing.MutableMapping"
  methods {
    name: "__init__"
    fully_qualified_name: "collections.UserDict.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "collections.UserDict[collections._KT,collections._VT]"
        args {
          pretty_printed_name: "collections._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "collections._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "collections.UserDict"
      }
    }
    parameters {
      name: "__dict"
      type_annotation {
        pretty_printed_name: "Union[typing.Mapping[collections._KT,collections._VT],None]"
        kind: UNION
        args {
          pretty_printed_name: "typing.Mapping[collections._KT,collections._VT]"
          args {
            pretty_printed_name: "collections._KT"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "collections._VT"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Mapping"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "kwargs"
      kind: VAR_KEYWORD
      type_annotation {
        pretty_printed_name: "collections._VT"
        kind: TYPE_VAR
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__len__"
    fully_qualified_name: "collections.UserDict.__len__"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "collections.UserDict[collections._KT,collections._VT]"
        args {
          pretty_printed_name: "collections._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "collections._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "collections.UserDict"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__getitem__"
    fully_qualified_name: "collections.UserDict.__getitem__"
    return_annotation {
      pretty_printed_name: "collections._VT"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "collections.UserDict[collections._KT,collections._VT]"
        args {
          pretty_printed_name: "collections._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "collections._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "collections.UserDict"
      }
    }
    parameters {
      name: "key"
      type_annotation {
        pretty_printed_name: "collections._KT"
        kind: TYPE_VAR
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__setitem__"
    fully_qualified_name: "collections.UserDict.__setitem__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "collections.UserDict[collections._KT,collections._VT]"
        args {
          pretty_printed_name: "collections._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "collections._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "collections.UserDict"
      }
    }
    parameters {
      name: "key"
      type_annotation {
        pretty_printed_name: "collections._KT"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "item"
      type_annotation {
        pretty_printed_name: "collections._VT"
        kind: TYPE_VAR
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__delitem__"
    fully_qualified_name: "collections.UserDict.__delitem__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "collections.UserDict[collections._KT,collections._VT]"
        args {
          pretty_printed_name: "collections._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "collections._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "collections.UserDict"
      }
    }
    parameters {
      name: "key"
      type_annotation {
        pretty_printed_name: "collections._KT"
        kind: TYPE_VAR
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__iter__"
    fully_qualified_name: "collections.UserDict.__iter__"
    return_annotation {
      pretty_printed_name: "typing.Iterator[collections._KT]"
      args {
        pretty_printed_name: "collections._KT"
        kind: TYPE_VAR
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "collections.UserDict[collections._KT,collections._VT]"
        args {
          pretty_printed_name: "collections._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "collections._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "collections.UserDict"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__contains__"
    fully_qualified_name: "collections.UserDict.__contains__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "collections.UserDict[collections._KT,collections._VT]"
        args {
          pretty_printed_name: "collections._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "collections._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "collections.UserDict"
      }
    }
    parameters {
      name: "key"
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "copy"
    fully_qualified_name: "collections.UserDict.copy"
    return_annotation {
      pretty_printed_name: "collections._S"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "collections._S"
        kind: TYPE_VAR
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "fromkeys"
    fully_qualified_name: "collections.UserDict.fromkeys"
    return_annotation {
      pretty_printed_name: "collections._S"
      kind: TYPE_VAR
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[collections._S]"
        kind: TYPE
        args {
          pretty_printed_name: "collections._S"
          kind: TYPE_VAR
        }
      }
    }
    parameters {
      name: "iterable"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[collections._KT]"
        args {
          pretty_printed_name: "collections._KT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[collections._VT,None]"
        kind: UNION
        args {
          pretty_printed_name: "collections._VT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "classmethod"
    is_class_method: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  is_generic: true
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "data"
    fully_qualified_name: "collections.UserDict.data"
    type_annotation {
      pretty_printed_name: "builtins.dict[collections._KT,collections._VT]"
      args {
        pretty_printed_name: "collections._KT"
        kind: TYPE_VAR
      }
      args {
        pretty_printed_name: "collections._VT"
        kind: TYPE_VAR
      }
      fully_qualified_name: "builtins.dict"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "UserList"
  fully_qualified_name: "collections.UserList"
  super_classes: "typing.MutableSequence"
  methods {
    name: "__init__"
    fully_qualified_name: "collections.UserList.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "collections.UserList[collections._T]"
        args {
          pretty_printed_name: "collections._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "collections.UserList"
      }
    }
    parameters {
      name: "initlist"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.Iterable[collections._T],None]"
        kind: UNION
        args {
          pretty_printed_name: "typing.Iterable[collections._T]"
          args {
            pretty_printed_name: "collections._T"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__lt__"
    fully_qualified_name: "collections.UserList.__lt__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "collections.UserList[collections._T]"
        args {
          pretty_printed_name: "collections._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "collections.UserList"
      }
    }
    parameters {
      name: "other"
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__le__"
    fully_qualified_name: "collections.UserList.__le__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "collections.UserList[collections._T]"
        args {
          pretty_printed_name: "collections._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "collections.UserList"
      }
    }
    parameters {
      name: "other"
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__gt__"
    fully_qualified_name: "collections.UserList.__gt__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "collections.UserList[collections._T]"
        args {
          pretty_printed_name: "collections._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "collections.UserList"
      }
    }
    parameters {
      name: "other"
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__ge__"
    fully_qualified_name: "collections.UserList.__ge__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "collections.UserList[collections._T]"
        args {
          pretty_printed_name: "collections._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "collections.UserList"
      }
    }
    parameters {
      name: "other"
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__contains__"
    fully_qualified_name: "collections.UserList.__contains__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "collections.UserList[collections._T]"
        args {
          pretty_printed_name: "collections._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "collections.UserList"
      }
    }
    parameters {
      name: "item"
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__len__"
    fully_qualified_name: "collections.UserList.__len__"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "collections.UserList[collections._T]"
        args {
          pretty_printed_name: "collections._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "collections.UserList"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__delitem__"
    fully_qualified_name: "collections.UserList.__delitem__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "collections.UserList[collections._T]"
        args {
          pretty_printed_name: "collections._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "collections.UserList"
      }
    }
    parameters {
      name: "i"
      type_annotation {
        pretty_printed_name: "Union[builtins.int,builtins.slice]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.slice"
          fully_qualified_name: "builtins.slice"
        }
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__add__"
    fully_qualified_name: "collections.UserList.__add__"
    return_annotation {
      pretty_printed_name: "collections._S"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "collections._S"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "other"
      type_annotation {
        pretty_printed_name: "typing.Iterable[collections._T]"
        args {
          pretty_printed_name: "collections._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__iadd__"
    fully_qualified_name: "collections.UserList.__iadd__"
    return_annotation {
      pretty_printed_name: "collections._S"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "collections._S"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "other"
      type_annotation {
        pretty_printed_name: "typing.Iterable[collections._T]"
        args {
          pretty_printed_name: "collections._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__mul__"
    fully_qualified_name: "collections.UserList.__mul__"
    return_annotation {
      pretty_printed_name: "collections._S"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "collections._S"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "n"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__imul__"
    fully_qualified_name: "collections.UserList.__imul__"
    return_annotation {
      pretty_printed_name: "collections._S"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "collections._S"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "n"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "append"
    fully_qualified_name: "collections.UserList.append"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "collections.UserList[collections._T]"
        args {
          pretty_printed_name: "collections._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "collections.UserList"
      }
    }
    parameters {
      name: "item"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "collections._T"
        kind: TYPE_VAR
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "insert"
    fully_qualified_name: "collections.UserList.insert"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "collections.UserList[collections._T]"
        args {
          pretty_printed_name: "collections._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "collections.UserList"
      }
    }
    parameters {
      name: "i"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "item"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "collections._T"
        kind: TYPE_VAR
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "pop"
    fully_qualified_name: "collections.UserList.pop"
    return_annotation {
      pretty_printed_name: "collections._T"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "collections.UserList[collections._T]"
        args {
          pretty_printed_name: "collections._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "collections.UserList"
      }
    }
    parameters {
      name: "i"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "remove"
    fully_qualified_name: "collections.UserList.remove"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "collections.UserList[collections._T]"
        args {
          pretty_printed_name: "collections._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "collections.UserList"
      }
    }
    parameters {
      name: "item"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "collections._T"
        kind: TYPE_VAR
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "clear"
    fully_qualified_name: "collections.UserList.clear"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "collections.UserList[collections._T]"
        args {
          pretty_printed_name: "collections._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "collections.UserList"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "copy"
    fully_qualified_name: "collections.UserList.copy"
    return_annotation {
      pretty_printed_name: "collections._S"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "collections._S"
        kind: TYPE_VAR
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "count"
    fully_qualified_name: "collections.UserList.count"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "collections.UserList[collections._T]"
        args {
          pretty_printed_name: "collections._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "collections.UserList"
      }
    }
    parameters {
      name: "item"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "collections._T"
        kind: TYPE_VAR
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "index"
    fully_qualified_name: "collections.UserList.index"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "collections.UserList[collections._T]"
        args {
          pretty_printed_name: "collections._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "collections.UserList"
      }
    }
    parameters {
      name: "item"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "collections._T"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "reverse"
    fully_qualified_name: "collections.UserList.reverse"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "collections.UserList[collections._T]"
        args {
          pretty_printed_name: "collections._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "collections.UserList"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "sort"
    fully_qualified_name: "collections.UserList.sort"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "collections.UserList[collections._T]"
        args {
          pretty_printed_name: "collections._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "collections.UserList"
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "kwds"
      kind: VAR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "extend"
    fully_qualified_name: "collections.UserList.extend"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "collections.UserList[collections._T]"
        args {
          pretty_printed_name: "collections._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "collections.UserList"
      }
    }
    parameters {
      name: "other"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[collections._T]"
        args {
          pretty_printed_name: "collections._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "__getitem__"
    fullname: "collections.UserList.__getitem__"
    definitions {
      name: "__getitem__"
      fully_qualified_name: "collections.UserList.__getitem__"
      return_annotation {
        pretty_printed_name: "collections._T"
        kind: TYPE_VAR
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "collections.UserList[collections._T]"
          args {
            pretty_printed_name: "collections._T"
            kind: TYPE_VAR
          }
          fully_qualified_name: "collections.UserList"
        }
      }
      parameters {
        name: "i"
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__getitem__"
      fully_qualified_name: "collections.UserList.__getitem__"
      return_annotation {
        pretty_printed_name: "typing.MutableSequence[collections._T]"
        args {
          pretty_printed_name: "collections._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.MutableSequence"
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "collections.UserList[collections._T]"
          args {
            pretty_printed_name: "collections._T"
            kind: TYPE_VAR
          }
          fully_qualified_name: "collections.UserList"
        }
      }
      parameters {
        name: "i"
        type_annotation {
          pretty_printed_name: "builtins.slice"
          fully_qualified_name: "builtins.slice"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "__setitem__"
    fullname: "collections.UserList.__setitem__"
    definitions {
      name: "__setitem__"
      fully_qualified_name: "collections.UserList.__setitem__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "collections.UserList[collections._T]"
          args {
            pretty_printed_name: "collections._T"
            kind: TYPE_VAR
          }
          fully_qualified_name: "collections.UserList"
        }
      }
      parameters {
        name: "i"
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
      parameters {
        name: "o"
        type_annotation {
          pretty_printed_name: "collections._T"
          kind: TYPE_VAR
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__setitem__"
      fully_qualified_name: "collections.UserList.__setitem__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "collections.UserList[collections._T]"
          args {
            pretty_printed_name: "collections._T"
            kind: TYPE_VAR
          }
          fully_qualified_name: "collections.UserList"
        }
      }
      parameters {
        name: "i"
        type_annotation {
          pretty_printed_name: "builtins.slice"
          fully_qualified_name: "builtins.slice"
        }
      }
      parameters {
        name: "o"
        type_annotation {
          pretty_printed_name: "typing.Iterable[collections._T]"
          args {
            pretty_printed_name: "collections._T"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  is_generic: true
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "data"
    fully_qualified_name: "collections.UserList.data"
    type_annotation {
      pretty_printed_name: "builtins.list[collections._T]"
      args {
        pretty_printed_name: "collections._T"
        kind: TYPE_VAR
      }
      fully_qualified_name: "builtins.list"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "UserString"
  fully_qualified_name: "collections.UserString"
  super_classes: "typing.Sequence"
  methods {
    name: "__init__"
    fully_qualified_name: "collections.UserString.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "collections.UserString"
        fully_qualified_name: "collections.UserString"
      }
    }
    parameters {
      name: "seq"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__int__"
    fully_qualified_name: "collections.UserString.__int__"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "collections.UserString"
        fully_qualified_name: "collections.UserString"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__float__"
    fully_qualified_name: "collections.UserString.__float__"
    return_annotation {
      pretty_printed_name: "builtins.float"
      fully_qualified_name: "builtins.float"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "collections.UserString"
        fully_qualified_name: "collections.UserString"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__complex__"
    fully_qualified_name: "collections.UserString.__complex__"
    return_annotation {
      pretty_printed_name: "builtins.complex"
      fully_qualified_name: "builtins.complex"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "collections.UserString"
        fully_qualified_name: "collections.UserString"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__getnewargs__"
    fully_qualified_name: "collections.UserString.__getnewargs__"
    return_annotation {
      pretty_printed_name: "Tuple[builtins.str]"
      kind: TUPLE
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "collections.UserString"
        fully_qualified_name: "collections.UserString"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__lt__"
    fully_qualified_name: "collections.UserString.__lt__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "collections.UserString"
        fully_qualified_name: "collections.UserString"
      }
    }
    parameters {
      name: "string"
      type_annotation {
        pretty_printed_name: "Union[builtins.str,collections.UserString]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "collections.UserString"
          fully_qualified_name: "collections.UserString"
        }
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__le__"
    fully_qualified_name: "collections.UserString.__le__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "collections.UserString"
        fully_qualified_name: "collections.UserString"
      }
    }
    parameters {
      name: "string"
      type_annotation {
        pretty_printed_name: "Union[builtins.str,collections.UserString]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "collections.UserString"
          fully_qualified_name: "collections.UserString"
        }
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__gt__"
    fully_qualified_name: "collections.UserString.__gt__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "collections.UserString"
        fully_qualified_name: "collections.UserString"
      }
    }
    parameters {
      name: "string"
      type_annotation {
        pretty_printed_name: "Union[builtins.str,collections.UserString]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "collections.UserString"
          fully_qualified_name: "collections.UserString"
        }
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__ge__"
    fully_qualified_name: "collections.UserString.__ge__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "collections.UserString"
        fully_qualified_name: "collections.UserString"
      }
    }
    parameters {
      name: "string"
      type_annotation {
        pretty_printed_name: "Union[builtins.str,collections.UserString]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "collections.UserString"
          fully_qualified_name: "collections.UserString"
        }
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__contains__"
    fully_qualified_name: "collections.UserString.__contains__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "collections.UserString"
        fully_qualified_name: "collections.UserString"
      }
    }
    parameters {
      name: "char"
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__len__"
    fully_qualified_name: "collections.UserString.__len__"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "collections.UserString"
        fully_qualified_name: "collections.UserString"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__getitem__"
    fully_qualified_name: "collections.UserString.__getitem__"
    return_annotation {
      pretty_printed_name: "collections._UserStringT"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "collections._UserStringT"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "i"
      type_annotation {
        pretty_printed_name: "Union[builtins.int,builtins.slice]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.slice"
          fully_qualified_name: "builtins.slice"
        }
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__add__"
    fully_qualified_name: "collections.UserString.__add__"
    return_annotation {
      pretty_printed_name: "collections._UserStringT"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "collections._UserStringT"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "other"
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__mul__"
    fully_qualified_name: "collections.UserString.__mul__"
    return_annotation {
      pretty_printed_name: "collections._UserStringT"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "collections._UserStringT"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "n"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__mod__"
    fully_qualified_name: "collections.UserString.__mod__"
    return_annotation {
      pretty_printed_name: "collections._UserStringT"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "collections._UserStringT"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "args"
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "capitalize"
    fully_qualified_name: "collections.UserString.capitalize"
    return_annotation {
      pretty_printed_name: "collections._UserStringT"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "collections._UserStringT"
        kind: TYPE_VAR
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "casefold"
    fully_qualified_name: "collections.UserString.casefold"
    return_annotation {
      pretty_printed_name: "collections._UserStringT"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "collections._UserStringT"
        kind: TYPE_VAR
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "center"
    fully_qualified_name: "collections.UserString.center"
    return_annotation {
      pretty_printed_name: "collections._UserStringT"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "collections._UserStringT"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "width"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "count"
    fully_qualified_name: "collections.UserString.count"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "collections.UserString"
        fully_qualified_name: "collections.UserString"
      }
    }
    parameters {
      name: "sub"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,collections.UserString]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "collections.UserString"
          fully_qualified_name: "collections.UserString"
        }
      }
    }
    parameters {
      name: "start"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    parameters {
      name: "end"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "encode"
    fully_qualified_name: "collections.UserString.encode"
    return_annotation {
      pretty_printed_name: "collections._UserStringT"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "collections._UserStringT"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "encoding"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "errors"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
  }
  methods {
    name: "encode"
    fully_qualified_name: "collections.UserString.encode"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "collections.UserString"
        fully_qualified_name: "collections.UserString"
      }
    }
    parameters {
      name: "encoding"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "errors"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "endswith"
    fully_qualified_name: "collections.UserString.endswith"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "collections.UserString"
        fully_qualified_name: "collections.UserString"
      }
    }
    parameters {
      name: "suffix"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,builtins.tuple[builtins.str]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.tuple[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "builtins.tuple"
        }
      }
    }
    parameters {
      name: "start"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "end"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "expandtabs"
    fully_qualified_name: "collections.UserString.expandtabs"
    return_annotation {
      pretty_printed_name: "collections._UserStringT"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "collections._UserStringT"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "tabsize"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "find"
    fully_qualified_name: "collections.UserString.find"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "collections.UserString"
        fully_qualified_name: "collections.UserString"
      }
    }
    parameters {
      name: "sub"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,collections.UserString]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "collections.UserString"
          fully_qualified_name: "collections.UserString"
        }
      }
    }
    parameters {
      name: "start"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    parameters {
      name: "end"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "format"
    fully_qualified_name: "collections.UserString.format"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "collections.UserString"
        fully_qualified_name: "collections.UserString"
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "kwds"
      kind: VAR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "format_map"
    fully_qualified_name: "collections.UserString.format_map"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "collections.UserString"
        fully_qualified_name: "collections.UserString"
      }
    }
    parameters {
      name: "mapping"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Mapping[builtins.str,Any]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "typing.Mapping"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "index"
    fully_qualified_name: "collections.UserString.index"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "collections.UserString"
        fully_qualified_name: "collections.UserString"
      }
    }
    parameters {
      name: "sub"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "start"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    parameters {
      name: "end"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "isalpha"
    fully_qualified_name: "collections.UserString.isalpha"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "collections.UserString"
        fully_qualified_name: "collections.UserString"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "isalnum"
    fully_qualified_name: "collections.UserString.isalnum"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "collections.UserString"
        fully_qualified_name: "collections.UserString"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "isdecimal"
    fully_qualified_name: "collections.UserString.isdecimal"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "collections.UserString"
        fully_qualified_name: "collections.UserString"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "isdigit"
    fully_qualified_name: "collections.UserString.isdigit"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "collections.UserString"
        fully_qualified_name: "collections.UserString"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "isidentifier"
    fully_qualified_name: "collections.UserString.isidentifier"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "collections.UserString"
        fully_qualified_name: "collections.UserString"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "islower"
    fully_qualified_name: "collections.UserString.islower"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "collections.UserString"
        fully_qualified_name: "collections.UserString"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "isnumeric"
    fully_qualified_name: "collections.UserString.isnumeric"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "collections.UserString"
        fully_qualified_name: "collections.UserString"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "isprintable"
    fully_qualified_name: "collections.UserString.isprintable"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "collections.UserString"
        fully_qualified_name: "collections.UserString"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "isspace"
    fully_qualified_name: "collections.UserString.isspace"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "collections.UserString"
        fully_qualified_name: "collections.UserString"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "istitle"
    fully_qualified_name: "collections.UserString.istitle"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "collections.UserString"
        fully_qualified_name: "collections.UserString"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "isupper"
    fully_qualified_name: "collections.UserString.isupper"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "collections.UserString"
        fully_qualified_name: "collections.UserString"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "join"
    fully_qualified_name: "collections.UserString.join"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "collections.UserString"
        fully_qualified_name: "collections.UserString"
      }
    }
    parameters {
      name: "seq"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "ljust"
    fully_qualified_name: "collections.UserString.ljust"
    return_annotation {
      pretty_printed_name: "collections._UserStringT"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "collections._UserStringT"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "width"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "lower"
    fully_qualified_name: "collections.UserString.lower"
    return_annotation {
      pretty_printed_name: "collections._UserStringT"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "collections._UserStringT"
        kind: TYPE_VAR
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "lstrip"
    fully_qualified_name: "collections.UserString.lstrip"
    return_annotation {
      pretty_printed_name: "collections._UserStringT"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "collections._UserStringT"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "chars"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "partition"
    fully_qualified_name: "collections.UserString.partition"
    return_annotation {
      pretty_printed_name: "Tuple[builtins.str,builtins.str,builtins.str]"
      kind: TUPLE
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "collections.UserString"
        fully_qualified_name: "collections.UserString"
      }
    }
    parameters {
      name: "sep"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "replace"
    fully_qualified_name: "collections.UserString.replace"
    return_annotation {
      pretty_printed_name: "collections._UserStringT"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "collections._UserStringT"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "old"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,collections.UserString]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "collections.UserString"
          fully_qualified_name: "collections.UserString"
        }
      }
    }
    parameters {
      name: "new"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,collections.UserString]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "collections.UserString"
          fully_qualified_name: "collections.UserString"
        }
      }
    }
    parameters {
      name: "maxsplit"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "rfind"
    fully_qualified_name: "collections.UserString.rfind"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "collections.UserString"
        fully_qualified_name: "collections.UserString"
      }
    }
    parameters {
      name: "sub"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,collections.UserString]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "collections.UserString"
          fully_qualified_name: "collections.UserString"
        }
      }
    }
    parameters {
      name: "start"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    parameters {
      name: "end"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "rindex"
    fully_qualified_name: "collections.UserString.rindex"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "collections.UserString"
        fully_qualified_name: "collections.UserString"
      }
    }
    parameters {
      name: "sub"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,collections.UserString]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "collections.UserString"
          fully_qualified_name: "collections.UserString"
        }
      }
    }
    parameters {
      name: "start"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    parameters {
      name: "end"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "rjust"
    fully_qualified_name: "collections.UserString.rjust"
    return_annotation {
      pretty_printed_name: "collections._UserStringT"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "collections._UserStringT"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "width"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "rpartition"
    fully_qualified_name: "collections.UserString.rpartition"
    return_annotation {
      pretty_printed_name: "Tuple[builtins.str,builtins.str,builtins.str]"
      kind: TUPLE
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "collections.UserString"
        fully_qualified_name: "collections.UserString"
      }
    }
    parameters {
      name: "sep"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "rstrip"
    fully_qualified_name: "collections.UserString.rstrip"
    return_annotation {
      pretty_printed_name: "collections._UserStringT"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "collections._UserStringT"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "chars"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "split"
    fully_qualified_name: "collections.UserString.split"
    return_annotation {
      pretty_printed_name: "builtins.list[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "collections.UserString"
        fully_qualified_name: "collections.UserString"
      }
    }
    parameters {
      name: "sep"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "maxsplit"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "rsplit"
    fully_qualified_name: "collections.UserString.rsplit"
    return_annotation {
      pretty_printed_name: "builtins.list[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "collections.UserString"
        fully_qualified_name: "collections.UserString"
      }
    }
    parameters {
      name: "sep"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "maxsplit"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "splitlines"
    fully_qualified_name: "collections.UserString.splitlines"
    return_annotation {
      pretty_printed_name: "builtins.list[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "collections.UserString"
        fully_qualified_name: "collections.UserString"
      }
    }
    parameters {
      name: "keepends"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "startswith"
    fully_qualified_name: "collections.UserString.startswith"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "collections.UserString"
        fully_qualified_name: "collections.UserString"
      }
    }
    parameters {
      name: "prefix"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,builtins.tuple[builtins.str]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.tuple[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "builtins.tuple"
        }
      }
    }
    parameters {
      name: "start"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "end"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "strip"
    fully_qualified_name: "collections.UserString.strip"
    return_annotation {
      pretty_printed_name: "collections._UserStringT"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "collections._UserStringT"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "chars"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "swapcase"
    fully_qualified_name: "collections.UserString.swapcase"
    return_annotation {
      pretty_printed_name: "collections._UserStringT"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "collections._UserStringT"
        kind: TYPE_VAR
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "title"
    fully_qualified_name: "collections.UserString.title"
    return_annotation {
      pretty_printed_name: "collections._UserStringT"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "collections._UserStringT"
        kind: TYPE_VAR
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "translate"
    fully_qualified_name: "collections.UserString.translate"
    return_annotation {
      pretty_printed_name: "collections._UserStringT"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "collections._UserStringT"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "upper"
    fully_qualified_name: "collections.UserString.upper"
    return_annotation {
      pretty_printed_name: "collections._UserStringT"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "collections._UserStringT"
        kind: TYPE_VAR
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "zfill"
    fully_qualified_name: "collections.UserString.zfill"
    return_annotation {
      pretty_printed_name: "collections._UserStringT"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "collections._UserStringT"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "width"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "removeprefix"
    fully_qualified_name: "collections.UserString.removeprefix"
    return_annotation {
      pretty_printed_name: "collections._UserStringT"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "collections._UserStringT"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "__prefix"
      type_annotation {
        pretty_printed_name: "Union[builtins.str,collections.UserString]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "collections.UserString"
          fully_qualified_name: "collections.UserString"
        }
      }
    }
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "removesuffix"
    fully_qualified_name: "collections.UserString.removesuffix"
    return_annotation {
      pretty_printed_name: "collections._UserStringT"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "collections._UserStringT"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "__suffix"
      type_annotation {
        pretty_printed_name: "Union[builtins.str,collections.UserString]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "collections.UserString"
          fully_qualified_name: "collections.UserString"
        }
      }
    }
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "maketrans"
    fullname: "collections.UserString.maketrans"
    definitions {
      name: "maketrans"
      fully_qualified_name: "collections.UserString.maketrans"
      return_annotation {
        pretty_printed_name: "builtins.dict[builtins.int,collections._T]"
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "collections._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.dict"
      }
      parameters {
        name: "x"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.dict[builtins.int,collections._T],builtins.dict[builtins.str,collections._T],builtins.dict[Union[builtins.str,builtins.int],collections._T]]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.dict[builtins.int,collections._T]"
            args {
              pretty_printed_name: "builtins.int"
              fully_qualified_name: "builtins.int"
            }
            args {
              pretty_printed_name: "collections._T"
              kind: TYPE_VAR
            }
            fully_qualified_name: "builtins.dict"
          }
          args {
            pretty_printed_name: "builtins.dict[builtins.str,collections._T]"
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "collections._T"
              kind: TYPE_VAR
            }
            fully_qualified_name: "builtins.dict"
          }
          args {
            pretty_printed_name: "builtins.dict[Union[builtins.str,builtins.int],collections._T]"
            args {
              pretty_printed_name: "Union[builtins.str,builtins.int]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.int"
                fully_qualified_name: "builtins.int"
              }
            }
            args {
              pretty_printed_name: "collections._T"
              kind: TYPE_VAR
            }
            fully_qualified_name: "builtins.dict"
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "staticmethod"
      resolved_decorator_names: "overload"
      is_overload: true
      is_static: true
    }
    definitions {
      name: "maketrans"
      fully_qualified_name: "collections.UserString.maketrans"
      return_annotation {
        pretty_printed_name: "builtins.dict[builtins.int,Union[builtins.int,None]]"
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "Union[builtins.int,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        fully_qualified_name: "builtins.dict"
      }
      parameters {
        name: "x"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      parameters {
        name: "y"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      parameters {
        name: "z"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "staticmethod"
      resolved_decorator_names: "overload"
      is_overload: true
      is_static: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "data"
    fully_qualified_name: "collections.UserString.data"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "StringIO"
  fully_qualified_name: "io.StringIO"
  super_classes: "io.TextIOWrapper"
  methods {
    name: "__init__"
    fully_qualified_name: "io.StringIO.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "io.StringIO"
        fully_qualified_name: "io.StringIO"
      }
    }
    parameters {
      name: "initial_value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "newline"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "getvalue"
    fully_qualified_name: "io.StringIO.getvalue"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "io.StringIO"
        fully_qualified_name: "io.StringIO"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "name"
    fully_qualified_name: "io.StringIO.name"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "filterfalse"
  fully_qualified_name: "itertools.filterfalse"
  super_classes: "typing.Iterator"
  methods {
    name: "__init__"
    fully_qualified_name: "itertools.filterfalse.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "itertools.filterfalse[itertools._T]"
        args {
          pretty_printed_name: "itertools._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "itertools.filterfalse"
      }
    }
    parameters {
      name: "__predicate"
      type_annotation {
        pretty_printed_name: "Union[CallableType[builtins.function],None]"
        kind: UNION
        args {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "__iterable"
      type_annotation {
        pretty_printed_name: "typing.Iterable[itertools._T]"
        args {
          pretty_printed_name: "itertools._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__iter__"
    fully_qualified_name: "itertools.filterfalse.__iter__"
    return_annotation {
      pretty_printed_name: "typing.Iterator[itertools._T]"
      args {
        pretty_printed_name: "itertools._T"
        kind: TYPE_VAR
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "itertools.filterfalse[itertools._T]"
        args {
          pretty_printed_name: "itertools._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "itertools.filterfalse"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__next__"
    fully_qualified_name: "itertools.filterfalse.__next__"
    return_annotation {
      pretty_printed_name: "itertools._T"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "itertools.filterfalse[itertools._T]"
        args {
          pretty_printed_name: "itertools._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "itertools.filterfalse"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  is_generic: true
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "zip_longest"
  fully_qualified_name: "itertools.zip_longest"
  super_classes: "typing.Iterator"
  methods {
    name: "__init__"
    fully_qualified_name: "itertools.zip_longest.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "itertools.zip_longest"
        fully_qualified_name: "itertools.zip_longest"
      }
    }
    parameters {
      name: "p"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "typing.Iterable[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    parameters {
      name: "fillvalue"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__iter__"
    fully_qualified_name: "itertools.zip_longest.__iter__"
    return_annotation {
      pretty_printed_name: "typing.Iterator[Any]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "itertools.zip_longest"
        fully_qualified_name: "itertools.zip_longest"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__next__"
    fully_qualified_name: "itertools.zip_longest.__next__"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "itertools.zip_longest"
        fully_qualified_name: "itertools.zip_longest"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "intern"
  fully_qualified_name: "builtins.intern"
  return_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
  parameters {
    name: "__string"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  valid_for: "27"
}
functions {
  name: "input"
  fully_qualified_name: "builtins.input"
  return_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
  parameters {
    name: "__prompt"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "getcwd"
  fully_qualified_name: "os.getcwd"
  return_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "getcwdb"
  fully_qualified_name: "os.getcwdb"
  return_annotation {
    pretty_printed_name: "builtins.bytes"
    fully_qualified_name: "builtins.bytes"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "intern"
  fully_qualified_name: "sys.intern"
  return_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
  parameters {
    name: "__string"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
overloaded_functions {
  name: "reduce"
  fullname: "builtins.reduce"
  definitions {
    name: "reduce"
    fully_qualified_name: "builtins.reduce"
    return_annotation {
      pretty_printed_name: "builtins._T"
      kind: TYPE_VAR
    }
    parameters {
      name: "__function"
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    parameters {
      name: "__iterable"
      type_annotation {
        pretty_printed_name: "typing.Iterable[builtins._S]"
        args {
          pretty_printed_name: "builtins._S"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    parameters {
      name: "__initializer"
      type_annotation {
        pretty_printed_name: "builtins._T"
        kind: TYPE_VAR
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "reduce"
    fully_qualified_name: "builtins.reduce"
    return_annotation {
      pretty_printed_name: "builtins._T"
      kind: TYPE_VAR
    }
    parameters {
      name: "__function"
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    parameters {
      name: "__iterable"
      type_annotation {
        pretty_printed_name: "typing.Iterable[builtins._T]"
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  valid_for: "27"
}
overloaded_functions {
  name: "_cStringIO"
  fullname: "cStringIO.StringIO"
  definitions {
    name: "StringIO"
    fully_qualified_name: "cStringIO.StringIO"
    return_annotation {
      pretty_printed_name: "cStringIO.OutputType"
      fully_qualified_name: "cStringIO.OutputType"
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "StringIO"
    fully_qualified_name: "cStringIO.StringIO"
    return_annotation {
      pretty_printed_name: "cStringIO.InputType"
      fully_qualified_name: "cStringIO.InputType"
    }
    parameters {
      name: "s"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  valid_for: "27"
}
overloaded_functions {
  name: "reduce"
  fullname: "functools.reduce"
  definitions {
    name: "reduce"
    fully_qualified_name: "functools.reduce"
    return_annotation {
      pretty_printed_name: "functools._T"
      kind: TYPE_VAR
    }
    parameters {
      name: "function"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    parameters {
      name: "sequence"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[functools._S]"
        args {
          pretty_printed_name: "functools._S"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    parameters {
      name: "initial"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "functools._T"
        kind: TYPE_VAR
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "reduce"
    fully_qualified_name: "functools.reduce"
    return_annotation {
      pretty_printed_name: "functools._T"
      kind: TYPE_VAR
    }
    parameters {
      name: "function"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    parameters {
      name: "sequence"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[functools._T]"
        args {
          pretty_printed_name: "functools._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "BaseHTTPServer"
  fully_qualified_name: "six.moves.BaseHTTPServer"
  is_imported_module: true
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "CGIHTTPServer"
  fully_qualified_name: "six.moves.CGIHTTPServer"
  is_imported_module: true
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "SimpleHTTPServer"
  fully_qualified_name: "six.moves.SimpleHTTPServer"
  is_imported_module: true
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "_dummy_thread"
  fully_qualified_name: "six.moves._dummy_thread"
  is_imported_module: true
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "_thread"
  fully_qualified_name: "six.moves._thread"
  is_imported_module: true
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "configparser"
  fully_qualified_name: "six.moves.configparser"
  is_imported_module: true
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "cPickle"
  fully_qualified_name: "six.moves.cPickle"
  is_imported_module: true
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "email_mime_text"
  fully_qualified_name: "six.moves.email_mime_text"
  is_imported_module: true
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "html_entities"
  fully_qualified_name: "six.moves.html_entities"
  is_imported_module: true
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "html_parser"
  fully_qualified_name: "six.moves.html_parser"
  is_imported_module: true
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "http_client"
  fully_qualified_name: "six.moves.http_client"
  is_imported_module: true
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "http_cookiejar"
  fully_qualified_name: "six.moves.http_cookiejar"
  is_imported_module: true
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "http_cookies"
  fully_qualified_name: "six.moves.http_cookies"
  is_imported_module: true
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "queue"
  fully_qualified_name: "six.moves.queue"
  is_imported_module: true
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "reprlib"
  fully_qualified_name: "six.moves.reprlib"
  is_imported_module: true
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "socketserver"
  fully_qualified_name: "six.moves.socketserver"
  is_imported_module: true
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "urllib"
  fully_qualified_name: "six.moves.urllib"
  is_imported_module: true
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "urllib_error"
  fully_qualified_name: "six.moves.urllib_error"
  is_imported_module: true
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "urllib_parse"
  fully_qualified_name: "six.moves.urllib_parse"
  is_imported_module: true
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "urllib_robotparser"
  fully_qualified_name: "six.moves.urllib_robotparser"
  is_imported_module: true
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "xmlrpc_client"
  fully_qualified_name: "six.moves.xmlrpc_client"
  is_imported_module: true
  valid_for: "27"
}
vars {
  name: "input"
  fully_qualified_name: "six.moves.input"
  type_annotation {
    pretty_printed_name: "CallableType[builtins.function]"
    kind: CALLABLE
    args {
      pretty_printed_name: "builtins.function"
      fully_qualified_name: "builtins.function"
    }
  }
  valid_for: "27"
}
vars {
  name: "reload_module"
  fully_qualified_name: "six.moves.reload_module"
  type_annotation {
    pretty_printed_name: "CallableType[builtins.function]"
    kind: CALLABLE
    args {
      pretty_printed_name: "builtins.function"
      fully_qualified_name: "builtins.function"
    }
  }
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "cStringIO"
  fully_qualified_name: "six.moves.cStringIO"
  type_annotation {
    pretty_printed_name: "CallableType[builtins.function]"
    kind: CALLABLE
    args {
      pretty_printed_name: "builtins.function"
      fully_qualified_name: "builtins.function"
    }
    fully_qualified_name: "builtins.function"
  }
  valid_for: "27"
}
vars {
  name: "filter"
  fully_qualified_name: "six.moves.filter"
  type_annotation {
    pretty_printed_name: "CallableType[builtins.function]"
    kind: CALLABLE
    args {
      pretty_printed_name: "builtins.function"
      fully_qualified_name: "builtins.function"
    }
  }
  valid_for: "27"
}
vars {
  name: "filterfalse"
  fully_qualified_name: "six.moves.filterfalse"
  type_annotation {
    pretty_printed_name: "CallableType[builtins.function]"
    kind: CALLABLE
    args {
      pretty_printed_name: "builtins.function"
      fully_qualified_name: "builtins.function"
    }
  }
  valid_for: "27"
}
vars {
  name: "map"
  fully_qualified_name: "six.moves.map"
  type_annotation {
    pretty_printed_name: "CallableType[builtins.function]"
    kind: CALLABLE
    args {
      pretty_printed_name: "builtins.function"
      fully_qualified_name: "builtins.function"
    }
    fully_qualified_name: "builtins.function"
  }
  valid_for: "27"
}
vars {
  name: "zip"
  fully_qualified_name: "six.moves.zip"
  type_annotation {
    pretty_printed_name: "CallableType[builtins.function]"
    kind: CALLABLE
    args {
      pretty_printed_name: "builtins.function"
      fully_qualified_name: "builtins.function"
    }
    fully_qualified_name: "builtins.function"
  }
  valid_for: "27"
}
vars {
  name: "zip_longest"
  fully_qualified_name: "six.moves.zip_longest"
  type_annotation {
    pretty_printed_name: "CallableType[builtins.function]"
    kind: CALLABLE
    args {
      pretty_printed_name: "builtins.function"
      fully_qualified_name: "builtins.function"
    }
  }
  valid_for: "27"
}
vars {
  name: "getcwdb"
  fully_qualified_name: "six.moves.getcwdb"
  type_annotation {
    pretty_printed_name: "CallableType[builtins.function]"
    kind: CALLABLE
    args {
      pretty_printed_name: "builtins.function"
      fully_qualified_name: "builtins.function"
    }
  }
  valid_for: "27"
}
vars {
  name: "getcwd"
  fully_qualified_name: "six.moves.getcwd"
  type_annotation {
    pretty_printed_name: "CallableType[builtins.function]"
    kind: CALLABLE
    args {
      pretty_printed_name: "builtins.function"
      fully_qualified_name: "builtins.function"
    }
  }
  valid_for: "27"
}
vars {
  name: "shlex_quote"
  fully_qualified_name: "six.moves.shlex_quote"
  type_annotation {
    pretty_printed_name: "CallableType[builtins.function]"
    kind: CALLABLE
    args {
      pretty_printed_name: "builtins.function"
      fully_qualified_name: "builtins.function"
    }
  }
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "builtins"
  fully_qualified_name: "six.moves.builtins"
  is_imported_module: true
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "email_mime_base"
  fully_qualified_name: "six.moves.email_mime_base"
  is_imported_module: true
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "email_mime_multipart"
  fully_qualified_name: "six.moves.email_mime_multipart"
  is_imported_module: true
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "email_mime_nonmultipart"
  fully_qualified_name: "six.moves.email_mime_nonmultipart"
  is_imported_module: true
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "tkinter"
  fully_qualified_name: "six.moves.tkinter"
  is_imported_module: true
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "tkinter_commondialog"
  fully_qualified_name: "six.moves.tkinter_commondialog"
  is_imported_module: true
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "tkinter_constants"
  fully_qualified_name: "six.moves.tkinter_constants"
  is_imported_module: true
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "tkinter_dialog"
  fully_qualified_name: "six.moves.tkinter_dialog"
  is_imported_module: true
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "tkinter_filedialog"
  fully_qualified_name: "six.moves.tkinter_filedialog"
  is_imported_module: true
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "tkinter_tkfiledialog"
  fully_qualified_name: "six.moves.tkinter_tkfiledialog"
  is_imported_module: true
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "tkinter_ttk"
  fully_qualified_name: "six.moves.tkinter_ttk"
  is_imported_module: true
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
