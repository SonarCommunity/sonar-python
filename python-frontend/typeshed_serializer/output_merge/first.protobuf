fully_qualified_name: "first"
overloaded_functions {
  name: "first"
  fullname: "first.first"
  definitions {
    name: "first"
    fully_qualified_name: "first.first"
    return_annotation {
      pretty_printed_name: "Union[first._T,None]"
      kind: UNION
      args {
        pretty_printed_name: "first._T"
        kind: TYPE_VAR
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "iterable"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[first._T]"
        args {
          pretty_printed_name: "first._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "first"
    fully_qualified_name: "first.first"
    return_annotation {
      pretty_printed_name: "Union[first._T,first._S]"
      kind: UNION
      args {
        pretty_printed_name: "first._T"
        kind: TYPE_VAR
      }
      args {
        pretty_printed_name: "first._S"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "iterable"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[first._T]"
        args {
          pretty_printed_name: "first._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    parameters {
      name: "default"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "first._S"
        kind: TYPE_VAR
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "first"
    fully_qualified_name: "first.first"
    return_annotation {
      pretty_printed_name: "Union[first._T,first._S]"
      kind: UNION
      args {
        pretty_printed_name: "first._T"
        kind: TYPE_VAR
      }
      args {
        pretty_printed_name: "first._S"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "iterable"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[first._T]"
        args {
          pretty_printed_name: "first._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    parameters {
      name: "default"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "first._S"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[CallableType[builtins.function],None]"
        kind: UNION
        args {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "first"
    fully_qualified_name: "first.first"
    return_annotation {
      pretty_printed_name: "Union[first._T,None]"
      kind: UNION
      args {
        pretty_printed_name: "first._T"
        kind: TYPE_VAR
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "iterable"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[first._T]"
        args {
          pretty_printed_name: "first._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    parameters {
      name: "key"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[CallableType[builtins.function],None]"
        kind: UNION
        args {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
