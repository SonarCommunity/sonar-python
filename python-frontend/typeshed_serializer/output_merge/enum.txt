fully_qualified_name: "enum"
classes {
  name: "EnumMeta"
  fully_qualified_name: "enum.EnumMeta"
  super_classes: "abc.ABCMeta"
  methods {
    name: "__iter__"
    fully_qualified_name: "enum.EnumMeta.__iter__"
    return_annotation {
      pretty_printed_name: "typing.Iterator[enum._T]"
      args {
        pretty_printed_name: "enum._T"
        kind: TYPE_VAR
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "Type[enum._T]"
        kind: TYPE
        args {
          pretty_printed_name: "enum._T"
          kind: TYPE_VAR
        }
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__reversed__"
    fully_qualified_name: "enum.EnumMeta.__reversed__"
    return_annotation {
      pretty_printed_name: "typing.Iterator[enum._T]"
      args {
        pretty_printed_name: "enum._T"
        kind: TYPE_VAR
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "Type[enum._T]"
        kind: TYPE
        args {
          pretty_printed_name: "enum._T"
          kind: TYPE_VAR
        }
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__contains__"
    fully_qualified_name: "enum.EnumMeta.__contains__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "enum.EnumMeta"
        fully_qualified_name: "enum.EnumMeta"
      }
    }
    parameters {
      name: "member"
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__getitem__"
    fully_qualified_name: "enum.EnumMeta.__getitem__"
    return_annotation {
      pretty_printed_name: "enum._T"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "Type[enum._T]"
        kind: TYPE
        args {
          pretty_printed_name: "enum._T"
          kind: TYPE_VAR
        }
      }
    }
    parameters {
      name: "name"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__members__"
    fully_qualified_name: "enum.EnumMeta.__members__"
    return_annotation {
      pretty_printed_name: "typing.Mapping[builtins.str,enum._T]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "enum._T"
        kind: TYPE_VAR
      }
      fully_qualified_name: "typing.Mapping"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[enum._T]"
        kind: TYPE
        args {
          pretty_printed_name: "enum._T"
          kind: TYPE_VAR
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "27"
  }
  methods {
    name: "__len__"
    fully_qualified_name: "enum.EnumMeta.__len__"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "enum.EnumMeta"
        fully_qualified_name: "enum.EnumMeta"
      }
    }
    valid_for: "27"
  }
  valid_for: "27"
}
classes {
  name: "Enum"
  fully_qualified_name: "enum.Enum"
  super_classes: "builtins.object"
  methods {
    name: "_missing_"
    fully_qualified_name: "enum.Enum._missing_"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[enum.Enum]"
        kind: TYPE
        args {
          pretty_printed_name: "enum.Enum"
          fully_qualified_name: "enum.Enum"
        }
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
    has_decorators: true
    resolved_decorator_names: "classmethod"
    is_class_method: true
    valid_for: "27"
  }
  methods {
    name: "_generate_next_value_"
    fully_qualified_name: "enum.Enum._generate_next_value_"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "start"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "count"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "last_values"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.list[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "builtins.list"
      }
    }
    has_decorators: true
    resolved_decorator_names: "staticmethod"
    is_static: true
    valid_for: "27"
  }
  methods {
    name: "__new__"
    fully_qualified_name: "enum.Enum.__new__"
    return_annotation {
      pretty_printed_name: "enum._T"
      kind: TYPE_VAR
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[enum._T]"
        kind: TYPE
        args {
          pretty_printed_name: "enum._T"
          kind: TYPE_VAR
        }
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__repr__"
    fully_qualified_name: "enum.Enum.__repr__"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "enum.Enum"
        fully_qualified_name: "enum.Enum"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__str__"
    fully_qualified_name: "enum.Enum.__str__"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "enum.Enum"
        fully_qualified_name: "enum.Enum"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__dir__"
    fully_qualified_name: "enum.Enum.__dir__"
    return_annotation {
      pretty_printed_name: "builtins.list[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "enum.Enum"
        fully_qualified_name: "enum.Enum"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__format__"
    fully_qualified_name: "enum.Enum.__format__"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "enum.Enum"
        fully_qualified_name: "enum.Enum"
      }
    }
    parameters {
      name: "format_spec"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__hash__"
    fully_qualified_name: "enum.Enum.__hash__"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "enum.Enum"
        fully_qualified_name: "enum.Enum"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__reduce_ex__"
    fully_qualified_name: "enum.Enum.__reduce_ex__"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "enum.Enum"
        fully_qualified_name: "enum.Enum"
      }
    }
    parameters {
      name: "proto"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
    valid_for: "27"
  }
  has_metaclass: true
  is_enum: true
  metaclass_name: "enum.EnumMeta"
  valid_for: "27"
  attributes {
    name: "name"
    fully_qualified_name: "enum.Enum.name"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "27"
  }
  attributes {
    name: "value"
    fully_qualified_name: "enum.Enum.value"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "27"
  }
  attributes {
    name: "_name_"
    fully_qualified_name: "enum.Enum._name_"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "27"
  }
  attributes {
    name: "_value_"
    fully_qualified_name: "enum.Enum._value_"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "27"
  }
  attributes {
    name: "_member_names_"
    fully_qualified_name: "enum.Enum._member_names_"
    type_annotation {
      pretty_printed_name: "builtins.list[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "builtins.list"
    }
    valid_for: "27"
  }
  attributes {
    name: "_member_map_"
    fully_qualified_name: "enum.Enum._member_map_"
    type_annotation {
      pretty_printed_name: "builtins.dict[builtins.str,enum.Enum]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "enum.Enum"
        fully_qualified_name: "enum.Enum"
      }
      fully_qualified_name: "builtins.dict"
    }
    valid_for: "27"
  }
  attributes {
    name: "_value2member_map_"
    fully_qualified_name: "enum.Enum._value2member_map_"
    type_annotation {
      pretty_printed_name: "builtins.dict[builtins.int,enum.Enum]"
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "enum.Enum"
        fully_qualified_name: "enum.Enum"
      }
      fully_qualified_name: "builtins.dict"
    }
    valid_for: "27"
  }
  attributes {
    name: "_order_"
    fully_qualified_name: "enum.Enum._order_"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "27"
  }
  attributes {
    name: "__order__"
    fully_qualified_name: "enum.Enum.__order__"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "27"
  }
}
classes {
  name: "IntEnum"
  fully_qualified_name: "enum.IntEnum"
  super_classes: "builtins.int"
  super_classes: "enum.Enum"
  is_enum: true
  valid_for: "27"
  attributes {
    name: "value"
    fully_qualified_name: "enum.IntEnum.value"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "27"
  }
}
classes {
  name: "auto"
  fully_qualified_name: "enum.auto"
  super_classes: "enum.IntFlag"
  is_enum: true
  valid_for: "27"
  attributes {
    name: "value"
    fully_qualified_name: "enum.auto.value"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "27"
  }
}
classes {
  name: "Flag"
  fully_qualified_name: "enum.Flag"
  super_classes: "enum.Enum"
  methods {
    name: "__contains__"
    fully_qualified_name: "enum.Flag.__contains__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "enum._T"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "other"
      type_annotation {
        pretty_printed_name: "enum._T"
        kind: TYPE_VAR
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__repr__"
    fully_qualified_name: "enum.Flag.__repr__"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "enum.Flag"
        fully_qualified_name: "enum.Flag"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__str__"
    fully_qualified_name: "enum.Flag.__str__"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "enum.Flag"
        fully_qualified_name: "enum.Flag"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__bool__"
    fully_qualified_name: "enum.Flag.__bool__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "enum.Flag"
        fully_qualified_name: "enum.Flag"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__or__"
    fully_qualified_name: "enum.Flag.__or__"
    return_annotation {
      pretty_printed_name: "enum._T"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "enum._T"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "other"
      type_annotation {
        pretty_printed_name: "enum._T"
        kind: TYPE_VAR
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__and__"
    fully_qualified_name: "enum.Flag.__and__"
    return_annotation {
      pretty_printed_name: "enum._T"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "enum._T"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "other"
      type_annotation {
        pretty_printed_name: "enum._T"
        kind: TYPE_VAR
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__xor__"
    fully_qualified_name: "enum.Flag.__xor__"
    return_annotation {
      pretty_printed_name: "enum._T"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "enum._T"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "other"
      type_annotation {
        pretty_printed_name: "enum._T"
        kind: TYPE_VAR
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__invert__"
    fully_qualified_name: "enum.Flag.__invert__"
    return_annotation {
      pretty_printed_name: "enum._T"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "enum._T"
        kind: TYPE_VAR
      }
    }
    valid_for: "27"
  }
  is_enum: true
  valid_for: "27"
}
classes {
  name: "IntFlag"
  fully_qualified_name: "enum.IntFlag"
  super_classes: "builtins.int"
  super_classes: "enum.Flag"
  methods {
    name: "__or__"
    fully_qualified_name: "enum.IntFlag.__or__"
    return_annotation {
      pretty_printed_name: "enum._T"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "enum._T"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "other"
      type_annotation {
        pretty_printed_name: "Union[builtins.int,enum._T]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "enum._T"
          kind: TYPE_VAR
        }
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__and__"
    fully_qualified_name: "enum.IntFlag.__and__"
    return_annotation {
      pretty_printed_name: "enum._T"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "enum._T"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "other"
      type_annotation {
        pretty_printed_name: "Union[builtins.int,enum._T]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "enum._T"
          kind: TYPE_VAR
        }
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__xor__"
    fully_qualified_name: "enum.IntFlag.__xor__"
    return_annotation {
      pretty_printed_name: "enum._T"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "enum._T"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "other"
      type_annotation {
        pretty_printed_name: "Union[builtins.int,enum._T]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "enum._T"
          kind: TYPE_VAR
        }
      }
    }
    valid_for: "27"
  }
  is_enum: true
  valid_for: "27"
  attributes {
    name: "__ror__"
    fully_qualified_name: "enum.IntFlag.__ror__"
    type_annotation {
      pretty_printed_name: "CallableType[builtins.function]"
      kind: CALLABLE
      args {
        pretty_printed_name: "builtins.function"
        fully_qualified_name: "builtins.function"
      }
    }
    valid_for: "27"
  }
  attributes {
    name: "__rand__"
    fully_qualified_name: "enum.IntFlag.__rand__"
    type_annotation {
      pretty_printed_name: "CallableType[builtins.function]"
      kind: CALLABLE
      args {
        pretty_printed_name: "builtins.function"
        fully_qualified_name: "builtins.function"
      }
    }
    valid_for: "27"
  }
  attributes {
    name: "__rxor__"
    fully_qualified_name: "enum.IntFlag.__rxor__"
    type_annotation {
      pretty_printed_name: "CallableType[builtins.function]"
      kind: CALLABLE
      args {
        pretty_printed_name: "builtins.function"
        fully_qualified_name: "builtins.function"
      }
    }
    valid_for: "27"
  }
}
functions {
  name: "unique"
  fully_qualified_name: "enum.unique"
  return_annotation {
    pretty_printed_name: "enum._S"
    kind: TYPE_VAR
  }
  parameters {
    name: "enumeration"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "enum._S"
      kind: TYPE_VAR
    }
  }
  valid_for: "27"
}
vars {
  name: "_auto_null"
  fully_qualified_name: "enum._auto_null"
  type_annotation {
    pretty_printed_name: "Any"
    kind: ANY
  }
  valid_for: "27"
}
