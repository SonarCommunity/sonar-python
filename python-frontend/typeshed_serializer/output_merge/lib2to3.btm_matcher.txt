fully_qualified_name: "lib2to3.btm_matcher"
classes {
  name: "BMNode"
  fully_qualified_name: "lib2to3.btm_matcher.BMNode"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "lib2to3.btm_matcher.BMNode.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "lib2to3.btm_matcher.BMNode"
        fully_qualified_name: "lib2to3.btm_matcher.BMNode"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "count"
    fully_qualified_name: "lib2to3.btm_matcher.BMNode.count"
    type_annotation {
      pretty_printed_name: "UnboundType[Incomplete]"
      kind: UNBOUND
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "transition_table"
    fully_qualified_name: "lib2to3.btm_matcher.BMNode.transition_table"
    type_annotation {
      pretty_printed_name: "UnboundType[Incomplete]"
      kind: UNBOUND
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "fixers"
    fully_qualified_name: "lib2to3.btm_matcher.BMNode.fixers"
    type_annotation {
      pretty_printed_name: "UnboundType[Incomplete]"
      kind: UNBOUND
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "id"
    fully_qualified_name: "lib2to3.btm_matcher.BMNode.id"
    type_annotation {
      pretty_printed_name: "UnboundType[Incomplete]"
      kind: UNBOUND
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "content"
    fully_qualified_name: "lib2to3.btm_matcher.BMNode.content"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "BottomMatcher"
  fully_qualified_name: "lib2to3.btm_matcher.BottomMatcher"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "lib2to3.btm_matcher.BottomMatcher.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "lib2to3.btm_matcher.BottomMatcher"
        fully_qualified_name: "lib2to3.btm_matcher.BottomMatcher"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "add_fixer"
    fully_qualified_name: "lib2to3.btm_matcher.BottomMatcher.add_fixer"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "lib2to3.btm_matcher.BottomMatcher"
        fully_qualified_name: "lib2to3.btm_matcher.BottomMatcher"
      }
    }
    parameters {
      name: "fixer"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "lib2to3.fixer_base.BaseFix"
        fully_qualified_name: "lib2to3.fixer_base.BaseFix"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "add"
    fully_qualified_name: "lib2to3.btm_matcher.BottomMatcher.add"
    return_annotation {
      pretty_printed_name: "builtins.list[lib2to3.btm_matcher.BMNode]"
      args {
        pretty_printed_name: "lib2to3.btm_matcher.BMNode"
        fully_qualified_name: "lib2to3.btm_matcher.BMNode"
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "lib2to3.btm_matcher.BottomMatcher"
        fully_qualified_name: "lib2to3.btm_matcher.BottomMatcher"
      }
    }
    parameters {
      name: "pattern"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[_typeshed.SupportsGetItem[Union[builtins.int,builtins.slice],UnboundType[Incomplete]],None]"
        kind: UNION
        args {
          pretty_printed_name: "_typeshed.SupportsGetItem[Union[builtins.int,builtins.slice],UnboundType[Incomplete]]"
          args {
            pretty_printed_name: "Union[builtins.int,builtins.slice]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.int"
              fully_qualified_name: "builtins.int"
            }
            args {
              pretty_printed_name: "builtins.slice"
              fully_qualified_name: "builtins.slice"
            }
          }
          args {
            pretty_printed_name: "UnboundType[Incomplete]"
            kind: UNBOUND
          }
          fully_qualified_name: "_typeshed.SupportsGetItem"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "start"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "lib2to3.btm_matcher.BMNode"
        fully_qualified_name: "lib2to3.btm_matcher.BMNode"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "run"
    fully_qualified_name: "lib2to3.btm_matcher.BottomMatcher.run"
    return_annotation {
      pretty_printed_name: "collections.defaultdict[lib2to3.fixer_base.BaseFix,builtins.list[Union[lib2to3.pytree.Node,lib2to3.pytree.Leaf]]]"
      args {
        pretty_printed_name: "lib2to3.fixer_base.BaseFix"
        fully_qualified_name: "lib2to3.fixer_base.BaseFix"
      }
      args {
        pretty_printed_name: "builtins.list[Union[lib2to3.pytree.Node,lib2to3.pytree.Leaf]]"
        args {
          pretty_printed_name: "Union[lib2to3.pytree.Node,lib2to3.pytree.Leaf]"
          kind: UNION
          args {
            pretty_printed_name: "lib2to3.pytree.Node"
            fully_qualified_name: "lib2to3.pytree.Node"
          }
          args {
            pretty_printed_name: "lib2to3.pytree.Leaf"
            fully_qualified_name: "lib2to3.pytree.Leaf"
          }
        }
        fully_qualified_name: "builtins.list"
      }
      fully_qualified_name: "collections.defaultdict"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "lib2to3.btm_matcher.BottomMatcher"
        fully_qualified_name: "lib2to3.btm_matcher.BottomMatcher"
      }
    }
    parameters {
      name: "leaves"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[lib2to3.pytree.Leaf]"
        args {
          pretty_printed_name: "lib2to3.pytree.Leaf"
          fully_qualified_name: "lib2to3.pytree.Leaf"
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "print_ac"
    fully_qualified_name: "lib2to3.btm_matcher.BottomMatcher.print_ac"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "lib2to3.btm_matcher.BottomMatcher"
        fully_qualified_name: "lib2to3.btm_matcher.BottomMatcher"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "match"
    fully_qualified_name: "lib2to3.btm_matcher.BottomMatcher.match"
    type_annotation {
      pretty_printed_name: "UnboundType[Incomplete]"
      kind: UNBOUND
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "root"
    fully_qualified_name: "lib2to3.btm_matcher.BottomMatcher.root"
    type_annotation {
      pretty_printed_name: "UnboundType[Incomplete]"
      kind: UNBOUND
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "nodes"
    fully_qualified_name: "lib2to3.btm_matcher.BottomMatcher.nodes"
    type_annotation {
      pretty_printed_name: "UnboundType[Incomplete]"
      kind: UNBOUND
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "fixers"
    fully_qualified_name: "lib2to3.btm_matcher.BottomMatcher.fixers"
    type_annotation {
      pretty_printed_name: "UnboundType[Incomplete]"
      kind: UNBOUND
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "logger"
    fully_qualified_name: "lib2to3.btm_matcher.BottomMatcher.logger"
    type_annotation {
      pretty_printed_name: "UnboundType[Incomplete]"
      kind: UNBOUND
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
functions {
  name: "type_repr"
  fully_qualified_name: "lib2to3.btm_matcher.type_repr"
  return_annotation {
    pretty_printed_name: "Union[builtins.str,builtins.int]"
    kind: UNION
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    args {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "type_num"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
