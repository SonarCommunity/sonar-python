fully_qualified_name: "cryptography.x509"
classes {
  name: "ObjectIdentifier"
  fully_qualified_name: "cryptography.x509.ObjectIdentifier"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "cryptography.x509.ObjectIdentifier.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.ObjectIdentifier"
        fully_qualified_name: "cryptography.x509.ObjectIdentifier"
      }
    }
    parameters {
      name: "dotted_string"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "dotted_string"
    fully_qualified_name: "cryptography.x509.ObjectIdentifier.dotted_string"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "CRLEntryExtensionOID"
  fully_qualified_name: "cryptography.x509.CRLEntryExtensionOID"
  super_classes: "builtins.object"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "CERTIFICATE_ISSUER"
    fully_qualified_name: "cryptography.x509.CRLEntryExtensionOID.CERTIFICATE_ISSUER"
    type_annotation {
      pretty_printed_name: "cryptography.x509.ObjectIdentifier"
      fully_qualified_name: "cryptography.x509.ObjectIdentifier"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "CRL_REASON"
    fully_qualified_name: "cryptography.x509.CRLEntryExtensionOID.CRL_REASON"
    type_annotation {
      pretty_printed_name: "cryptography.x509.ObjectIdentifier"
      fully_qualified_name: "cryptography.x509.ObjectIdentifier"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "INVALIDITY_DATE"
    fully_qualified_name: "cryptography.x509.CRLEntryExtensionOID.INVALIDITY_DATE"
    type_annotation {
      pretty_printed_name: "cryptography.x509.ObjectIdentifier"
      fully_qualified_name: "cryptography.x509.ObjectIdentifier"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "ExtensionOID"
  fully_qualified_name: "cryptography.x509.ExtensionOID"
  super_classes: "builtins.object"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "AUTHORITY_INFORMATION_ACCESS"
    fully_qualified_name: "cryptography.x509.ExtensionOID.AUTHORITY_INFORMATION_ACCESS"
    type_annotation {
      pretty_printed_name: "cryptography.x509.ObjectIdentifier"
      fully_qualified_name: "cryptography.x509.ObjectIdentifier"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "AUTHORITY_KEY_IDENTIFIER"
    fully_qualified_name: "cryptography.x509.ExtensionOID.AUTHORITY_KEY_IDENTIFIER"
    type_annotation {
      pretty_printed_name: "cryptography.x509.ObjectIdentifier"
      fully_qualified_name: "cryptography.x509.ObjectIdentifier"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "BASIC_CONSTRAINTS"
    fully_qualified_name: "cryptography.x509.ExtensionOID.BASIC_CONSTRAINTS"
    type_annotation {
      pretty_printed_name: "cryptography.x509.ObjectIdentifier"
      fully_qualified_name: "cryptography.x509.ObjectIdentifier"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "CERTIFICATE_POLICIES"
    fully_qualified_name: "cryptography.x509.ExtensionOID.CERTIFICATE_POLICIES"
    type_annotation {
      pretty_printed_name: "cryptography.x509.ObjectIdentifier"
      fully_qualified_name: "cryptography.x509.ObjectIdentifier"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "CRL_DISTRIBUTION_POINTS"
    fully_qualified_name: "cryptography.x509.ExtensionOID.CRL_DISTRIBUTION_POINTS"
    type_annotation {
      pretty_printed_name: "cryptography.x509.ObjectIdentifier"
      fully_qualified_name: "cryptography.x509.ObjectIdentifier"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "CRL_NUMBER"
    fully_qualified_name: "cryptography.x509.ExtensionOID.CRL_NUMBER"
    type_annotation {
      pretty_printed_name: "cryptography.x509.ObjectIdentifier"
      fully_qualified_name: "cryptography.x509.ObjectIdentifier"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "DELTA_CRL_INDICATOR"
    fully_qualified_name: "cryptography.x509.ExtensionOID.DELTA_CRL_INDICATOR"
    type_annotation {
      pretty_printed_name: "cryptography.x509.ObjectIdentifier"
      fully_qualified_name: "cryptography.x509.ObjectIdentifier"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "EXTENDED_KEY_USAGE"
    fully_qualified_name: "cryptography.x509.ExtensionOID.EXTENDED_KEY_USAGE"
    type_annotation {
      pretty_printed_name: "cryptography.x509.ObjectIdentifier"
      fully_qualified_name: "cryptography.x509.ObjectIdentifier"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "FRESHEST_CRL"
    fully_qualified_name: "cryptography.x509.ExtensionOID.FRESHEST_CRL"
    type_annotation {
      pretty_printed_name: "cryptography.x509.ObjectIdentifier"
      fully_qualified_name: "cryptography.x509.ObjectIdentifier"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "INHIBIT_ANY_POLICY"
    fully_qualified_name: "cryptography.x509.ExtensionOID.INHIBIT_ANY_POLICY"
    type_annotation {
      pretty_printed_name: "cryptography.x509.ObjectIdentifier"
      fully_qualified_name: "cryptography.x509.ObjectIdentifier"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "ISSUER_ALTERNATIVE_NAME"
    fully_qualified_name: "cryptography.x509.ExtensionOID.ISSUER_ALTERNATIVE_NAME"
    type_annotation {
      pretty_printed_name: "cryptography.x509.ObjectIdentifier"
      fully_qualified_name: "cryptography.x509.ObjectIdentifier"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "ISSUING_DISTRIBUTION_POINT"
    fully_qualified_name: "cryptography.x509.ExtensionOID.ISSUING_DISTRIBUTION_POINT"
    type_annotation {
      pretty_printed_name: "cryptography.x509.ObjectIdentifier"
      fully_qualified_name: "cryptography.x509.ObjectIdentifier"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "KEY_USAGE"
    fully_qualified_name: "cryptography.x509.ExtensionOID.KEY_USAGE"
    type_annotation {
      pretty_printed_name: "cryptography.x509.ObjectIdentifier"
      fully_qualified_name: "cryptography.x509.ObjectIdentifier"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "NAME_CONSTRAINTS"
    fully_qualified_name: "cryptography.x509.ExtensionOID.NAME_CONSTRAINTS"
    type_annotation {
      pretty_printed_name: "cryptography.x509.ObjectIdentifier"
      fully_qualified_name: "cryptography.x509.ObjectIdentifier"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "OCSP_NO_CHECK"
    fully_qualified_name: "cryptography.x509.ExtensionOID.OCSP_NO_CHECK"
    type_annotation {
      pretty_printed_name: "cryptography.x509.ObjectIdentifier"
      fully_qualified_name: "cryptography.x509.ObjectIdentifier"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "POLICY_CONSTRAINTS"
    fully_qualified_name: "cryptography.x509.ExtensionOID.POLICY_CONSTRAINTS"
    type_annotation {
      pretty_printed_name: "cryptography.x509.ObjectIdentifier"
      fully_qualified_name: "cryptography.x509.ObjectIdentifier"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "POLICY_MAPPINGS"
    fully_qualified_name: "cryptography.x509.ExtensionOID.POLICY_MAPPINGS"
    type_annotation {
      pretty_printed_name: "cryptography.x509.ObjectIdentifier"
      fully_qualified_name: "cryptography.x509.ObjectIdentifier"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "PRECERT_POISON"
    fully_qualified_name: "cryptography.x509.ExtensionOID.PRECERT_POISON"
    type_annotation {
      pretty_printed_name: "cryptography.x509.ObjectIdentifier"
      fully_qualified_name: "cryptography.x509.ObjectIdentifier"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "PRECERT_SIGNED_CERTIFICATE_TIMESTAMPS"
    fully_qualified_name: "cryptography.x509.ExtensionOID.PRECERT_SIGNED_CERTIFICATE_TIMESTAMPS"
    type_annotation {
      pretty_printed_name: "cryptography.x509.ObjectIdentifier"
      fully_qualified_name: "cryptography.x509.ObjectIdentifier"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "SUBJECT_ALTERNATIVE_NAME"
    fully_qualified_name: "cryptography.x509.ExtensionOID.SUBJECT_ALTERNATIVE_NAME"
    type_annotation {
      pretty_printed_name: "cryptography.x509.ObjectIdentifier"
      fully_qualified_name: "cryptography.x509.ObjectIdentifier"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "SUBJECT_DIRECTORY_ATTRIBUTES"
    fully_qualified_name: "cryptography.x509.ExtensionOID.SUBJECT_DIRECTORY_ATTRIBUTES"
    type_annotation {
      pretty_printed_name: "cryptography.x509.ObjectIdentifier"
      fully_qualified_name: "cryptography.x509.ObjectIdentifier"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "SUBJECT_INFORMATION_ACCESS"
    fully_qualified_name: "cryptography.x509.ExtensionOID.SUBJECT_INFORMATION_ACCESS"
    type_annotation {
      pretty_printed_name: "cryptography.x509.ObjectIdentifier"
      fully_qualified_name: "cryptography.x509.ObjectIdentifier"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "SUBJECT_KEY_IDENTIFIER"
    fully_qualified_name: "cryptography.x509.ExtensionOID.SUBJECT_KEY_IDENTIFIER"
    type_annotation {
      pretty_printed_name: "cryptography.x509.ObjectIdentifier"
      fully_qualified_name: "cryptography.x509.ObjectIdentifier"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "TLS_FEATURE"
    fully_qualified_name: "cryptography.x509.ExtensionOID.TLS_FEATURE"
    type_annotation {
      pretty_printed_name: "cryptography.x509.ObjectIdentifier"
      fully_qualified_name: "cryptography.x509.ObjectIdentifier"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "NameOID"
  fully_qualified_name: "cryptography.x509.NameOID"
  super_classes: "builtins.object"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "BUSINESS_CATEGORY"
    fully_qualified_name: "cryptography.x509.NameOID.BUSINESS_CATEGORY"
    type_annotation {
      pretty_printed_name: "cryptography.x509.ObjectIdentifier"
      fully_qualified_name: "cryptography.x509.ObjectIdentifier"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "COMMON_NAME"
    fully_qualified_name: "cryptography.x509.NameOID.COMMON_NAME"
    type_annotation {
      pretty_printed_name: "cryptography.x509.ObjectIdentifier"
      fully_qualified_name: "cryptography.x509.ObjectIdentifier"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "COUNTRY_NAME"
    fully_qualified_name: "cryptography.x509.NameOID.COUNTRY_NAME"
    type_annotation {
      pretty_printed_name: "cryptography.x509.ObjectIdentifier"
      fully_qualified_name: "cryptography.x509.ObjectIdentifier"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "DN_QUALIFIER"
    fully_qualified_name: "cryptography.x509.NameOID.DN_QUALIFIER"
    type_annotation {
      pretty_printed_name: "cryptography.x509.ObjectIdentifier"
      fully_qualified_name: "cryptography.x509.ObjectIdentifier"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "DOMAIN_COMPONENT"
    fully_qualified_name: "cryptography.x509.NameOID.DOMAIN_COMPONENT"
    type_annotation {
      pretty_printed_name: "cryptography.x509.ObjectIdentifier"
      fully_qualified_name: "cryptography.x509.ObjectIdentifier"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "EMAIL_ADDRESS"
    fully_qualified_name: "cryptography.x509.NameOID.EMAIL_ADDRESS"
    type_annotation {
      pretty_printed_name: "cryptography.x509.ObjectIdentifier"
      fully_qualified_name: "cryptography.x509.ObjectIdentifier"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "GENERATION_QUALIFIER"
    fully_qualified_name: "cryptography.x509.NameOID.GENERATION_QUALIFIER"
    type_annotation {
      pretty_printed_name: "cryptography.x509.ObjectIdentifier"
      fully_qualified_name: "cryptography.x509.ObjectIdentifier"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "GIVEN_NAME"
    fully_qualified_name: "cryptography.x509.NameOID.GIVEN_NAME"
    type_annotation {
      pretty_printed_name: "cryptography.x509.ObjectIdentifier"
      fully_qualified_name: "cryptography.x509.ObjectIdentifier"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "JURISDICTION_COUNTRY_NAME"
    fully_qualified_name: "cryptography.x509.NameOID.JURISDICTION_COUNTRY_NAME"
    type_annotation {
      pretty_printed_name: "cryptography.x509.ObjectIdentifier"
      fully_qualified_name: "cryptography.x509.ObjectIdentifier"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "JURISDICTION_LOCALITY_NAME"
    fully_qualified_name: "cryptography.x509.NameOID.JURISDICTION_LOCALITY_NAME"
    type_annotation {
      pretty_printed_name: "cryptography.x509.ObjectIdentifier"
      fully_qualified_name: "cryptography.x509.ObjectIdentifier"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "JURISDICTION_STATE_OR_PROVINCE_NAME"
    fully_qualified_name: "cryptography.x509.NameOID.JURISDICTION_STATE_OR_PROVINCE_NAME"
    type_annotation {
      pretty_printed_name: "cryptography.x509.ObjectIdentifier"
      fully_qualified_name: "cryptography.x509.ObjectIdentifier"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "LOCALITY_NAME"
    fully_qualified_name: "cryptography.x509.NameOID.LOCALITY_NAME"
    type_annotation {
      pretty_printed_name: "cryptography.x509.ObjectIdentifier"
      fully_qualified_name: "cryptography.x509.ObjectIdentifier"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "ORGANIZATIONAL_UNIT_NAME"
    fully_qualified_name: "cryptography.x509.NameOID.ORGANIZATIONAL_UNIT_NAME"
    type_annotation {
      pretty_printed_name: "cryptography.x509.ObjectIdentifier"
      fully_qualified_name: "cryptography.x509.ObjectIdentifier"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "ORGANIZATION_NAME"
    fully_qualified_name: "cryptography.x509.NameOID.ORGANIZATION_NAME"
    type_annotation {
      pretty_printed_name: "cryptography.x509.ObjectIdentifier"
      fully_qualified_name: "cryptography.x509.ObjectIdentifier"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "POSTAL_ADDRESS"
    fully_qualified_name: "cryptography.x509.NameOID.POSTAL_ADDRESS"
    type_annotation {
      pretty_printed_name: "cryptography.x509.ObjectIdentifier"
      fully_qualified_name: "cryptography.x509.ObjectIdentifier"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "POSTAL_CODE"
    fully_qualified_name: "cryptography.x509.NameOID.POSTAL_CODE"
    type_annotation {
      pretty_printed_name: "cryptography.x509.ObjectIdentifier"
      fully_qualified_name: "cryptography.x509.ObjectIdentifier"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "PSEUDONYM"
    fully_qualified_name: "cryptography.x509.NameOID.PSEUDONYM"
    type_annotation {
      pretty_printed_name: "cryptography.x509.ObjectIdentifier"
      fully_qualified_name: "cryptography.x509.ObjectIdentifier"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "SERIAL_NUMBER"
    fully_qualified_name: "cryptography.x509.NameOID.SERIAL_NUMBER"
    type_annotation {
      pretty_printed_name: "cryptography.x509.ObjectIdentifier"
      fully_qualified_name: "cryptography.x509.ObjectIdentifier"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "STATE_OR_PROVINCE_NAME"
    fully_qualified_name: "cryptography.x509.NameOID.STATE_OR_PROVINCE_NAME"
    type_annotation {
      pretty_printed_name: "cryptography.x509.ObjectIdentifier"
      fully_qualified_name: "cryptography.x509.ObjectIdentifier"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "STREET_ADDRESS"
    fully_qualified_name: "cryptography.x509.NameOID.STREET_ADDRESS"
    type_annotation {
      pretty_printed_name: "cryptography.x509.ObjectIdentifier"
      fully_qualified_name: "cryptography.x509.ObjectIdentifier"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "SURNAME"
    fully_qualified_name: "cryptography.x509.NameOID.SURNAME"
    type_annotation {
      pretty_printed_name: "cryptography.x509.ObjectIdentifier"
      fully_qualified_name: "cryptography.x509.ObjectIdentifier"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "TITLE"
    fully_qualified_name: "cryptography.x509.NameOID.TITLE"
    type_annotation {
      pretty_printed_name: "cryptography.x509.ObjectIdentifier"
      fully_qualified_name: "cryptography.x509.ObjectIdentifier"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "USER_ID"
    fully_qualified_name: "cryptography.x509.NameOID.USER_ID"
    type_annotation {
      pretty_printed_name: "cryptography.x509.ObjectIdentifier"
      fully_qualified_name: "cryptography.x509.ObjectIdentifier"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "X500_UNIQUE_IDENTIFIER"
    fully_qualified_name: "cryptography.x509.NameOID.X500_UNIQUE_IDENTIFIER"
    type_annotation {
      pretty_printed_name: "cryptography.x509.ObjectIdentifier"
      fully_qualified_name: "cryptography.x509.ObjectIdentifier"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "OCSPExtensionOID"
  fully_qualified_name: "cryptography.x509.OCSPExtensionOID"
  super_classes: "builtins.object"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "NONCE"
    fully_qualified_name: "cryptography.x509.OCSPExtensionOID.NONCE"
    type_annotation {
      pretty_printed_name: "cryptography.x509.ObjectIdentifier"
      fully_qualified_name: "cryptography.x509.ObjectIdentifier"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "SignatureAlgorithmOID"
  fully_qualified_name: "cryptography.x509.SignatureAlgorithmOID"
  super_classes: "builtins.object"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "DSA_WITH_SHA1"
    fully_qualified_name: "cryptography.x509.SignatureAlgorithmOID.DSA_WITH_SHA1"
    type_annotation {
      pretty_printed_name: "cryptography.x509.ObjectIdentifier"
      fully_qualified_name: "cryptography.x509.ObjectIdentifier"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "DSA_WITH_SHA224"
    fully_qualified_name: "cryptography.x509.SignatureAlgorithmOID.DSA_WITH_SHA224"
    type_annotation {
      pretty_printed_name: "cryptography.x509.ObjectIdentifier"
      fully_qualified_name: "cryptography.x509.ObjectIdentifier"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "DSA_WITH_SHA256"
    fully_qualified_name: "cryptography.x509.SignatureAlgorithmOID.DSA_WITH_SHA256"
    type_annotation {
      pretty_printed_name: "cryptography.x509.ObjectIdentifier"
      fully_qualified_name: "cryptography.x509.ObjectIdentifier"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "ECDSA_WITH_SHA1"
    fully_qualified_name: "cryptography.x509.SignatureAlgorithmOID.ECDSA_WITH_SHA1"
    type_annotation {
      pretty_printed_name: "cryptography.x509.ObjectIdentifier"
      fully_qualified_name: "cryptography.x509.ObjectIdentifier"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "ECDSA_WITH_SHA224"
    fully_qualified_name: "cryptography.x509.SignatureAlgorithmOID.ECDSA_WITH_SHA224"
    type_annotation {
      pretty_printed_name: "cryptography.x509.ObjectIdentifier"
      fully_qualified_name: "cryptography.x509.ObjectIdentifier"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "ECDSA_WITH_SHA256"
    fully_qualified_name: "cryptography.x509.SignatureAlgorithmOID.ECDSA_WITH_SHA256"
    type_annotation {
      pretty_printed_name: "cryptography.x509.ObjectIdentifier"
      fully_qualified_name: "cryptography.x509.ObjectIdentifier"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "ECDSA_WITH_SHA384"
    fully_qualified_name: "cryptography.x509.SignatureAlgorithmOID.ECDSA_WITH_SHA384"
    type_annotation {
      pretty_printed_name: "cryptography.x509.ObjectIdentifier"
      fully_qualified_name: "cryptography.x509.ObjectIdentifier"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "ECDSA_WITH_SHA512"
    fully_qualified_name: "cryptography.x509.SignatureAlgorithmOID.ECDSA_WITH_SHA512"
    type_annotation {
      pretty_printed_name: "cryptography.x509.ObjectIdentifier"
      fully_qualified_name: "cryptography.x509.ObjectIdentifier"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "ED25519"
    fully_qualified_name: "cryptography.x509.SignatureAlgorithmOID.ED25519"
    type_annotation {
      pretty_printed_name: "cryptography.x509.ObjectIdentifier"
      fully_qualified_name: "cryptography.x509.ObjectIdentifier"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "ED448"
    fully_qualified_name: "cryptography.x509.SignatureAlgorithmOID.ED448"
    type_annotation {
      pretty_printed_name: "cryptography.x509.ObjectIdentifier"
      fully_qualified_name: "cryptography.x509.ObjectIdentifier"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "RSASSA_PSS"
    fully_qualified_name: "cryptography.x509.SignatureAlgorithmOID.RSASSA_PSS"
    type_annotation {
      pretty_printed_name: "cryptography.x509.ObjectIdentifier"
      fully_qualified_name: "cryptography.x509.ObjectIdentifier"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "RSA_WITH_MD5"
    fully_qualified_name: "cryptography.x509.SignatureAlgorithmOID.RSA_WITH_MD5"
    type_annotation {
      pretty_printed_name: "cryptography.x509.ObjectIdentifier"
      fully_qualified_name: "cryptography.x509.ObjectIdentifier"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "RSA_WITH_SHA1"
    fully_qualified_name: "cryptography.x509.SignatureAlgorithmOID.RSA_WITH_SHA1"
    type_annotation {
      pretty_printed_name: "cryptography.x509.ObjectIdentifier"
      fully_qualified_name: "cryptography.x509.ObjectIdentifier"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "RSA_WITH_SHA224"
    fully_qualified_name: "cryptography.x509.SignatureAlgorithmOID.RSA_WITH_SHA224"
    type_annotation {
      pretty_printed_name: "cryptography.x509.ObjectIdentifier"
      fully_qualified_name: "cryptography.x509.ObjectIdentifier"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "RSA_WITH_SHA256"
    fully_qualified_name: "cryptography.x509.SignatureAlgorithmOID.RSA_WITH_SHA256"
    type_annotation {
      pretty_printed_name: "cryptography.x509.ObjectIdentifier"
      fully_qualified_name: "cryptography.x509.ObjectIdentifier"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "RSA_WITH_SHA384"
    fully_qualified_name: "cryptography.x509.SignatureAlgorithmOID.RSA_WITH_SHA384"
    type_annotation {
      pretty_printed_name: "cryptography.x509.ObjectIdentifier"
      fully_qualified_name: "cryptography.x509.ObjectIdentifier"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "RSA_WITH_SHA512"
    fully_qualified_name: "cryptography.x509.SignatureAlgorithmOID.RSA_WITH_SHA512"
    type_annotation {
      pretty_printed_name: "cryptography.x509.ObjectIdentifier"
      fully_qualified_name: "cryptography.x509.ObjectIdentifier"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "ExtendedKeyUsageOID"
  fully_qualified_name: "cryptography.x509.ExtendedKeyUsageOID"
  super_classes: "builtins.object"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "SERVER_AUTH"
    fully_qualified_name: "cryptography.x509.ExtendedKeyUsageOID.SERVER_AUTH"
    type_annotation {
      pretty_printed_name: "cryptography.x509.ObjectIdentifier"
      fully_qualified_name: "cryptography.x509.ObjectIdentifier"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "CLIENT_AUTH"
    fully_qualified_name: "cryptography.x509.ExtendedKeyUsageOID.CLIENT_AUTH"
    type_annotation {
      pretty_printed_name: "cryptography.x509.ObjectIdentifier"
      fully_qualified_name: "cryptography.x509.ObjectIdentifier"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "CODE_SIGNING"
    fully_qualified_name: "cryptography.x509.ExtendedKeyUsageOID.CODE_SIGNING"
    type_annotation {
      pretty_printed_name: "cryptography.x509.ObjectIdentifier"
      fully_qualified_name: "cryptography.x509.ObjectIdentifier"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "EMAIL_PROTECTION"
    fully_qualified_name: "cryptography.x509.ExtendedKeyUsageOID.EMAIL_PROTECTION"
    type_annotation {
      pretty_printed_name: "cryptography.x509.ObjectIdentifier"
      fully_qualified_name: "cryptography.x509.ObjectIdentifier"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "TIME_STAMPING"
    fully_qualified_name: "cryptography.x509.ExtendedKeyUsageOID.TIME_STAMPING"
    type_annotation {
      pretty_printed_name: "cryptography.x509.ObjectIdentifier"
      fully_qualified_name: "cryptography.x509.ObjectIdentifier"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "OCSP_SIGNING"
    fully_qualified_name: "cryptography.x509.ExtendedKeyUsageOID.OCSP_SIGNING"
    type_annotation {
      pretty_printed_name: "cryptography.x509.ObjectIdentifier"
      fully_qualified_name: "cryptography.x509.ObjectIdentifier"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "ANY_EXTENDED_KEY_USAGE"
    fully_qualified_name: "cryptography.x509.ExtendedKeyUsageOID.ANY_EXTENDED_KEY_USAGE"
    type_annotation {
      pretty_printed_name: "cryptography.x509.ObjectIdentifier"
      fully_qualified_name: "cryptography.x509.ObjectIdentifier"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "NameAttribute"
  fully_qualified_name: "cryptography.x509.NameAttribute"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "cryptography.x509.NameAttribute.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.NameAttribute"
        fully_qualified_name: "cryptography.x509.NameAttribute"
      }
    }
    parameters {
      name: "oid"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.ObjectIdentifier"
        fully_qualified_name: "cryptography.x509.ObjectIdentifier"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "rfc4514_string"
    fully_qualified_name: "cryptography.x509.NameAttribute.rfc4514_string"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.NameAttribute"
        fully_qualified_name: "cryptography.x509.NameAttribute"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "oid"
    fully_qualified_name: "cryptography.x509.NameAttribute.oid"
    type_annotation {
      pretty_printed_name: "cryptography.x509.ObjectIdentifier"
      fully_qualified_name: "cryptography.x509.ObjectIdentifier"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "value"
    fully_qualified_name: "cryptography.x509.NameAttribute.value"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "RelativeDistinguishedName"
  fully_qualified_name: "cryptography.x509.RelativeDistinguishedName"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "cryptography.x509.RelativeDistinguishedName.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.RelativeDistinguishedName"
        fully_qualified_name: "cryptography.x509.RelativeDistinguishedName"
      }
    }
    parameters {
      name: "attributes"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.list[cryptography.x509.NameAttribute]"
        args {
          pretty_printed_name: "cryptography.x509.NameAttribute"
          fully_qualified_name: "cryptography.x509.NameAttribute"
        }
        fully_qualified_name: "builtins.list"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__iter__"
    fully_qualified_name: "cryptography.x509.RelativeDistinguishedName.__iter__"
    return_annotation {
      pretty_printed_name: "typing.Generator[cryptography.x509.NameAttribute,None,None]"
      args {
        pretty_printed_name: "cryptography.x509.NameAttribute"
        fully_qualified_name: "cryptography.x509.NameAttribute"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
      fully_qualified_name: "typing.Generator"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "cryptography.x509.RelativeDistinguishedName"
        fully_qualified_name: "cryptography.x509.RelativeDistinguishedName"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "get_attributes_for_oid"
    fully_qualified_name: "cryptography.x509.RelativeDistinguishedName.get_attributes_for_oid"
    return_annotation {
      pretty_printed_name: "builtins.list[cryptography.x509.NameAttribute]"
      args {
        pretty_printed_name: "cryptography.x509.NameAttribute"
        fully_qualified_name: "cryptography.x509.NameAttribute"
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.RelativeDistinguishedName"
        fully_qualified_name: "cryptography.x509.RelativeDistinguishedName"
      }
    }
    parameters {
      name: "oid"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.ObjectIdentifier"
        fully_qualified_name: "cryptography.x509.ObjectIdentifier"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "rfc4514_string"
    fully_qualified_name: "cryptography.x509.RelativeDistinguishedName.rfc4514_string"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.RelativeDistinguishedName"
        fully_qualified_name: "cryptography.x509.RelativeDistinguishedName"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "Name"
  fully_qualified_name: "cryptography.x509.Name"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "cryptography.x509.Name.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.Name"
        fully_qualified_name: "cryptography.x509.Name"
      }
    }
    parameters {
      name: "attributes"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Sequence[Union[cryptography.x509.NameAttribute,cryptography.x509.RelativeDistinguishedName]]"
        args {
          pretty_printed_name: "Union[cryptography.x509.NameAttribute,cryptography.x509.RelativeDistinguishedName]"
          kind: UNION
          args {
            pretty_printed_name: "cryptography.x509.NameAttribute"
            fully_qualified_name: "cryptography.x509.NameAttribute"
          }
          args {
            pretty_printed_name: "cryptography.x509.RelativeDistinguishedName"
            fully_qualified_name: "cryptography.x509.RelativeDistinguishedName"
          }
        }
        fully_qualified_name: "typing.Sequence"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__iter__"
    fully_qualified_name: "cryptography.x509.Name.__iter__"
    return_annotation {
      pretty_printed_name: "typing.Generator[cryptography.x509.NameAttribute,None,None]"
      args {
        pretty_printed_name: "cryptography.x509.NameAttribute"
        fully_qualified_name: "cryptography.x509.NameAttribute"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
      fully_qualified_name: "typing.Generator"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "cryptography.x509.Name"
        fully_qualified_name: "cryptography.x509.Name"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__len__"
    fully_qualified_name: "cryptography.x509.Name.__len__"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "cryptography.x509.Name"
        fully_qualified_name: "cryptography.x509.Name"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "get_attributes_for_oid"
    fully_qualified_name: "cryptography.x509.Name.get_attributes_for_oid"
    return_annotation {
      pretty_printed_name: "builtins.list[cryptography.x509.NameAttribute]"
      args {
        pretty_printed_name: "cryptography.x509.NameAttribute"
        fully_qualified_name: "cryptography.x509.NameAttribute"
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.Name"
        fully_qualified_name: "cryptography.x509.Name"
      }
    }
    parameters {
      name: "oid"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.ObjectIdentifier"
        fully_qualified_name: "cryptography.x509.ObjectIdentifier"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "public_bytes"
    fully_qualified_name: "cryptography.x509.Name.public_bytes"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.Name"
        fully_qualified_name: "cryptography.x509.Name"
      }
    }
    parameters {
      name: "backend"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[cryptography.hazmat.backends.interfaces.X509Backend,None]"
        kind: UNION
        args {
          pretty_printed_name: "cryptography.hazmat.backends.interfaces.X509Backend"
          fully_qualified_name: "cryptography.hazmat.backends.interfaces.X509Backend"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "rfc4514_string"
    fully_qualified_name: "cryptography.x509.Name.rfc4514_string"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.Name"
        fully_qualified_name: "cryptography.x509.Name"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "rdns"
    fully_qualified_name: "cryptography.x509.Name.rdns"
    type_annotation {
      pretty_printed_name: "builtins.list[cryptography.x509.RelativeDistinguishedName]"
      args {
        pretty_printed_name: "cryptography.x509.RelativeDistinguishedName"
        fully_qualified_name: "cryptography.x509.RelativeDistinguishedName"
      }
      fully_qualified_name: "builtins.list"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "Version"
  fully_qualified_name: "cryptography.x509.Version"
  super_classes: "enum.Enum"
  is_enum: true
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "v1"
    fully_qualified_name: "cryptography.x509.Version.v1"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "v3"
    fully_qualified_name: "cryptography.x509.Version.v3"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "Certificate"
  fully_qualified_name: "cryptography.x509.Certificate"
  super_classes: "builtins.object"
  methods {
    name: "fingerprint"
    fully_qualified_name: "cryptography.x509.Certificate.fingerprint"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.Certificate"
        fully_qualified_name: "cryptography.x509.Certificate"
      }
    }
    parameters {
      name: "algorithm"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives.hashes.HashAlgorithm"
        fully_qualified_name: "cryptography.hazmat.primitives.hashes.HashAlgorithm"
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "public_bytes"
    fully_qualified_name: "cryptography.x509.Certificate.public_bytes"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.Certificate"
        fully_qualified_name: "cryptography.x509.Certificate"
      }
    }
    parameters {
      name: "encoding"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives.serialization.Encoding"
        fully_qualified_name: "cryptography.hazmat.primitives.serialization.Encoding"
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "public_key"
    fully_qualified_name: "cryptography.x509.Certificate.public_key"
    return_annotation {
      pretty_printed_name: "Union[cryptography.hazmat.primitives.asymmetric.dsa.DSAPublicKey,cryptography.hazmat.primitives.asymmetric.ed25519.Ed25519PublicKey,cryptography.hazmat.primitives.asymmetric.ed448.Ed448PublicKey,cryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicKey,cryptography.hazmat.primitives.asymmetric.rsa.RSAPublicKey]"
      kind: UNION
      args {
        pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPublicKey"
        fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPublicKey"
      }
      args {
        pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.ed25519.Ed25519PublicKey"
        fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.ed25519.Ed25519PublicKey"
      }
      args {
        pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.ed448.Ed448PublicKey"
        fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.ed448.Ed448PublicKey"
      }
      args {
        pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicKey"
        fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicKey"
      }
      args {
        pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.rsa.RSAPublicKey"
        fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.rsa.RSAPublicKey"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.Certificate"
        fully_qualified_name: "cryptography.x509.Certificate"
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  has_metaclass: true
  metaclass_name: "abc.ABCMeta"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "extensions"
    fully_qualified_name: "cryptography.x509.Certificate.extensions"
    type_annotation {
      pretty_printed_name: "cryptography.x509.Extensions"
      fully_qualified_name: "cryptography.x509.Extensions"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "issuer"
    fully_qualified_name: "cryptography.x509.Certificate.issuer"
    type_annotation {
      pretty_printed_name: "cryptography.x509.Name"
      fully_qualified_name: "cryptography.x509.Name"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "not_valid_after"
    fully_qualified_name: "cryptography.x509.Certificate.not_valid_after"
    type_annotation {
      pretty_printed_name: "datetime.datetime"
      fully_qualified_name: "datetime.datetime"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "not_valid_before"
    fully_qualified_name: "cryptography.x509.Certificate.not_valid_before"
    type_annotation {
      pretty_printed_name: "datetime.datetime"
      fully_qualified_name: "datetime.datetime"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "serial_number"
    fully_qualified_name: "cryptography.x509.Certificate.serial_number"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "signature"
    fully_qualified_name: "cryptography.x509.Certificate.signature"
    type_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "signature_algorithm_oid"
    fully_qualified_name: "cryptography.x509.Certificate.signature_algorithm_oid"
    type_annotation {
      pretty_printed_name: "cryptography.x509.ObjectIdentifier"
      fully_qualified_name: "cryptography.x509.ObjectIdentifier"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "signature_hash_algorithm"
    fully_qualified_name: "cryptography.x509.Certificate.signature_hash_algorithm"
    type_annotation {
      pretty_printed_name: "cryptography.hazmat.primitives.hashes.HashAlgorithm"
      fully_qualified_name: "cryptography.hazmat.primitives.hashes.HashAlgorithm"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "tbs_certificate_bytes"
    fully_qualified_name: "cryptography.x509.Certificate.tbs_certificate_bytes"
    type_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "subject"
    fully_qualified_name: "cryptography.x509.Certificate.subject"
    type_annotation {
      pretty_printed_name: "cryptography.x509.Name"
      fully_qualified_name: "cryptography.x509.Name"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "version"
    fully_qualified_name: "cryptography.x509.Certificate.version"
    type_annotation {
      pretty_printed_name: "cryptography.x509.Version"
      fully_qualified_name: "cryptography.x509.Version"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "CertificateBuilder"
  fully_qualified_name: "cryptography.x509.CertificateBuilder"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "cryptography.x509.CertificateBuilder.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.CertificateBuilder"
        fully_qualified_name: "cryptography.x509.CertificateBuilder"
      }
    }
    parameters {
      name: "issuer_name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[cryptography.x509.Name,None]"
        kind: UNION
        args {
          pretty_printed_name: "cryptography.x509.Name"
          fully_qualified_name: "cryptography.x509.Name"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "subject_name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[cryptography.x509.Name,None]"
        kind: UNION
        args {
          pretty_printed_name: "cryptography.x509.Name"
          fully_qualified_name: "cryptography.x509.Name"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "public_key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[cryptography.hazmat.primitives.asymmetric.dsa.DSAPublicKey,cryptography.hazmat.primitives.asymmetric.ed25519.Ed25519PublicKey,cryptography.hazmat.primitives.asymmetric.ed448.Ed448PublicKey,cryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicKey,cryptography.hazmat.primitives.asymmetric.rsa.RSAPublicKey,None]"
        kind: UNION
        args {
          pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPublicKey"
          fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPublicKey"
        }
        args {
          pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.ed25519.Ed25519PublicKey"
          fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.ed25519.Ed25519PublicKey"
        }
        args {
          pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.ed448.Ed448PublicKey"
          fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.ed448.Ed448PublicKey"
        }
        args {
          pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicKey"
          fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicKey"
        }
        args {
          pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.rsa.RSAPublicKey"
          fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.rsa.RSAPublicKey"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "serial_number"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "not_valid_before"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[datetime.datetime,None]"
        kind: UNION
        args {
          pretty_printed_name: "datetime.datetime"
          fully_qualified_name: "datetime.datetime"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "not_valid_after"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[datetime.datetime,None]"
        kind: UNION
        args {
          pretty_printed_name: "datetime.datetime"
          fully_qualified_name: "datetime.datetime"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "extensions"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.Iterable[cryptography.x509.ExtensionType],None]"
        kind: UNION
        args {
          pretty_printed_name: "typing.Iterable[cryptography.x509.ExtensionType]"
          args {
            pretty_printed_name: "cryptography.x509.ExtensionType"
            fully_qualified_name: "cryptography.x509.ExtensionType"
          }
          fully_qualified_name: "typing.Iterable"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "add_extension"
    fully_qualified_name: "cryptography.x509.CertificateBuilder.add_extension"
    return_annotation {
      pretty_printed_name: "cryptography.x509.CertificateBuilder"
      fully_qualified_name: "cryptography.x509.CertificateBuilder"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.CertificateBuilder"
        fully_qualified_name: "cryptography.x509.CertificateBuilder"
      }
    }
    parameters {
      name: "extension"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.ExtensionType"
        fully_qualified_name: "cryptography.x509.ExtensionType"
      }
    }
    parameters {
      name: "critical"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "issuer_name"
    fully_qualified_name: "cryptography.x509.CertificateBuilder.issuer_name"
    return_annotation {
      pretty_printed_name: "cryptography.x509.CertificateBuilder"
      fully_qualified_name: "cryptography.x509.CertificateBuilder"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.CertificateBuilder"
        fully_qualified_name: "cryptography.x509.CertificateBuilder"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.Name"
        fully_qualified_name: "cryptography.x509.Name"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "not_valid_after"
    fully_qualified_name: "cryptography.x509.CertificateBuilder.not_valid_after"
    return_annotation {
      pretty_printed_name: "cryptography.x509.CertificateBuilder"
      fully_qualified_name: "cryptography.x509.CertificateBuilder"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.CertificateBuilder"
        fully_qualified_name: "cryptography.x509.CertificateBuilder"
      }
    }
    parameters {
      name: "time"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "datetime.datetime"
        fully_qualified_name: "datetime.datetime"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "not_valid_before"
    fully_qualified_name: "cryptography.x509.CertificateBuilder.not_valid_before"
    return_annotation {
      pretty_printed_name: "cryptography.x509.CertificateBuilder"
      fully_qualified_name: "cryptography.x509.CertificateBuilder"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.CertificateBuilder"
        fully_qualified_name: "cryptography.x509.CertificateBuilder"
      }
    }
    parameters {
      name: "time"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "datetime.datetime"
        fully_qualified_name: "datetime.datetime"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "public_key"
    fully_qualified_name: "cryptography.x509.CertificateBuilder.public_key"
    return_annotation {
      pretty_printed_name: "cryptography.x509.CertificateBuilder"
      fully_qualified_name: "cryptography.x509.CertificateBuilder"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.CertificateBuilder"
        fully_qualified_name: "cryptography.x509.CertificateBuilder"
      }
    }
    parameters {
      name: "public_key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[cryptography.hazmat.primitives.asymmetric.dsa.DSAPublicKey,cryptography.hazmat.primitives.asymmetric.ed25519.Ed25519PublicKey,cryptography.hazmat.primitives.asymmetric.ed448.Ed448PublicKey,cryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicKey,cryptography.hazmat.primitives.asymmetric.rsa.RSAPublicKey]"
        kind: UNION
        args {
          pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPublicKey"
          fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPublicKey"
        }
        args {
          pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.ed25519.Ed25519PublicKey"
          fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.ed25519.Ed25519PublicKey"
        }
        args {
          pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.ed448.Ed448PublicKey"
          fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.ed448.Ed448PublicKey"
        }
        args {
          pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicKey"
          fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicKey"
        }
        args {
          pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.rsa.RSAPublicKey"
          fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.rsa.RSAPublicKey"
        }
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "serial_number"
    fully_qualified_name: "cryptography.x509.CertificateBuilder.serial_number"
    return_annotation {
      pretty_printed_name: "cryptography.x509.CertificateBuilder"
      fully_qualified_name: "cryptography.x509.CertificateBuilder"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.CertificateBuilder"
        fully_qualified_name: "cryptography.x509.CertificateBuilder"
      }
    }
    parameters {
      name: "serial_number"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "sign"
    fully_qualified_name: "cryptography.x509.CertificateBuilder.sign"
    return_annotation {
      pretty_printed_name: "cryptography.x509.Certificate"
      fully_qualified_name: "cryptography.x509.Certificate"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.CertificateBuilder"
        fully_qualified_name: "cryptography.x509.CertificateBuilder"
      }
    }
    parameters {
      name: "private_key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[cryptography.hazmat.primitives.asymmetric.dsa.DSAPrivateKey,cryptography.hazmat.primitives.asymmetric.ed25519.Ed25519PrivateKey,cryptography.hazmat.primitives.asymmetric.ed448.Ed448PrivateKey,cryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePrivateKey,cryptography.hazmat.primitives.asymmetric.rsa.RSAPrivateKey]"
        kind: UNION
        args {
          pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPrivateKey"
          fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPrivateKey"
        }
        args {
          pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.ed25519.Ed25519PrivateKey"
          fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.ed25519.Ed25519PrivateKey"
        }
        args {
          pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.ed448.Ed448PrivateKey"
          fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.ed448.Ed448PrivateKey"
        }
        args {
          pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePrivateKey"
          fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePrivateKey"
        }
        args {
          pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.rsa.RSAPrivateKey"
          fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.rsa.RSAPrivateKey"
        }
      }
    }
    parameters {
      name: "algorithm"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[cryptography.hazmat.primitives.hashes.HashAlgorithm,None]"
        kind: UNION
        args {
          pretty_printed_name: "cryptography.hazmat.primitives.hashes.HashAlgorithm"
          fully_qualified_name: "cryptography.hazmat.primitives.hashes.HashAlgorithm"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "backend"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[cryptography.hazmat.backends.interfaces.X509Backend,None]"
        kind: UNION
        args {
          pretty_printed_name: "cryptography.hazmat.backends.interfaces.X509Backend"
          fully_qualified_name: "cryptography.hazmat.backends.interfaces.X509Backend"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "subject_name"
    fully_qualified_name: "cryptography.x509.CertificateBuilder.subject_name"
    return_annotation {
      pretty_printed_name: "cryptography.x509.CertificateBuilder"
      fully_qualified_name: "cryptography.x509.CertificateBuilder"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.CertificateBuilder"
        fully_qualified_name: "cryptography.x509.CertificateBuilder"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.Name"
        fully_qualified_name: "cryptography.x509.Name"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "CertificateRevocationList"
  fully_qualified_name: "cryptography.x509.CertificateRevocationList"
  super_classes: "builtins.object"
  methods {
    name: "fingerprint"
    fully_qualified_name: "cryptography.x509.CertificateRevocationList.fingerprint"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.CertificateRevocationList"
        fully_qualified_name: "cryptography.x509.CertificateRevocationList"
      }
    }
    parameters {
      name: "algorithm"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives.hashes.HashAlgorithm"
        fully_qualified_name: "cryptography.hazmat.primitives.hashes.HashAlgorithm"
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "get_revoked_certificate_by_serial_number"
    fully_qualified_name: "cryptography.x509.CertificateRevocationList.get_revoked_certificate_by_serial_number"
    return_annotation {
      pretty_printed_name: "cryptography.x509.RevokedCertificate"
      fully_qualified_name: "cryptography.x509.RevokedCertificate"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.CertificateRevocationList"
        fully_qualified_name: "cryptography.x509.CertificateRevocationList"
      }
    }
    parameters {
      name: "serial_number"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "is_signature_valid"
    fully_qualified_name: "cryptography.x509.CertificateRevocationList.is_signature_valid"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.CertificateRevocationList"
        fully_qualified_name: "cryptography.x509.CertificateRevocationList"
      }
    }
    parameters {
      name: "public_key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[cryptography.hazmat.primitives.asymmetric.dsa.DSAPublicKey,cryptography.hazmat.primitives.asymmetric.ed25519.Ed25519PublicKey,cryptography.hazmat.primitives.asymmetric.ed448.Ed448PublicKey,cryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicKey,cryptography.hazmat.primitives.asymmetric.rsa.RSAPublicKey]"
        kind: UNION
        args {
          pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPublicKey"
          fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPublicKey"
        }
        args {
          pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.ed25519.Ed25519PublicKey"
          fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.ed25519.Ed25519PublicKey"
        }
        args {
          pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.ed448.Ed448PublicKey"
          fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.ed448.Ed448PublicKey"
        }
        args {
          pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicKey"
          fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicKey"
        }
        args {
          pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.rsa.RSAPublicKey"
          fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.rsa.RSAPublicKey"
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "public_bytes"
    fully_qualified_name: "cryptography.x509.CertificateRevocationList.public_bytes"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.CertificateRevocationList"
        fully_qualified_name: "cryptography.x509.CertificateRevocationList"
      }
    }
    parameters {
      name: "encoding"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives.serialization.Encoding"
        fully_qualified_name: "cryptography.hazmat.primitives.serialization.Encoding"
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  has_metaclass: true
  metaclass_name: "abc.ABCMeta"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "extensions"
    fully_qualified_name: "cryptography.x509.CertificateRevocationList.extensions"
    type_annotation {
      pretty_printed_name: "cryptography.x509.Extensions"
      fully_qualified_name: "cryptography.x509.Extensions"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "issuer"
    fully_qualified_name: "cryptography.x509.CertificateRevocationList.issuer"
    type_annotation {
      pretty_printed_name: "cryptography.x509.Name"
      fully_qualified_name: "cryptography.x509.Name"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "last_update"
    fully_qualified_name: "cryptography.x509.CertificateRevocationList.last_update"
    type_annotation {
      pretty_printed_name: "datetime.datetime"
      fully_qualified_name: "datetime.datetime"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "next_update"
    fully_qualified_name: "cryptography.x509.CertificateRevocationList.next_update"
    type_annotation {
      pretty_printed_name: "datetime.datetime"
      fully_qualified_name: "datetime.datetime"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "signature"
    fully_qualified_name: "cryptography.x509.CertificateRevocationList.signature"
    type_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "signature_algorithm_oid"
    fully_qualified_name: "cryptography.x509.CertificateRevocationList.signature_algorithm_oid"
    type_annotation {
      pretty_printed_name: "cryptography.x509.ObjectIdentifier"
      fully_qualified_name: "cryptography.x509.ObjectIdentifier"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "signature_hash_algorithm"
    fully_qualified_name: "cryptography.x509.CertificateRevocationList.signature_hash_algorithm"
    type_annotation {
      pretty_printed_name: "cryptography.hazmat.primitives.hashes.HashAlgorithm"
      fully_qualified_name: "cryptography.hazmat.primitives.hashes.HashAlgorithm"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "tbs_certlist_bytes"
    fully_qualified_name: "cryptography.x509.CertificateRevocationList.tbs_certlist_bytes"
    type_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "CertificateRevocationListBuilder"
  fully_qualified_name: "cryptography.x509.CertificateRevocationListBuilder"
  super_classes: "builtins.object"
  methods {
    name: "add_extension"
    fully_qualified_name: "cryptography.x509.CertificateRevocationListBuilder.add_extension"
    return_annotation {
      pretty_printed_name: "cryptography.x509.CertificateRevocationListBuilder"
      fully_qualified_name: "cryptography.x509.CertificateRevocationListBuilder"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.CertificateRevocationListBuilder"
        fully_qualified_name: "cryptography.x509.CertificateRevocationListBuilder"
      }
    }
    parameters {
      name: "extension"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.ExtensionType"
        fully_qualified_name: "cryptography.x509.ExtensionType"
      }
    }
    parameters {
      name: "critical"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "add_revoked_certificate"
    fully_qualified_name: "cryptography.x509.CertificateRevocationListBuilder.add_revoked_certificate"
    return_annotation {
      pretty_printed_name: "cryptography.x509.CertificateRevocationListBuilder"
      fully_qualified_name: "cryptography.x509.CertificateRevocationListBuilder"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.CertificateRevocationListBuilder"
        fully_qualified_name: "cryptography.x509.CertificateRevocationListBuilder"
      }
    }
    parameters {
      name: "revoked_certificate"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.RevokedCertificate"
        fully_qualified_name: "cryptography.x509.RevokedCertificate"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "issuer_name"
    fully_qualified_name: "cryptography.x509.CertificateRevocationListBuilder.issuer_name"
    return_annotation {
      pretty_printed_name: "cryptography.x509.CertificateRevocationListBuilder"
      fully_qualified_name: "cryptography.x509.CertificateRevocationListBuilder"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.CertificateRevocationListBuilder"
        fully_qualified_name: "cryptography.x509.CertificateRevocationListBuilder"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.Name"
        fully_qualified_name: "cryptography.x509.Name"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "last_update"
    fully_qualified_name: "cryptography.x509.CertificateRevocationListBuilder.last_update"
    return_annotation {
      pretty_printed_name: "cryptography.x509.CertificateRevocationListBuilder"
      fully_qualified_name: "cryptography.x509.CertificateRevocationListBuilder"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.CertificateRevocationListBuilder"
        fully_qualified_name: "cryptography.x509.CertificateRevocationListBuilder"
      }
    }
    parameters {
      name: "time"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "datetime.datetime"
        fully_qualified_name: "datetime.datetime"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "next_update"
    fully_qualified_name: "cryptography.x509.CertificateRevocationListBuilder.next_update"
    return_annotation {
      pretty_printed_name: "cryptography.x509.CertificateRevocationListBuilder"
      fully_qualified_name: "cryptography.x509.CertificateRevocationListBuilder"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.CertificateRevocationListBuilder"
        fully_qualified_name: "cryptography.x509.CertificateRevocationListBuilder"
      }
    }
    parameters {
      name: "time"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "datetime.datetime"
        fully_qualified_name: "datetime.datetime"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "sign"
    fully_qualified_name: "cryptography.x509.CertificateRevocationListBuilder.sign"
    return_annotation {
      pretty_printed_name: "cryptography.x509.CertificateRevocationList"
      fully_qualified_name: "cryptography.x509.CertificateRevocationList"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.CertificateRevocationListBuilder"
        fully_qualified_name: "cryptography.x509.CertificateRevocationListBuilder"
      }
    }
    parameters {
      name: "private_key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[cryptography.hazmat.primitives.asymmetric.dsa.DSAPrivateKey,cryptography.hazmat.primitives.asymmetric.ed25519.Ed25519PrivateKey,cryptography.hazmat.primitives.asymmetric.ed448.Ed448PrivateKey,cryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePrivateKey,cryptography.hazmat.primitives.asymmetric.rsa.RSAPrivateKey]"
        kind: UNION
        args {
          pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPrivateKey"
          fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPrivateKey"
        }
        args {
          pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.ed25519.Ed25519PrivateKey"
          fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.ed25519.Ed25519PrivateKey"
        }
        args {
          pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.ed448.Ed448PrivateKey"
          fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.ed448.Ed448PrivateKey"
        }
        args {
          pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePrivateKey"
          fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePrivateKey"
        }
        args {
          pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.rsa.RSAPrivateKey"
          fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.rsa.RSAPrivateKey"
        }
      }
    }
    parameters {
      name: "algorithm"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[cryptography.hazmat.primitives.hashes.HashAlgorithm,None]"
        kind: UNION
        args {
          pretty_printed_name: "cryptography.hazmat.primitives.hashes.HashAlgorithm"
          fully_qualified_name: "cryptography.hazmat.primitives.hashes.HashAlgorithm"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "backend"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[cryptography.hazmat.backends.interfaces.X509Backend,None]"
        kind: UNION
        args {
          pretty_printed_name: "cryptography.hazmat.backends.interfaces.X509Backend"
          fully_qualified_name: "cryptography.hazmat.backends.interfaces.X509Backend"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "CertificateSigningRequest"
  fully_qualified_name: "cryptography.x509.CertificateSigningRequest"
  super_classes: "builtins.object"
  methods {
    name: "public_bytes"
    fully_qualified_name: "cryptography.x509.CertificateSigningRequest.public_bytes"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.CertificateSigningRequest"
        fully_qualified_name: "cryptography.x509.CertificateSigningRequest"
      }
    }
    parameters {
      name: "encoding"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives.serialization.Encoding"
        fully_qualified_name: "cryptography.hazmat.primitives.serialization.Encoding"
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "public_key"
    fully_qualified_name: "cryptography.x509.CertificateSigningRequest.public_key"
    return_annotation {
      pretty_printed_name: "Union[cryptography.hazmat.primitives.asymmetric.dsa.DSAPublicKey,cryptography.hazmat.primitives.asymmetric.ed25519.Ed25519PublicKey,cryptography.hazmat.primitives.asymmetric.ed448.Ed448PublicKey,cryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicKey,cryptography.hazmat.primitives.asymmetric.rsa.RSAPublicKey]"
      kind: UNION
      args {
        pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPublicKey"
        fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPublicKey"
      }
      args {
        pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.ed25519.Ed25519PublicKey"
        fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.ed25519.Ed25519PublicKey"
      }
      args {
        pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.ed448.Ed448PublicKey"
        fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.ed448.Ed448PublicKey"
      }
      args {
        pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicKey"
        fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicKey"
      }
      args {
        pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.rsa.RSAPublicKey"
        fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.rsa.RSAPublicKey"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.CertificateSigningRequest"
        fully_qualified_name: "cryptography.x509.CertificateSigningRequest"
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
    is_abstract: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  has_metaclass: true
  metaclass_name: "abc.ABCMeta"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "extensions"
    fully_qualified_name: "cryptography.x509.CertificateSigningRequest.extensions"
    type_annotation {
      pretty_printed_name: "cryptography.x509.Extensions"
      fully_qualified_name: "cryptography.x509.Extensions"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "is_signature_valid"
    fully_qualified_name: "cryptography.x509.CertificateSigningRequest.is_signature_valid"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "signature"
    fully_qualified_name: "cryptography.x509.CertificateSigningRequest.signature"
    type_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "signature_algorithm_oid"
    fully_qualified_name: "cryptography.x509.CertificateSigningRequest.signature_algorithm_oid"
    type_annotation {
      pretty_printed_name: "cryptography.x509.ObjectIdentifier"
      fully_qualified_name: "cryptography.x509.ObjectIdentifier"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "signature_hash_algorithm"
    fully_qualified_name: "cryptography.x509.CertificateSigningRequest.signature_hash_algorithm"
    type_annotation {
      pretty_printed_name: "cryptography.hazmat.primitives.hashes.HashAlgorithm"
      fully_qualified_name: "cryptography.hazmat.primitives.hashes.HashAlgorithm"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "subject"
    fully_qualified_name: "cryptography.x509.CertificateSigningRequest.subject"
    type_annotation {
      pretty_printed_name: "cryptography.x509.Name"
      fully_qualified_name: "cryptography.x509.Name"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "tbs_certrequest_bytes"
    fully_qualified_name: "cryptography.x509.CertificateSigningRequest.tbs_certrequest_bytes"
    type_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "CertificateSigningRequestBuilder"
  fully_qualified_name: "cryptography.x509.CertificateSigningRequestBuilder"
  super_classes: "builtins.object"
  methods {
    name: "add_extension"
    fully_qualified_name: "cryptography.x509.CertificateSigningRequestBuilder.add_extension"
    return_annotation {
      pretty_printed_name: "cryptography.x509.CertificateSigningRequestBuilder"
      fully_qualified_name: "cryptography.x509.CertificateSigningRequestBuilder"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.CertificateSigningRequestBuilder"
        fully_qualified_name: "cryptography.x509.CertificateSigningRequestBuilder"
      }
    }
    parameters {
      name: "extension"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.ExtensionType"
        fully_qualified_name: "cryptography.x509.ExtensionType"
      }
    }
    parameters {
      name: "critical"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "subject_name"
    fully_qualified_name: "cryptography.x509.CertificateSigningRequestBuilder.subject_name"
    return_annotation {
      pretty_printed_name: "cryptography.x509.CertificateSigningRequestBuilder"
      fully_qualified_name: "cryptography.x509.CertificateSigningRequestBuilder"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.CertificateSigningRequestBuilder"
        fully_qualified_name: "cryptography.x509.CertificateSigningRequestBuilder"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.Name"
        fully_qualified_name: "cryptography.x509.Name"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "sign"
    fully_qualified_name: "cryptography.x509.CertificateSigningRequestBuilder.sign"
    return_annotation {
      pretty_printed_name: "cryptography.x509.CertificateSigningRequest"
      fully_qualified_name: "cryptography.x509.CertificateSigningRequest"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.CertificateSigningRequestBuilder"
        fully_qualified_name: "cryptography.x509.CertificateSigningRequestBuilder"
      }
    }
    parameters {
      name: "private_key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[cryptography.hazmat.primitives.asymmetric.dsa.DSAPrivateKey,cryptography.hazmat.primitives.asymmetric.ed25519.Ed25519PrivateKey,cryptography.hazmat.primitives.asymmetric.ed448.Ed448PrivateKey,cryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePrivateKey,cryptography.hazmat.primitives.asymmetric.rsa.RSAPrivateKey]"
        kind: UNION
        args {
          pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPrivateKey"
          fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPrivateKey"
        }
        args {
          pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.ed25519.Ed25519PrivateKey"
          fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.ed25519.Ed25519PrivateKey"
        }
        args {
          pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.ed448.Ed448PrivateKey"
          fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.ed448.Ed448PrivateKey"
        }
        args {
          pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePrivateKey"
          fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePrivateKey"
        }
        args {
          pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.rsa.RSAPrivateKey"
          fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.rsa.RSAPrivateKey"
        }
      }
    }
    parameters {
      name: "algorithm"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[cryptography.hazmat.primitives.hashes.HashAlgorithm,None]"
        kind: UNION
        args {
          pretty_printed_name: "cryptography.hazmat.primitives.hashes.HashAlgorithm"
          fully_qualified_name: "cryptography.hazmat.primitives.hashes.HashAlgorithm"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "backend"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[cryptography.hazmat.backends.interfaces.X509Backend,None]"
        kind: UNION
        args {
          pretty_printed_name: "cryptography.hazmat.backends.interfaces.X509Backend"
          fully_qualified_name: "cryptography.hazmat.backends.interfaces.X509Backend"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "RevokedCertificate"
  fully_qualified_name: "cryptography.x509.RevokedCertificate"
  super_classes: "builtins.object"
  has_metaclass: true
  metaclass_name: "abc.ABCMeta"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "extensions"
    fully_qualified_name: "cryptography.x509.RevokedCertificate.extensions"
    type_annotation {
      pretty_printed_name: "cryptography.x509.Extensions"
      fully_qualified_name: "cryptography.x509.Extensions"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "revocation_date"
    fully_qualified_name: "cryptography.x509.RevokedCertificate.revocation_date"
    type_annotation {
      pretty_printed_name: "datetime.datetime"
      fully_qualified_name: "datetime.datetime"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "serial_number"
    fully_qualified_name: "cryptography.x509.RevokedCertificate.serial_number"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "RevokedCertificateBuilder"
  fully_qualified_name: "cryptography.x509.RevokedCertificateBuilder"
  super_classes: "builtins.object"
  methods {
    name: "add_extension"
    fully_qualified_name: "cryptography.x509.RevokedCertificateBuilder.add_extension"
    return_annotation {
      pretty_printed_name: "cryptography.x509.RevokedCertificateBuilder"
      fully_qualified_name: "cryptography.x509.RevokedCertificateBuilder"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.RevokedCertificateBuilder"
        fully_qualified_name: "cryptography.x509.RevokedCertificateBuilder"
      }
    }
    parameters {
      name: "extension"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.ExtensionType"
        fully_qualified_name: "cryptography.x509.ExtensionType"
      }
    }
    parameters {
      name: "critical"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "build"
    fully_qualified_name: "cryptography.x509.RevokedCertificateBuilder.build"
    return_annotation {
      pretty_printed_name: "cryptography.x509.RevokedCertificate"
      fully_qualified_name: "cryptography.x509.RevokedCertificate"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.RevokedCertificateBuilder"
        fully_qualified_name: "cryptography.x509.RevokedCertificateBuilder"
      }
    }
    parameters {
      name: "backend"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[cryptography.hazmat.backends.interfaces.X509Backend,None]"
        kind: UNION
        args {
          pretty_printed_name: "cryptography.hazmat.backends.interfaces.X509Backend"
          fully_qualified_name: "cryptography.hazmat.backends.interfaces.X509Backend"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "revocation_date"
    fully_qualified_name: "cryptography.x509.RevokedCertificateBuilder.revocation_date"
    return_annotation {
      pretty_printed_name: "cryptography.x509.RevokedCertificateBuilder"
      fully_qualified_name: "cryptography.x509.RevokedCertificateBuilder"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.RevokedCertificateBuilder"
        fully_qualified_name: "cryptography.x509.RevokedCertificateBuilder"
      }
    }
    parameters {
      name: "time"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "datetime.datetime"
        fully_qualified_name: "datetime.datetime"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "serial_number"
    fully_qualified_name: "cryptography.x509.RevokedCertificateBuilder.serial_number"
    return_annotation {
      pretty_printed_name: "cryptography.x509.RevokedCertificateBuilder"
      fully_qualified_name: "cryptography.x509.RevokedCertificateBuilder"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.RevokedCertificateBuilder"
        fully_qualified_name: "cryptography.x509.RevokedCertificateBuilder"
      }
    }
    parameters {
      name: "serial_number"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "GeneralName"
  fully_qualified_name: "cryptography.x509.GeneralName"
  super_classes: "builtins.object"
  has_metaclass: true
  metaclass_name: "abc.ABCMeta"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "value"
    fully_qualified_name: "cryptography.x509.GeneralName.value"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "DirectoryName"
  fully_qualified_name: "cryptography.x509.DirectoryName"
  super_classes: "cryptography.x509.GeneralName"
  methods {
    name: "__init__"
    fully_qualified_name: "cryptography.x509.DirectoryName.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.DirectoryName"
        fully_qualified_name: "cryptography.x509.DirectoryName"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.Name"
        fully_qualified_name: "cryptography.x509.Name"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "value"
    fully_qualified_name: "cryptography.x509.DirectoryName.value"
    type_annotation {
      pretty_printed_name: "cryptography.x509.Name"
      fully_qualified_name: "cryptography.x509.Name"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "DNSName"
  fully_qualified_name: "cryptography.x509.DNSName"
  super_classes: "cryptography.x509.GeneralName"
  methods {
    name: "__init__"
    fully_qualified_name: "cryptography.x509.DNSName.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.DNSName"
        fully_qualified_name: "cryptography.x509.DNSName"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "value"
    fully_qualified_name: "cryptography.x509.DNSName.value"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "IPAddress"
  fully_qualified_name: "cryptography.x509.IPAddress"
  super_classes: "cryptography.x509.GeneralName"
  methods {
    name: "__init__"
    fully_qualified_name: "cryptography.x509.IPAddress.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.IPAddress"
        fully_qualified_name: "cryptography.x509.IPAddress"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[ipaddress.IPv4Address,ipaddress.IPv6Address,ipaddress.IPv4Network,ipaddress.IPv6Network]"
        kind: UNION
        args {
          pretty_printed_name: "ipaddress.IPv4Address"
          fully_qualified_name: "ipaddress.IPv4Address"
        }
        args {
          pretty_printed_name: "ipaddress.IPv6Address"
          fully_qualified_name: "ipaddress.IPv6Address"
        }
        args {
          pretty_printed_name: "ipaddress.IPv4Network"
          fully_qualified_name: "ipaddress.IPv4Network"
        }
        args {
          pretty_printed_name: "ipaddress.IPv6Network"
          fully_qualified_name: "ipaddress.IPv6Network"
        }
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "value"
    fully_qualified_name: "cryptography.x509.IPAddress.value"
    type_annotation {
      pretty_printed_name: "Union[ipaddress.IPv4Address,ipaddress.IPv6Address,ipaddress.IPv4Network,ipaddress.IPv6Network]"
      kind: UNION
      args {
        pretty_printed_name: "ipaddress.IPv4Address"
        fully_qualified_name: "ipaddress.IPv4Address"
      }
      args {
        pretty_printed_name: "ipaddress.IPv6Address"
        fully_qualified_name: "ipaddress.IPv6Address"
      }
      args {
        pretty_printed_name: "ipaddress.IPv4Network"
        fully_qualified_name: "ipaddress.IPv4Network"
      }
      args {
        pretty_printed_name: "ipaddress.IPv6Network"
        fully_qualified_name: "ipaddress.IPv6Network"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "OtherName"
  fully_qualified_name: "cryptography.x509.OtherName"
  super_classes: "cryptography.x509.GeneralName"
  methods {
    name: "__init__"
    fully_qualified_name: "cryptography.x509.OtherName.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.OtherName"
        fully_qualified_name: "cryptography.x509.OtherName"
      }
    }
    parameters {
      name: "type_id"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.ObjectIdentifier"
        fully_qualified_name: "cryptography.x509.ObjectIdentifier"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "type_id"
    fully_qualified_name: "cryptography.x509.OtherName.type_id"
    type_annotation {
      pretty_printed_name: "cryptography.x509.ObjectIdentifier"
      fully_qualified_name: "cryptography.x509.ObjectIdentifier"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "value"
    fully_qualified_name: "cryptography.x509.OtherName.value"
    type_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "RegisteredID"
  fully_qualified_name: "cryptography.x509.RegisteredID"
  super_classes: "cryptography.x509.GeneralName"
  methods {
    name: "__init__"
    fully_qualified_name: "cryptography.x509.RegisteredID.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.RegisteredID"
        fully_qualified_name: "cryptography.x509.RegisteredID"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.ObjectIdentifier"
        fully_qualified_name: "cryptography.x509.ObjectIdentifier"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "value"
    fully_qualified_name: "cryptography.x509.RegisteredID.value"
    type_annotation {
      pretty_printed_name: "cryptography.x509.ObjectIdentifier"
      fully_qualified_name: "cryptography.x509.ObjectIdentifier"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "RFC822Name"
  fully_qualified_name: "cryptography.x509.RFC822Name"
  super_classes: "cryptography.x509.GeneralName"
  methods {
    name: "__init__"
    fully_qualified_name: "cryptography.x509.RFC822Name.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.RFC822Name"
        fully_qualified_name: "cryptography.x509.RFC822Name"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "value"
    fully_qualified_name: "cryptography.x509.RFC822Name.value"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "UniformResourceIdentifier"
  fully_qualified_name: "cryptography.x509.UniformResourceIdentifier"
  super_classes: "cryptography.x509.GeneralName"
  methods {
    name: "__init__"
    fully_qualified_name: "cryptography.x509.UniformResourceIdentifier.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.UniformResourceIdentifier"
        fully_qualified_name: "cryptography.x509.UniformResourceIdentifier"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "value"
    fully_qualified_name: "cryptography.x509.UniformResourceIdentifier.value"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "ExtensionType"
  fully_qualified_name: "cryptography.x509.ExtensionType"
  super_classes: "builtins.object"
  has_metaclass: true
  metaclass_name: "abc.ABCMeta"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "oid"
    fully_qualified_name: "cryptography.x509.ExtensionType.oid"
    type_annotation {
      pretty_printed_name: "cryptography.x509.ObjectIdentifier"
      fully_qualified_name: "cryptography.x509.ObjectIdentifier"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "Extension"
  fully_qualified_name: "cryptography.x509.Extension"
  super_classes: "builtins.object"
  is_generic: true
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "critical"
    fully_qualified_name: "cryptography.x509.Extension.critical"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "oid"
    fully_qualified_name: "cryptography.x509.Extension.oid"
    type_annotation {
      pretty_printed_name: "cryptography.x509.ObjectIdentifier"
      fully_qualified_name: "cryptography.x509.ObjectIdentifier"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "value"
    fully_qualified_name: "cryptography.x509.Extension.value"
    type_annotation {
      pretty_printed_name: "cryptography.x509._T"
      kind: TYPE_VAR
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "Extensions"
  fully_qualified_name: "cryptography.x509.Extensions"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "cryptography.x509.Extensions.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.Extensions"
        fully_qualified_name: "cryptography.x509.Extensions"
      }
    }
    parameters {
      name: "general_names"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.list[cryptography.x509.Extension[Any]]"
        args {
          pretty_printed_name: "cryptography.x509.Extension[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "cryptography.x509.Extension"
        }
        fully_qualified_name: "builtins.list"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__iter__"
    fully_qualified_name: "cryptography.x509.Extensions.__iter__"
    return_annotation {
      pretty_printed_name: "typing.Generator[cryptography.x509.Extension[Any],None,None]"
      args {
        pretty_printed_name: "cryptography.x509.Extension[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "cryptography.x509.Extension"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
      fully_qualified_name: "typing.Generator"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "cryptography.x509.Extensions"
        fully_qualified_name: "cryptography.x509.Extensions"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "get_extension_for_oid"
    fully_qualified_name: "cryptography.x509.Extensions.get_extension_for_oid"
    return_annotation {
      pretty_printed_name: "cryptography.x509.Extension[Any]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "cryptography.x509.Extension"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.Extensions"
        fully_qualified_name: "cryptography.x509.Extensions"
      }
    }
    parameters {
      name: "oid"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.ObjectIdentifier"
        fully_qualified_name: "cryptography.x509.ObjectIdentifier"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "get_extension_for_class"
    fully_qualified_name: "cryptography.x509.Extensions.get_extension_for_class"
    return_annotation {
      pretty_printed_name: "cryptography.x509.Extension[cryptography.x509._T]"
      args {
        pretty_printed_name: "cryptography.x509._T"
        kind: TYPE_VAR
      }
      fully_qualified_name: "cryptography.x509.Extension"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.Extensions"
        fully_qualified_name: "cryptography.x509.Extensions"
      }
    }
    parameters {
      name: "extclass"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[cryptography.x509._T]"
        kind: TYPE
        args {
          pretty_printed_name: "cryptography.x509._T"
          kind: TYPE_VAR
        }
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "DuplicateExtension"
  fully_qualified_name: "cryptography.x509.DuplicateExtension"
  super_classes: "builtins.Exception"
  methods {
    name: "__init__"
    fully_qualified_name: "cryptography.x509.DuplicateExtension.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.DuplicateExtension"
        fully_qualified_name: "cryptography.x509.DuplicateExtension"
      }
    }
    parameters {
      name: "msg"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "oid"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.ObjectIdentifier"
        fully_qualified_name: "cryptography.x509.ObjectIdentifier"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "oid"
    fully_qualified_name: "cryptography.x509.DuplicateExtension.oid"
    type_annotation {
      pretty_printed_name: "cryptography.x509.ObjectIdentifier"
      fully_qualified_name: "cryptography.x509.ObjectIdentifier"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "ExtensionNotFound"
  fully_qualified_name: "cryptography.x509.ExtensionNotFound"
  super_classes: "builtins.Exception"
  methods {
    name: "__init__"
    fully_qualified_name: "cryptography.x509.ExtensionNotFound.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.ExtensionNotFound"
        fully_qualified_name: "cryptography.x509.ExtensionNotFound"
      }
    }
    parameters {
      name: "msg"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "oid"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.ObjectIdentifier"
        fully_qualified_name: "cryptography.x509.ObjectIdentifier"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "oid"
    fully_qualified_name: "cryptography.x509.ExtensionNotFound.oid"
    type_annotation {
      pretty_printed_name: "cryptography.x509.ObjectIdentifier"
      fully_qualified_name: "cryptography.x509.ObjectIdentifier"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "IssuerAlternativeName"
  fully_qualified_name: "cryptography.x509.IssuerAlternativeName"
  super_classes: "cryptography.x509.ExtensionType"
  methods {
    name: "__init__"
    fully_qualified_name: "cryptography.x509.IssuerAlternativeName.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.IssuerAlternativeName"
        fully_qualified_name: "cryptography.x509.IssuerAlternativeName"
      }
    }
    parameters {
      name: "general_names"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.list[cryptography.x509.GeneralName]"
        args {
          pretty_printed_name: "cryptography.x509.GeneralName"
          fully_qualified_name: "cryptography.x509.GeneralName"
        }
        fully_qualified_name: "builtins.list"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__iter__"
    fully_qualified_name: "cryptography.x509.IssuerAlternativeName.__iter__"
    return_annotation {
      pretty_printed_name: "typing.Generator[cryptography.x509.GeneralName,None,None]"
      args {
        pretty_printed_name: "cryptography.x509.GeneralName"
        fully_qualified_name: "cryptography.x509.GeneralName"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
      fully_qualified_name: "typing.Generator"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "cryptography.x509.IssuerAlternativeName"
        fully_qualified_name: "cryptography.x509.IssuerAlternativeName"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "get_values_for_type"
    fully_qualified_name: "cryptography.x509.IssuerAlternativeName.get_values_for_type"
    return_annotation {
      pretty_printed_name: "builtins.list[Any]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.IssuerAlternativeName"
        fully_qualified_name: "cryptography.x509.IssuerAlternativeName"
      }
    }
    parameters {
      name: "type"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[cryptography.x509.GeneralName]"
        kind: TYPE
        args {
          pretty_printed_name: "cryptography.x509.GeneralName"
          fully_qualified_name: "cryptography.x509.GeneralName"
        }
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "SubjectAlternativeName"
  fully_qualified_name: "cryptography.x509.SubjectAlternativeName"
  super_classes: "cryptography.x509.ExtensionType"
  methods {
    name: "__init__"
    fully_qualified_name: "cryptography.x509.SubjectAlternativeName.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.SubjectAlternativeName"
        fully_qualified_name: "cryptography.x509.SubjectAlternativeName"
      }
    }
    parameters {
      name: "general_names"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.list[cryptography.x509.GeneralName]"
        args {
          pretty_printed_name: "cryptography.x509.GeneralName"
          fully_qualified_name: "cryptography.x509.GeneralName"
        }
        fully_qualified_name: "builtins.list"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__iter__"
    fully_qualified_name: "cryptography.x509.SubjectAlternativeName.__iter__"
    return_annotation {
      pretty_printed_name: "typing.Generator[cryptography.x509.GeneralName,None,None]"
      args {
        pretty_printed_name: "cryptography.x509.GeneralName"
        fully_qualified_name: "cryptography.x509.GeneralName"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
      fully_qualified_name: "typing.Generator"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "cryptography.x509.SubjectAlternativeName"
        fully_qualified_name: "cryptography.x509.SubjectAlternativeName"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "get_values_for_type"
    fully_qualified_name: "cryptography.x509.SubjectAlternativeName.get_values_for_type"
    return_annotation {
      pretty_printed_name: "builtins.list[Any]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.SubjectAlternativeName"
        fully_qualified_name: "cryptography.x509.SubjectAlternativeName"
      }
    }
    parameters {
      name: "type"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[cryptography.x509.GeneralName]"
        kind: TYPE
        args {
          pretty_printed_name: "cryptography.x509.GeneralName"
          fully_qualified_name: "cryptography.x509.GeneralName"
        }
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "AuthorityKeyIdentifier"
  fully_qualified_name: "cryptography.x509.AuthorityKeyIdentifier"
  super_classes: "cryptography.x509.ExtensionType"
  methods {
    name: "key_identifier"
    fully_qualified_name: "cryptography.x509.AuthorityKeyIdentifier.key_identifier"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.AuthorityKeyIdentifier"
        fully_qualified_name: "cryptography.x509.AuthorityKeyIdentifier"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "authority_cert_issuer"
    fully_qualified_name: "cryptography.x509.AuthorityKeyIdentifier.authority_cert_issuer"
    return_annotation {
      pretty_printed_name: "Union[builtins.list[cryptography.x509.GeneralName],None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.list[cryptography.x509.GeneralName]"
        args {
          pretty_printed_name: "cryptography.x509.GeneralName"
          fully_qualified_name: "cryptography.x509.GeneralName"
        }
        fully_qualified_name: "builtins.list"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.AuthorityKeyIdentifier"
        fully_qualified_name: "cryptography.x509.AuthorityKeyIdentifier"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "authority_cert_serial_number"
    fully_qualified_name: "cryptography.x509.AuthorityKeyIdentifier.authority_cert_serial_number"
    return_annotation {
      pretty_printed_name: "Union[builtins.int,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.AuthorityKeyIdentifier"
        fully_qualified_name: "cryptography.x509.AuthorityKeyIdentifier"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__init__"
    fully_qualified_name: "cryptography.x509.AuthorityKeyIdentifier.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.AuthorityKeyIdentifier"
        fully_qualified_name: "cryptography.x509.AuthorityKeyIdentifier"
      }
    }
    parameters {
      name: "key_identifier"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    parameters {
      name: "authority_cert_issuer"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.Iterable[cryptography.x509.GeneralName],None]"
        kind: UNION
        args {
          pretty_printed_name: "typing.Iterable[cryptography.x509.GeneralName]"
          args {
            pretty_printed_name: "cryptography.x509.GeneralName"
            fully_qualified_name: "cryptography.x509.GeneralName"
          }
          fully_qualified_name: "typing.Iterable"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "authority_cert_serial_number"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "from_issuer_public_key"
    fully_qualified_name: "cryptography.x509.AuthorityKeyIdentifier.from_issuer_public_key"
    return_annotation {
      pretty_printed_name: "cryptography.x509.AuthorityKeyIdentifier"
      fully_qualified_name: "cryptography.x509.AuthorityKeyIdentifier"
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[cryptography.x509.AuthorityKeyIdentifier]"
        kind: TYPE
        args {
          pretty_printed_name: "cryptography.x509.AuthorityKeyIdentifier"
          fully_qualified_name: "cryptography.x509.AuthorityKeyIdentifier"
        }
      }
    }
    parameters {
      name: "public_key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[cryptography.hazmat.primitives.asymmetric.rsa.RSAPublicKey,cryptography.hazmat.primitives.asymmetric.dsa.DSAPublicKey,cryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicKey,cryptography.hazmat.primitives.asymmetric.ed25519.Ed25519PublicKey,cryptography.hazmat.primitives.asymmetric.ed448.Ed448PublicKey]"
        kind: UNION
        args {
          pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.rsa.RSAPublicKey"
          fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.rsa.RSAPublicKey"
        }
        args {
          pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPublicKey"
          fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPublicKey"
        }
        args {
          pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicKey"
          fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicKey"
        }
        args {
          pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.ed25519.Ed25519PublicKey"
          fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.ed25519.Ed25519PublicKey"
        }
        args {
          pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.ed448.Ed448PublicKey"
          fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.ed448.Ed448PublicKey"
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "classmethod"
    is_class_method: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "from_issuer_subject_key_identifier"
    fully_qualified_name: "cryptography.x509.AuthorityKeyIdentifier.from_issuer_subject_key_identifier"
    return_annotation {
      pretty_printed_name: "cryptography.x509.AuthorityKeyIdentifier"
      fully_qualified_name: "cryptography.x509.AuthorityKeyIdentifier"
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[cryptography.x509.AuthorityKeyIdentifier]"
        kind: TYPE
        args {
          pretty_printed_name: "cryptography.x509.AuthorityKeyIdentifier"
          fully_qualified_name: "cryptography.x509.AuthorityKeyIdentifier"
        }
      }
    }
    parameters {
      name: "ski"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.SubjectKeyIdentifier"
        fully_qualified_name: "cryptography.x509.SubjectKeyIdentifier"
      }
    }
    has_decorators: true
    resolved_decorator_names: "classmethod"
    is_class_method: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "SubjectKeyIdentifier"
  fully_qualified_name: "cryptography.x509.SubjectKeyIdentifier"
  super_classes: "cryptography.x509.ExtensionType"
  methods {
    name: "digest"
    fully_qualified_name: "cryptography.x509.SubjectKeyIdentifier.digest"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.SubjectKeyIdentifier"
        fully_qualified_name: "cryptography.x509.SubjectKeyIdentifier"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__init__"
    fully_qualified_name: "cryptography.x509.SubjectKeyIdentifier.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.SubjectKeyIdentifier"
        fully_qualified_name: "cryptography.x509.SubjectKeyIdentifier"
      }
    }
    parameters {
      name: "digest"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "from_public_key"
    fully_qualified_name: "cryptography.x509.SubjectKeyIdentifier.from_public_key"
    return_annotation {
      pretty_printed_name: "cryptography.x509.SubjectKeyIdentifier"
      fully_qualified_name: "cryptography.x509.SubjectKeyIdentifier"
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[cryptography.x509.SubjectKeyIdentifier]"
        kind: TYPE
        args {
          pretty_printed_name: "cryptography.x509.SubjectKeyIdentifier"
          fully_qualified_name: "cryptography.x509.SubjectKeyIdentifier"
        }
      }
    }
    parameters {
      name: "public_key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[cryptography.hazmat.primitives.asymmetric.rsa.RSAPublicKey,cryptography.hazmat.primitives.asymmetric.dsa.DSAPublicKey,cryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicKey,cryptography.hazmat.primitives.asymmetric.ed25519.Ed25519PublicKey,cryptography.hazmat.primitives.asymmetric.ed448.Ed448PublicKey]"
        kind: UNION
        args {
          pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.rsa.RSAPublicKey"
          fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.rsa.RSAPublicKey"
        }
        args {
          pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPublicKey"
          fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dsa.DSAPublicKey"
        }
        args {
          pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicKey"
          fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicKey"
        }
        args {
          pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.ed25519.Ed25519PublicKey"
          fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.ed25519.Ed25519PublicKey"
        }
        args {
          pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.ed448.Ed448PublicKey"
          fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.ed448.Ed448PublicKey"
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "classmethod"
    is_class_method: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "AccessDescription"
  fully_qualified_name: "cryptography.x509.AccessDescription"
  super_classes: "builtins.object"
  methods {
    name: "access_method"
    fully_qualified_name: "cryptography.x509.AccessDescription.access_method"
    return_annotation {
      pretty_printed_name: "cryptography.x509.ObjectIdentifier"
      fully_qualified_name: "cryptography.x509.ObjectIdentifier"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.AccessDescription"
        fully_qualified_name: "cryptography.x509.AccessDescription"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "access_location"
    fully_qualified_name: "cryptography.x509.AccessDescription.access_location"
    return_annotation {
      pretty_printed_name: "cryptography.x509.GeneralName"
      fully_qualified_name: "cryptography.x509.GeneralName"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.AccessDescription"
        fully_qualified_name: "cryptography.x509.AccessDescription"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__init__"
    fully_qualified_name: "cryptography.x509.AccessDescription.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.AccessDescription"
        fully_qualified_name: "cryptography.x509.AccessDescription"
      }
    }
    parameters {
      name: "access_method"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.ObjectIdentifier"
        fully_qualified_name: "cryptography.x509.ObjectIdentifier"
      }
    }
    parameters {
      name: "access_location"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.GeneralName"
        fully_qualified_name: "cryptography.x509.GeneralName"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "AuthorityInformationAccess"
  fully_qualified_name: "cryptography.x509.AuthorityInformationAccess"
  super_classes: "cryptography.x509.ExtensionType"
  methods {
    name: "__init__"
    fully_qualified_name: "cryptography.x509.AuthorityInformationAccess.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.AuthorityInformationAccess"
        fully_qualified_name: "cryptography.x509.AuthorityInformationAccess"
      }
    }
    parameters {
      name: "descriptions"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[cryptography.x509.AccessDescription]"
        args {
          pretty_printed_name: "cryptography.x509.AccessDescription"
          fully_qualified_name: "cryptography.x509.AccessDescription"
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__len__"
    fully_qualified_name: "cryptography.x509.AuthorityInformationAccess.__len__"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "cryptography.x509.AuthorityInformationAccess"
        fully_qualified_name: "cryptography.x509.AuthorityInformationAccess"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__iter__"
    fully_qualified_name: "cryptography.x509.AuthorityInformationAccess.__iter__"
    return_annotation {
      pretty_printed_name: "typing.Generator[cryptography.x509.AccessDescription,None,None]"
      args {
        pretty_printed_name: "cryptography.x509.AccessDescription"
        fully_qualified_name: "cryptography.x509.AccessDescription"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
      fully_qualified_name: "typing.Generator"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "cryptography.x509.AuthorityInformationAccess"
        fully_qualified_name: "cryptography.x509.AuthorityInformationAccess"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__getitem__"
    fully_qualified_name: "cryptography.x509.AuthorityInformationAccess.__getitem__"
    return_annotation {
      pretty_printed_name: "cryptography.x509.AccessDescription"
      fully_qualified_name: "cryptography.x509.AccessDescription"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "cryptography.x509.AuthorityInformationAccess"
        fully_qualified_name: "cryptography.x509.AuthorityInformationAccess"
      }
    }
    parameters {
      name: "item"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "SubjectInformationAccess"
  fully_qualified_name: "cryptography.x509.SubjectInformationAccess"
  super_classes: "cryptography.x509.ExtensionType"
  methods {
    name: "__init__"
    fully_qualified_name: "cryptography.x509.SubjectInformationAccess.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.SubjectInformationAccess"
        fully_qualified_name: "cryptography.x509.SubjectInformationAccess"
      }
    }
    parameters {
      name: "descriptions"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[cryptography.x509.AccessDescription]"
        args {
          pretty_printed_name: "cryptography.x509.AccessDescription"
          fully_qualified_name: "cryptography.x509.AccessDescription"
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__len__"
    fully_qualified_name: "cryptography.x509.SubjectInformationAccess.__len__"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "cryptography.x509.SubjectInformationAccess"
        fully_qualified_name: "cryptography.x509.SubjectInformationAccess"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__iter__"
    fully_qualified_name: "cryptography.x509.SubjectInformationAccess.__iter__"
    return_annotation {
      pretty_printed_name: "typing.Generator[cryptography.x509.AccessDescription,None,None]"
      args {
        pretty_printed_name: "cryptography.x509.AccessDescription"
        fully_qualified_name: "cryptography.x509.AccessDescription"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
      fully_qualified_name: "typing.Generator"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "cryptography.x509.SubjectInformationAccess"
        fully_qualified_name: "cryptography.x509.SubjectInformationAccess"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__getitem__"
    fully_qualified_name: "cryptography.x509.SubjectInformationAccess.__getitem__"
    return_annotation {
      pretty_printed_name: "cryptography.x509.AccessDescription"
      fully_qualified_name: "cryptography.x509.AccessDescription"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "cryptography.x509.SubjectInformationAccess"
        fully_qualified_name: "cryptography.x509.SubjectInformationAccess"
      }
    }
    parameters {
      name: "item"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "BasicConstraints"
  fully_qualified_name: "cryptography.x509.BasicConstraints"
  super_classes: "cryptography.x509.ExtensionType"
  methods {
    name: "ca"
    fully_qualified_name: "cryptography.x509.BasicConstraints.ca"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.BasicConstraints"
        fully_qualified_name: "cryptography.x509.BasicConstraints"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "path_length"
    fully_qualified_name: "cryptography.x509.BasicConstraints.path_length"
    return_annotation {
      pretty_printed_name: "Union[builtins.int,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.BasicConstraints"
        fully_qualified_name: "cryptography.x509.BasicConstraints"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__init__"
    fully_qualified_name: "cryptography.x509.BasicConstraints.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.BasicConstraints"
        fully_qualified_name: "cryptography.x509.BasicConstraints"
      }
    }
    parameters {
      name: "ca"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    parameters {
      name: "path_length"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "KeyUsage"
  fully_qualified_name: "cryptography.x509.KeyUsage"
  super_classes: "cryptography.x509.ExtensionType"
  methods {
    name: "digital_signature"
    fully_qualified_name: "cryptography.x509.KeyUsage.digital_signature"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.KeyUsage"
        fully_qualified_name: "cryptography.x509.KeyUsage"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "content_commitment"
    fully_qualified_name: "cryptography.x509.KeyUsage.content_commitment"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.KeyUsage"
        fully_qualified_name: "cryptography.x509.KeyUsage"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "key_encipherment"
    fully_qualified_name: "cryptography.x509.KeyUsage.key_encipherment"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.KeyUsage"
        fully_qualified_name: "cryptography.x509.KeyUsage"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "data_encipherment"
    fully_qualified_name: "cryptography.x509.KeyUsage.data_encipherment"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.KeyUsage"
        fully_qualified_name: "cryptography.x509.KeyUsage"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "key_agreement"
    fully_qualified_name: "cryptography.x509.KeyUsage.key_agreement"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.KeyUsage"
        fully_qualified_name: "cryptography.x509.KeyUsage"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "key_cert_sign"
    fully_qualified_name: "cryptography.x509.KeyUsage.key_cert_sign"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.KeyUsage"
        fully_qualified_name: "cryptography.x509.KeyUsage"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "crl_sign"
    fully_qualified_name: "cryptography.x509.KeyUsage.crl_sign"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.KeyUsage"
        fully_qualified_name: "cryptography.x509.KeyUsage"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "encipher_only"
    fully_qualified_name: "cryptography.x509.KeyUsage.encipher_only"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.KeyUsage"
        fully_qualified_name: "cryptography.x509.KeyUsage"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "decipher_only"
    fully_qualified_name: "cryptography.x509.KeyUsage.decipher_only"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.KeyUsage"
        fully_qualified_name: "cryptography.x509.KeyUsage"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__init__"
    fully_qualified_name: "cryptography.x509.KeyUsage.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.KeyUsage"
        fully_qualified_name: "cryptography.x509.KeyUsage"
      }
    }
    parameters {
      name: "digital_signature"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    parameters {
      name: "content_commitment"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    parameters {
      name: "key_encipherment"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    parameters {
      name: "data_encipherment"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    parameters {
      name: "key_agreement"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    parameters {
      name: "key_cert_sign"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    parameters {
      name: "crl_sign"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    parameters {
      name: "encipher_only"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    parameters {
      name: "decipher_only"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "ExtendedKeyUsage"
  fully_qualified_name: "cryptography.x509.ExtendedKeyUsage"
  super_classes: "cryptography.x509.ExtensionType"
  methods {
    name: "__init__"
    fully_qualified_name: "cryptography.x509.ExtendedKeyUsage.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.ExtendedKeyUsage"
        fully_qualified_name: "cryptography.x509.ExtendedKeyUsage"
      }
    }
    parameters {
      name: "usages"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[cryptography.x509.ObjectIdentifier]"
        args {
          pretty_printed_name: "cryptography.x509.ObjectIdentifier"
          fully_qualified_name: "cryptography.x509.ObjectIdentifier"
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__len__"
    fully_qualified_name: "cryptography.x509.ExtendedKeyUsage.__len__"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "cryptography.x509.ExtendedKeyUsage"
        fully_qualified_name: "cryptography.x509.ExtendedKeyUsage"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__iter__"
    fully_qualified_name: "cryptography.x509.ExtendedKeyUsage.__iter__"
    return_annotation {
      pretty_printed_name: "typing.Generator[cryptography.x509.ObjectIdentifier,None,None]"
      args {
        pretty_printed_name: "cryptography.x509.ObjectIdentifier"
        fully_qualified_name: "cryptography.x509.ObjectIdentifier"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
      fully_qualified_name: "typing.Generator"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "cryptography.x509.ExtendedKeyUsage"
        fully_qualified_name: "cryptography.x509.ExtendedKeyUsage"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__getitem__"
    fully_qualified_name: "cryptography.x509.ExtendedKeyUsage.__getitem__"
    return_annotation {
      pretty_printed_name: "cryptography.x509.ObjectIdentifier"
      fully_qualified_name: "cryptography.x509.ObjectIdentifier"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "cryptography.x509.ExtendedKeyUsage"
        fully_qualified_name: "cryptography.x509.ExtendedKeyUsage"
      }
    }
    parameters {
      name: "item"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "UnrecognizedExtension"
  fully_qualified_name: "cryptography.x509.UnrecognizedExtension"
  super_classes: "cryptography.x509.ExtensionType"
  methods {
    name: "value"
    fully_qualified_name: "cryptography.x509.UnrecognizedExtension.value"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.UnrecognizedExtension"
        fully_qualified_name: "cryptography.x509.UnrecognizedExtension"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__init__"
    fully_qualified_name: "cryptography.x509.UnrecognizedExtension.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.UnrecognizedExtension"
        fully_qualified_name: "cryptography.x509.UnrecognizedExtension"
      }
    }
    parameters {
      name: "oid"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.x509.ObjectIdentifier"
        fully_qualified_name: "cryptography.x509.ObjectIdentifier"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "load_der_x509_certificate"
  fully_qualified_name: "cryptography.x509.load_der_x509_certificate"
  return_annotation {
    pretty_printed_name: "cryptography.x509.Certificate"
    fully_qualified_name: "cryptography.x509.Certificate"
  }
  parameters {
    name: "data"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
  }
  parameters {
    name: "backend"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[cryptography.hazmat.backends.interfaces.X509Backend,None]"
      kind: UNION
      args {
        pretty_printed_name: "cryptography.hazmat.backends.interfaces.X509Backend"
        fully_qualified_name: "cryptography.hazmat.backends.interfaces.X509Backend"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "load_pem_x509_certificate"
  fully_qualified_name: "cryptography.x509.load_pem_x509_certificate"
  return_annotation {
    pretty_printed_name: "cryptography.x509.Certificate"
    fully_qualified_name: "cryptography.x509.Certificate"
  }
  parameters {
    name: "data"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
  }
  parameters {
    name: "backend"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[cryptography.hazmat.backends.interfaces.X509Backend,None]"
      kind: UNION
      args {
        pretty_printed_name: "cryptography.hazmat.backends.interfaces.X509Backend"
        fully_qualified_name: "cryptography.hazmat.backends.interfaces.X509Backend"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "load_der_x509_crl"
  fully_qualified_name: "cryptography.x509.load_der_x509_crl"
  return_annotation {
    pretty_printed_name: "cryptography.x509.CertificateRevocationList"
    fully_qualified_name: "cryptography.x509.CertificateRevocationList"
  }
  parameters {
    name: "data"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
  }
  parameters {
    name: "backend"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[cryptography.hazmat.backends.interfaces.X509Backend,None]"
      kind: UNION
      args {
        pretty_printed_name: "cryptography.hazmat.backends.interfaces.X509Backend"
        fully_qualified_name: "cryptography.hazmat.backends.interfaces.X509Backend"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "load_pem_x509_crl"
  fully_qualified_name: "cryptography.x509.load_pem_x509_crl"
  return_annotation {
    pretty_printed_name: "cryptography.x509.CertificateRevocationList"
    fully_qualified_name: "cryptography.x509.CertificateRevocationList"
  }
  parameters {
    name: "data"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
  }
  parameters {
    name: "backend"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[cryptography.hazmat.backends.interfaces.X509Backend,None]"
      kind: UNION
      args {
        pretty_printed_name: "cryptography.hazmat.backends.interfaces.X509Backend"
        fully_qualified_name: "cryptography.hazmat.backends.interfaces.X509Backend"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "load_der_x509_csr"
  fully_qualified_name: "cryptography.x509.load_der_x509_csr"
  return_annotation {
    pretty_printed_name: "cryptography.x509.CertificateSigningRequest"
    fully_qualified_name: "cryptography.x509.CertificateSigningRequest"
  }
  parameters {
    name: "data"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
  }
  parameters {
    name: "backend"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[cryptography.hazmat.backends.interfaces.X509Backend,None]"
      kind: UNION
      args {
        pretty_printed_name: "cryptography.hazmat.backends.interfaces.X509Backend"
        fully_qualified_name: "cryptography.hazmat.backends.interfaces.X509Backend"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "load_pem_x509_csr"
  fully_qualified_name: "cryptography.x509.load_pem_x509_csr"
  return_annotation {
    pretty_printed_name: "cryptography.x509.CertificateSigningRequest"
    fully_qualified_name: "cryptography.x509.CertificateSigningRequest"
  }
  parameters {
    name: "data"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
  }
  parameters {
    name: "backend"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[cryptography.hazmat.backends.interfaces.X509Backend,None]"
      kind: UNION
      args {
        pretty_printed_name: "cryptography.hazmat.backends.interfaces.X509Backend"
        fully_qualified_name: "cryptography.hazmat.backends.interfaces.X509Backend"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "__getattr__"
  fully_qualified_name: "cryptography.x509.__getattr__"
  return_annotation {
    pretty_printed_name: "Any"
    kind: ANY
  }
  parameters {
    name: "name"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
