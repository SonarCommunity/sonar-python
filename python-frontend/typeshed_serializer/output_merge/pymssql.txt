fully_qualified_name: "pymssql"
classes {
  name: "Connection"
  fully_qualified_name: "pymssql.Connection"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "pymssql.Connection.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "pymssql.Connection"
        fully_qualified_name: "pymssql.Connection"
      }
    }
    parameters {
      name: "user"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "password"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "host"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "database"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "timeout"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "login_timeout"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "charset"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "as_dict"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "27"
  }
  methods {
    name: "autocommit"
    fully_qualified_name: "pymssql.Connection.autocommit"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "pymssql.Connection"
        fully_qualified_name: "pymssql.Connection"
      }
    }
    parameters {
      name: "status"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "close"
    fully_qualified_name: "pymssql.Connection.close"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "pymssql.Connection"
        fully_qualified_name: "pymssql.Connection"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "commit"
    fully_qualified_name: "pymssql.Connection.commit"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "pymssql.Connection"
        fully_qualified_name: "pymssql.Connection"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "cursor"
    fully_qualified_name: "pymssql.Connection.cursor"
    return_annotation {
      pretty_printed_name: "pymssql.Cursor"
      fully_qualified_name: "pymssql.Cursor"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "pymssql.Connection"
        fully_qualified_name: "pymssql.Connection"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "rollback"
    fully_qualified_name: "pymssql.Connection.rollback"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "pymssql.Connection"
        fully_qualified_name: "pymssql.Connection"
      }
    }
    valid_for: "27"
  }
  valid_for: "27"
}
classes {
  name: "Cursor"
  fully_qualified_name: "pymssql.Cursor"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "pymssql.Cursor.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "pymssql.Cursor"
        fully_qualified_name: "pymssql.Cursor"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__iter__"
    fully_qualified_name: "pymssql.Cursor.__iter__"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "27"
  }
  methods {
    name: "__next__"
    fully_qualified_name: "pymssql.Cursor.__next__"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "pymssql.Cursor"
        fully_qualified_name: "pymssql.Cursor"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "callproc"
    fully_qualified_name: "pymssql.Cursor.callproc"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "pymssql.Cursor"
        fully_qualified_name: "pymssql.Cursor"
      }
    }
    parameters {
      name: "procname"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "kwargs"
      kind: VAR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "27"
  }
  methods {
    name: "close"
    fully_qualified_name: "pymssql.Cursor.close"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "pymssql.Cursor"
        fully_qualified_name: "pymssql.Cursor"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "execute"
    fully_qualified_name: "pymssql.Cursor.execute"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "pymssql.Cursor"
        fully_qualified_name: "pymssql.Cursor"
      }
    }
    parameters {
      name: "stmt"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "params"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,builtins.float,builtins.str,datetime.datetime,datetime.date,datetime.time,builtins.tuple[TypeAlias[Union[builtins.int,builtins.float,builtins.str,datetime.datetime,datetime.date,datetime.time]]],builtins.dict[builtins.str,TypeAlias[Union[builtins.int,builtins.float,builtins.str,datetime.datetime,datetime.date,datetime.time]]],None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "datetime.datetime"
          fully_qualified_name: "datetime.datetime"
        }
        args {
          pretty_printed_name: "datetime.date"
          fully_qualified_name: "datetime.date"
        }
        args {
          pretty_printed_name: "datetime.time"
          fully_qualified_name: "datetime.time"
        }
        args {
          pretty_printed_name: "builtins.tuple[TypeAlias[Union[builtins.int,builtins.float,builtins.str,datetime.datetime,datetime.date,datetime.time]]]"
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.int,builtins.float,builtins.str,datetime.datetime,datetime.date,datetime.time]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.int,builtins.float,builtins.str,datetime.datetime,datetime.date,datetime.time]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.int"
                fully_qualified_name: "builtins.int"
              }
              args {
                pretty_printed_name: "builtins.float"
                fully_qualified_name: "builtins.float"
              }
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "datetime.datetime"
                fully_qualified_name: "datetime.datetime"
              }
              args {
                pretty_printed_name: "datetime.date"
                fully_qualified_name: "datetime.date"
              }
              args {
                pretty_printed_name: "datetime.time"
                fully_qualified_name: "datetime.time"
              }
            }
            fully_qualified_name: "pymssql.Scalar"
          }
          fully_qualified_name: "builtins.tuple"
        }
        args {
          pretty_printed_name: "builtins.dict[builtins.str,TypeAlias[Union[builtins.int,builtins.float,builtins.str,datetime.datetime,datetime.date,datetime.time]]]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.int,builtins.float,builtins.str,datetime.datetime,datetime.date,datetime.time]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.int,builtins.float,builtins.str,datetime.datetime,datetime.date,datetime.time]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.int"
                fully_qualified_name: "builtins.int"
              }
              args {
                pretty_printed_name: "builtins.float"
                fully_qualified_name: "builtins.float"
              }
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "datetime.datetime"
                fully_qualified_name: "datetime.datetime"
              }
              args {
                pretty_printed_name: "datetime.date"
                fully_qualified_name: "datetime.date"
              }
              args {
                pretty_printed_name: "datetime.time"
                fully_qualified_name: "datetime.time"
              }
            }
            fully_qualified_name: "pymssql.Scalar"
          }
          fully_qualified_name: "builtins.dict"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    valid_for: "27"
  }
  methods {
    name: "executemany"
    fully_qualified_name: "pymssql.Cursor.executemany"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "pymssql.Cursor"
        fully_qualified_name: "pymssql.Cursor"
      }
    }
    parameters {
      name: "stmt"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "params"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.Sequence[builtins.tuple[TypeAlias[Union[builtins.int,builtins.float,builtins.str,datetime.datetime,datetime.date,datetime.time]]]],None]"
        kind: UNION
        args {
          pretty_printed_name: "typing.Sequence[builtins.tuple[TypeAlias[Union[builtins.int,builtins.float,builtins.str,datetime.datetime,datetime.date,datetime.time]]]]"
          args {
            pretty_printed_name: "builtins.tuple[TypeAlias[Union[builtins.int,builtins.float,builtins.str,datetime.datetime,datetime.date,datetime.time]]]"
            args {
              pretty_printed_name: "TypeAlias[Union[builtins.int,builtins.float,builtins.str,datetime.datetime,datetime.date,datetime.time]]"
              kind: TYPE_ALIAS
              args {
                pretty_printed_name: "Union[builtins.int,builtins.float,builtins.str,datetime.datetime,datetime.date,datetime.time]"
                kind: UNION
                args {
                  pretty_printed_name: "builtins.int"
                  fully_qualified_name: "builtins.int"
                }
                args {
                  pretty_printed_name: "builtins.float"
                  fully_qualified_name: "builtins.float"
                }
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
                args {
                  pretty_printed_name: "datetime.datetime"
                  fully_qualified_name: "datetime.datetime"
                }
                args {
                  pretty_printed_name: "datetime.date"
                  fully_qualified_name: "datetime.date"
                }
                args {
                  pretty_printed_name: "datetime.time"
                  fully_qualified_name: "datetime.time"
                }
              }
              fully_qualified_name: "pymssql.Scalar"
            }
            fully_qualified_name: "builtins.tuple"
          }
          fully_qualified_name: "typing.Sequence"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    valid_for: "27"
  }
  methods {
    name: "fetchall"
    fully_qualified_name: "pymssql.Cursor.fetchall"
    return_annotation {
      pretty_printed_name: "builtins.list[TypeAlias[Union[builtins.tuple[TypeAlias[Union[builtins.int,builtins.float,builtins.str,datetime.datetime,datetime.date,datetime.time]]],builtins.dict[builtins.str,TypeAlias[Union[builtins.int,builtins.float,builtins.str,datetime.datetime,datetime.date,datetime.time]]]]]]"
      args {
        pretty_printed_name: "TypeAlias[Union[builtins.tuple[TypeAlias[Union[builtins.int,builtins.float,builtins.str,datetime.datetime,datetime.date,datetime.time]]],builtins.dict[builtins.str,TypeAlias[Union[builtins.int,builtins.float,builtins.str,datetime.datetime,datetime.date,datetime.time]]]]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.tuple[TypeAlias[Union[builtins.int,builtins.float,builtins.str,datetime.datetime,datetime.date,datetime.time]]],builtins.dict[builtins.str,TypeAlias[Union[builtins.int,builtins.float,builtins.str,datetime.datetime,datetime.date,datetime.time]]]]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.tuple[TypeAlias[Union[builtins.int,builtins.float,builtins.str,datetime.datetime,datetime.date,datetime.time]]]"
            args {
              pretty_printed_name: "TypeAlias[Union[builtins.int,builtins.float,builtins.str,datetime.datetime,datetime.date,datetime.time]]"
              kind: TYPE_ALIAS
              args {
                pretty_printed_name: "Union[builtins.int,builtins.float,builtins.str,datetime.datetime,datetime.date,datetime.time]"
                kind: UNION
                args {
                  pretty_printed_name: "builtins.int"
                  fully_qualified_name: "builtins.int"
                }
                args {
                  pretty_printed_name: "builtins.float"
                  fully_qualified_name: "builtins.float"
                }
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
                args {
                  pretty_printed_name: "datetime.datetime"
                  fully_qualified_name: "datetime.datetime"
                }
                args {
                  pretty_printed_name: "datetime.date"
                  fully_qualified_name: "datetime.date"
                }
                args {
                  pretty_printed_name: "datetime.time"
                  fully_qualified_name: "datetime.time"
                }
              }
              fully_qualified_name: "pymssql.Scalar"
            }
            fully_qualified_name: "builtins.tuple"
          }
          args {
            pretty_printed_name: "builtins.dict[builtins.str,TypeAlias[Union[builtins.int,builtins.float,builtins.str,datetime.datetime,datetime.date,datetime.time]]]"
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "TypeAlias[Union[builtins.int,builtins.float,builtins.str,datetime.datetime,datetime.date,datetime.time]]"
              kind: TYPE_ALIAS
              args {
                pretty_printed_name: "Union[builtins.int,builtins.float,builtins.str,datetime.datetime,datetime.date,datetime.time]"
                kind: UNION
                args {
                  pretty_printed_name: "builtins.int"
                  fully_qualified_name: "builtins.int"
                }
                args {
                  pretty_printed_name: "builtins.float"
                  fully_qualified_name: "builtins.float"
                }
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
                args {
                  pretty_printed_name: "datetime.datetime"
                  fully_qualified_name: "datetime.datetime"
                }
                args {
                  pretty_printed_name: "datetime.date"
                  fully_qualified_name: "datetime.date"
                }
                args {
                  pretty_printed_name: "datetime.time"
                  fully_qualified_name: "datetime.time"
                }
              }
              fully_qualified_name: "pymssql.Scalar"
            }
            fully_qualified_name: "builtins.dict"
          }
        }
        fully_qualified_name: "pymssql.Result"
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "pymssql.Cursor"
        fully_qualified_name: "pymssql.Cursor"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "fetchmany"
    fully_qualified_name: "pymssql.Cursor.fetchmany"
    return_annotation {
      pretty_printed_name: "builtins.list[TypeAlias[Union[builtins.tuple[TypeAlias[Union[builtins.int,builtins.float,builtins.str,datetime.datetime,datetime.date,datetime.time]]],builtins.dict[builtins.str,TypeAlias[Union[builtins.int,builtins.float,builtins.str,datetime.datetime,datetime.date,datetime.time]]]]]]"
      args {
        pretty_printed_name: "TypeAlias[Union[builtins.tuple[TypeAlias[Union[builtins.int,builtins.float,builtins.str,datetime.datetime,datetime.date,datetime.time]]],builtins.dict[builtins.str,TypeAlias[Union[builtins.int,builtins.float,builtins.str,datetime.datetime,datetime.date,datetime.time]]]]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.tuple[TypeAlias[Union[builtins.int,builtins.float,builtins.str,datetime.datetime,datetime.date,datetime.time]]],builtins.dict[builtins.str,TypeAlias[Union[builtins.int,builtins.float,builtins.str,datetime.datetime,datetime.date,datetime.time]]]]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.tuple[TypeAlias[Union[builtins.int,builtins.float,builtins.str,datetime.datetime,datetime.date,datetime.time]]]"
            args {
              pretty_printed_name: "TypeAlias[Union[builtins.int,builtins.float,builtins.str,datetime.datetime,datetime.date,datetime.time]]"
              kind: TYPE_ALIAS
              args {
                pretty_printed_name: "Union[builtins.int,builtins.float,builtins.str,datetime.datetime,datetime.date,datetime.time]"
                kind: UNION
                args {
                  pretty_printed_name: "builtins.int"
                  fully_qualified_name: "builtins.int"
                }
                args {
                  pretty_printed_name: "builtins.float"
                  fully_qualified_name: "builtins.float"
                }
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
                args {
                  pretty_printed_name: "datetime.datetime"
                  fully_qualified_name: "datetime.datetime"
                }
                args {
                  pretty_printed_name: "datetime.date"
                  fully_qualified_name: "datetime.date"
                }
                args {
                  pretty_printed_name: "datetime.time"
                  fully_qualified_name: "datetime.time"
                }
              }
              fully_qualified_name: "pymssql.Scalar"
            }
            fully_qualified_name: "builtins.tuple"
          }
          args {
            pretty_printed_name: "builtins.dict[builtins.str,TypeAlias[Union[builtins.int,builtins.float,builtins.str,datetime.datetime,datetime.date,datetime.time]]]"
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "TypeAlias[Union[builtins.int,builtins.float,builtins.str,datetime.datetime,datetime.date,datetime.time]]"
              kind: TYPE_ALIAS
              args {
                pretty_printed_name: "Union[builtins.int,builtins.float,builtins.str,datetime.datetime,datetime.date,datetime.time]"
                kind: UNION
                args {
                  pretty_printed_name: "builtins.int"
                  fully_qualified_name: "builtins.int"
                }
                args {
                  pretty_printed_name: "builtins.float"
                  fully_qualified_name: "builtins.float"
                }
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
                args {
                  pretty_printed_name: "datetime.datetime"
                  fully_qualified_name: "datetime.datetime"
                }
                args {
                  pretty_printed_name: "datetime.date"
                  fully_qualified_name: "datetime.date"
                }
                args {
                  pretty_printed_name: "datetime.time"
                  fully_qualified_name: "datetime.time"
                }
              }
              fully_qualified_name: "pymssql.Scalar"
            }
            fully_qualified_name: "builtins.dict"
          }
        }
        fully_qualified_name: "pymssql.Result"
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "pymssql.Cursor"
        fully_qualified_name: "pymssql.Cursor"
      }
    }
    parameters {
      name: "size"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    valid_for: "27"
  }
  methods {
    name: "fetchone"
    fully_qualified_name: "pymssql.Cursor.fetchone"
    return_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.tuple[TypeAlias[Union[builtins.int,builtins.float,builtins.str,datetime.datetime,datetime.date,datetime.time]]],builtins.dict[builtins.str,TypeAlias[Union[builtins.int,builtins.float,builtins.str,datetime.datetime,datetime.date,datetime.time]]]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.tuple[TypeAlias[Union[builtins.int,builtins.float,builtins.str,datetime.datetime,datetime.date,datetime.time]]],builtins.dict[builtins.str,TypeAlias[Union[builtins.int,builtins.float,builtins.str,datetime.datetime,datetime.date,datetime.time]]]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.tuple[TypeAlias[Union[builtins.int,builtins.float,builtins.str,datetime.datetime,datetime.date,datetime.time]]]"
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.int,builtins.float,builtins.str,datetime.datetime,datetime.date,datetime.time]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.int,builtins.float,builtins.str,datetime.datetime,datetime.date,datetime.time]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.int"
                fully_qualified_name: "builtins.int"
              }
              args {
                pretty_printed_name: "builtins.float"
                fully_qualified_name: "builtins.float"
              }
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "datetime.datetime"
                fully_qualified_name: "datetime.datetime"
              }
              args {
                pretty_printed_name: "datetime.date"
                fully_qualified_name: "datetime.date"
              }
              args {
                pretty_printed_name: "datetime.time"
                fully_qualified_name: "datetime.time"
              }
            }
            fully_qualified_name: "pymssql.Scalar"
          }
          fully_qualified_name: "builtins.tuple"
        }
        args {
          pretty_printed_name: "builtins.dict[builtins.str,TypeAlias[Union[builtins.int,builtins.float,builtins.str,datetime.datetime,datetime.date,datetime.time]]]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.int,builtins.float,builtins.str,datetime.datetime,datetime.date,datetime.time]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.int,builtins.float,builtins.str,datetime.datetime,datetime.date,datetime.time]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.int"
                fully_qualified_name: "builtins.int"
              }
              args {
                pretty_printed_name: "builtins.float"
                fully_qualified_name: "builtins.float"
              }
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "datetime.datetime"
                fully_qualified_name: "datetime.datetime"
              }
              args {
                pretty_printed_name: "datetime.date"
                fully_qualified_name: "datetime.date"
              }
              args {
                pretty_printed_name: "datetime.time"
                fully_qualified_name: "datetime.time"
              }
            }
            fully_qualified_name: "pymssql.Scalar"
          }
          fully_qualified_name: "builtins.dict"
        }
      }
      fully_qualified_name: "pymssql.Result"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "pymssql.Cursor"
        fully_qualified_name: "pymssql.Cursor"
      }
    }
    valid_for: "27"
  }
  valid_for: "27"
}
functions {
  name: "connect"
  fully_qualified_name: "pymssql.connect"
  return_annotation {
    pretty_printed_name: "pymssql.Connection"
    fully_qualified_name: "pymssql.Connection"
  }
  parameters {
    name: "server"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  parameters {
    name: "user"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  parameters {
    name: "password"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  parameters {
    name: "database"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  parameters {
    name: "timeout"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.int,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  parameters {
    name: "login_timeout"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.int,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  parameters {
    name: "charset"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  parameters {
    name: "as_dict"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.bool,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  parameters {
    name: "host"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  parameters {
    name: "appname"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  parameters {
    name: "port"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  parameters {
    name: "conn_properties"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,typing.Sequence[builtins.str],None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "typing.Sequence[builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "typing.Sequence"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  parameters {
    name: "autocommit"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.bool,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  parameters {
    name: "tds_version"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  valid_for: "27"
}
functions {
  name: "get_max_connections"
  fully_qualified_name: "pymssql.get_max_connections"
  return_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
  valid_for: "27"
}
functions {
  name: "set_max_connections"
  fully_qualified_name: "pymssql.set_max_connections"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "n"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  valid_for: "27"
}
