fully_qualified_name: "_collections"
classes {
  name: "defaultdict"
  fully_qualified_name: "_collections.defaultdict"
  super_classes: "builtins.dict"
  methods {
    name: "__init__"
    fully_qualified_name: "_collections.defaultdict.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_collections.defaultdict[_collections._K,_collections._V]"
        args {
          pretty_printed_name: "_collections._K"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "_collections._V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_collections.defaultdict"
      }
    }
    parameters {
      name: "__default_factory"
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
      has_default: true
    }
    parameters {
      name: "init"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "__missing__"
    fully_qualified_name: "_collections.defaultdict.__missing__"
    return_annotation {
      pretty_printed_name: "_collections._V"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_collections.defaultdict[_collections._K,_collections._V]"
        args {
          pretty_printed_name: "_collections._K"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "_collections._V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_collections.defaultdict"
      }
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_collections._K"
        kind: TYPE_VAR
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__copy__"
    fully_qualified_name: "_collections.defaultdict.__copy__"
    return_annotation {
      pretty_printed_name: "_collections._T"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_collections._T"
        kind: TYPE_VAR
      }
    }
    valid_for: "27"
  }
  methods {
    name: "copy"
    fully_qualified_name: "_collections.defaultdict.copy"
    return_annotation {
      pretty_printed_name: "_collections._T"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_collections._T"
        kind: TYPE_VAR
      }
    }
    valid_for: "27"
  }
  is_generic: true
  valid_for: "27"
  attributes {
    name: "default_factory"
    fully_qualified_name: "_collections.defaultdict.default_factory"
    type_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    valid_for: "27"
  }
}
classes {
  name: "deque"
  fully_qualified_name: "_collections.deque"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "_collections.deque.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_collections.deque[_collections._T]"
        args {
          pretty_printed_name: "_collections._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_collections.deque"
      }
    }
    parameters {
      name: "iterable"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterator[_collections._T]"
        args {
          pretty_printed_name: "_collections._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterator"
      }
      has_default: true
    }
    parameters {
      name: "maxlen"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "append"
    fully_qualified_name: "_collections.deque.append"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_collections.deque[_collections._T]"
        args {
          pretty_printed_name: "_collections._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_collections.deque"
      }
    }
    parameters {
      name: "x"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_collections._T"
        kind: TYPE_VAR
      }
    }
    valid_for: "27"
  }
  methods {
    name: "appendleft"
    fully_qualified_name: "_collections.deque.appendleft"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_collections.deque[_collections._T]"
        args {
          pretty_printed_name: "_collections._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_collections.deque"
      }
    }
    parameters {
      name: "x"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_collections._T"
        kind: TYPE_VAR
      }
    }
    valid_for: "27"
  }
  methods {
    name: "clear"
    fully_qualified_name: "_collections.deque.clear"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_collections.deque[_collections._T]"
        args {
          pretty_printed_name: "_collections._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_collections.deque"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "count"
    fully_qualified_name: "_collections.deque.count"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_collections.deque[_collections._T]"
        args {
          pretty_printed_name: "_collections._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_collections.deque"
      }
    }
    parameters {
      name: "x"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "27"
  }
  methods {
    name: "extend"
    fully_qualified_name: "_collections.deque.extend"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_collections.deque[_collections._T]"
        args {
          pretty_printed_name: "_collections._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_collections.deque"
      }
    }
    parameters {
      name: "iterable"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterator[_collections._T]"
        args {
          pretty_printed_name: "_collections._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterator"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "extendleft"
    fully_qualified_name: "_collections.deque.extendleft"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_collections.deque[_collections._T]"
        args {
          pretty_printed_name: "_collections._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_collections.deque"
      }
    }
    parameters {
      name: "iterable"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterator[_collections._T]"
        args {
          pretty_printed_name: "_collections._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterator"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "pop"
    fully_qualified_name: "_collections.deque.pop"
    return_annotation {
      pretty_printed_name: "_collections._T"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_collections.deque[_collections._T]"
        args {
          pretty_printed_name: "_collections._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_collections.deque"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "popleft"
    fully_qualified_name: "_collections.deque.popleft"
    return_annotation {
      pretty_printed_name: "_collections._T"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_collections.deque[_collections._T]"
        args {
          pretty_printed_name: "_collections._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_collections.deque"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "remove"
    fully_qualified_name: "_collections.deque.remove"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_collections.deque[_collections._T]"
        args {
          pretty_printed_name: "_collections._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_collections.deque"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_collections._T"
        kind: TYPE_VAR
      }
    }
    valid_for: "27"
  }
  methods {
    name: "reverse"
    fully_qualified_name: "_collections.deque.reverse"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_collections.deque[_collections._T]"
        args {
          pretty_printed_name: "_collections._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_collections.deque"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "rotate"
    fully_qualified_name: "_collections.deque.rotate"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_collections.deque[_collections._T]"
        args {
          pretty_printed_name: "_collections._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_collections.deque"
      }
    }
    parameters {
      name: "n"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "__contains__"
    fully_qualified_name: "_collections.deque.__contains__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "_collections.deque[_collections._T]"
        args {
          pretty_printed_name: "_collections._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_collections.deque"
      }
    }
    parameters {
      name: "o"
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__copy__"
    fully_qualified_name: "_collections.deque.__copy__"
    return_annotation {
      pretty_printed_name: "_collections.deque[_collections._T]"
      args {
        pretty_printed_name: "_collections._T"
        kind: TYPE_VAR
      }
      fully_qualified_name: "_collections.deque"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_collections.deque[_collections._T]"
        args {
          pretty_printed_name: "_collections._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_collections.deque"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__getitem__"
    fully_qualified_name: "_collections.deque.__getitem__"
    return_annotation {
      pretty_printed_name: "_collections._T"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "_collections.deque[_collections._T]"
        args {
          pretty_printed_name: "_collections._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_collections.deque"
      }
    }
    parameters {
      name: "i"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__iadd__"
    fully_qualified_name: "_collections.deque.__iadd__"
    return_annotation {
      pretty_printed_name: "_collections.deque[Union[_collections._T,_collections._T2]]"
      args {
        pretty_printed_name: "Union[_collections._T,_collections._T2]"
        kind: UNION
        args {
          pretty_printed_name: "_collections._T"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "_collections._T2"
          kind: TYPE_VAR
        }
      }
      fully_qualified_name: "_collections.deque"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "_collections.deque[_collections._T]"
        args {
          pretty_printed_name: "_collections._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_collections.deque"
      }
    }
    parameters {
      name: "other"
      type_annotation {
        pretty_printed_name: "_collections.deque[_collections._T2]"
        args {
          pretty_printed_name: "_collections._T2"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_collections.deque"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__iter__"
    fully_qualified_name: "_collections.deque.__iter__"
    return_annotation {
      pretty_printed_name: "typing.Iterator[_collections._T]"
      args {
        pretty_printed_name: "_collections._T"
        kind: TYPE_VAR
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "_collections.deque[_collections._T]"
        args {
          pretty_printed_name: "_collections._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_collections.deque"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__len__"
    fully_qualified_name: "_collections.deque.__len__"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "_collections.deque[_collections._T]"
        args {
          pretty_printed_name: "_collections._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_collections.deque"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__reversed__"
    fully_qualified_name: "_collections.deque.__reversed__"
    return_annotation {
      pretty_printed_name: "typing.Iterator[_collections._T]"
      args {
        pretty_printed_name: "_collections._T"
        kind: TYPE_VAR
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "_collections.deque[_collections._T]"
        args {
          pretty_printed_name: "_collections._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_collections.deque"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__setitem__"
    fully_qualified_name: "_collections.deque.__setitem__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "_collections.deque[_collections._T]"
        args {
          pretty_printed_name: "_collections._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_collections.deque"
      }
    }
    parameters {
      name: "i"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "x"
      type_annotation {
        pretty_printed_name: "_collections._T"
        kind: TYPE_VAR
      }
    }
    valid_for: "27"
  }
  is_generic: true
  valid_for: "27"
  attributes {
    name: "maxlen"
    fully_qualified_name: "_collections.deque.maxlen"
    type_annotation {
      pretty_printed_name: "Union[builtins.int,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "27"
  }
}
