fully_qualified_name: "dateutil.rrule"
classes {
  name: "weekdaybase"
  fully_qualified_name: "dateutil._common.weekday"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "dateutil._common.weekday.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "dateutil._common.weekday"
        fully_qualified_name: "dateutil._common.weekday"
      }
    }
    parameters {
      name: "weekday"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "n"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__call__"
    fully_qualified_name: "dateutil._common.weekday.__call__"
    return_annotation {
      pretty_printed_name: "dateutil._common._T"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "dateutil._common._T"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "n"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__eq__"
    fully_qualified_name: "dateutil._common.weekday.__eq__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "dateutil._common.weekday"
        fully_qualified_name: "dateutil._common.weekday"
      }
    }
    parameters {
      name: "other"
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__repr__"
    fully_qualified_name: "dateutil._common.weekday.__repr__"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "dateutil._common.weekday"
        fully_qualified_name: "dateutil._common.weekday"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__hash__"
    fully_qualified_name: "dateutil._common.weekday.__hash__"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "dateutil._common.weekday"
        fully_qualified_name: "dateutil._common.weekday"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "weekday"
    fully_qualified_name: "dateutil._common.weekday.weekday"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "n"
    fully_qualified_name: "dateutil._common.weekday.n"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "weekday"
  fully_qualified_name: "dateutil.rrule.weekday"
  super_classes: "dateutil._common.weekday"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "rrulebase"
  fully_qualified_name: "dateutil.rrule.rrulebase"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "dateutil.rrule.rrulebase.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "dateutil.rrule.rrulebase"
        fully_qualified_name: "dateutil.rrule.rrulebase"
      }
    }
    parameters {
      name: "cache"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__iter__"
    fully_qualified_name: "dateutil.rrule.rrulebase.__iter__"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__getitem__"
    fully_qualified_name: "dateutil.rrule.rrulebase.__getitem__"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "item"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__contains__"
    fully_qualified_name: "dateutil.rrule.rrulebase.__contains__"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "item"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "count"
    fully_qualified_name: "dateutil.rrule.rrulebase.count"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "before"
    fully_qualified_name: "dateutil.rrule.rrulebase.before"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "dateutil.rrule.rrulebase"
        fully_qualified_name: "dateutil.rrule.rrulebase"
      }
    }
    parameters {
      name: "dt"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "inc"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "after"
    fully_qualified_name: "dateutil.rrule.rrulebase.after"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "dateutil.rrule.rrulebase"
        fully_qualified_name: "dateutil.rrule.rrulebase"
      }
    }
    parameters {
      name: "dt"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "inc"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "xafter"
    fully_qualified_name: "dateutil.rrule.rrulebase.xafter"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "dateutil.rrule.rrulebase"
        fully_qualified_name: "dateutil.rrule.rrulebase"
      }
    }
    parameters {
      name: "dt"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "count"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "inc"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "between"
    fully_qualified_name: "dateutil.rrule.rrulebase.between"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "dateutil.rrule.rrulebase"
        fully_qualified_name: "dateutil.rrule.rrulebase"
      }
    }
    parameters {
      name: "after"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "before"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "inc"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    parameters {
      name: "count"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "rrule"
  fully_qualified_name: "dateutil.rrule.rrule"
  super_classes: "dateutil.rrule.rrulebase"
  methods {
    name: "__init__"
    fully_qualified_name: "dateutil.rrule.rrule.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "dateutil.rrule.rrule"
        fully_qualified_name: "dateutil.rrule.rrule"
      }
    }
    parameters {
      name: "freq"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "dtstart"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[datetime.date,None]"
        kind: UNION
        args {
          pretty_printed_name: "datetime.date"
          fully_qualified_name: "datetime.date"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "interval"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    parameters {
      name: "wkst"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[dateutil.rrule.weekday,builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "dateutil.rrule.weekday"
          fully_qualified_name: "dateutil.rrule.weekday"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "count"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "until"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[datetime.date,builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "datetime.date"
          fully_qualified_name: "datetime.date"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "bysetpos"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,typing.Iterable[builtins.int],None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "typing.Iterable[builtins.int]"
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          fully_qualified_name: "typing.Iterable"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "bymonth"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,typing.Iterable[builtins.int],None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "typing.Iterable[builtins.int]"
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          fully_qualified_name: "typing.Iterable"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "bymonthday"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,typing.Iterable[builtins.int],None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "typing.Iterable[builtins.int]"
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          fully_qualified_name: "typing.Iterable"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "byyearday"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,typing.Iterable[builtins.int],None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "typing.Iterable[builtins.int]"
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          fully_qualified_name: "typing.Iterable"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "byeaster"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,typing.Iterable[builtins.int],None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "typing.Iterable[builtins.int]"
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          fully_qualified_name: "typing.Iterable"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "byweekno"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,typing.Iterable[builtins.int],None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "typing.Iterable[builtins.int]"
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          fully_qualified_name: "typing.Iterable"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "byweekday"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,dateutil.rrule.weekday,typing.Iterable[builtins.int],typing.Iterable[dateutil.rrule.weekday],None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "dateutil.rrule.weekday"
          fully_qualified_name: "dateutil.rrule.weekday"
        }
        args {
          pretty_printed_name: "typing.Iterable[builtins.int]"
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          fully_qualified_name: "typing.Iterable"
        }
        args {
          pretty_printed_name: "typing.Iterable[dateutil.rrule.weekday]"
          args {
            pretty_printed_name: "dateutil.rrule.weekday"
            fully_qualified_name: "dateutil.rrule.weekday"
          }
          fully_qualified_name: "typing.Iterable"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "byhour"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,typing.Iterable[builtins.int],None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "typing.Iterable[builtins.int]"
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          fully_qualified_name: "typing.Iterable"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "byminute"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,typing.Iterable[builtins.int],None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "typing.Iterable[builtins.int]"
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          fully_qualified_name: "typing.Iterable"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "bysecond"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,typing.Iterable[builtins.int],None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "typing.Iterable[builtins.int]"
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          fully_qualified_name: "typing.Iterable"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "cache"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "replace"
    fully_qualified_name: "dateutil.rrule.rrule.replace"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "kwargs"
      kind: VAR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "_iterinfo"
  fully_qualified_name: "dateutil.rrule._iterinfo"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "dateutil.rrule._iterinfo.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "dateutil.rrule._iterinfo"
        fully_qualified_name: "dateutil.rrule._iterinfo"
      }
    }
    parameters {
      name: "rrule"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "rebuild"
    fully_qualified_name: "dateutil.rrule._iterinfo.rebuild"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "year"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "month"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "ydayset"
    fully_qualified_name: "dateutil.rrule._iterinfo.ydayset"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "year"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "month"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "day"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "mdayset"
    fully_qualified_name: "dateutil.rrule._iterinfo.mdayset"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "year"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "month"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "day"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "wdayset"
    fully_qualified_name: "dateutil.rrule._iterinfo.wdayset"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "year"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "month"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "day"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "ddayset"
    fully_qualified_name: "dateutil.rrule._iterinfo.ddayset"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "year"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "month"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "day"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "htimeset"
    fully_qualified_name: "dateutil.rrule._iterinfo.htimeset"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "hour"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "minute"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "second"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "mtimeset"
    fully_qualified_name: "dateutil.rrule._iterinfo.mtimeset"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "hour"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "minute"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "second"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "stimeset"
    fully_qualified_name: "dateutil.rrule._iterinfo.stimeset"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "hour"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "minute"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "second"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "rrule"
    fully_qualified_name: "dateutil.rrule._iterinfo.rrule"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "yearlen"
    fully_qualified_name: "dateutil.rrule._iterinfo.yearlen"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "nextyearlen"
    fully_qualified_name: "dateutil.rrule._iterinfo.nextyearlen"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "yearordinal"
    fully_qualified_name: "dateutil.rrule._iterinfo.yearordinal"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "yearweekday"
    fully_qualified_name: "dateutil.rrule._iterinfo.yearweekday"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "mmask"
    fully_qualified_name: "dateutil.rrule._iterinfo.mmask"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "mdaymask"
    fully_qualified_name: "dateutil.rrule._iterinfo.mdaymask"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "nmdaymask"
    fully_qualified_name: "dateutil.rrule._iterinfo.nmdaymask"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "wdaymask"
    fully_qualified_name: "dateutil.rrule._iterinfo.wdaymask"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "mrange"
    fully_qualified_name: "dateutil.rrule._iterinfo.mrange"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "wnomask"
    fully_qualified_name: "dateutil.rrule._iterinfo.wnomask"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "nwdaymask"
    fully_qualified_name: "dateutil.rrule._iterinfo.nwdaymask"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "eastermask"
    fully_qualified_name: "dateutil.rrule._iterinfo.eastermask"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "lastyear"
    fully_qualified_name: "dateutil.rrule._iterinfo.lastyear"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "lastmonth"
    fully_qualified_name: "dateutil.rrule._iterinfo.lastmonth"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "rruleset"
  fully_qualified_name: "dateutil.rrule.rruleset"
  super_classes: "dateutil.rrule.rrulebase"
  methods {
    name: "__init__"
    fully_qualified_name: "dateutil.rrule.rruleset.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "dateutil.rrule.rruleset"
        fully_qualified_name: "dateutil.rrule.rruleset"
      }
    }
    parameters {
      name: "cache"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "rrule"
    fully_qualified_name: "dateutil.rrule.rruleset.rrule"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "rrule"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "rdate"
    fully_qualified_name: "dateutil.rrule.rruleset.rdate"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "rdate"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "exrule"
    fully_qualified_name: "dateutil.rrule.rruleset.exrule"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "exrule"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "exdate"
    fully_qualified_name: "dateutil.rrule.rruleset.exdate"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "exdate"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "_rrulestr"
  fully_qualified_name: "dateutil.rrule._rrulestr"
  super_classes: "builtins.object"
  methods {
    name: "__call__"
    fully_qualified_name: "dateutil.rrule._rrulestr.__call__"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "s"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "kwargs"
      kind: VAR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "YEARLY"
  fully_qualified_name: "dateutil.rrule.YEARLY"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "MONTHLY"
  fully_qualified_name: "dateutil.rrule.MONTHLY"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "WEEKLY"
  fully_qualified_name: "dateutil.rrule.WEEKLY"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "DAILY"
  fully_qualified_name: "dateutil.rrule.DAILY"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "HOURLY"
  fully_qualified_name: "dateutil.rrule.HOURLY"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "MINUTELY"
  fully_qualified_name: "dateutil.rrule.MINUTELY"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "SECONDLY"
  fully_qualified_name: "dateutil.rrule.SECONDLY"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "MO"
  fully_qualified_name: "dateutil.rrule.MO"
  type_annotation {
    pretty_printed_name: "dateutil.rrule.weekday"
    fully_qualified_name: "dateutil.rrule.weekday"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "TU"
  fully_qualified_name: "dateutil.rrule.TU"
  type_annotation {
    pretty_printed_name: "dateutil.rrule.weekday"
    fully_qualified_name: "dateutil.rrule.weekday"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "WE"
  fully_qualified_name: "dateutil.rrule.WE"
  type_annotation {
    pretty_printed_name: "dateutil.rrule.weekday"
    fully_qualified_name: "dateutil.rrule.weekday"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "TH"
  fully_qualified_name: "dateutil.rrule.TH"
  type_annotation {
    pretty_printed_name: "dateutil.rrule.weekday"
    fully_qualified_name: "dateutil.rrule.weekday"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "FR"
  fully_qualified_name: "dateutil.rrule.FR"
  type_annotation {
    pretty_printed_name: "dateutil.rrule.weekday"
    fully_qualified_name: "dateutil.rrule.weekday"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "SA"
  fully_qualified_name: "dateutil.rrule.SA"
  type_annotation {
    pretty_printed_name: "dateutil.rrule.weekday"
    fully_qualified_name: "dateutil.rrule.weekday"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "SU"
  fully_qualified_name: "dateutil.rrule.SU"
  type_annotation {
    pretty_printed_name: "dateutil.rrule.weekday"
    fully_qualified_name: "dateutil.rrule.weekday"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "rrulestr"
  fully_qualified_name: "dateutil.rrule.rrulestr"
  type_annotation {
    pretty_printed_name: "dateutil.rrule._rrulestr"
    fully_qualified_name: "dateutil.rrule._rrulestr"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
