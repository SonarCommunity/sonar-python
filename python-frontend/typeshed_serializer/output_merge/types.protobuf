fully_qualified_name: "types"
classes {
  name: "NoneType"
  fully_qualified_name: "types.NoneType"
  super_classes: "builtins.object"
  valid_for: "27"
}
classes {
  name: "NoneType"
  fully_qualified_name: "types.NoneType"
  super_classes: "builtins.object"
  methods {
    name: "__bool__"
    fully_qualified_name: "types.NoneType.__bool__"
    return_annotation {
      pretty_printed_name: "Literal[builtins.bool]"
      kind: LITERAL
      args {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "types.NoneType"
        fully_qualified_name: "types.NoneType"
      }
    }
    valid_for: "310"
  }
  has_decorators: true
  valid_for: "310"
}
classes {
  name: "_Cell"
  fully_qualified_name: "types._Cell"
  super_classes: "builtins.object"
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "cell_contents"
    fully_qualified_name: "types._Cell.cell_contents"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "FunctionType"
  fully_qualified_name: "types.FunctionType"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "types.FunctionType.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "types.FunctionType"
        fully_qualified_name: "types.FunctionType"
      }
    }
    parameters {
      name: "code"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "types.CodeType"
        fully_qualified_name: "types.CodeType"
      }
    }
    parameters {
      name: "globals"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.dict[builtins.str,Any]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "builtins.dict"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "argdefs"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.tuple[builtins.object],None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.tuple[builtins.object]"
          args {
            pretty_printed_name: "builtins.object"
            fully_qualified_name: "builtins.object"
          }
          fully_qualified_name: "builtins.tuple"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "closure"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.tuple[types._Cell],None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.tuple[types._Cell]"
          args {
            pretty_printed_name: "types._Cell"
            fully_qualified_name: "types._Cell"
          }
          fully_qualified_name: "builtins.tuple"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__call__"
    fully_qualified_name: "types.FunctionType.__call__"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "types.FunctionType"
        fully_qualified_name: "types.FunctionType"
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "kwargs"
      kind: VAR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__get__"
    fully_qualified_name: "types.FunctionType.__get__"
    return_annotation {
      pretty_printed_name: "types.UnboundMethodType"
      fully_qualified_name: "types.UnboundMethodType"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "types.FunctionType"
        fully_qualified_name: "types.FunctionType"
      }
    }
    parameters {
      name: "obj"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.object,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.object"
          fully_qualified_name: "builtins.object"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "type"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.type,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.type"
          fully_qualified_name: "builtins.type"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__get__"
    fully_qualified_name: "types.FunctionType.__get__"
    return_annotation {
      pretty_printed_name: "types.MethodType"
      fully_qualified_name: "types.MethodType"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "types.FunctionType"
        fully_qualified_name: "types.FunctionType"
      }
    }
    parameters {
      name: "obj"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.object,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.object"
          fully_qualified_name: "builtins.object"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "type"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.type,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.type"
          fully_qualified_name: "builtins.type"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "func_closure"
    fully_qualified_name: "types.FunctionType.func_closure"
    type_annotation {
      pretty_printed_name: "Union[builtins.tuple[types._Cell],None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.tuple[types._Cell]"
        args {
          pretty_printed_name: "types._Cell"
          fully_qualified_name: "types._Cell"
        }
        fully_qualified_name: "builtins.tuple"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "27"
  }
  attributes {
    name: "func_code"
    fully_qualified_name: "types.FunctionType.func_code"
    type_annotation {
      pretty_printed_name: "types.CodeType"
      fully_qualified_name: "types.CodeType"
    }
    valid_for: "27"
  }
  attributes {
    name: "func_defaults"
    fully_qualified_name: "types.FunctionType.func_defaults"
    type_annotation {
      pretty_printed_name: "Union[builtins.tuple[Any],None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.tuple[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "builtins.tuple"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "27"
  }
  attributes {
    name: "func_dict"
    fully_qualified_name: "types.FunctionType.func_dict"
    type_annotation {
      pretty_printed_name: "builtins.dict[builtins.str,Any]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "builtins.dict"
    }
    valid_for: "27"
  }
  attributes {
    name: "func_doc"
    fully_qualified_name: "types.FunctionType.func_doc"
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "27"
  }
  attributes {
    name: "func_globals"
    fully_qualified_name: "types.FunctionType.func_globals"
    type_annotation {
      pretty_printed_name: "builtins.dict[builtins.str,Any]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "builtins.dict"
    }
    valid_for: "27"
  }
  attributes {
    name: "func_name"
    fully_qualified_name: "types.FunctionType.func_name"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "27"
  }
  attributes {
    name: "__closure__"
    fully_qualified_name: "types.FunctionType.__closure__"
    type_annotation {
      pretty_printed_name: "Union[builtins.tuple[types._Cell],None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.tuple[types._Cell]"
        args {
          pretty_printed_name: "types._Cell"
          fully_qualified_name: "types._Cell"
        }
        fully_qualified_name: "builtins.tuple"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "__code__"
    fully_qualified_name: "types.FunctionType.__code__"
    type_annotation {
      pretty_printed_name: "types.CodeType"
      fully_qualified_name: "types.CodeType"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "__defaults__"
    fully_qualified_name: "types.FunctionType.__defaults__"
    type_annotation {
      pretty_printed_name: "Union[builtins.tuple[Any],None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.tuple[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "builtins.tuple"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "__dict__"
    fully_qualified_name: "types.FunctionType.__dict__"
    type_annotation {
      pretty_printed_name: "builtins.dict[builtins.str,Any]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "builtins.dict"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "__globals__"
    fully_qualified_name: "types.FunctionType.__globals__"
    type_annotation {
      pretty_printed_name: "builtins.dict[builtins.str,Any]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "builtins.dict"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "__qualname__"
    fully_qualified_name: "types.FunctionType.__qualname__"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "__annotations__"
    fully_qualified_name: "types.FunctionType.__annotations__"
    type_annotation {
      pretty_printed_name: "builtins.dict[builtins.str,Any]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "builtins.dict"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "__kwdefaults__"
    fully_qualified_name: "types.FunctionType.__kwdefaults__"
    type_annotation {
      pretty_printed_name: "builtins.dict[builtins.str,Any]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "builtins.dict"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "CodeType"
  fully_qualified_name: "types.CodeType"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "types.CodeType.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "types.CodeType"
        fully_qualified_name: "types.CodeType"
      }
    }
    parameters {
      name: "argcount"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "nlocals"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "stacksize"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "flags"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "codestring"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "constants"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.tuple[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "builtins.tuple"
      }
    }
    parameters {
      name: "names"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.tuple[builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "builtins.tuple"
      }
    }
    parameters {
      name: "varnames"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.tuple[builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "builtins.tuple"
      }
    }
    parameters {
      name: "filename"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "firstlineno"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "lnotab"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "freevars"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.tuple[builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "builtins.tuple"
      }
      has_default: true
    }
    parameters {
      name: "cellvars"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.tuple[builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "builtins.tuple"
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "__init__"
    fully_qualified_name: "types.CodeType.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "types.CodeType"
        fully_qualified_name: "types.CodeType"
      }
    }
    parameters {
      name: "argcount"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "kwonlyargcount"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "nlocals"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "stacksize"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "flags"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "codestring"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    parameters {
      name: "constants"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.tuple[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "builtins.tuple"
      }
    }
    parameters {
      name: "names"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.tuple[builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "builtins.tuple"
      }
    }
    parameters {
      name: "varnames"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.tuple[builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "builtins.tuple"
      }
    }
    parameters {
      name: "filename"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "firstlineno"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "lnotab"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    parameters {
      name: "freevars"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.tuple[builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "builtins.tuple"
      }
      has_default: true
    }
    parameters {
      name: "cellvars"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.tuple[builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "builtins.tuple"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
  }
  methods {
    name: "__init__"
    fully_qualified_name: "types.CodeType.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "types.CodeType"
        fully_qualified_name: "types.CodeType"
      }
    }
    parameters {
      name: "argcount"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "posonlyargcount"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "kwonlyargcount"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "nlocals"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "stacksize"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "flags"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "codestring"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    parameters {
      name: "constants"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.tuple[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "builtins.tuple"
      }
    }
    parameters {
      name: "names"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.tuple[builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "builtins.tuple"
      }
    }
    parameters {
      name: "varnames"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.tuple[builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "builtins.tuple"
      }
    }
    parameters {
      name: "filename"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "firstlineno"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "lnotab"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    parameters {
      name: "freevars"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.tuple[builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "builtins.tuple"
      }
      has_default: true
    }
    parameters {
      name: "cellvars"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.tuple[builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "builtins.tuple"
      }
      has_default: true
    }
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "replace"
    fully_qualified_name: "types.CodeType.replace"
    return_annotation {
      pretty_printed_name: "types.CodeType"
      fully_qualified_name: "types.CodeType"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "types.CodeType"
        fully_qualified_name: "types.CodeType"
      }
    }
    parameters {
      name: "co_argcount"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    parameters {
      name: "co_posonlyargcount"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    parameters {
      name: "co_kwonlyargcount"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    parameters {
      name: "co_nlocals"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    parameters {
      name: "co_stacksize"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    parameters {
      name: "co_flags"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    parameters {
      name: "co_firstlineno"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    parameters {
      name: "co_code"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
      has_default: true
    }
    parameters {
      name: "co_consts"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.tuple[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "builtins.tuple"
      }
      has_default: true
    }
    parameters {
      name: "co_names"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.tuple[builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "builtins.tuple"
      }
      has_default: true
    }
    parameters {
      name: "co_varnames"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.tuple[builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "builtins.tuple"
      }
      has_default: true
    }
    parameters {
      name: "co_freevars"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.tuple[builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "builtins.tuple"
      }
      has_default: true
    }
    parameters {
      name: "co_cellvars"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.tuple[builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "builtins.tuple"
      }
      has_default: true
    }
    parameters {
      name: "co_filename"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      has_default: true
    }
    parameters {
      name: "co_name"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      has_default: true
    }
    parameters {
      name: "co_lnotab"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
      has_default: true
    }
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "co_argcount"
    fully_qualified_name: "types.CodeType.co_argcount"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "co_cellvars"
    fully_qualified_name: "types.CodeType.co_cellvars"
    type_annotation {
      pretty_printed_name: "builtins.tuple[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "builtins.tuple"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "co_code"
    fully_qualified_name: "types.CodeType.co_code"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "27"
  }
  attributes {
    name: "co_code"
    fully_qualified_name: "types.CodeType.co_code"
    type_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "co_consts"
    fully_qualified_name: "types.CodeType.co_consts"
    type_annotation {
      pretty_printed_name: "builtins.tuple[Any]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "builtins.tuple"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "co_filename"
    fully_qualified_name: "types.CodeType.co_filename"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "co_firstlineno"
    fully_qualified_name: "types.CodeType.co_firstlineno"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "co_flags"
    fully_qualified_name: "types.CodeType.co_flags"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "co_freevars"
    fully_qualified_name: "types.CodeType.co_freevars"
    type_annotation {
      pretty_printed_name: "builtins.tuple[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "builtins.tuple"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "co_lnotab"
    fully_qualified_name: "types.CodeType.co_lnotab"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "27"
  }
  attributes {
    name: "co_lnotab"
    fully_qualified_name: "types.CodeType.co_lnotab"
    type_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "co_name"
    fully_qualified_name: "types.CodeType.co_name"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "co_names"
    fully_qualified_name: "types.CodeType.co_names"
    type_annotation {
      pretty_printed_name: "builtins.tuple[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "builtins.tuple"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "co_nlocals"
    fully_qualified_name: "types.CodeType.co_nlocals"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "co_stacksize"
    fully_qualified_name: "types.CodeType.co_stacksize"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "co_varnames"
    fully_qualified_name: "types.CodeType.co_varnames"
    type_annotation {
      pretty_printed_name: "builtins.tuple[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "builtins.tuple"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "co_kwonlyargcount"
    fully_qualified_name: "types.CodeType.co_kwonlyargcount"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "co_posonlyargcount"
    fully_qualified_name: "types.CodeType.co_posonlyargcount"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "GeneratorType"
  fully_qualified_name: "types.GeneratorType"
  super_classes: "builtins.object"
  methods {
    name: "__iter__"
    fully_qualified_name: "types.GeneratorType.__iter__"
    return_annotation {
      pretty_printed_name: "types.GeneratorType"
      fully_qualified_name: "types.GeneratorType"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "types.GeneratorType"
        fully_qualified_name: "types.GeneratorType"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "close"
    fully_qualified_name: "types.GeneratorType.close"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "types.GeneratorType"
        fully_qualified_name: "types.GeneratorType"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "next"
    fully_qualified_name: "types.GeneratorType.next"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "types.GeneratorType"
        fully_qualified_name: "types.GeneratorType"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "send"
    fully_qualified_name: "types.GeneratorType.send"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "types.GeneratorType"
        fully_qualified_name: "types.GeneratorType"
      }
    }
    parameters {
      name: "__arg"
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "27"
  }
  overloaded_methods {
    name: "throw"
    fullname: "types.GeneratorType.throw"
    definitions {
      name: "throw"
      fully_qualified_name: "types.GeneratorType.throw"
      return_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "types.GeneratorType"
          fully_qualified_name: "types.GeneratorType"
        }
      }
      parameters {
        name: "__typ"
        type_annotation {
          pretty_printed_name: "Type[builtins.BaseException]"
          kind: TYPE
          args {
            pretty_printed_name: "builtins.BaseException"
            fully_qualified_name: "builtins.BaseException"
          }
        }
      }
      parameters {
        name: "__val"
        type_annotation {
          pretty_printed_name: "Union[builtins.BaseException,builtins.object]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.BaseException"
            fully_qualified_name: "builtins.BaseException"
          }
          args {
            pretty_printed_name: "builtins.object"
            fully_qualified_name: "builtins.object"
          }
        }
        has_default: true
      }
      parameters {
        name: "__tb"
        type_annotation {
          pretty_printed_name: "Union[types.TracebackType,None]"
          kind: UNION
          args {
            pretty_printed_name: "types.TracebackType"
            fully_qualified_name: "types.TracebackType"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "throw"
      fully_qualified_name: "types.GeneratorType.throw"
      return_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "types.GeneratorType"
          fully_qualified_name: "types.GeneratorType"
        }
      }
      parameters {
        name: "__typ"
        type_annotation {
          pretty_printed_name: "builtins.BaseException"
          fully_qualified_name: "builtins.BaseException"
        }
      }
      parameters {
        name: "__val"
        type_annotation {
          pretty_printed_name: "None"
          kind: NONE
        }
        has_default: true
      }
      parameters {
        name: "__tb"
        type_annotation {
          pretty_printed_name: "Union[types.TracebackType,None]"
          kind: UNION
          args {
            pretty_printed_name: "types.TracebackType"
            fully_qualified_name: "types.TracebackType"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "27"
  }
  valid_for: "27"
  attributes {
    name: "gi_code"
    fully_qualified_name: "types.GeneratorType.gi_code"
    type_annotation {
      pretty_printed_name: "types.CodeType"
      fully_qualified_name: "types.CodeType"
    }
    valid_for: "27"
  }
  attributes {
    name: "gi_frame"
    fully_qualified_name: "types.GeneratorType.gi_frame"
    type_annotation {
      pretty_printed_name: "types.FrameType"
      fully_qualified_name: "types.FrameType"
    }
    valid_for: "27"
  }
  attributes {
    name: "gi_running"
    fully_qualified_name: "types.GeneratorType.gi_running"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "27"
  }
}
classes {
  name: "GeneratorType"
  fully_qualified_name: "types.GeneratorType"
  super_classes: "typing.Generator"
  methods {
    name: "__iter__"
    fully_qualified_name: "types.GeneratorType.__iter__"
    return_annotation {
      pretty_printed_name: "types.GeneratorType[types._T_co,types._T_contra,types._V_co]"
      args {
        pretty_printed_name: "types._T_co"
        kind: TYPE_VAR
      }
      args {
        pretty_printed_name: "types._T_contra"
        kind: TYPE_VAR
      }
      args {
        pretty_printed_name: "types._V_co"
        kind: TYPE_VAR
      }
      fully_qualified_name: "types.GeneratorType"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "types.GeneratorType[types._T_co,types._T_contra,types._V_co]"
        args {
          pretty_printed_name: "types._T_co"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "types._T_contra"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "types._V_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "types.GeneratorType"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__next__"
    fully_qualified_name: "types.GeneratorType.__next__"
    return_annotation {
      pretty_printed_name: "types._T_co"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "types.GeneratorType[types._T_co,types._T_contra,types._V_co]"
        args {
          pretty_printed_name: "types._T_co"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "types._T_contra"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "types._V_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "types.GeneratorType"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "close"
    fully_qualified_name: "types.GeneratorType.close"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "types.GeneratorType[types._T_co,types._T_contra,types._V_co]"
        args {
          pretty_printed_name: "types._T_co"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "types._T_contra"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "types._V_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "types.GeneratorType"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "send"
    fully_qualified_name: "types.GeneratorType.send"
    return_annotation {
      pretty_printed_name: "types._T_co"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "types.GeneratorType[types._T_co,types._T_contra,types._V_co]"
        args {
          pretty_printed_name: "types._T_co"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "types._T_contra"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "types._V_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "types.GeneratorType"
      }
    }
    parameters {
      name: "__arg"
      type_annotation {
        pretty_printed_name: "types._T_contra"
        kind: TYPE_VAR
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "throw"
    fullname: "types.GeneratorType.throw"
    definitions {
      name: "throw"
      fully_qualified_name: "types.GeneratorType.throw"
      return_annotation {
        pretty_printed_name: "types._T_co"
        kind: TYPE_VAR
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "types.GeneratorType[types._T_co,types._T_contra,types._V_co]"
          args {
            pretty_printed_name: "types._T_co"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "types._T_contra"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "types._V_co"
            kind: TYPE_VAR
          }
          fully_qualified_name: "types.GeneratorType"
        }
      }
      parameters {
        name: "__typ"
        type_annotation {
          pretty_printed_name: "Type[builtins.BaseException]"
          kind: TYPE
          args {
            pretty_printed_name: "builtins.BaseException"
            fully_qualified_name: "builtins.BaseException"
          }
        }
      }
      parameters {
        name: "__val"
        type_annotation {
          pretty_printed_name: "Union[builtins.BaseException,builtins.object]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.BaseException"
            fully_qualified_name: "builtins.BaseException"
          }
          args {
            pretty_printed_name: "builtins.object"
            fully_qualified_name: "builtins.object"
          }
        }
        has_default: true
      }
      parameters {
        name: "__tb"
        type_annotation {
          pretty_printed_name: "Union[types.TracebackType,None]"
          kind: UNION
          args {
            pretty_printed_name: "types.TracebackType"
            fully_qualified_name: "types.TracebackType"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "throw"
      fully_qualified_name: "types.GeneratorType.throw"
      return_annotation {
        pretty_printed_name: "types._T_co"
        kind: TYPE_VAR
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "types.GeneratorType[types._T_co,types._T_contra,types._V_co]"
          args {
            pretty_printed_name: "types._T_co"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "types._T_contra"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "types._V_co"
            kind: TYPE_VAR
          }
          fully_qualified_name: "types.GeneratorType"
        }
      }
      parameters {
        name: "__typ"
        type_annotation {
          pretty_printed_name: "builtins.BaseException"
          fully_qualified_name: "builtins.BaseException"
        }
      }
      parameters {
        name: "__val"
        type_annotation {
          pretty_printed_name: "None"
          kind: NONE
        }
        has_default: true
      }
      parameters {
        name: "__tb"
        type_annotation {
          pretty_printed_name: "Union[types.TracebackType,None]"
          kind: UNION
          args {
            pretty_printed_name: "types.TracebackType"
            fully_qualified_name: "types.TracebackType"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  is_generic: true
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "gi_code"
    fully_qualified_name: "types.GeneratorType.gi_code"
    type_annotation {
      pretty_printed_name: "types.CodeType"
      fully_qualified_name: "types.CodeType"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "gi_frame"
    fully_qualified_name: "types.GeneratorType.gi_frame"
    type_annotation {
      pretty_printed_name: "types.FrameType"
      fully_qualified_name: "types.FrameType"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "gi_running"
    fully_qualified_name: "types.GeneratorType.gi_running"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "gi_yieldfrom"
    fully_qualified_name: "types.GeneratorType.gi_yieldfrom"
    type_annotation {
      pretty_printed_name: "Union[types.GeneratorType[types._T_co,types._T_contra,Any],None]"
      kind: UNION
      args {
        pretty_printed_name: "types.GeneratorType[types._T_co,types._T_contra,Any]"
        args {
          pretty_printed_name: "types._T_co"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "types._T_contra"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "types.GeneratorType"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "ClassType"
  fully_qualified_name: "types.ClassType"
  super_classes: "builtins.object"
  valid_for: "27"
}
classes {
  name: "UnboundMethodType"
  fully_qualified_name: "types.UnboundMethodType"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "types.UnboundMethodType.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "types.UnboundMethodType"
        fully_qualified_name: "types.UnboundMethodType"
      }
    }
    parameters {
      name: "func"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    parameters {
      name: "obj"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__call__"
    fully_qualified_name: "types.UnboundMethodType.__call__"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "types.UnboundMethodType"
        fully_qualified_name: "types.UnboundMethodType"
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "kwargs"
      kind: VAR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "27"
  }
  valid_for: "27"
  attributes {
    name: "im_class"
    fully_qualified_name: "types.UnboundMethodType.im_class"
    type_annotation {
      pretty_printed_name: "builtins.type"
      fully_qualified_name: "builtins.type"
    }
    valid_for: "27"
  }
  attributes {
    name: "im_func"
    fully_qualified_name: "types.UnboundMethodType.im_func"
    type_annotation {
      pretty_printed_name: "types.FunctionType"
      fully_qualified_name: "types.FunctionType"
    }
    valid_for: "27"
  }
  attributes {
    name: "im_self"
    fully_qualified_name: "types.UnboundMethodType.im_self"
    type_annotation {
      pretty_printed_name: "builtins.object"
      fully_qualified_name: "builtins.object"
    }
    valid_for: "27"
  }
  attributes {
    name: "__func__"
    fully_qualified_name: "types.UnboundMethodType.__func__"
    type_annotation {
      pretty_printed_name: "types.FunctionType"
      fully_qualified_name: "types.FunctionType"
    }
    valid_for: "27"
  }
  attributes {
    name: "__self__"
    fully_qualified_name: "types.UnboundMethodType.__self__"
    type_annotation {
      pretty_printed_name: "builtins.object"
      fully_qualified_name: "builtins.object"
    }
    valid_for: "27"
  }
}
classes {
  name: "InstanceType"
  fully_qualified_name: "types.InstanceType"
  super_classes: "builtins.object"
  valid_for: "27"
}
classes {
  name: "BuiltinFunctionType"
  fully_qualified_name: "types.BuiltinFunctionType"
  super_classes: "builtins.object"
  methods {
    name: "__call__"
    fully_qualified_name: "types.BuiltinFunctionType.__call__"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "types.BuiltinFunctionType"
        fully_qualified_name: "types.BuiltinFunctionType"
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "kwargs"
      kind: VAR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "__self__"
    fully_qualified_name: "types.BuiltinFunctionType.__self__"
    type_annotation {
      pretty_printed_name: "Union[builtins.object,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "27"
  }
  attributes {
    name: "__self__"
    fully_qualified_name: "types.BuiltinFunctionType.__self__"
    type_annotation {
      pretty_printed_name: "Union[builtins.object,types.ModuleType]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
      args {
        pretty_printed_name: "types.ModuleType"
        fully_qualified_name: "types.ModuleType"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "__qualname__"
    fully_qualified_name: "types.BuiltinFunctionType.__qualname__"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "ModuleType"
  fully_qualified_name: "types.ModuleType"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "types.ModuleType.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "types.ModuleType"
        fully_qualified_name: "types.ModuleType"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "doc"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "__path__"
    fully_qualified_name: "types.ModuleType.__path__"
    type_annotation {
      pretty_printed_name: "Union[typing.Iterable[builtins.str],None]"
      kind: UNION
      args {
        pretty_printed_name: "typing.Iterable[builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "typing.Iterable"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "27"
  }
  attributes {
    name: "__dict__"
    fully_qualified_name: "types.ModuleType.__dict__"
    type_annotation {
      pretty_printed_name: "builtins.dict[builtins.str,Any]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "builtins.dict"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "__loader__"
    fully_qualified_name: "types.ModuleType.__loader__"
    type_annotation {
      pretty_printed_name: "Union[importlib.abc._LoaderProtocol,None]"
      kind: UNION
      args {
        pretty_printed_name: "importlib.abc._LoaderProtocol"
        fully_qualified_name: "importlib.abc._LoaderProtocol"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "__spec__"
    fully_qualified_name: "types.ModuleType.__spec__"
    type_annotation {
      pretty_printed_name: "Union[importlib.machinery.ModuleSpec,None]"
      kind: UNION
      args {
        pretty_printed_name: "importlib.machinery.ModuleSpec"
        fully_qualified_name: "importlib.machinery.ModuleSpec"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "TracebackType"
  fully_qualified_name: "types.TracebackType"
  super_classes: "builtins.object"
  methods {
    name: "tb_next"
    fully_qualified_name: "types.TracebackType.tb_next"
    return_annotation {
      pretty_printed_name: "Union[types.TracebackType,None]"
      kind: UNION
      args {
        pretty_printed_name: "types.TracebackType"
        fully_qualified_name: "types.TracebackType"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "types.TracebackType"
        fully_qualified_name: "types.TracebackType"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
  }
  methods {
    name: "tb_frame"
    fully_qualified_name: "types.TracebackType.tb_frame"
    return_annotation {
      pretty_printed_name: "types.FrameType"
      fully_qualified_name: "types.FrameType"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "types.TracebackType"
        fully_qualified_name: "types.TracebackType"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "tb_lasti"
    fully_qualified_name: "types.TracebackType.tb_lasti"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "types.TracebackType"
        fully_qualified_name: "types.TracebackType"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "tb_lineno"
    fully_qualified_name: "types.TracebackType.tb_lineno"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "types.TracebackType"
        fully_qualified_name: "types.TracebackType"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__init__"
    fully_qualified_name: "types.TracebackType.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "types.TracebackType"
        fully_qualified_name: "types.TracebackType"
      }
    }
    parameters {
      name: "tb_next"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[types.TracebackType,None]"
        kind: UNION
        args {
          pretty_printed_name: "types.TracebackType"
          fully_qualified_name: "types.TracebackType"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "tb_frame"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "types.FrameType"
        fully_qualified_name: "types.FrameType"
      }
    }
    parameters {
      name: "tb_lasti"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "tb_lineno"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "tb_frame"
    fully_qualified_name: "types.TracebackType.tb_frame"
    type_annotation {
      pretty_printed_name: "types.FrameType"
      fully_qualified_name: "types.FrameType"
    }
    valid_for: "27"
  }
  attributes {
    name: "tb_lasti"
    fully_qualified_name: "types.TracebackType.tb_lasti"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "27"
  }
  attributes {
    name: "tb_lineno"
    fully_qualified_name: "types.TracebackType.tb_lineno"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "27"
  }
  attributes {
    name: "tb_next"
    fully_qualified_name: "types.TracebackType.tb_next"
    type_annotation {
      pretty_printed_name: "types.TracebackType"
      fully_qualified_name: "types.TracebackType"
    }
    valid_for: "27"
  }
  attributes {
    name: "tb_next"
    fully_qualified_name: "types.TracebackType.tb_next"
    type_annotation {
      pretty_printed_name: "Union[types.TracebackType,None]"
      kind: UNION
      args {
        pretty_printed_name: "types.TracebackType"
        fully_qualified_name: "types.TracebackType"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "FrameType"
  fully_qualified_name: "types.FrameType"
  super_classes: "builtins.object"
  methods {
    name: "clear"
    fully_qualified_name: "types.FrameType.clear"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "types.FrameType"
        fully_qualified_name: "types.FrameType"
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "f_back"
    fully_qualified_name: "types.FrameType.f_back"
    type_annotation {
      pretty_printed_name: "types.FrameType"
      fully_qualified_name: "types.FrameType"
    }
    valid_for: "27"
  }
  attributes {
    name: "f_back"
    fully_qualified_name: "types.FrameType.f_back"
    type_annotation {
      pretty_printed_name: "Union[types.FrameType,None]"
      kind: UNION
      args {
        pretty_printed_name: "types.FrameType"
        fully_qualified_name: "types.FrameType"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "f_builtins"
    fully_qualified_name: "types.FrameType.f_builtins"
    type_annotation {
      pretty_printed_name: "builtins.dict[builtins.str,Any]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "builtins.dict"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "f_code"
    fully_qualified_name: "types.FrameType.f_code"
    type_annotation {
      pretty_printed_name: "types.CodeType"
      fully_qualified_name: "types.CodeType"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "f_exc_type"
    fully_qualified_name: "types.FrameType.f_exc_type"
    type_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    valid_for: "27"
  }
  attributes {
    name: "f_exc_value"
    fully_qualified_name: "types.FrameType.f_exc_value"
    type_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    valid_for: "27"
  }
  attributes {
    name: "f_exc_traceback"
    fully_qualified_name: "types.FrameType.f_exc_traceback"
    type_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    valid_for: "27"
  }
  attributes {
    name: "f_globals"
    fully_qualified_name: "types.FrameType.f_globals"
    type_annotation {
      pretty_printed_name: "builtins.dict[builtins.str,Any]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "builtins.dict"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "f_lasti"
    fully_qualified_name: "types.FrameType.f_lasti"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "f_lineno"
    fully_qualified_name: "types.FrameType.f_lineno"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "f_locals"
    fully_qualified_name: "types.FrameType.f_locals"
    type_annotation {
      pretty_printed_name: "builtins.dict[builtins.str,Any]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "builtins.dict"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "f_restricted"
    fully_qualified_name: "types.FrameType.f_restricted"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    valid_for: "27"
  }
  attributes {
    name: "f_trace"
    fully_qualified_name: "types.FrameType.f_trace"
    type_annotation {
      pretty_printed_name: "CallableType[builtins.function]"
      kind: CALLABLE
      args {
        pretty_printed_name: "builtins.function"
        fully_qualified_name: "builtins.function"
      }
    }
    valid_for: "27"
  }
  attributes {
    name: "f_trace"
    fully_qualified_name: "types.FrameType.f_trace"
    type_annotation {
      pretty_printed_name: "Union[CallableType[builtins.function],None]"
      kind: UNION
      args {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "f_trace_lines"
    fully_qualified_name: "types.FrameType.f_trace_lines"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "f_trace_opcodes"
    fully_qualified_name: "types.FrameType.f_trace_opcodes"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "EllipsisType"
  fully_qualified_name: "types.EllipsisType"
  super_classes: "builtins.object"
  valid_for: "27"
}
classes {
  name: "DictProxyType"
  fully_qualified_name: "types.DictProxyType"
  super_classes: "builtins.object"
  methods {
    name: "copy"
    fully_qualified_name: "types.DictProxyType.copy"
    return_annotation {
      pretty_printed_name: "builtins.dict[Any,Any]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "builtins.dict"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "types.DictProxyType"
        fully_qualified_name: "types.DictProxyType"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "get"
    fully_qualified_name: "types.DictProxyType.get"
    return_annotation {
      pretty_printed_name: "Union[Any,types._T]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "types._T"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "types.DictProxyType"
        fully_qualified_name: "types.DictProxyType"
      }
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "default"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "types._T"
        kind: TYPE_VAR
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "has_key"
    fully_qualified_name: "types.DictProxyType.has_key"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "types.DictProxyType"
        fully_qualified_name: "types.DictProxyType"
      }
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "items"
    fully_qualified_name: "types.DictProxyType.items"
    return_annotation {
      pretty_printed_name: "builtins.list[Tuple[builtins.str,Any]]"
      args {
        pretty_printed_name: "Tuple[builtins.str,Any]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "types.DictProxyType"
        fully_qualified_name: "types.DictProxyType"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "iteritems"
    fully_qualified_name: "types.DictProxyType.iteritems"
    return_annotation {
      pretty_printed_name: "typing.Iterator[Tuple[builtins.str,Any]]"
      args {
        pretty_printed_name: "Tuple[builtins.str,Any]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "types.DictProxyType"
        fully_qualified_name: "types.DictProxyType"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "iterkeys"
    fully_qualified_name: "types.DictProxyType.iterkeys"
    return_annotation {
      pretty_printed_name: "typing.Iterator[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "types.DictProxyType"
        fully_qualified_name: "types.DictProxyType"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "itervalues"
    fully_qualified_name: "types.DictProxyType.itervalues"
    return_annotation {
      pretty_printed_name: "typing.Iterator[Any]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "types.DictProxyType"
        fully_qualified_name: "types.DictProxyType"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "keys"
    fully_qualified_name: "types.DictProxyType.keys"
    return_annotation {
      pretty_printed_name: "builtins.list[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "types.DictProxyType"
        fully_qualified_name: "types.DictProxyType"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "values"
    fully_qualified_name: "types.DictProxyType.values"
    return_annotation {
      pretty_printed_name: "builtins.list[Any]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "types.DictProxyType"
        fully_qualified_name: "types.DictProxyType"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__contains__"
    fully_qualified_name: "types.DictProxyType.__contains__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "types.DictProxyType"
        fully_qualified_name: "types.DictProxyType"
      }
    }
    parameters {
      name: "key"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__getitem__"
    fully_qualified_name: "types.DictProxyType.__getitem__"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "types.DictProxyType"
        fully_qualified_name: "types.DictProxyType"
      }
    }
    parameters {
      name: "key"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__iter__"
    fully_qualified_name: "types.DictProxyType.__iter__"
    return_annotation {
      pretty_printed_name: "typing.Iterator[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "types.DictProxyType"
        fully_qualified_name: "types.DictProxyType"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__len__"
    fully_qualified_name: "types.DictProxyType.__len__"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "types.DictProxyType"
        fully_qualified_name: "types.DictProxyType"
      }
    }
    valid_for: "27"
  }
  valid_for: "27"
}
classes {
  name: "NotImplementedType"
  fully_qualified_name: "types.NotImplementedType"
  super_classes: "builtins.object"
  valid_for: "27"
}
classes {
  name: "GetSetDescriptorType"
  fully_qualified_name: "types.GetSetDescriptorType"
  super_classes: "builtins.object"
  methods {
    name: "__get__"
    fully_qualified_name: "types.GetSetDescriptorType.__get__"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "types.GetSetDescriptorType"
        fully_qualified_name: "types.GetSetDescriptorType"
      }
    }
    parameters {
      name: "obj"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "type"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.type"
        fully_qualified_name: "builtins.type"
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "__get__"
    fully_qualified_name: "types.GetSetDescriptorType.__get__"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "types.GetSetDescriptorType"
        fully_qualified_name: "types.GetSetDescriptorType"
      }
    }
    parameters {
      name: "__obj"
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "__type"
      type_annotation {
        pretty_printed_name: "builtins.type"
        fully_qualified_name: "builtins.type"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__set__"
    fully_qualified_name: "types.GetSetDescriptorType.__set__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "types.GetSetDescriptorType"
        fully_qualified_name: "types.GetSetDescriptorType"
      }
    }
    parameters {
      name: "obj"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__set__"
    fully_qualified_name: "types.GetSetDescriptorType.__set__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "types.GetSetDescriptorType"
        fully_qualified_name: "types.GetSetDescriptorType"
      }
    }
    parameters {
      name: "__instance"
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__delete__"
    fully_qualified_name: "types.GetSetDescriptorType.__delete__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "types.GetSetDescriptorType"
        fully_qualified_name: "types.GetSetDescriptorType"
      }
    }
    parameters {
      name: "obj"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "__objclass__"
    fully_qualified_name: "types.GetSetDescriptorType.__objclass__"
    type_annotation {
      pretty_printed_name: "builtins.type"
      fully_qualified_name: "builtins.type"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "MemberDescriptorType"
  fully_qualified_name: "types.MemberDescriptorType"
  super_classes: "builtins.object"
  methods {
    name: "__get__"
    fully_qualified_name: "types.MemberDescriptorType.__get__"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "types.MemberDescriptorType"
        fully_qualified_name: "types.MemberDescriptorType"
      }
    }
    parameters {
      name: "obj"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "type"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.type"
        fully_qualified_name: "builtins.type"
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "__get__"
    fully_qualified_name: "types.MemberDescriptorType.__get__"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "types.MemberDescriptorType"
        fully_qualified_name: "types.MemberDescriptorType"
      }
    }
    parameters {
      name: "__obj"
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "__type"
      type_annotation {
        pretty_printed_name: "builtins.type"
        fully_qualified_name: "builtins.type"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__set__"
    fully_qualified_name: "types.MemberDescriptorType.__set__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "types.MemberDescriptorType"
        fully_qualified_name: "types.MemberDescriptorType"
      }
    }
    parameters {
      name: "obj"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__set__"
    fully_qualified_name: "types.MemberDescriptorType.__set__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "types.MemberDescriptorType"
        fully_qualified_name: "types.MemberDescriptorType"
      }
    }
    parameters {
      name: "__instance"
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__delete__"
    fully_qualified_name: "types.MemberDescriptorType.__delete__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "types.MemberDescriptorType"
        fully_qualified_name: "types.MemberDescriptorType"
      }
    }
    parameters {
      name: "obj"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "__objclass__"
    fully_qualified_name: "types.MemberDescriptorType.__objclass__"
    type_annotation {
      pretty_printed_name: "builtins.type"
      fully_qualified_name: "builtins.type"
    }
    valid_for: "27"
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "MappingProxyType"
  fully_qualified_name: "types.MappingProxyType"
  super_classes: "typing.Mapping"
  methods {
    name: "__init__"
    fully_qualified_name: "types.MappingProxyType.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "types.MappingProxyType[types._KT,types._VT]"
        args {
          pretty_printed_name: "types._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "types._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "types.MappingProxyType"
      }
    }
    parameters {
      name: "mapping"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Mapping[types._KT,types._VT]"
        args {
          pretty_printed_name: "types._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "types._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Mapping"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__getitem__"
    fully_qualified_name: "types.MappingProxyType.__getitem__"
    return_annotation {
      pretty_printed_name: "types._VT"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "types.MappingProxyType[types._KT,types._VT]"
        args {
          pretty_printed_name: "types._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "types._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "types.MappingProxyType"
      }
    }
    parameters {
      name: "k"
      type_annotation {
        pretty_printed_name: "types._KT"
        kind: TYPE_VAR
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__iter__"
    fully_qualified_name: "types.MappingProxyType.__iter__"
    return_annotation {
      pretty_printed_name: "typing.Iterator[types._KT]"
      args {
        pretty_printed_name: "types._KT"
        kind: TYPE_VAR
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "types.MappingProxyType[types._KT,types._VT]"
        args {
          pretty_printed_name: "types._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "types._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "types.MappingProxyType"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__len__"
    fully_qualified_name: "types.MappingProxyType.__len__"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "types.MappingProxyType[types._KT,types._VT]"
        args {
          pretty_printed_name: "types._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "types._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "types.MappingProxyType"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "copy"
    fully_qualified_name: "types.MappingProxyType.copy"
    return_annotation {
      pretty_printed_name: "builtins.dict[types._KT,types._VT]"
      args {
        pretty_printed_name: "types._KT"
        kind: TYPE_VAR
      }
      args {
        pretty_printed_name: "types._VT"
        kind: TYPE_VAR
      }
      fully_qualified_name: "builtins.dict"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "types.MappingProxyType[types._KT,types._VT]"
        args {
          pretty_printed_name: "types._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "types._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "types.MappingProxyType"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  is_generic: true
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "SimpleNamespace"
  fully_qualified_name: "types.SimpleNamespace"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "types.SimpleNamespace.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "types.SimpleNamespace"
        fully_qualified_name: "types.SimpleNamespace"
      }
    }
    parameters {
      name: "kwargs"
      kind: VAR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__getattribute__"
    fully_qualified_name: "types.SimpleNamespace.__getattribute__"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "types.SimpleNamespace"
        fully_qualified_name: "types.SimpleNamespace"
      }
    }
    parameters {
      name: "name"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__setattr__"
    fully_qualified_name: "types.SimpleNamespace.__setattr__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "types.SimpleNamespace"
        fully_qualified_name: "types.SimpleNamespace"
      }
    }
    parameters {
      name: "name"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "value"
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__delattr__"
    fully_qualified_name: "types.SimpleNamespace.__delattr__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "types.SimpleNamespace"
        fully_qualified_name: "types.SimpleNamespace"
      }
    }
    parameters {
      name: "name"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "AsyncGeneratorType"
  fully_qualified_name: "types.AsyncGeneratorType"
  super_classes: "typing.AsyncGenerator"
  methods {
    name: "__aiter__"
    fully_qualified_name: "types.AsyncGeneratorType.__aiter__"
    return_annotation {
      pretty_printed_name: "types.AsyncGeneratorType[types._T_co,types._T_contra]"
      args {
        pretty_printed_name: "types._T_co"
        kind: TYPE_VAR
      }
      args {
        pretty_printed_name: "types._T_contra"
        kind: TYPE_VAR
      }
      fully_qualified_name: "types.AsyncGeneratorType"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "types.AsyncGeneratorType[types._T_co,types._T_contra]"
        args {
          pretty_printed_name: "types._T_co"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "types._T_contra"
          kind: TYPE_VAR
        }
        fully_qualified_name: "types.AsyncGeneratorType"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__anext__"
    fully_qualified_name: "types.AsyncGeneratorType.__anext__"
    return_annotation {
      pretty_printed_name: "typing.Awaitable[types._T_co]"
      args {
        pretty_printed_name: "types._T_co"
        kind: TYPE_VAR
      }
      fully_qualified_name: "typing.Awaitable"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "types.AsyncGeneratorType[types._T_co,types._T_contra]"
        args {
          pretty_printed_name: "types._T_co"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "types._T_contra"
          kind: TYPE_VAR
        }
        fully_qualified_name: "types.AsyncGeneratorType"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "asend"
    fully_qualified_name: "types.AsyncGeneratorType.asend"
    return_annotation {
      pretty_printed_name: "typing.Awaitable[types._T_co]"
      args {
        pretty_printed_name: "types._T_co"
        kind: TYPE_VAR
      }
      fully_qualified_name: "typing.Awaitable"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "types.AsyncGeneratorType[types._T_co,types._T_contra]"
        args {
          pretty_printed_name: "types._T_co"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "types._T_contra"
          kind: TYPE_VAR
        }
        fully_qualified_name: "types.AsyncGeneratorType"
      }
    }
    parameters {
      name: "__val"
      type_annotation {
        pretty_printed_name: "types._T_contra"
        kind: TYPE_VAR
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "aclose"
    fully_qualified_name: "types.AsyncGeneratorType.aclose"
    return_annotation {
      pretty_printed_name: "typing.Awaitable[None]"
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
      fully_qualified_name: "typing.Awaitable"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "types.AsyncGeneratorType[types._T_co,types._T_contra]"
        args {
          pretty_printed_name: "types._T_co"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "types._T_contra"
          kind: TYPE_VAR
        }
        fully_qualified_name: "types.AsyncGeneratorType"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "athrow"
    fullname: "types.AsyncGeneratorType.athrow"
    definitions {
      name: "athrow"
      fully_qualified_name: "types.AsyncGeneratorType.athrow"
      return_annotation {
        pretty_printed_name: "typing.Awaitable[types._T_co]"
        args {
          pretty_printed_name: "types._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Awaitable"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "types.AsyncGeneratorType[types._T_co,types._T_contra]"
          args {
            pretty_printed_name: "types._T_co"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "types._T_contra"
            kind: TYPE_VAR
          }
          fully_qualified_name: "types.AsyncGeneratorType"
        }
      }
      parameters {
        name: "__typ"
        type_annotation {
          pretty_printed_name: "Type[builtins.BaseException]"
          kind: TYPE
          args {
            pretty_printed_name: "builtins.BaseException"
            fully_qualified_name: "builtins.BaseException"
          }
        }
      }
      parameters {
        name: "__val"
        type_annotation {
          pretty_printed_name: "Union[builtins.BaseException,builtins.object]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.BaseException"
            fully_qualified_name: "builtins.BaseException"
          }
          args {
            pretty_printed_name: "builtins.object"
            fully_qualified_name: "builtins.object"
          }
        }
        has_default: true
      }
      parameters {
        name: "__tb"
        type_annotation {
          pretty_printed_name: "Union[types.TracebackType,None]"
          kind: UNION
          args {
            pretty_printed_name: "types.TracebackType"
            fully_qualified_name: "types.TracebackType"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "athrow"
      fully_qualified_name: "types.AsyncGeneratorType.athrow"
      return_annotation {
        pretty_printed_name: "typing.Awaitable[types._T_co]"
        args {
          pretty_printed_name: "types._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Awaitable"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "types.AsyncGeneratorType[types._T_co,types._T_contra]"
          args {
            pretty_printed_name: "types._T_co"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "types._T_contra"
            kind: TYPE_VAR
          }
          fully_qualified_name: "types.AsyncGeneratorType"
        }
      }
      parameters {
        name: "__typ"
        type_annotation {
          pretty_printed_name: "builtins.BaseException"
          fully_qualified_name: "builtins.BaseException"
        }
      }
      parameters {
        name: "__val"
        type_annotation {
          pretty_printed_name: "None"
          kind: NONE
        }
        has_default: true
      }
      parameters {
        name: "__tb"
        type_annotation {
          pretty_printed_name: "Union[types.TracebackType,None]"
          kind: UNION
          args {
            pretty_printed_name: "types.TracebackType"
            fully_qualified_name: "types.TracebackType"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  is_generic: true
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "ag_await"
    fully_qualified_name: "types.AsyncGeneratorType.ag_await"
    type_annotation {
      pretty_printed_name: "Union[typing.Awaitable[Any],None]"
      kind: UNION
      args {
        pretty_printed_name: "typing.Awaitable[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "typing.Awaitable"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "ag_frame"
    fully_qualified_name: "types.AsyncGeneratorType.ag_frame"
    type_annotation {
      pretty_printed_name: "types.FrameType"
      fully_qualified_name: "types.FrameType"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "ag_running"
    fully_qualified_name: "types.AsyncGeneratorType.ag_running"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "ag_code"
    fully_qualified_name: "types.AsyncGeneratorType.ag_code"
    type_annotation {
      pretty_printed_name: "types.CodeType"
      fully_qualified_name: "types.CodeType"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "CoroutineType"
  fully_qualified_name: "types.CoroutineType"
  super_classes: "builtins.object"
  methods {
    name: "close"
    fully_qualified_name: "types.CoroutineType.close"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "types.CoroutineType"
        fully_qualified_name: "types.CoroutineType"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "send"
    fully_qualified_name: "types.CoroutineType.send"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "types.CoroutineType"
        fully_qualified_name: "types.CoroutineType"
      }
    }
    parameters {
      name: "__arg"
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "throw"
    fullname: "types.CoroutineType.throw"
    definitions {
      name: "throw"
      fully_qualified_name: "types.CoroutineType.throw"
      return_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "types.CoroutineType"
          fully_qualified_name: "types.CoroutineType"
        }
      }
      parameters {
        name: "__typ"
        type_annotation {
          pretty_printed_name: "Type[builtins.BaseException]"
          kind: TYPE
          args {
            pretty_printed_name: "builtins.BaseException"
            fully_qualified_name: "builtins.BaseException"
          }
        }
      }
      parameters {
        name: "__val"
        type_annotation {
          pretty_printed_name: "Union[builtins.BaseException,builtins.object]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.BaseException"
            fully_qualified_name: "builtins.BaseException"
          }
          args {
            pretty_printed_name: "builtins.object"
            fully_qualified_name: "builtins.object"
          }
        }
        has_default: true
      }
      parameters {
        name: "__tb"
        type_annotation {
          pretty_printed_name: "Union[types.TracebackType,None]"
          kind: UNION
          args {
            pretty_printed_name: "types.TracebackType"
            fully_qualified_name: "types.TracebackType"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "throw"
      fully_qualified_name: "types.CoroutineType.throw"
      return_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "types.CoroutineType"
          fully_qualified_name: "types.CoroutineType"
        }
      }
      parameters {
        name: "__typ"
        type_annotation {
          pretty_printed_name: "builtins.BaseException"
          fully_qualified_name: "builtins.BaseException"
        }
      }
      parameters {
        name: "__val"
        type_annotation {
          pretty_printed_name: "None"
          kind: NONE
        }
        has_default: true
      }
      parameters {
        name: "__tb"
        type_annotation {
          pretty_printed_name: "Union[types.TracebackType,None]"
          kind: UNION
          args {
            pretty_printed_name: "types.TracebackType"
            fully_qualified_name: "types.TracebackType"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "cr_await"
    fully_qualified_name: "types.CoroutineType.cr_await"
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "cr_code"
    fully_qualified_name: "types.CoroutineType.cr_code"
    type_annotation {
      pretty_printed_name: "types.CodeType"
      fully_qualified_name: "types.CodeType"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "cr_frame"
    fully_qualified_name: "types.CoroutineType.cr_frame"
    type_annotation {
      pretty_printed_name: "types.FrameType"
      fully_qualified_name: "types.FrameType"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "cr_running"
    fully_qualified_name: "types.CoroutineType.cr_running"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "_StaticFunctionType"
  fully_qualified_name: "types._StaticFunctionType"
  super_classes: "builtins.object"
  methods {
    name: "__get__"
    fully_qualified_name: "types._StaticFunctionType.__get__"
    return_annotation {
      pretty_printed_name: "types.FunctionType"
      fully_qualified_name: "types.FunctionType"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "types._StaticFunctionType"
        fully_qualified_name: "types._StaticFunctionType"
      }
    }
    parameters {
      name: "obj"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.object,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.object"
          fully_qualified_name: "builtins.object"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "type"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.type,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.type"
          fully_qualified_name: "builtins.type"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "MethodType"
  fully_qualified_name: "types.MethodType"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "types.MethodType.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "types.MethodType"
        fully_qualified_name: "types.MethodType"
      }
    }
    parameters {
      name: "func"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    parameters {
      name: "obj"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__call__"
    fully_qualified_name: "types.MethodType.__call__"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "types.MethodType"
        fully_qualified_name: "types.MethodType"
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "kwargs"
      kind: VAR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "__closure__"
    fully_qualified_name: "types.MethodType.__closure__"
    type_annotation {
      pretty_printed_name: "Union[builtins.tuple[types._Cell],None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.tuple[types._Cell]"
        args {
          pretty_printed_name: "types._Cell"
          fully_qualified_name: "types._Cell"
        }
        fully_qualified_name: "builtins.tuple"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "__defaults__"
    fully_qualified_name: "types.MethodType.__defaults__"
    type_annotation {
      pretty_printed_name: "Union[builtins.tuple[Any],None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.tuple[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "builtins.tuple"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "__func__"
    fully_qualified_name: "types.MethodType.__func__"
    type_annotation {
      pretty_printed_name: "types._StaticFunctionType"
      fully_qualified_name: "types._StaticFunctionType"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "__self__"
    fully_qualified_name: "types.MethodType.__self__"
    type_annotation {
      pretty_printed_name: "builtins.object"
      fully_qualified_name: "builtins.object"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "__qualname__"
    fully_qualified_name: "types.MethodType.__qualname__"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "WrapperDescriptorType"
  fully_qualified_name: "types.WrapperDescriptorType"
  super_classes: "builtins.object"
  methods {
    name: "__call__"
    fully_qualified_name: "types.WrapperDescriptorType.__call__"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "types.WrapperDescriptorType"
        fully_qualified_name: "types.WrapperDescriptorType"
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "kwargs"
      kind: VAR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__get__"
    fully_qualified_name: "types.WrapperDescriptorType.__get__"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "types.WrapperDescriptorType"
        fully_qualified_name: "types.WrapperDescriptorType"
      }
    }
    parameters {
      name: "obj"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "type"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.type"
        fully_qualified_name: "builtins.type"
      }
      has_default: true
    }
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "__qualname__"
    fully_qualified_name: "types.WrapperDescriptorType.__qualname__"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "__objclass__"
    fully_qualified_name: "types.WrapperDescriptorType.__objclass__"
    type_annotation {
      pretty_printed_name: "builtins.type"
      fully_qualified_name: "builtins.type"
    }
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "MethodWrapperType"
  fully_qualified_name: "types.MethodWrapperType"
  super_classes: "builtins.object"
  methods {
    name: "__call__"
    fully_qualified_name: "types.MethodWrapperType.__call__"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "types.MethodWrapperType"
        fully_qualified_name: "types.MethodWrapperType"
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "kwargs"
      kind: VAR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__eq__"
    fully_qualified_name: "types.MethodWrapperType.__eq__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "types.MethodWrapperType"
        fully_qualified_name: "types.MethodWrapperType"
      }
    }
    parameters {
      name: "other"
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__ne__"
    fully_qualified_name: "types.MethodWrapperType.__ne__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "types.MethodWrapperType"
        fully_qualified_name: "types.MethodWrapperType"
      }
    }
    parameters {
      name: "other"
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "__self__"
    fully_qualified_name: "types.MethodWrapperType.__self__"
    type_annotation {
      pretty_printed_name: "builtins.object"
      fully_qualified_name: "builtins.object"
    }
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "__qualname__"
    fully_qualified_name: "types.MethodWrapperType.__qualname__"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "__objclass__"
    fully_qualified_name: "types.MethodWrapperType.__objclass__"
    type_annotation {
      pretty_printed_name: "builtins.type"
      fully_qualified_name: "builtins.type"
    }
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "MethodDescriptorType"
  fully_qualified_name: "types.MethodDescriptorType"
  super_classes: "builtins.object"
  methods {
    name: "__call__"
    fully_qualified_name: "types.MethodDescriptorType.__call__"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "types.MethodDescriptorType"
        fully_qualified_name: "types.MethodDescriptorType"
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "kwargs"
      kind: VAR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__get__"
    fully_qualified_name: "types.MethodDescriptorType.__get__"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "types.MethodDescriptorType"
        fully_qualified_name: "types.MethodDescriptorType"
      }
    }
    parameters {
      name: "obj"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "type"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.type"
        fully_qualified_name: "builtins.type"
      }
      has_default: true
    }
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "__qualname__"
    fully_qualified_name: "types.MethodDescriptorType.__qualname__"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "__objclass__"
    fully_qualified_name: "types.MethodDescriptorType.__objclass__"
    type_annotation {
      pretty_printed_name: "builtins.type"
      fully_qualified_name: "builtins.type"
    }
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "ClassMethodDescriptorType"
  fully_qualified_name: "types.ClassMethodDescriptorType"
  super_classes: "builtins.object"
  methods {
    name: "__call__"
    fully_qualified_name: "types.ClassMethodDescriptorType.__call__"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "types.ClassMethodDescriptorType"
        fully_qualified_name: "types.ClassMethodDescriptorType"
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "kwargs"
      kind: VAR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__get__"
    fully_qualified_name: "types.ClassMethodDescriptorType.__get__"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "types.ClassMethodDescriptorType"
        fully_qualified_name: "types.ClassMethodDescriptorType"
      }
    }
    parameters {
      name: "obj"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "type"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.type"
        fully_qualified_name: "builtins.type"
      }
      has_default: true
    }
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "__qualname__"
    fully_qualified_name: "types.ClassMethodDescriptorType.__qualname__"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "__objclass__"
    fully_qualified_name: "types.ClassMethodDescriptorType.__objclass__"
    type_annotation {
      pretty_printed_name: "builtins.type"
      fully_qualified_name: "builtins.type"
    }
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "GenericAlias"
  fully_qualified_name: "types.GenericAlias"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "types.GenericAlias.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "types.GenericAlias"
        fully_qualified_name: "types.GenericAlias"
      }
    }
    parameters {
      name: "origin"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.type"
        fully_qualified_name: "builtins.type"
      }
    }
    parameters {
      name: "args"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__getattr__"
    fully_qualified_name: "types.GenericAlias.__getattr__"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "types.GenericAlias"
        fully_qualified_name: "types.GenericAlias"
      }
    }
    parameters {
      name: "name"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "__origin__"
    fully_qualified_name: "types.GenericAlias.__origin__"
    type_annotation {
      pretty_printed_name: "builtins.type"
      fully_qualified_name: "builtins.type"
    }
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "__args__"
    fully_qualified_name: "types.GenericAlias.__args__"
    type_annotation {
      pretty_printed_name: "builtins.tuple[Any]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "builtins.tuple"
    }
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "__parameters__"
    fully_qualified_name: "types.GenericAlias.__parameters__"
    type_annotation {
      pretty_printed_name: "builtins.tuple[Any]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "builtins.tuple"
    }
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "Union"
  fully_qualified_name: "types.Union"
  super_classes: "builtins.object"
  methods {
    name: "__or__"
    fully_qualified_name: "types.Union.__or__"
    return_annotation {
      pretty_printed_name: "types.Union"
      fully_qualified_name: "types.Union"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "types.Union"
        fully_qualified_name: "types.Union"
      }
    }
    parameters {
      name: "obj"
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "310"
  }
  methods {
    name: "__ror__"
    fully_qualified_name: "types.Union.__ror__"
    return_annotation {
      pretty_printed_name: "types.Union"
      fully_qualified_name: "types.Union"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "types.Union"
        fully_qualified_name: "types.Union"
      }
    }
    parameters {
      name: "obj"
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "310"
  }
  valid_for: "310"
  attributes {
    name: "__args__"
    fully_qualified_name: "types.Union.__args__"
    type_annotation {
      pretty_printed_name: "builtins.tuple[Any]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "builtins.tuple"
    }
    valid_for: "310"
  }
}
functions {
  name: "new_class"
  fully_qualified_name: "types.new_class"
  return_annotation {
    pretty_printed_name: "builtins.type"
    fully_qualified_name: "builtins.type"
  }
  parameters {
    name: "name"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  parameters {
    name: "bases"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.tuple[builtins.type]"
      args {
        pretty_printed_name: "builtins.type"
        fully_qualified_name: "builtins.type"
      }
      fully_qualified_name: "builtins.tuple"
    }
    has_default: true
  }
  parameters {
    name: "kwds"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.dict[builtins.str,Any],None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.dict[builtins.str,Any]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "builtins.dict"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "exec_body"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[CallableType[builtins.function],None]"
      kind: UNION
      args {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
}
functions {
  name: "new_class"
  fully_qualified_name: "types.new_class"
  return_annotation {
    pretty_printed_name: "builtins.type"
    fully_qualified_name: "builtins.type"
  }
  parameters {
    name: "name"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  parameters {
    name: "bases"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "typing.Iterable[builtins.object]"
      args {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
      fully_qualified_name: "typing.Iterable"
    }
    has_default: true
  }
  parameters {
    name: "kwds"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.dict[builtins.str,Any],None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.dict[builtins.str,Any]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "builtins.dict"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "exec_body"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[CallableType[builtins.function],None]"
      kind: UNION
      args {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "prepare_class"
  fully_qualified_name: "types.prepare_class"
  return_annotation {
    pretty_printed_name: "Tuple[builtins.type,builtins.dict[builtins.str,Any],builtins.dict[builtins.str,Any]]"
    kind: TUPLE
    args {
      pretty_printed_name: "builtins.type"
      fully_qualified_name: "builtins.type"
    }
    args {
      pretty_printed_name: "builtins.dict[builtins.str,Any]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "builtins.dict"
    }
    args {
      pretty_printed_name: "builtins.dict[builtins.str,Any]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "builtins.dict"
    }
  }
  parameters {
    name: "name"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  parameters {
    name: "bases"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.tuple[builtins.type]"
      args {
        pretty_printed_name: "builtins.type"
        fully_qualified_name: "builtins.type"
      }
      fully_qualified_name: "builtins.tuple"
    }
    has_default: true
  }
  parameters {
    name: "kwds"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.dict[builtins.str,Any],None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.dict[builtins.str,Any]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "builtins.dict"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "coroutine"
  fully_qualified_name: "types.coroutine"
  return_annotation {
    pretty_printed_name: "types.CoroutineType"
    fully_qualified_name: "types.CoroutineType"
  }
  parameters {
    name: "func"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "CallableType[builtins.function]"
      kind: CALLABLE
      args {
        pretty_printed_name: "builtins.function"
        fully_qualified_name: "builtins.function"
      }
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "resolve_bases"
  fully_qualified_name: "types.resolve_bases"
  return_annotation {
    pretty_printed_name: "builtins.tuple[Any]"
    args {
      pretty_printed_name: "Any"
      kind: ANY
    }
    fully_qualified_name: "builtins.tuple"
  }
  parameters {
    name: "bases"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "typing.Iterable[builtins.object]"
      args {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
      fully_qualified_name: "typing.Iterable"
    }
  }
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "StringTypes"
  fully_qualified_name: "types.StringTypes"
  type_annotation {
    pretty_printed_name: "Tuple[Type[builtins.str],Type[builtins.unicode]]"
    kind: TUPLE
    args {
      pretty_printed_name: "Type[builtins.str]"
      kind: TYPE
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    args {
      pretty_printed_name: "Type[builtins.unicode]"
      kind: TYPE
      args {
        pretty_printed_name: "builtins.unicode"
        fully_qualified_name: "builtins.unicode"
      }
    }
  }
  valid_for: "27"
}
