fully_qualified_name: "_tracemalloc"
functions {
  name: "_get_object_traceback"
  fully_qualified_name: "_tracemalloc._get_object_traceback"
  return_annotation {
    pretty_printed_name: "Union[typing.Sequence[UnboundType[_FrameTuple]],None]"
    kind: UNION
    args {
      pretty_printed_name: "typing.Sequence[UnboundType[_FrameTuple]]"
      args {
        pretty_printed_name: "UnboundType[_FrameTuple]"
        kind: UNBOUND
      }
      fully_qualified_name: "typing.Sequence"
    }
    args {
      pretty_printed_name: "None"
      kind: NONE
    }
  }
  parameters {
    name: "__obj"
    type_annotation {
      pretty_printed_name: "builtins.object"
      fully_qualified_name: "builtins.object"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "_get_traces"
  fully_qualified_name: "_tracemalloc._get_traces"
  return_annotation {
    pretty_printed_name: "typing.Sequence[UnboundType[_TraceTuple]]"
    args {
      pretty_printed_name: "UnboundType[_TraceTuple]"
      kind: UNBOUND
    }
    fully_qualified_name: "typing.Sequence"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "clear_traces"
  fully_qualified_name: "_tracemalloc.clear_traces"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "get_traceback_limit"
  fully_qualified_name: "_tracemalloc.get_traceback_limit"
  return_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "get_traced_memory"
  fully_qualified_name: "_tracemalloc.get_traced_memory"
  return_annotation {
    pretty_printed_name: "Tuple[builtins.int,builtins.int]"
    kind: TUPLE
    args {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    args {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "get_tracemalloc_memory"
  fully_qualified_name: "_tracemalloc.get_tracemalloc_memory"
  return_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "is_tracing"
  fully_qualified_name: "_tracemalloc.is_tracing"
  return_annotation {
    pretty_printed_name: "builtins.bool"
    fully_qualified_name: "builtins.bool"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "start"
  fully_qualified_name: "_tracemalloc.start"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "__nframe"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "stop"
  fully_qualified_name: "_tracemalloc.stop"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "reset_peak"
  fully_qualified_name: "_tracemalloc.reset_peak"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  valid_for: "39"
  valid_for: "310"
}
