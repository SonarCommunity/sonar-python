fully_qualified_name: "builtins"
classes {
  name: "object"
  fully_qualified_name: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "builtins.object.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__new__"
    fully_qualified_name: "builtins.object.__new__"
    return_annotation {
      pretty_printed_name: "UnboundType[Self]"
      kind: UNBOUND
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[builtins.object]"
        kind: TYPE
        args {
          pretty_printed_name: "builtins.object"
          fully_qualified_name: "builtins.object"
        }
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__setattr__"
    fully_qualified_name: "builtins.object.__setattr__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
    parameters {
      name: "__name"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__delattr__"
    fully_qualified_name: "builtins.object.__delattr__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
    parameters {
      name: "__name"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__eq__"
    fully_qualified_name: "builtins.object.__eq__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__ne__"
    fully_qualified_name: "builtins.object.__ne__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__str__"
    fully_qualified_name: "builtins.object.__str__"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__repr__"
    fully_qualified_name: "builtins.object.__repr__"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__hash__"
    fully_qualified_name: "builtins.object.__hash__"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__format__"
    fully_qualified_name: "builtins.object.__format__"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
    parameters {
      name: "__format_spec"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__getattribute__"
    fully_qualified_name: "builtins.object.__getattribute__"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
    parameters {
      name: "__name"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__sizeof__"
    fully_qualified_name: "builtins.object.__sizeof__"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__reduce__"
    fully_qualified_name: "builtins.object.__reduce__"
    return_annotation {
      pretty_printed_name: "Union[builtins.str,Tuple[Any,Any]]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "Tuple[Any,Any]"
        kind: TUPLE
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
  }
  methods {
    name: "__reduce__"
    fully_qualified_name: "builtins.object.__reduce__"
    return_annotation {
      pretty_printed_name: "Union[builtins.str,builtins.tuple[Any]]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.tuple[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "builtins.tuple"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__reduce_ex__"
    fully_qualified_name: "builtins.object.__reduce_ex__"
    return_annotation {
      pretty_printed_name: "Union[builtins.str,Tuple[Any,Any]]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "Tuple[Any,Any]"
        kind: TUPLE
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
    parameters {
      name: "__protocol"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
  }
  methods {
    name: "__reduce_ex__"
    fully_qualified_name: "builtins.object.__reduce_ex__"
    return_annotation {
      pretty_printed_name: "Union[builtins.str,Tuple[Any,Any]]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "Tuple[Any,Any]"
        kind: TUPLE
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
    parameters {
      name: "__protocol"
      type_annotation {
        pretty_printed_name: "typing_extensions.SupportsIndex"
        fully_qualified_name: "typing_extensions.SupportsIndex"
      }
    }
    valid_for: "38"
  }
  methods {
    name: "__reduce_ex__"
    fully_qualified_name: "builtins.object.__reduce_ex__"
    return_annotation {
      pretty_printed_name: "Union[builtins.str,builtins.tuple[Any]]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.tuple[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "builtins.tuple"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
    parameters {
      name: "__protocol"
      type_annotation {
        pretty_printed_name: "typing_extensions.SupportsIndex"
        fully_qualified_name: "typing_extensions.SupportsIndex"
      }
    }
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__dir__"
    fully_qualified_name: "builtins.object.__dir__"
    return_annotation {
      pretty_printed_name: "typing.Iterable[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "typing.Iterable"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__init_subclass__"
    fully_qualified_name: "builtins.object.__init_subclass__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[builtins.object]"
        kind: TYPE
        args {
          pretty_printed_name: "builtins.object"
          fully_qualified_name: "builtins.object"
        }
      }
    }
    is_class_method: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__subclasshook__"
    fully_qualified_name: "builtins.object.__subclasshook__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[builtins.object]"
        kind: TYPE
        args {
          pretty_printed_name: "builtins.object"
          fully_qualified_name: "builtins.object"
        }
      }
    }
    parameters {
      name: "__subclass"
      type_annotation {
        pretty_printed_name: "builtins.type"
        fully_qualified_name: "builtins.type"
      }
    }
    has_decorators: true
    resolved_decorator_names: "classmethod"
    is_class_method: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "__class__"
    fullname: "builtins.object.__class__"
    definitions {
      name: "__class__"
      fully_qualified_name: "builtins.object.__class__"
      return_annotation {
        pretty_printed_name: "builtins.type"
        fully_qualified_name: "builtins.type"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.object"
          fully_qualified_name: "builtins.object"
        }
      }
      has_decorators: true
      resolved_decorator_names: "property"
      is_overload: true
      is_property: true
    }
    definitions {
      name: "__class__"
      fully_qualified_name: "builtins.object.__class__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.object"
          fully_qualified_name: "builtins.object"
        }
      }
      parameters {
        name: "__type"
        type_annotation {
          pretty_printed_name: "builtins.type"
          fully_qualified_name: "builtins.type"
        }
      }
      has_decorators: true
      resolved_decorator_names: "__class__.setter"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
  }
  overloaded_methods {
    name: "__class__"
    fullname: "builtins.object.__class__"
    definitions {
      name: "__class__"
      fully_qualified_name: "builtins.object.__class__"
      return_annotation {
        pretty_printed_name: "Type[UnboundType[Self]]"
        kind: TYPE
        args {
          pretty_printed_name: "UnboundType[Self]"
          kind: UNBOUND
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.object"
          fully_qualified_name: "builtins.object"
        }
      }
      has_decorators: true
      resolved_decorator_names: "property"
      is_overload: true
      is_property: true
    }
    definitions {
      name: "__class__"
      fully_qualified_name: "builtins.object.__class__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.object"
          fully_qualified_name: "builtins.object"
        }
      }
      parameters {
        name: "__type"
        type_annotation {
          pretty_printed_name: "Type[builtins.object]"
          kind: TYPE
          args {
            pretty_printed_name: "builtins.object"
            fully_qualified_name: "builtins.object"
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "__class__.setter"
    }
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "__dict__"
    fully_qualified_name: "builtins.object.__dict__"
    type_annotation {
      pretty_printed_name: "builtins.dict[builtins.str,Any]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "builtins.dict"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "__module__"
    fully_qualified_name: "builtins.object.__module__"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "__annotations__"
    fully_qualified_name: "builtins.object.__annotations__"
    type_annotation {
      pretty_printed_name: "builtins.dict[builtins.str,Any]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "builtins.dict"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "bool"
  fully_qualified_name: "builtins.bool"
  super_classes: "builtins.int"
  methods {
    name: "__new__"
    fully_qualified_name: "builtins.bool.__new__"
    return_annotation {
      pretty_printed_name: "UnboundType[Self]"
      kind: UNBOUND
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[builtins.bool]"
        kind: TYPE
        args {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
      }
    }
    parameters {
      name: "__o"
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__getnewargs__"
    fully_qualified_name: "builtins.bool.__getnewargs__"
    return_annotation {
      pretty_printed_name: "Tuple[builtins.int]"
      kind: TUPLE
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "__and__"
    fullname: "builtins.bool.__and__"
    definitions {
      name: "__and__"
      fully_qualified_name: "builtins.bool.__and__"
      return_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
      }
      parameters {
        name: "__value"
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__and__"
      fully_qualified_name: "builtins.bool.__and__"
      return_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
      }
      parameters {
        name: "__value"
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "__or__"
    fullname: "builtins.bool.__or__"
    definitions {
      name: "__or__"
      fully_qualified_name: "builtins.bool.__or__"
      return_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
      }
      parameters {
        name: "__value"
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__or__"
      fully_qualified_name: "builtins.bool.__or__"
      return_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
      }
      parameters {
        name: "__value"
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "__xor__"
    fullname: "builtins.bool.__xor__"
    definitions {
      name: "__xor__"
      fully_qualified_name: "builtins.bool.__xor__"
      return_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
      }
      parameters {
        name: "__value"
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__xor__"
      fully_qualified_name: "builtins.bool.__xor__"
      return_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
      }
      parameters {
        name: "__value"
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "__rand__"
    fullname: "builtins.bool.__rand__"
    definitions {
      name: "__rand__"
      fully_qualified_name: "builtins.bool.__rand__"
      return_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
      }
      parameters {
        name: "__value"
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__rand__"
      fully_qualified_name: "builtins.bool.__rand__"
      return_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
      }
      parameters {
        name: "__value"
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "__ror__"
    fullname: "builtins.bool.__ror__"
    definitions {
      name: "__ror__"
      fully_qualified_name: "builtins.bool.__ror__"
      return_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
      }
      parameters {
        name: "__value"
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__ror__"
      fully_qualified_name: "builtins.bool.__ror__"
      return_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
      }
      parameters {
        name: "__value"
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "__rxor__"
    fullname: "builtins.bool.__rxor__"
    definitions {
      name: "__rxor__"
      fully_qualified_name: "builtins.bool.__rxor__"
      return_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
      }
      parameters {
        name: "__value"
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__rxor__"
      fully_qualified_name: "builtins.bool.__rxor__"
      return_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
      }
      parameters {
        name: "__value"
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  has_decorators: true
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "function"
  fully_qualified_name: "builtins.function"
  super_classes: "builtins.object"
  methods {
    name: "__closure__"
    fully_qualified_name: "builtins.function.__closure__"
    return_annotation {
      pretty_printed_name: "Union[Tuple[types._Cell,Any],None]"
      kind: UNION
      args {
        pretty_printed_name: "Tuple[types._Cell,Any]"
        kind: TUPLE
        args {
          pretty_printed_name: "types._Cell"
          fully_qualified_name: "types._Cell"
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.function"
        fully_qualified_name: "builtins.function"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
  }
  methods {
    name: "__closure__"
    fully_qualified_name: "builtins.function.__closure__"
    return_annotation {
      pretty_printed_name: "Union[builtins.tuple[types._Cell],None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.tuple[types._Cell]"
        args {
          pretty_printed_name: "types._Cell"
          fully_qualified_name: "types._Cell"
        }
        fully_qualified_name: "builtins.tuple"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.function"
        fully_qualified_name: "builtins.function"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__globals__"
    fully_qualified_name: "builtins.function.__globals__"
    return_annotation {
      pretty_printed_name: "builtins.dict[builtins.str,Any]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "builtins.dict"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.function"
        fully_qualified_name: "builtins.function"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__get__"
    fully_qualified_name: "builtins.function.__get__"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.function"
        fully_qualified_name: "builtins.function"
      }
    }
    parameters {
      name: "__instance"
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
    parameters {
      name: "__owner"
      type_annotation {
        pretty_printed_name: "Union[builtins.type,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.type"
          fully_qualified_name: "builtins.type"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__builtins__"
    fully_qualified_name: "builtins.function.__builtins__"
    return_annotation {
      pretty_printed_name: "builtins.dict[builtins.str,Any]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "builtins.dict"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.function"
        fully_qualified_name: "builtins.function"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "310"
  }
  has_decorators: true
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "__code__"
    fully_qualified_name: "builtins.function.__code__"
    type_annotation {
      pretty_printed_name: "types.CodeType"
      fully_qualified_name: "types.CodeType"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "__defaults__"
    fully_qualified_name: "builtins.function.__defaults__"
    type_annotation {
      pretty_printed_name: "Union[Tuple[Any,Any],None]"
      kind: UNION
      args {
        pretty_printed_name: "Tuple[Any,Any]"
        kind: TUPLE
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
  }
  attributes {
    name: "__defaults__"
    fully_qualified_name: "builtins.function.__defaults__"
    type_annotation {
      pretty_printed_name: "Union[builtins.tuple[Any],None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.tuple[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "builtins.tuple"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "__dict__"
    fully_qualified_name: "builtins.function.__dict__"
    type_annotation {
      pretty_printed_name: "builtins.dict[builtins.str,Any]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "builtins.dict"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "__qualname__"
    fully_qualified_name: "builtins.function.__qualname__"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "__annotations__"
    fully_qualified_name: "builtins.function.__annotations__"
    type_annotation {
      pretty_printed_name: "builtins.dict[builtins.str,Any]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "builtins.dict"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "__kwdefaults__"
    fully_qualified_name: "builtins.function.__kwdefaults__"
    type_annotation {
      pretty_printed_name: "builtins.dict[builtins.str,Any]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "builtins.dict"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "__module__"
    fully_qualified_name: "builtins.function.__module__"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "staticmethod"
  fully_qualified_name: "builtins.staticmethod"
  super_classes: "builtins.object"
  methods {
    name: "__func__"
    fully_qualified_name: "builtins.staticmethod.__func__"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.staticmethod[builtins._R_co]"
        args {
          pretty_printed_name: "builtins._R_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.staticmethod"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__isabstractmethod__"
    fully_qualified_name: "builtins.staticmethod.__isabstractmethod__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.staticmethod[builtins._R_co]"
        args {
          pretty_printed_name: "builtins._R_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.staticmethod"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__init__"
    fully_qualified_name: "builtins.staticmethod.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.staticmethod[builtins._R_co]"
        args {
          pretty_printed_name: "builtins._R_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.staticmethod"
      }
    }
    parameters {
      name: "__f"
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__get__"
    fully_qualified_name: "builtins.staticmethod.__get__"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.staticmethod[builtins._R_co]"
        args {
          pretty_printed_name: "builtins._R_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.staticmethod"
      }
    }
    parameters {
      name: "__instance"
      type_annotation {
        pretty_printed_name: "builtins._T"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "__owner"
      type_annotation {
        pretty_printed_name: "Union[builtins.type,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.type"
          fully_qualified_name: "builtins.type"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
  }
  methods {
    name: "__get__"
    fully_qualified_name: "builtins.staticmethod.__get__"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.staticmethod[builtins._R_co]"
        args {
          pretty_printed_name: "builtins._R_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.staticmethod"
      }
    }
    parameters {
      name: "__instance"
      type_annotation {
        pretty_printed_name: "builtins._T"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "__owner"
      type_annotation {
        pretty_printed_name: "Union[Type[builtins._T],None]"
        kind: UNION
        args {
          pretty_printed_name: "Type[builtins._T]"
          kind: TYPE
          args {
            pretty_printed_name: "builtins._T"
            kind: TYPE_VAR
          }
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__wrapped__"
    fully_qualified_name: "builtins.staticmethod.__wrapped__"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.staticmethod[builtins._R_co]"
        args {
          pretty_printed_name: "builtins._R_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.staticmethod"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "310"
  }
  methods {
    name: "__call__"
    fully_qualified_name: "builtins.staticmethod.__call__"
    return_annotation {
      pretty_printed_name: "builtins._R_co"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.staticmethod[builtins._R_co]"
        args {
          pretty_printed_name: "builtins._R_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.staticmethod"
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "kwargs"
      kind: VAR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "310"
  }
  is_generic: true
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "__qualname__"
    fully_qualified_name: "builtins.staticmethod.__qualname__"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "310"
  }
}
classes {
  name: "classmethod"
  fully_qualified_name: "builtins.classmethod"
  super_classes: "builtins.object"
  methods {
    name: "__func__"
    fully_qualified_name: "builtins.classmethod.__func__"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.classmethod[builtins._T,builtins._R_co]"
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "builtins._R_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.classmethod"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__isabstractmethod__"
    fully_qualified_name: "builtins.classmethod.__isabstractmethod__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.classmethod[builtins._T,builtins._R_co]"
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "builtins._R_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.classmethod"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__init__"
    fully_qualified_name: "builtins.classmethod.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.classmethod[builtins._T,builtins._R_co]"
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "builtins._R_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.classmethod"
      }
    }
    parameters {
      name: "__f"
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__get__"
    fully_qualified_name: "builtins.classmethod.__get__"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.classmethod[builtins._T,builtins._R_co]"
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "builtins._R_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.classmethod"
      }
    }
    parameters {
      name: "__instance"
      type_annotation {
        pretty_printed_name: "builtins._T"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "__owner"
      type_annotation {
        pretty_printed_name: "Union[builtins.type,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.type"
          fully_qualified_name: "builtins.type"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
  }
  methods {
    name: "__get__"
    fully_qualified_name: "builtins.classmethod.__get__"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.classmethod[builtins._T,builtins._R_co]"
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "builtins._R_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.classmethod"
      }
    }
    parameters {
      name: "__instance"
      type_annotation {
        pretty_printed_name: "builtins._T"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "__owner"
      type_annotation {
        pretty_printed_name: "Union[Type[builtins._T],None]"
        kind: UNION
        args {
          pretty_printed_name: "Type[builtins._T]"
          kind: TYPE
          args {
            pretty_printed_name: "builtins._T"
            kind: TYPE_VAR
          }
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__wrapped__"
    fully_qualified_name: "builtins.classmethod.__wrapped__"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.classmethod[builtins._T,builtins._R_co]"
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "builtins._R_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.classmethod"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "310"
  }
  is_generic: true
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "__qualname__"
    fully_qualified_name: "builtins.classmethod.__qualname__"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "310"
  }
}
classes {
  name: "type"
  fully_qualified_name: "builtins.type"
  super_classes: "builtins.object"
  methods {
    name: "__base__"
    fully_qualified_name: "builtins.type.__base__"
    return_annotation {
      pretty_printed_name: "builtins.type"
      fully_qualified_name: "builtins.type"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.type"
        fully_qualified_name: "builtins.type"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__basicsize__"
    fully_qualified_name: "builtins.type.__basicsize__"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.type"
        fully_qualified_name: "builtins.type"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__dict__"
    fully_qualified_name: "builtins.type.__dict__"
    return_annotation {
      pretty_printed_name: "types.MappingProxyType[builtins.str,Any]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "types.MappingProxyType"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.type"
        fully_qualified_name: "builtins.type"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__dictoffset__"
    fully_qualified_name: "builtins.type.__dictoffset__"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.type"
        fully_qualified_name: "builtins.type"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__flags__"
    fully_qualified_name: "builtins.type.__flags__"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.type"
        fully_qualified_name: "builtins.type"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__itemsize__"
    fully_qualified_name: "builtins.type.__itemsize__"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.type"
        fully_qualified_name: "builtins.type"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__mro__"
    fully_qualified_name: "builtins.type.__mro__"
    return_annotation {
      pretty_printed_name: "Tuple[builtins.type,Any]"
      kind: TUPLE
      args {
        pretty_printed_name: "builtins.type"
        fully_qualified_name: "builtins.type"
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.type"
        fully_qualified_name: "builtins.type"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
  }
  methods {
    name: "__mro__"
    fully_qualified_name: "builtins.type.__mro__"
    return_annotation {
      pretty_printed_name: "builtins.tuple[builtins.type]"
      args {
        pretty_printed_name: "builtins.type"
        fully_qualified_name: "builtins.type"
      }
      fully_qualified_name: "builtins.tuple"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.type"
        fully_qualified_name: "builtins.type"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__text_signature__"
    fully_qualified_name: "builtins.type.__text_signature__"
    return_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.type"
        fully_qualified_name: "builtins.type"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__weakrefoffset__"
    fully_qualified_name: "builtins.type.__weakrefoffset__"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.type"
        fully_qualified_name: "builtins.type"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__call__"
    fully_qualified_name: "builtins.type.__call__"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.type"
        fully_qualified_name: "builtins.type"
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "kwds"
      kind: VAR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__subclasses__"
    fully_qualified_name: "builtins.type.__subclasses__"
    return_annotation {
      pretty_printed_name: "builtins.list[_typeshed.Self]"
      args {
        pretty_printed_name: "_typeshed.Self"
        kind: TYPE_VAR
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_typeshed.Self"
        kind: TYPE_VAR
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "mro"
    fully_qualified_name: "builtins.type.mro"
    return_annotation {
      pretty_printed_name: "builtins.list[builtins.type]"
      args {
        pretty_printed_name: "builtins.type"
        fully_qualified_name: "builtins.type"
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.type"
        fully_qualified_name: "builtins.type"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__instancecheck__"
    fully_qualified_name: "builtins.type.__instancecheck__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.type"
        fully_qualified_name: "builtins.type"
      }
    }
    parameters {
      name: "__instance"
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__subclasscheck__"
    fully_qualified_name: "builtins.type.__subclasscheck__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.type"
        fully_qualified_name: "builtins.type"
      }
    }
    parameters {
      name: "__subclass"
      type_annotation {
        pretty_printed_name: "builtins.type"
        fully_qualified_name: "builtins.type"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__prepare__"
    fully_qualified_name: "builtins.type.__prepare__"
    return_annotation {
      pretty_printed_name: "typing.Mapping[builtins.str,builtins.object]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
      fully_qualified_name: "typing.Mapping"
    }
    parameters {
      name: "metacls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[builtins.type]"
        kind: TYPE
        args {
          pretty_printed_name: "builtins.type"
          fully_qualified_name: "builtins.type"
        }
      }
    }
    parameters {
      name: "__name"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "__bases"
      type_annotation {
        pretty_printed_name: "Tuple[builtins.type,Any]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.type"
          fully_qualified_name: "builtins.type"
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
      }
    }
    parameters {
      name: "kwds"
      kind: VAR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    has_decorators: true
    resolved_decorator_names: "classmethod"
    is_class_method: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
  }
  methods {
    name: "__prepare__"
    fully_qualified_name: "builtins.type.__prepare__"
    return_annotation {
      pretty_printed_name: "typing.Mapping[builtins.str,builtins.object]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
      fully_qualified_name: "typing.Mapping"
    }
    parameters {
      name: "metacls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[builtins.type]"
        kind: TYPE
        args {
          pretty_printed_name: "builtins.type"
          fully_qualified_name: "builtins.type"
        }
      }
    }
    parameters {
      name: "__name"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "__bases"
      type_annotation {
        pretty_printed_name: "builtins.tuple[builtins.type]"
        args {
          pretty_printed_name: "builtins.type"
          fully_qualified_name: "builtins.type"
        }
        fully_qualified_name: "builtins.tuple"
      }
    }
    parameters {
      name: "kwds"
      kind: VAR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    has_decorators: true
    resolved_decorator_names: "classmethod"
    is_class_method: true
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__or__"
    fully_qualified_name: "builtins.type.__or__"
    return_annotation {
      pretty_printed_name: "types.UnionType"
      fully_qualified_name: "types.UnionType"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.type"
        fully_qualified_name: "builtins.type"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "310"
  }
  methods {
    name: "__ror__"
    fully_qualified_name: "builtins.type.__ror__"
    return_annotation {
      pretty_printed_name: "types.UnionType"
      fully_qualified_name: "types.UnionType"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.type"
        fully_qualified_name: "builtins.type"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "310"
  }
  overloaded_methods {
    name: "__init__"
    fullname: "builtins.type.__init__"
    definitions {
      name: "__init__"
      fully_qualified_name: "builtins.type.__init__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.type"
          fully_qualified_name: "builtins.type"
        }
      }
      parameters {
        name: "__o"
        type_annotation {
          pretty_printed_name: "builtins.object"
          fully_qualified_name: "builtins.object"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__init__"
      fully_qualified_name: "builtins.type.__init__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.type"
          fully_qualified_name: "builtins.type"
        }
      }
      parameters {
        name: "__name"
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      parameters {
        name: "__bases"
        type_annotation {
          pretty_printed_name: "Tuple[builtins.type,Any]"
          kind: TUPLE
          args {
            pretty_printed_name: "builtins.type"
            fully_qualified_name: "builtins.type"
          }
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
        }
      }
      parameters {
        name: "__dict"
        type_annotation {
          pretty_printed_name: "builtins.dict[builtins.str,Any]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "builtins.dict"
        }
      }
      parameters {
        name: "kwds"
        kind: VAR_KEYWORD
        type_annotation {
          pretty_printed_name: "Any"
          kind: ANY
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
  }
  overloaded_methods {
    name: "__init__"
    fullname: "builtins.type.__init__"
    definitions {
      name: "__init__"
      fully_qualified_name: "builtins.type.__init__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.type"
          fully_qualified_name: "builtins.type"
        }
      }
      parameters {
        name: "__o"
        type_annotation {
          pretty_printed_name: "builtins.object"
          fully_qualified_name: "builtins.object"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__init__"
      fully_qualified_name: "builtins.type.__init__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.type"
          fully_qualified_name: "builtins.type"
        }
      }
      parameters {
        name: "__name"
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      parameters {
        name: "__bases"
        type_annotation {
          pretty_printed_name: "builtins.tuple[builtins.type]"
          args {
            pretty_printed_name: "builtins.type"
            fully_qualified_name: "builtins.type"
          }
          fully_qualified_name: "builtins.tuple"
        }
      }
      parameters {
        name: "__dict"
        type_annotation {
          pretty_printed_name: "builtins.dict[builtins.str,Any]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "builtins.dict"
        }
      }
      parameters {
        name: "kwds"
        kind: VAR_KEYWORD
        type_annotation {
          pretty_printed_name: "Any"
          kind: ANY
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "__new__"
    fullname: "builtins.type.__new__"
    definitions {
      name: "__new__"
      fully_qualified_name: "builtins.type.__new__"
      return_annotation {
        pretty_printed_name: "builtins.type"
        fully_qualified_name: "builtins.type"
      }
      parameters {
        name: "cls"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Type[builtins.type]"
          kind: TYPE
          args {
            pretty_printed_name: "builtins.type"
            fully_qualified_name: "builtins.type"
          }
        }
      }
      parameters {
        name: "__o"
        type_annotation {
          pretty_printed_name: "builtins.object"
          fully_qualified_name: "builtins.object"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__new__"
      fully_qualified_name: "builtins.type.__new__"
      return_annotation {
        pretty_printed_name: "_typeshed.Self"
        kind: TYPE_VAR
      }
      parameters {
        name: "cls"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.type"
          fully_qualified_name: "builtins.type"
        }
      }
      parameters {
        name: "__name"
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      parameters {
        name: "__bases"
        type_annotation {
          pretty_printed_name: "Tuple[builtins.type,Any]"
          kind: TUPLE
          args {
            pretty_printed_name: "builtins.type"
            fully_qualified_name: "builtins.type"
          }
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
        }
      }
      parameters {
        name: "__namespace"
        type_annotation {
          pretty_printed_name: "builtins.dict[builtins.str,Any]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "builtins.dict"
        }
      }
      parameters {
        name: "kwds"
        kind: VAR_KEYWORD
        type_annotation {
          pretty_printed_name: "Any"
          kind: ANY
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
  }
  overloaded_methods {
    name: "__new__"
    fullname: "builtins.type.__new__"
    definitions {
      name: "__new__"
      fully_qualified_name: "builtins.type.__new__"
      return_annotation {
        pretty_printed_name: "builtins.type"
        fully_qualified_name: "builtins.type"
      }
      parameters {
        name: "cls"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Type[builtins.type]"
          kind: TYPE
          args {
            pretty_printed_name: "builtins.type"
            fully_qualified_name: "builtins.type"
          }
        }
      }
      parameters {
        name: "__o"
        type_annotation {
          pretty_printed_name: "builtins.object"
          fully_qualified_name: "builtins.object"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__new__"
      fully_qualified_name: "builtins.type.__new__"
      return_annotation {
        pretty_printed_name: "_typeshed.Self"
        kind: TYPE_VAR
      }
      parameters {
        name: "cls"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Type[_typeshed.Self]"
          kind: TYPE
          args {
            pretty_printed_name: "_typeshed.Self"
            kind: TYPE_VAR
          }
        }
      }
      parameters {
        name: "__name"
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      parameters {
        name: "__bases"
        type_annotation {
          pretty_printed_name: "builtins.tuple[builtins.type]"
          args {
            pretty_printed_name: "builtins.type"
            fully_qualified_name: "builtins.type"
          }
          fully_qualified_name: "builtins.tuple"
        }
      }
      parameters {
        name: "__namespace"
        type_annotation {
          pretty_printed_name: "builtins.dict[builtins.str,Any]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "builtins.dict"
        }
      }
      parameters {
        name: "kwds"
        kind: VAR_KEYWORD
        type_annotation {
          pretty_printed_name: "Any"
          kind: ANY
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "__bases__"
    fully_qualified_name: "builtins.type.__bases__"
    type_annotation {
      pretty_printed_name: "Tuple[builtins.type,Any]"
      kind: TUPLE
      args {
        pretty_printed_name: "builtins.type"
        fully_qualified_name: "builtins.type"
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
  }
  attributes {
    name: "__bases__"
    fully_qualified_name: "builtins.type.__bases__"
    type_annotation {
      pretty_printed_name: "builtins.tuple[builtins.type]"
      args {
        pretty_printed_name: "builtins.type"
        fully_qualified_name: "builtins.type"
      }
      fully_qualified_name: "builtins.tuple"
    }
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "__module__"
    fully_qualified_name: "builtins.type.__module__"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "__qualname__"
    fully_qualified_name: "builtins.type.__qualname__"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "super"
  fully_qualified_name: "builtins.super"
  super_classes: "builtins.object"
  overloaded_methods {
    name: "__init__"
    fullname: "builtins.super.__init__"
    definitions {
      name: "__init__"
      fully_qualified_name: "builtins.super.__init__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.super"
          fully_qualified_name: "builtins.super"
        }
      }
      parameters {
        name: "__t"
        type_annotation {
          pretty_printed_name: "Any"
          kind: ANY
        }
      }
      parameters {
        name: "__obj"
        type_annotation {
          pretty_printed_name: "Any"
          kind: ANY
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__init__"
      fully_qualified_name: "builtins.super.__init__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.super"
          fully_qualified_name: "builtins.super"
        }
      }
      parameters {
        name: "__t"
        type_annotation {
          pretty_printed_name: "Any"
          kind: ANY
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__init__"
      fully_qualified_name: "builtins.super.__init__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.super"
          fully_qualified_name: "builtins.super"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "int"
  fully_qualified_name: "builtins.int"
  super_classes: "builtins.object"
  methods {
    name: "real"
    fully_qualified_name: "builtins.int.real"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "imag"
    fully_qualified_name: "builtins.int.imag"
    return_annotation {
      pretty_printed_name: "Literal[builtins.int]"
      kind: LITERAL
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "numerator"
    fully_qualified_name: "builtins.int.numerator"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "denominator"
    fully_qualified_name: "builtins.int.denominator"
    return_annotation {
      pretty_printed_name: "Literal[builtins.int]"
      kind: LITERAL
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "conjugate"
    fully_qualified_name: "builtins.int.conjugate"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "bit_length"
    fully_qualified_name: "builtins.int.bit_length"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "to_bytes"
    fully_qualified_name: "builtins.int.to_bytes"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "length"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing_extensions.SupportsIndex"
        fully_qualified_name: "typing_extensions.SupportsIndex"
      }
    }
    parameters {
      name: "byteorder"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Literal[builtins.str],Literal[builtins.str]]"
        kind: UNION
        args {
          pretty_printed_name: "Literal[builtins.str]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        args {
          pretty_printed_name: "Literal[builtins.str]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
      }
    }
    parameters {
      name: "signed"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "from_bytes"
    fully_qualified_name: "builtins.int.from_bytes"
    return_annotation {
      pretty_printed_name: "UnboundType[Self]"
      kind: UNBOUND
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[builtins.int]"
        kind: TYPE
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
    }
    parameters {
      name: "bytes"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.Iterable[typing_extensions.SupportsIndex],typing.SupportsBytes,UnboundType[ReadableBuffer]]"
        kind: UNION
        args {
          pretty_printed_name: "typing.Iterable[typing_extensions.SupportsIndex]"
          args {
            pretty_printed_name: "typing_extensions.SupportsIndex"
            fully_qualified_name: "typing_extensions.SupportsIndex"
          }
          fully_qualified_name: "typing.Iterable"
        }
        args {
          pretty_printed_name: "typing.SupportsBytes"
          fully_qualified_name: "typing.SupportsBytes"
        }
        args {
          pretty_printed_name: "UnboundType[ReadableBuffer]"
          kind: UNBOUND
        }
      }
    }
    parameters {
      name: "byteorder"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Literal[builtins.str],Literal[builtins.str]]"
        kind: UNION
        args {
          pretty_printed_name: "Literal[builtins.str]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        args {
          pretty_printed_name: "Literal[builtins.str]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
      }
    }
    parameters {
      name: "signed"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "classmethod"
    is_class_method: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__add__"
    fully_qualified_name: "builtins.int.__add__"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__sub__"
    fully_qualified_name: "builtins.int.__sub__"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__mul__"
    fully_qualified_name: "builtins.int.__mul__"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__floordiv__"
    fully_qualified_name: "builtins.int.__floordiv__"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__truediv__"
    fully_qualified_name: "builtins.int.__truediv__"
    return_annotation {
      pretty_printed_name: "builtins.float"
      fully_qualified_name: "builtins.float"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__mod__"
    fully_qualified_name: "builtins.int.__mod__"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__divmod__"
    fully_qualified_name: "builtins.int.__divmod__"
    return_annotation {
      pretty_printed_name: "Tuple[builtins.int,builtins.int]"
      kind: TUPLE
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__radd__"
    fully_qualified_name: "builtins.int.__radd__"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__rsub__"
    fully_qualified_name: "builtins.int.__rsub__"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__rmul__"
    fully_qualified_name: "builtins.int.__rmul__"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__rfloordiv__"
    fully_qualified_name: "builtins.int.__rfloordiv__"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__rtruediv__"
    fully_qualified_name: "builtins.int.__rtruediv__"
    return_annotation {
      pretty_printed_name: "builtins.float"
      fully_qualified_name: "builtins.float"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__rmod__"
    fully_qualified_name: "builtins.int.__rmod__"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__rdivmod__"
    fully_qualified_name: "builtins.int.__rdivmod__"
    return_annotation {
      pretty_printed_name: "Tuple[builtins.int,builtins.int]"
      kind: TUPLE
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__rpow__"
    fully_qualified_name: "builtins.int.__rpow__"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "__mod"
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__and__"
    fully_qualified_name: "builtins.int.__and__"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__or__"
    fully_qualified_name: "builtins.int.__or__"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__xor__"
    fully_qualified_name: "builtins.int.__xor__"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__lshift__"
    fully_qualified_name: "builtins.int.__lshift__"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__rshift__"
    fully_qualified_name: "builtins.int.__rshift__"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__rand__"
    fully_qualified_name: "builtins.int.__rand__"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__ror__"
    fully_qualified_name: "builtins.int.__ror__"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__rxor__"
    fully_qualified_name: "builtins.int.__rxor__"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__rlshift__"
    fully_qualified_name: "builtins.int.__rlshift__"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__rrshift__"
    fully_qualified_name: "builtins.int.__rrshift__"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__neg__"
    fully_qualified_name: "builtins.int.__neg__"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__pos__"
    fully_qualified_name: "builtins.int.__pos__"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__invert__"
    fully_qualified_name: "builtins.int.__invert__"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__trunc__"
    fully_qualified_name: "builtins.int.__trunc__"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__ceil__"
    fully_qualified_name: "builtins.int.__ceil__"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__floor__"
    fully_qualified_name: "builtins.int.__floor__"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__round__"
    fully_qualified_name: "builtins.int.__round__"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "__ndigits"
      type_annotation {
        pretty_printed_name: "typing_extensions.SupportsIndex"
        fully_qualified_name: "typing_extensions.SupportsIndex"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__getnewargs__"
    fully_qualified_name: "builtins.int.__getnewargs__"
    return_annotation {
      pretty_printed_name: "Tuple[builtins.int]"
      kind: TUPLE
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__eq__"
    fully_qualified_name: "builtins.int.__eq__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__ne__"
    fully_qualified_name: "builtins.int.__ne__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__lt__"
    fully_qualified_name: "builtins.int.__lt__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__le__"
    fully_qualified_name: "builtins.int.__le__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__gt__"
    fully_qualified_name: "builtins.int.__gt__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__ge__"
    fully_qualified_name: "builtins.int.__ge__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__float__"
    fully_qualified_name: "builtins.int.__float__"
    return_annotation {
      pretty_printed_name: "builtins.float"
      fully_qualified_name: "builtins.float"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__int__"
    fully_qualified_name: "builtins.int.__int__"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__abs__"
    fully_qualified_name: "builtins.int.__abs__"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__bool__"
    fully_qualified_name: "builtins.int.__bool__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__index__"
    fully_qualified_name: "builtins.int.__index__"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "as_integer_ratio"
    fully_qualified_name: "builtins.int.as_integer_ratio"
    return_annotation {
      pretty_printed_name: "Tuple[builtins.int,Literal[builtins.int]]"
      kind: TUPLE
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "Literal[builtins.int]"
        kind: LITERAL
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "bit_count"
    fully_qualified_name: "builtins.int.bit_count"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "310"
  }
  overloaded_methods {
    name: "__new__"
    fullname: "builtins.int.__new__"
    definitions {
      name: "__new__"
      fully_qualified_name: "builtins.int.__new__"
      return_annotation {
        pretty_printed_name: "UnboundType[Self]"
        kind: UNBOUND
      }
      parameters {
        name: "cls"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Type[builtins.int]"
          kind: TYPE
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
        }
      }
      parameters {
        name: "__x"
        type_annotation {
          pretty_printed_name: "Union[builtins.str,UnboundType[ReadableBuffer],typing.SupportsInt,typing_extensions.SupportsIndex,_typeshed.SupportsTrunc]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "UnboundType[ReadableBuffer]"
            kind: UNBOUND
          }
          args {
            pretty_printed_name: "typing.SupportsInt"
            fully_qualified_name: "typing.SupportsInt"
          }
          args {
            pretty_printed_name: "typing_extensions.SupportsIndex"
            fully_qualified_name: "typing_extensions.SupportsIndex"
          }
          args {
            pretty_printed_name: "_typeshed.SupportsTrunc"
            fully_qualified_name: "_typeshed.SupportsTrunc"
          }
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__new__"
      fully_qualified_name: "builtins.int.__new__"
      return_annotation {
        pretty_printed_name: "UnboundType[Self]"
        kind: UNBOUND
      }
      parameters {
        name: "cls"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Type[builtins.int]"
          kind: TYPE
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
        }
      }
      parameters {
        name: "__x"
        type_annotation {
          pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.bytearray]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.bytearray"
            fully_qualified_name: "builtins.bytearray"
          }
        }
      }
      parameters {
        name: "base"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "__pow__"
    fullname: "builtins.int.__pow__"
    definitions {
      name: "__pow__"
      fully_qualified_name: "builtins.int.__pow__"
      return_annotation {
        pretty_printed_name: "Literal[builtins.int]"
        kind: LITERAL
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
      parameters {
        name: "__x"
        type_annotation {
          pretty_printed_name: "Literal[builtins.int]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__pow__"
      fully_qualified_name: "builtins.int.__pow__"
      return_annotation {
        pretty_printed_name: "Literal[builtins.int]"
        kind: LITERAL
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
      parameters {
        name: "__value"
        type_annotation {
          pretty_printed_name: "Literal[builtins.int]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
        }
      }
      parameters {
        name: "__mod"
        type_annotation {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__pow__"
      fully_qualified_name: "builtins.int.__pow__"
      return_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
      parameters {
        name: "__value"
        type_annotation {
          pretty_printed_name: "UnboundType[_PositiveInteger]"
          kind: UNBOUND
        }
      }
      parameters {
        name: "__mod"
        type_annotation {
          pretty_printed_name: "None"
          kind: NONE
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__pow__"
      fully_qualified_name: "builtins.int.__pow__"
      return_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
      parameters {
        name: "__value"
        type_annotation {
          pretty_printed_name: "UnboundType[_NegativeInteger]"
          kind: UNBOUND
        }
      }
      parameters {
        name: "__mod"
        type_annotation {
          pretty_printed_name: "None"
          kind: NONE
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__pow__"
      fully_qualified_name: "builtins.int.__pow__"
      return_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
      parameters {
        name: "__value"
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
      parameters {
        name: "__mod"
        type_annotation {
          pretty_printed_name: "None"
          kind: NONE
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__pow__"
      fully_qualified_name: "builtins.int.__pow__"
      return_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
      parameters {
        name: "__value"
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
      parameters {
        name: "__mod"
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "float"
  fully_qualified_name: "builtins.float"
  super_classes: "builtins.object"
  methods {
    name: "__new__"
    fully_qualified_name: "builtins.float.__new__"
    return_annotation {
      pretty_printed_name: "UnboundType[Self]"
      kind: UNBOUND
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[builtins.float]"
        kind: TYPE
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
      }
    }
    parameters {
      name: "__x"
      type_annotation {
        pretty_printed_name: "Union[typing.SupportsFloat,typing_extensions.SupportsIndex,builtins.str,UnboundType[ReadableBuffer]]"
        kind: UNION
        args {
          pretty_printed_name: "typing.SupportsFloat"
          fully_qualified_name: "typing.SupportsFloat"
        }
        args {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "UnboundType[ReadableBuffer]"
          kind: UNBOUND
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "as_integer_ratio"
    fully_qualified_name: "builtins.float.as_integer_ratio"
    return_annotation {
      pretty_printed_name: "Tuple[builtins.int,builtins.int]"
      kind: TUPLE
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "hex"
    fully_qualified_name: "builtins.float.hex"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "is_integer"
    fully_qualified_name: "builtins.float.is_integer"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "fromhex"
    fully_qualified_name: "builtins.float.fromhex"
    return_annotation {
      pretty_printed_name: "UnboundType[Self]"
      kind: UNBOUND
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[builtins.float]"
        kind: TYPE
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
      }
    }
    parameters {
      name: "__string"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    has_decorators: true
    resolved_decorator_names: "classmethod"
    is_class_method: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "real"
    fully_qualified_name: "builtins.float.real"
    return_annotation {
      pretty_printed_name: "builtins.float"
      fully_qualified_name: "builtins.float"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "imag"
    fully_qualified_name: "builtins.float.imag"
    return_annotation {
      pretty_printed_name: "builtins.float"
      fully_qualified_name: "builtins.float"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "conjugate"
    fully_qualified_name: "builtins.float.conjugate"
    return_annotation {
      pretty_printed_name: "builtins.float"
      fully_qualified_name: "builtins.float"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__add__"
    fully_qualified_name: "builtins.float.__add__"
    return_annotation {
      pretty_printed_name: "builtins.float"
      fully_qualified_name: "builtins.float"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__sub__"
    fully_qualified_name: "builtins.float.__sub__"
    return_annotation {
      pretty_printed_name: "builtins.float"
      fully_qualified_name: "builtins.float"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__mul__"
    fully_qualified_name: "builtins.float.__mul__"
    return_annotation {
      pretty_printed_name: "builtins.float"
      fully_qualified_name: "builtins.float"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__floordiv__"
    fully_qualified_name: "builtins.float.__floordiv__"
    return_annotation {
      pretty_printed_name: "builtins.float"
      fully_qualified_name: "builtins.float"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__truediv__"
    fully_qualified_name: "builtins.float.__truediv__"
    return_annotation {
      pretty_printed_name: "builtins.float"
      fully_qualified_name: "builtins.float"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__mod__"
    fully_qualified_name: "builtins.float.__mod__"
    return_annotation {
      pretty_printed_name: "builtins.float"
      fully_qualified_name: "builtins.float"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__divmod__"
    fully_qualified_name: "builtins.float.__divmod__"
    return_annotation {
      pretty_printed_name: "Tuple[builtins.float,builtins.float]"
      kind: TUPLE
      args {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
      args {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__radd__"
    fully_qualified_name: "builtins.float.__radd__"
    return_annotation {
      pretty_printed_name: "builtins.float"
      fully_qualified_name: "builtins.float"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__rsub__"
    fully_qualified_name: "builtins.float.__rsub__"
    return_annotation {
      pretty_printed_name: "builtins.float"
      fully_qualified_name: "builtins.float"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__rmul__"
    fully_qualified_name: "builtins.float.__rmul__"
    return_annotation {
      pretty_printed_name: "builtins.float"
      fully_qualified_name: "builtins.float"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__rfloordiv__"
    fully_qualified_name: "builtins.float.__rfloordiv__"
    return_annotation {
      pretty_printed_name: "builtins.float"
      fully_qualified_name: "builtins.float"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__rtruediv__"
    fully_qualified_name: "builtins.float.__rtruediv__"
    return_annotation {
      pretty_printed_name: "builtins.float"
      fully_qualified_name: "builtins.float"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__rmod__"
    fully_qualified_name: "builtins.float.__rmod__"
    return_annotation {
      pretty_printed_name: "builtins.float"
      fully_qualified_name: "builtins.float"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__rdivmod__"
    fully_qualified_name: "builtins.float.__rdivmod__"
    return_annotation {
      pretty_printed_name: "Tuple[builtins.float,builtins.float]"
      kind: TUPLE
      args {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
      args {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__getnewargs__"
    fully_qualified_name: "builtins.float.__getnewargs__"
    return_annotation {
      pretty_printed_name: "Tuple[builtins.float]"
      kind: TUPLE
      args {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__trunc__"
    fully_qualified_name: "builtins.float.__trunc__"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__eq__"
    fully_qualified_name: "builtins.float.__eq__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__ne__"
    fully_qualified_name: "builtins.float.__ne__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__lt__"
    fully_qualified_name: "builtins.float.__lt__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__le__"
    fully_qualified_name: "builtins.float.__le__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__gt__"
    fully_qualified_name: "builtins.float.__gt__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__ge__"
    fully_qualified_name: "builtins.float.__ge__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__neg__"
    fully_qualified_name: "builtins.float.__neg__"
    return_annotation {
      pretty_printed_name: "builtins.float"
      fully_qualified_name: "builtins.float"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__pos__"
    fully_qualified_name: "builtins.float.__pos__"
    return_annotation {
      pretty_printed_name: "builtins.float"
      fully_qualified_name: "builtins.float"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__int__"
    fully_qualified_name: "builtins.float.__int__"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__float__"
    fully_qualified_name: "builtins.float.__float__"
    return_annotation {
      pretty_printed_name: "builtins.float"
      fully_qualified_name: "builtins.float"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__abs__"
    fully_qualified_name: "builtins.float.__abs__"
    return_annotation {
      pretty_printed_name: "builtins.float"
      fully_qualified_name: "builtins.float"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__bool__"
    fully_qualified_name: "builtins.float.__bool__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__ceil__"
    fully_qualified_name: "builtins.float.__ceil__"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
    }
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__floor__"
    fully_qualified_name: "builtins.float.__floor__"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
    }
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "__pow__"
    fullname: "builtins.float.__pow__"
    definitions {
      name: "__pow__"
      fully_qualified_name: "builtins.float.__pow__"
      return_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
      }
      parameters {
        name: "__value"
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
      parameters {
        name: "__mod"
        type_annotation {
          pretty_printed_name: "None"
          kind: NONE
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__pow__"
      fully_qualified_name: "builtins.float.__pow__"
      return_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
      }
      parameters {
        name: "__value"
        type_annotation {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
      }
      parameters {
        name: "__mod"
        type_annotation {
          pretty_printed_name: "None"
          kind: NONE
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "__rpow__"
    fullname: "builtins.float.__rpow__"
    definitions {
      name: "__rpow__"
      fully_qualified_name: "builtins.float.__rpow__"
      return_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
      }
      parameters {
        name: "__value"
        type_annotation {
          pretty_printed_name: "UnboundType[_PositiveInteger]"
          kind: UNBOUND
        }
      }
      parameters {
        name: "__mod"
        type_annotation {
          pretty_printed_name: "None"
          kind: NONE
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__rpow__"
      fully_qualified_name: "builtins.float.__rpow__"
      return_annotation {
        pretty_printed_name: "builtins.complex"
        fully_qualified_name: "builtins.complex"
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
      }
      parameters {
        name: "__value"
        type_annotation {
          pretty_printed_name: "UnboundType[_NegativeInteger]"
          kind: UNBOUND
        }
      }
      parameters {
        name: "__mod"
        type_annotation {
          pretty_printed_name: "None"
          kind: NONE
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__rpow__"
      fully_qualified_name: "builtins.float.__rpow__"
      return_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
      }
      parameters {
        name: "__value"
        type_annotation {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
      }
      parameters {
        name: "__mod"
        type_annotation {
          pretty_printed_name: "None"
          kind: NONE
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "__round__"
    fullname: "builtins.float.__round__"
    definitions {
      name: "__round__"
      fully_qualified_name: "builtins.float.__round__"
      return_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
      }
      parameters {
        name: "__ndigits"
        type_annotation {
          pretty_printed_name: "None"
          kind: NONE
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__round__"
      fully_qualified_name: "builtins.float.__round__"
      return_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
      }
      parameters {
        name: "__ndigits"
        type_annotation {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "complex"
  fully_qualified_name: "builtins.complex"
  super_classes: "builtins.object"
  methods {
    name: "real"
    fully_qualified_name: "builtins.complex.real"
    return_annotation {
      pretty_printed_name: "builtins.float"
      fully_qualified_name: "builtins.float"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.complex"
        fully_qualified_name: "builtins.complex"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "imag"
    fully_qualified_name: "builtins.complex.imag"
    return_annotation {
      pretty_printed_name: "builtins.float"
      fully_qualified_name: "builtins.float"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.complex"
        fully_qualified_name: "builtins.complex"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "conjugate"
    fully_qualified_name: "builtins.complex.conjugate"
    return_annotation {
      pretty_printed_name: "builtins.complex"
      fully_qualified_name: "builtins.complex"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.complex"
        fully_qualified_name: "builtins.complex"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__add__"
    fully_qualified_name: "builtins.complex.__add__"
    return_annotation {
      pretty_printed_name: "builtins.complex"
      fully_qualified_name: "builtins.complex"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.complex"
        fully_qualified_name: "builtins.complex"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "builtins.complex"
        fully_qualified_name: "builtins.complex"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__sub__"
    fully_qualified_name: "builtins.complex.__sub__"
    return_annotation {
      pretty_printed_name: "builtins.complex"
      fully_qualified_name: "builtins.complex"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.complex"
        fully_qualified_name: "builtins.complex"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "builtins.complex"
        fully_qualified_name: "builtins.complex"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__mul__"
    fully_qualified_name: "builtins.complex.__mul__"
    return_annotation {
      pretty_printed_name: "builtins.complex"
      fully_qualified_name: "builtins.complex"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.complex"
        fully_qualified_name: "builtins.complex"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "builtins.complex"
        fully_qualified_name: "builtins.complex"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__pow__"
    fully_qualified_name: "builtins.complex.__pow__"
    return_annotation {
      pretty_printed_name: "builtins.complex"
      fully_qualified_name: "builtins.complex"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.complex"
        fully_qualified_name: "builtins.complex"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "builtins.complex"
        fully_qualified_name: "builtins.complex"
      }
    }
    parameters {
      name: "__mod"
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__truediv__"
    fully_qualified_name: "builtins.complex.__truediv__"
    return_annotation {
      pretty_printed_name: "builtins.complex"
      fully_qualified_name: "builtins.complex"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.complex"
        fully_qualified_name: "builtins.complex"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "builtins.complex"
        fully_qualified_name: "builtins.complex"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__radd__"
    fully_qualified_name: "builtins.complex.__radd__"
    return_annotation {
      pretty_printed_name: "builtins.complex"
      fully_qualified_name: "builtins.complex"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.complex"
        fully_qualified_name: "builtins.complex"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "builtins.complex"
        fully_qualified_name: "builtins.complex"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__rsub__"
    fully_qualified_name: "builtins.complex.__rsub__"
    return_annotation {
      pretty_printed_name: "builtins.complex"
      fully_qualified_name: "builtins.complex"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.complex"
        fully_qualified_name: "builtins.complex"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "builtins.complex"
        fully_qualified_name: "builtins.complex"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__rmul__"
    fully_qualified_name: "builtins.complex.__rmul__"
    return_annotation {
      pretty_printed_name: "builtins.complex"
      fully_qualified_name: "builtins.complex"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.complex"
        fully_qualified_name: "builtins.complex"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "builtins.complex"
        fully_qualified_name: "builtins.complex"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__rpow__"
    fully_qualified_name: "builtins.complex.__rpow__"
    return_annotation {
      pretty_printed_name: "builtins.complex"
      fully_qualified_name: "builtins.complex"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.complex"
        fully_qualified_name: "builtins.complex"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "builtins.complex"
        fully_qualified_name: "builtins.complex"
      }
    }
    parameters {
      name: "__mod"
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__rtruediv__"
    fully_qualified_name: "builtins.complex.__rtruediv__"
    return_annotation {
      pretty_printed_name: "builtins.complex"
      fully_qualified_name: "builtins.complex"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.complex"
        fully_qualified_name: "builtins.complex"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "builtins.complex"
        fully_qualified_name: "builtins.complex"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__eq__"
    fully_qualified_name: "builtins.complex.__eq__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.complex"
        fully_qualified_name: "builtins.complex"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__ne__"
    fully_qualified_name: "builtins.complex.__ne__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.complex"
        fully_qualified_name: "builtins.complex"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__neg__"
    fully_qualified_name: "builtins.complex.__neg__"
    return_annotation {
      pretty_printed_name: "builtins.complex"
      fully_qualified_name: "builtins.complex"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.complex"
        fully_qualified_name: "builtins.complex"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__pos__"
    fully_qualified_name: "builtins.complex.__pos__"
    return_annotation {
      pretty_printed_name: "builtins.complex"
      fully_qualified_name: "builtins.complex"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.complex"
        fully_qualified_name: "builtins.complex"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__abs__"
    fully_qualified_name: "builtins.complex.__abs__"
    return_annotation {
      pretty_printed_name: "builtins.float"
      fully_qualified_name: "builtins.float"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.complex"
        fully_qualified_name: "builtins.complex"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__bool__"
    fully_qualified_name: "builtins.complex.__bool__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.complex"
        fully_qualified_name: "builtins.complex"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "__new__"
    fullname: "builtins.complex.__new__"
    definitions {
      name: "__new__"
      fully_qualified_name: "builtins.complex.__new__"
      return_annotation {
        pretty_printed_name: "UnboundType[Self]"
        kind: UNBOUND
      }
      parameters {
        name: "cls"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Type[builtins.complex]"
          kind: TYPE
          args {
            pretty_printed_name: "builtins.complex"
            fully_qualified_name: "builtins.complex"
          }
        }
      }
      parameters {
        name: "real"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.complex,typing.SupportsComplex,typing.SupportsFloat]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.complex"
            fully_qualified_name: "builtins.complex"
          }
          args {
            pretty_printed_name: "typing.SupportsComplex"
            fully_qualified_name: "typing.SupportsComplex"
          }
          args {
            pretty_printed_name: "typing.SupportsFloat"
            fully_qualified_name: "typing.SupportsFloat"
          }
        }
        has_default: true
      }
      parameters {
        name: "imag"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.complex,typing.SupportsFloat]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.complex"
            fully_qualified_name: "builtins.complex"
          }
          args {
            pretty_printed_name: "typing.SupportsFloat"
            fully_qualified_name: "typing.SupportsFloat"
          }
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__new__"
      fully_qualified_name: "builtins.complex.__new__"
      return_annotation {
        pretty_printed_name: "UnboundType[Self]"
        kind: UNBOUND
      }
      parameters {
        name: "cls"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Type[builtins.complex]"
          kind: TYPE
          args {
            pretty_printed_name: "builtins.complex"
            fully_qualified_name: "builtins.complex"
          }
        }
      }
      parameters {
        name: "real"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,typing.SupportsComplex,typing.SupportsFloat,builtins.complex]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "typing.SupportsComplex"
            fully_qualified_name: "typing.SupportsComplex"
          }
          args {
            pretty_printed_name: "typing.SupportsFloat"
            fully_qualified_name: "typing.SupportsFloat"
          }
          args {
            pretty_printed_name: "builtins.complex"
            fully_qualified_name: "builtins.complex"
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
  }
  overloaded_methods {
    name: "__new__"
    fullname: "builtins.complex.__new__"
    definitions {
      name: "__new__"
      fully_qualified_name: "builtins.complex.__new__"
      return_annotation {
        pretty_printed_name: "UnboundType[Self]"
        kind: UNBOUND
      }
      parameters {
        name: "cls"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Type[builtins.complex]"
          kind: TYPE
          args {
            pretty_printed_name: "builtins.complex"
            fully_qualified_name: "builtins.complex"
          }
        }
      }
      parameters {
        name: "real"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.complex,typing.SupportsComplex,typing.SupportsFloat,typing_extensions.SupportsIndex]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.complex"
            fully_qualified_name: "builtins.complex"
          }
          args {
            pretty_printed_name: "typing.SupportsComplex"
            fully_qualified_name: "typing.SupportsComplex"
          }
          args {
            pretty_printed_name: "typing.SupportsFloat"
            fully_qualified_name: "typing.SupportsFloat"
          }
          args {
            pretty_printed_name: "typing_extensions.SupportsIndex"
            fully_qualified_name: "typing_extensions.SupportsIndex"
          }
        }
        has_default: true
      }
      parameters {
        name: "imag"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.complex,typing.SupportsFloat,typing_extensions.SupportsIndex]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.complex"
            fully_qualified_name: "builtins.complex"
          }
          args {
            pretty_printed_name: "typing.SupportsFloat"
            fully_qualified_name: "typing.SupportsFloat"
          }
          args {
            pretty_printed_name: "typing_extensions.SupportsIndex"
            fully_qualified_name: "typing_extensions.SupportsIndex"
          }
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__new__"
      fully_qualified_name: "builtins.complex.__new__"
      return_annotation {
        pretty_printed_name: "UnboundType[Self]"
        kind: UNBOUND
      }
      parameters {
        name: "cls"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Type[builtins.complex]"
          kind: TYPE
          args {
            pretty_printed_name: "builtins.complex"
            fully_qualified_name: "builtins.complex"
          }
        }
      }
      parameters {
        name: "real"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,typing.SupportsComplex,typing.SupportsFloat,typing_extensions.SupportsIndex,builtins.complex]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "typing.SupportsComplex"
            fully_qualified_name: "typing.SupportsComplex"
          }
          args {
            pretty_printed_name: "typing.SupportsFloat"
            fully_qualified_name: "typing.SupportsFloat"
          }
          args {
            pretty_printed_name: "typing_extensions.SupportsIndex"
            fully_qualified_name: "typing_extensions.SupportsIndex"
          }
          args {
            pretty_printed_name: "builtins.complex"
            fully_qualified_name: "builtins.complex"
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "_FormatMapMapping"
  fully_qualified_name: "builtins._FormatMapMapping"
  super_classes: "builtins.object"
  methods {
    name: "__getitem__"
    fully_qualified_name: "builtins._FormatMapMapping.__getitem__"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins._FormatMapMapping"
        fully_qualified_name: "builtins._FormatMapMapping"
      }
    }
    parameters {
      name: "__key"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  is_protocol: true
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "_TranslateTable"
  fully_qualified_name: "builtins._TranslateTable"
  super_classes: "builtins.object"
  methods {
    name: "__getitem__"
    fully_qualified_name: "builtins._TranslateTable.__getitem__"
    return_annotation {
      pretty_printed_name: "Union[builtins.str,builtins.int,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins._TranslateTable"
        fully_qualified_name: "builtins._TranslateTable"
      }
    }
    parameters {
      name: "__key"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  is_protocol: true
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "str"
  fully_qualified_name: "builtins.str"
  super_classes: "typing.Sequence"
  methods {
    name: "count"
    fully_qualified_name: "builtins.str.count"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "x"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "__start"
      type_annotation {
        pretty_printed_name: "Union[typing_extensions.SupportsIndex,None]"
        kind: UNION
        args {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "__end"
      type_annotation {
        pretty_printed_name: "Union[typing_extensions.SupportsIndex,None]"
        kind: UNION
        args {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "encode"
    fully_qualified_name: "builtins.str.encode"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "encoding"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      has_default: true
    }
    parameters {
      name: "errors"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "endswith"
    fully_qualified_name: "builtins.str.endswith"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "__suffix"
      type_annotation {
        pretty_printed_name: "Union[builtins.str,Tuple[builtins.str,Any]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "Tuple[builtins.str,Any]"
          kind: TUPLE
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
        }
      }
    }
    parameters {
      name: "__start"
      type_annotation {
        pretty_printed_name: "Union[typing_extensions.SupportsIndex,None]"
        kind: UNION
        args {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "__end"
      type_annotation {
        pretty_printed_name: "Union[typing_extensions.SupportsIndex,None]"
        kind: UNION
        args {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
  }
  methods {
    name: "endswith"
    fully_qualified_name: "builtins.str.endswith"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "__suffix"
      type_annotation {
        pretty_printed_name: "Union[builtins.str,builtins.tuple[builtins.str]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.tuple[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "builtins.tuple"
        }
      }
    }
    parameters {
      name: "__start"
      type_annotation {
        pretty_printed_name: "Union[typing_extensions.SupportsIndex,None]"
        kind: UNION
        args {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "__end"
      type_annotation {
        pretty_printed_name: "Union[typing_extensions.SupportsIndex,None]"
        kind: UNION
        args {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "find"
    fully_qualified_name: "builtins.str.find"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "__sub"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "__start"
      type_annotation {
        pretty_printed_name: "Union[typing_extensions.SupportsIndex,None]"
        kind: UNION
        args {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "__end"
      type_annotation {
        pretty_printed_name: "Union[typing_extensions.SupportsIndex,None]"
        kind: UNION
        args {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "format_map"
    fully_qualified_name: "builtins.str.format_map"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "map"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins._FormatMapMapping"
        fully_qualified_name: "builtins._FormatMapMapping"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "index"
    fully_qualified_name: "builtins.str.index"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "__sub"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "__start"
      type_annotation {
        pretty_printed_name: "Union[typing_extensions.SupportsIndex,None]"
        kind: UNION
        args {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "__end"
      type_annotation {
        pretty_printed_name: "Union[typing_extensions.SupportsIndex,None]"
        kind: UNION
        args {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "isalnum"
    fully_qualified_name: "builtins.str.isalnum"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "isalpha"
    fully_qualified_name: "builtins.str.isalpha"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "isascii"
    fully_qualified_name: "builtins.str.isascii"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "isdecimal"
    fully_qualified_name: "builtins.str.isdecimal"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "isdigit"
    fully_qualified_name: "builtins.str.isdigit"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "isidentifier"
    fully_qualified_name: "builtins.str.isidentifier"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "islower"
    fully_qualified_name: "builtins.str.islower"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "isnumeric"
    fully_qualified_name: "builtins.str.isnumeric"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "isprintable"
    fully_qualified_name: "builtins.str.isprintable"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "isspace"
    fully_qualified_name: "builtins.str.isspace"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "istitle"
    fully_qualified_name: "builtins.str.istitle"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "isupper"
    fully_qualified_name: "builtins.str.isupper"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "rfind"
    fully_qualified_name: "builtins.str.rfind"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "__sub"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "__start"
      type_annotation {
        pretty_printed_name: "Union[typing_extensions.SupportsIndex,None]"
        kind: UNION
        args {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "__end"
      type_annotation {
        pretty_printed_name: "Union[typing_extensions.SupportsIndex,None]"
        kind: UNION
        args {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "rindex"
    fully_qualified_name: "builtins.str.rindex"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "__sub"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "__start"
      type_annotation {
        pretty_printed_name: "Union[typing_extensions.SupportsIndex,None]"
        kind: UNION
        args {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "__end"
      type_annotation {
        pretty_printed_name: "Union[typing_extensions.SupportsIndex,None]"
        kind: UNION
        args {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "startswith"
    fully_qualified_name: "builtins.str.startswith"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "__prefix"
      type_annotation {
        pretty_printed_name: "Union[builtins.str,Tuple[builtins.str,Any]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "Tuple[builtins.str,Any]"
          kind: TUPLE
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
        }
      }
    }
    parameters {
      name: "__start"
      type_annotation {
        pretty_printed_name: "Union[typing_extensions.SupportsIndex,None]"
        kind: UNION
        args {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "__end"
      type_annotation {
        pretty_printed_name: "Union[typing_extensions.SupportsIndex,None]"
        kind: UNION
        args {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
  }
  methods {
    name: "startswith"
    fully_qualified_name: "builtins.str.startswith"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "__prefix"
      type_annotation {
        pretty_printed_name: "Union[builtins.str,builtins.tuple[builtins.str]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.tuple[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "builtins.tuple"
        }
      }
    }
    parameters {
      name: "__start"
      type_annotation {
        pretty_printed_name: "Union[typing_extensions.SupportsIndex,None]"
        kind: UNION
        args {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "__end"
      type_annotation {
        pretty_printed_name: "Union[typing_extensions.SupportsIndex,None]"
        kind: UNION
        args {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "translate"
    fully_qualified_name: "builtins.str.translate"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "__table"
      type_annotation {
        pretty_printed_name: "builtins._TranslateTable"
        fully_qualified_name: "builtins._TranslateTable"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__contains__"
    fully_qualified_name: "builtins.str.__contains__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "__key"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__eq__"
    fully_qualified_name: "builtins.str.__eq__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__ge__"
    fully_qualified_name: "builtins.str.__ge__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__getitem__"
    fully_qualified_name: "builtins.str.__getitem__"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "__key"
      type_annotation {
        pretty_printed_name: "Union[typing_extensions.SupportsIndex,builtins.slice]"
        kind: UNION
        args {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
        args {
          pretty_printed_name: "builtins.slice"
          fully_qualified_name: "builtins.slice"
        }
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__gt__"
    fully_qualified_name: "builtins.str.__gt__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__le__"
    fully_qualified_name: "builtins.str.__le__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__len__"
    fully_qualified_name: "builtins.str.__len__"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__lt__"
    fully_qualified_name: "builtins.str.__lt__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__ne__"
    fully_qualified_name: "builtins.str.__ne__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__getnewargs__"
    fully_qualified_name: "builtins.str.__getnewargs__"
    return_annotation {
      pretty_printed_name: "Tuple[builtins.str]"
      kind: TUPLE
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "__new__"
    fullname: "builtins.str.__new__"
    definitions {
      name: "__new__"
      fully_qualified_name: "builtins.str.__new__"
      return_annotation {
        pretty_printed_name: "UnboundType[Self]"
        kind: UNBOUND
      }
      parameters {
        name: "cls"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Type[builtins.str]"
          kind: TYPE
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
      }
      parameters {
        name: "object"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.object"
          fully_qualified_name: "builtins.object"
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__new__"
      fully_qualified_name: "builtins.str.__new__"
      return_annotation {
        pretty_printed_name: "UnboundType[Self]"
        kind: UNBOUND
      }
      parameters {
        name: "cls"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Type[builtins.str]"
          kind: TYPE
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
      }
      parameters {
        name: "object"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "UnboundType[ReadableBuffer]"
          kind: UNBOUND
        }
      }
      parameters {
        name: "encoding"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        has_default: true
      }
      parameters {
        name: "errors"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "capitalize"
    fullname: "builtins.str.capitalize"
    definitions {
      name: "capitalize"
      fully_qualified_name: "builtins.str.capitalize"
      return_annotation {
        pretty_printed_name: "UnboundType[LiteralString]"
        kind: UNBOUND
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "UnboundType[LiteralString]"
          kind: UNBOUND
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "capitalize"
      fully_qualified_name: "builtins.str.capitalize"
      return_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "casefold"
    fullname: "builtins.str.casefold"
    definitions {
      name: "casefold"
      fully_qualified_name: "builtins.str.casefold"
      return_annotation {
        pretty_printed_name: "UnboundType[LiteralString]"
        kind: UNBOUND
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "UnboundType[LiteralString]"
          kind: UNBOUND
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "casefold"
      fully_qualified_name: "builtins.str.casefold"
      return_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "center"
    fullname: "builtins.str.center"
    definitions {
      name: "center"
      fully_qualified_name: "builtins.str.center"
      return_annotation {
        pretty_printed_name: "UnboundType[LiteralString]"
        kind: UNBOUND
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "UnboundType[LiteralString]"
          kind: UNBOUND
        }
      }
      parameters {
        name: "__width"
        type_annotation {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
      }
      parameters {
        name: "__fillchar"
        type_annotation {
          pretty_printed_name: "UnboundType[LiteralString]"
          kind: UNBOUND
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "center"
      fully_qualified_name: "builtins.str.center"
      return_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      parameters {
        name: "__width"
        type_annotation {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
      }
      parameters {
        name: "__fillchar"
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "expandtabs"
    fullname: "builtins.str.expandtabs"
    definitions {
      name: "expandtabs"
      fully_qualified_name: "builtins.str.expandtabs"
      return_annotation {
        pretty_printed_name: "UnboundType[LiteralString]"
        kind: UNBOUND
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "UnboundType[LiteralString]"
          kind: UNBOUND
        }
      }
      parameters {
        name: "tabsize"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "expandtabs"
      fully_qualified_name: "builtins.str.expandtabs"
      return_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      parameters {
        name: "tabsize"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
  }
  overloaded_methods {
    name: "expandtabs"
    fullname: "builtins.str.expandtabs"
    definitions {
      name: "expandtabs"
      fully_qualified_name: "builtins.str.expandtabs"
      return_annotation {
        pretty_printed_name: "UnboundType[LiteralString]"
        kind: UNBOUND
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "UnboundType[LiteralString]"
          kind: UNBOUND
        }
      }
      parameters {
        name: "tabsize"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "expandtabs"
      fully_qualified_name: "builtins.str.expandtabs"
      return_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      parameters {
        name: "tabsize"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "format"
    fullname: "builtins.str.format"
    definitions {
      name: "format"
      fully_qualified_name: "builtins.str.format"
      return_annotation {
        pretty_printed_name: "UnboundType[LiteralString]"
        kind: UNBOUND
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "UnboundType[LiteralString]"
          kind: UNBOUND
        }
      }
      parameters {
        name: "args"
        kind: VAR_POSITIONAL
        type_annotation {
          pretty_printed_name: "UnboundType[LiteralString]"
          kind: UNBOUND
        }
      }
      parameters {
        name: "kwargs"
        kind: VAR_KEYWORD
        type_annotation {
          pretty_printed_name: "UnboundType[LiteralString]"
          kind: UNBOUND
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "format"
      fully_qualified_name: "builtins.str.format"
      return_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      parameters {
        name: "args"
        kind: VAR_POSITIONAL
        type_annotation {
          pretty_printed_name: "builtins.object"
          fully_qualified_name: "builtins.object"
        }
      }
      parameters {
        name: "kwargs"
        kind: VAR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.object"
          fully_qualified_name: "builtins.object"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "join"
    fullname: "builtins.str.join"
    definitions {
      name: "join"
      fully_qualified_name: "builtins.str.join"
      return_annotation {
        pretty_printed_name: "UnboundType[LiteralString]"
        kind: UNBOUND
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "UnboundType[LiteralString]"
          kind: UNBOUND
        }
      }
      parameters {
        name: "__iterable"
        type_annotation {
          pretty_printed_name: "typing.Iterable[UnboundType[LiteralString]]"
          args {
            pretty_printed_name: "UnboundType[LiteralString]"
            kind: UNBOUND
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "join"
      fully_qualified_name: "builtins.str.join"
      return_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      parameters {
        name: "__iterable"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "ljust"
    fullname: "builtins.str.ljust"
    definitions {
      name: "ljust"
      fully_qualified_name: "builtins.str.ljust"
      return_annotation {
        pretty_printed_name: "UnboundType[LiteralString]"
        kind: UNBOUND
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "UnboundType[LiteralString]"
          kind: UNBOUND
        }
      }
      parameters {
        name: "__width"
        type_annotation {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
      }
      parameters {
        name: "__fillchar"
        type_annotation {
          pretty_printed_name: "UnboundType[LiteralString]"
          kind: UNBOUND
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "ljust"
      fully_qualified_name: "builtins.str.ljust"
      return_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      parameters {
        name: "__width"
        type_annotation {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
      }
      parameters {
        name: "__fillchar"
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "lower"
    fullname: "builtins.str.lower"
    definitions {
      name: "lower"
      fully_qualified_name: "builtins.str.lower"
      return_annotation {
        pretty_printed_name: "UnboundType[LiteralString]"
        kind: UNBOUND
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "UnboundType[LiteralString]"
          kind: UNBOUND
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "lower"
      fully_qualified_name: "builtins.str.lower"
      return_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "lstrip"
    fullname: "builtins.str.lstrip"
    definitions {
      name: "lstrip"
      fully_qualified_name: "builtins.str.lstrip"
      return_annotation {
        pretty_printed_name: "UnboundType[LiteralString]"
        kind: UNBOUND
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "UnboundType[LiteralString]"
          kind: UNBOUND
        }
      }
      parameters {
        name: "__chars"
        type_annotation {
          pretty_printed_name: "Union[UnboundType[LiteralString],None]"
          kind: UNION
          args {
            pretty_printed_name: "UnboundType[LiteralString]"
            kind: UNBOUND
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "lstrip"
      fully_qualified_name: "builtins.str.lstrip"
      return_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      parameters {
        name: "__chars"
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "partition"
    fullname: "builtins.str.partition"
    definitions {
      name: "partition"
      fully_qualified_name: "builtins.str.partition"
      return_annotation {
        pretty_printed_name: "Tuple[UnboundType[LiteralString],UnboundType[LiteralString],UnboundType[LiteralString]]"
        kind: TUPLE
        args {
          pretty_printed_name: "UnboundType[LiteralString]"
          kind: UNBOUND
        }
        args {
          pretty_printed_name: "UnboundType[LiteralString]"
          kind: UNBOUND
        }
        args {
          pretty_printed_name: "UnboundType[LiteralString]"
          kind: UNBOUND
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "UnboundType[LiteralString]"
          kind: UNBOUND
        }
      }
      parameters {
        name: "__sep"
        type_annotation {
          pretty_printed_name: "UnboundType[LiteralString]"
          kind: UNBOUND
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "partition"
      fully_qualified_name: "builtins.str.partition"
      return_annotation {
        pretty_printed_name: "Tuple[builtins.str,builtins.str,builtins.str]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      parameters {
        name: "__sep"
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "replace"
    fullname: "builtins.str.replace"
    definitions {
      name: "replace"
      fully_qualified_name: "builtins.str.replace"
      return_annotation {
        pretty_printed_name: "UnboundType[LiteralString]"
        kind: UNBOUND
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "UnboundType[LiteralString]"
          kind: UNBOUND
        }
      }
      parameters {
        name: "__old"
        type_annotation {
          pretty_printed_name: "UnboundType[LiteralString]"
          kind: UNBOUND
        }
      }
      parameters {
        name: "__new"
        type_annotation {
          pretty_printed_name: "UnboundType[LiteralString]"
          kind: UNBOUND
        }
      }
      parameters {
        name: "__count"
        type_annotation {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "replace"
      fully_qualified_name: "builtins.str.replace"
      return_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      parameters {
        name: "__old"
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      parameters {
        name: "__new"
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      parameters {
        name: "__count"
        type_annotation {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "rjust"
    fullname: "builtins.str.rjust"
    definitions {
      name: "rjust"
      fully_qualified_name: "builtins.str.rjust"
      return_annotation {
        pretty_printed_name: "UnboundType[LiteralString]"
        kind: UNBOUND
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "UnboundType[LiteralString]"
          kind: UNBOUND
        }
      }
      parameters {
        name: "__width"
        type_annotation {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
      }
      parameters {
        name: "__fillchar"
        type_annotation {
          pretty_printed_name: "UnboundType[LiteralString]"
          kind: UNBOUND
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "rjust"
      fully_qualified_name: "builtins.str.rjust"
      return_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      parameters {
        name: "__width"
        type_annotation {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
      }
      parameters {
        name: "__fillchar"
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "rpartition"
    fullname: "builtins.str.rpartition"
    definitions {
      name: "rpartition"
      fully_qualified_name: "builtins.str.rpartition"
      return_annotation {
        pretty_printed_name: "Tuple[UnboundType[LiteralString],UnboundType[LiteralString],UnboundType[LiteralString]]"
        kind: TUPLE
        args {
          pretty_printed_name: "UnboundType[LiteralString]"
          kind: UNBOUND
        }
        args {
          pretty_printed_name: "UnboundType[LiteralString]"
          kind: UNBOUND
        }
        args {
          pretty_printed_name: "UnboundType[LiteralString]"
          kind: UNBOUND
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "UnboundType[LiteralString]"
          kind: UNBOUND
        }
      }
      parameters {
        name: "__sep"
        type_annotation {
          pretty_printed_name: "UnboundType[LiteralString]"
          kind: UNBOUND
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "rpartition"
      fully_qualified_name: "builtins.str.rpartition"
      return_annotation {
        pretty_printed_name: "Tuple[builtins.str,builtins.str,builtins.str]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      parameters {
        name: "__sep"
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "rsplit"
    fullname: "builtins.str.rsplit"
    definitions {
      name: "rsplit"
      fully_qualified_name: "builtins.str.rsplit"
      return_annotation {
        pretty_printed_name: "builtins.list[UnboundType[LiteralString]]"
        args {
          pretty_printed_name: "UnboundType[LiteralString]"
          kind: UNBOUND
        }
        fully_qualified_name: "builtins.list"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "UnboundType[LiteralString]"
          kind: UNBOUND
        }
      }
      parameters {
        name: "sep"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[UnboundType[LiteralString],None]"
          kind: UNION
          args {
            pretty_printed_name: "UnboundType[LiteralString]"
            kind: UNBOUND
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "maxsplit"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "rsplit"
      fully_qualified_name: "builtins.str.rsplit"
      return_annotation {
        pretty_printed_name: "builtins.list[builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "builtins.list"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      parameters {
        name: "sep"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "maxsplit"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "rstrip"
    fullname: "builtins.str.rstrip"
    definitions {
      name: "rstrip"
      fully_qualified_name: "builtins.str.rstrip"
      return_annotation {
        pretty_printed_name: "UnboundType[LiteralString]"
        kind: UNBOUND
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "UnboundType[LiteralString]"
          kind: UNBOUND
        }
      }
      parameters {
        name: "__chars"
        type_annotation {
          pretty_printed_name: "Union[UnboundType[LiteralString],None]"
          kind: UNION
          args {
            pretty_printed_name: "UnboundType[LiteralString]"
            kind: UNBOUND
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "rstrip"
      fully_qualified_name: "builtins.str.rstrip"
      return_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      parameters {
        name: "__chars"
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "split"
    fullname: "builtins.str.split"
    definitions {
      name: "split"
      fully_qualified_name: "builtins.str.split"
      return_annotation {
        pretty_printed_name: "builtins.list[UnboundType[LiteralString]]"
        args {
          pretty_printed_name: "UnboundType[LiteralString]"
          kind: UNBOUND
        }
        fully_qualified_name: "builtins.list"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "UnboundType[LiteralString]"
          kind: UNBOUND
        }
      }
      parameters {
        name: "sep"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[UnboundType[LiteralString],None]"
          kind: UNION
          args {
            pretty_printed_name: "UnboundType[LiteralString]"
            kind: UNBOUND
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "maxsplit"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "split"
      fully_qualified_name: "builtins.str.split"
      return_annotation {
        pretty_printed_name: "builtins.list[builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "builtins.list"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      parameters {
        name: "sep"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "maxsplit"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "splitlines"
    fullname: "builtins.str.splitlines"
    definitions {
      name: "splitlines"
      fully_qualified_name: "builtins.str.splitlines"
      return_annotation {
        pretty_printed_name: "builtins.list[UnboundType[LiteralString]]"
        args {
          pretty_printed_name: "UnboundType[LiteralString]"
          kind: UNBOUND
        }
        fully_qualified_name: "builtins.list"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "UnboundType[LiteralString]"
          kind: UNBOUND
        }
      }
      parameters {
        name: "keepends"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "splitlines"
      fully_qualified_name: "builtins.str.splitlines"
      return_annotation {
        pretty_printed_name: "builtins.list[builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "builtins.list"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      parameters {
        name: "keepends"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "strip"
    fullname: "builtins.str.strip"
    definitions {
      name: "strip"
      fully_qualified_name: "builtins.str.strip"
      return_annotation {
        pretty_printed_name: "UnboundType[LiteralString]"
        kind: UNBOUND
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "UnboundType[LiteralString]"
          kind: UNBOUND
        }
      }
      parameters {
        name: "__chars"
        type_annotation {
          pretty_printed_name: "Union[UnboundType[LiteralString],None]"
          kind: UNION
          args {
            pretty_printed_name: "UnboundType[LiteralString]"
            kind: UNBOUND
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "strip"
      fully_qualified_name: "builtins.str.strip"
      return_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      parameters {
        name: "__chars"
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "swapcase"
    fullname: "builtins.str.swapcase"
    definitions {
      name: "swapcase"
      fully_qualified_name: "builtins.str.swapcase"
      return_annotation {
        pretty_printed_name: "UnboundType[LiteralString]"
        kind: UNBOUND
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "UnboundType[LiteralString]"
          kind: UNBOUND
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "swapcase"
      fully_qualified_name: "builtins.str.swapcase"
      return_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "title"
    fullname: "builtins.str.title"
    definitions {
      name: "title"
      fully_qualified_name: "builtins.str.title"
      return_annotation {
        pretty_printed_name: "UnboundType[LiteralString]"
        kind: UNBOUND
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "UnboundType[LiteralString]"
          kind: UNBOUND
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "title"
      fully_qualified_name: "builtins.str.title"
      return_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "upper"
    fullname: "builtins.str.upper"
    definitions {
      name: "upper"
      fully_qualified_name: "builtins.str.upper"
      return_annotation {
        pretty_printed_name: "UnboundType[LiteralString]"
        kind: UNBOUND
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "UnboundType[LiteralString]"
          kind: UNBOUND
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "upper"
      fully_qualified_name: "builtins.str.upper"
      return_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "zfill"
    fullname: "builtins.str.zfill"
    definitions {
      name: "zfill"
      fully_qualified_name: "builtins.str.zfill"
      return_annotation {
        pretty_printed_name: "UnboundType[LiteralString]"
        kind: UNBOUND
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "UnboundType[LiteralString]"
          kind: UNBOUND
        }
      }
      parameters {
        name: "__width"
        type_annotation {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "zfill"
      fully_qualified_name: "builtins.str.zfill"
      return_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      parameters {
        name: "__width"
        type_annotation {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "maketrans"
    fullname: "builtins.str.maketrans"
    definitions {
      name: "maketrans"
      fully_qualified_name: "builtins.str.maketrans"
      return_annotation {
        pretty_printed_name: "builtins.dict[builtins.int,builtins._T]"
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.dict"
      }
      parameters {
        name: "__x"
        type_annotation {
          pretty_printed_name: "Union[builtins.dict[builtins.int,builtins._T],builtins.dict[builtins.str,builtins._T],builtins.dict[Union[builtins.str,builtins.int],builtins._T]]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.dict[builtins.int,builtins._T]"
            args {
              pretty_printed_name: "builtins.int"
              fully_qualified_name: "builtins.int"
            }
            args {
              pretty_printed_name: "builtins._T"
              kind: TYPE_VAR
            }
            fully_qualified_name: "builtins.dict"
          }
          args {
            pretty_printed_name: "builtins.dict[builtins.str,builtins._T]"
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins._T"
              kind: TYPE_VAR
            }
            fully_qualified_name: "builtins.dict"
          }
          args {
            pretty_printed_name: "builtins.dict[Union[builtins.str,builtins.int],builtins._T]"
            args {
              pretty_printed_name: "Union[builtins.str,builtins.int]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.int"
                fully_qualified_name: "builtins.int"
              }
            }
            args {
              pretty_printed_name: "builtins._T"
              kind: TYPE_VAR
            }
            fully_qualified_name: "builtins.dict"
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "staticmethod"
      resolved_decorator_names: "overload"
      is_overload: true
      is_static: true
    }
    definitions {
      name: "maketrans"
      fully_qualified_name: "builtins.str.maketrans"
      return_annotation {
        pretty_printed_name: "builtins.dict[builtins.int,builtins.int]"
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        fully_qualified_name: "builtins.dict"
      }
      parameters {
        name: "__x"
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      parameters {
        name: "__y"
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      has_decorators: true
      resolved_decorator_names: "staticmethod"
      resolved_decorator_names: "overload"
      is_overload: true
      is_static: true
    }
    definitions {
      name: "maketrans"
      fully_qualified_name: "builtins.str.maketrans"
      return_annotation {
        pretty_printed_name: "builtins.dict[builtins.int,Union[builtins.int,None]]"
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "Union[builtins.int,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        fully_qualified_name: "builtins.dict"
      }
      parameters {
        name: "__x"
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      parameters {
        name: "__y"
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      parameters {
        name: "__z"
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      has_decorators: true
      resolved_decorator_names: "staticmethod"
      resolved_decorator_names: "overload"
      is_overload: true
      is_static: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "__add__"
    fullname: "builtins.str.__add__"
    definitions {
      name: "__add__"
      fully_qualified_name: "builtins.str.__add__"
      return_annotation {
        pretty_printed_name: "UnboundType[LiteralString]"
        kind: UNBOUND
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "UnboundType[LiteralString]"
          kind: UNBOUND
        }
      }
      parameters {
        name: "__value"
        type_annotation {
          pretty_printed_name: "UnboundType[LiteralString]"
          kind: UNBOUND
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__add__"
      fully_qualified_name: "builtins.str.__add__"
      return_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      parameters {
        name: "__value"
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "__iter__"
    fullname: "builtins.str.__iter__"
    definitions {
      name: "__iter__"
      fully_qualified_name: "builtins.str.__iter__"
      return_annotation {
        pretty_printed_name: "typing.Iterator[UnboundType[LiteralString]]"
        args {
          pretty_printed_name: "UnboundType[LiteralString]"
          kind: UNBOUND
        }
        fully_qualified_name: "typing.Iterator"
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "UnboundType[LiteralString]"
          kind: UNBOUND
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__iter__"
      fully_qualified_name: "builtins.str.__iter__"
      return_annotation {
        pretty_printed_name: "typing.Iterator[builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "typing.Iterator"
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "__mod__"
    fullname: "builtins.str.__mod__"
    definitions {
      name: "__mod__"
      fully_qualified_name: "builtins.str.__mod__"
      return_annotation {
        pretty_printed_name: "UnboundType[LiteralString]"
        kind: UNBOUND
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "UnboundType[LiteralString]"
          kind: UNBOUND
        }
      }
      parameters {
        name: "__value"
        type_annotation {
          pretty_printed_name: "Union[UnboundType[LiteralString],Tuple[UnboundType[LiteralString],Any]]"
          kind: UNION
          args {
            pretty_printed_name: "UnboundType[LiteralString]"
            kind: UNBOUND
          }
          args {
            pretty_printed_name: "Tuple[UnboundType[LiteralString],Any]"
            kind: TUPLE
            args {
              pretty_printed_name: "UnboundType[LiteralString]"
              kind: UNBOUND
            }
            args {
              pretty_printed_name: "Any"
              kind: ANY
            }
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__mod__"
      fully_qualified_name: "builtins.str.__mod__"
      return_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      parameters {
        name: "__value"
        type_annotation {
          pretty_printed_name: "Any"
          kind: ANY
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
  }
  overloaded_methods {
    name: "__mod__"
    fullname: "builtins.str.__mod__"
    definitions {
      name: "__mod__"
      fully_qualified_name: "builtins.str.__mod__"
      return_annotation {
        pretty_printed_name: "UnboundType[LiteralString]"
        kind: UNBOUND
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "UnboundType[LiteralString]"
          kind: UNBOUND
        }
      }
      parameters {
        name: "__value"
        type_annotation {
          pretty_printed_name: "Union[UnboundType[LiteralString],builtins.tuple[UnboundType[LiteralString]]]"
          kind: UNION
          args {
            pretty_printed_name: "UnboundType[LiteralString]"
            kind: UNBOUND
          }
          args {
            pretty_printed_name: "builtins.tuple[UnboundType[LiteralString]]"
            args {
              pretty_printed_name: "UnboundType[LiteralString]"
              kind: UNBOUND
            }
            fully_qualified_name: "builtins.tuple"
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__mod__"
      fully_qualified_name: "builtins.str.__mod__"
      return_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      parameters {
        name: "__value"
        type_annotation {
          pretty_printed_name: "Any"
          kind: ANY
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "__mul__"
    fullname: "builtins.str.__mul__"
    definitions {
      name: "__mul__"
      fully_qualified_name: "builtins.str.__mul__"
      return_annotation {
        pretty_printed_name: "UnboundType[LiteralString]"
        kind: UNBOUND
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "UnboundType[LiteralString]"
          kind: UNBOUND
        }
      }
      parameters {
        name: "__value"
        type_annotation {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__mul__"
      fully_qualified_name: "builtins.str.__mul__"
      return_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      parameters {
        name: "__value"
        type_annotation {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "__rmul__"
    fullname: "builtins.str.__rmul__"
    definitions {
      name: "__rmul__"
      fully_qualified_name: "builtins.str.__rmul__"
      return_annotation {
        pretty_printed_name: "UnboundType[LiteralString]"
        kind: UNBOUND
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "UnboundType[LiteralString]"
          kind: UNBOUND
        }
      }
      parameters {
        name: "__value"
        type_annotation {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__rmul__"
      fully_qualified_name: "builtins.str.__rmul__"
      return_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      parameters {
        name: "__value"
        type_annotation {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "removeprefix"
    fullname: "builtins.str.removeprefix"
    definitions {
      name: "removeprefix"
      fully_qualified_name: "builtins.str.removeprefix"
      return_annotation {
        pretty_printed_name: "UnboundType[LiteralString]"
        kind: UNBOUND
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "UnboundType[LiteralString]"
          kind: UNBOUND
        }
      }
      parameters {
        name: "__prefix"
        type_annotation {
          pretty_printed_name: "UnboundType[LiteralString]"
          kind: UNBOUND
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "removeprefix"
      fully_qualified_name: "builtins.str.removeprefix"
      return_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      parameters {
        name: "__prefix"
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "removesuffix"
    fullname: "builtins.str.removesuffix"
    definitions {
      name: "removesuffix"
      fully_qualified_name: "builtins.str.removesuffix"
      return_annotation {
        pretty_printed_name: "UnboundType[LiteralString]"
        kind: UNBOUND
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "UnboundType[LiteralString]"
          kind: UNBOUND
        }
      }
      parameters {
        name: "__suffix"
        type_annotation {
          pretty_printed_name: "UnboundType[LiteralString]"
          kind: UNBOUND
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "removesuffix"
      fully_qualified_name: "builtins.str.removesuffix"
      return_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      parameters {
        name: "__suffix"
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "bytes"
  fully_qualified_name: "builtins.bytes"
  super_classes: "typing.ByteString"
  methods {
    name: "capitalize"
    fully_qualified_name: "builtins.bytes.capitalize"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "center"
    fully_qualified_name: "builtins.bytes.center"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    parameters {
      name: "__width"
      type_annotation {
        pretty_printed_name: "typing_extensions.SupportsIndex"
        fully_qualified_name: "typing_extensions.SupportsIndex"
      }
    }
    parameters {
      name: "__fillchar"
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "count"
    fully_qualified_name: "builtins.bytes.count"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    parameters {
      name: "__sub"
      type_annotation {
        pretty_printed_name: "Union[UnboundType[ReadableBuffer],typing_extensions.SupportsIndex]"
        kind: UNION
        args {
          pretty_printed_name: "UnboundType[ReadableBuffer]"
          kind: UNBOUND
        }
        args {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
      }
    }
    parameters {
      name: "__start"
      type_annotation {
        pretty_printed_name: "Union[typing_extensions.SupportsIndex,None]"
        kind: UNION
        args {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "__end"
      type_annotation {
        pretty_printed_name: "Union[typing_extensions.SupportsIndex,None]"
        kind: UNION
        args {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "decode"
    fully_qualified_name: "builtins.bytes.decode"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    parameters {
      name: "encoding"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      has_default: true
    }
    parameters {
      name: "errors"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "endswith"
    fully_qualified_name: "builtins.bytes.endswith"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    parameters {
      name: "__suffix"
      type_annotation {
        pretty_printed_name: "Union[UnboundType[ReadableBuffer],Tuple[UnboundType[ReadableBuffer],Any]]"
        kind: UNION
        args {
          pretty_printed_name: "UnboundType[ReadableBuffer]"
          kind: UNBOUND
        }
        args {
          pretty_printed_name: "Tuple[UnboundType[ReadableBuffer],Any]"
          kind: TUPLE
          args {
            pretty_printed_name: "UnboundType[ReadableBuffer]"
            kind: UNBOUND
          }
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
        }
      }
    }
    parameters {
      name: "__start"
      type_annotation {
        pretty_printed_name: "Union[typing_extensions.SupportsIndex,None]"
        kind: UNION
        args {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "__end"
      type_annotation {
        pretty_printed_name: "Union[typing_extensions.SupportsIndex,None]"
        kind: UNION
        args {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
  }
  methods {
    name: "endswith"
    fully_qualified_name: "builtins.bytes.endswith"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    parameters {
      name: "__suffix"
      type_annotation {
        pretty_printed_name: "Union[UnboundType[ReadableBuffer],builtins.tuple[UnboundType[ReadableBuffer]]]"
        kind: UNION
        args {
          pretty_printed_name: "UnboundType[ReadableBuffer]"
          kind: UNBOUND
        }
        args {
          pretty_printed_name: "builtins.tuple[UnboundType[ReadableBuffer]]"
          args {
            pretty_printed_name: "UnboundType[ReadableBuffer]"
            kind: UNBOUND
          }
          fully_qualified_name: "builtins.tuple"
        }
      }
    }
    parameters {
      name: "__start"
      type_annotation {
        pretty_printed_name: "Union[typing_extensions.SupportsIndex,None]"
        kind: UNION
        args {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "__end"
      type_annotation {
        pretty_printed_name: "Union[typing_extensions.SupportsIndex,None]"
        kind: UNION
        args {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "expandtabs"
    fully_qualified_name: "builtins.bytes.expandtabs"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    parameters {
      name: "tabsize"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
  }
  methods {
    name: "expandtabs"
    fully_qualified_name: "builtins.bytes.expandtabs"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    parameters {
      name: "tabsize"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing_extensions.SupportsIndex"
        fully_qualified_name: "typing_extensions.SupportsIndex"
      }
      has_default: true
    }
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "find"
    fully_qualified_name: "builtins.bytes.find"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    parameters {
      name: "__sub"
      type_annotation {
        pretty_printed_name: "Union[UnboundType[ReadableBuffer],typing_extensions.SupportsIndex]"
        kind: UNION
        args {
          pretty_printed_name: "UnboundType[ReadableBuffer]"
          kind: UNBOUND
        }
        args {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
      }
    }
    parameters {
      name: "__start"
      type_annotation {
        pretty_printed_name: "Union[typing_extensions.SupportsIndex,None]"
        kind: UNION
        args {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "__end"
      type_annotation {
        pretty_printed_name: "Union[typing_extensions.SupportsIndex,None]"
        kind: UNION
        args {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "hex"
    fully_qualified_name: "builtins.bytes.hex"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
  }
  methods {
    name: "hex"
    fully_qualified_name: "builtins.bytes.hex"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    parameters {
      name: "sep"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,builtins.bytes]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
      }
      has_default: true
    }
    parameters {
      name: "bytes_per_sep"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing_extensions.SupportsIndex"
        fully_qualified_name: "typing_extensions.SupportsIndex"
      }
      has_default: true
    }
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "index"
    fully_qualified_name: "builtins.bytes.index"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    parameters {
      name: "__sub"
      type_annotation {
        pretty_printed_name: "Union[UnboundType[ReadableBuffer],typing_extensions.SupportsIndex]"
        kind: UNION
        args {
          pretty_printed_name: "UnboundType[ReadableBuffer]"
          kind: UNBOUND
        }
        args {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
      }
    }
    parameters {
      name: "__start"
      type_annotation {
        pretty_printed_name: "Union[typing_extensions.SupportsIndex,None]"
        kind: UNION
        args {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "__end"
      type_annotation {
        pretty_printed_name: "Union[typing_extensions.SupportsIndex,None]"
        kind: UNION
        args {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "isalnum"
    fully_qualified_name: "builtins.bytes.isalnum"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "isalpha"
    fully_qualified_name: "builtins.bytes.isalpha"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "isascii"
    fully_qualified_name: "builtins.bytes.isascii"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "isdigit"
    fully_qualified_name: "builtins.bytes.isdigit"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "islower"
    fully_qualified_name: "builtins.bytes.islower"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "isspace"
    fully_qualified_name: "builtins.bytes.isspace"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "istitle"
    fully_qualified_name: "builtins.bytes.istitle"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "isupper"
    fully_qualified_name: "builtins.bytes.isupper"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "join"
    fully_qualified_name: "builtins.bytes.join"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    parameters {
      name: "__iterable_of_bytes"
      type_annotation {
        pretty_printed_name: "typing.Iterable[UnboundType[ReadableBuffer]]"
        args {
          pretty_printed_name: "UnboundType[ReadableBuffer]"
          kind: UNBOUND
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "ljust"
    fully_qualified_name: "builtins.bytes.ljust"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    parameters {
      name: "__width"
      type_annotation {
        pretty_printed_name: "typing_extensions.SupportsIndex"
        fully_qualified_name: "typing_extensions.SupportsIndex"
      }
    }
    parameters {
      name: "__fillchar"
      type_annotation {
        pretty_printed_name: "Union[builtins.bytes,builtins.bytearray]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "builtins.bytearray"
          fully_qualified_name: "builtins.bytearray"
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "lower"
    fully_qualified_name: "builtins.bytes.lower"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "lstrip"
    fully_qualified_name: "builtins.bytes.lstrip"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    parameters {
      name: "__bytes"
      type_annotation {
        pretty_printed_name: "Union[UnboundType[ReadableBuffer],None]"
        kind: UNION
        args {
          pretty_printed_name: "UnboundType[ReadableBuffer]"
          kind: UNBOUND
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "partition"
    fully_qualified_name: "builtins.bytes.partition"
    return_annotation {
      pretty_printed_name: "Tuple[builtins.bytes,builtins.bytes,builtins.bytes]"
      kind: TUPLE
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    parameters {
      name: "__sep"
      type_annotation {
        pretty_printed_name: "UnboundType[ReadableBuffer]"
        kind: UNBOUND
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "replace"
    fully_qualified_name: "builtins.bytes.replace"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    parameters {
      name: "__old"
      type_annotation {
        pretty_printed_name: "UnboundType[ReadableBuffer]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "__new"
      type_annotation {
        pretty_printed_name: "UnboundType[ReadableBuffer]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "__count"
      type_annotation {
        pretty_printed_name: "typing_extensions.SupportsIndex"
        fully_qualified_name: "typing_extensions.SupportsIndex"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "rfind"
    fully_qualified_name: "builtins.bytes.rfind"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    parameters {
      name: "__sub"
      type_annotation {
        pretty_printed_name: "Union[UnboundType[ReadableBuffer],typing_extensions.SupportsIndex]"
        kind: UNION
        args {
          pretty_printed_name: "UnboundType[ReadableBuffer]"
          kind: UNBOUND
        }
        args {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
      }
    }
    parameters {
      name: "__start"
      type_annotation {
        pretty_printed_name: "Union[typing_extensions.SupportsIndex,None]"
        kind: UNION
        args {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "__end"
      type_annotation {
        pretty_printed_name: "Union[typing_extensions.SupportsIndex,None]"
        kind: UNION
        args {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "rindex"
    fully_qualified_name: "builtins.bytes.rindex"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    parameters {
      name: "__sub"
      type_annotation {
        pretty_printed_name: "Union[UnboundType[ReadableBuffer],typing_extensions.SupportsIndex]"
        kind: UNION
        args {
          pretty_printed_name: "UnboundType[ReadableBuffer]"
          kind: UNBOUND
        }
        args {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
      }
    }
    parameters {
      name: "__start"
      type_annotation {
        pretty_printed_name: "Union[typing_extensions.SupportsIndex,None]"
        kind: UNION
        args {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "__end"
      type_annotation {
        pretty_printed_name: "Union[typing_extensions.SupportsIndex,None]"
        kind: UNION
        args {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "rjust"
    fully_qualified_name: "builtins.bytes.rjust"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    parameters {
      name: "__width"
      type_annotation {
        pretty_printed_name: "typing_extensions.SupportsIndex"
        fully_qualified_name: "typing_extensions.SupportsIndex"
      }
    }
    parameters {
      name: "__fillchar"
      type_annotation {
        pretty_printed_name: "Union[builtins.bytes,builtins.bytearray]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "builtins.bytearray"
          fully_qualified_name: "builtins.bytearray"
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "rpartition"
    fully_qualified_name: "builtins.bytes.rpartition"
    return_annotation {
      pretty_printed_name: "Tuple[builtins.bytes,builtins.bytes,builtins.bytes]"
      kind: TUPLE
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    parameters {
      name: "__sep"
      type_annotation {
        pretty_printed_name: "UnboundType[ReadableBuffer]"
        kind: UNBOUND
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "rsplit"
    fully_qualified_name: "builtins.bytes.rsplit"
    return_annotation {
      pretty_printed_name: "builtins.list[builtins.bytes]"
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    parameters {
      name: "sep"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[UnboundType[ReadableBuffer],None]"
        kind: UNION
        args {
          pretty_printed_name: "UnboundType[ReadableBuffer]"
          kind: UNBOUND
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "maxsplit"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing_extensions.SupportsIndex"
        fully_qualified_name: "typing_extensions.SupportsIndex"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "rstrip"
    fully_qualified_name: "builtins.bytes.rstrip"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    parameters {
      name: "__bytes"
      type_annotation {
        pretty_printed_name: "Union[UnboundType[ReadableBuffer],None]"
        kind: UNION
        args {
          pretty_printed_name: "UnboundType[ReadableBuffer]"
          kind: UNBOUND
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "split"
    fully_qualified_name: "builtins.bytes.split"
    return_annotation {
      pretty_printed_name: "builtins.list[builtins.bytes]"
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    parameters {
      name: "sep"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[UnboundType[ReadableBuffer],None]"
        kind: UNION
        args {
          pretty_printed_name: "UnboundType[ReadableBuffer]"
          kind: UNBOUND
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "maxsplit"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing_extensions.SupportsIndex"
        fully_qualified_name: "typing_extensions.SupportsIndex"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "splitlines"
    fully_qualified_name: "builtins.bytes.splitlines"
    return_annotation {
      pretty_printed_name: "builtins.list[builtins.bytes]"
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    parameters {
      name: "keepends"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "startswith"
    fully_qualified_name: "builtins.bytes.startswith"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    parameters {
      name: "__prefix"
      type_annotation {
        pretty_printed_name: "Union[UnboundType[ReadableBuffer],Tuple[UnboundType[ReadableBuffer],Any]]"
        kind: UNION
        args {
          pretty_printed_name: "UnboundType[ReadableBuffer]"
          kind: UNBOUND
        }
        args {
          pretty_printed_name: "Tuple[UnboundType[ReadableBuffer],Any]"
          kind: TUPLE
          args {
            pretty_printed_name: "UnboundType[ReadableBuffer]"
            kind: UNBOUND
          }
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
        }
      }
    }
    parameters {
      name: "__start"
      type_annotation {
        pretty_printed_name: "Union[typing_extensions.SupportsIndex,None]"
        kind: UNION
        args {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "__end"
      type_annotation {
        pretty_printed_name: "Union[typing_extensions.SupportsIndex,None]"
        kind: UNION
        args {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
  }
  methods {
    name: "startswith"
    fully_qualified_name: "builtins.bytes.startswith"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    parameters {
      name: "__prefix"
      type_annotation {
        pretty_printed_name: "Union[UnboundType[ReadableBuffer],builtins.tuple[UnboundType[ReadableBuffer]]]"
        kind: UNION
        args {
          pretty_printed_name: "UnboundType[ReadableBuffer]"
          kind: UNBOUND
        }
        args {
          pretty_printed_name: "builtins.tuple[UnboundType[ReadableBuffer]]"
          args {
            pretty_printed_name: "UnboundType[ReadableBuffer]"
            kind: UNBOUND
          }
          fully_qualified_name: "builtins.tuple"
        }
      }
    }
    parameters {
      name: "__start"
      type_annotation {
        pretty_printed_name: "Union[typing_extensions.SupportsIndex,None]"
        kind: UNION
        args {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "__end"
      type_annotation {
        pretty_printed_name: "Union[typing_extensions.SupportsIndex,None]"
        kind: UNION
        args {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "strip"
    fully_qualified_name: "builtins.bytes.strip"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    parameters {
      name: "__bytes"
      type_annotation {
        pretty_printed_name: "Union[UnboundType[ReadableBuffer],None]"
        kind: UNION
        args {
          pretty_printed_name: "UnboundType[ReadableBuffer]"
          kind: UNBOUND
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "swapcase"
    fully_qualified_name: "builtins.bytes.swapcase"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "title"
    fully_qualified_name: "builtins.bytes.title"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "translate"
    fully_qualified_name: "builtins.bytes.translate"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    parameters {
      name: "__table"
      type_annotation {
        pretty_printed_name: "Union[UnboundType[ReadableBuffer],None]"
        kind: UNION
        args {
          pretty_printed_name: "UnboundType[ReadableBuffer]"
          kind: UNBOUND
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "delete"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "upper"
    fully_qualified_name: "builtins.bytes.upper"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "zfill"
    fully_qualified_name: "builtins.bytes.zfill"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    parameters {
      name: "__width"
      type_annotation {
        pretty_printed_name: "typing_extensions.SupportsIndex"
        fully_qualified_name: "typing_extensions.SupportsIndex"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "fromhex"
    fully_qualified_name: "builtins.bytes.fromhex"
    return_annotation {
      pretty_printed_name: "UnboundType[Self]"
      kind: UNBOUND
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[builtins.bytes]"
        kind: TYPE
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
      }
    }
    parameters {
      name: "__string"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    has_decorators: true
    resolved_decorator_names: "classmethod"
    is_class_method: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "maketrans"
    fully_qualified_name: "builtins.bytes.maketrans"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "__frm"
      type_annotation {
        pretty_printed_name: "UnboundType[ReadableBuffer]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "__to"
      type_annotation {
        pretty_printed_name: "UnboundType[ReadableBuffer]"
        kind: UNBOUND
      }
    }
    has_decorators: true
    resolved_decorator_names: "staticmethod"
    is_static: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__len__"
    fully_qualified_name: "builtins.bytes.__len__"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__iter__"
    fully_qualified_name: "builtins.bytes.__iter__"
    return_annotation {
      pretty_printed_name: "typing.Iterator[builtins.int]"
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__add__"
    fully_qualified_name: "builtins.bytes.__add__"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "UnboundType[ReadableBuffer]"
        kind: UNBOUND
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__mul__"
    fully_qualified_name: "builtins.bytes.__mul__"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "typing_extensions.SupportsIndex"
        fully_qualified_name: "typing_extensions.SupportsIndex"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__rmul__"
    fully_qualified_name: "builtins.bytes.__rmul__"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "typing_extensions.SupportsIndex"
        fully_qualified_name: "typing_extensions.SupportsIndex"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__mod__"
    fully_qualified_name: "builtins.bytes.__mod__"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__contains__"
    fully_qualified_name: "builtins.bytes.__contains__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    parameters {
      name: "__key"
      type_annotation {
        pretty_printed_name: "Union[typing_extensions.SupportsIndex,UnboundType[ReadableBuffer]]"
        kind: UNION
        args {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
        args {
          pretty_printed_name: "UnboundType[ReadableBuffer]"
          kind: UNBOUND
        }
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__eq__"
    fully_qualified_name: "builtins.bytes.__eq__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__ne__"
    fully_qualified_name: "builtins.bytes.__ne__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__lt__"
    fully_qualified_name: "builtins.bytes.__lt__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__le__"
    fully_qualified_name: "builtins.bytes.__le__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__gt__"
    fully_qualified_name: "builtins.bytes.__gt__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__ge__"
    fully_qualified_name: "builtins.bytes.__ge__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__getnewargs__"
    fully_qualified_name: "builtins.bytes.__getnewargs__"
    return_annotation {
      pretty_printed_name: "Tuple[builtins.bytes]"
      kind: TUPLE
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "removeprefix"
    fully_qualified_name: "builtins.bytes.removeprefix"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    parameters {
      name: "__prefix"
      type_annotation {
        pretty_printed_name: "UnboundType[ReadableBuffer]"
        kind: UNBOUND
      }
    }
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "removesuffix"
    fully_qualified_name: "builtins.bytes.removesuffix"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    parameters {
      name: "__suffix"
      type_annotation {
        pretty_printed_name: "UnboundType[ReadableBuffer]"
        kind: UNBOUND
      }
    }
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "__new__"
    fullname: "builtins.bytes.__new__"
    definitions {
      name: "__new__"
      fully_qualified_name: "builtins.bytes.__new__"
      return_annotation {
        pretty_printed_name: "UnboundType[Self]"
        kind: UNBOUND
      }
      parameters {
        name: "cls"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Type[builtins.bytes]"
          kind: TYPE
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
      }
      parameters {
        name: "__o"
        type_annotation {
          pretty_printed_name: "Union[typing.Iterable[typing_extensions.SupportsIndex],typing_extensions.SupportsIndex,typing.SupportsBytes,UnboundType[ReadableBuffer]]"
          kind: UNION
          args {
            pretty_printed_name: "typing.Iterable[typing_extensions.SupportsIndex]"
            args {
              pretty_printed_name: "typing_extensions.SupportsIndex"
              fully_qualified_name: "typing_extensions.SupportsIndex"
            }
            fully_qualified_name: "typing.Iterable"
          }
          args {
            pretty_printed_name: "typing_extensions.SupportsIndex"
            fully_qualified_name: "typing_extensions.SupportsIndex"
          }
          args {
            pretty_printed_name: "typing.SupportsBytes"
            fully_qualified_name: "typing.SupportsBytes"
          }
          args {
            pretty_printed_name: "UnboundType[ReadableBuffer]"
            kind: UNBOUND
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__new__"
      fully_qualified_name: "builtins.bytes.__new__"
      return_annotation {
        pretty_printed_name: "UnboundType[Self]"
        kind: UNBOUND
      }
      parameters {
        name: "cls"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Type[builtins.bytes]"
          kind: TYPE
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
      }
      parameters {
        name: "__string"
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      parameters {
        name: "encoding"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      parameters {
        name: "errors"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__new__"
      fully_qualified_name: "builtins.bytes.__new__"
      return_annotation {
        pretty_printed_name: "UnboundType[Self]"
        kind: UNBOUND
      }
      parameters {
        name: "cls"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Type[builtins.bytes]"
          kind: TYPE
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "__getitem__"
    fullname: "builtins.bytes.__getitem__"
    definitions {
      name: "__getitem__"
      fully_qualified_name: "builtins.bytes.__getitem__"
      return_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
      }
      parameters {
        name: "__key"
        type_annotation {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__getitem__"
      fully_qualified_name: "builtins.bytes.__getitem__"
      return_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
      }
      parameters {
        name: "__key"
        type_annotation {
          pretty_printed_name: "builtins.slice"
          fully_qualified_name: "builtins.slice"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "bytearray"
  fully_qualified_name: "builtins.bytearray"
  super_classes: "typing.MutableSequence"
  super_classes: "typing.ByteString"
  methods {
    name: "append"
    fully_qualified_name: "builtins.bytearray.append"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytearray"
        fully_qualified_name: "builtins.bytearray"
      }
    }
    parameters {
      name: "__item"
      type_annotation {
        pretty_printed_name: "typing_extensions.SupportsIndex"
        fully_qualified_name: "typing_extensions.SupportsIndex"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "capitalize"
    fully_qualified_name: "builtins.bytearray.capitalize"
    return_annotation {
      pretty_printed_name: "builtins.bytearray"
      fully_qualified_name: "builtins.bytearray"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytearray"
        fully_qualified_name: "builtins.bytearray"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "center"
    fully_qualified_name: "builtins.bytearray.center"
    return_annotation {
      pretty_printed_name: "builtins.bytearray"
      fully_qualified_name: "builtins.bytearray"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytearray"
        fully_qualified_name: "builtins.bytearray"
      }
    }
    parameters {
      name: "__width"
      type_annotation {
        pretty_printed_name: "typing_extensions.SupportsIndex"
        fully_qualified_name: "typing_extensions.SupportsIndex"
      }
    }
    parameters {
      name: "__fillchar"
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "count"
    fully_qualified_name: "builtins.bytearray.count"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytearray"
        fully_qualified_name: "builtins.bytearray"
      }
    }
    parameters {
      name: "__sub"
      type_annotation {
        pretty_printed_name: "Union[UnboundType[ReadableBuffer],typing_extensions.SupportsIndex]"
        kind: UNION
        args {
          pretty_printed_name: "UnboundType[ReadableBuffer]"
          kind: UNBOUND
        }
        args {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
      }
    }
    parameters {
      name: "__start"
      type_annotation {
        pretty_printed_name: "Union[typing_extensions.SupportsIndex,None]"
        kind: UNION
        args {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "__end"
      type_annotation {
        pretty_printed_name: "Union[typing_extensions.SupportsIndex,None]"
        kind: UNION
        args {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "copy"
    fully_qualified_name: "builtins.bytearray.copy"
    return_annotation {
      pretty_printed_name: "builtins.bytearray"
      fully_qualified_name: "builtins.bytearray"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytearray"
        fully_qualified_name: "builtins.bytearray"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "decode"
    fully_qualified_name: "builtins.bytearray.decode"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytearray"
        fully_qualified_name: "builtins.bytearray"
      }
    }
    parameters {
      name: "encoding"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      has_default: true
    }
    parameters {
      name: "errors"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "endswith"
    fully_qualified_name: "builtins.bytearray.endswith"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytearray"
        fully_qualified_name: "builtins.bytearray"
      }
    }
    parameters {
      name: "__suffix"
      type_annotation {
        pretty_printed_name: "Union[UnboundType[ReadableBuffer],Tuple[UnboundType[ReadableBuffer],Any]]"
        kind: UNION
        args {
          pretty_printed_name: "UnboundType[ReadableBuffer]"
          kind: UNBOUND
        }
        args {
          pretty_printed_name: "Tuple[UnboundType[ReadableBuffer],Any]"
          kind: TUPLE
          args {
            pretty_printed_name: "UnboundType[ReadableBuffer]"
            kind: UNBOUND
          }
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
        }
      }
    }
    parameters {
      name: "__start"
      type_annotation {
        pretty_printed_name: "Union[typing_extensions.SupportsIndex,None]"
        kind: UNION
        args {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "__end"
      type_annotation {
        pretty_printed_name: "Union[typing_extensions.SupportsIndex,None]"
        kind: UNION
        args {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
  }
  methods {
    name: "endswith"
    fully_qualified_name: "builtins.bytearray.endswith"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytearray"
        fully_qualified_name: "builtins.bytearray"
      }
    }
    parameters {
      name: "__suffix"
      type_annotation {
        pretty_printed_name: "Union[UnboundType[ReadableBuffer],builtins.tuple[UnboundType[ReadableBuffer]]]"
        kind: UNION
        args {
          pretty_printed_name: "UnboundType[ReadableBuffer]"
          kind: UNBOUND
        }
        args {
          pretty_printed_name: "builtins.tuple[UnboundType[ReadableBuffer]]"
          args {
            pretty_printed_name: "UnboundType[ReadableBuffer]"
            kind: UNBOUND
          }
          fully_qualified_name: "builtins.tuple"
        }
      }
    }
    parameters {
      name: "__start"
      type_annotation {
        pretty_printed_name: "Union[typing_extensions.SupportsIndex,None]"
        kind: UNION
        args {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "__end"
      type_annotation {
        pretty_printed_name: "Union[typing_extensions.SupportsIndex,None]"
        kind: UNION
        args {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "expandtabs"
    fully_qualified_name: "builtins.bytearray.expandtabs"
    return_annotation {
      pretty_printed_name: "builtins.bytearray"
      fully_qualified_name: "builtins.bytearray"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytearray"
        fully_qualified_name: "builtins.bytearray"
      }
    }
    parameters {
      name: "tabsize"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
  }
  methods {
    name: "expandtabs"
    fully_qualified_name: "builtins.bytearray.expandtabs"
    return_annotation {
      pretty_printed_name: "builtins.bytearray"
      fully_qualified_name: "builtins.bytearray"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytearray"
        fully_qualified_name: "builtins.bytearray"
      }
    }
    parameters {
      name: "tabsize"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing_extensions.SupportsIndex"
        fully_qualified_name: "typing_extensions.SupportsIndex"
      }
      has_default: true
    }
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "extend"
    fully_qualified_name: "builtins.bytearray.extend"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytearray"
        fully_qualified_name: "builtins.bytearray"
      }
    }
    parameters {
      name: "__iterable_of_ints"
      type_annotation {
        pretty_printed_name: "typing.Iterable[typing_extensions.SupportsIndex]"
        args {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "find"
    fully_qualified_name: "builtins.bytearray.find"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytearray"
        fully_qualified_name: "builtins.bytearray"
      }
    }
    parameters {
      name: "__sub"
      type_annotation {
        pretty_printed_name: "Union[UnboundType[ReadableBuffer],typing_extensions.SupportsIndex]"
        kind: UNION
        args {
          pretty_printed_name: "UnboundType[ReadableBuffer]"
          kind: UNBOUND
        }
        args {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
      }
    }
    parameters {
      name: "__start"
      type_annotation {
        pretty_printed_name: "Union[typing_extensions.SupportsIndex,None]"
        kind: UNION
        args {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "__end"
      type_annotation {
        pretty_printed_name: "Union[typing_extensions.SupportsIndex,None]"
        kind: UNION
        args {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "hex"
    fully_qualified_name: "builtins.bytearray.hex"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytearray"
        fully_qualified_name: "builtins.bytearray"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
  }
  methods {
    name: "hex"
    fully_qualified_name: "builtins.bytearray.hex"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytearray"
        fully_qualified_name: "builtins.bytearray"
      }
    }
    parameters {
      name: "sep"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,builtins.bytes]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
      }
      has_default: true
    }
    parameters {
      name: "bytes_per_sep"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing_extensions.SupportsIndex"
        fully_qualified_name: "typing_extensions.SupportsIndex"
      }
      has_default: true
    }
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "index"
    fully_qualified_name: "builtins.bytearray.index"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytearray"
        fully_qualified_name: "builtins.bytearray"
      }
    }
    parameters {
      name: "__sub"
      type_annotation {
        pretty_printed_name: "Union[UnboundType[ReadableBuffer],typing_extensions.SupportsIndex]"
        kind: UNION
        args {
          pretty_printed_name: "UnboundType[ReadableBuffer]"
          kind: UNBOUND
        }
        args {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
      }
    }
    parameters {
      name: "__start"
      type_annotation {
        pretty_printed_name: "Union[typing_extensions.SupportsIndex,None]"
        kind: UNION
        args {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "__end"
      type_annotation {
        pretty_printed_name: "Union[typing_extensions.SupportsIndex,None]"
        kind: UNION
        args {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "insert"
    fully_qualified_name: "builtins.bytearray.insert"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytearray"
        fully_qualified_name: "builtins.bytearray"
      }
    }
    parameters {
      name: "__index"
      type_annotation {
        pretty_printed_name: "typing_extensions.SupportsIndex"
        fully_qualified_name: "typing_extensions.SupportsIndex"
      }
    }
    parameters {
      name: "__item"
      type_annotation {
        pretty_printed_name: "typing_extensions.SupportsIndex"
        fully_qualified_name: "typing_extensions.SupportsIndex"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "isalnum"
    fully_qualified_name: "builtins.bytearray.isalnum"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytearray"
        fully_qualified_name: "builtins.bytearray"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "isalpha"
    fully_qualified_name: "builtins.bytearray.isalpha"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytearray"
        fully_qualified_name: "builtins.bytearray"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "isascii"
    fully_qualified_name: "builtins.bytearray.isascii"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytearray"
        fully_qualified_name: "builtins.bytearray"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "isdigit"
    fully_qualified_name: "builtins.bytearray.isdigit"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytearray"
        fully_qualified_name: "builtins.bytearray"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "islower"
    fully_qualified_name: "builtins.bytearray.islower"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytearray"
        fully_qualified_name: "builtins.bytearray"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "isspace"
    fully_qualified_name: "builtins.bytearray.isspace"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytearray"
        fully_qualified_name: "builtins.bytearray"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "istitle"
    fully_qualified_name: "builtins.bytearray.istitle"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytearray"
        fully_qualified_name: "builtins.bytearray"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "isupper"
    fully_qualified_name: "builtins.bytearray.isupper"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytearray"
        fully_qualified_name: "builtins.bytearray"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "join"
    fully_qualified_name: "builtins.bytearray.join"
    return_annotation {
      pretty_printed_name: "builtins.bytearray"
      fully_qualified_name: "builtins.bytearray"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytearray"
        fully_qualified_name: "builtins.bytearray"
      }
    }
    parameters {
      name: "__iterable_of_bytes"
      type_annotation {
        pretty_printed_name: "typing.Iterable[UnboundType[ReadableBuffer]]"
        args {
          pretty_printed_name: "UnboundType[ReadableBuffer]"
          kind: UNBOUND
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "ljust"
    fully_qualified_name: "builtins.bytearray.ljust"
    return_annotation {
      pretty_printed_name: "builtins.bytearray"
      fully_qualified_name: "builtins.bytearray"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytearray"
        fully_qualified_name: "builtins.bytearray"
      }
    }
    parameters {
      name: "__width"
      type_annotation {
        pretty_printed_name: "typing_extensions.SupportsIndex"
        fully_qualified_name: "typing_extensions.SupportsIndex"
      }
    }
    parameters {
      name: "__fillchar"
      type_annotation {
        pretty_printed_name: "Union[builtins.bytes,builtins.bytearray]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "builtins.bytearray"
          fully_qualified_name: "builtins.bytearray"
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "lower"
    fully_qualified_name: "builtins.bytearray.lower"
    return_annotation {
      pretty_printed_name: "builtins.bytearray"
      fully_qualified_name: "builtins.bytearray"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytearray"
        fully_qualified_name: "builtins.bytearray"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "lstrip"
    fully_qualified_name: "builtins.bytearray.lstrip"
    return_annotation {
      pretty_printed_name: "builtins.bytearray"
      fully_qualified_name: "builtins.bytearray"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytearray"
        fully_qualified_name: "builtins.bytearray"
      }
    }
    parameters {
      name: "__bytes"
      type_annotation {
        pretty_printed_name: "Union[UnboundType[ReadableBuffer],None]"
        kind: UNION
        args {
          pretty_printed_name: "UnboundType[ReadableBuffer]"
          kind: UNBOUND
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "partition"
    fully_qualified_name: "builtins.bytearray.partition"
    return_annotation {
      pretty_printed_name: "Tuple[builtins.bytearray,builtins.bytearray,builtins.bytearray]"
      kind: TUPLE
      args {
        pretty_printed_name: "builtins.bytearray"
        fully_qualified_name: "builtins.bytearray"
      }
      args {
        pretty_printed_name: "builtins.bytearray"
        fully_qualified_name: "builtins.bytearray"
      }
      args {
        pretty_printed_name: "builtins.bytearray"
        fully_qualified_name: "builtins.bytearray"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytearray"
        fully_qualified_name: "builtins.bytearray"
      }
    }
    parameters {
      name: "__sep"
      type_annotation {
        pretty_printed_name: "UnboundType[ReadableBuffer]"
        kind: UNBOUND
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "pop"
    fully_qualified_name: "builtins.bytearray.pop"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytearray"
        fully_qualified_name: "builtins.bytearray"
      }
    }
    parameters {
      name: "__index"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "remove"
    fully_qualified_name: "builtins.bytearray.remove"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytearray"
        fully_qualified_name: "builtins.bytearray"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "replace"
    fully_qualified_name: "builtins.bytearray.replace"
    return_annotation {
      pretty_printed_name: "builtins.bytearray"
      fully_qualified_name: "builtins.bytearray"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytearray"
        fully_qualified_name: "builtins.bytearray"
      }
    }
    parameters {
      name: "__old"
      type_annotation {
        pretty_printed_name: "UnboundType[ReadableBuffer]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "__new"
      type_annotation {
        pretty_printed_name: "UnboundType[ReadableBuffer]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "__count"
      type_annotation {
        pretty_printed_name: "typing_extensions.SupportsIndex"
        fully_qualified_name: "typing_extensions.SupportsIndex"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "rfind"
    fully_qualified_name: "builtins.bytearray.rfind"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytearray"
        fully_qualified_name: "builtins.bytearray"
      }
    }
    parameters {
      name: "__sub"
      type_annotation {
        pretty_printed_name: "Union[UnboundType[ReadableBuffer],typing_extensions.SupportsIndex]"
        kind: UNION
        args {
          pretty_printed_name: "UnboundType[ReadableBuffer]"
          kind: UNBOUND
        }
        args {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
      }
    }
    parameters {
      name: "__start"
      type_annotation {
        pretty_printed_name: "Union[typing_extensions.SupportsIndex,None]"
        kind: UNION
        args {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "__end"
      type_annotation {
        pretty_printed_name: "Union[typing_extensions.SupportsIndex,None]"
        kind: UNION
        args {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "rindex"
    fully_qualified_name: "builtins.bytearray.rindex"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytearray"
        fully_qualified_name: "builtins.bytearray"
      }
    }
    parameters {
      name: "__sub"
      type_annotation {
        pretty_printed_name: "Union[UnboundType[ReadableBuffer],typing_extensions.SupportsIndex]"
        kind: UNION
        args {
          pretty_printed_name: "UnboundType[ReadableBuffer]"
          kind: UNBOUND
        }
        args {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
      }
    }
    parameters {
      name: "__start"
      type_annotation {
        pretty_printed_name: "Union[typing_extensions.SupportsIndex,None]"
        kind: UNION
        args {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "__end"
      type_annotation {
        pretty_printed_name: "Union[typing_extensions.SupportsIndex,None]"
        kind: UNION
        args {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "rjust"
    fully_qualified_name: "builtins.bytearray.rjust"
    return_annotation {
      pretty_printed_name: "builtins.bytearray"
      fully_qualified_name: "builtins.bytearray"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytearray"
        fully_qualified_name: "builtins.bytearray"
      }
    }
    parameters {
      name: "__width"
      type_annotation {
        pretty_printed_name: "typing_extensions.SupportsIndex"
        fully_qualified_name: "typing_extensions.SupportsIndex"
      }
    }
    parameters {
      name: "__fillchar"
      type_annotation {
        pretty_printed_name: "Union[builtins.bytes,builtins.bytearray]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "builtins.bytearray"
          fully_qualified_name: "builtins.bytearray"
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "rpartition"
    fully_qualified_name: "builtins.bytearray.rpartition"
    return_annotation {
      pretty_printed_name: "Tuple[builtins.bytearray,builtins.bytearray,builtins.bytearray]"
      kind: TUPLE
      args {
        pretty_printed_name: "builtins.bytearray"
        fully_qualified_name: "builtins.bytearray"
      }
      args {
        pretty_printed_name: "builtins.bytearray"
        fully_qualified_name: "builtins.bytearray"
      }
      args {
        pretty_printed_name: "builtins.bytearray"
        fully_qualified_name: "builtins.bytearray"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytearray"
        fully_qualified_name: "builtins.bytearray"
      }
    }
    parameters {
      name: "__sep"
      type_annotation {
        pretty_printed_name: "UnboundType[ReadableBuffer]"
        kind: UNBOUND
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "rsplit"
    fully_qualified_name: "builtins.bytearray.rsplit"
    return_annotation {
      pretty_printed_name: "builtins.list[builtins.bytearray]"
      args {
        pretty_printed_name: "builtins.bytearray"
        fully_qualified_name: "builtins.bytearray"
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytearray"
        fully_qualified_name: "builtins.bytearray"
      }
    }
    parameters {
      name: "sep"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[UnboundType[ReadableBuffer],None]"
        kind: UNION
        args {
          pretty_printed_name: "UnboundType[ReadableBuffer]"
          kind: UNBOUND
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "maxsplit"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing_extensions.SupportsIndex"
        fully_qualified_name: "typing_extensions.SupportsIndex"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "rstrip"
    fully_qualified_name: "builtins.bytearray.rstrip"
    return_annotation {
      pretty_printed_name: "builtins.bytearray"
      fully_qualified_name: "builtins.bytearray"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytearray"
        fully_qualified_name: "builtins.bytearray"
      }
    }
    parameters {
      name: "__bytes"
      type_annotation {
        pretty_printed_name: "Union[UnboundType[ReadableBuffer],None]"
        kind: UNION
        args {
          pretty_printed_name: "UnboundType[ReadableBuffer]"
          kind: UNBOUND
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "split"
    fully_qualified_name: "builtins.bytearray.split"
    return_annotation {
      pretty_printed_name: "builtins.list[builtins.bytearray]"
      args {
        pretty_printed_name: "builtins.bytearray"
        fully_qualified_name: "builtins.bytearray"
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytearray"
        fully_qualified_name: "builtins.bytearray"
      }
    }
    parameters {
      name: "sep"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[UnboundType[ReadableBuffer],None]"
        kind: UNION
        args {
          pretty_printed_name: "UnboundType[ReadableBuffer]"
          kind: UNBOUND
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "maxsplit"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing_extensions.SupportsIndex"
        fully_qualified_name: "typing_extensions.SupportsIndex"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "splitlines"
    fully_qualified_name: "builtins.bytearray.splitlines"
    return_annotation {
      pretty_printed_name: "builtins.list[builtins.bytearray]"
      args {
        pretty_printed_name: "builtins.bytearray"
        fully_qualified_name: "builtins.bytearray"
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytearray"
        fully_qualified_name: "builtins.bytearray"
      }
    }
    parameters {
      name: "keepends"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "startswith"
    fully_qualified_name: "builtins.bytearray.startswith"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytearray"
        fully_qualified_name: "builtins.bytearray"
      }
    }
    parameters {
      name: "__prefix"
      type_annotation {
        pretty_printed_name: "Union[UnboundType[ReadableBuffer],Tuple[UnboundType[ReadableBuffer],Any]]"
        kind: UNION
        args {
          pretty_printed_name: "UnboundType[ReadableBuffer]"
          kind: UNBOUND
        }
        args {
          pretty_printed_name: "Tuple[UnboundType[ReadableBuffer],Any]"
          kind: TUPLE
          args {
            pretty_printed_name: "UnboundType[ReadableBuffer]"
            kind: UNBOUND
          }
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
        }
      }
    }
    parameters {
      name: "__start"
      type_annotation {
        pretty_printed_name: "Union[typing_extensions.SupportsIndex,None]"
        kind: UNION
        args {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "__end"
      type_annotation {
        pretty_printed_name: "Union[typing_extensions.SupportsIndex,None]"
        kind: UNION
        args {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
  }
  methods {
    name: "startswith"
    fully_qualified_name: "builtins.bytearray.startswith"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytearray"
        fully_qualified_name: "builtins.bytearray"
      }
    }
    parameters {
      name: "__prefix"
      type_annotation {
        pretty_printed_name: "Union[UnboundType[ReadableBuffer],builtins.tuple[UnboundType[ReadableBuffer]]]"
        kind: UNION
        args {
          pretty_printed_name: "UnboundType[ReadableBuffer]"
          kind: UNBOUND
        }
        args {
          pretty_printed_name: "builtins.tuple[UnboundType[ReadableBuffer]]"
          args {
            pretty_printed_name: "UnboundType[ReadableBuffer]"
            kind: UNBOUND
          }
          fully_qualified_name: "builtins.tuple"
        }
      }
    }
    parameters {
      name: "__start"
      type_annotation {
        pretty_printed_name: "Union[typing_extensions.SupportsIndex,None]"
        kind: UNION
        args {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "__end"
      type_annotation {
        pretty_printed_name: "Union[typing_extensions.SupportsIndex,None]"
        kind: UNION
        args {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "strip"
    fully_qualified_name: "builtins.bytearray.strip"
    return_annotation {
      pretty_printed_name: "builtins.bytearray"
      fully_qualified_name: "builtins.bytearray"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytearray"
        fully_qualified_name: "builtins.bytearray"
      }
    }
    parameters {
      name: "__bytes"
      type_annotation {
        pretty_printed_name: "Union[UnboundType[ReadableBuffer],None]"
        kind: UNION
        args {
          pretty_printed_name: "UnboundType[ReadableBuffer]"
          kind: UNBOUND
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "swapcase"
    fully_qualified_name: "builtins.bytearray.swapcase"
    return_annotation {
      pretty_printed_name: "builtins.bytearray"
      fully_qualified_name: "builtins.bytearray"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytearray"
        fully_qualified_name: "builtins.bytearray"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "title"
    fully_qualified_name: "builtins.bytearray.title"
    return_annotation {
      pretty_printed_name: "builtins.bytearray"
      fully_qualified_name: "builtins.bytearray"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytearray"
        fully_qualified_name: "builtins.bytearray"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "translate"
    fully_qualified_name: "builtins.bytearray.translate"
    return_annotation {
      pretty_printed_name: "builtins.bytearray"
      fully_qualified_name: "builtins.bytearray"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytearray"
        fully_qualified_name: "builtins.bytearray"
      }
    }
    parameters {
      name: "__table"
      type_annotation {
        pretty_printed_name: "Union[UnboundType[ReadableBuffer],None]"
        kind: UNION
        args {
          pretty_printed_name: "UnboundType[ReadableBuffer]"
          kind: UNBOUND
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "delete"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "upper"
    fully_qualified_name: "builtins.bytearray.upper"
    return_annotation {
      pretty_printed_name: "builtins.bytearray"
      fully_qualified_name: "builtins.bytearray"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytearray"
        fully_qualified_name: "builtins.bytearray"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "zfill"
    fully_qualified_name: "builtins.bytearray.zfill"
    return_annotation {
      pretty_printed_name: "builtins.bytearray"
      fully_qualified_name: "builtins.bytearray"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytearray"
        fully_qualified_name: "builtins.bytearray"
      }
    }
    parameters {
      name: "__width"
      type_annotation {
        pretty_printed_name: "typing_extensions.SupportsIndex"
        fully_qualified_name: "typing_extensions.SupportsIndex"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "fromhex"
    fully_qualified_name: "builtins.bytearray.fromhex"
    return_annotation {
      pretty_printed_name: "UnboundType[Self]"
      kind: UNBOUND
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[builtins.bytearray]"
        kind: TYPE
        args {
          pretty_printed_name: "builtins.bytearray"
          fully_qualified_name: "builtins.bytearray"
        }
      }
    }
    parameters {
      name: "__string"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    has_decorators: true
    resolved_decorator_names: "classmethod"
    is_class_method: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "maketrans"
    fully_qualified_name: "builtins.bytearray.maketrans"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "__frm"
      type_annotation {
        pretty_printed_name: "UnboundType[ReadableBuffer]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "__to"
      type_annotation {
        pretty_printed_name: "UnboundType[ReadableBuffer]"
        kind: UNBOUND
      }
    }
    has_decorators: true
    resolved_decorator_names: "staticmethod"
    is_static: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__len__"
    fully_qualified_name: "builtins.bytearray.__len__"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.bytearray"
        fully_qualified_name: "builtins.bytearray"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__iter__"
    fully_qualified_name: "builtins.bytearray.__iter__"
    return_annotation {
      pretty_printed_name: "typing.Iterator[builtins.int]"
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.bytearray"
        fully_qualified_name: "builtins.bytearray"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__delitem__"
    fully_qualified_name: "builtins.bytearray.__delitem__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.bytearray"
        fully_qualified_name: "builtins.bytearray"
      }
    }
    parameters {
      name: "__key"
      type_annotation {
        pretty_printed_name: "Union[typing_extensions.SupportsIndex,builtins.slice]"
        kind: UNION
        args {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
        args {
          pretty_printed_name: "builtins.slice"
          fully_qualified_name: "builtins.slice"
        }
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__add__"
    fully_qualified_name: "builtins.bytearray.__add__"
    return_annotation {
      pretty_printed_name: "builtins.bytearray"
      fully_qualified_name: "builtins.bytearray"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.bytearray"
        fully_qualified_name: "builtins.bytearray"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "UnboundType[ReadableBuffer]"
        kind: UNBOUND
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__iadd__"
    fully_qualified_name: "builtins.bytearray.__iadd__"
    return_annotation {
      pretty_printed_name: "UnboundType[Self]"
      kind: UNBOUND
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.bytearray"
        fully_qualified_name: "builtins.bytearray"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "UnboundType[ReadableBuffer]"
        kind: UNBOUND
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__mul__"
    fully_qualified_name: "builtins.bytearray.__mul__"
    return_annotation {
      pretty_printed_name: "builtins.bytearray"
      fully_qualified_name: "builtins.bytearray"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.bytearray"
        fully_qualified_name: "builtins.bytearray"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "typing_extensions.SupportsIndex"
        fully_qualified_name: "typing_extensions.SupportsIndex"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__rmul__"
    fully_qualified_name: "builtins.bytearray.__rmul__"
    return_annotation {
      pretty_printed_name: "builtins.bytearray"
      fully_qualified_name: "builtins.bytearray"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.bytearray"
        fully_qualified_name: "builtins.bytearray"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "typing_extensions.SupportsIndex"
        fully_qualified_name: "typing_extensions.SupportsIndex"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__imul__"
    fully_qualified_name: "builtins.bytearray.__imul__"
    return_annotation {
      pretty_printed_name: "UnboundType[Self]"
      kind: UNBOUND
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.bytearray"
        fully_qualified_name: "builtins.bytearray"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "typing_extensions.SupportsIndex"
        fully_qualified_name: "typing_extensions.SupportsIndex"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__mod__"
    fully_qualified_name: "builtins.bytearray.__mod__"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.bytearray"
        fully_qualified_name: "builtins.bytearray"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__contains__"
    fully_qualified_name: "builtins.bytearray.__contains__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.bytearray"
        fully_qualified_name: "builtins.bytearray"
      }
    }
    parameters {
      name: "__key"
      type_annotation {
        pretty_printed_name: "Union[typing_extensions.SupportsIndex,UnboundType[ReadableBuffer]]"
        kind: UNION
        args {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
        args {
          pretty_printed_name: "UnboundType[ReadableBuffer]"
          kind: UNBOUND
        }
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__eq__"
    fully_qualified_name: "builtins.bytearray.__eq__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.bytearray"
        fully_qualified_name: "builtins.bytearray"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__ne__"
    fully_qualified_name: "builtins.bytearray.__ne__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.bytearray"
        fully_qualified_name: "builtins.bytearray"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__lt__"
    fully_qualified_name: "builtins.bytearray.__lt__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.bytearray"
        fully_qualified_name: "builtins.bytearray"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "UnboundType[ReadableBuffer]"
        kind: UNBOUND
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__le__"
    fully_qualified_name: "builtins.bytearray.__le__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.bytearray"
        fully_qualified_name: "builtins.bytearray"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "UnboundType[ReadableBuffer]"
        kind: UNBOUND
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__gt__"
    fully_qualified_name: "builtins.bytearray.__gt__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.bytearray"
        fully_qualified_name: "builtins.bytearray"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "UnboundType[ReadableBuffer]"
        kind: UNBOUND
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__ge__"
    fully_qualified_name: "builtins.bytearray.__ge__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.bytearray"
        fully_qualified_name: "builtins.bytearray"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "UnboundType[ReadableBuffer]"
        kind: UNBOUND
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__alloc__"
    fully_qualified_name: "builtins.bytearray.__alloc__"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytearray"
        fully_qualified_name: "builtins.bytearray"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "removeprefix"
    fully_qualified_name: "builtins.bytearray.removeprefix"
    return_annotation {
      pretty_printed_name: "builtins.bytearray"
      fully_qualified_name: "builtins.bytearray"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytearray"
        fully_qualified_name: "builtins.bytearray"
      }
    }
    parameters {
      name: "__prefix"
      type_annotation {
        pretty_printed_name: "UnboundType[ReadableBuffer]"
        kind: UNBOUND
      }
    }
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "removesuffix"
    fully_qualified_name: "builtins.bytearray.removesuffix"
    return_annotation {
      pretty_printed_name: "builtins.bytearray"
      fully_qualified_name: "builtins.bytearray"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytearray"
        fully_qualified_name: "builtins.bytearray"
      }
    }
    parameters {
      name: "__suffix"
      type_annotation {
        pretty_printed_name: "UnboundType[ReadableBuffer]"
        kind: UNBOUND
      }
    }
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "__init__"
    fullname: "builtins.bytearray.__init__"
    definitions {
      name: "__init__"
      fully_qualified_name: "builtins.bytearray.__init__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.bytearray"
          fully_qualified_name: "builtins.bytearray"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__init__"
      fully_qualified_name: "builtins.bytearray.__init__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.bytearray"
          fully_qualified_name: "builtins.bytearray"
        }
      }
      parameters {
        name: "__ints"
        type_annotation {
          pretty_printed_name: "Union[typing.Iterable[typing_extensions.SupportsIndex],typing_extensions.SupportsIndex,UnboundType[ReadableBuffer]]"
          kind: UNION
          args {
            pretty_printed_name: "typing.Iterable[typing_extensions.SupportsIndex]"
            args {
              pretty_printed_name: "typing_extensions.SupportsIndex"
              fully_qualified_name: "typing_extensions.SupportsIndex"
            }
            fully_qualified_name: "typing.Iterable"
          }
          args {
            pretty_printed_name: "typing_extensions.SupportsIndex"
            fully_qualified_name: "typing_extensions.SupportsIndex"
          }
          args {
            pretty_printed_name: "UnboundType[ReadableBuffer]"
            kind: UNBOUND
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__init__"
      fully_qualified_name: "builtins.bytearray.__init__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.bytearray"
          fully_qualified_name: "builtins.bytearray"
        }
      }
      parameters {
        name: "__string"
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      parameters {
        name: "encoding"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      parameters {
        name: "errors"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "__getitem__"
    fullname: "builtins.bytearray.__getitem__"
    definitions {
      name: "__getitem__"
      fully_qualified_name: "builtins.bytearray.__getitem__"
      return_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "builtins.bytearray"
          fully_qualified_name: "builtins.bytearray"
        }
      }
      parameters {
        name: "__key"
        type_annotation {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__getitem__"
      fully_qualified_name: "builtins.bytearray.__getitem__"
      return_annotation {
        pretty_printed_name: "builtins.bytearray"
        fully_qualified_name: "builtins.bytearray"
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "builtins.bytearray"
          fully_qualified_name: "builtins.bytearray"
        }
      }
      parameters {
        name: "__key"
        type_annotation {
          pretty_printed_name: "builtins.slice"
          fully_qualified_name: "builtins.slice"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "__setitem__"
    fullname: "builtins.bytearray.__setitem__"
    definitions {
      name: "__setitem__"
      fully_qualified_name: "builtins.bytearray.__setitem__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "builtins.bytearray"
          fully_qualified_name: "builtins.bytearray"
        }
      }
      parameters {
        name: "__key"
        type_annotation {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
      }
      parameters {
        name: "__value"
        type_annotation {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__setitem__"
      fully_qualified_name: "builtins.bytearray.__setitem__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "builtins.bytearray"
          fully_qualified_name: "builtins.bytearray"
        }
      }
      parameters {
        name: "__key"
        type_annotation {
          pretty_printed_name: "builtins.slice"
          fully_qualified_name: "builtins.slice"
        }
      }
      parameters {
        name: "__value"
        type_annotation {
          pretty_printed_name: "Union[typing.Iterable[typing_extensions.SupportsIndex],builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "typing.Iterable[typing_extensions.SupportsIndex]"
            args {
              pretty_printed_name: "typing_extensions.SupportsIndex"
              fully_qualified_name: "typing_extensions.SupportsIndex"
            }
            fully_qualified_name: "typing.Iterable"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "__hash__"
    fully_qualified_name: "builtins.bytearray.__hash__"
    type_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "memoryview"
  fully_qualified_name: "builtins.memoryview"
  super_classes: "typing.Sequence"
  methods {
    name: "format"
    fully_qualified_name: "builtins.memoryview.format"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.memoryview"
        fully_qualified_name: "builtins.memoryview"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "itemsize"
    fully_qualified_name: "builtins.memoryview.itemsize"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.memoryview"
        fully_qualified_name: "builtins.memoryview"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "shape"
    fully_qualified_name: "builtins.memoryview.shape"
    return_annotation {
      pretty_printed_name: "Union[Tuple[builtins.int,Any],None]"
      kind: UNION
      args {
        pretty_printed_name: "Tuple[builtins.int,Any]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.memoryview"
        fully_qualified_name: "builtins.memoryview"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
  }
  methods {
    name: "shape"
    fully_qualified_name: "builtins.memoryview.shape"
    return_annotation {
      pretty_printed_name: "Union[builtins.tuple[builtins.int],None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.tuple[builtins.int]"
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        fully_qualified_name: "builtins.tuple"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.memoryview"
        fully_qualified_name: "builtins.memoryview"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "strides"
    fully_qualified_name: "builtins.memoryview.strides"
    return_annotation {
      pretty_printed_name: "Union[Tuple[builtins.int,Any],None]"
      kind: UNION
      args {
        pretty_printed_name: "Tuple[builtins.int,Any]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.memoryview"
        fully_qualified_name: "builtins.memoryview"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
  }
  methods {
    name: "strides"
    fully_qualified_name: "builtins.memoryview.strides"
    return_annotation {
      pretty_printed_name: "Union[builtins.tuple[builtins.int],None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.tuple[builtins.int]"
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        fully_qualified_name: "builtins.tuple"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.memoryview"
        fully_qualified_name: "builtins.memoryview"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "suboffsets"
    fully_qualified_name: "builtins.memoryview.suboffsets"
    return_annotation {
      pretty_printed_name: "Union[Tuple[builtins.int,Any],None]"
      kind: UNION
      args {
        pretty_printed_name: "Tuple[builtins.int,Any]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.memoryview"
        fully_qualified_name: "builtins.memoryview"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
  }
  methods {
    name: "suboffsets"
    fully_qualified_name: "builtins.memoryview.suboffsets"
    return_annotation {
      pretty_printed_name: "Union[builtins.tuple[builtins.int],None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.tuple[builtins.int]"
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        fully_qualified_name: "builtins.tuple"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.memoryview"
        fully_qualified_name: "builtins.memoryview"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "readonly"
    fully_qualified_name: "builtins.memoryview.readonly"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.memoryview"
        fully_qualified_name: "builtins.memoryview"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "ndim"
    fully_qualified_name: "builtins.memoryview.ndim"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.memoryview"
        fully_qualified_name: "builtins.memoryview"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "obj"
    fully_qualified_name: "builtins.memoryview.obj"
    return_annotation {
      pretty_printed_name: "UnboundType[ReadableBuffer]"
      kind: UNBOUND
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.memoryview"
        fully_qualified_name: "builtins.memoryview"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "c_contiguous"
    fully_qualified_name: "builtins.memoryview.c_contiguous"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.memoryview"
        fully_qualified_name: "builtins.memoryview"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "f_contiguous"
    fully_qualified_name: "builtins.memoryview.f_contiguous"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.memoryview"
        fully_qualified_name: "builtins.memoryview"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "contiguous"
    fully_qualified_name: "builtins.memoryview.contiguous"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.memoryview"
        fully_qualified_name: "builtins.memoryview"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "nbytes"
    fully_qualified_name: "builtins.memoryview.nbytes"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.memoryview"
        fully_qualified_name: "builtins.memoryview"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__init__"
    fully_qualified_name: "builtins.memoryview.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.memoryview"
        fully_qualified_name: "builtins.memoryview"
      }
    }
    parameters {
      name: "obj"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UnboundType[ReadableBuffer]"
        kind: UNBOUND
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__enter__"
    fully_qualified_name: "builtins.memoryview.__enter__"
    return_annotation {
      pretty_printed_name: "UnboundType[Self]"
      kind: UNBOUND
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.memoryview"
        fully_qualified_name: "builtins.memoryview"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__exit__"
    fully_qualified_name: "builtins.memoryview.__exit__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.memoryview"
        fully_qualified_name: "builtins.memoryview"
      }
    }
    parameters {
      name: "__exc_type"
      type_annotation {
        pretty_printed_name: "Union[builtins.type,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.type"
          fully_qualified_name: "builtins.type"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "__exc_val"
      type_annotation {
        pretty_printed_name: "Union[builtins.BaseException,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.BaseException"
          fully_qualified_name: "builtins.BaseException"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "__exc_tb"
      type_annotation {
        pretty_printed_name: "Union[types.TracebackType,None]"
        kind: UNION
        args {
          pretty_printed_name: "types.TracebackType"
          fully_qualified_name: "types.TracebackType"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
  }
  methods {
    name: "__exit__"
    fully_qualified_name: "builtins.memoryview.__exit__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.memoryview"
        fully_qualified_name: "builtins.memoryview"
      }
    }
    parameters {
      name: "__exc_type"
      type_annotation {
        pretty_printed_name: "Union[Type[builtins.BaseException],None]"
        kind: UNION
        args {
          pretty_printed_name: "Type[builtins.BaseException]"
          kind: TYPE
          args {
            pretty_printed_name: "builtins.BaseException"
            fully_qualified_name: "builtins.BaseException"
          }
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "__exc_val"
      type_annotation {
        pretty_printed_name: "Union[builtins.BaseException,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.BaseException"
          fully_qualified_name: "builtins.BaseException"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "__exc_tb"
      type_annotation {
        pretty_printed_name: "Union[types.TracebackType,None]"
        kind: UNION
        args {
          pretty_printed_name: "types.TracebackType"
          fully_qualified_name: "types.TracebackType"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "cast"
    fully_qualified_name: "builtins.memoryview.cast"
    return_annotation {
      pretty_printed_name: "builtins.memoryview"
      fully_qualified_name: "builtins.memoryview"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.memoryview"
        fully_qualified_name: "builtins.memoryview"
      }
    }
    parameters {
      name: "format"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "shape"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.list[builtins.int],Tuple[builtins.int,Any]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.list[builtins.int]"
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          fully_qualified_name: "builtins.list"
        }
        args {
          pretty_printed_name: "Tuple[builtins.int,Any]"
          kind: TUPLE
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
  }
  methods {
    name: "cast"
    fully_qualified_name: "builtins.memoryview.cast"
    return_annotation {
      pretty_printed_name: "builtins.memoryview"
      fully_qualified_name: "builtins.memoryview"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.memoryview"
        fully_qualified_name: "builtins.memoryview"
      }
    }
    parameters {
      name: "format"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "shape"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.list[builtins.int],builtins.tuple[builtins.int]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.list[builtins.int]"
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          fully_qualified_name: "builtins.list"
        }
        args {
          pretty_printed_name: "builtins.tuple[builtins.int]"
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          fully_qualified_name: "builtins.tuple"
        }
      }
      has_default: true
    }
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__contains__"
    fully_qualified_name: "builtins.memoryview.__contains__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.memoryview"
        fully_qualified_name: "builtins.memoryview"
      }
    }
    parameters {
      name: "__x"
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__iter__"
    fully_qualified_name: "builtins.memoryview.__iter__"
    return_annotation {
      pretty_printed_name: "typing.Iterator[builtins.int]"
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.memoryview"
        fully_qualified_name: "builtins.memoryview"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__len__"
    fully_qualified_name: "builtins.memoryview.__len__"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.memoryview"
        fully_qualified_name: "builtins.memoryview"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "tobytes"
    fully_qualified_name: "builtins.memoryview.tobytes"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.memoryview"
        fully_qualified_name: "builtins.memoryview"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
  }
  methods {
    name: "tobytes"
    fully_qualified_name: "builtins.memoryview.tobytes"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.memoryview"
        fully_qualified_name: "builtins.memoryview"
      }
    }
    parameters {
      name: "order"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],None]"
        kind: UNION
        args {
          pretty_printed_name: "Literal[builtins.str]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        args {
          pretty_printed_name: "Literal[builtins.str]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        args {
          pretty_printed_name: "Literal[builtins.str]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "tolist"
    fully_qualified_name: "builtins.memoryview.tolist"
    return_annotation {
      pretty_printed_name: "builtins.list[builtins.int]"
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.memoryview"
        fully_qualified_name: "builtins.memoryview"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "release"
    fully_qualified_name: "builtins.memoryview.release"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.memoryview"
        fully_qualified_name: "builtins.memoryview"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "hex"
    fully_qualified_name: "builtins.memoryview.hex"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.memoryview"
        fully_qualified_name: "builtins.memoryview"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
  }
  methods {
    name: "hex"
    fully_qualified_name: "builtins.memoryview.hex"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.memoryview"
        fully_qualified_name: "builtins.memoryview"
      }
    }
    parameters {
      name: "sep"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,builtins.bytes]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
      }
      has_default: true
    }
    parameters {
      name: "bytes_per_sep"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing_extensions.SupportsIndex"
        fully_qualified_name: "typing_extensions.SupportsIndex"
      }
      has_default: true
    }
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "toreadonly"
    fully_qualified_name: "builtins.memoryview.toreadonly"
    return_annotation {
      pretty_printed_name: "builtins.memoryview"
      fully_qualified_name: "builtins.memoryview"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.memoryview"
        fully_qualified_name: "builtins.memoryview"
      }
    }
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "__getitem__"
    fullname: "builtins.memoryview.__getitem__"
    definitions {
      name: "__getitem__"
      fully_qualified_name: "builtins.memoryview.__getitem__"
      return_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "builtins.memoryview"
          fully_qualified_name: "builtins.memoryview"
        }
      }
      parameters {
        name: "__key"
        type_annotation {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__getitem__"
      fully_qualified_name: "builtins.memoryview.__getitem__"
      return_annotation {
        pretty_printed_name: "builtins.memoryview"
        fully_qualified_name: "builtins.memoryview"
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "builtins.memoryview"
          fully_qualified_name: "builtins.memoryview"
        }
      }
      parameters {
        name: "__key"
        type_annotation {
          pretty_printed_name: "builtins.slice"
          fully_qualified_name: "builtins.slice"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "__setitem__"
    fullname: "builtins.memoryview.__setitem__"
    definitions {
      name: "__setitem__"
      fully_qualified_name: "builtins.memoryview.__setitem__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "builtins.memoryview"
          fully_qualified_name: "builtins.memoryview"
        }
      }
      parameters {
        name: "__key"
        type_annotation {
          pretty_printed_name: "builtins.slice"
          fully_qualified_name: "builtins.slice"
        }
      }
      parameters {
        name: "__value"
        type_annotation {
          pretty_printed_name: "UnboundType[ReadableBuffer]"
          kind: UNBOUND
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__setitem__"
      fully_qualified_name: "builtins.memoryview.__setitem__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "builtins.memoryview"
          fully_qualified_name: "builtins.memoryview"
        }
      }
      parameters {
        name: "__key"
        type_annotation {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
      }
      parameters {
        name: "__value"
        type_annotation {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  has_decorators: true
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "slice"
  fully_qualified_name: "builtins.slice"
  super_classes: "builtins.object"
  methods {
    name: "start"
    fully_qualified_name: "builtins.slice.start"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.slice"
        fully_qualified_name: "builtins.slice"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "step"
    fully_qualified_name: "builtins.slice.step"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.slice"
        fully_qualified_name: "builtins.slice"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "stop"
    fully_qualified_name: "builtins.slice.stop"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.slice"
        fully_qualified_name: "builtins.slice"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "indices"
    fully_qualified_name: "builtins.slice.indices"
    return_annotation {
      pretty_printed_name: "Tuple[builtins.int,builtins.int,builtins.int]"
      kind: TUPLE
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.slice"
        fully_qualified_name: "builtins.slice"
      }
    }
    parameters {
      name: "__len"
      type_annotation {
        pretty_printed_name: "typing_extensions.SupportsIndex"
        fully_qualified_name: "typing_extensions.SupportsIndex"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "__init__"
    fullname: "builtins.slice.__init__"
    definitions {
      name: "__init__"
      fully_qualified_name: "builtins.slice.__init__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.slice"
          fully_qualified_name: "builtins.slice"
        }
      }
      parameters {
        name: "__stop"
        type_annotation {
          pretty_printed_name: "Any"
          kind: ANY
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__init__"
      fully_qualified_name: "builtins.slice.__init__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.slice"
          fully_qualified_name: "builtins.slice"
        }
      }
      parameters {
        name: "__start"
        type_annotation {
          pretty_printed_name: "Any"
          kind: ANY
        }
      }
      parameters {
        name: "__stop"
        type_annotation {
          pretty_printed_name: "Any"
          kind: ANY
        }
      }
      parameters {
        name: "__step"
        type_annotation {
          pretty_printed_name: "Any"
          kind: ANY
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  has_decorators: true
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "__hash__"
    fully_qualified_name: "builtins.slice.__hash__"
    type_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "tuple"
  fully_qualified_name: "builtins.tuple"
  super_classes: "typing.Sequence"
  methods {
    name: "__new__"
    fully_qualified_name: "builtins.tuple.__new__"
    return_annotation {
      pretty_printed_name: "UnboundType[Self]"
      kind: UNBOUND
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[builtins.tuple[builtins._T_co]]"
        kind: TYPE
        args {
          pretty_printed_name: "builtins.tuple[builtins._T_co]"
          args {
            pretty_printed_name: "builtins._T_co"
            kind: TYPE_VAR
          }
          fully_qualified_name: "builtins.tuple"
        }
      }
    }
    parameters {
      name: "__iterable"
      type_annotation {
        pretty_printed_name: "typing.Iterable[builtins._T_co]"
        args {
          pretty_printed_name: "builtins._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__len__"
    fully_qualified_name: "builtins.tuple.__len__"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.tuple[builtins._T_co]"
        args {
          pretty_printed_name: "builtins._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.tuple"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__contains__"
    fully_qualified_name: "builtins.tuple.__contains__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.tuple[builtins._T_co]"
        args {
          pretty_printed_name: "builtins._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.tuple"
      }
    }
    parameters {
      name: "__key"
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__iter__"
    fully_qualified_name: "builtins.tuple.__iter__"
    return_annotation {
      pretty_printed_name: "typing.Iterator[builtins._T_co]"
      args {
        pretty_printed_name: "builtins._T_co"
        kind: TYPE_VAR
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.tuple[builtins._T_co]"
        args {
          pretty_printed_name: "builtins._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.tuple"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__lt__"
    fully_qualified_name: "builtins.tuple.__lt__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.tuple[builtins._T_co]"
        args {
          pretty_printed_name: "builtins._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.tuple"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "Tuple[builtins._T_co,Any]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins._T_co"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
  }
  methods {
    name: "__lt__"
    fully_qualified_name: "builtins.tuple.__lt__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.tuple[builtins._T_co]"
        args {
          pretty_printed_name: "builtins._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.tuple"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "builtins.tuple[builtins._T_co]"
        args {
          pretty_printed_name: "builtins._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.tuple"
      }
    }
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__le__"
    fully_qualified_name: "builtins.tuple.__le__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.tuple[builtins._T_co]"
        args {
          pretty_printed_name: "builtins._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.tuple"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "Tuple[builtins._T_co,Any]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins._T_co"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
  }
  methods {
    name: "__le__"
    fully_qualified_name: "builtins.tuple.__le__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.tuple[builtins._T_co]"
        args {
          pretty_printed_name: "builtins._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.tuple"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "builtins.tuple[builtins._T_co]"
        args {
          pretty_printed_name: "builtins._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.tuple"
      }
    }
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__gt__"
    fully_qualified_name: "builtins.tuple.__gt__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.tuple[builtins._T_co]"
        args {
          pretty_printed_name: "builtins._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.tuple"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "Tuple[builtins._T_co,Any]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins._T_co"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
  }
  methods {
    name: "__gt__"
    fully_qualified_name: "builtins.tuple.__gt__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.tuple[builtins._T_co]"
        args {
          pretty_printed_name: "builtins._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.tuple"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "builtins.tuple[builtins._T_co]"
        args {
          pretty_printed_name: "builtins._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.tuple"
      }
    }
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__ge__"
    fully_qualified_name: "builtins.tuple.__ge__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.tuple[builtins._T_co]"
        args {
          pretty_printed_name: "builtins._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.tuple"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "Tuple[builtins._T_co,Any]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins._T_co"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
  }
  methods {
    name: "__ge__"
    fully_qualified_name: "builtins.tuple.__ge__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.tuple[builtins._T_co]"
        args {
          pretty_printed_name: "builtins._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.tuple"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "builtins.tuple[builtins._T_co]"
        args {
          pretty_printed_name: "builtins._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.tuple"
      }
    }
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__mul__"
    fully_qualified_name: "builtins.tuple.__mul__"
    return_annotation {
      pretty_printed_name: "Tuple[builtins._T_co,Any]"
      kind: TUPLE
      args {
        pretty_printed_name: "builtins._T_co"
        kind: TYPE_VAR
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.tuple[builtins._T_co]"
        args {
          pretty_printed_name: "builtins._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.tuple"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "typing_extensions.SupportsIndex"
        fully_qualified_name: "typing_extensions.SupportsIndex"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
  }
  methods {
    name: "__mul__"
    fully_qualified_name: "builtins.tuple.__mul__"
    return_annotation {
      pretty_printed_name: "builtins.tuple[builtins._T_co]"
      args {
        pretty_printed_name: "builtins._T_co"
        kind: TYPE_VAR
      }
      fully_qualified_name: "builtins.tuple"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.tuple[builtins._T_co]"
        args {
          pretty_printed_name: "builtins._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.tuple"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "typing_extensions.SupportsIndex"
        fully_qualified_name: "typing_extensions.SupportsIndex"
      }
    }
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__rmul__"
    fully_qualified_name: "builtins.tuple.__rmul__"
    return_annotation {
      pretty_printed_name: "Tuple[builtins._T_co,Any]"
      kind: TUPLE
      args {
        pretty_printed_name: "builtins._T_co"
        kind: TYPE_VAR
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.tuple[builtins._T_co]"
        args {
          pretty_printed_name: "builtins._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.tuple"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "typing_extensions.SupportsIndex"
        fully_qualified_name: "typing_extensions.SupportsIndex"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
  }
  methods {
    name: "__rmul__"
    fully_qualified_name: "builtins.tuple.__rmul__"
    return_annotation {
      pretty_printed_name: "builtins.tuple[builtins._T_co]"
      args {
        pretty_printed_name: "builtins._T_co"
        kind: TYPE_VAR
      }
      fully_qualified_name: "builtins.tuple"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.tuple[builtins._T_co]"
        args {
          pretty_printed_name: "builtins._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.tuple"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "typing_extensions.SupportsIndex"
        fully_qualified_name: "typing_extensions.SupportsIndex"
      }
    }
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "count"
    fully_qualified_name: "builtins.tuple.count"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.tuple[builtins._T_co]"
        args {
          pretty_printed_name: "builtins._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.tuple"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "index"
    fully_qualified_name: "builtins.tuple.index"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.tuple[builtins._T_co]"
        args {
          pretty_printed_name: "builtins._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.tuple"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "__start"
      type_annotation {
        pretty_printed_name: "typing_extensions.SupportsIndex"
        fully_qualified_name: "typing_extensions.SupportsIndex"
      }
      has_default: true
    }
    parameters {
      name: "__stop"
      type_annotation {
        pretty_printed_name: "typing_extensions.SupportsIndex"
        fully_qualified_name: "typing_extensions.SupportsIndex"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__class_getitem__"
    fully_qualified_name: "builtins.tuple.__class_getitem__"
    return_annotation {
      pretty_printed_name: "types.GenericAlias"
      fully_qualified_name: "types.GenericAlias"
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[builtins.tuple[builtins._T_co]]"
        kind: TYPE
        args {
          pretty_printed_name: "builtins.tuple[builtins._T_co]"
          args {
            pretty_printed_name: "builtins._T_co"
            kind: TYPE_VAR
          }
          fully_qualified_name: "builtins.tuple"
        }
      }
    }
    parameters {
      name: "__item"
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    is_class_method: true
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "__getitem__"
    fullname: "builtins.tuple.__getitem__"
    definitions {
      name: "__getitem__"
      fully_qualified_name: "builtins.tuple.__getitem__"
      return_annotation {
        pretty_printed_name: "builtins._T_co"
        kind: TYPE_VAR
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "builtins.tuple[builtins._T_co]"
          args {
            pretty_printed_name: "builtins._T_co"
            kind: TYPE_VAR
          }
          fully_qualified_name: "builtins.tuple"
        }
      }
      parameters {
        name: "__key"
        type_annotation {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__getitem__"
      fully_qualified_name: "builtins.tuple.__getitem__"
      return_annotation {
        pretty_printed_name: "Tuple[builtins._T_co,Any]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins._T_co"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "builtins.tuple[builtins._T_co]"
          args {
            pretty_printed_name: "builtins._T_co"
            kind: TYPE_VAR
          }
          fully_qualified_name: "builtins.tuple"
        }
      }
      parameters {
        name: "__key"
        type_annotation {
          pretty_printed_name: "builtins.slice"
          fully_qualified_name: "builtins.slice"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
  }
  overloaded_methods {
    name: "__getitem__"
    fullname: "builtins.tuple.__getitem__"
    definitions {
      name: "__getitem__"
      fully_qualified_name: "builtins.tuple.__getitem__"
      return_annotation {
        pretty_printed_name: "builtins._T_co"
        kind: TYPE_VAR
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "builtins.tuple[builtins._T_co]"
          args {
            pretty_printed_name: "builtins._T_co"
            kind: TYPE_VAR
          }
          fully_qualified_name: "builtins.tuple"
        }
      }
      parameters {
        name: "__key"
        type_annotation {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__getitem__"
      fully_qualified_name: "builtins.tuple.__getitem__"
      return_annotation {
        pretty_printed_name: "builtins.tuple[builtins._T_co]"
        args {
          pretty_printed_name: "builtins._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.tuple"
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "builtins.tuple[builtins._T_co]"
          args {
            pretty_printed_name: "builtins._T_co"
            kind: TYPE_VAR
          }
          fully_qualified_name: "builtins.tuple"
        }
      }
      parameters {
        name: "__key"
        type_annotation {
          pretty_printed_name: "builtins.slice"
          fully_qualified_name: "builtins.slice"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "__add__"
    fullname: "builtins.tuple.__add__"
    definitions {
      name: "__add__"
      fully_qualified_name: "builtins.tuple.__add__"
      return_annotation {
        pretty_printed_name: "Tuple[builtins._T_co,Any]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins._T_co"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "builtins.tuple[builtins._T_co]"
          args {
            pretty_printed_name: "builtins._T_co"
            kind: TYPE_VAR
          }
          fully_qualified_name: "builtins.tuple"
        }
      }
      parameters {
        name: "__value"
        type_annotation {
          pretty_printed_name: "Tuple[builtins._T_co,Any]"
          kind: TUPLE
          args {
            pretty_printed_name: "builtins._T_co"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__add__"
      fully_qualified_name: "builtins.tuple.__add__"
      return_annotation {
        pretty_printed_name: "Tuple[Union[builtins._T_co,builtins._T],Any]"
        kind: TUPLE
        args {
          pretty_printed_name: "Union[builtins._T_co,builtins._T]"
          kind: UNION
          args {
            pretty_printed_name: "builtins._T_co"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "builtins._T"
            kind: TYPE_VAR
          }
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "builtins.tuple[builtins._T_co]"
          args {
            pretty_printed_name: "builtins._T_co"
            kind: TYPE_VAR
          }
          fully_qualified_name: "builtins.tuple"
        }
      }
      parameters {
        name: "__value"
        type_annotation {
          pretty_printed_name: "Tuple[builtins._T,Any]"
          kind: TUPLE
          args {
            pretty_printed_name: "builtins._T"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
  }
  overloaded_methods {
    name: "__add__"
    fullname: "builtins.tuple.__add__"
    definitions {
      name: "__add__"
      fully_qualified_name: "builtins.tuple.__add__"
      return_annotation {
        pretty_printed_name: "builtins.tuple[builtins._T_co]"
        args {
          pretty_printed_name: "builtins._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.tuple"
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "builtins.tuple[builtins._T_co]"
          args {
            pretty_printed_name: "builtins._T_co"
            kind: TYPE_VAR
          }
          fully_qualified_name: "builtins.tuple"
        }
      }
      parameters {
        name: "__value"
        type_annotation {
          pretty_printed_name: "builtins.tuple[builtins._T_co]"
          args {
            pretty_printed_name: "builtins._T_co"
            kind: TYPE_VAR
          }
          fully_qualified_name: "builtins.tuple"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__add__"
      fully_qualified_name: "builtins.tuple.__add__"
      return_annotation {
        pretty_printed_name: "builtins.tuple[Union[builtins._T_co,builtins._T]]"
        args {
          pretty_printed_name: "Union[builtins._T_co,builtins._T]"
          kind: UNION
          args {
            pretty_printed_name: "builtins._T_co"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "builtins._T"
            kind: TYPE_VAR
          }
        }
        fully_qualified_name: "builtins.tuple"
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "builtins.tuple[builtins._T_co]"
          args {
            pretty_printed_name: "builtins._T_co"
            kind: TYPE_VAR
          }
          fully_qualified_name: "builtins.tuple"
        }
      }
      parameters {
        name: "__value"
        type_annotation {
          pretty_printed_name: "builtins.tuple[builtins._T]"
          args {
            pretty_printed_name: "builtins._T"
            kind: TYPE_VAR
          }
          fully_qualified_name: "builtins.tuple"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "39"
    valid_for: "310"
  }
  is_generic: true
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "list"
  fully_qualified_name: "builtins.list"
  super_classes: "typing.MutableSequence"
  methods {
    name: "copy"
    fully_qualified_name: "builtins.list.copy"
    return_annotation {
      pretty_printed_name: "builtins.list[builtins._T]"
      args {
        pretty_printed_name: "builtins._T"
        kind: TYPE_VAR
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.list[builtins._T]"
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.list"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "append"
    fully_qualified_name: "builtins.list.append"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.list[builtins._T]"
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.list"
      }
    }
    parameters {
      name: "__object"
      type_annotation {
        pretty_printed_name: "builtins._T"
        kind: TYPE_VAR
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "extend"
    fully_qualified_name: "builtins.list.extend"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.list[builtins._T]"
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.list"
      }
    }
    parameters {
      name: "__iterable"
      type_annotation {
        pretty_printed_name: "typing.Iterable[builtins._T]"
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "pop"
    fully_qualified_name: "builtins.list.pop"
    return_annotation {
      pretty_printed_name: "builtins._T"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.list[builtins._T]"
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.list"
      }
    }
    parameters {
      name: "__index"
      type_annotation {
        pretty_printed_name: "typing_extensions.SupportsIndex"
        fully_qualified_name: "typing_extensions.SupportsIndex"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "index"
    fully_qualified_name: "builtins.list.index"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.list[builtins._T]"
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.list"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "builtins._T"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "__start"
      type_annotation {
        pretty_printed_name: "typing_extensions.SupportsIndex"
        fully_qualified_name: "typing_extensions.SupportsIndex"
      }
      has_default: true
    }
    parameters {
      name: "__stop"
      type_annotation {
        pretty_printed_name: "typing_extensions.SupportsIndex"
        fully_qualified_name: "typing_extensions.SupportsIndex"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "count"
    fully_qualified_name: "builtins.list.count"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.list[builtins._T]"
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.list"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "builtins._T"
        kind: TYPE_VAR
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "insert"
    fully_qualified_name: "builtins.list.insert"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.list[builtins._T]"
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.list"
      }
    }
    parameters {
      name: "__index"
      type_annotation {
        pretty_printed_name: "typing_extensions.SupportsIndex"
        fully_qualified_name: "typing_extensions.SupportsIndex"
      }
    }
    parameters {
      name: "__object"
      type_annotation {
        pretty_printed_name: "builtins._T"
        kind: TYPE_VAR
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "remove"
    fully_qualified_name: "builtins.list.remove"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.list[builtins._T]"
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.list"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "builtins._T"
        kind: TYPE_VAR
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__len__"
    fully_qualified_name: "builtins.list.__len__"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.list[builtins._T]"
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.list"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__iter__"
    fully_qualified_name: "builtins.list.__iter__"
    return_annotation {
      pretty_printed_name: "typing.Iterator[builtins._T]"
      args {
        pretty_printed_name: "builtins._T"
        kind: TYPE_VAR
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.list[builtins._T]"
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.list"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__delitem__"
    fully_qualified_name: "builtins.list.__delitem__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.list[builtins._T]"
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.list"
      }
    }
    parameters {
      name: "__key"
      type_annotation {
        pretty_printed_name: "Union[typing_extensions.SupportsIndex,builtins.slice]"
        kind: UNION
        args {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
        args {
          pretty_printed_name: "builtins.slice"
          fully_qualified_name: "builtins.slice"
        }
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__iadd__"
    fully_qualified_name: "builtins.list.__iadd__"
    return_annotation {
      pretty_printed_name: "UnboundType[Self]"
      kind: UNBOUND
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.list[builtins._T]"
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.list"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "typing.Iterable[builtins._T]"
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__mul__"
    fully_qualified_name: "builtins.list.__mul__"
    return_annotation {
      pretty_printed_name: "builtins.list[builtins._T]"
      args {
        pretty_printed_name: "builtins._T"
        kind: TYPE_VAR
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.list[builtins._T]"
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.list"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "typing_extensions.SupportsIndex"
        fully_qualified_name: "typing_extensions.SupportsIndex"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__rmul__"
    fully_qualified_name: "builtins.list.__rmul__"
    return_annotation {
      pretty_printed_name: "builtins.list[builtins._T]"
      args {
        pretty_printed_name: "builtins._T"
        kind: TYPE_VAR
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.list[builtins._T]"
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.list"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "typing_extensions.SupportsIndex"
        fully_qualified_name: "typing_extensions.SupportsIndex"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__imul__"
    fully_qualified_name: "builtins.list.__imul__"
    return_annotation {
      pretty_printed_name: "UnboundType[Self]"
      kind: UNBOUND
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.list[builtins._T]"
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.list"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "typing_extensions.SupportsIndex"
        fully_qualified_name: "typing_extensions.SupportsIndex"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__contains__"
    fully_qualified_name: "builtins.list.__contains__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.list[builtins._T]"
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.list"
      }
    }
    parameters {
      name: "__key"
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__reversed__"
    fully_qualified_name: "builtins.list.__reversed__"
    return_annotation {
      pretty_printed_name: "typing.Iterator[builtins._T]"
      args {
        pretty_printed_name: "builtins._T"
        kind: TYPE_VAR
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.list[builtins._T]"
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.list"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__gt__"
    fully_qualified_name: "builtins.list.__gt__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.list[builtins._T]"
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.list"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "builtins.list[builtins._T]"
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.list"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__ge__"
    fully_qualified_name: "builtins.list.__ge__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.list[builtins._T]"
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.list"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "builtins.list[builtins._T]"
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.list"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__lt__"
    fully_qualified_name: "builtins.list.__lt__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.list[builtins._T]"
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.list"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "builtins.list[builtins._T]"
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.list"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__le__"
    fully_qualified_name: "builtins.list.__le__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.list[builtins._T]"
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.list"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "builtins.list[builtins._T]"
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.list"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__class_getitem__"
    fully_qualified_name: "builtins.list.__class_getitem__"
    return_annotation {
      pretty_printed_name: "types.GenericAlias"
      fully_qualified_name: "types.GenericAlias"
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[builtins.list[builtins._T]]"
        kind: TYPE
        args {
          pretty_printed_name: "builtins.list[builtins._T]"
          args {
            pretty_printed_name: "builtins._T"
            kind: TYPE_VAR
          }
          fully_qualified_name: "builtins.list"
        }
      }
    }
    parameters {
      name: "__item"
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    is_class_method: true
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "__init__"
    fullname: "builtins.list.__init__"
    definitions {
      name: "__init__"
      fully_qualified_name: "builtins.list.__init__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.list[builtins._T]"
          args {
            pretty_printed_name: "builtins._T"
            kind: TYPE_VAR
          }
          fully_qualified_name: "builtins.list"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__init__"
      fully_qualified_name: "builtins.list.__init__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.list[builtins._T]"
          args {
            pretty_printed_name: "builtins._T"
            kind: TYPE_VAR
          }
          fully_qualified_name: "builtins.list"
        }
      }
      parameters {
        name: "__iterable"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T]"
          args {
            pretty_printed_name: "builtins._T"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "sort"
    fullname: "builtins.list.sort"
    definitions {
      name: "sort"
      fully_qualified_name: "builtins.list.sort"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.list[_typeshed.SupportsRichComparisonT]"
          args {
            pretty_printed_name: "_typeshed.SupportsRichComparisonT"
            kind: TYPE_VAR
          }
          fully_qualified_name: "builtins.list"
        }
      }
      parameters {
        name: "key"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "None"
          kind: NONE
        }
        has_default: true
      }
      parameters {
        name: "reverse"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "sort"
      fully_qualified_name: "builtins.list.sort"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.list[builtins._T]"
          args {
            pretty_printed_name: "builtins._T"
            kind: TYPE_VAR
          }
          fully_qualified_name: "builtins.list"
        }
      }
      parameters {
        name: "key"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
      }
      parameters {
        name: "reverse"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "__getitem__"
    fullname: "builtins.list.__getitem__"
    definitions {
      name: "__getitem__"
      fully_qualified_name: "builtins.list.__getitem__"
      return_annotation {
        pretty_printed_name: "builtins._T"
        kind: TYPE_VAR
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "builtins.list[builtins._T]"
          args {
            pretty_printed_name: "builtins._T"
            kind: TYPE_VAR
          }
          fully_qualified_name: "builtins.list"
        }
      }
      parameters {
        name: "__i"
        type_annotation {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__getitem__"
      fully_qualified_name: "builtins.list.__getitem__"
      return_annotation {
        pretty_printed_name: "builtins.list[builtins._T]"
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.list"
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "builtins.list[builtins._T]"
          args {
            pretty_printed_name: "builtins._T"
            kind: TYPE_VAR
          }
          fully_qualified_name: "builtins.list"
        }
      }
      parameters {
        name: "__s"
        type_annotation {
          pretty_printed_name: "builtins.slice"
          fully_qualified_name: "builtins.slice"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "__setitem__"
    fullname: "builtins.list.__setitem__"
    definitions {
      name: "__setitem__"
      fully_qualified_name: "builtins.list.__setitem__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "builtins.list[builtins._T]"
          args {
            pretty_printed_name: "builtins._T"
            kind: TYPE_VAR
          }
          fully_qualified_name: "builtins.list"
        }
      }
      parameters {
        name: "__key"
        type_annotation {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
      }
      parameters {
        name: "__value"
        type_annotation {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__setitem__"
      fully_qualified_name: "builtins.list.__setitem__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "builtins.list[builtins._T]"
          args {
            pretty_printed_name: "builtins._T"
            kind: TYPE_VAR
          }
          fully_qualified_name: "builtins.list"
        }
      }
      parameters {
        name: "__key"
        type_annotation {
          pretty_printed_name: "builtins.slice"
          fully_qualified_name: "builtins.slice"
        }
      }
      parameters {
        name: "__value"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T]"
          args {
            pretty_printed_name: "builtins._T"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "__add__"
    fullname: "builtins.list.__add__"
    definitions {
      name: "__add__"
      fully_qualified_name: "builtins.list.__add__"
      return_annotation {
        pretty_printed_name: "builtins.list[builtins._T]"
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.list"
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "builtins.list[builtins._T]"
          args {
            pretty_printed_name: "builtins._T"
            kind: TYPE_VAR
          }
          fully_qualified_name: "builtins.list"
        }
      }
      parameters {
        name: "__value"
        type_annotation {
          pretty_printed_name: "builtins.list[builtins._T]"
          args {
            pretty_printed_name: "builtins._T"
            kind: TYPE_VAR
          }
          fully_qualified_name: "builtins.list"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__add__"
      fully_qualified_name: "builtins.list.__add__"
      return_annotation {
        pretty_printed_name: "builtins.list[Union[builtins._S,builtins._T]]"
        args {
          pretty_printed_name: "Union[builtins._S,builtins._T]"
          kind: UNION
          args {
            pretty_printed_name: "builtins._S"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "builtins._T"
            kind: TYPE_VAR
          }
        }
        fully_qualified_name: "builtins.list"
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "builtins.list[builtins._T]"
          args {
            pretty_printed_name: "builtins._T"
            kind: TYPE_VAR
          }
          fully_qualified_name: "builtins.list"
        }
      }
      parameters {
        name: "__value"
        type_annotation {
          pretty_printed_name: "builtins.list[builtins._S]"
          args {
            pretty_printed_name: "builtins._S"
            kind: TYPE_VAR
          }
          fully_qualified_name: "builtins.list"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  is_generic: true
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "__hash__"
    fully_qualified_name: "builtins.list.__hash__"
    type_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "dict"
  fully_qualified_name: "builtins.dict"
  super_classes: "typing.MutableMapping"
  methods {
    name: "__new__"
    fully_qualified_name: "builtins.dict.__new__"
    return_annotation {
      pretty_printed_name: "UnboundType[Self]"
      kind: UNBOUND
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[builtins.dict[builtins._KT,builtins._VT]]"
        kind: TYPE
        args {
          pretty_printed_name: "builtins.dict[builtins._KT,builtins._VT]"
          args {
            pretty_printed_name: "builtins._KT"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "builtins._VT"
            kind: TYPE_VAR
          }
          fully_qualified_name: "builtins.dict"
        }
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "kwargs"
      kind: VAR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "copy"
    fully_qualified_name: "builtins.dict.copy"
    return_annotation {
      pretty_printed_name: "builtins.dict[builtins._KT,builtins._VT]"
      args {
        pretty_printed_name: "builtins._KT"
        kind: TYPE_VAR
      }
      args {
        pretty_printed_name: "builtins._VT"
        kind: TYPE_VAR
      }
      fully_qualified_name: "builtins.dict"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.dict[builtins._KT,builtins._VT]"
        args {
          pretty_printed_name: "builtins._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "builtins._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.dict"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "keys"
    fully_qualified_name: "builtins.dict.keys"
    return_annotation {
      pretty_printed_name: "_collections_abc.dict_keys[builtins._KT,builtins._VT]"
      args {
        pretty_printed_name: "builtins._KT"
        kind: TYPE_VAR
      }
      args {
        pretty_printed_name: "builtins._VT"
        kind: TYPE_VAR
      }
      fully_qualified_name: "_collections_abc.dict_keys"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.dict[builtins._KT,builtins._VT]"
        args {
          pretty_printed_name: "builtins._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "builtins._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.dict"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "values"
    fully_qualified_name: "builtins.dict.values"
    return_annotation {
      pretty_printed_name: "_collections_abc.dict_values[builtins._KT,builtins._VT]"
      args {
        pretty_printed_name: "builtins._KT"
        kind: TYPE_VAR
      }
      args {
        pretty_printed_name: "builtins._VT"
        kind: TYPE_VAR
      }
      fully_qualified_name: "_collections_abc.dict_values"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.dict[builtins._KT,builtins._VT]"
        args {
          pretty_printed_name: "builtins._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "builtins._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.dict"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "items"
    fully_qualified_name: "builtins.dict.items"
    return_annotation {
      pretty_printed_name: "_collections_abc.dict_items[builtins._KT,builtins._VT]"
      args {
        pretty_printed_name: "builtins._KT"
        kind: TYPE_VAR
      }
      args {
        pretty_printed_name: "builtins._VT"
        kind: TYPE_VAR
      }
      fully_qualified_name: "_collections_abc.dict_items"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.dict[builtins._KT,builtins._VT]"
        args {
          pretty_printed_name: "builtins._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "builtins._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.dict"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__len__"
    fully_qualified_name: "builtins.dict.__len__"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.dict[builtins._KT,builtins._VT]"
        args {
          pretty_printed_name: "builtins._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "builtins._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.dict"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__getitem__"
    fully_qualified_name: "builtins.dict.__getitem__"
    return_annotation {
      pretty_printed_name: "builtins._VT"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.dict[builtins._KT,builtins._VT]"
        args {
          pretty_printed_name: "builtins._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "builtins._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.dict"
      }
    }
    parameters {
      name: "__key"
      type_annotation {
        pretty_printed_name: "builtins._KT"
        kind: TYPE_VAR
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__setitem__"
    fully_qualified_name: "builtins.dict.__setitem__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.dict[builtins._KT,builtins._VT]"
        args {
          pretty_printed_name: "builtins._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "builtins._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.dict"
      }
    }
    parameters {
      name: "__key"
      type_annotation {
        pretty_printed_name: "builtins._KT"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "builtins._VT"
        kind: TYPE_VAR
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__delitem__"
    fully_qualified_name: "builtins.dict.__delitem__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.dict[builtins._KT,builtins._VT]"
        args {
          pretty_printed_name: "builtins._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "builtins._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.dict"
      }
    }
    parameters {
      name: "__key"
      type_annotation {
        pretty_printed_name: "builtins._KT"
        kind: TYPE_VAR
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__iter__"
    fully_qualified_name: "builtins.dict.__iter__"
    return_annotation {
      pretty_printed_name: "typing.Iterator[builtins._KT]"
      args {
        pretty_printed_name: "builtins._KT"
        kind: TYPE_VAR
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.dict[builtins._KT,builtins._VT]"
        args {
          pretty_printed_name: "builtins._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "builtins._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.dict"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__reversed__"
    fully_qualified_name: "builtins.dict.__reversed__"
    return_annotation {
      pretty_printed_name: "typing.Iterator[builtins._KT]"
      args {
        pretty_printed_name: "builtins._KT"
        kind: TYPE_VAR
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.dict[builtins._KT,builtins._VT]"
        args {
          pretty_printed_name: "builtins._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "builtins._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.dict"
      }
    }
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__class_getitem__"
    fully_qualified_name: "builtins.dict.__class_getitem__"
    return_annotation {
      pretty_printed_name: "types.GenericAlias"
      fully_qualified_name: "types.GenericAlias"
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[builtins.dict[builtins._KT,builtins._VT]]"
        kind: TYPE
        args {
          pretty_printed_name: "builtins.dict[builtins._KT,builtins._VT]"
          args {
            pretty_printed_name: "builtins._KT"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "builtins._VT"
            kind: TYPE_VAR
          }
          fully_qualified_name: "builtins.dict"
        }
      }
    }
    parameters {
      name: "__item"
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    is_class_method: true
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__or__"
    fully_qualified_name: "builtins.dict.__or__"
    return_annotation {
      pretty_printed_name: "builtins.dict[Union[builtins._KT,builtins._T1],Union[builtins._VT,builtins._T2]]"
      args {
        pretty_printed_name: "Union[builtins._KT,builtins._T1]"
        kind: UNION
        args {
          pretty_printed_name: "builtins._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "builtins._T1"
          kind: TYPE_VAR
        }
      }
      args {
        pretty_printed_name: "Union[builtins._VT,builtins._T2]"
        kind: UNION
        args {
          pretty_printed_name: "builtins._VT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "builtins._T2"
          kind: TYPE_VAR
        }
      }
      fully_qualified_name: "builtins.dict"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.dict[builtins._KT,builtins._VT]"
        args {
          pretty_printed_name: "builtins._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "builtins._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.dict"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "typing.Mapping[builtins._T1,builtins._T2]"
        args {
          pretty_printed_name: "builtins._T1"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "builtins._T2"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Mapping"
      }
    }
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__ror__"
    fully_qualified_name: "builtins.dict.__ror__"
    return_annotation {
      pretty_printed_name: "builtins.dict[Union[builtins._KT,builtins._T1],Union[builtins._VT,builtins._T2]]"
      args {
        pretty_printed_name: "Union[builtins._KT,builtins._T1]"
        kind: UNION
        args {
          pretty_printed_name: "builtins._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "builtins._T1"
          kind: TYPE_VAR
        }
      }
      args {
        pretty_printed_name: "Union[builtins._VT,builtins._T2]"
        kind: UNION
        args {
          pretty_printed_name: "builtins._VT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "builtins._T2"
          kind: TYPE_VAR
        }
      }
      fully_qualified_name: "builtins.dict"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.dict[builtins._KT,builtins._VT]"
        args {
          pretty_printed_name: "builtins._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "builtins._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.dict"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "typing.Mapping[builtins._T1,builtins._T2]"
        args {
          pretty_printed_name: "builtins._T1"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "builtins._T2"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Mapping"
      }
    }
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "__init__"
    fullname: "builtins.dict.__init__"
    definitions {
      name: "__init__"
      fully_qualified_name: "builtins.dict.__init__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.dict[builtins._KT,builtins._VT]"
          args {
            pretty_printed_name: "builtins._KT"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "builtins._VT"
            kind: TYPE_VAR
          }
          fully_qualified_name: "builtins.dict"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__init__"
      fully_qualified_name: "builtins.dict.__init__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.dict[builtins.str,builtins._VT]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins._VT"
            kind: TYPE_VAR
          }
          fully_qualified_name: "builtins.dict"
        }
      }
      parameters {
        name: "kwargs"
        kind: VAR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins._VT"
          kind: TYPE_VAR
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__init__"
      fully_qualified_name: "builtins.dict.__init__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.dict[builtins._KT,builtins._VT]"
          args {
            pretty_printed_name: "builtins._KT"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "builtins._VT"
            kind: TYPE_VAR
          }
          fully_qualified_name: "builtins.dict"
        }
      }
      parameters {
        name: "__map"
        type_annotation {
          pretty_printed_name: "_typeshed.SupportsKeysAndGetItem[builtins._KT,builtins._VT]"
          args {
            pretty_printed_name: "builtins._KT"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "builtins._VT"
            kind: TYPE_VAR
          }
          fully_qualified_name: "_typeshed.SupportsKeysAndGetItem"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__init__"
      fully_qualified_name: "builtins.dict.__init__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.dict[builtins.str,builtins._VT]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins._VT"
            kind: TYPE_VAR
          }
          fully_qualified_name: "builtins.dict"
        }
      }
      parameters {
        name: "__map"
        type_annotation {
          pretty_printed_name: "_typeshed.SupportsKeysAndGetItem[builtins.str,builtins._VT]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins._VT"
            kind: TYPE_VAR
          }
          fully_qualified_name: "_typeshed.SupportsKeysAndGetItem"
        }
      }
      parameters {
        name: "kwargs"
        kind: VAR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins._VT"
          kind: TYPE_VAR
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__init__"
      fully_qualified_name: "builtins.dict.__init__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.dict[builtins._KT,builtins._VT]"
          args {
            pretty_printed_name: "builtins._KT"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "builtins._VT"
            kind: TYPE_VAR
          }
          fully_qualified_name: "builtins.dict"
        }
      }
      parameters {
        name: "__iterable"
        type_annotation {
          pretty_printed_name: "typing.Iterable[Tuple[builtins._KT,builtins._VT]]"
          args {
            pretty_printed_name: "Tuple[builtins._KT,builtins._VT]"
            kind: TUPLE
            args {
              pretty_printed_name: "builtins._KT"
              kind: TYPE_VAR
            }
            args {
              pretty_printed_name: "builtins._VT"
              kind: TYPE_VAR
            }
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__init__"
      fully_qualified_name: "builtins.dict.__init__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.dict[builtins.str,builtins._VT]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins._VT"
            kind: TYPE_VAR
          }
          fully_qualified_name: "builtins.dict"
        }
      }
      parameters {
        name: "__iterable"
        type_annotation {
          pretty_printed_name: "typing.Iterable[Tuple[builtins.str,builtins._VT]]"
          args {
            pretty_printed_name: "Tuple[builtins.str,builtins._VT]"
            kind: TUPLE
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins._VT"
              kind: TYPE_VAR
            }
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "kwargs"
        kind: VAR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins._VT"
          kind: TYPE_VAR
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__init__"
      fully_qualified_name: "builtins.dict.__init__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.dict[builtins.str,builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "builtins.dict"
        }
      }
      parameters {
        name: "__iterable"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins.list[builtins.str]]"
          args {
            pretty_printed_name: "builtins.list[builtins.str]"
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            fully_qualified_name: "builtins.list"
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__init__"
      fully_qualified_name: "builtins.dict.__init__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.dict[builtins.bytes,builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "builtins.dict"
        }
      }
      parameters {
        name: "__iterable"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins.list[builtins.bytes]]"
          args {
            pretty_printed_name: "builtins.list[builtins.bytes]"
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            fully_qualified_name: "builtins.list"
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "fromkeys"
    fullname: "builtins.dict.fromkeys"
    definitions {
      name: "fromkeys"
      fully_qualified_name: "builtins.dict.fromkeys"
      return_annotation {
        pretty_printed_name: "builtins.dict[builtins._T,Union[Any,None]]"
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "Union[Any,None]"
          kind: UNION
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        fully_qualified_name: "builtins.dict"
      }
      parameters {
        name: "cls"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Type[builtins.dict[builtins._KT,builtins._VT]]"
          kind: TYPE
          args {
            pretty_printed_name: "builtins.dict[builtins._KT,builtins._VT]"
            args {
              pretty_printed_name: "builtins._KT"
              kind: TYPE_VAR
            }
            args {
              pretty_printed_name: "builtins._VT"
              kind: TYPE_VAR
            }
            fully_qualified_name: "builtins.dict"
          }
        }
      }
      parameters {
        name: "__iterable"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T]"
          args {
            pretty_printed_name: "builtins._T"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "__value"
        type_annotation {
          pretty_printed_name: "None"
          kind: NONE
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "classmethod"
      resolved_decorator_names: "overload"
      is_overload: true
      is_class_method: true
    }
    definitions {
      name: "fromkeys"
      fully_qualified_name: "builtins.dict.fromkeys"
      return_annotation {
        pretty_printed_name: "builtins.dict[builtins._T,builtins._S]"
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "builtins._S"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.dict"
      }
      parameters {
        name: "cls"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Type[builtins.dict[builtins._KT,builtins._VT]]"
          kind: TYPE
          args {
            pretty_printed_name: "builtins.dict[builtins._KT,builtins._VT]"
            args {
              pretty_printed_name: "builtins._KT"
              kind: TYPE_VAR
            }
            args {
              pretty_printed_name: "builtins._VT"
              kind: TYPE_VAR
            }
            fully_qualified_name: "builtins.dict"
          }
        }
      }
      parameters {
        name: "__iterable"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T]"
          args {
            pretty_printed_name: "builtins._T"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "__value"
        type_annotation {
          pretty_printed_name: "builtins._S"
          kind: TYPE_VAR
        }
      }
      has_decorators: true
      resolved_decorator_names: "classmethod"
      resolved_decorator_names: "overload"
      is_overload: true
      is_class_method: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "get"
    fullname: "builtins.dict.get"
    definitions {
      name: "get"
      fully_qualified_name: "builtins.dict.get"
      return_annotation {
        pretty_printed_name: "Union[builtins._VT,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins._VT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.dict[builtins._KT,builtins._VT]"
          args {
            pretty_printed_name: "builtins._KT"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "builtins._VT"
            kind: TYPE_VAR
          }
          fully_qualified_name: "builtins.dict"
        }
      }
      parameters {
        name: "__key"
        type_annotation {
          pretty_printed_name: "builtins._KT"
          kind: TYPE_VAR
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "get"
      fully_qualified_name: "builtins.dict.get"
      return_annotation {
        pretty_printed_name: "Union[builtins._VT,builtins._T]"
        kind: UNION
        args {
          pretty_printed_name: "builtins._VT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.dict[builtins._KT,builtins._VT]"
          args {
            pretty_printed_name: "builtins._KT"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "builtins._VT"
            kind: TYPE_VAR
          }
          fully_qualified_name: "builtins.dict"
        }
      }
      parameters {
        name: "__key"
        type_annotation {
          pretty_printed_name: "builtins._KT"
          kind: TYPE_VAR
        }
      }
      parameters {
        name: "__default"
        type_annotation {
          pretty_printed_name: "Union[builtins._VT,builtins._T]"
          kind: UNION
          args {
            pretty_printed_name: "builtins._VT"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "builtins._T"
            kind: TYPE_VAR
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "pop"
    fullname: "builtins.dict.pop"
    definitions {
      name: "pop"
      fully_qualified_name: "builtins.dict.pop"
      return_annotation {
        pretty_printed_name: "builtins._VT"
        kind: TYPE_VAR
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.dict[builtins._KT,builtins._VT]"
          args {
            pretty_printed_name: "builtins._KT"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "builtins._VT"
            kind: TYPE_VAR
          }
          fully_qualified_name: "builtins.dict"
        }
      }
      parameters {
        name: "__key"
        type_annotation {
          pretty_printed_name: "builtins._KT"
          kind: TYPE_VAR
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "pop"
      fully_qualified_name: "builtins.dict.pop"
      return_annotation {
        pretty_printed_name: "Union[builtins._VT,builtins._T]"
        kind: UNION
        args {
          pretty_printed_name: "builtins._VT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.dict[builtins._KT,builtins._VT]"
          args {
            pretty_printed_name: "builtins._KT"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "builtins._VT"
            kind: TYPE_VAR
          }
          fully_qualified_name: "builtins.dict"
        }
      }
      parameters {
        name: "__key"
        type_annotation {
          pretty_printed_name: "builtins._KT"
          kind: TYPE_VAR
        }
      }
      parameters {
        name: "__default"
        type_annotation {
          pretty_printed_name: "Union[builtins._VT,builtins._T]"
          kind: UNION
          args {
            pretty_printed_name: "builtins._VT"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "builtins._T"
            kind: TYPE_VAR
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "__ior__"
    fullname: "builtins.dict.__ior__"
    definitions {
      name: "__ior__"
      fully_qualified_name: "builtins.dict.__ior__"
      return_annotation {
        pretty_printed_name: "UnboundType[Self]"
        kind: UNBOUND
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "builtins.dict[builtins._KT,builtins._VT]"
          args {
            pretty_printed_name: "builtins._KT"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "builtins._VT"
            kind: TYPE_VAR
          }
          fully_qualified_name: "builtins.dict"
        }
      }
      parameters {
        name: "__value"
        type_annotation {
          pretty_printed_name: "_typeshed.SupportsKeysAndGetItem[builtins._KT,builtins._VT]"
          args {
            pretty_printed_name: "builtins._KT"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "builtins._VT"
            kind: TYPE_VAR
          }
          fully_qualified_name: "_typeshed.SupportsKeysAndGetItem"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__ior__"
      fully_qualified_name: "builtins.dict.__ior__"
      return_annotation {
        pretty_printed_name: "UnboundType[Self]"
        kind: UNBOUND
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "builtins.dict[builtins._KT,builtins._VT]"
          args {
            pretty_printed_name: "builtins._KT"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "builtins._VT"
            kind: TYPE_VAR
          }
          fully_qualified_name: "builtins.dict"
        }
      }
      parameters {
        name: "__value"
        type_annotation {
          pretty_printed_name: "typing.Iterable[Tuple[builtins._KT,builtins._VT]]"
          args {
            pretty_printed_name: "Tuple[builtins._KT,builtins._VT]"
            kind: TUPLE
            args {
              pretty_printed_name: "builtins._KT"
              kind: TYPE_VAR
            }
            args {
              pretty_printed_name: "builtins._VT"
              kind: TYPE_VAR
            }
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "39"
    valid_for: "310"
  }
  is_generic: true
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "__hash__"
    fully_qualified_name: "builtins.dict.__hash__"
    type_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "set"
  fully_qualified_name: "builtins.set"
  super_classes: "typing.MutableSet"
  methods {
    name: "add"
    fully_qualified_name: "builtins.set.add"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.set[builtins._T]"
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.set"
      }
    }
    parameters {
      name: "__element"
      type_annotation {
        pretty_printed_name: "builtins._T"
        kind: TYPE_VAR
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "copy"
    fully_qualified_name: "builtins.set.copy"
    return_annotation {
      pretty_printed_name: "builtins.set[builtins._T]"
      args {
        pretty_printed_name: "builtins._T"
        kind: TYPE_VAR
      }
      fully_qualified_name: "builtins.set"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.set[builtins._T]"
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.set"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "difference"
    fully_qualified_name: "builtins.set.difference"
    return_annotation {
      pretty_printed_name: "builtins.set[builtins._T]"
      args {
        pretty_printed_name: "builtins._T"
        kind: TYPE_VAR
      }
      fully_qualified_name: "builtins.set"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.set[builtins._T]"
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.set"
      }
    }
    parameters {
      name: "s"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "typing.Iterable[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "difference_update"
    fully_qualified_name: "builtins.set.difference_update"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.set[builtins._T]"
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.set"
      }
    }
    parameters {
      name: "s"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "typing.Iterable[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "discard"
    fully_qualified_name: "builtins.set.discard"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.set[builtins._T]"
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.set"
      }
    }
    parameters {
      name: "__element"
      type_annotation {
        pretty_printed_name: "builtins._T"
        kind: TYPE_VAR
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "intersection"
    fully_qualified_name: "builtins.set.intersection"
    return_annotation {
      pretty_printed_name: "builtins.set[builtins._T]"
      args {
        pretty_printed_name: "builtins._T"
        kind: TYPE_VAR
      }
      fully_qualified_name: "builtins.set"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.set[builtins._T]"
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.set"
      }
    }
    parameters {
      name: "s"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "typing.Iterable[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "intersection_update"
    fully_qualified_name: "builtins.set.intersection_update"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.set[builtins._T]"
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.set"
      }
    }
    parameters {
      name: "s"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "typing.Iterable[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "isdisjoint"
    fully_qualified_name: "builtins.set.isdisjoint"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.set[builtins._T]"
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.set"
      }
    }
    parameters {
      name: "__s"
      type_annotation {
        pretty_printed_name: "typing.Iterable[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "issubset"
    fully_qualified_name: "builtins.set.issubset"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.set[builtins._T]"
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.set"
      }
    }
    parameters {
      name: "__s"
      type_annotation {
        pretty_printed_name: "typing.Iterable[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "issuperset"
    fully_qualified_name: "builtins.set.issuperset"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.set[builtins._T]"
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.set"
      }
    }
    parameters {
      name: "__s"
      type_annotation {
        pretty_printed_name: "typing.Iterable[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "remove"
    fully_qualified_name: "builtins.set.remove"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.set[builtins._T]"
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.set"
      }
    }
    parameters {
      name: "__element"
      type_annotation {
        pretty_printed_name: "builtins._T"
        kind: TYPE_VAR
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "symmetric_difference"
    fully_qualified_name: "builtins.set.symmetric_difference"
    return_annotation {
      pretty_printed_name: "builtins.set[builtins._T]"
      args {
        pretty_printed_name: "builtins._T"
        kind: TYPE_VAR
      }
      fully_qualified_name: "builtins.set"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.set[builtins._T]"
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.set"
      }
    }
    parameters {
      name: "__s"
      type_annotation {
        pretty_printed_name: "typing.Iterable[builtins._T]"
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "symmetric_difference_update"
    fully_qualified_name: "builtins.set.symmetric_difference_update"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.set[builtins._T]"
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.set"
      }
    }
    parameters {
      name: "__s"
      type_annotation {
        pretty_printed_name: "typing.Iterable[builtins._T]"
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "union"
    fully_qualified_name: "builtins.set.union"
    return_annotation {
      pretty_printed_name: "builtins.set[Union[builtins._T,builtins._S]]"
      args {
        pretty_printed_name: "Union[builtins._T,builtins._S]"
        kind: UNION
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "builtins._S"
          kind: TYPE_VAR
        }
      }
      fully_qualified_name: "builtins.set"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.set[builtins._T]"
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.set"
      }
    }
    parameters {
      name: "s"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "typing.Iterable[builtins._S]"
        args {
          pretty_printed_name: "builtins._S"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "update"
    fully_qualified_name: "builtins.set.update"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.set[builtins._T]"
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.set"
      }
    }
    parameters {
      name: "s"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "typing.Iterable[builtins._T]"
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__len__"
    fully_qualified_name: "builtins.set.__len__"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.set[builtins._T]"
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.set"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__contains__"
    fully_qualified_name: "builtins.set.__contains__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.set[builtins._T]"
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.set"
      }
    }
    parameters {
      name: "__o"
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__iter__"
    fully_qualified_name: "builtins.set.__iter__"
    return_annotation {
      pretty_printed_name: "typing.Iterator[builtins._T]"
      args {
        pretty_printed_name: "builtins._T"
        kind: TYPE_VAR
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.set[builtins._T]"
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.set"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__and__"
    fully_qualified_name: "builtins.set.__and__"
    return_annotation {
      pretty_printed_name: "builtins.set[builtins._T]"
      args {
        pretty_printed_name: "builtins._T"
        kind: TYPE_VAR
      }
      fully_qualified_name: "builtins.set"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.set[builtins._T]"
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.set"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "typing.AbstractSet[builtins.object]"
        args {
          pretty_printed_name: "builtins.object"
          fully_qualified_name: "builtins.object"
        }
        fully_qualified_name: "typing.AbstractSet"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__iand__"
    fully_qualified_name: "builtins.set.__iand__"
    return_annotation {
      pretty_printed_name: "UnboundType[Self]"
      kind: UNBOUND
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.set[builtins._T]"
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.set"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "typing.AbstractSet[builtins.object]"
        args {
          pretty_printed_name: "builtins.object"
          fully_qualified_name: "builtins.object"
        }
        fully_qualified_name: "typing.AbstractSet"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__or__"
    fully_qualified_name: "builtins.set.__or__"
    return_annotation {
      pretty_printed_name: "builtins.set[Union[builtins._T,builtins._S]]"
      args {
        pretty_printed_name: "Union[builtins._T,builtins._S]"
        kind: UNION
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "builtins._S"
          kind: TYPE_VAR
        }
      }
      fully_qualified_name: "builtins.set"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.set[builtins._T]"
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.set"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "typing.AbstractSet[builtins._S]"
        args {
          pretty_printed_name: "builtins._S"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.AbstractSet"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__ior__"
    fully_qualified_name: "builtins.set.__ior__"
    return_annotation {
      pretty_printed_name: "UnboundType[Self]"
      kind: UNBOUND
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.set[builtins._T]"
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.set"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "typing.AbstractSet[builtins._T]"
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.AbstractSet"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__sub__"
    fully_qualified_name: "builtins.set.__sub__"
    return_annotation {
      pretty_printed_name: "builtins.set[builtins._T]"
      args {
        pretty_printed_name: "builtins._T"
        kind: TYPE_VAR
      }
      fully_qualified_name: "builtins.set"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.set[builtins._T]"
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.set"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "typing.AbstractSet[Union[builtins._T,None]]"
        args {
          pretty_printed_name: "Union[builtins._T,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins._T"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        fully_qualified_name: "typing.AbstractSet"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__isub__"
    fully_qualified_name: "builtins.set.__isub__"
    return_annotation {
      pretty_printed_name: "UnboundType[Self]"
      kind: UNBOUND
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.set[builtins._T]"
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.set"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "typing.AbstractSet[builtins.object]"
        args {
          pretty_printed_name: "builtins.object"
          fully_qualified_name: "builtins.object"
        }
        fully_qualified_name: "typing.AbstractSet"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__xor__"
    fully_qualified_name: "builtins.set.__xor__"
    return_annotation {
      pretty_printed_name: "builtins.set[Union[builtins._T,builtins._S]]"
      args {
        pretty_printed_name: "Union[builtins._T,builtins._S]"
        kind: UNION
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "builtins._S"
          kind: TYPE_VAR
        }
      }
      fully_qualified_name: "builtins.set"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.set[builtins._T]"
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.set"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "typing.AbstractSet[builtins._S]"
        args {
          pretty_printed_name: "builtins._S"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.AbstractSet"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__ixor__"
    fully_qualified_name: "builtins.set.__ixor__"
    return_annotation {
      pretty_printed_name: "UnboundType[Self]"
      kind: UNBOUND
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.set[builtins._T]"
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.set"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "typing.AbstractSet[builtins._T]"
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.AbstractSet"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__le__"
    fully_qualified_name: "builtins.set.__le__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.set[builtins._T]"
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.set"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "typing.AbstractSet[builtins.object]"
        args {
          pretty_printed_name: "builtins.object"
          fully_qualified_name: "builtins.object"
        }
        fully_qualified_name: "typing.AbstractSet"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__lt__"
    fully_qualified_name: "builtins.set.__lt__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.set[builtins._T]"
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.set"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "typing.AbstractSet[builtins.object]"
        args {
          pretty_printed_name: "builtins.object"
          fully_qualified_name: "builtins.object"
        }
        fully_qualified_name: "typing.AbstractSet"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__ge__"
    fully_qualified_name: "builtins.set.__ge__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.set[builtins._T]"
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.set"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "typing.AbstractSet[builtins.object]"
        args {
          pretty_printed_name: "builtins.object"
          fully_qualified_name: "builtins.object"
        }
        fully_qualified_name: "typing.AbstractSet"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__gt__"
    fully_qualified_name: "builtins.set.__gt__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.set[builtins._T]"
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.set"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "typing.AbstractSet[builtins.object]"
        args {
          pretty_printed_name: "builtins.object"
          fully_qualified_name: "builtins.object"
        }
        fully_qualified_name: "typing.AbstractSet"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__class_getitem__"
    fully_qualified_name: "builtins.set.__class_getitem__"
    return_annotation {
      pretty_printed_name: "types.GenericAlias"
      fully_qualified_name: "types.GenericAlias"
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[builtins.set[builtins._T]]"
        kind: TYPE
        args {
          pretty_printed_name: "builtins.set[builtins._T]"
          args {
            pretty_printed_name: "builtins._T"
            kind: TYPE_VAR
          }
          fully_qualified_name: "builtins.set"
        }
      }
    }
    parameters {
      name: "__item"
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    is_class_method: true
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "__init__"
    fullname: "builtins.set.__init__"
    definitions {
      name: "__init__"
      fully_qualified_name: "builtins.set.__init__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.set[builtins._T]"
          args {
            pretty_printed_name: "builtins._T"
            kind: TYPE_VAR
          }
          fully_qualified_name: "builtins.set"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__init__"
      fully_qualified_name: "builtins.set.__init__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.set[builtins._T]"
          args {
            pretty_printed_name: "builtins._T"
            kind: TYPE_VAR
          }
          fully_qualified_name: "builtins.set"
        }
      }
      parameters {
        name: "__iterable"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T]"
          args {
            pretty_printed_name: "builtins._T"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  is_generic: true
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "__hash__"
    fully_qualified_name: "builtins.set.__hash__"
    type_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "frozenset"
  fully_qualified_name: "builtins.frozenset"
  super_classes: "typing.AbstractSet"
  methods {
    name: "copy"
    fully_qualified_name: "builtins.frozenset.copy"
    return_annotation {
      pretty_printed_name: "builtins.frozenset[builtins._T_co]"
      args {
        pretty_printed_name: "builtins._T_co"
        kind: TYPE_VAR
      }
      fully_qualified_name: "builtins.frozenset"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.frozenset[builtins._T_co]"
        args {
          pretty_printed_name: "builtins._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.frozenset"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "difference"
    fully_qualified_name: "builtins.frozenset.difference"
    return_annotation {
      pretty_printed_name: "builtins.frozenset[builtins._T_co]"
      args {
        pretty_printed_name: "builtins._T_co"
        kind: TYPE_VAR
      }
      fully_qualified_name: "builtins.frozenset"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.frozenset[builtins._T_co]"
        args {
          pretty_printed_name: "builtins._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.frozenset"
      }
    }
    parameters {
      name: "s"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "typing.Iterable[builtins.object]"
        args {
          pretty_printed_name: "builtins.object"
          fully_qualified_name: "builtins.object"
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "intersection"
    fully_qualified_name: "builtins.frozenset.intersection"
    return_annotation {
      pretty_printed_name: "builtins.frozenset[builtins._T_co]"
      args {
        pretty_printed_name: "builtins._T_co"
        kind: TYPE_VAR
      }
      fully_qualified_name: "builtins.frozenset"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.frozenset[builtins._T_co]"
        args {
          pretty_printed_name: "builtins._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.frozenset"
      }
    }
    parameters {
      name: "s"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "typing.Iterable[builtins.object]"
        args {
          pretty_printed_name: "builtins.object"
          fully_qualified_name: "builtins.object"
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "isdisjoint"
    fully_qualified_name: "builtins.frozenset.isdisjoint"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.frozenset[builtins._T_co]"
        args {
          pretty_printed_name: "builtins._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.frozenset"
      }
    }
    parameters {
      name: "__s"
      type_annotation {
        pretty_printed_name: "typing.Iterable[builtins._T_co]"
        args {
          pretty_printed_name: "builtins._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "issubset"
    fully_qualified_name: "builtins.frozenset.issubset"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.frozenset[builtins._T_co]"
        args {
          pretty_printed_name: "builtins._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.frozenset"
      }
    }
    parameters {
      name: "__s"
      type_annotation {
        pretty_printed_name: "typing.Iterable[builtins.object]"
        args {
          pretty_printed_name: "builtins.object"
          fully_qualified_name: "builtins.object"
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "issuperset"
    fully_qualified_name: "builtins.frozenset.issuperset"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.frozenset[builtins._T_co]"
        args {
          pretty_printed_name: "builtins._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.frozenset"
      }
    }
    parameters {
      name: "__s"
      type_annotation {
        pretty_printed_name: "typing.Iterable[builtins.object]"
        args {
          pretty_printed_name: "builtins.object"
          fully_qualified_name: "builtins.object"
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "symmetric_difference"
    fully_qualified_name: "builtins.frozenset.symmetric_difference"
    return_annotation {
      pretty_printed_name: "builtins.frozenset[builtins._T_co]"
      args {
        pretty_printed_name: "builtins._T_co"
        kind: TYPE_VAR
      }
      fully_qualified_name: "builtins.frozenset"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.frozenset[builtins._T_co]"
        args {
          pretty_printed_name: "builtins._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.frozenset"
      }
    }
    parameters {
      name: "__s"
      type_annotation {
        pretty_printed_name: "typing.Iterable[builtins._T_co]"
        args {
          pretty_printed_name: "builtins._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "union"
    fully_qualified_name: "builtins.frozenset.union"
    return_annotation {
      pretty_printed_name: "builtins.frozenset[Union[builtins._T_co,builtins._S]]"
      args {
        pretty_printed_name: "Union[builtins._T_co,builtins._S]"
        kind: UNION
        args {
          pretty_printed_name: "builtins._T_co"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "builtins._S"
          kind: TYPE_VAR
        }
      }
      fully_qualified_name: "builtins.frozenset"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.frozenset[builtins._T_co]"
        args {
          pretty_printed_name: "builtins._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.frozenset"
      }
    }
    parameters {
      name: "s"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "typing.Iterable[builtins._S]"
        args {
          pretty_printed_name: "builtins._S"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__len__"
    fully_qualified_name: "builtins.frozenset.__len__"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.frozenset[builtins._T_co]"
        args {
          pretty_printed_name: "builtins._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.frozenset"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__contains__"
    fully_qualified_name: "builtins.frozenset.__contains__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.frozenset[builtins._T_co]"
        args {
          pretty_printed_name: "builtins._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.frozenset"
      }
    }
    parameters {
      name: "__o"
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__iter__"
    fully_qualified_name: "builtins.frozenset.__iter__"
    return_annotation {
      pretty_printed_name: "typing.Iterator[builtins._T_co]"
      args {
        pretty_printed_name: "builtins._T_co"
        kind: TYPE_VAR
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.frozenset[builtins._T_co]"
        args {
          pretty_printed_name: "builtins._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.frozenset"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__and__"
    fully_qualified_name: "builtins.frozenset.__and__"
    return_annotation {
      pretty_printed_name: "builtins.frozenset[builtins._T_co]"
      args {
        pretty_printed_name: "builtins._T_co"
        kind: TYPE_VAR
      }
      fully_qualified_name: "builtins.frozenset"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.frozenset[builtins._T_co]"
        args {
          pretty_printed_name: "builtins._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.frozenset"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "typing.AbstractSet[builtins._T_co]"
        args {
          pretty_printed_name: "builtins._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.AbstractSet"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__or__"
    fully_qualified_name: "builtins.frozenset.__or__"
    return_annotation {
      pretty_printed_name: "builtins.frozenset[Union[builtins._T_co,builtins._S]]"
      args {
        pretty_printed_name: "Union[builtins._T_co,builtins._S]"
        kind: UNION
        args {
          pretty_printed_name: "builtins._T_co"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "builtins._S"
          kind: TYPE_VAR
        }
      }
      fully_qualified_name: "builtins.frozenset"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.frozenset[builtins._T_co]"
        args {
          pretty_printed_name: "builtins._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.frozenset"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "typing.AbstractSet[builtins._S]"
        args {
          pretty_printed_name: "builtins._S"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.AbstractSet"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__sub__"
    fully_qualified_name: "builtins.frozenset.__sub__"
    return_annotation {
      pretty_printed_name: "builtins.frozenset[builtins._T_co]"
      args {
        pretty_printed_name: "builtins._T_co"
        kind: TYPE_VAR
      }
      fully_qualified_name: "builtins.frozenset"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.frozenset[builtins._T_co]"
        args {
          pretty_printed_name: "builtins._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.frozenset"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "typing.AbstractSet[builtins._T_co]"
        args {
          pretty_printed_name: "builtins._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.AbstractSet"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__xor__"
    fully_qualified_name: "builtins.frozenset.__xor__"
    return_annotation {
      pretty_printed_name: "builtins.frozenset[Union[builtins._T_co,builtins._S]]"
      args {
        pretty_printed_name: "Union[builtins._T_co,builtins._S]"
        kind: UNION
        args {
          pretty_printed_name: "builtins._T_co"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "builtins._S"
          kind: TYPE_VAR
        }
      }
      fully_qualified_name: "builtins.frozenset"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.frozenset[builtins._T_co]"
        args {
          pretty_printed_name: "builtins._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.frozenset"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "typing.AbstractSet[builtins._S]"
        args {
          pretty_printed_name: "builtins._S"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.AbstractSet"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__le__"
    fully_qualified_name: "builtins.frozenset.__le__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.frozenset[builtins._T_co]"
        args {
          pretty_printed_name: "builtins._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.frozenset"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "typing.AbstractSet[builtins.object]"
        args {
          pretty_printed_name: "builtins.object"
          fully_qualified_name: "builtins.object"
        }
        fully_qualified_name: "typing.AbstractSet"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__lt__"
    fully_qualified_name: "builtins.frozenset.__lt__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.frozenset[builtins._T_co]"
        args {
          pretty_printed_name: "builtins._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.frozenset"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "typing.AbstractSet[builtins.object]"
        args {
          pretty_printed_name: "builtins.object"
          fully_qualified_name: "builtins.object"
        }
        fully_qualified_name: "typing.AbstractSet"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__ge__"
    fully_qualified_name: "builtins.frozenset.__ge__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.frozenset[builtins._T_co]"
        args {
          pretty_printed_name: "builtins._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.frozenset"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "typing.AbstractSet[builtins.object]"
        args {
          pretty_printed_name: "builtins.object"
          fully_qualified_name: "builtins.object"
        }
        fully_qualified_name: "typing.AbstractSet"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__gt__"
    fully_qualified_name: "builtins.frozenset.__gt__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.frozenset[builtins._T_co]"
        args {
          pretty_printed_name: "builtins._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.frozenset"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "typing.AbstractSet[builtins.object]"
        args {
          pretty_printed_name: "builtins.object"
          fully_qualified_name: "builtins.object"
        }
        fully_qualified_name: "typing.AbstractSet"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__class_getitem__"
    fully_qualified_name: "builtins.frozenset.__class_getitem__"
    return_annotation {
      pretty_printed_name: "types.GenericAlias"
      fully_qualified_name: "types.GenericAlias"
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[builtins.frozenset[builtins._T_co]]"
        kind: TYPE
        args {
          pretty_printed_name: "builtins.frozenset[builtins._T_co]"
          args {
            pretty_printed_name: "builtins._T_co"
            kind: TYPE_VAR
          }
          fully_qualified_name: "builtins.frozenset"
        }
      }
    }
    parameters {
      name: "__item"
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    is_class_method: true
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "__new__"
    fullname: "builtins.frozenset.__new__"
    definitions {
      name: "__new__"
      fully_qualified_name: "builtins.frozenset.__new__"
      return_annotation {
        pretty_printed_name: "UnboundType[Self]"
        kind: UNBOUND
      }
      parameters {
        name: "cls"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Type[builtins.frozenset[builtins._T_co]]"
          kind: TYPE
          args {
            pretty_printed_name: "builtins.frozenset[builtins._T_co]"
            args {
              pretty_printed_name: "builtins._T_co"
              kind: TYPE_VAR
            }
            fully_qualified_name: "builtins.frozenset"
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__new__"
      fully_qualified_name: "builtins.frozenset.__new__"
      return_annotation {
        pretty_printed_name: "UnboundType[Self]"
        kind: UNBOUND
      }
      parameters {
        name: "cls"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Type[builtins.frozenset[builtins._T_co]]"
          kind: TYPE
          args {
            pretty_printed_name: "builtins.frozenset[builtins._T_co]"
            args {
              pretty_printed_name: "builtins._T_co"
              kind: TYPE_VAR
            }
            fully_qualified_name: "builtins.frozenset"
          }
        }
      }
      parameters {
        name: "__iterable"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T_co]"
          args {
            pretty_printed_name: "builtins._T_co"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  is_generic: true
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "enumerate"
  fully_qualified_name: "builtins.enumerate"
  super_classes: "typing.Iterator"
  methods {
    name: "__init__"
    fully_qualified_name: "builtins.enumerate.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.enumerate[builtins._T]"
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.enumerate"
      }
    }
    parameters {
      name: "iterable"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[builtins._T]"
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    parameters {
      name: "start"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__iter__"
    fully_qualified_name: "builtins.enumerate.__iter__"
    return_annotation {
      pretty_printed_name: "UnboundType[Self]"
      kind: UNBOUND
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.enumerate[builtins._T]"
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.enumerate"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__next__"
    fully_qualified_name: "builtins.enumerate.__next__"
    return_annotation {
      pretty_printed_name: "Tuple[builtins.int,builtins._T]"
      kind: TUPLE
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "builtins._T"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.enumerate[builtins._T]"
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.enumerate"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__class_getitem__"
    fully_qualified_name: "builtins.enumerate.__class_getitem__"
    return_annotation {
      pretty_printed_name: "types.GenericAlias"
      fully_qualified_name: "types.GenericAlias"
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[builtins.enumerate[builtins._T]]"
        kind: TYPE
        args {
          pretty_printed_name: "builtins.enumerate[builtins._T]"
          args {
            pretty_printed_name: "builtins._T"
            kind: TYPE_VAR
          }
          fully_qualified_name: "builtins.enumerate"
        }
      }
    }
    parameters {
      name: "__item"
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    is_class_method: true
    valid_for: "39"
    valid_for: "310"
  }
  is_generic: true
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "range"
  fully_qualified_name: "builtins.range"
  super_classes: "typing.Sequence"
  methods {
    name: "start"
    fully_qualified_name: "builtins.range.start"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.range"
        fully_qualified_name: "builtins.range"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "stop"
    fully_qualified_name: "builtins.range.stop"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.range"
        fully_qualified_name: "builtins.range"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "step"
    fully_qualified_name: "builtins.range.step"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.range"
        fully_qualified_name: "builtins.range"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "count"
    fully_qualified_name: "builtins.range.count"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.range"
        fully_qualified_name: "builtins.range"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "index"
    fully_qualified_name: "builtins.range.index"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.range"
        fully_qualified_name: "builtins.range"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__len__"
    fully_qualified_name: "builtins.range.__len__"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.range"
        fully_qualified_name: "builtins.range"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__contains__"
    fully_qualified_name: "builtins.range.__contains__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.range"
        fully_qualified_name: "builtins.range"
      }
    }
    parameters {
      name: "__key"
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__iter__"
    fully_qualified_name: "builtins.range.__iter__"
    return_annotation {
      pretty_printed_name: "typing.Iterator[builtins.int]"
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.range"
        fully_qualified_name: "builtins.range"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__reversed__"
    fully_qualified_name: "builtins.range.__reversed__"
    return_annotation {
      pretty_printed_name: "typing.Iterator[builtins.int]"
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.range"
        fully_qualified_name: "builtins.range"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "__init__"
    fullname: "builtins.range.__init__"
    definitions {
      name: "__init__"
      fully_qualified_name: "builtins.range.__init__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.range"
          fully_qualified_name: "builtins.range"
        }
      }
      parameters {
        name: "__stop"
        type_annotation {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__init__"
      fully_qualified_name: "builtins.range.__init__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.range"
          fully_qualified_name: "builtins.range"
        }
      }
      parameters {
        name: "__start"
        type_annotation {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
      }
      parameters {
        name: "__stop"
        type_annotation {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
      }
      parameters {
        name: "__step"
        type_annotation {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "__getitem__"
    fullname: "builtins.range.__getitem__"
    definitions {
      name: "__getitem__"
      fully_qualified_name: "builtins.range.__getitem__"
      return_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "builtins.range"
          fully_qualified_name: "builtins.range"
        }
      }
      parameters {
        name: "__key"
        type_annotation {
          pretty_printed_name: "typing_extensions.SupportsIndex"
          fully_qualified_name: "typing_extensions.SupportsIndex"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__getitem__"
      fully_qualified_name: "builtins.range.__getitem__"
      return_annotation {
        pretty_printed_name: "builtins.range"
        fully_qualified_name: "builtins.range"
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "builtins.range"
          fully_qualified_name: "builtins.range"
        }
      }
      parameters {
        name: "__key"
        type_annotation {
          pretty_printed_name: "builtins.slice"
          fully_qualified_name: "builtins.slice"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  has_decorators: true
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "property"
  fully_qualified_name: "builtins.property"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "builtins.property.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.property"
        fully_qualified_name: "builtins.property"
      }
    }
    parameters {
      name: "fget"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[CallableType[builtins.function],None]"
        kind: UNION
        args {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "fset"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[CallableType[builtins.function],None]"
        kind: UNION
        args {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "fdel"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[CallableType[builtins.function],None]"
        kind: UNION
        args {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "doc"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "getter"
    fully_qualified_name: "builtins.property.getter"
    return_annotation {
      pretty_printed_name: "builtins.property"
      fully_qualified_name: "builtins.property"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.property"
        fully_qualified_name: "builtins.property"
      }
    }
    parameters {
      name: "__fget"
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "setter"
    fully_qualified_name: "builtins.property.setter"
    return_annotation {
      pretty_printed_name: "builtins.property"
      fully_qualified_name: "builtins.property"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.property"
        fully_qualified_name: "builtins.property"
      }
    }
    parameters {
      name: "__fset"
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "deleter"
    fully_qualified_name: "builtins.property.deleter"
    return_annotation {
      pretty_printed_name: "builtins.property"
      fully_qualified_name: "builtins.property"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.property"
        fully_qualified_name: "builtins.property"
      }
    }
    parameters {
      name: "__fdel"
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__get__"
    fully_qualified_name: "builtins.property.__get__"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.property"
        fully_qualified_name: "builtins.property"
      }
    }
    parameters {
      name: "__instance"
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "__owner"
      type_annotation {
        pretty_printed_name: "Union[builtins.type,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.type"
          fully_qualified_name: "builtins.type"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__set__"
    fully_qualified_name: "builtins.property.__set__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.property"
        fully_qualified_name: "builtins.property"
      }
    }
    parameters {
      name: "__instance"
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__delete__"
    fully_qualified_name: "builtins.property.__delete__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.property"
        fully_qualified_name: "builtins.property"
      }
    }
    parameters {
      name: "__instance"
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "fget"
    fully_qualified_name: "builtins.property.fget"
    type_annotation {
      pretty_printed_name: "Union[CallableType[builtins.function],None]"
      kind: UNION
      args {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "fset"
    fully_qualified_name: "builtins.property.fset"
    type_annotation {
      pretty_printed_name: "Union[CallableType[builtins.function],None]"
      kind: UNION
      args {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "fdel"
    fully_qualified_name: "builtins.property.fdel"
    type_annotation {
      pretty_printed_name: "Union[CallableType[builtins.function],None]"
      kind: UNION
      args {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "__isabstractmethod__"
    fully_qualified_name: "builtins.property.__isabstractmethod__"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "_NotImplementedType"
  fully_qualified_name: "builtins._NotImplementedType"
  super_classes: "builtins.object"
  has_decorators: true
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "__call__"
    fully_qualified_name: "builtins._NotImplementedType.__call__"
    type_annotation {
      pretty_printed_name: "UnboundType[NotImplemented]"
      kind: UNBOUND
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "_PathLike"
  fully_qualified_name: "builtins._PathLike"
  super_classes: "builtins.object"
  methods {
    name: "__fspath__"
    fully_qualified_name: "builtins._PathLike.__fspath__"
    return_annotation {
      pretty_printed_name: "_typeshed.AnyStr_co"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins._PathLike[_typeshed.AnyStr_co]"
        args {
          pretty_printed_name: "_typeshed.AnyStr_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins._PathLike"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  is_generic: true
  is_protocol: true
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "filter"
  fully_qualified_name: "builtins.filter"
  super_classes: "typing.Iterator"
  methods {
    name: "__iter__"
    fully_qualified_name: "builtins.filter.__iter__"
    return_annotation {
      pretty_printed_name: "UnboundType[Self]"
      kind: UNBOUND
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.filter[builtins._T]"
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.filter"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__next__"
    fully_qualified_name: "builtins.filter.__next__"
    return_annotation {
      pretty_printed_name: "builtins._T"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.filter[builtins._T]"
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.filter"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "__init__"
    fullname: "builtins.filter.__init__"
    definitions {
      name: "__init__"
      fully_qualified_name: "builtins.filter.__init__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.filter[builtins._T]"
          args {
            pretty_printed_name: "builtins._T"
            kind: TYPE_VAR
          }
          fully_qualified_name: "builtins.filter"
        }
      }
      parameters {
        name: "__function"
        type_annotation {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      parameters {
        name: "__iterable"
        type_annotation {
          pretty_printed_name: "typing.Iterable[Union[builtins._T,None]]"
          args {
            pretty_printed_name: "Union[builtins._T,None]"
            kind: UNION
            args {
              pretty_printed_name: "builtins._T"
              kind: TYPE_VAR
            }
            args {
              pretty_printed_name: "None"
              kind: NONE
            }
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__init__"
      fully_qualified_name: "builtins.filter.__init__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.filter[builtins._T]"
          args {
            pretty_printed_name: "builtins._T"
            kind: TYPE_VAR
          }
          fully_qualified_name: "builtins.filter"
        }
      }
      parameters {
        name: "__function"
        type_annotation {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
      }
      parameters {
        name: "__iterable"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._S]"
          args {
            pretty_printed_name: "builtins._S"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__init__"
      fully_qualified_name: "builtins.filter.__init__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.filter[builtins._T]"
          args {
            pretty_printed_name: "builtins._T"
            kind: TYPE_VAR
          }
          fully_qualified_name: "builtins.filter"
        }
      }
      parameters {
        name: "__function"
        type_annotation {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
      }
      parameters {
        name: "__iterable"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T]"
          args {
            pretty_printed_name: "builtins._T"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  is_generic: true
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "_GetItemIterable"
  fully_qualified_name: "builtins._GetItemIterable"
  super_classes: "builtins.object"
  methods {
    name: "__getitem__"
    fully_qualified_name: "builtins._GetItemIterable.__getitem__"
    return_annotation {
      pretty_printed_name: "builtins._T_co"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins._GetItemIterable[builtins._T_co]"
        args {
          pretty_printed_name: "builtins._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins._GetItemIterable"
      }
    }
    parameters {
      name: "__i"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  is_generic: true
  is_protocol: true
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "map"
  fully_qualified_name: "builtins.map"
  super_classes: "typing.Iterator"
  methods {
    name: "__iter__"
    fully_qualified_name: "builtins.map.__iter__"
    return_annotation {
      pretty_printed_name: "UnboundType[Self]"
      kind: UNBOUND
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.map[builtins._S]"
        args {
          pretty_printed_name: "builtins._S"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.map"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__next__"
    fully_qualified_name: "builtins.map.__next__"
    return_annotation {
      pretty_printed_name: "builtins._S"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.map[builtins._S]"
        args {
          pretty_printed_name: "builtins._S"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.map"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "__init__"
    fullname: "builtins.map.__init__"
    definitions {
      name: "__init__"
      fully_qualified_name: "builtins.map.__init__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.map[builtins._S]"
          args {
            pretty_printed_name: "builtins._S"
            kind: TYPE_VAR
          }
          fully_qualified_name: "builtins.map"
        }
      }
      parameters {
        name: "__func"
        type_annotation {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
      }
      parameters {
        name: "__iter1"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T1]"
          args {
            pretty_printed_name: "builtins._T1"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__init__"
      fully_qualified_name: "builtins.map.__init__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.map[builtins._S]"
          args {
            pretty_printed_name: "builtins._S"
            kind: TYPE_VAR
          }
          fully_qualified_name: "builtins.map"
        }
      }
      parameters {
        name: "__func"
        type_annotation {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
      }
      parameters {
        name: "__iter1"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T1]"
          args {
            pretty_printed_name: "builtins._T1"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "__iter2"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T2]"
          args {
            pretty_printed_name: "builtins._T2"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__init__"
      fully_qualified_name: "builtins.map.__init__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.map[builtins._S]"
          args {
            pretty_printed_name: "builtins._S"
            kind: TYPE_VAR
          }
          fully_qualified_name: "builtins.map"
        }
      }
      parameters {
        name: "__func"
        type_annotation {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
      }
      parameters {
        name: "__iter1"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T1]"
          args {
            pretty_printed_name: "builtins._T1"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "__iter2"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T2]"
          args {
            pretty_printed_name: "builtins._T2"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "__iter3"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T3]"
          args {
            pretty_printed_name: "builtins._T3"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__init__"
      fully_qualified_name: "builtins.map.__init__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.map[builtins._S]"
          args {
            pretty_printed_name: "builtins._S"
            kind: TYPE_VAR
          }
          fully_qualified_name: "builtins.map"
        }
      }
      parameters {
        name: "__func"
        type_annotation {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
      }
      parameters {
        name: "__iter1"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T1]"
          args {
            pretty_printed_name: "builtins._T1"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "__iter2"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T2]"
          args {
            pretty_printed_name: "builtins._T2"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "__iter3"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T3]"
          args {
            pretty_printed_name: "builtins._T3"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "__iter4"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T4]"
          args {
            pretty_printed_name: "builtins._T4"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__init__"
      fully_qualified_name: "builtins.map.__init__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.map[builtins._S]"
          args {
            pretty_printed_name: "builtins._S"
            kind: TYPE_VAR
          }
          fully_qualified_name: "builtins.map"
        }
      }
      parameters {
        name: "__func"
        type_annotation {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
      }
      parameters {
        name: "__iter1"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T1]"
          args {
            pretty_printed_name: "builtins._T1"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "__iter2"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T2]"
          args {
            pretty_printed_name: "builtins._T2"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "__iter3"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T3]"
          args {
            pretty_printed_name: "builtins._T3"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "__iter4"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T4]"
          args {
            pretty_printed_name: "builtins._T4"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "__iter5"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T5]"
          args {
            pretty_printed_name: "builtins._T5"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__init__"
      fully_qualified_name: "builtins.map.__init__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.map[builtins._S]"
          args {
            pretty_printed_name: "builtins._S"
            kind: TYPE_VAR
          }
          fully_qualified_name: "builtins.map"
        }
      }
      parameters {
        name: "__func"
        type_annotation {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
      }
      parameters {
        name: "__iter1"
        type_annotation {
          pretty_printed_name: "typing.Iterable[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "__iter2"
        type_annotation {
          pretty_printed_name: "typing.Iterable[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "__iter3"
        type_annotation {
          pretty_printed_name: "typing.Iterable[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "__iter4"
        type_annotation {
          pretty_printed_name: "typing.Iterable[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "__iter5"
        type_annotation {
          pretty_printed_name: "typing.Iterable[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "__iter6"
        type_annotation {
          pretty_printed_name: "typing.Iterable[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "iterables"
        kind: VAR_POSITIONAL
        type_annotation {
          pretty_printed_name: "typing.Iterable[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  is_generic: true
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "_SupportsWriteAndFlush"
  fully_qualified_name: "builtins._SupportsWriteAndFlush"
  super_classes: "_typeshed.SupportsWrite"
  methods {
    name: "flush"
    fully_qualified_name: "builtins._SupportsWriteAndFlush.flush"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins._SupportsWriteAndFlush[builtins._T_contra]"
        args {
          pretty_printed_name: "builtins._T_contra"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins._SupportsWriteAndFlush"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  is_generic: true
  is_protocol: true
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "_SupportsPow2"
  fully_qualified_name: "builtins._SupportsPow2"
  super_classes: "builtins.object"
  methods {
    name: "__pow__"
    fully_qualified_name: "builtins._SupportsPow2.__pow__"
    return_annotation {
      pretty_printed_name: "builtins._T_co"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins._SupportsPow2[builtins._E,builtins._T_co]"
        args {
          pretty_printed_name: "builtins._E"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "builtins._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins._SupportsPow2"
      }
    }
    parameters {
      name: "__other"
      type_annotation {
        pretty_printed_name: "builtins._E"
        kind: TYPE_VAR
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  is_generic: true
  is_protocol: true
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "_SupportsPow3NoneOnly"
  fully_qualified_name: "builtins._SupportsPow3NoneOnly"
  super_classes: "builtins.object"
  methods {
    name: "__pow__"
    fully_qualified_name: "builtins._SupportsPow3NoneOnly.__pow__"
    return_annotation {
      pretty_printed_name: "builtins._T_co"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins._SupportsPow3NoneOnly[builtins._E,builtins._T_co]"
        args {
          pretty_printed_name: "builtins._E"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "builtins._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins._SupportsPow3NoneOnly"
      }
    }
    parameters {
      name: "__other"
      type_annotation {
        pretty_printed_name: "builtins._E"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "__modulo"
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  is_generic: true
  is_protocol: true
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "_SupportsPow3"
  fully_qualified_name: "builtins._SupportsPow3"
  super_classes: "builtins.object"
  methods {
    name: "__pow__"
    fully_qualified_name: "builtins._SupportsPow3.__pow__"
    return_annotation {
      pretty_printed_name: "builtins._T_co"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins._SupportsPow3[builtins._E,builtins._M,builtins._T_co]"
        args {
          pretty_printed_name: "builtins._E"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "builtins._M"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "builtins._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins._SupportsPow3"
      }
    }
    parameters {
      name: "__other"
      type_annotation {
        pretty_printed_name: "builtins._E"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "__modulo"
      type_annotation {
        pretty_printed_name: "builtins._M"
        kind: TYPE_VAR
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  is_generic: true
  is_protocol: true
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "reversed"
  fully_qualified_name: "builtins.reversed"
  super_classes: "typing.Iterator"
  methods {
    name: "__iter__"
    fully_qualified_name: "builtins.reversed.__iter__"
    return_annotation {
      pretty_printed_name: "UnboundType[Self]"
      kind: UNBOUND
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.reversed[builtins._T]"
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.reversed"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__next__"
    fully_qualified_name: "builtins.reversed.__next__"
    return_annotation {
      pretty_printed_name: "builtins._T"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.reversed[builtins._T]"
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.reversed"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__length_hint__"
    fully_qualified_name: "builtins.reversed.__length_hint__"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.reversed[builtins._T]"
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.reversed"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "__init__"
    fullname: "builtins.reversed.__init__"
    definitions {
      name: "__init__"
      fully_qualified_name: "builtins.reversed.__init__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.reversed[builtins._T]"
          args {
            pretty_printed_name: "builtins._T"
            kind: TYPE_VAR
          }
          fully_qualified_name: "builtins.reversed"
        }
      }
      parameters {
        name: "__sequence"
        type_annotation {
          pretty_printed_name: "typing.Reversible[builtins._T]"
          args {
            pretty_printed_name: "builtins._T"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Reversible"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__init__"
      fully_qualified_name: "builtins.reversed.__init__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.reversed[builtins._T]"
          args {
            pretty_printed_name: "builtins._T"
            kind: TYPE_VAR
          }
          fully_qualified_name: "builtins.reversed"
        }
      }
      parameters {
        name: "__sequence"
        type_annotation {
          pretty_printed_name: "_typeshed.SupportsLenAndGetItem[builtins._T]"
          args {
            pretty_printed_name: "builtins._T"
            kind: TYPE_VAR
          }
          fully_qualified_name: "_typeshed.SupportsLenAndGetItem"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  is_generic: true
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "_SupportsRound1"
  fully_qualified_name: "builtins._SupportsRound1"
  super_classes: "builtins.object"
  methods {
    name: "__round__"
    fully_qualified_name: "builtins._SupportsRound1.__round__"
    return_annotation {
      pretty_printed_name: "builtins._T_co"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins._SupportsRound1[builtins._T_co]"
        args {
          pretty_printed_name: "builtins._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins._SupportsRound1"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  is_generic: true
  is_protocol: true
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "_SupportsRound2"
  fully_qualified_name: "builtins._SupportsRound2"
  super_classes: "builtins.object"
  methods {
    name: "__round__"
    fully_qualified_name: "builtins._SupportsRound2.__round__"
    return_annotation {
      pretty_printed_name: "builtins._T_co"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins._SupportsRound2[builtins._T_co]"
        args {
          pretty_printed_name: "builtins._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins._SupportsRound2"
      }
    }
    parameters {
      name: "__ndigits"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  is_generic: true
  is_protocol: true
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "_SupportsSumWithNoDefaultGiven"
  fully_qualified_name: "builtins._SupportsSumWithNoDefaultGiven"
  super_classes: "_typeshed.SupportsAdd"
  super_classes: "_typeshed.SupportsRAdd"
  is_protocol: true
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "zip"
  fully_qualified_name: "builtins.zip"
  super_classes: "typing.Iterator"
  methods {
    name: "__iter__"
    fully_qualified_name: "builtins.zip.__iter__"
    return_annotation {
      pretty_printed_name: "UnboundType[Self]"
      kind: UNBOUND
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "builtins.zip[builtins._T_co]"
        args {
          pretty_printed_name: "builtins._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.zip"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__next__"
    fully_qualified_name: "builtins.zip.__next__"
    return_annotation {
      pretty_printed_name: "builtins._T_co"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.zip[builtins._T_co]"
        args {
          pretty_printed_name: "builtins._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.zip"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "__new__"
    fullname: "builtins.zip.__new__"
    definitions {
      name: "__new__"
      fully_qualified_name: "builtins.zip.__new__"
      return_annotation {
        pretty_printed_name: "builtins.zip[Tuple[builtins._T1]]"
        args {
          pretty_printed_name: "Tuple[builtins._T1]"
          kind: TUPLE
          args {
            pretty_printed_name: "builtins._T1"
            kind: TYPE_VAR
          }
        }
        fully_qualified_name: "builtins.zip"
      }
      parameters {
        name: "cls"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Type[builtins.zip[builtins._T_co]]"
          kind: TYPE
          args {
            pretty_printed_name: "builtins.zip[builtins._T_co]"
            args {
              pretty_printed_name: "builtins._T_co"
              kind: TYPE_VAR
            }
            fully_qualified_name: "builtins.zip"
          }
        }
      }
      parameters {
        name: "__iter1"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T1]"
          args {
            pretty_printed_name: "builtins._T1"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__new__"
      fully_qualified_name: "builtins.zip.__new__"
      return_annotation {
        pretty_printed_name: "builtins.zip[Tuple[builtins._T1,builtins._T2]]"
        args {
          pretty_printed_name: "Tuple[builtins._T1,builtins._T2]"
          kind: TUPLE
          args {
            pretty_printed_name: "builtins._T1"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "builtins._T2"
            kind: TYPE_VAR
          }
        }
        fully_qualified_name: "builtins.zip"
      }
      parameters {
        name: "cls"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Type[builtins.zip[builtins._T_co]]"
          kind: TYPE
          args {
            pretty_printed_name: "builtins.zip[builtins._T_co]"
            args {
              pretty_printed_name: "builtins._T_co"
              kind: TYPE_VAR
            }
            fully_qualified_name: "builtins.zip"
          }
        }
      }
      parameters {
        name: "__iter1"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T1]"
          args {
            pretty_printed_name: "builtins._T1"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "__iter2"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T2]"
          args {
            pretty_printed_name: "builtins._T2"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__new__"
      fully_qualified_name: "builtins.zip.__new__"
      return_annotation {
        pretty_printed_name: "builtins.zip[Tuple[builtins._T1,builtins._T2,builtins._T3]]"
        args {
          pretty_printed_name: "Tuple[builtins._T1,builtins._T2,builtins._T3]"
          kind: TUPLE
          args {
            pretty_printed_name: "builtins._T1"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "builtins._T2"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "builtins._T3"
            kind: TYPE_VAR
          }
        }
        fully_qualified_name: "builtins.zip"
      }
      parameters {
        name: "cls"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Type[builtins.zip[builtins._T_co]]"
          kind: TYPE
          args {
            pretty_printed_name: "builtins.zip[builtins._T_co]"
            args {
              pretty_printed_name: "builtins._T_co"
              kind: TYPE_VAR
            }
            fully_qualified_name: "builtins.zip"
          }
        }
      }
      parameters {
        name: "__iter1"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T1]"
          args {
            pretty_printed_name: "builtins._T1"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "__iter2"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T2]"
          args {
            pretty_printed_name: "builtins._T2"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "__iter3"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T3]"
          args {
            pretty_printed_name: "builtins._T3"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__new__"
      fully_qualified_name: "builtins.zip.__new__"
      return_annotation {
        pretty_printed_name: "builtins.zip[Tuple[builtins._T1,builtins._T2,builtins._T3,builtins._T4]]"
        args {
          pretty_printed_name: "Tuple[builtins._T1,builtins._T2,builtins._T3,builtins._T4]"
          kind: TUPLE
          args {
            pretty_printed_name: "builtins._T1"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "builtins._T2"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "builtins._T3"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "builtins._T4"
            kind: TYPE_VAR
          }
        }
        fully_qualified_name: "builtins.zip"
      }
      parameters {
        name: "cls"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Type[builtins.zip[builtins._T_co]]"
          kind: TYPE
          args {
            pretty_printed_name: "builtins.zip[builtins._T_co]"
            args {
              pretty_printed_name: "builtins._T_co"
              kind: TYPE_VAR
            }
            fully_qualified_name: "builtins.zip"
          }
        }
      }
      parameters {
        name: "__iter1"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T1]"
          args {
            pretty_printed_name: "builtins._T1"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "__iter2"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T2]"
          args {
            pretty_printed_name: "builtins._T2"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "__iter3"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T3]"
          args {
            pretty_printed_name: "builtins._T3"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "__iter4"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T4]"
          args {
            pretty_printed_name: "builtins._T4"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__new__"
      fully_qualified_name: "builtins.zip.__new__"
      return_annotation {
        pretty_printed_name: "builtins.zip[Tuple[builtins._T1,builtins._T2,builtins._T3,builtins._T4,builtins._T5]]"
        args {
          pretty_printed_name: "Tuple[builtins._T1,builtins._T2,builtins._T3,builtins._T4,builtins._T5]"
          kind: TUPLE
          args {
            pretty_printed_name: "builtins._T1"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "builtins._T2"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "builtins._T3"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "builtins._T4"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "builtins._T5"
            kind: TYPE_VAR
          }
        }
        fully_qualified_name: "builtins.zip"
      }
      parameters {
        name: "cls"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Type[builtins.zip[builtins._T_co]]"
          kind: TYPE
          args {
            pretty_printed_name: "builtins.zip[builtins._T_co]"
            args {
              pretty_printed_name: "builtins._T_co"
              kind: TYPE_VAR
            }
            fully_qualified_name: "builtins.zip"
          }
        }
      }
      parameters {
        name: "__iter1"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T1]"
          args {
            pretty_printed_name: "builtins._T1"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "__iter2"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T2]"
          args {
            pretty_printed_name: "builtins._T2"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "__iter3"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T3]"
          args {
            pretty_printed_name: "builtins._T3"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "__iter4"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T4]"
          args {
            pretty_printed_name: "builtins._T4"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "__iter5"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T5]"
          args {
            pretty_printed_name: "builtins._T5"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__new__"
      fully_qualified_name: "builtins.zip.__new__"
      return_annotation {
        pretty_printed_name: "builtins.zip[Tuple[Any,Any]]"
        args {
          pretty_printed_name: "Tuple[Any,Any]"
          kind: TUPLE
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
        }
        fully_qualified_name: "builtins.zip"
      }
      parameters {
        name: "cls"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Type[builtins.zip[builtins._T_co]]"
          kind: TYPE
          args {
            pretty_printed_name: "builtins.zip[builtins._T_co]"
            args {
              pretty_printed_name: "builtins._T_co"
              kind: TYPE_VAR
            }
            fully_qualified_name: "builtins.zip"
          }
        }
      }
      parameters {
        name: "__iter1"
        type_annotation {
          pretty_printed_name: "typing.Iterable[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "__iter2"
        type_annotation {
          pretty_printed_name: "typing.Iterable[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "__iter3"
        type_annotation {
          pretty_printed_name: "typing.Iterable[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "__iter4"
        type_annotation {
          pretty_printed_name: "typing.Iterable[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "__iter5"
        type_annotation {
          pretty_printed_name: "typing.Iterable[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "__iter6"
        type_annotation {
          pretty_printed_name: "typing.Iterable[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "iterables"
        kind: VAR_POSITIONAL
        type_annotation {
          pretty_printed_name: "typing.Iterable[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
  }
  overloaded_methods {
    name: "__new__"
    fullname: "builtins.zip.__new__"
    definitions {
      name: "__new__"
      fully_qualified_name: "builtins.zip.__new__"
      return_annotation {
        pretty_printed_name: "builtins.zip[Tuple[builtins._T1]]"
        args {
          pretty_printed_name: "Tuple[builtins._T1]"
          kind: TUPLE
          args {
            pretty_printed_name: "builtins._T1"
            kind: TYPE_VAR
          }
        }
        fully_qualified_name: "builtins.zip"
      }
      parameters {
        name: "cls"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Type[builtins.zip[builtins._T_co]]"
          kind: TYPE
          args {
            pretty_printed_name: "builtins.zip[builtins._T_co]"
            args {
              pretty_printed_name: "builtins._T_co"
              kind: TYPE_VAR
            }
            fully_qualified_name: "builtins.zip"
          }
        }
      }
      parameters {
        name: "__iter1"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T1]"
          args {
            pretty_printed_name: "builtins._T1"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__new__"
      fully_qualified_name: "builtins.zip.__new__"
      return_annotation {
        pretty_printed_name: "builtins.zip[Tuple[builtins._T1,builtins._T2]]"
        args {
          pretty_printed_name: "Tuple[builtins._T1,builtins._T2]"
          kind: TUPLE
          args {
            pretty_printed_name: "builtins._T1"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "builtins._T2"
            kind: TYPE_VAR
          }
        }
        fully_qualified_name: "builtins.zip"
      }
      parameters {
        name: "cls"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Type[builtins.zip[builtins._T_co]]"
          kind: TYPE
          args {
            pretty_printed_name: "builtins.zip[builtins._T_co]"
            args {
              pretty_printed_name: "builtins._T_co"
              kind: TYPE_VAR
            }
            fully_qualified_name: "builtins.zip"
          }
        }
      }
      parameters {
        name: "__iter1"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T1]"
          args {
            pretty_printed_name: "builtins._T1"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "__iter2"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T2]"
          args {
            pretty_printed_name: "builtins._T2"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__new__"
      fully_qualified_name: "builtins.zip.__new__"
      return_annotation {
        pretty_printed_name: "builtins.zip[Tuple[builtins._T1,builtins._T2,builtins._T3]]"
        args {
          pretty_printed_name: "Tuple[builtins._T1,builtins._T2,builtins._T3]"
          kind: TUPLE
          args {
            pretty_printed_name: "builtins._T1"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "builtins._T2"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "builtins._T3"
            kind: TYPE_VAR
          }
        }
        fully_qualified_name: "builtins.zip"
      }
      parameters {
        name: "cls"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Type[builtins.zip[builtins._T_co]]"
          kind: TYPE
          args {
            pretty_printed_name: "builtins.zip[builtins._T_co]"
            args {
              pretty_printed_name: "builtins._T_co"
              kind: TYPE_VAR
            }
            fully_qualified_name: "builtins.zip"
          }
        }
      }
      parameters {
        name: "__iter1"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T1]"
          args {
            pretty_printed_name: "builtins._T1"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "__iter2"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T2]"
          args {
            pretty_printed_name: "builtins._T2"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "__iter3"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T3]"
          args {
            pretty_printed_name: "builtins._T3"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__new__"
      fully_qualified_name: "builtins.zip.__new__"
      return_annotation {
        pretty_printed_name: "builtins.zip[Tuple[builtins._T1,builtins._T2,builtins._T3,builtins._T4]]"
        args {
          pretty_printed_name: "Tuple[builtins._T1,builtins._T2,builtins._T3,builtins._T4]"
          kind: TUPLE
          args {
            pretty_printed_name: "builtins._T1"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "builtins._T2"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "builtins._T3"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "builtins._T4"
            kind: TYPE_VAR
          }
        }
        fully_qualified_name: "builtins.zip"
      }
      parameters {
        name: "cls"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Type[builtins.zip[builtins._T_co]]"
          kind: TYPE
          args {
            pretty_printed_name: "builtins.zip[builtins._T_co]"
            args {
              pretty_printed_name: "builtins._T_co"
              kind: TYPE_VAR
            }
            fully_qualified_name: "builtins.zip"
          }
        }
      }
      parameters {
        name: "__iter1"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T1]"
          args {
            pretty_printed_name: "builtins._T1"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "__iter2"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T2]"
          args {
            pretty_printed_name: "builtins._T2"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "__iter3"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T3]"
          args {
            pretty_printed_name: "builtins._T3"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "__iter4"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T4]"
          args {
            pretty_printed_name: "builtins._T4"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__new__"
      fully_qualified_name: "builtins.zip.__new__"
      return_annotation {
        pretty_printed_name: "builtins.zip[Tuple[builtins._T1,builtins._T2,builtins._T3,builtins._T4,builtins._T5]]"
        args {
          pretty_printed_name: "Tuple[builtins._T1,builtins._T2,builtins._T3,builtins._T4,builtins._T5]"
          kind: TUPLE
          args {
            pretty_printed_name: "builtins._T1"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "builtins._T2"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "builtins._T3"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "builtins._T4"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "builtins._T5"
            kind: TYPE_VAR
          }
        }
        fully_qualified_name: "builtins.zip"
      }
      parameters {
        name: "cls"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Type[builtins.zip[builtins._T_co]]"
          kind: TYPE
          args {
            pretty_printed_name: "builtins.zip[builtins._T_co]"
            args {
              pretty_printed_name: "builtins._T_co"
              kind: TYPE_VAR
            }
            fully_qualified_name: "builtins.zip"
          }
        }
      }
      parameters {
        name: "__iter1"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T1]"
          args {
            pretty_printed_name: "builtins._T1"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "__iter2"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T2]"
          args {
            pretty_printed_name: "builtins._T2"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "__iter3"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T3]"
          args {
            pretty_printed_name: "builtins._T3"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "__iter4"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T4]"
          args {
            pretty_printed_name: "builtins._T4"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "__iter5"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T5]"
          args {
            pretty_printed_name: "builtins._T5"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__new__"
      fully_qualified_name: "builtins.zip.__new__"
      return_annotation {
        pretty_printed_name: "builtins.zip[builtins.tuple[Any]]"
        args {
          pretty_printed_name: "builtins.tuple[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "builtins.tuple"
        }
        fully_qualified_name: "builtins.zip"
      }
      parameters {
        name: "cls"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Type[builtins.zip[builtins._T_co]]"
          kind: TYPE
          args {
            pretty_printed_name: "builtins.zip[builtins._T_co]"
            args {
              pretty_printed_name: "builtins._T_co"
              kind: TYPE_VAR
            }
            fully_qualified_name: "builtins.zip"
          }
        }
      }
      parameters {
        name: "__iter1"
        type_annotation {
          pretty_printed_name: "typing.Iterable[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "__iter2"
        type_annotation {
          pretty_printed_name: "typing.Iterable[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "__iter3"
        type_annotation {
          pretty_printed_name: "typing.Iterable[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "__iter4"
        type_annotation {
          pretty_printed_name: "typing.Iterable[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "__iter5"
        type_annotation {
          pretty_printed_name: "typing.Iterable[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "__iter6"
        type_annotation {
          pretty_printed_name: "typing.Iterable[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "iterables"
        kind: VAR_POSITIONAL
        type_annotation {
          pretty_printed_name: "typing.Iterable[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "39"
  }
  overloaded_methods {
    name: "__new__"
    fullname: "builtins.zip.__new__"
    definitions {
      name: "__new__"
      fully_qualified_name: "builtins.zip.__new__"
      return_annotation {
        pretty_printed_name: "builtins.zip[Tuple[builtins._T1]]"
        args {
          pretty_printed_name: "Tuple[builtins._T1]"
          kind: TUPLE
          args {
            pretty_printed_name: "builtins._T1"
            kind: TYPE_VAR
          }
        }
        fully_qualified_name: "builtins.zip"
      }
      parameters {
        name: "cls"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Type[builtins.zip[builtins._T_co]]"
          kind: TYPE
          args {
            pretty_printed_name: "builtins.zip[builtins._T_co]"
            args {
              pretty_printed_name: "builtins._T_co"
              kind: TYPE_VAR
            }
            fully_qualified_name: "builtins.zip"
          }
        }
      }
      parameters {
        name: "__iter1"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T1]"
          args {
            pretty_printed_name: "builtins._T1"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "strict"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__new__"
      fully_qualified_name: "builtins.zip.__new__"
      return_annotation {
        pretty_printed_name: "builtins.zip[Tuple[builtins._T1,builtins._T2]]"
        args {
          pretty_printed_name: "Tuple[builtins._T1,builtins._T2]"
          kind: TUPLE
          args {
            pretty_printed_name: "builtins._T1"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "builtins._T2"
            kind: TYPE_VAR
          }
        }
        fully_qualified_name: "builtins.zip"
      }
      parameters {
        name: "cls"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Type[builtins.zip[builtins._T_co]]"
          kind: TYPE
          args {
            pretty_printed_name: "builtins.zip[builtins._T_co]"
            args {
              pretty_printed_name: "builtins._T_co"
              kind: TYPE_VAR
            }
            fully_qualified_name: "builtins.zip"
          }
        }
      }
      parameters {
        name: "__iter1"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T1]"
          args {
            pretty_printed_name: "builtins._T1"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "__iter2"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T2]"
          args {
            pretty_printed_name: "builtins._T2"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "strict"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__new__"
      fully_qualified_name: "builtins.zip.__new__"
      return_annotation {
        pretty_printed_name: "builtins.zip[Tuple[builtins._T1,builtins._T2,builtins._T3]]"
        args {
          pretty_printed_name: "Tuple[builtins._T1,builtins._T2,builtins._T3]"
          kind: TUPLE
          args {
            pretty_printed_name: "builtins._T1"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "builtins._T2"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "builtins._T3"
            kind: TYPE_VAR
          }
        }
        fully_qualified_name: "builtins.zip"
      }
      parameters {
        name: "cls"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Type[builtins.zip[builtins._T_co]]"
          kind: TYPE
          args {
            pretty_printed_name: "builtins.zip[builtins._T_co]"
            args {
              pretty_printed_name: "builtins._T_co"
              kind: TYPE_VAR
            }
            fully_qualified_name: "builtins.zip"
          }
        }
      }
      parameters {
        name: "__iter1"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T1]"
          args {
            pretty_printed_name: "builtins._T1"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "__iter2"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T2]"
          args {
            pretty_printed_name: "builtins._T2"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "__iter3"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T3]"
          args {
            pretty_printed_name: "builtins._T3"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "strict"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__new__"
      fully_qualified_name: "builtins.zip.__new__"
      return_annotation {
        pretty_printed_name: "builtins.zip[Tuple[builtins._T1,builtins._T2,builtins._T3,builtins._T4]]"
        args {
          pretty_printed_name: "Tuple[builtins._T1,builtins._T2,builtins._T3,builtins._T4]"
          kind: TUPLE
          args {
            pretty_printed_name: "builtins._T1"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "builtins._T2"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "builtins._T3"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "builtins._T4"
            kind: TYPE_VAR
          }
        }
        fully_qualified_name: "builtins.zip"
      }
      parameters {
        name: "cls"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Type[builtins.zip[builtins._T_co]]"
          kind: TYPE
          args {
            pretty_printed_name: "builtins.zip[builtins._T_co]"
            args {
              pretty_printed_name: "builtins._T_co"
              kind: TYPE_VAR
            }
            fully_qualified_name: "builtins.zip"
          }
        }
      }
      parameters {
        name: "__iter1"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T1]"
          args {
            pretty_printed_name: "builtins._T1"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "__iter2"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T2]"
          args {
            pretty_printed_name: "builtins._T2"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "__iter3"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T3]"
          args {
            pretty_printed_name: "builtins._T3"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "__iter4"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T4]"
          args {
            pretty_printed_name: "builtins._T4"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "strict"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__new__"
      fully_qualified_name: "builtins.zip.__new__"
      return_annotation {
        pretty_printed_name: "builtins.zip[Tuple[builtins._T1,builtins._T2,builtins._T3,builtins._T4,builtins._T5]]"
        args {
          pretty_printed_name: "Tuple[builtins._T1,builtins._T2,builtins._T3,builtins._T4,builtins._T5]"
          kind: TUPLE
          args {
            pretty_printed_name: "builtins._T1"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "builtins._T2"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "builtins._T3"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "builtins._T4"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "builtins._T5"
            kind: TYPE_VAR
          }
        }
        fully_qualified_name: "builtins.zip"
      }
      parameters {
        name: "cls"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Type[builtins.zip[builtins._T_co]]"
          kind: TYPE
          args {
            pretty_printed_name: "builtins.zip[builtins._T_co]"
            args {
              pretty_printed_name: "builtins._T_co"
              kind: TYPE_VAR
            }
            fully_qualified_name: "builtins.zip"
          }
        }
      }
      parameters {
        name: "__iter1"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T1]"
          args {
            pretty_printed_name: "builtins._T1"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "__iter2"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T2]"
          args {
            pretty_printed_name: "builtins._T2"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "__iter3"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T3]"
          args {
            pretty_printed_name: "builtins._T3"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "__iter4"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T4]"
          args {
            pretty_printed_name: "builtins._T4"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "__iter5"
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins._T5]"
          args {
            pretty_printed_name: "builtins._T5"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "strict"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__new__"
      fully_qualified_name: "builtins.zip.__new__"
      return_annotation {
        pretty_printed_name: "builtins.zip[builtins.tuple[Any]]"
        args {
          pretty_printed_name: "builtins.tuple[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "builtins.tuple"
        }
        fully_qualified_name: "builtins.zip"
      }
      parameters {
        name: "cls"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Type[builtins.zip[builtins._T_co]]"
          kind: TYPE
          args {
            pretty_printed_name: "builtins.zip[builtins._T_co]"
            args {
              pretty_printed_name: "builtins._T_co"
              kind: TYPE_VAR
            }
            fully_qualified_name: "builtins.zip"
          }
        }
      }
      parameters {
        name: "__iter1"
        type_annotation {
          pretty_printed_name: "typing.Iterable[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "__iter2"
        type_annotation {
          pretty_printed_name: "typing.Iterable[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "__iter3"
        type_annotation {
          pretty_printed_name: "typing.Iterable[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "__iter4"
        type_annotation {
          pretty_printed_name: "typing.Iterable[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "__iter5"
        type_annotation {
          pretty_printed_name: "typing.Iterable[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "__iter6"
        type_annotation {
          pretty_printed_name: "typing.Iterable[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "iterables"
        kind: VAR_POSITIONAL
        type_annotation {
          pretty_printed_name: "typing.Iterable[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "strict"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "310"
  }
  is_generic: true
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "ellipsis"
  fully_qualified_name: "builtins.ellipsis"
  super_classes: "builtins.object"
  has_decorators: true
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "BaseException"
  fully_qualified_name: "builtins.BaseException"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "builtins.BaseException.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.BaseException"
        fully_qualified_name: "builtins.BaseException"
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__setstate__"
    fully_qualified_name: "builtins.BaseException.__setstate__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.BaseException"
        fully_qualified_name: "builtins.BaseException"
      }
    }
    parameters {
      name: "__state"
      type_annotation {
        pretty_printed_name: "Union[builtins.dict[builtins.str,Any],None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.dict[builtins.str,Any]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "builtins.dict"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "with_traceback"
    fully_qualified_name: "builtins.BaseException.with_traceback"
    return_annotation {
      pretty_printed_name: "UnboundType[Self]"
      kind: UNBOUND
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.BaseException"
        fully_qualified_name: "builtins.BaseException"
      }
    }
    parameters {
      name: "__tb"
      type_annotation {
        pretty_printed_name: "Union[types.TracebackType,None]"
        kind: UNION
        args {
          pretty_printed_name: "types.TracebackType"
          fully_qualified_name: "types.TracebackType"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "args"
    fully_qualified_name: "builtins.BaseException.args"
    type_annotation {
      pretty_printed_name: "Tuple[Any,Any]"
      kind: TUPLE
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
  }
  attributes {
    name: "args"
    fully_qualified_name: "builtins.BaseException.args"
    type_annotation {
      pretty_printed_name: "builtins.tuple[Any]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "builtins.tuple"
    }
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "__cause__"
    fully_qualified_name: "builtins.BaseException.__cause__"
    type_annotation {
      pretty_printed_name: "Union[builtins.BaseException,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.BaseException"
        fully_qualified_name: "builtins.BaseException"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "__context__"
    fully_qualified_name: "builtins.BaseException.__context__"
    type_annotation {
      pretty_printed_name: "Union[builtins.BaseException,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.BaseException"
        fully_qualified_name: "builtins.BaseException"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "__suppress_context__"
    fully_qualified_name: "builtins.BaseException.__suppress_context__"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "__traceback__"
    fully_qualified_name: "builtins.BaseException.__traceback__"
    type_annotation {
      pretty_printed_name: "Union[types.TracebackType,None]"
      kind: UNION
      args {
        pretty_printed_name: "types.TracebackType"
        fully_qualified_name: "types.TracebackType"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "GeneratorExit"
  fully_qualified_name: "builtins.GeneratorExit"
  super_classes: "builtins.BaseException"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "KeyboardInterrupt"
  fully_qualified_name: "builtins.KeyboardInterrupt"
  super_classes: "builtins.BaseException"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "SystemExit"
  fully_qualified_name: "builtins.SystemExit"
  super_classes: "builtins.BaseException"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "code"
    fully_qualified_name: "builtins.SystemExit.code"
    type_annotation {
      pretty_printed_name: "UnboundType[sys._ExitCode]"
      kind: UNBOUND
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "Exception"
  fully_qualified_name: "builtins.Exception"
  super_classes: "builtins.BaseException"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "StopIteration"
  fully_qualified_name: "builtins.StopIteration"
  super_classes: "builtins.Exception"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "value"
    fully_qualified_name: "builtins.StopIteration.value"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "OSError"
  fully_qualified_name: "builtins.OSError"
  super_classes: "builtins.Exception"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "errno"
    fully_qualified_name: "builtins.OSError.errno"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "strerror"
    fully_qualified_name: "builtins.OSError.strerror"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "filename"
    fully_qualified_name: "builtins.OSError.filename"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "filename2"
    fully_qualified_name: "builtins.OSError.filename2"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "ArithmeticError"
  fully_qualified_name: "builtins.ArithmeticError"
  super_classes: "builtins.Exception"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "AssertionError"
  fully_qualified_name: "builtins.AssertionError"
  super_classes: "builtins.Exception"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "AttributeError"
  fully_qualified_name: "builtins.AttributeError"
  super_classes: "builtins.Exception"
  methods {
    name: "__init__"
    fully_qualified_name: "builtins.AttributeError.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.AttributeError"
        fully_qualified_name: "builtins.AttributeError"
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
    parameters {
      name: "name"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "obj"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
      has_default: true
    }
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "name"
    fully_qualified_name: "builtins.AttributeError.name"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "310"
  }
  attributes {
    name: "obj"
    fully_qualified_name: "builtins.AttributeError.obj"
    type_annotation {
      pretty_printed_name: "builtins.object"
      fully_qualified_name: "builtins.object"
    }
    valid_for: "310"
  }
}
classes {
  name: "BufferError"
  fully_qualified_name: "builtins.BufferError"
  super_classes: "builtins.Exception"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "EOFError"
  fully_qualified_name: "builtins.EOFError"
  super_classes: "builtins.Exception"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "ImportError"
  fully_qualified_name: "builtins.ImportError"
  super_classes: "builtins.Exception"
  methods {
    name: "__init__"
    fully_qualified_name: "builtins.ImportError.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.ImportError"
        fully_qualified_name: "builtins.ImportError"
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
    parameters {
      name: "name"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "path"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "name"
    fully_qualified_name: "builtins.ImportError.name"
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "path"
    fully_qualified_name: "builtins.ImportError.path"
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "msg"
    fully_qualified_name: "builtins.ImportError.msg"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "LookupError"
  fully_qualified_name: "builtins.LookupError"
  super_classes: "builtins.Exception"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "MemoryError"
  fully_qualified_name: "builtins.MemoryError"
  super_classes: "builtins.Exception"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "NameError"
  fully_qualified_name: "builtins.NameError"
  super_classes: "builtins.Exception"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "name"
    fully_qualified_name: "builtins.NameError.name"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "310"
  }
}
classes {
  name: "ReferenceError"
  fully_qualified_name: "builtins.ReferenceError"
  super_classes: "builtins.Exception"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "RuntimeError"
  fully_qualified_name: "builtins.RuntimeError"
  super_classes: "builtins.Exception"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "StopAsyncIteration"
  fully_qualified_name: "builtins.StopAsyncIteration"
  super_classes: "builtins.Exception"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "value"
    fully_qualified_name: "builtins.StopAsyncIteration.value"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "SyntaxError"
  fully_qualified_name: "builtins.SyntaxError"
  super_classes: "builtins.Exception"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "msg"
    fully_qualified_name: "builtins.SyntaxError.msg"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "lineno"
    fully_qualified_name: "builtins.SyntaxError.lineno"
    type_annotation {
      pretty_printed_name: "Union[builtins.int,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "offset"
    fully_qualified_name: "builtins.SyntaxError.offset"
    type_annotation {
      pretty_printed_name: "Union[builtins.int,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "text"
    fully_qualified_name: "builtins.SyntaxError.text"
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "filename"
    fully_qualified_name: "builtins.SyntaxError.filename"
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "end_lineno"
    fully_qualified_name: "builtins.SyntaxError.end_lineno"
    type_annotation {
      pretty_printed_name: "Union[builtins.int,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "310"
  }
  attributes {
    name: "end_offset"
    fully_qualified_name: "builtins.SyntaxError.end_offset"
    type_annotation {
      pretty_printed_name: "Union[builtins.int,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "310"
  }
}
classes {
  name: "SystemError"
  fully_qualified_name: "builtins.SystemError"
  super_classes: "builtins.Exception"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "TypeError"
  fully_qualified_name: "builtins.TypeError"
  super_classes: "builtins.Exception"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "ValueError"
  fully_qualified_name: "builtins.ValueError"
  super_classes: "builtins.Exception"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "FloatingPointError"
  fully_qualified_name: "builtins.FloatingPointError"
  super_classes: "builtins.ArithmeticError"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "OverflowError"
  fully_qualified_name: "builtins.OverflowError"
  super_classes: "builtins.ArithmeticError"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "ZeroDivisionError"
  fully_qualified_name: "builtins.ZeroDivisionError"
  super_classes: "builtins.ArithmeticError"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "ModuleNotFoundError"
  fully_qualified_name: "builtins.ModuleNotFoundError"
  super_classes: "builtins.ImportError"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "IndexError"
  fully_qualified_name: "builtins.IndexError"
  super_classes: "builtins.LookupError"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "KeyError"
  fully_qualified_name: "builtins.KeyError"
  super_classes: "builtins.LookupError"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "UnboundLocalError"
  fully_qualified_name: "builtins.UnboundLocalError"
  super_classes: "builtins.NameError"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "BlockingIOError"
  fully_qualified_name: "builtins.BlockingIOError"
  super_classes: "builtins.OSError"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "characters_written"
    fully_qualified_name: "builtins.BlockingIOError.characters_written"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "ChildProcessError"
  fully_qualified_name: "builtins.ChildProcessError"
  super_classes: "builtins.OSError"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "ConnectionError"
  fully_qualified_name: "builtins.ConnectionError"
  super_classes: "builtins.OSError"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "BrokenPipeError"
  fully_qualified_name: "builtins.BrokenPipeError"
  super_classes: "builtins.ConnectionError"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "ConnectionAbortedError"
  fully_qualified_name: "builtins.ConnectionAbortedError"
  super_classes: "builtins.ConnectionError"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "ConnectionRefusedError"
  fully_qualified_name: "builtins.ConnectionRefusedError"
  super_classes: "builtins.ConnectionError"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "ConnectionResetError"
  fully_qualified_name: "builtins.ConnectionResetError"
  super_classes: "builtins.ConnectionError"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "FileExistsError"
  fully_qualified_name: "builtins.FileExistsError"
  super_classes: "builtins.OSError"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "FileNotFoundError"
  fully_qualified_name: "builtins.FileNotFoundError"
  super_classes: "builtins.OSError"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "InterruptedError"
  fully_qualified_name: "builtins.InterruptedError"
  super_classes: "builtins.OSError"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "IsADirectoryError"
  fully_qualified_name: "builtins.IsADirectoryError"
  super_classes: "builtins.OSError"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "NotADirectoryError"
  fully_qualified_name: "builtins.NotADirectoryError"
  super_classes: "builtins.OSError"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "PermissionError"
  fully_qualified_name: "builtins.PermissionError"
  super_classes: "builtins.OSError"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "ProcessLookupError"
  fully_qualified_name: "builtins.ProcessLookupError"
  super_classes: "builtins.OSError"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "TimeoutError"
  fully_qualified_name: "builtins.TimeoutError"
  super_classes: "builtins.OSError"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "NotImplementedError"
  fully_qualified_name: "builtins.NotImplementedError"
  super_classes: "builtins.RuntimeError"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "RecursionError"
  fully_qualified_name: "builtins.RecursionError"
  super_classes: "builtins.RuntimeError"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "IndentationError"
  fully_qualified_name: "builtins.IndentationError"
  super_classes: "builtins.SyntaxError"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "TabError"
  fully_qualified_name: "builtins.TabError"
  super_classes: "builtins.IndentationError"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "UnicodeError"
  fully_qualified_name: "builtins.UnicodeError"
  super_classes: "builtins.ValueError"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "UnicodeDecodeError"
  fully_qualified_name: "builtins.UnicodeDecodeError"
  super_classes: "builtins.UnicodeError"
  methods {
    name: "__init__"
    fully_qualified_name: "builtins.UnicodeDecodeError.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.UnicodeDecodeError"
        fully_qualified_name: "builtins.UnicodeDecodeError"
      }
    }
    parameters {
      name: "__encoding"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "__object"
      type_annotation {
        pretty_printed_name: "UnboundType[ReadableBuffer]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "__start"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "__end"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "__reason"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "encoding"
    fully_qualified_name: "builtins.UnicodeDecodeError.encoding"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "object"
    fully_qualified_name: "builtins.UnicodeDecodeError.object"
    type_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "start"
    fully_qualified_name: "builtins.UnicodeDecodeError.start"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "end"
    fully_qualified_name: "builtins.UnicodeDecodeError.end"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "reason"
    fully_qualified_name: "builtins.UnicodeDecodeError.reason"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "UnicodeEncodeError"
  fully_qualified_name: "builtins.UnicodeEncodeError"
  super_classes: "builtins.UnicodeError"
  methods {
    name: "__init__"
    fully_qualified_name: "builtins.UnicodeEncodeError.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.UnicodeEncodeError"
        fully_qualified_name: "builtins.UnicodeEncodeError"
      }
    }
    parameters {
      name: "__encoding"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "__object"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "__start"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "__end"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "__reason"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "encoding"
    fully_qualified_name: "builtins.UnicodeEncodeError.encoding"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "object"
    fully_qualified_name: "builtins.UnicodeEncodeError.object"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "start"
    fully_qualified_name: "builtins.UnicodeEncodeError.start"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "end"
    fully_qualified_name: "builtins.UnicodeEncodeError.end"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "reason"
    fully_qualified_name: "builtins.UnicodeEncodeError.reason"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "UnicodeTranslateError"
  fully_qualified_name: "builtins.UnicodeTranslateError"
  super_classes: "builtins.UnicodeError"
  methods {
    name: "__init__"
    fully_qualified_name: "builtins.UnicodeTranslateError.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.UnicodeTranslateError"
        fully_qualified_name: "builtins.UnicodeTranslateError"
      }
    }
    parameters {
      name: "__object"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "__start"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "__end"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "__reason"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "encoding"
    fully_qualified_name: "builtins.UnicodeTranslateError.encoding"
    type_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "object"
    fully_qualified_name: "builtins.UnicodeTranslateError.object"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "start"
    fully_qualified_name: "builtins.UnicodeTranslateError.start"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "end"
    fully_qualified_name: "builtins.UnicodeTranslateError.end"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "reason"
    fully_qualified_name: "builtins.UnicodeTranslateError.reason"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "Warning"
  fully_qualified_name: "builtins.Warning"
  super_classes: "builtins.Exception"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "UserWarning"
  fully_qualified_name: "builtins.UserWarning"
  super_classes: "builtins.Warning"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "DeprecationWarning"
  fully_qualified_name: "builtins.DeprecationWarning"
  super_classes: "builtins.Warning"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "SyntaxWarning"
  fully_qualified_name: "builtins.SyntaxWarning"
  super_classes: "builtins.Warning"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "RuntimeWarning"
  fully_qualified_name: "builtins.RuntimeWarning"
  super_classes: "builtins.Warning"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "FutureWarning"
  fully_qualified_name: "builtins.FutureWarning"
  super_classes: "builtins.Warning"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "PendingDeprecationWarning"
  fully_qualified_name: "builtins.PendingDeprecationWarning"
  super_classes: "builtins.Warning"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "ImportWarning"
  fully_qualified_name: "builtins.ImportWarning"
  super_classes: "builtins.Warning"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "UnicodeWarning"
  fully_qualified_name: "builtins.UnicodeWarning"
  super_classes: "builtins.Warning"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "BytesWarning"
  fully_qualified_name: "builtins.BytesWarning"
  super_classes: "builtins.Warning"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "ResourceWarning"
  fully_qualified_name: "builtins.ResourceWarning"
  super_classes: "builtins.Warning"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "_SupportsSynchronousAnext"
  fully_qualified_name: "builtins._SupportsSynchronousAnext"
  super_classes: "builtins.object"
  methods {
    name: "__anext__"
    fully_qualified_name: "builtins._SupportsSynchronousAnext.__anext__"
    return_annotation {
      pretty_printed_name: "builtins._AwaitableT_co"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins._SupportsSynchronousAnext[builtins._AwaitableT_co]"
        args {
          pretty_printed_name: "builtins._AwaitableT_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins._SupportsSynchronousAnext"
      }
    }
    valid_for: "310"
  }
  is_generic: true
  is_protocol: true
  valid_for: "310"
}
classes {
  name: "EncodingWarning"
  fully_qualified_name: "builtins.EncodingWarning"
  super_classes: "builtins.Warning"
  valid_for: "310"
}
functions {
  name: "abs"
  fully_qualified_name: "builtins.abs"
  return_annotation {
    pretty_printed_name: "builtins._T"
    kind: TYPE_VAR
  }
  parameters {
    name: "__x"
    type_annotation {
      pretty_printed_name: "typing.SupportsAbs[builtins._T]"
      args {
        pretty_printed_name: "builtins._T"
        kind: TYPE_VAR
      }
      fully_qualified_name: "typing.SupportsAbs"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "all"
  fully_qualified_name: "builtins.all"
  return_annotation {
    pretty_printed_name: "builtins.bool"
    fully_qualified_name: "builtins.bool"
  }
  parameters {
    name: "__iterable"
    type_annotation {
      pretty_printed_name: "typing.Iterable[builtins.object]"
      args {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
      fully_qualified_name: "typing.Iterable"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "any"
  fully_qualified_name: "builtins.any"
  return_annotation {
    pretty_printed_name: "builtins.bool"
    fully_qualified_name: "builtins.bool"
  }
  parameters {
    name: "__iterable"
    type_annotation {
      pretty_printed_name: "typing.Iterable[builtins.object]"
      args {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
      fully_qualified_name: "typing.Iterable"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "ascii"
  fully_qualified_name: "builtins.ascii"
  return_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
  parameters {
    name: "__obj"
    type_annotation {
      pretty_printed_name: "builtins.object"
      fully_qualified_name: "builtins.object"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "bin"
  fully_qualified_name: "builtins.bin"
  return_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
  parameters {
    name: "__number"
    type_annotation {
      pretty_printed_name: "Union[builtins.int,typing_extensions.SupportsIndex]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "typing_extensions.SupportsIndex"
        fully_qualified_name: "typing_extensions.SupportsIndex"
      }
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "breakpoint"
  fully_qualified_name: "builtins.breakpoint"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "args"
    kind: VAR_POSITIONAL
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  parameters {
    name: "kws"
    kind: VAR_KEYWORD
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "callable"
  fully_qualified_name: "builtins.callable"
  return_annotation {
    pretty_printed_name: "builtins.bool"
    fully_qualified_name: "builtins.bool"
  }
  parameters {
    name: "__obj"
    type_annotation {
      pretty_printed_name: "builtins.object"
      fully_qualified_name: "builtins.object"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "chr"
  fully_qualified_name: "builtins.chr"
  return_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
  parameters {
    name: "__i"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "copyright"
  fully_qualified_name: "builtins.copyright"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "credits"
  fully_qualified_name: "builtins.credits"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "delattr"
  fully_qualified_name: "builtins.delattr"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "__obj"
    type_annotation {
      pretty_printed_name: "builtins.object"
      fully_qualified_name: "builtins.object"
    }
  }
  parameters {
    name: "__name"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "dir"
  fully_qualified_name: "builtins.dir"
  return_annotation {
    pretty_printed_name: "builtins.list[builtins.str]"
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    fully_qualified_name: "builtins.list"
  }
  parameters {
    name: "__o"
    type_annotation {
      pretty_printed_name: "builtins.object"
      fully_qualified_name: "builtins.object"
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "eval"
  fully_qualified_name: "builtins.eval"
  return_annotation {
    pretty_printed_name: "Any"
    kind: ANY
  }
  parameters {
    name: "__source"
    type_annotation {
      pretty_printed_name: "Union[builtins.str,UnboundType[ReadableBuffer],types.CodeType]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "UnboundType[ReadableBuffer]"
        kind: UNBOUND
      }
      args {
        pretty_printed_name: "types.CodeType"
        fully_qualified_name: "types.CodeType"
      }
    }
  }
  parameters {
    name: "__globals"
    type_annotation {
      pretty_printed_name: "Union[builtins.dict[builtins.str,Any],None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.dict[builtins.str,Any]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "builtins.dict"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "__locals"
    type_annotation {
      pretty_printed_name: "Union[typing.Mapping[builtins.str,builtins.object],None]"
      kind: UNION
      args {
        pretty_printed_name: "typing.Mapping[builtins.str,builtins.object]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.object"
          fully_qualified_name: "builtins.object"
        }
        fully_qualified_name: "typing.Mapping"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "exec"
  fully_qualified_name: "builtins.exec"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "__source"
    type_annotation {
      pretty_printed_name: "Union[builtins.str,UnboundType[ReadableBuffer],types.CodeType]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "UnboundType[ReadableBuffer]"
        kind: UNBOUND
      }
      args {
        pretty_printed_name: "types.CodeType"
        fully_qualified_name: "types.CodeType"
      }
    }
  }
  parameters {
    name: "__globals"
    type_annotation {
      pretty_printed_name: "Union[builtins.dict[builtins.str,Any],None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.dict[builtins.str,Any]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "builtins.dict"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "__locals"
    type_annotation {
      pretty_printed_name: "Union[typing.Mapping[builtins.str,builtins.object],None]"
      kind: UNION
      args {
        pretty_printed_name: "typing.Mapping[builtins.str,builtins.object]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.object"
          fully_qualified_name: "builtins.object"
        }
        fully_qualified_name: "typing.Mapping"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "exit"
  fully_qualified_name: "builtins.exit"
  return_annotation {
    pretty_printed_name: "NoReturn"
    kind: UNINHABITED
  }
  parameters {
    name: "code"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[UnboundType[sys._ExitCode],None]"
      kind: UNION
      args {
        pretty_printed_name: "UnboundType[sys._ExitCode]"
        kind: UNBOUND
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "format"
  fully_qualified_name: "builtins.format"
  return_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
  parameters {
    name: "__value"
    type_annotation {
      pretty_printed_name: "builtins.object"
      fully_qualified_name: "builtins.object"
    }
  }
  parameters {
    name: "__format_spec"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "globals"
  fully_qualified_name: "builtins.globals"
  return_annotation {
    pretty_printed_name: "builtins.dict[builtins.str,Any]"
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    args {
      pretty_printed_name: "Any"
      kind: ANY
    }
    fully_qualified_name: "builtins.dict"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "hasattr"
  fully_qualified_name: "builtins.hasattr"
  return_annotation {
    pretty_printed_name: "builtins.bool"
    fully_qualified_name: "builtins.bool"
  }
  parameters {
    name: "__obj"
    type_annotation {
      pretty_printed_name: "builtins.object"
      fully_qualified_name: "builtins.object"
    }
  }
  parameters {
    name: "__name"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "hash"
  fully_qualified_name: "builtins.hash"
  return_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
  parameters {
    name: "__obj"
    type_annotation {
      pretty_printed_name: "builtins.object"
      fully_qualified_name: "builtins.object"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "help"
  fully_qualified_name: "builtins.help"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "request"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.object"
      fully_qualified_name: "builtins.object"
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "hex"
  fully_qualified_name: "builtins.hex"
  return_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
  parameters {
    name: "__number"
    type_annotation {
      pretty_printed_name: "Union[builtins.int,typing_extensions.SupportsIndex]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "typing_extensions.SupportsIndex"
        fully_qualified_name: "typing_extensions.SupportsIndex"
      }
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "id"
  fully_qualified_name: "builtins.id"
  return_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
  parameters {
    name: "__obj"
    type_annotation {
      pretty_printed_name: "builtins.object"
      fully_qualified_name: "builtins.object"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "input"
  fully_qualified_name: "builtins.input"
  return_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
  parameters {
    name: "__prompt"
    type_annotation {
      pretty_printed_name: "builtins.object"
      fully_qualified_name: "builtins.object"
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "isinstance"
  fully_qualified_name: "builtins.isinstance"
  return_annotation {
    pretty_printed_name: "builtins.bool"
    fully_qualified_name: "builtins.bool"
  }
  parameters {
    name: "__obj"
    type_annotation {
      pretty_printed_name: "builtins.object"
      fully_qualified_name: "builtins.object"
    }
  }
  parameters {
    name: "__class_or_tuple"
    type_annotation {
      pretty_printed_name: "UnboundType[_ClassInfo]"
      kind: UNBOUND
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "issubclass"
  fully_qualified_name: "builtins.issubclass"
  return_annotation {
    pretty_printed_name: "builtins.bool"
    fully_qualified_name: "builtins.bool"
  }
  parameters {
    name: "__cls"
    type_annotation {
      pretty_printed_name: "builtins.type"
      fully_qualified_name: "builtins.type"
    }
  }
  parameters {
    name: "__class_or_tuple"
    type_annotation {
      pretty_printed_name: "UnboundType[_ClassInfo]"
      kind: UNBOUND
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "len"
  fully_qualified_name: "builtins.len"
  return_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
  parameters {
    name: "__obj"
    type_annotation {
      pretty_printed_name: "typing.Sized"
      fully_qualified_name: "typing.Sized"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "license"
  fully_qualified_name: "builtins.license"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "locals"
  fully_qualified_name: "builtins.locals"
  return_annotation {
    pretty_printed_name: "builtins.dict[builtins.str,Any]"
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    args {
      pretty_printed_name: "Any"
      kind: ANY
    }
    fully_qualified_name: "builtins.dict"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "oct"
  fully_qualified_name: "builtins.oct"
  return_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
  parameters {
    name: "__number"
    type_annotation {
      pretty_printed_name: "Union[builtins.int,typing_extensions.SupportsIndex]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "typing_extensions.SupportsIndex"
        fully_qualified_name: "typing_extensions.SupportsIndex"
      }
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "ord"
  fully_qualified_name: "builtins.ord"
  return_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
  parameters {
    name: "__c"
    type_annotation {
      pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.bytearray]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
      args {
        pretty_printed_name: "builtins.bytearray"
        fully_qualified_name: "builtins.bytearray"
      }
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "quit"
  fully_qualified_name: "builtins.quit"
  return_annotation {
    pretty_printed_name: "NoReturn"
    kind: UNINHABITED
  }
  parameters {
    name: "code"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[UnboundType[sys._ExitCode],None]"
      kind: UNION
      args {
        pretty_printed_name: "UnboundType[sys._ExitCode]"
        kind: UNBOUND
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "repr"
  fully_qualified_name: "builtins.repr"
  return_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
  parameters {
    name: "__obj"
    type_annotation {
      pretty_printed_name: "builtins.object"
      fully_qualified_name: "builtins.object"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "setattr"
  fully_qualified_name: "builtins.setattr"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "__obj"
    type_annotation {
      pretty_printed_name: "builtins.object"
      fully_qualified_name: "builtins.object"
    }
  }
  parameters {
    name: "__name"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  parameters {
    name: "__value"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "__import__"
  fully_qualified_name: "builtins.__import__"
  return_annotation {
    pretty_printed_name: "types.ModuleType"
    fully_qualified_name: "types.ModuleType"
  }
  parameters {
    name: "name"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  parameters {
    name: "globals"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[typing.Mapping[builtins.str,builtins.object],None]"
      kind: UNION
      args {
        pretty_printed_name: "typing.Mapping[builtins.str,builtins.object]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.object"
          fully_qualified_name: "builtins.object"
        }
        fully_qualified_name: "typing.Mapping"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "locals"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[typing.Mapping[builtins.str,builtins.object],None]"
      kind: UNION
      args {
        pretty_printed_name: "typing.Mapping[builtins.str,builtins.object]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.object"
          fully_qualified_name: "builtins.object"
        }
        fully_qualified_name: "typing.Mapping"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "fromlist"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "typing.Sequence[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "typing.Sequence"
    }
    has_default: true
  }
  parameters {
    name: "level"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "__build_class__"
  fully_qualified_name: "builtins.__build_class__"
  return_annotation {
    pretty_printed_name: "Any"
    kind: ANY
  }
  parameters {
    name: "__func"
    type_annotation {
      pretty_printed_name: "CallableType[builtins.function]"
      kind: CALLABLE
      args {
        pretty_printed_name: "builtins.function"
        fully_qualified_name: "builtins.function"
      }
    }
  }
  parameters {
    name: "__name"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  parameters {
    name: "bases"
    kind: VAR_POSITIONAL
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  parameters {
    name: "metaclass"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    has_default: true
  }
  parameters {
    name: "kwds"
    kind: VAR_KEYWORD
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "aiter"
  fully_qualified_name: "builtins.aiter"
  return_annotation {
    pretty_printed_name: "builtins._SupportsAnextT"
    kind: TYPE_VAR
  }
  parameters {
    name: "__async_iterable"
    type_annotation {
      pretty_printed_name: "_typeshed.SupportsAiter[builtins._SupportsAnextT]"
      args {
        pretty_printed_name: "builtins._SupportsAnextT"
        kind: TYPE_VAR
      }
      fully_qualified_name: "_typeshed.SupportsAiter"
    }
  }
  valid_for: "310"
}
overloaded_functions {
  name: "compile"
  fullname: "builtins.compile"
  definitions {
    name: "compile"
    fully_qualified_name: "builtins.compile"
    return_annotation {
      pretty_printed_name: "types.CodeType"
      fully_qualified_name: "types.CodeType"
    }
    parameters {
      name: "source"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,UnboundType[ReadableBuffer],_ast.Module,_ast.Expression,_ast.Interactive]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "UnboundType[ReadableBuffer]"
          kind: UNBOUND
        }
        args {
          pretty_printed_name: "_ast.Module"
          fully_qualified_name: "_ast.Module"
        }
        args {
          pretty_printed_name: "_ast.Expression"
          fully_qualified_name: "_ast.Expression"
        }
        args {
          pretty_printed_name: "_ast.Interactive"
          fully_qualified_name: "_ast.Interactive"
        }
      }
    }
    parameters {
      name: "filename"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,UnboundType[ReadableBuffer],builtins._PathLike[Any]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "UnboundType[ReadableBuffer]"
          kind: UNBOUND
        }
        args {
          pretty_printed_name: "builtins._PathLike[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "builtins._PathLike"
        }
      }
    }
    parameters {
      name: "mode"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "flags"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Literal[builtins.int]"
        kind: LITERAL
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
    }
    parameters {
      name: "dont_inherit"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    parameters {
      name: "optimize"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "compile"
    fully_qualified_name: "builtins.compile"
    return_annotation {
      pretty_printed_name: "types.CodeType"
      fully_qualified_name: "types.CodeType"
    }
    parameters {
      name: "source"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,UnboundType[ReadableBuffer],_ast.Module,_ast.Expression,_ast.Interactive]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "UnboundType[ReadableBuffer]"
          kind: UNBOUND
        }
        args {
          pretty_printed_name: "_ast.Module"
          fully_qualified_name: "_ast.Module"
        }
        args {
          pretty_printed_name: "_ast.Expression"
          fully_qualified_name: "_ast.Expression"
        }
        args {
          pretty_printed_name: "_ast.Interactive"
          fully_qualified_name: "_ast.Interactive"
        }
      }
    }
    parameters {
      name: "filename"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,UnboundType[ReadableBuffer],builtins._PathLike[Any]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "UnboundType[ReadableBuffer]"
          kind: UNBOUND
        }
        args {
          pretty_printed_name: "builtins._PathLike[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "builtins._PathLike"
        }
      }
    }
    parameters {
      name: "mode"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "dont_inherit"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    parameters {
      name: "optimize"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "compile"
    fully_qualified_name: "builtins.compile"
    return_annotation {
      pretty_printed_name: "_ast.AST"
      fully_qualified_name: "_ast.AST"
    }
    parameters {
      name: "source"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,UnboundType[ReadableBuffer],_ast.Module,_ast.Expression,_ast.Interactive]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "UnboundType[ReadableBuffer]"
          kind: UNBOUND
        }
        args {
          pretty_printed_name: "_ast.Module"
          fully_qualified_name: "_ast.Module"
        }
        args {
          pretty_printed_name: "_ast.Expression"
          fully_qualified_name: "_ast.Expression"
        }
        args {
          pretty_printed_name: "_ast.Interactive"
          fully_qualified_name: "_ast.Interactive"
        }
      }
    }
    parameters {
      name: "filename"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,UnboundType[ReadableBuffer],builtins._PathLike[Any]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "UnboundType[ReadableBuffer]"
          kind: UNBOUND
        }
        args {
          pretty_printed_name: "builtins._PathLike[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "builtins._PathLike"
        }
      }
    }
    parameters {
      name: "mode"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "flags"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Literal[builtins.int]"
        kind: LITERAL
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
    }
    parameters {
      name: "dont_inherit"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    parameters {
      name: "optimize"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "compile"
    fully_qualified_name: "builtins.compile"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "source"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,UnboundType[ReadableBuffer],_ast.Module,_ast.Expression,_ast.Interactive]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "UnboundType[ReadableBuffer]"
          kind: UNBOUND
        }
        args {
          pretty_printed_name: "_ast.Module"
          fully_qualified_name: "_ast.Module"
        }
        args {
          pretty_printed_name: "_ast.Expression"
          fully_qualified_name: "_ast.Expression"
        }
        args {
          pretty_printed_name: "_ast.Interactive"
          fully_qualified_name: "_ast.Interactive"
        }
      }
    }
    parameters {
      name: "filename"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,UnboundType[ReadableBuffer],builtins._PathLike[Any]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "UnboundType[ReadableBuffer]"
          kind: UNBOUND
        }
        args {
          pretty_printed_name: "builtins._PathLike[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "builtins._PathLike"
        }
      }
    }
    parameters {
      name: "mode"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "flags"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "dont_inherit"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    parameters {
      name: "optimize"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
}
overloaded_functions {
  name: "compile"
  fullname: "builtins.compile"
  definitions {
    name: "compile"
    fully_qualified_name: "builtins.compile"
    return_annotation {
      pretty_printed_name: "types.CodeType"
      fully_qualified_name: "types.CodeType"
    }
    parameters {
      name: "source"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,UnboundType[ReadableBuffer],_ast.Module,_ast.Expression,_ast.Interactive]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "UnboundType[ReadableBuffer]"
          kind: UNBOUND
        }
        args {
          pretty_printed_name: "_ast.Module"
          fully_qualified_name: "_ast.Module"
        }
        args {
          pretty_printed_name: "_ast.Expression"
          fully_qualified_name: "_ast.Expression"
        }
        args {
          pretty_printed_name: "_ast.Interactive"
          fully_qualified_name: "_ast.Interactive"
        }
      }
    }
    parameters {
      name: "filename"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,UnboundType[ReadableBuffer],builtins._PathLike[Any]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "UnboundType[ReadableBuffer]"
          kind: UNBOUND
        }
        args {
          pretty_printed_name: "builtins._PathLike[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "builtins._PathLike"
        }
      }
    }
    parameters {
      name: "mode"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "flags"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Literal[builtins.int]"
        kind: LITERAL
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
    }
    parameters {
      name: "dont_inherit"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    parameters {
      name: "optimize"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    parameters {
      name: "_feature_version"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "compile"
    fully_qualified_name: "builtins.compile"
    return_annotation {
      pretty_printed_name: "types.CodeType"
      fully_qualified_name: "types.CodeType"
    }
    parameters {
      name: "source"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,UnboundType[ReadableBuffer],_ast.Module,_ast.Expression,_ast.Interactive]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "UnboundType[ReadableBuffer]"
          kind: UNBOUND
        }
        args {
          pretty_printed_name: "_ast.Module"
          fully_qualified_name: "_ast.Module"
        }
        args {
          pretty_printed_name: "_ast.Expression"
          fully_qualified_name: "_ast.Expression"
        }
        args {
          pretty_printed_name: "_ast.Interactive"
          fully_qualified_name: "_ast.Interactive"
        }
      }
    }
    parameters {
      name: "filename"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,UnboundType[ReadableBuffer],builtins._PathLike[Any]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "UnboundType[ReadableBuffer]"
          kind: UNBOUND
        }
        args {
          pretty_printed_name: "builtins._PathLike[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "builtins._PathLike"
        }
      }
    }
    parameters {
      name: "mode"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "dont_inherit"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    parameters {
      name: "optimize"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    parameters {
      name: "_feature_version"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "compile"
    fully_qualified_name: "builtins.compile"
    return_annotation {
      pretty_printed_name: "_ast.AST"
      fully_qualified_name: "_ast.AST"
    }
    parameters {
      name: "source"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,UnboundType[ReadableBuffer],_ast.Module,_ast.Expression,_ast.Interactive]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "UnboundType[ReadableBuffer]"
          kind: UNBOUND
        }
        args {
          pretty_printed_name: "_ast.Module"
          fully_qualified_name: "_ast.Module"
        }
        args {
          pretty_printed_name: "_ast.Expression"
          fully_qualified_name: "_ast.Expression"
        }
        args {
          pretty_printed_name: "_ast.Interactive"
          fully_qualified_name: "_ast.Interactive"
        }
      }
    }
    parameters {
      name: "filename"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,UnboundType[ReadableBuffer],builtins._PathLike[Any]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "UnboundType[ReadableBuffer]"
          kind: UNBOUND
        }
        args {
          pretty_printed_name: "builtins._PathLike[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "builtins._PathLike"
        }
      }
    }
    parameters {
      name: "mode"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "flags"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Literal[builtins.int]"
        kind: LITERAL
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
    }
    parameters {
      name: "dont_inherit"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    parameters {
      name: "optimize"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    parameters {
      name: "_feature_version"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "compile"
    fully_qualified_name: "builtins.compile"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "source"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,UnboundType[ReadableBuffer],_ast.Module,_ast.Expression,_ast.Interactive]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "UnboundType[ReadableBuffer]"
          kind: UNBOUND
        }
        args {
          pretty_printed_name: "_ast.Module"
          fully_qualified_name: "_ast.Module"
        }
        args {
          pretty_printed_name: "_ast.Expression"
          fully_qualified_name: "_ast.Expression"
        }
        args {
          pretty_printed_name: "_ast.Interactive"
          fully_qualified_name: "_ast.Interactive"
        }
      }
    }
    parameters {
      name: "filename"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,UnboundType[ReadableBuffer],builtins._PathLike[Any]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "UnboundType[ReadableBuffer]"
          kind: UNBOUND
        }
        args {
          pretty_printed_name: "builtins._PathLike[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "builtins._PathLike"
        }
      }
    }
    parameters {
      name: "mode"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "flags"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "dont_inherit"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    parameters {
      name: "optimize"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    parameters {
      name: "_feature_version"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
overloaded_functions {
  name: "divmod"
  fullname: "builtins.divmod"
  definitions {
    name: "divmod"
    fully_qualified_name: "builtins.divmod"
    return_annotation {
      pretty_printed_name: "builtins._T_co"
      kind: TYPE_VAR
    }
    parameters {
      name: "__x"
      type_annotation {
        pretty_printed_name: "_typeshed.SupportsDivMod[builtins._T_contra,builtins._T_co]"
        args {
          pretty_printed_name: "builtins._T_contra"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "builtins._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_typeshed.SupportsDivMod"
      }
    }
    parameters {
      name: "__y"
      type_annotation {
        pretty_printed_name: "builtins._T_contra"
        kind: TYPE_VAR
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "divmod"
    fully_qualified_name: "builtins.divmod"
    return_annotation {
      pretty_printed_name: "builtins._T_co"
      kind: TYPE_VAR
    }
    parameters {
      name: "__x"
      type_annotation {
        pretty_printed_name: "builtins._T_contra"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "__y"
      type_annotation {
        pretty_printed_name: "_typeshed.SupportsRDivMod[builtins._T_contra,builtins._T_co]"
        args {
          pretty_printed_name: "builtins._T_contra"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "builtins._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_typeshed.SupportsRDivMod"
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
overloaded_functions {
  name: "getattr"
  fullname: "builtins.getattr"
  definitions {
    name: "getattr"
    fully_qualified_name: "builtins.getattr"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "__o"
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
    parameters {
      name: "__name"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "getattr"
    fully_qualified_name: "builtins.getattr"
    return_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "__o"
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
    parameters {
      name: "__name"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "__default"
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "getattr"
    fully_qualified_name: "builtins.getattr"
    return_annotation {
      pretty_printed_name: "Union[Any,builtins.bool]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    parameters {
      name: "__o"
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
    parameters {
      name: "__name"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "__default"
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "getattr"
    fully_qualified_name: "builtins.getattr"
    return_annotation {
      pretty_printed_name: "Union[Any,builtins.list[Any]]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "builtins.list[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "builtins.list"
      }
    }
    parameters {
      name: "__o"
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "__default"
      type_annotation {
        pretty_printed_name: "builtins.list[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "builtins.list"
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "getattr"
    fully_qualified_name: "builtins.getattr"
    return_annotation {
      pretty_printed_name: "Union[Any,builtins.dict[Any,Any]]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "builtins.dict[Any,Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "builtins.dict"
      }
    }
    parameters {
      name: "__o"
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "__default"
      type_annotation {
        pretty_printed_name: "builtins.dict[Any,Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "builtins.dict"
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "getattr"
    fully_qualified_name: "builtins.getattr"
    return_annotation {
      pretty_printed_name: "Union[Any,builtins._T]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "builtins._T"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "__o"
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
    parameters {
      name: "__name"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "__default"
      type_annotation {
        pretty_printed_name: "builtins._T"
        kind: TYPE_VAR
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
overloaded_functions {
  name: "iter"
  fullname: "builtins.iter"
  definitions {
    name: "iter"
    fully_qualified_name: "builtins.iter"
    return_annotation {
      pretty_printed_name: "builtins._SupportsNextT"
      kind: TYPE_VAR
    }
    parameters {
      name: "__iterable"
      type_annotation {
        pretty_printed_name: "_typeshed.SupportsIter[builtins._SupportsNextT]"
        args {
          pretty_printed_name: "builtins._SupportsNextT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_typeshed.SupportsIter"
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "iter"
    fully_qualified_name: "builtins.iter"
    return_annotation {
      pretty_printed_name: "typing.Iterator[builtins._T]"
      args {
        pretty_printed_name: "builtins._T"
        kind: TYPE_VAR
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "__iterable"
      type_annotation {
        pretty_printed_name: "builtins._GetItemIterable[builtins._T]"
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins._GetItemIterable"
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "iter"
    fully_qualified_name: "builtins.iter"
    return_annotation {
      pretty_printed_name: "typing.Iterator[builtins._T]"
      args {
        pretty_printed_name: "builtins._T"
        kind: TYPE_VAR
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "__function"
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    parameters {
      name: "__sentinel"
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "iter"
    fully_qualified_name: "builtins.iter"
    return_annotation {
      pretty_printed_name: "typing.Iterator[builtins._T]"
      args {
        pretty_printed_name: "builtins._T"
        kind: TYPE_VAR
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "__function"
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    parameters {
      name: "__sentinel"
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
overloaded_functions {
  name: "max"
  fullname: "builtins.max"
  definitions {
    name: "max"
    fully_qualified_name: "builtins.max"
    return_annotation {
      pretty_printed_name: "_typeshed.SupportsRichComparisonT"
      kind: TYPE_VAR
    }
    parameters {
      name: "__arg1"
      type_annotation {
        pretty_printed_name: "_typeshed.SupportsRichComparisonT"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "__arg2"
      type_annotation {
        pretty_printed_name: "_typeshed.SupportsRichComparisonT"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "_args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "_typeshed.SupportsRichComparisonT"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "key"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "max"
    fully_qualified_name: "builtins.max"
    return_annotation {
      pretty_printed_name: "builtins._T"
      kind: TYPE_VAR
    }
    parameters {
      name: "__arg1"
      type_annotation {
        pretty_printed_name: "builtins._T"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "__arg2"
      type_annotation {
        pretty_printed_name: "builtins._T"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "_args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "builtins._T"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "key"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "max"
    fully_qualified_name: "builtins.max"
    return_annotation {
      pretty_printed_name: "_typeshed.SupportsRichComparisonT"
      kind: TYPE_VAR
    }
    parameters {
      name: "__iterable"
      type_annotation {
        pretty_printed_name: "typing.Iterable[_typeshed.SupportsRichComparisonT]"
        args {
          pretty_printed_name: "_typeshed.SupportsRichComparisonT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    parameters {
      name: "key"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "max"
    fully_qualified_name: "builtins.max"
    return_annotation {
      pretty_printed_name: "builtins._T"
      kind: TYPE_VAR
    }
    parameters {
      name: "__iterable"
      type_annotation {
        pretty_printed_name: "typing.Iterable[builtins._T]"
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    parameters {
      name: "key"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "max"
    fully_qualified_name: "builtins.max"
    return_annotation {
      pretty_printed_name: "Union[_typeshed.SupportsRichComparisonT,builtins._T]"
      kind: UNION
      args {
        pretty_printed_name: "_typeshed.SupportsRichComparisonT"
        kind: TYPE_VAR
      }
      args {
        pretty_printed_name: "builtins._T"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "__iterable"
      type_annotation {
        pretty_printed_name: "typing.Iterable[_typeshed.SupportsRichComparisonT]"
        args {
          pretty_printed_name: "_typeshed.SupportsRichComparisonT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    parameters {
      name: "key"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      has_default: true
    }
    parameters {
      name: "default"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins._T"
        kind: TYPE_VAR
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "max"
    fully_qualified_name: "builtins.max"
    return_annotation {
      pretty_printed_name: "Union[builtins._T1,builtins._T2]"
      kind: UNION
      args {
        pretty_printed_name: "builtins._T1"
        kind: TYPE_VAR
      }
      args {
        pretty_printed_name: "builtins._T2"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "__iterable"
      type_annotation {
        pretty_printed_name: "typing.Iterable[builtins._T1]"
        args {
          pretty_printed_name: "builtins._T1"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    parameters {
      name: "key"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    parameters {
      name: "default"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins._T2"
        kind: TYPE_VAR
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
overloaded_functions {
  name: "min"
  fullname: "builtins.min"
  definitions {
    name: "min"
    fully_qualified_name: "builtins.min"
    return_annotation {
      pretty_printed_name: "_typeshed.SupportsRichComparisonT"
      kind: TYPE_VAR
    }
    parameters {
      name: "__arg1"
      type_annotation {
        pretty_printed_name: "_typeshed.SupportsRichComparisonT"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "__arg2"
      type_annotation {
        pretty_printed_name: "_typeshed.SupportsRichComparisonT"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "_args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "_typeshed.SupportsRichComparisonT"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "key"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "min"
    fully_qualified_name: "builtins.min"
    return_annotation {
      pretty_printed_name: "builtins._T"
      kind: TYPE_VAR
    }
    parameters {
      name: "__arg1"
      type_annotation {
        pretty_printed_name: "builtins._T"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "__arg2"
      type_annotation {
        pretty_printed_name: "builtins._T"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "_args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "builtins._T"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "key"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "min"
    fully_qualified_name: "builtins.min"
    return_annotation {
      pretty_printed_name: "_typeshed.SupportsRichComparisonT"
      kind: TYPE_VAR
    }
    parameters {
      name: "__iterable"
      type_annotation {
        pretty_printed_name: "typing.Iterable[_typeshed.SupportsRichComparisonT]"
        args {
          pretty_printed_name: "_typeshed.SupportsRichComparisonT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    parameters {
      name: "key"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "min"
    fully_qualified_name: "builtins.min"
    return_annotation {
      pretty_printed_name: "builtins._T"
      kind: TYPE_VAR
    }
    parameters {
      name: "__iterable"
      type_annotation {
        pretty_printed_name: "typing.Iterable[builtins._T]"
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    parameters {
      name: "key"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "min"
    fully_qualified_name: "builtins.min"
    return_annotation {
      pretty_printed_name: "Union[_typeshed.SupportsRichComparisonT,builtins._T]"
      kind: UNION
      args {
        pretty_printed_name: "_typeshed.SupportsRichComparisonT"
        kind: TYPE_VAR
      }
      args {
        pretty_printed_name: "builtins._T"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "__iterable"
      type_annotation {
        pretty_printed_name: "typing.Iterable[_typeshed.SupportsRichComparisonT]"
        args {
          pretty_printed_name: "_typeshed.SupportsRichComparisonT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    parameters {
      name: "key"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      has_default: true
    }
    parameters {
      name: "default"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins._T"
        kind: TYPE_VAR
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "min"
    fully_qualified_name: "builtins.min"
    return_annotation {
      pretty_printed_name: "Union[builtins._T1,builtins._T2]"
      kind: UNION
      args {
        pretty_printed_name: "builtins._T1"
        kind: TYPE_VAR
      }
      args {
        pretty_printed_name: "builtins._T2"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "__iterable"
      type_annotation {
        pretty_printed_name: "typing.Iterable[builtins._T1]"
        args {
          pretty_printed_name: "builtins._T1"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    parameters {
      name: "key"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    parameters {
      name: "default"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins._T2"
        kind: TYPE_VAR
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
overloaded_functions {
  name: "next"
  fullname: "builtins.next"
  definitions {
    name: "next"
    fully_qualified_name: "builtins.next"
    return_annotation {
      pretty_printed_name: "builtins._T"
      kind: TYPE_VAR
    }
    parameters {
      name: "__i"
      type_annotation {
        pretty_printed_name: "_typeshed.SupportsNext[builtins._T]"
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_typeshed.SupportsNext"
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "next"
    fully_qualified_name: "builtins.next"
    return_annotation {
      pretty_printed_name: "Union[builtins._T,builtins._VT]"
      kind: UNION
      args {
        pretty_printed_name: "builtins._T"
        kind: TYPE_VAR
      }
      args {
        pretty_printed_name: "builtins._VT"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "__i"
      type_annotation {
        pretty_printed_name: "_typeshed.SupportsNext[builtins._T]"
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_typeshed.SupportsNext"
      }
    }
    parameters {
      name: "__default"
      type_annotation {
        pretty_printed_name: "builtins._VT"
        kind: TYPE_VAR
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
overloaded_functions {
  name: "open"
  fullname: "builtins.open"
  definitions {
    name: "open"
    fully_qualified_name: "builtins.open"
    return_annotation {
      pretty_printed_name: "io.TextIOWrapper"
      fully_qualified_name: "io.TextIOWrapper"
    }
    parameters {
      name: "file"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UnboundType[FileDescriptorOrPath]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "mode"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UnboundType[OpenTextMode]"
        kind: UNBOUND
      }
      has_default: true
    }
    parameters {
      name: "buffering"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    parameters {
      name: "encoding"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "errors"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "newline"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "closefd"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    parameters {
      name: "opener"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[UnboundType[_Opener],None]"
        kind: UNION
        args {
          pretty_printed_name: "UnboundType[_Opener]"
          kind: UNBOUND
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "open"
    fully_qualified_name: "builtins.open"
    return_annotation {
      pretty_printed_name: "io.FileIO"
      fully_qualified_name: "io.FileIO"
    }
    parameters {
      name: "file"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UnboundType[FileDescriptorOrPath]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "mode"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UnboundType[OpenBinaryMode]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "buffering"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Literal[builtins.int]"
        kind: LITERAL
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
    }
    parameters {
      name: "encoding"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      has_default: true
    }
    parameters {
      name: "errors"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      has_default: true
    }
    parameters {
      name: "newline"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      has_default: true
    }
    parameters {
      name: "closefd"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    parameters {
      name: "opener"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[UnboundType[_Opener],None]"
        kind: UNION
        args {
          pretty_printed_name: "UnboundType[_Opener]"
          kind: UNBOUND
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "open"
    fully_qualified_name: "builtins.open"
    return_annotation {
      pretty_printed_name: "io.BufferedRandom"
      fully_qualified_name: "io.BufferedRandom"
    }
    parameters {
      name: "file"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UnboundType[FileDescriptorOrPath]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "mode"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UnboundType[OpenBinaryModeUpdating]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "buffering"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Literal[builtins.int],Literal[builtins.int]]"
        kind: UNION
        args {
          pretty_printed_name: "Literal[builtins.int]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
        }
        args {
          pretty_printed_name: "Literal[builtins.int]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
        }
      }
      has_default: true
    }
    parameters {
      name: "encoding"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      has_default: true
    }
    parameters {
      name: "errors"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      has_default: true
    }
    parameters {
      name: "newline"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      has_default: true
    }
    parameters {
      name: "closefd"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    parameters {
      name: "opener"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[UnboundType[_Opener],None]"
        kind: UNION
        args {
          pretty_printed_name: "UnboundType[_Opener]"
          kind: UNBOUND
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "open"
    fully_qualified_name: "builtins.open"
    return_annotation {
      pretty_printed_name: "io.BufferedWriter"
      fully_qualified_name: "io.BufferedWriter"
    }
    parameters {
      name: "file"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UnboundType[FileDescriptorOrPath]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "mode"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UnboundType[OpenBinaryModeWriting]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "buffering"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Literal[builtins.int],Literal[builtins.int]]"
        kind: UNION
        args {
          pretty_printed_name: "Literal[builtins.int]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
        }
        args {
          pretty_printed_name: "Literal[builtins.int]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
        }
      }
      has_default: true
    }
    parameters {
      name: "encoding"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      has_default: true
    }
    parameters {
      name: "errors"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      has_default: true
    }
    parameters {
      name: "newline"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      has_default: true
    }
    parameters {
      name: "closefd"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    parameters {
      name: "opener"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[UnboundType[_Opener],None]"
        kind: UNION
        args {
          pretty_printed_name: "UnboundType[_Opener]"
          kind: UNBOUND
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "open"
    fully_qualified_name: "builtins.open"
    return_annotation {
      pretty_printed_name: "io.BufferedReader"
      fully_qualified_name: "io.BufferedReader"
    }
    parameters {
      name: "file"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UnboundType[FileDescriptorOrPath]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "mode"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UnboundType[OpenBinaryModeReading]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "buffering"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Literal[builtins.int],Literal[builtins.int]]"
        kind: UNION
        args {
          pretty_printed_name: "Literal[builtins.int]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
        }
        args {
          pretty_printed_name: "Literal[builtins.int]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
        }
      }
      has_default: true
    }
    parameters {
      name: "encoding"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      has_default: true
    }
    parameters {
      name: "errors"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      has_default: true
    }
    parameters {
      name: "newline"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      has_default: true
    }
    parameters {
      name: "closefd"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    parameters {
      name: "opener"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[UnboundType[_Opener],None]"
        kind: UNION
        args {
          pretty_printed_name: "UnboundType[_Opener]"
          kind: UNBOUND
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "open"
    fully_qualified_name: "builtins.open"
    return_annotation {
      pretty_printed_name: "typing.BinaryIO"
      fully_qualified_name: "typing.BinaryIO"
    }
    parameters {
      name: "file"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UnboundType[FileDescriptorOrPath]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "mode"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UnboundType[OpenBinaryMode]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "buffering"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    parameters {
      name: "encoding"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      has_default: true
    }
    parameters {
      name: "errors"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      has_default: true
    }
    parameters {
      name: "newline"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      has_default: true
    }
    parameters {
      name: "closefd"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    parameters {
      name: "opener"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[UnboundType[_Opener],None]"
        kind: UNION
        args {
          pretty_printed_name: "UnboundType[_Opener]"
          kind: UNBOUND
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "open"
    fully_qualified_name: "builtins.open"
    return_annotation {
      pretty_printed_name: "typing.IO[Any]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "typing.IO"
    }
    parameters {
      name: "file"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UnboundType[FileDescriptorOrPath]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "mode"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "buffering"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    parameters {
      name: "encoding"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "errors"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "newline"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "closefd"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    parameters {
      name: "opener"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[UnboundType[_Opener],None]"
        kind: UNION
        args {
          pretty_printed_name: "UnboundType[_Opener]"
          kind: UNBOUND
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
overloaded_functions {
  name: "print"
  fullname: "builtins.print"
  definitions {
    name: "print"
    fully_qualified_name: "builtins.print"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "values"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
    parameters {
      name: "sep"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "end"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "file"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[_typeshed.SupportsWrite[builtins.str],None]"
        kind: UNION
        args {
          pretty_printed_name: "_typeshed.SupportsWrite[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "_typeshed.SupportsWrite"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "flush"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Literal[builtins.bool]"
        kind: LITERAL
        args {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "print"
    fully_qualified_name: "builtins.print"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "values"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
    parameters {
      name: "sep"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "end"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "file"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "Union[builtins._SupportsWriteAndFlush[builtins.str],None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins._SupportsWriteAndFlush[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "builtins._SupportsWriteAndFlush"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "flush"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
overloaded_functions {
  name: "pow"
  fullname: "builtins.pow"
  definitions {
    name: "pow"
    fully_qualified_name: "builtins.pow"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "__x"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "__y"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "__z"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "pow"
    fully_qualified_name: "builtins.pow"
    return_annotation {
      pretty_printed_name: "Literal[builtins.int]"
      kind: LITERAL
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "__x"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "__y"
      type_annotation {
        pretty_printed_name: "Literal[builtins.int]"
        kind: LITERAL
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
    }
    parameters {
      name: "__z"
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "pow"
    fully_qualified_name: "builtins.pow"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "__x"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "__y"
      type_annotation {
        pretty_printed_name: "UnboundType[_PositiveInteger]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "__z"
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "pow"
    fully_qualified_name: "builtins.pow"
    return_annotation {
      pretty_printed_name: "builtins.float"
      fully_qualified_name: "builtins.float"
    }
    parameters {
      name: "__x"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "__y"
      type_annotation {
        pretty_printed_name: "UnboundType[_NegativeInteger]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "__z"
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "pow"
    fully_qualified_name: "builtins.pow"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "__x"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "__y"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "__z"
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "pow"
    fully_qualified_name: "builtins.pow"
    return_annotation {
      pretty_printed_name: "builtins.float"
      fully_qualified_name: "builtins.float"
    }
    parameters {
      name: "__x"
      type_annotation {
        pretty_printed_name: "UnboundType[_PositiveInteger]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "__y"
      type_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
    }
    parameters {
      name: "__z"
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "pow"
    fully_qualified_name: "builtins.pow"
    return_annotation {
      pretty_printed_name: "builtins.complex"
      fully_qualified_name: "builtins.complex"
    }
    parameters {
      name: "__x"
      type_annotation {
        pretty_printed_name: "UnboundType[_NegativeInteger]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "__y"
      type_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
    }
    parameters {
      name: "__z"
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "pow"
    fully_qualified_name: "builtins.pow"
    return_annotation {
      pretty_printed_name: "builtins.float"
      fully_qualified_name: "builtins.float"
    }
    parameters {
      name: "__x"
      type_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
    }
    parameters {
      name: "__y"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "__z"
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "pow"
    fully_qualified_name: "builtins.pow"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "__x"
      type_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
    }
    parameters {
      name: "__y"
      type_annotation {
        pretty_printed_name: "Union[builtins.complex,UnboundType[_SupportsSomeKindOfPow]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.complex"
          fully_qualified_name: "builtins.complex"
        }
        args {
          pretty_printed_name: "UnboundType[_SupportsSomeKindOfPow]"
          kind: UNBOUND
        }
      }
    }
    parameters {
      name: "__z"
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "pow"
    fully_qualified_name: "builtins.pow"
    return_annotation {
      pretty_printed_name: "builtins.complex"
      fully_qualified_name: "builtins.complex"
    }
    parameters {
      name: "__x"
      type_annotation {
        pretty_printed_name: "builtins.complex"
        fully_qualified_name: "builtins.complex"
      }
    }
    parameters {
      name: "__y"
      type_annotation {
        pretty_printed_name: "Union[builtins.complex,UnboundType[_SupportsSomeKindOfPow]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.complex"
          fully_qualified_name: "builtins.complex"
        }
        args {
          pretty_printed_name: "UnboundType[_SupportsSomeKindOfPow]"
          kind: UNBOUND
        }
      }
    }
    parameters {
      name: "__z"
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "pow"
    fully_qualified_name: "builtins.pow"
    return_annotation {
      pretty_printed_name: "builtins._T_co"
      kind: TYPE_VAR
    }
    parameters {
      name: "__x"
      type_annotation {
        pretty_printed_name: "builtins._SupportsPow2[builtins._E,builtins._T_co]"
        args {
          pretty_printed_name: "builtins._E"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "builtins._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins._SupportsPow2"
      }
    }
    parameters {
      name: "__y"
      type_annotation {
        pretty_printed_name: "builtins._E"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "__z"
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "pow"
    fully_qualified_name: "builtins.pow"
    return_annotation {
      pretty_printed_name: "builtins._T_co"
      kind: TYPE_VAR
    }
    parameters {
      name: "__x"
      type_annotation {
        pretty_printed_name: "builtins._SupportsPow3NoneOnly[builtins._E,builtins._T_co]"
        args {
          pretty_printed_name: "builtins._E"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "builtins._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins._SupportsPow3NoneOnly"
      }
    }
    parameters {
      name: "__y"
      type_annotation {
        pretty_printed_name: "builtins._E"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "__z"
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "pow"
    fully_qualified_name: "builtins.pow"
    return_annotation {
      pretty_printed_name: "builtins._T_co"
      kind: TYPE_VAR
    }
    parameters {
      name: "__x"
      type_annotation {
        pretty_printed_name: "builtins._SupportsPow3[builtins._E,builtins._M,builtins._T_co]"
        args {
          pretty_printed_name: "builtins._E"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "builtins._M"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "builtins._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins._SupportsPow3"
      }
    }
    parameters {
      name: "__y"
      type_annotation {
        pretty_printed_name: "builtins._E"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "__z"
      type_annotation {
        pretty_printed_name: "builtins._M"
        kind: TYPE_VAR
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "pow"
    fully_qualified_name: "builtins.pow"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "__x"
      type_annotation {
        pretty_printed_name: "UnboundType[_SupportsSomeKindOfPow]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "__y"
      type_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
    }
    parameters {
      name: "__z"
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "pow"
    fully_qualified_name: "builtins.pow"
    return_annotation {
      pretty_printed_name: "builtins.complex"
      fully_qualified_name: "builtins.complex"
    }
    parameters {
      name: "__x"
      type_annotation {
        pretty_printed_name: "UnboundType[_SupportsSomeKindOfPow]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "__y"
      type_annotation {
        pretty_printed_name: "builtins.complex"
        fully_qualified_name: "builtins.complex"
      }
    }
    parameters {
      name: "__z"
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
}
overloaded_functions {
  name: "pow"
  fullname: "builtins.pow"
  definitions {
    name: "pow"
    fully_qualified_name: "builtins.pow"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "base"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "exp"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "mod"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "pow"
    fully_qualified_name: "builtins.pow"
    return_annotation {
      pretty_printed_name: "Literal[builtins.int]"
      kind: LITERAL
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "base"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "exp"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Literal[builtins.int]"
        kind: LITERAL
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
    }
    parameters {
      name: "mod"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "pow"
    fully_qualified_name: "builtins.pow"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "base"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "exp"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UnboundType[_PositiveInteger]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "mod"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "pow"
    fully_qualified_name: "builtins.pow"
    return_annotation {
      pretty_printed_name: "builtins.float"
      fully_qualified_name: "builtins.float"
    }
    parameters {
      name: "base"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "exp"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UnboundType[_NegativeInteger]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "mod"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "pow"
    fully_qualified_name: "builtins.pow"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "base"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "exp"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "mod"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "pow"
    fully_qualified_name: "builtins.pow"
    return_annotation {
      pretty_printed_name: "builtins.float"
      fully_qualified_name: "builtins.float"
    }
    parameters {
      name: "base"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UnboundType[_PositiveInteger]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "exp"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
    }
    parameters {
      name: "mod"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "pow"
    fully_qualified_name: "builtins.pow"
    return_annotation {
      pretty_printed_name: "builtins.complex"
      fully_qualified_name: "builtins.complex"
    }
    parameters {
      name: "base"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UnboundType[_NegativeInteger]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "exp"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
    }
    parameters {
      name: "mod"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "pow"
    fully_qualified_name: "builtins.pow"
    return_annotation {
      pretty_printed_name: "builtins.float"
      fully_qualified_name: "builtins.float"
    }
    parameters {
      name: "base"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
    }
    parameters {
      name: "exp"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "mod"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "pow"
    fully_qualified_name: "builtins.pow"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "base"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
    }
    parameters {
      name: "exp"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.complex,UnboundType[_SupportsSomeKindOfPow]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.complex"
          fully_qualified_name: "builtins.complex"
        }
        args {
          pretty_printed_name: "UnboundType[_SupportsSomeKindOfPow]"
          kind: UNBOUND
        }
      }
    }
    parameters {
      name: "mod"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "pow"
    fully_qualified_name: "builtins.pow"
    return_annotation {
      pretty_printed_name: "builtins.complex"
      fully_qualified_name: "builtins.complex"
    }
    parameters {
      name: "base"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.complex"
        fully_qualified_name: "builtins.complex"
      }
    }
    parameters {
      name: "exp"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.complex,UnboundType[_SupportsSomeKindOfPow]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.complex"
          fully_qualified_name: "builtins.complex"
        }
        args {
          pretty_printed_name: "UnboundType[_SupportsSomeKindOfPow]"
          kind: UNBOUND
        }
      }
    }
    parameters {
      name: "mod"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "pow"
    fully_qualified_name: "builtins.pow"
    return_annotation {
      pretty_printed_name: "builtins._T_co"
      kind: TYPE_VAR
    }
    parameters {
      name: "base"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins._SupportsPow2[builtins._E,builtins._T_co]"
        args {
          pretty_printed_name: "builtins._E"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "builtins._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins._SupportsPow2"
      }
    }
    parameters {
      name: "exp"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins._E"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "mod"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "pow"
    fully_qualified_name: "builtins.pow"
    return_annotation {
      pretty_printed_name: "builtins._T_co"
      kind: TYPE_VAR
    }
    parameters {
      name: "base"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins._SupportsPow3NoneOnly[builtins._E,builtins._T_co]"
        args {
          pretty_printed_name: "builtins._E"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "builtins._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins._SupportsPow3NoneOnly"
      }
    }
    parameters {
      name: "exp"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins._E"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "mod"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "pow"
    fully_qualified_name: "builtins.pow"
    return_annotation {
      pretty_printed_name: "builtins._T_co"
      kind: TYPE_VAR
    }
    parameters {
      name: "base"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins._SupportsPow3[builtins._E,builtins._M,builtins._T_co]"
        args {
          pretty_printed_name: "builtins._E"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "builtins._M"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "builtins._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins._SupportsPow3"
      }
    }
    parameters {
      name: "exp"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins._E"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "mod"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins._M"
        kind: TYPE_VAR
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "pow"
    fully_qualified_name: "builtins.pow"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "base"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UnboundType[_SupportsSomeKindOfPow]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "exp"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
    }
    parameters {
      name: "mod"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "pow"
    fully_qualified_name: "builtins.pow"
    return_annotation {
      pretty_printed_name: "builtins.complex"
      fully_qualified_name: "builtins.complex"
    }
    parameters {
      name: "base"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UnboundType[_SupportsSomeKindOfPow]"
        kind: UNBOUND
      }
    }
    parameters {
      name: "exp"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.complex"
        fully_qualified_name: "builtins.complex"
      }
    }
    parameters {
      name: "mod"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
overloaded_functions {
  name: "round"
  fullname: "builtins.round"
  definitions {
    name: "round"
    fully_qualified_name: "builtins.round"
    return_annotation {
      pretty_printed_name: "builtins._T"
      kind: TYPE_VAR
    }
    parameters {
      name: "number"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins._SupportsRound1[builtins._T]"
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins._SupportsRound1"
      }
    }
    parameters {
      name: "ndigits"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "round"
    fully_qualified_name: "builtins.round"
    return_annotation {
      pretty_printed_name: "builtins._T"
      kind: TYPE_VAR
    }
    parameters {
      name: "number"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins._SupportsRound2[builtins._T]"
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins._SupportsRound2"
      }
    }
    parameters {
      name: "ndigits"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing_extensions.SupportsIndex"
        fully_qualified_name: "typing_extensions.SupportsIndex"
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
overloaded_functions {
  name: "sorted"
  fullname: "builtins.sorted"
  definitions {
    name: "sorted"
    fully_qualified_name: "builtins.sorted"
    return_annotation {
      pretty_printed_name: "builtins.list[_typeshed.SupportsRichComparisonT]"
      args {
        pretty_printed_name: "_typeshed.SupportsRichComparisonT"
        kind: TYPE_VAR
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "__iterable"
      type_annotation {
        pretty_printed_name: "typing.Iterable[_typeshed.SupportsRichComparisonT]"
        args {
          pretty_printed_name: "_typeshed.SupportsRichComparisonT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    parameters {
      name: "key"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      has_default: true
    }
    parameters {
      name: "reverse"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "sorted"
    fully_qualified_name: "builtins.sorted"
    return_annotation {
      pretty_printed_name: "builtins.list[builtins._T]"
      args {
        pretty_printed_name: "builtins._T"
        kind: TYPE_VAR
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "__iterable"
      type_annotation {
        pretty_printed_name: "typing.Iterable[builtins._T]"
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    parameters {
      name: "key"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    parameters {
      name: "reverse"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
overloaded_functions {
  name: "vars"
  fullname: "builtins.vars"
  definitions {
    name: "vars"
    fully_qualified_name: "builtins.vars"
    return_annotation {
      pretty_printed_name: "types.MappingProxyType[builtins.str,Any]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "types.MappingProxyType"
    }
    parameters {
      name: "__object"
      type_annotation {
        pretty_printed_name: "builtins.type"
        fully_qualified_name: "builtins.type"
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "vars"
    fully_qualified_name: "builtins.vars"
    return_annotation {
      pretty_printed_name: "builtins.dict[builtins.str,Any]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "builtins.dict"
    }
    parameters {
      name: "__object"
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
overloaded_functions {
  name: "anext"
  fullname: "builtins.anext"
  definitions {
    name: "anext"
    fully_qualified_name: "builtins.anext"
    return_annotation {
      pretty_printed_name: "builtins._AwaitableT"
      kind: TYPE_VAR
    }
    parameters {
      name: "__i"
      type_annotation {
        pretty_printed_name: "builtins._SupportsSynchronousAnext[builtins._AwaitableT]"
        args {
          pretty_printed_name: "builtins._AwaitableT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins._SupportsSynchronousAnext"
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "anext"
    fully_qualified_name: "builtins.anext"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,Union[builtins._T,builtins._VT]]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Union[builtins._T,builtins._VT]"
        kind: UNION
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "builtins._VT"
          kind: TYPE_VAR
        }
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "__i"
      type_annotation {
        pretty_printed_name: "_typeshed.SupportsAnext[builtins._T]"
        args {
          pretty_printed_name: "builtins._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_typeshed.SupportsAnext"
      }
    }
    parameters {
      name: "default"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins._VT"
        kind: TYPE_VAR
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_asynchronous: true
    is_overload: true
  }
  valid_for: "310"
}
vars {
  name: "None"
  fully_qualified_name: "builtins.None"
  type_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "reveal_type"
  fully_qualified_name: "builtins.reveal_type"
  type_annotation {
    pretty_printed_name: "Any"
    kind: ANY
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "reveal_locals"
  fully_qualified_name: "builtins.reveal_locals"
  type_annotation {
    pretty_printed_name: "Any"
    kind: ANY
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "True"
  fully_qualified_name: "builtins.True"
  type_annotation {
    pretty_printed_name: "builtins.bool"
    fully_qualified_name: "builtins.bool"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "False"
  fully_qualified_name: "builtins.False"
  type_annotation {
    pretty_printed_name: "builtins.bool"
    fully_qualified_name: "builtins.bool"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "__debug__"
  fully_qualified_name: "builtins.__debug__"
  type_annotation {
    pretty_printed_name: "builtins.bool"
    fully_qualified_name: "builtins.bool"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "_P"
  fully_qualified_name: "builtins._P"
  type_annotation {
    pretty_printed_name: "typing_extensions.ParamSpec"
    fully_qualified_name: "typing_extensions.ParamSpec"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "_PositiveInteger"
  fully_qualified_name: "builtins._PositiveInteger"
  type_annotation {
    pretty_printed_name: "UnboundType[TypeAlias]"
    kind: UNBOUND
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "_NegativeInteger"
  fully_qualified_name: "builtins._NegativeInteger"
  type_annotation {
    pretty_printed_name: "UnboundType[TypeAlias]"
    kind: UNBOUND
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "_LiteralInteger"
  fully_qualified_name: "builtins._LiteralInteger"
  type_annotation {
    pretty_printed_name: "Any"
    kind: ANY
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "NotImplemented"
  fully_qualified_name: "builtins.NotImplemented"
  type_annotation {
    pretty_printed_name: "builtins._NotImplementedType"
    fully_qualified_name: "builtins._NotImplementedType"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "_ClassInfo"
  fully_qualified_name: "builtins._ClassInfo"
  type_annotation {
    pretty_printed_name: "UnboundType[TypeAlias]"
    kind: UNBOUND
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "_Opener"
  fully_qualified_name: "builtins._Opener"
  type_annotation {
    pretty_printed_name: "UnboundType[TypeAlias]"
    kind: UNBOUND
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "_SupportsSomeKindOfPow"
  fully_qualified_name: "builtins._SupportsSomeKindOfPow"
  type_annotation {
    pretty_printed_name: "Any"
    kind: ANY
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
}
vars {
  name: "_SupportsSomeKindOfPow"
  fully_qualified_name: "builtins._SupportsSomeKindOfPow"
  type_annotation {
    pretty_printed_name: "types.UnionType"
    fully_qualified_name: "types.UnionType"
  }
  valid_for: "310"
}
vars {
  name: "Ellipsis"
  fully_qualified_name: "builtins.Ellipsis"
  type_annotation {
    pretty_printed_name: "builtins.ellipsis"
    fully_qualified_name: "builtins.ellipsis"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
