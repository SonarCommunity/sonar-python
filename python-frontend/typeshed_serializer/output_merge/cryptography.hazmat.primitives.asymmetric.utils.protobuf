fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.utils"
classes {
  name: "Prehashed"
  fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.utils.Prehashed"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.utils.Prehashed.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.utils.Prehashed"
        fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.utils.Prehashed"
      }
    }
    parameters {
      name: "algorithm"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives.hashes.HashAlgorithm"
        fully_qualified_name: "cryptography.hazmat.primitives.hashes.HashAlgorithm"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "_algorithm"
    fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.utils.Prehashed._algorithm"
    type_annotation {
      pretty_printed_name: "cryptography.hazmat.primitives.hashes.HashAlgorithm"
      fully_qualified_name: "cryptography.hazmat.primitives.hashes.HashAlgorithm"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "_digest_size"
    fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.utils.Prehashed._digest_size"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "digest_size"
    fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.utils.Prehashed.digest_size"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
functions {
  name: "decode_dss_signature"
  fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.utils.decode_dss_signature"
  return_annotation {
    pretty_printed_name: "Tuple[builtins.int,builtins.int]"
    kind: TUPLE
    args {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    args {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "signature"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "encode_dss_signature"
  fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.utils.encode_dss_signature"
  return_annotation {
    pretty_printed_name: "builtins.bytes"
    fully_qualified_name: "builtins.bytes"
  }
  parameters {
    name: "r"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "s"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
