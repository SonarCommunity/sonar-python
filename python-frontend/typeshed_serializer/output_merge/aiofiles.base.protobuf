fully_qualified_name: "aiofiles.base"
classes {
  name: "AsyncBase"
  fully_qualified_name: "aiofiles.base.AsyncBase"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "aiofiles.base.AsyncBase.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "aiofiles.base.AsyncBase[aiofiles.base._T]"
        args {
          pretty_printed_name: "aiofiles.base._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "aiofiles.base.AsyncBase"
      }
    }
    parameters {
      name: "file"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "loop"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "executor"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__aiter__"
    fully_qualified_name: "aiofiles.base.AsyncBase.__aiter__"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,typing.Iterator[aiofiles.base._T]]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "typing.Iterator[aiofiles.base._T]"
        args {
          pretty_printed_name: "aiofiles.base._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterator"
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "aiofiles.base.AsyncBase[aiofiles.base._T]"
        args {
          pretty_printed_name: "aiofiles.base._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "aiofiles.base.AsyncBase"
      }
    }
    is_asynchronous: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__anext__"
    fully_qualified_name: "aiofiles.base.AsyncBase.__anext__"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,aiofiles.base._T]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "aiofiles.base._T"
        kind: TYPE_VAR
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "aiofiles.base.AsyncBase[aiofiles.base._T]"
        args {
          pretty_printed_name: "aiofiles.base._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "aiofiles.base.AsyncBase"
      }
    }
    is_asynchronous: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  is_generic: true
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "AiofilesContextManager"
  fully_qualified_name: "aiofiles.base.AiofilesContextManager"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "aiofiles.base.AiofilesContextManager.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "aiofiles.base.AiofilesContextManager[aiofiles.base._T_co,aiofiles.base._T_contra,aiofiles.base._V_co]"
        args {
          pretty_printed_name: "aiofiles.base._T_co"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "aiofiles.base._T_contra"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "aiofiles.base._V_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "aiofiles.base.AiofilesContextManager"
      }
    }
    parameters {
      name: "coro"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Coroutine[aiofiles.base._T_co,aiofiles.base._T_contra,aiofiles.base._V_co]"
        args {
          pretty_printed_name: "aiofiles.base._T_co"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "aiofiles.base._T_contra"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "aiofiles.base._V_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Coroutine"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "send"
    fully_qualified_name: "aiofiles.base.AiofilesContextManager.send"
    return_annotation {
      pretty_printed_name: "aiofiles.base._T_co"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "aiofiles.base.AiofilesContextManager[aiofiles.base._T_co,aiofiles.base._T_contra,aiofiles.base._V_co]"
        args {
          pretty_printed_name: "aiofiles.base._T_co"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "aiofiles.base._T_contra"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "aiofiles.base._V_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "aiofiles.base.AiofilesContextManager"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "aiofiles.base._T_contra"
        kind: TYPE_VAR
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "throw"
    fully_qualified_name: "aiofiles.base.AiofilesContextManager.throw"
    return_annotation {
      pretty_printed_name: "aiofiles.base._T_co"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "aiofiles.base.AiofilesContextManager[aiofiles.base._T_co,aiofiles.base._T_contra,aiofiles.base._V_co]"
        args {
          pretty_printed_name: "aiofiles.base._T_co"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "aiofiles.base._T_contra"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "aiofiles.base._V_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "aiofiles.base.AiofilesContextManager"
      }
    }
    parameters {
      name: "typ"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[builtins.BaseException]"
        kind: TYPE
        args {
          pretty_printed_name: "builtins.BaseException"
          fully_qualified_name: "builtins.BaseException"
        }
      }
    }
    parameters {
      name: "val"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.BaseException,builtins.object]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.BaseException"
          fully_qualified_name: "builtins.BaseException"
        }
        args {
          pretty_printed_name: "builtins.object"
          fully_qualified_name: "builtins.object"
        }
      }
      has_default: true
    }
    parameters {
      name: "tb"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[types.TracebackType,None]"
        kind: UNION
        args {
          pretty_printed_name: "types.TracebackType"
          fully_qualified_name: "types.TracebackType"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "close"
    fully_qualified_name: "aiofiles.base.AiofilesContextManager.close"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "aiofiles.base.AiofilesContextManager[aiofiles.base._T_co,aiofiles.base._T_contra,aiofiles.base._V_co]"
        args {
          pretty_printed_name: "aiofiles.base._T_co"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "aiofiles.base._T_contra"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "aiofiles.base._V_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "aiofiles.base.AiofilesContextManager"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "gi_frame"
    fully_qualified_name: "aiofiles.base.AiofilesContextManager.gi_frame"
    return_annotation {
      pretty_printed_name: "types.FrameType"
      fully_qualified_name: "types.FrameType"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "aiofiles.base.AiofilesContextManager[aiofiles.base._T_co,aiofiles.base._T_contra,aiofiles.base._V_co]"
        args {
          pretty_printed_name: "aiofiles.base._T_co"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "aiofiles.base._T_contra"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "aiofiles.base._V_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "aiofiles.base.AiofilesContextManager"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "gi_running"
    fully_qualified_name: "aiofiles.base.AiofilesContextManager.gi_running"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "aiofiles.base.AiofilesContextManager[aiofiles.base._T_co,aiofiles.base._T_contra,aiofiles.base._V_co]"
        args {
          pretty_printed_name: "aiofiles.base._T_co"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "aiofiles.base._T_contra"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "aiofiles.base._V_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "aiofiles.base.AiofilesContextManager"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "gi_code"
    fully_qualified_name: "aiofiles.base.AiofilesContextManager.gi_code"
    return_annotation {
      pretty_printed_name: "types.CodeType"
      fully_qualified_name: "types.CodeType"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "aiofiles.base.AiofilesContextManager[aiofiles.base._T_co,aiofiles.base._T_contra,aiofiles.base._V_co]"
        args {
          pretty_printed_name: "aiofiles.base._T_co"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "aiofiles.base._T_contra"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "aiofiles.base._V_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "aiofiles.base.AiofilesContextManager"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__next__"
    fully_qualified_name: "aiofiles.base.AiofilesContextManager.__next__"
    return_annotation {
      pretty_printed_name: "aiofiles.base._T_co"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "aiofiles.base.AiofilesContextManager[aiofiles.base._T_co,aiofiles.base._T_contra,aiofiles.base._V_co]"
        args {
          pretty_printed_name: "aiofiles.base._T_co"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "aiofiles.base._T_contra"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "aiofiles.base._V_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "aiofiles.base.AiofilesContextManager"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__iter__"
    fully_qualified_name: "aiofiles.base.AiofilesContextManager.__iter__"
    return_annotation {
      pretty_printed_name: "typing.AwaitableGenerator[typing.Coroutine[aiofiles.base._T_co,aiofiles.base._T_contra,aiofiles.base._V_co],None,Any,typing.Iterator[typing.Coroutine[aiofiles.base._T_co,aiofiles.base._T_contra,aiofiles.base._V_co]]]"
      args {
        pretty_printed_name: "typing.Coroutine[aiofiles.base._T_co,aiofiles.base._T_contra,aiofiles.base._V_co]"
        args {
          pretty_printed_name: "aiofiles.base._T_co"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "aiofiles.base._T_contra"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "aiofiles.base._V_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Coroutine"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "typing.Iterator[typing.Coroutine[aiofiles.base._T_co,aiofiles.base._T_contra,aiofiles.base._V_co]]"
        args {
          pretty_printed_name: "typing.Coroutine[aiofiles.base._T_co,aiofiles.base._T_contra,aiofiles.base._V_co]"
          args {
            pretty_printed_name: "aiofiles.base._T_co"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "aiofiles.base._T_contra"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "aiofiles.base._V_co"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Coroutine"
        }
        fully_qualified_name: "typing.Iterator"
      }
      fully_qualified_name: "typing.AwaitableGenerator"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "aiofiles.base.AiofilesContextManager[aiofiles.base._T_co,aiofiles.base._T_contra,aiofiles.base._V_co]"
        args {
          pretty_printed_name: "aiofiles.base._T_co"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "aiofiles.base._T_contra"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "aiofiles.base._V_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "aiofiles.base.AiofilesContextManager"
      }
    }
    has_decorators: true
    resolved_decorator_names: "coroutine"
    is_asynchronous: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__await__"
    fully_qualified_name: "aiofiles.base.AiofilesContextManager.__await__"
    return_annotation {
      pretty_printed_name: "typing.Generator[Any,None,aiofiles.base._V_co]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
      args {
        pretty_printed_name: "aiofiles.base._V_co"
        kind: TYPE_VAR
      }
      fully_qualified_name: "typing.Generator"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "aiofiles.base.AiofilesContextManager[aiofiles.base._T_co,aiofiles.base._T_contra,aiofiles.base._V_co]"
        args {
          pretty_printed_name: "aiofiles.base._T_co"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "aiofiles.base._T_contra"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "aiofiles.base._V_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "aiofiles.base.AiofilesContextManager"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__anext__"
    fully_qualified_name: "aiofiles.base.AiofilesContextManager.__anext__"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,aiofiles.base._V_co]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "aiofiles.base._V_co"
        kind: TYPE_VAR
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "aiofiles.base.AiofilesContextManager[aiofiles.base._T_co,aiofiles.base._T_contra,aiofiles.base._V_co]"
        args {
          pretty_printed_name: "aiofiles.base._T_co"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "aiofiles.base._T_contra"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "aiofiles.base._V_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "aiofiles.base.AiofilesContextManager"
      }
    }
    is_asynchronous: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__aenter__"
    fully_qualified_name: "aiofiles.base.AiofilesContextManager.__aenter__"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,aiofiles.base._V_co]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "aiofiles.base._V_co"
        kind: TYPE_VAR
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "aiofiles.base.AiofilesContextManager[aiofiles.base._T_co,aiofiles.base._T_contra,aiofiles.base._V_co]"
        args {
          pretty_printed_name: "aiofiles.base._T_co"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "aiofiles.base._T_contra"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "aiofiles.base._V_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "aiofiles.base.AiofilesContextManager"
      }
    }
    is_asynchronous: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__aexit__"
    fully_qualified_name: "aiofiles.base.AiofilesContextManager.__aexit__"
    return_annotation {
      pretty_printed_name: "typing.Coroutine[Any,Any,None]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
      fully_qualified_name: "typing.Coroutine"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "aiofiles.base.AiofilesContextManager[aiofiles.base._T_co,aiofiles.base._T_contra,aiofiles.base._V_co]"
        args {
          pretty_printed_name: "aiofiles.base._T_co"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "aiofiles.base._T_contra"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "aiofiles.base._V_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "aiofiles.base.AiofilesContextManager"
      }
    }
    parameters {
      name: "exc_type"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Type[builtins.BaseException],None]"
        kind: UNION
        args {
          pretty_printed_name: "Type[builtins.BaseException]"
          kind: TYPE
          args {
            pretty_printed_name: "builtins.BaseException"
            fully_qualified_name: "builtins.BaseException"
          }
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "exc_val"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.BaseException,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.BaseException"
          fully_qualified_name: "builtins.BaseException"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "exc_tb"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[types.TracebackType,None]"
        kind: UNION
        args {
          pretty_printed_name: "types.TracebackType"
          fully_qualified_name: "types.TracebackType"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    is_asynchronous: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  is_generic: true
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
