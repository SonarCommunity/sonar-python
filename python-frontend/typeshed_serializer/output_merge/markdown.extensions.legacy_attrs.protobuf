fully_qualified_name: "markdown.extensions.legacy_attrs"
classes {
  name: "LegacyAttrs"
  fully_qualified_name: "markdown.extensions.legacy_attrs.LegacyAttrs"
  super_classes: "markdown.treeprocessors.Treeprocessor"
  methods {
    name: "handleAttributes"
    fully_qualified_name: "markdown.extensions.legacy_attrs.LegacyAttrs.handleAttributes"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "el"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "txt"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "LegacyAttrExtension"
  fully_qualified_name: "markdown.extensions.legacy_attrs.LegacyAttrExtension"
  super_classes: "markdown.extensions.Extension"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "makeExtension"
  fully_qualified_name: "markdown.extensions.legacy_attrs.makeExtension"
  parameters {
    name: "kwargs"
    kind: VAR_KEYWORD
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "ATTR_RE"
  fully_qualified_name: "markdown.extensions.legacy_attrs.ATTR_RE"
  type_annotation {
    pretty_printed_name: "typing.Pattern[builtins.str]"
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    fully_qualified_name: "typing.Pattern"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
