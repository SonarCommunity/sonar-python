fully_qualified_name: "requests.adapters"
classes {
  name: "BaseAdapter"
  fully_qualified_name: "requests.adapters.BaseAdapter"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "requests.adapters.BaseAdapter.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "requests.adapters.BaseAdapter"
        fully_qualified_name: "requests.adapters.BaseAdapter"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "send"
    fully_qualified_name: "requests.adapters.BaseAdapter.send"
    return_annotation {
      pretty_printed_name: "requests.models.Response"
      fully_qualified_name: "requests.models.Response"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "requests.adapters.BaseAdapter"
        fully_qualified_name: "requests.adapters.BaseAdapter"
      }
    }
    parameters {
      name: "request"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "requests.models.PreparedRequest"
        fully_qualified_name: "requests.models.PreparedRequest"
      }
    }
    parameters {
      name: "stream"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    parameters {
      name: "timeout"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[None,builtins.float,Tuple[builtins.float,builtins.float],Tuple[builtins.float,None]]"
        kind: UNION
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        args {
          pretty_printed_name: "Tuple[builtins.float,builtins.float]"
          kind: TUPLE
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
        }
        args {
          pretty_printed_name: "Tuple[builtins.float,None]"
          kind: TUPLE
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      has_default: true
    }
    parameters {
      name: "verify"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.bool,builtins.str]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      has_default: true
    }
    parameters {
      name: "cert"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[None,builtins.bytes,builtins.str,typing.Container[Union[builtins.bytes,builtins.str]]]"
        kind: UNION
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "typing.Container[Union[builtins.bytes,builtins.str]]"
          args {
            pretty_printed_name: "Union[builtins.bytes,builtins.str]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          fully_qualified_name: "typing.Container"
        }
      }
      has_default: true
    }
    parameters {
      name: "proxies"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.Mapping[builtins.str,builtins.str],None]"
        kind: UNION
        args {
          pretty_printed_name: "typing.Mapping[builtins.str,builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "typing.Mapping"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "close"
    fully_qualified_name: "requests.adapters.BaseAdapter.close"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "requests.adapters.BaseAdapter"
        fully_qualified_name: "requests.adapters.BaseAdapter"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "HTTPAdapter"
  fully_qualified_name: "requests.adapters.HTTPAdapter"
  super_classes: "requests.adapters.BaseAdapter"
  methods {
    name: "__init__"
    fully_qualified_name: "requests.adapters.HTTPAdapter.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "requests.adapters.HTTPAdapter"
        fully_qualified_name: "requests.adapters.HTTPAdapter"
      }
    }
    parameters {
      name: "pool_connections"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    parameters {
      name: "pool_maxsize"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    parameters {
      name: "max_retries"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[requests.packages.urllib3.util.retry.Retry,builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "requests.packages.urllib3.util.retry.Retry"
          fully_qualified_name: "requests.packages.urllib3.util.retry.Retry"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "pool_block"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "init_poolmanager"
    fully_qualified_name: "requests.adapters.HTTPAdapter.init_poolmanager"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "connections"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "maxsize"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "block"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
    parameters {
      name: "pool_kwargs"
      kind: VAR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "proxy_manager_for"
    fully_qualified_name: "requests.adapters.HTTPAdapter.proxy_manager_for"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "proxy"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "proxy_kwargs"
      kind: VAR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "cert_verify"
    fully_qualified_name: "requests.adapters.HTTPAdapter.cert_verify"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "conn"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "url"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "verify"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "cert"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "build_response"
    fully_qualified_name: "requests.adapters.HTTPAdapter.build_response"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "req"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "resp"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "get_connection"
    fully_qualified_name: "requests.adapters.HTTPAdapter.get_connection"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "url"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "proxies"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "close"
    fully_qualified_name: "requests.adapters.HTTPAdapter.close"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "request_url"
    fully_qualified_name: "requests.adapters.HTTPAdapter.request_url"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "request"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "proxies"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "add_headers"
    fully_qualified_name: "requests.adapters.HTTPAdapter.add_headers"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "request"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "kwargs"
      kind: VAR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "proxy_headers"
    fully_qualified_name: "requests.adapters.HTTPAdapter.proxy_headers"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "proxy"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "send"
    fully_qualified_name: "requests.adapters.HTTPAdapter.send"
    return_annotation {
      pretty_printed_name: "requests.models.Response"
      fully_qualified_name: "requests.models.Response"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "requests.adapters.HTTPAdapter"
        fully_qualified_name: "requests.adapters.HTTPAdapter"
      }
    }
    parameters {
      name: "request"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "requests.models.PreparedRequest"
        fully_qualified_name: "requests.models.PreparedRequest"
      }
    }
    parameters {
      name: "stream"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    parameters {
      name: "timeout"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[None,builtins.float,Tuple[builtins.float,builtins.float],Tuple[builtins.float,None]]"
        kind: UNION
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        args {
          pretty_printed_name: "Tuple[builtins.float,builtins.float]"
          kind: TUPLE
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
        }
        args {
          pretty_printed_name: "Tuple[builtins.float,None]"
          kind: TUPLE
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      has_default: true
    }
    parameters {
      name: "verify"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.bool,builtins.str]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      has_default: true
    }
    parameters {
      name: "cert"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[None,builtins.bytes,builtins.str,typing.Container[Union[builtins.bytes,builtins.str]]]"
        kind: UNION
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "typing.Container[Union[builtins.bytes,builtins.str]]"
          args {
            pretty_printed_name: "Union[builtins.bytes,builtins.str]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          fully_qualified_name: "typing.Container"
        }
      }
      has_default: true
    }
    parameters {
      name: "proxies"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.Mapping[builtins.str,builtins.str],None]"
        kind: UNION
        args {
          pretty_printed_name: "typing.Mapping[builtins.str,builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "typing.Mapping"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "__attrs__"
    fully_qualified_name: "requests.adapters.HTTPAdapter.__attrs__"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "max_retries"
    fully_qualified_name: "requests.adapters.HTTPAdapter.max_retries"
    type_annotation {
      pretty_printed_name: "requests.packages.urllib3.util.retry.Retry"
      fully_qualified_name: "requests.packages.urllib3.util.retry.Retry"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "config"
    fully_qualified_name: "requests.adapters.HTTPAdapter.config"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "proxy_manager"
    fully_qualified_name: "requests.adapters.HTTPAdapter.proxy_manager"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "poolmanager"
    fully_qualified_name: "requests.adapters.HTTPAdapter.poolmanager"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
vars {
  name: "urllib3_exceptions"
  fully_qualified_name: "requests.packages.urllib3.exceptions"
  is_imported_module: true
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "proxy_from_url"
  fully_qualified_name: "requests.adapters.proxy_from_url"
  type_annotation {
    pretty_printed_name: "CallableType[builtins.function]"
    kind: CALLABLE
    args {
      pretty_printed_name: "builtins.function"
      fully_qualified_name: "builtins.function"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "DEFAULT_CA_BUNDLE_PATH"
  fully_qualified_name: "requests.adapters.DEFAULT_CA_BUNDLE_PATH"
  type_annotation {
    pretty_printed_name: "Any"
    kind: ANY
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "get_encoding_from_headers"
  fully_qualified_name: "requests.adapters.get_encoding_from_headers"
  type_annotation {
    pretty_printed_name: "Any"
    kind: ANY
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "prepend_scheme_if_needed"
  fully_qualified_name: "requests.adapters.prepend_scheme_if_needed"
  type_annotation {
    pretty_printed_name: "Any"
    kind: ANY
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "get_auth_from_url"
  fully_qualified_name: "requests.adapters.get_auth_from_url"
  type_annotation {
    pretty_printed_name: "Any"
    kind: ANY
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "urldefragauth"
  fully_qualified_name: "requests.adapters.urldefragauth"
  type_annotation {
    pretty_printed_name: "Any"
    kind: ANY
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "extract_cookies_to_jar"
  fully_qualified_name: "requests.adapters.extract_cookies_to_jar"
  type_annotation {
    pretty_printed_name: "CallableType[builtins.function]"
    kind: CALLABLE
    args {
      pretty_printed_name: "builtins.function"
      fully_qualified_name: "builtins.function"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "DEFAULT_POOLBLOCK"
  fully_qualified_name: "requests.adapters.DEFAULT_POOLBLOCK"
  type_annotation {
    pretty_printed_name: "builtins.bool"
    fully_qualified_name: "builtins.bool"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "DEFAULT_POOLSIZE"
  fully_qualified_name: "requests.adapters.DEFAULT_POOLSIZE"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "DEFAULT_RETRIES"
  fully_qualified_name: "requests.adapters.DEFAULT_RETRIES"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "DEFAULT_POOL_TIMEOUT"
  fully_qualified_name: "requests.adapters.DEFAULT_POOL_TIMEOUT"
  type_annotation {
    pretty_printed_name: "Union[builtins.float,None]"
    kind: UNION
    args {
      pretty_printed_name: "builtins.float"
      fully_qualified_name: "builtins.float"
    }
    args {
      pretty_printed_name: "None"
      kind: NONE
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
