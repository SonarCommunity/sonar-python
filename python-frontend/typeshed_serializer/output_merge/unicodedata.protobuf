fully_qualified_name: "unicodedata"
classes {
  name: "UCD"
  fully_qualified_name: "unicodedata.UCD"
  super_classes: "builtins.object"
  methods {
    name: "bidirectional"
    fully_qualified_name: "unicodedata.UCD.bidirectional"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "unicodedata.UCD"
        fully_qualified_name: "unicodedata.UCD"
      }
    }
    parameters {
      name: "__chr"
      type_annotation {
        pretty_printed_name: "builtins.unicode"
        fully_qualified_name: "builtins.unicode"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "category"
    fully_qualified_name: "unicodedata.UCD.category"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "unicodedata.UCD"
        fully_qualified_name: "unicodedata.UCD"
      }
    }
    parameters {
      name: "__chr"
      type_annotation {
        pretty_printed_name: "builtins.unicode"
        fully_qualified_name: "builtins.unicode"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "combining"
    fully_qualified_name: "unicodedata.UCD.combining"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "unicodedata.UCD"
        fully_qualified_name: "unicodedata.UCD"
      }
    }
    parameters {
      name: "__chr"
      type_annotation {
        pretty_printed_name: "builtins.unicode"
        fully_qualified_name: "builtins.unicode"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "decimal"
    fully_qualified_name: "unicodedata.UCD.decimal"
    return_annotation {
      pretty_printed_name: "Union[builtins.int,unicodedata._T]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "unicodedata._T"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "unicodedata.UCD"
        fully_qualified_name: "unicodedata.UCD"
      }
    }
    parameters {
      name: "__chr"
      type_annotation {
        pretty_printed_name: "builtins.unicode"
        fully_qualified_name: "builtins.unicode"
      }
    }
    parameters {
      name: "__default"
      type_annotation {
        pretty_printed_name: "unicodedata._T"
        kind: TYPE_VAR
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "decomposition"
    fully_qualified_name: "unicodedata.UCD.decomposition"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "unicodedata.UCD"
        fully_qualified_name: "unicodedata.UCD"
      }
    }
    parameters {
      name: "__chr"
      type_annotation {
        pretty_printed_name: "builtins.unicode"
        fully_qualified_name: "builtins.unicode"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "digit"
    fully_qualified_name: "unicodedata.UCD.digit"
    return_annotation {
      pretty_printed_name: "Union[builtins.int,unicodedata._T]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "unicodedata._T"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "unicodedata.UCD"
        fully_qualified_name: "unicodedata.UCD"
      }
    }
    parameters {
      name: "__chr"
      type_annotation {
        pretty_printed_name: "builtins.unicode"
        fully_qualified_name: "builtins.unicode"
      }
    }
    parameters {
      name: "__default"
      type_annotation {
        pretty_printed_name: "unicodedata._T"
        kind: TYPE_VAR
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "east_asian_width"
    fully_qualified_name: "unicodedata.UCD.east_asian_width"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "unicodedata.UCD"
        fully_qualified_name: "unicodedata.UCD"
      }
    }
    parameters {
      name: "__chr"
      type_annotation {
        pretty_printed_name: "builtins.unicode"
        fully_qualified_name: "builtins.unicode"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "lookup"
    fully_qualified_name: "unicodedata.UCD.lookup"
    return_annotation {
      pretty_printed_name: "builtins.unicode"
      fully_qualified_name: "builtins.unicode"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "unicodedata.UCD"
        fully_qualified_name: "unicodedata.UCD"
      }
    }
    parameters {
      name: "__name"
      type_annotation {
        pretty_printed_name: "Union[builtins.unicode,builtins.str]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.unicode"
          fully_qualified_name: "builtins.unicode"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
    }
    valid_for: "27"
  }
  methods {
    name: "mirrored"
    fully_qualified_name: "unicodedata.UCD.mirrored"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "unicodedata.UCD"
        fully_qualified_name: "unicodedata.UCD"
      }
    }
    parameters {
      name: "__chr"
      type_annotation {
        pretty_printed_name: "builtins.unicode"
        fully_qualified_name: "builtins.unicode"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "name"
    fully_qualified_name: "unicodedata.UCD.name"
    return_annotation {
      pretty_printed_name: "Union[builtins.unicode,unicodedata._T]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.unicode"
        fully_qualified_name: "builtins.unicode"
      }
      args {
        pretty_printed_name: "unicodedata._T"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "unicodedata.UCD"
        fully_qualified_name: "unicodedata.UCD"
      }
    }
    parameters {
      name: "__chr"
      type_annotation {
        pretty_printed_name: "builtins.unicode"
        fully_qualified_name: "builtins.unicode"
      }
    }
    parameters {
      name: "__default"
      type_annotation {
        pretty_printed_name: "unicodedata._T"
        kind: TYPE_VAR
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "normalize"
    fully_qualified_name: "unicodedata.UCD.normalize"
    return_annotation {
      pretty_printed_name: "builtins.unicode"
      fully_qualified_name: "builtins.unicode"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "unicodedata.UCD"
        fully_qualified_name: "unicodedata.UCD"
      }
    }
    parameters {
      name: "__form"
      type_annotation {
        pretty_printed_name: "builtins.unicode"
        fully_qualified_name: "builtins.unicode"
      }
    }
    parameters {
      name: "__unistr"
      type_annotation {
        pretty_printed_name: "builtins.unicode"
        fully_qualified_name: "builtins.unicode"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "numeric"
    fully_qualified_name: "unicodedata.UCD.numeric"
    return_annotation {
      pretty_printed_name: "Union[builtins.float,unicodedata._T]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
      args {
        pretty_printed_name: "unicodedata._T"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "unicodedata.UCD"
        fully_qualified_name: "unicodedata.UCD"
      }
    }
    parameters {
      name: "__chr"
      type_annotation {
        pretty_printed_name: "builtins.unicode"
        fully_qualified_name: "builtins.unicode"
      }
    }
    parameters {
      name: "__default"
      type_annotation {
        pretty_printed_name: "unicodedata._T"
        kind: TYPE_VAR
      }
      has_default: true
    }
    valid_for: "27"
  }
  valid_for: "27"
  attributes {
    name: "unidata_version"
    fully_qualified_name: "unicodedata.UCD.unidata_version"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "27"
  }
}
classes {
  name: "UCD"
  fully_qualified_name: "unicodedata.UCD"
  super_classes: "builtins.object"
  methods {
    name: "bidirectional"
    fully_qualified_name: "unicodedata.UCD.bidirectional"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "unicodedata.UCD"
        fully_qualified_name: "unicodedata.UCD"
      }
    }
    parameters {
      name: "__chr"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "category"
    fully_qualified_name: "unicodedata.UCD.category"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "unicodedata.UCD"
        fully_qualified_name: "unicodedata.UCD"
      }
    }
    parameters {
      name: "__chr"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "combining"
    fully_qualified_name: "unicodedata.UCD.combining"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "unicodedata.UCD"
        fully_qualified_name: "unicodedata.UCD"
      }
    }
    parameters {
      name: "__chr"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "decomposition"
    fully_qualified_name: "unicodedata.UCD.decomposition"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "unicodedata.UCD"
        fully_qualified_name: "unicodedata.UCD"
      }
    }
    parameters {
      name: "__chr"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "east_asian_width"
    fully_qualified_name: "unicodedata.UCD.east_asian_width"
    return_annotation {
      pretty_printed_name: "UnboundType[_EastAsianWidth]"
      kind: UNBOUND
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "unicodedata.UCD"
        fully_qualified_name: "unicodedata.UCD"
      }
    }
    parameters {
      name: "__chr"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "lookup"
    fully_qualified_name: "unicodedata.UCD.lookup"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "unicodedata.UCD"
        fully_qualified_name: "unicodedata.UCD"
      }
    }
    parameters {
      name: "__name"
      type_annotation {
        pretty_printed_name: "Union[builtins.str,UnboundType[ReadOnlyBuffer]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "UnboundType[ReadOnlyBuffer]"
          kind: UNBOUND
        }
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "mirrored"
    fully_qualified_name: "unicodedata.UCD.mirrored"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "unicodedata.UCD"
        fully_qualified_name: "unicodedata.UCD"
      }
    }
    parameters {
      name: "__chr"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "normalize"
    fully_qualified_name: "unicodedata.UCD.normalize"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "unicodedata.UCD"
        fully_qualified_name: "unicodedata.UCD"
      }
    }
    parameters {
      name: "__form"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "__unistr"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "is_normalized"
    fully_qualified_name: "unicodedata.UCD.is_normalized"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "unicodedata.UCD"
        fully_qualified_name: "unicodedata.UCD"
      }
    }
    parameters {
      name: "__form"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "__unistr"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "decimal"
    fullname: "unicodedata.UCD.decimal"
    definitions {
      name: "decimal"
      fully_qualified_name: "unicodedata.UCD.decimal"
      return_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "unicodedata.UCD"
          fully_qualified_name: "unicodedata.UCD"
        }
      }
      parameters {
        name: "__chr"
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "decimal"
      fully_qualified_name: "unicodedata.UCD.decimal"
      return_annotation {
        pretty_printed_name: "Union[builtins.int,unicodedata._T]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "unicodedata._T"
          kind: TYPE_VAR
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "unicodedata.UCD"
          fully_qualified_name: "unicodedata.UCD"
        }
      }
      parameters {
        name: "__chr"
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      parameters {
        name: "__default"
        type_annotation {
          pretty_printed_name: "unicodedata._T"
          kind: TYPE_VAR
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "digit"
    fullname: "unicodedata.UCD.digit"
    definitions {
      name: "digit"
      fully_qualified_name: "unicodedata.UCD.digit"
      return_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "unicodedata.UCD"
          fully_qualified_name: "unicodedata.UCD"
        }
      }
      parameters {
        name: "__chr"
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "digit"
      fully_qualified_name: "unicodedata.UCD.digit"
      return_annotation {
        pretty_printed_name: "Union[builtins.int,unicodedata._T]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "unicodedata._T"
          kind: TYPE_VAR
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "unicodedata.UCD"
          fully_qualified_name: "unicodedata.UCD"
        }
      }
      parameters {
        name: "__chr"
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      parameters {
        name: "__default"
        type_annotation {
          pretty_printed_name: "unicodedata._T"
          kind: TYPE_VAR
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "name"
    fullname: "unicodedata.UCD.name"
    definitions {
      name: "name"
      fully_qualified_name: "unicodedata.UCD.name"
      return_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "unicodedata.UCD"
          fully_qualified_name: "unicodedata.UCD"
        }
      }
      parameters {
        name: "__chr"
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "name"
      fully_qualified_name: "unicodedata.UCD.name"
      return_annotation {
        pretty_printed_name: "Union[builtins.str,unicodedata._T]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "unicodedata._T"
          kind: TYPE_VAR
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "unicodedata.UCD"
          fully_qualified_name: "unicodedata.UCD"
        }
      }
      parameters {
        name: "__chr"
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      parameters {
        name: "__default"
        type_annotation {
          pretty_printed_name: "unicodedata._T"
          kind: TYPE_VAR
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "numeric"
    fullname: "unicodedata.UCD.numeric"
    definitions {
      name: "numeric"
      fully_qualified_name: "unicodedata.UCD.numeric"
      return_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "unicodedata.UCD"
          fully_qualified_name: "unicodedata.UCD"
        }
      }
      parameters {
        name: "__chr"
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "numeric"
      fully_qualified_name: "unicodedata.UCD.numeric"
      return_annotation {
        pretty_printed_name: "Union[builtins.float,unicodedata._T]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        args {
          pretty_printed_name: "unicodedata._T"
          kind: TYPE_VAR
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "unicodedata.UCD"
          fully_qualified_name: "unicodedata.UCD"
        }
      }
      parameters {
        name: "__chr"
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      parameters {
        name: "__default"
        type_annotation {
          pretty_printed_name: "unicodedata._T"
          kind: TYPE_VAR
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  has_decorators: true
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "unidata_version"
    fully_qualified_name: "unicodedata.UCD.unidata_version"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
functions {
  name: "bidirectional"
  fully_qualified_name: "unicodedata.bidirectional"
  return_annotation {
    pretty_printed_name: "builtins.unicode"
    fully_qualified_name: "builtins.unicode"
  }
  parameters {
    name: "__chr"
    type_annotation {
      pretty_printed_name: "builtins.unicode"
      fully_qualified_name: "builtins.unicode"
    }
  }
  valid_for: "27"
}
functions {
  name: "bidirectional"
  fully_qualified_name: "unicodedata.bidirectional"
  return_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
  parameters {
    name: "__chr"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "category"
  fully_qualified_name: "unicodedata.category"
  return_annotation {
    pretty_printed_name: "builtins.unicode"
    fully_qualified_name: "builtins.unicode"
  }
  parameters {
    name: "__chr"
    type_annotation {
      pretty_printed_name: "builtins.unicode"
      fully_qualified_name: "builtins.unicode"
    }
  }
  valid_for: "27"
}
functions {
  name: "category"
  fully_qualified_name: "unicodedata.category"
  return_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
  parameters {
    name: "__chr"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "combining"
  fully_qualified_name: "unicodedata.combining"
  return_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
  parameters {
    name: "__chr"
    type_annotation {
      pretty_printed_name: "builtins.unicode"
      fully_qualified_name: "builtins.unicode"
    }
  }
  valid_for: "27"
}
functions {
  name: "combining"
  fully_qualified_name: "unicodedata.combining"
  return_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
  parameters {
    name: "__chr"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "decimal"
  fully_qualified_name: "unicodedata.decimal"
  return_annotation {
    pretty_printed_name: "Union[builtins.int,unicodedata._T]"
    kind: UNION
    args {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    args {
      pretty_printed_name: "unicodedata._T"
      kind: TYPE_VAR
    }
  }
  parameters {
    name: "__chr"
    type_annotation {
      pretty_printed_name: "builtins.unicode"
      fully_qualified_name: "builtins.unicode"
    }
  }
  parameters {
    name: "__default"
    type_annotation {
      pretty_printed_name: "unicodedata._T"
      kind: TYPE_VAR
    }
    has_default: true
  }
  valid_for: "27"
}
functions {
  name: "decomposition"
  fully_qualified_name: "unicodedata.decomposition"
  return_annotation {
    pretty_printed_name: "builtins.unicode"
    fully_qualified_name: "builtins.unicode"
  }
  parameters {
    name: "__chr"
    type_annotation {
      pretty_printed_name: "builtins.unicode"
      fully_qualified_name: "builtins.unicode"
    }
  }
  valid_for: "27"
}
functions {
  name: "decomposition"
  fully_qualified_name: "unicodedata.decomposition"
  return_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
  parameters {
    name: "__chr"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "digit"
  fully_qualified_name: "unicodedata.digit"
  return_annotation {
    pretty_printed_name: "Union[builtins.int,unicodedata._T]"
    kind: UNION
    args {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    args {
      pretty_printed_name: "unicodedata._T"
      kind: TYPE_VAR
    }
  }
  parameters {
    name: "__chr"
    type_annotation {
      pretty_printed_name: "builtins.unicode"
      fully_qualified_name: "builtins.unicode"
    }
  }
  parameters {
    name: "__default"
    type_annotation {
      pretty_printed_name: "unicodedata._T"
      kind: TYPE_VAR
    }
    has_default: true
  }
  valid_for: "27"
}
functions {
  name: "east_asian_width"
  fully_qualified_name: "unicodedata.east_asian_width"
  return_annotation {
    pretty_printed_name: "builtins.unicode"
    fully_qualified_name: "builtins.unicode"
  }
  parameters {
    name: "__chr"
    type_annotation {
      pretty_printed_name: "builtins.unicode"
      fully_qualified_name: "builtins.unicode"
    }
  }
  valid_for: "27"
}
functions {
  name: "east_asian_width"
  fully_qualified_name: "unicodedata.east_asian_width"
  return_annotation {
    pretty_printed_name: "UnboundType[_EastAsianWidth]"
    kind: UNBOUND
  }
  parameters {
    name: "__chr"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "lookup"
  fully_qualified_name: "unicodedata.lookup"
  return_annotation {
    pretty_printed_name: "builtins.unicode"
    fully_qualified_name: "builtins.unicode"
  }
  parameters {
    name: "__name"
    type_annotation {
      pretty_printed_name: "Union[builtins.unicode,builtins.str]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.unicode"
        fully_qualified_name: "builtins.unicode"
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  valid_for: "27"
}
functions {
  name: "lookup"
  fully_qualified_name: "unicodedata.lookup"
  return_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
  parameters {
    name: "__name"
    type_annotation {
      pretty_printed_name: "Union[builtins.str,UnboundType[ReadOnlyBuffer]]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "UnboundType[ReadOnlyBuffer]"
        kind: UNBOUND
      }
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "mirrored"
  fully_qualified_name: "unicodedata.mirrored"
  return_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
  parameters {
    name: "__chr"
    type_annotation {
      pretty_printed_name: "builtins.unicode"
      fully_qualified_name: "builtins.unicode"
    }
  }
  valid_for: "27"
}
functions {
  name: "mirrored"
  fully_qualified_name: "unicodedata.mirrored"
  return_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
  parameters {
    name: "__chr"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "name"
  fully_qualified_name: "unicodedata.name"
  return_annotation {
    pretty_printed_name: "Union[builtins.unicode,unicodedata._T]"
    kind: UNION
    args {
      pretty_printed_name: "builtins.unicode"
      fully_qualified_name: "builtins.unicode"
    }
    args {
      pretty_printed_name: "unicodedata._T"
      kind: TYPE_VAR
    }
  }
  parameters {
    name: "__chr"
    type_annotation {
      pretty_printed_name: "builtins.unicode"
      fully_qualified_name: "builtins.unicode"
    }
  }
  parameters {
    name: "__default"
    type_annotation {
      pretty_printed_name: "unicodedata._T"
      kind: TYPE_VAR
    }
    has_default: true
  }
  valid_for: "27"
}
functions {
  name: "normalize"
  fully_qualified_name: "unicodedata.normalize"
  return_annotation {
    pretty_printed_name: "builtins.unicode"
    fully_qualified_name: "builtins.unicode"
  }
  parameters {
    name: "__form"
    type_annotation {
      pretty_printed_name: "builtins.unicode"
      fully_qualified_name: "builtins.unicode"
    }
  }
  parameters {
    name: "__unistr"
    type_annotation {
      pretty_printed_name: "builtins.unicode"
      fully_qualified_name: "builtins.unicode"
    }
  }
  valid_for: "27"
}
functions {
  name: "normalize"
  fully_qualified_name: "unicodedata.normalize"
  return_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
  parameters {
    name: "__form"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  parameters {
    name: "__unistr"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "numeric"
  fully_qualified_name: "unicodedata.numeric"
  return_annotation {
    pretty_printed_name: "Union[builtins.float,unicodedata._T]"
    kind: UNION
    args {
      pretty_printed_name: "builtins.float"
      fully_qualified_name: "builtins.float"
    }
    args {
      pretty_printed_name: "unicodedata._T"
      kind: TYPE_VAR
    }
  }
  parameters {
    name: "__chr"
    type_annotation {
      pretty_printed_name: "builtins.unicode"
      fully_qualified_name: "builtins.unicode"
    }
  }
  parameters {
    name: "__default"
    type_annotation {
      pretty_printed_name: "unicodedata._T"
      kind: TYPE_VAR
    }
    has_default: true
  }
  valid_for: "27"
}
functions {
  name: "is_normalized"
  fully_qualified_name: "unicodedata.is_normalized"
  return_annotation {
    pretty_printed_name: "builtins.bool"
    fully_qualified_name: "builtins.bool"
  }
  parameters {
    name: "__form"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  parameters {
    name: "__unistr"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
overloaded_functions {
  name: "decimal"
  fullname: "unicodedata.decimal"
  definitions {
    name: "decimal"
    fully_qualified_name: "unicodedata.decimal"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "__chr"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "decimal"
    fully_qualified_name: "unicodedata.decimal"
    return_annotation {
      pretty_printed_name: "Union[builtins.int,unicodedata._T]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "unicodedata._T"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "__chr"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "__default"
      type_annotation {
        pretty_printed_name: "unicodedata._T"
        kind: TYPE_VAR
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
overloaded_functions {
  name: "digit"
  fullname: "unicodedata.digit"
  definitions {
    name: "digit"
    fully_qualified_name: "unicodedata.digit"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "__chr"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "digit"
    fully_qualified_name: "unicodedata.digit"
    return_annotation {
      pretty_printed_name: "Union[builtins.int,unicodedata._T]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "unicodedata._T"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "__chr"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "__default"
      type_annotation {
        pretty_printed_name: "unicodedata._T"
        kind: TYPE_VAR
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
overloaded_functions {
  name: "name"
  fullname: "unicodedata.name"
  definitions {
    name: "name"
    fully_qualified_name: "unicodedata.name"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "__chr"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "name"
    fully_qualified_name: "unicodedata.name"
    return_annotation {
      pretty_printed_name: "Union[builtins.str,unicodedata._T]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "unicodedata._T"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "__chr"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "__default"
      type_annotation {
        pretty_printed_name: "unicodedata._T"
        kind: TYPE_VAR
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
overloaded_functions {
  name: "numeric"
  fullname: "unicodedata.numeric"
  definitions {
    name: "numeric"
    fully_qualified_name: "unicodedata.numeric"
    return_annotation {
      pretty_printed_name: "builtins.float"
      fully_qualified_name: "builtins.float"
    }
    parameters {
      name: "__chr"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "numeric"
    fully_qualified_name: "unicodedata.numeric"
    return_annotation {
      pretty_printed_name: "Union[builtins.float,unicodedata._T]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
      args {
        pretty_printed_name: "unicodedata._T"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "__chr"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "__default"
      type_annotation {
        pretty_printed_name: "unicodedata._T"
        kind: TYPE_VAR
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "ucd_3_2_0"
  fully_qualified_name: "unicodedata.ucd_3_2_0"
  type_annotation {
    pretty_printed_name: "unicodedata.UCD"
    fully_qualified_name: "unicodedata.UCD"
  }
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "ucnhash_CAPI"
  fully_qualified_name: "unicodedata.ucnhash_CAPI"
  type_annotation {
    pretty_printed_name: "Any"
    kind: ANY
  }
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
}
vars {
  name: "unidata_version"
  fully_qualified_name: "unicodedata.unidata_version"
  type_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
  valid_for: "27"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "_EastAsianWidth"
  fully_qualified_name: "unicodedata._EastAsianWidth"
  type_annotation {
    pretty_printed_name: "UnboundType[TypeAlias]"
    kind: UNBOUND
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
