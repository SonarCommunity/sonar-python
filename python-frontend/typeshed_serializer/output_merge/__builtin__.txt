fully_qualified_name: "__builtin__"
classes {
  name: "_SupportsIndex"
  fully_qualified_name: "__builtin__._SupportsIndex"
  super_classes: "builtins.object"
  methods {
    name: "__index__"
    fully_qualified_name: "__builtin__._SupportsIndex.__index__"
    return_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__._SupportsIndex"
        fully_qualified_name: "__builtin__._SupportsIndex"
      }
    }
    valid_for: "27"
  }
  is_protocol: true
  valid_for: "27"
}
classes {
  name: "_SupportsTrunc"
  fully_qualified_name: "__builtin__._SupportsTrunc"
  super_classes: "builtins.object"
  methods {
    name: "__trunc__"
    fully_qualified_name: "__builtin__._SupportsTrunc.__trunc__"
    return_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__._SupportsTrunc"
        fully_qualified_name: "__builtin__._SupportsTrunc"
      }
    }
    valid_for: "27"
  }
  is_protocol: true
  valid_for: "27"
}
classes {
  name: "object"
  fully_qualified_name: "__builtin__.object"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "__builtin__.object.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.object"
        fully_qualified_name: "__builtin__.object"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__new__"
    fully_qualified_name: "__builtin__.object.__new__"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[__builtin__.object]"
        kind: TYPE
        args {
          pretty_printed_name: "__builtin__.object"
          fully_qualified_name: "__builtin__.object"
        }
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__setattr__"
    fully_qualified_name: "__builtin__.object.__setattr__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.object"
        fully_qualified_name: "__builtin__.object"
      }
    }
    parameters {
      name: "name"
      type_annotation {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
    }
    parameters {
      name: "value"
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__eq__"
    fully_qualified_name: "__builtin__.object.__eq__"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.object"
        fully_qualified_name: "__builtin__.object"
      }
    }
    parameters {
      name: "o"
      type_annotation {
        pretty_printed_name: "__builtin__.object"
        fully_qualified_name: "__builtin__.object"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__ne__"
    fully_qualified_name: "__builtin__.object.__ne__"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.object"
        fully_qualified_name: "__builtin__.object"
      }
    }
    parameters {
      name: "o"
      type_annotation {
        pretty_printed_name: "__builtin__.object"
        fully_qualified_name: "__builtin__.object"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__str__"
    fully_qualified_name: "__builtin__.object.__str__"
    return_annotation {
      pretty_printed_name: "__builtin__.str"
      fully_qualified_name: "__builtin__.str"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.object"
        fully_qualified_name: "__builtin__.object"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__repr__"
    fully_qualified_name: "__builtin__.object.__repr__"
    return_annotation {
      pretty_printed_name: "__builtin__.str"
      fully_qualified_name: "__builtin__.str"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.object"
        fully_qualified_name: "__builtin__.object"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__hash__"
    fully_qualified_name: "__builtin__.object.__hash__"
    return_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.object"
        fully_qualified_name: "__builtin__.object"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__format__"
    fully_qualified_name: "__builtin__.object.__format__"
    return_annotation {
      pretty_printed_name: "__builtin__.str"
      fully_qualified_name: "__builtin__.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.object"
        fully_qualified_name: "__builtin__.object"
      }
    }
    parameters {
      name: "format_spec"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__getattribute__"
    fully_qualified_name: "__builtin__.object.__getattribute__"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.object"
        fully_qualified_name: "__builtin__.object"
      }
    }
    parameters {
      name: "name"
      type_annotation {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__delattr__"
    fully_qualified_name: "__builtin__.object.__delattr__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.object"
        fully_qualified_name: "__builtin__.object"
      }
    }
    parameters {
      name: "name"
      type_annotation {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__sizeof__"
    fully_qualified_name: "__builtin__.object.__sizeof__"
    return_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.object"
        fully_qualified_name: "__builtin__.object"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__reduce__"
    fully_qualified_name: "__builtin__.object.__reduce__"
    return_annotation {
      pretty_printed_name: "Union[__builtin__.str,builtins.tuple[Any]]"
      kind: UNION
      args {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
      args {
        pretty_printed_name: "builtins.tuple[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "builtins.tuple"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.object"
        fully_qualified_name: "__builtin__.object"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__reduce_ex__"
    fully_qualified_name: "__builtin__.object.__reduce_ex__"
    return_annotation {
      pretty_printed_name: "Union[__builtin__.str,builtins.tuple[Any]]"
      kind: UNION
      args {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
      args {
        pretty_printed_name: "builtins.tuple[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "builtins.tuple"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.object"
        fully_qualified_name: "__builtin__.object"
      }
    }
    parameters {
      name: "protocol"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    valid_for: "27"
  }
  overloaded_methods {
    name: "__class__"
    fullname: "__builtin__.object.__class__"
    definitions {
      name: "__class__"
      fully_qualified_name: "__builtin__.object.__class__"
      return_annotation {
        pretty_printed_name: "Type[__builtin__._T]"
        kind: TYPE
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
      }
      has_decorators: true
      resolved_decorator_names: "property"
    }
    definitions {
      name: "__class__"
      fully_qualified_name: "__builtin__.object.__class__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "__builtin__.object"
          fully_qualified_name: "__builtin__.object"
        }
      }
      parameters {
        name: "__type"
        type_annotation {
          pretty_printed_name: "Type[__builtin__.object]"
          kind: TYPE
          args {
            pretty_printed_name: "__builtin__.object"
            fully_qualified_name: "__builtin__.object"
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "__class__.setter"
    }
    valid_for: "27"
  }
  valid_for: "27"
  attributes {
    name: "__dict__"
    fully_qualified_name: "__builtin__.object.__dict__"
    type_annotation {
      pretty_printed_name: "builtins.dict[builtins.str,Any]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "builtins.dict"
    }
    valid_for: "27"
  }
  attributes {
    name: "__slots__"
    fully_qualified_name: "__builtin__.object.__slots__"
    type_annotation {
      pretty_printed_name: "Union[builtins.unicode,typing.Iterable[builtins.unicode]]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.unicode"
        fully_qualified_name: "builtins.unicode"
      }
      args {
        pretty_printed_name: "typing.Iterable[builtins.unicode]"
        args {
          pretty_printed_name: "builtins.unicode"
          fully_qualified_name: "builtins.unicode"
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "27"
  }
  attributes {
    name: "__module__"
    fully_qualified_name: "__builtin__.object.__module__"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "27"
  }
}
classes {
  name: "staticmethod"
  fully_qualified_name: "__builtin__.staticmethod"
  super_classes: "__builtin__.object"
  methods {
    name: "__init__"
    fully_qualified_name: "__builtin__.staticmethod.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.staticmethod"
        fully_qualified_name: "__builtin__.staticmethod"
      }
    }
    parameters {
      name: "f"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__new__"
    fully_qualified_name: "__builtin__.staticmethod.__new__"
    return_annotation {
      pretty_printed_name: "__builtin__._T"
      kind: TYPE_VAR
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[__builtin__._T]"
        kind: TYPE
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "kwargs"
      kind: VAR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__get__"
    fully_qualified_name: "__builtin__.staticmethod.__get__"
    return_annotation {
      pretty_printed_name: "CallableType[builtins.function]"
      kind: CALLABLE
      args {
        pretty_printed_name: "builtins.function"
        fully_qualified_name: "builtins.function"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.staticmethod"
        fully_qualified_name: "__builtin__.staticmethod"
      }
    }
    parameters {
      name: "obj"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__._T"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "type"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Type[__builtin__._T],None]"
        kind: UNION
        args {
          pretty_printed_name: "Type[__builtin__._T]"
          kind: TYPE
          args {
            pretty_printed_name: "__builtin__._T"
            kind: TYPE_VAR
          }
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "27"
  }
  valid_for: "27"
  attributes {
    name: "__func__"
    fully_qualified_name: "__builtin__.staticmethod.__func__"
    type_annotation {
      pretty_printed_name: "CallableType[builtins.function]"
      kind: CALLABLE
      args {
        pretty_printed_name: "builtins.function"
        fully_qualified_name: "builtins.function"
      }
    }
    valid_for: "27"
  }
}
classes {
  name: "classmethod"
  fully_qualified_name: "__builtin__.classmethod"
  super_classes: "__builtin__.object"
  methods {
    name: "__init__"
    fully_qualified_name: "__builtin__.classmethod.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.classmethod"
        fully_qualified_name: "__builtin__.classmethod"
      }
    }
    parameters {
      name: "f"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__new__"
    fully_qualified_name: "__builtin__.classmethod.__new__"
    return_annotation {
      pretty_printed_name: "__builtin__._T"
      kind: TYPE_VAR
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[__builtin__._T]"
        kind: TYPE
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "kwargs"
      kind: VAR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__get__"
    fully_qualified_name: "__builtin__.classmethod.__get__"
    return_annotation {
      pretty_printed_name: "CallableType[builtins.function]"
      kind: CALLABLE
      args {
        pretty_printed_name: "builtins.function"
        fully_qualified_name: "builtins.function"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.classmethod"
        fully_qualified_name: "__builtin__.classmethod"
      }
    }
    parameters {
      name: "obj"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__._T"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "type"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Type[__builtin__._T],None]"
        kind: UNION
        args {
          pretty_printed_name: "Type[__builtin__._T]"
          kind: TYPE
          args {
            pretty_printed_name: "__builtin__._T"
            kind: TYPE_VAR
          }
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "27"
  }
  valid_for: "27"
  attributes {
    name: "__func__"
    fully_qualified_name: "__builtin__.classmethod.__func__"
    type_annotation {
      pretty_printed_name: "CallableType[builtins.function]"
      kind: CALLABLE
      args {
        pretty_printed_name: "builtins.function"
        fully_qualified_name: "builtins.function"
      }
    }
    valid_for: "27"
  }
}
classes {
  name: "type"
  fully_qualified_name: "__builtin__.type"
  super_classes: "__builtin__.object"
  methods {
    name: "__call__"
    fully_qualified_name: "__builtin__.type.__call__"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.type"
        fully_qualified_name: "__builtin__.type"
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "kwds"
      kind: VAR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__subclasses__"
    fully_qualified_name: "__builtin__.type.__subclasses__"
    return_annotation {
      pretty_printed_name: "builtins.list[__builtin__._TT]"
      args {
        pretty_printed_name: "__builtin__._TT"
        kind: TYPE_VAR
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__._TT"
        kind: TYPE_VAR
      }
    }
    valid_for: "27"
  }
  methods {
    name: "mro"
    fully_qualified_name: "__builtin__.type.mro"
    return_annotation {
      pretty_printed_name: "builtins.list[__builtin__.type]"
      args {
        pretty_printed_name: "__builtin__.type"
        fully_qualified_name: "__builtin__.type"
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.type"
        fully_qualified_name: "__builtin__.type"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__instancecheck__"
    fully_qualified_name: "__builtin__.type.__instancecheck__"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.type"
        fully_qualified_name: "__builtin__.type"
      }
    }
    parameters {
      name: "instance"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__subclasscheck__"
    fully_qualified_name: "__builtin__.type.__subclasscheck__"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.type"
        fully_qualified_name: "__builtin__.type"
      }
    }
    parameters {
      name: "subclass"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.type"
        fully_qualified_name: "__builtin__.type"
      }
    }
    valid_for: "27"
  }
  overloaded_methods {
    name: "__init__"
    fullname: "__builtin__.type.__init__"
    definitions {
      name: "__init__"
      fully_qualified_name: "__builtin__.type.__init__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "__builtin__.type"
          fully_qualified_name: "__builtin__.type"
        }
      }
      parameters {
        name: "o"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "__builtin__.object"
          fully_qualified_name: "__builtin__.object"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__init__"
      fully_qualified_name: "__builtin__.type.__init__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "__builtin__.type"
          fully_qualified_name: "__builtin__.type"
        }
      }
      parameters {
        name: "name"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "__builtin__.str"
          fully_qualified_name: "__builtin__.str"
        }
      }
      parameters {
        name: "bases"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.tuple[__builtin__.type]"
          args {
            pretty_printed_name: "__builtin__.type"
            fully_qualified_name: "__builtin__.type"
          }
          fully_qualified_name: "builtins.tuple"
        }
      }
      parameters {
        name: "dict"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.dict[__builtin__.str,Any]"
          args {
            pretty_printed_name: "__builtin__.str"
            fully_qualified_name: "__builtin__.str"
          }
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "builtins.dict"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "27"
  }
  overloaded_methods {
    name: "__new__"
    fullname: "__builtin__.type.__new__"
    definitions {
      name: "__new__"
      fully_qualified_name: "__builtin__.type.__new__"
      return_annotation {
        pretty_printed_name: "__builtin__.type"
        fully_qualified_name: "__builtin__.type"
      }
      parameters {
        name: "cls"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Type[__builtin__.type]"
          kind: TYPE
          args {
            pretty_printed_name: "__builtin__.type"
            fully_qualified_name: "__builtin__.type"
          }
        }
      }
      parameters {
        name: "o"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "__builtin__.object"
          fully_qualified_name: "__builtin__.object"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__new__"
      fully_qualified_name: "__builtin__.type.__new__"
      return_annotation {
        pretty_printed_name: "__builtin__.type"
        fully_qualified_name: "__builtin__.type"
      }
      parameters {
        name: "cls"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Type[__builtin__.type]"
          kind: TYPE
          args {
            pretty_printed_name: "__builtin__.type"
            fully_qualified_name: "__builtin__.type"
          }
        }
      }
      parameters {
        name: "name"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "__builtin__.str"
          fully_qualified_name: "__builtin__.str"
        }
      }
      parameters {
        name: "bases"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.tuple[__builtin__.type]"
          args {
            pretty_printed_name: "__builtin__.type"
            fully_qualified_name: "__builtin__.type"
          }
          fully_qualified_name: "builtins.tuple"
        }
      }
      parameters {
        name: "namespace"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.dict[__builtin__.str,Any]"
          args {
            pretty_printed_name: "__builtin__.str"
            fully_qualified_name: "__builtin__.str"
          }
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "builtins.dict"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "27"
  }
  valid_for: "27"
  attributes {
    name: "__base__"
    fully_qualified_name: "__builtin__.type.__base__"
    type_annotation {
      pretty_printed_name: "__builtin__.type"
      fully_qualified_name: "__builtin__.type"
    }
    valid_for: "27"
  }
  attributes {
    name: "__bases__"
    fully_qualified_name: "__builtin__.type.__bases__"
    type_annotation {
      pretty_printed_name: "builtins.tuple[__builtin__.type]"
      args {
        pretty_printed_name: "__builtin__.type"
        fully_qualified_name: "__builtin__.type"
      }
      fully_qualified_name: "builtins.tuple"
    }
    valid_for: "27"
  }
  attributes {
    name: "__basicsize__"
    fully_qualified_name: "__builtin__.type.__basicsize__"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "27"
  }
  attributes {
    name: "__dict__"
    fully_qualified_name: "__builtin__.type.__dict__"
    type_annotation {
      pretty_printed_name: "builtins.dict[builtins.str,Any]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "builtins.dict"
    }
    valid_for: "27"
  }
  attributes {
    name: "__dictoffset__"
    fully_qualified_name: "__builtin__.type.__dictoffset__"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "27"
  }
  attributes {
    name: "__flags__"
    fully_qualified_name: "__builtin__.type.__flags__"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "27"
  }
  attributes {
    name: "__itemsize__"
    fully_qualified_name: "__builtin__.type.__itemsize__"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "27"
  }
  attributes {
    name: "__module__"
    fully_qualified_name: "__builtin__.type.__module__"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "27"
  }
  attributes {
    name: "__mro__"
    fully_qualified_name: "__builtin__.type.__mro__"
    type_annotation {
      pretty_printed_name: "builtins.tuple[__builtin__.type]"
      args {
        pretty_printed_name: "__builtin__.type"
        fully_qualified_name: "__builtin__.type"
      }
      fully_qualified_name: "builtins.tuple"
    }
    valid_for: "27"
  }
  attributes {
    name: "__weakrefoffset__"
    fully_qualified_name: "__builtin__.type.__weakrefoffset__"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "27"
  }
}
classes {
  name: "super"
  fully_qualified_name: "__builtin__.super"
  super_classes: "__builtin__.object"
  overloaded_methods {
    name: "__init__"
    fullname: "__builtin__.super.__init__"
    definitions {
      name: "__init__"
      fully_qualified_name: "__builtin__.super.__init__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "__builtin__.super"
          fully_qualified_name: "__builtin__.super"
        }
      }
      parameters {
        name: "t"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Any"
          kind: ANY
        }
      }
      parameters {
        name: "obj"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Any"
          kind: ANY
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__init__"
      fully_qualified_name: "__builtin__.super.__init__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "__builtin__.super"
          fully_qualified_name: "__builtin__.super"
        }
      }
      parameters {
        name: "t"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Any"
          kind: ANY
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "27"
  }
  valid_for: "27"
}
classes {
  name: "int"
  fully_qualified_name: "__builtin__.int"
  super_classes: "builtins.object"
  methods {
    name: "real"
    fully_qualified_name: "__builtin__.int.real"
    return_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "27"
  }
  methods {
    name: "imag"
    fully_qualified_name: "__builtin__.int.imag"
    return_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "27"
  }
  methods {
    name: "numerator"
    fully_qualified_name: "__builtin__.int.numerator"
    return_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "27"
  }
  methods {
    name: "denominator"
    fully_qualified_name: "__builtin__.int.denominator"
    return_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "27"
  }
  methods {
    name: "conjugate"
    fully_qualified_name: "__builtin__.int.conjugate"
    return_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "bit_length"
    fully_qualified_name: "__builtin__.int.bit_length"
    return_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__add__"
    fully_qualified_name: "__builtin__.int.__add__"
    return_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    parameters {
      name: "x"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__sub__"
    fully_qualified_name: "__builtin__.int.__sub__"
    return_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    parameters {
      name: "x"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__mul__"
    fully_qualified_name: "__builtin__.int.__mul__"
    return_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    parameters {
      name: "x"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__floordiv__"
    fully_qualified_name: "__builtin__.int.__floordiv__"
    return_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    parameters {
      name: "x"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__div__"
    fully_qualified_name: "__builtin__.int.__div__"
    return_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    parameters {
      name: "x"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__truediv__"
    fully_qualified_name: "__builtin__.int.__truediv__"
    return_annotation {
      pretty_printed_name: "__builtin__.float"
      fully_qualified_name: "__builtin__.float"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    parameters {
      name: "x"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__mod__"
    fully_qualified_name: "__builtin__.int.__mod__"
    return_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    parameters {
      name: "x"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__divmod__"
    fully_qualified_name: "__builtin__.int.__divmod__"
    return_annotation {
      pretty_printed_name: "Tuple[__builtin__.int,__builtin__.int]"
      kind: TUPLE
      args {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
      args {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    parameters {
      name: "x"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__radd__"
    fully_qualified_name: "__builtin__.int.__radd__"
    return_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    parameters {
      name: "x"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__rsub__"
    fully_qualified_name: "__builtin__.int.__rsub__"
    return_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    parameters {
      name: "x"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__rmul__"
    fully_qualified_name: "__builtin__.int.__rmul__"
    return_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    parameters {
      name: "x"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__rfloordiv__"
    fully_qualified_name: "__builtin__.int.__rfloordiv__"
    return_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    parameters {
      name: "x"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__rdiv__"
    fully_qualified_name: "__builtin__.int.__rdiv__"
    return_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    parameters {
      name: "x"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__rtruediv__"
    fully_qualified_name: "__builtin__.int.__rtruediv__"
    return_annotation {
      pretty_printed_name: "__builtin__.float"
      fully_qualified_name: "__builtin__.float"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    parameters {
      name: "x"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__rmod__"
    fully_qualified_name: "__builtin__.int.__rmod__"
    return_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    parameters {
      name: "x"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__rdivmod__"
    fully_qualified_name: "__builtin__.int.__rdivmod__"
    return_annotation {
      pretty_printed_name: "Tuple[__builtin__.int,__builtin__.int]"
      kind: TUPLE
      args {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
      args {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    parameters {
      name: "x"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__rpow__"
    fully_qualified_name: "__builtin__.int.__rpow__"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    parameters {
      name: "x"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    parameters {
      name: "mod"
      type_annotation {
        pretty_printed_name: "Union[__builtin__.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "__builtin__.int"
          fully_qualified_name: "__builtin__.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "__and__"
    fully_qualified_name: "__builtin__.int.__and__"
    return_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    parameters {
      name: "n"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__or__"
    fully_qualified_name: "__builtin__.int.__or__"
    return_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    parameters {
      name: "n"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__xor__"
    fully_qualified_name: "__builtin__.int.__xor__"
    return_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    parameters {
      name: "n"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__lshift__"
    fully_qualified_name: "__builtin__.int.__lshift__"
    return_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    parameters {
      name: "n"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__rshift__"
    fully_qualified_name: "__builtin__.int.__rshift__"
    return_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    parameters {
      name: "n"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__rand__"
    fully_qualified_name: "__builtin__.int.__rand__"
    return_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    parameters {
      name: "n"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__ror__"
    fully_qualified_name: "__builtin__.int.__ror__"
    return_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    parameters {
      name: "n"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__rxor__"
    fully_qualified_name: "__builtin__.int.__rxor__"
    return_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    parameters {
      name: "n"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__rlshift__"
    fully_qualified_name: "__builtin__.int.__rlshift__"
    return_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    parameters {
      name: "n"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__rrshift__"
    fully_qualified_name: "__builtin__.int.__rrshift__"
    return_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    parameters {
      name: "n"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__neg__"
    fully_qualified_name: "__builtin__.int.__neg__"
    return_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__pos__"
    fully_qualified_name: "__builtin__.int.__pos__"
    return_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__invert__"
    fully_qualified_name: "__builtin__.int.__invert__"
    return_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__trunc__"
    fully_qualified_name: "__builtin__.int.__trunc__"
    return_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__getnewargs__"
    fully_qualified_name: "__builtin__.int.__getnewargs__"
    return_annotation {
      pretty_printed_name: "Tuple[__builtin__.int]"
      kind: TUPLE
      args {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__eq__"
    fully_qualified_name: "__builtin__.int.__eq__"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    parameters {
      name: "x"
      type_annotation {
        pretty_printed_name: "__builtin__.object"
        fully_qualified_name: "__builtin__.object"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__ne__"
    fully_qualified_name: "__builtin__.int.__ne__"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    parameters {
      name: "x"
      type_annotation {
        pretty_printed_name: "__builtin__.object"
        fully_qualified_name: "__builtin__.object"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__lt__"
    fully_qualified_name: "__builtin__.int.__lt__"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    parameters {
      name: "x"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__le__"
    fully_qualified_name: "__builtin__.int.__le__"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    parameters {
      name: "x"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__gt__"
    fully_qualified_name: "__builtin__.int.__gt__"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    parameters {
      name: "x"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__ge__"
    fully_qualified_name: "__builtin__.int.__ge__"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    parameters {
      name: "x"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__str__"
    fully_qualified_name: "__builtin__.int.__str__"
    return_annotation {
      pretty_printed_name: "__builtin__.str"
      fully_qualified_name: "__builtin__.str"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__float__"
    fully_qualified_name: "__builtin__.int.__float__"
    return_annotation {
      pretty_printed_name: "__builtin__.float"
      fully_qualified_name: "__builtin__.float"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__int__"
    fully_qualified_name: "__builtin__.int.__int__"
    return_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__abs__"
    fully_qualified_name: "__builtin__.int.__abs__"
    return_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__hash__"
    fully_qualified_name: "__builtin__.int.__hash__"
    return_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__nonzero__"
    fully_qualified_name: "__builtin__.int.__nonzero__"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__index__"
    fully_qualified_name: "__builtin__.int.__index__"
    return_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    valid_for: "27"
  }
  overloaded_methods {
    name: "__new__"
    fullname: "__builtin__.int.__new__"
    definitions {
      name: "__new__"
      fully_qualified_name: "__builtin__.int.__new__"
      return_annotation {
        pretty_printed_name: "__builtin__._T"
        kind: TYPE_VAR
      }
      parameters {
        name: "cls"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Type[__builtin__._T]"
          kind: TYPE
          args {
            pretty_printed_name: "__builtin__._T"
            kind: TYPE_VAR
          }
        }
      }
      parameters {
        name: "x"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.unicode,__builtin__.str,typing.SupportsInt,__builtin__._SupportsIndex,__builtin__._SupportsTrunc]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.unicode"
            fully_qualified_name: "builtins.unicode"
          }
          args {
            pretty_printed_name: "__builtin__.str"
            fully_qualified_name: "__builtin__.str"
          }
          args {
            pretty_printed_name: "typing.SupportsInt"
            fully_qualified_name: "typing.SupportsInt"
          }
          args {
            pretty_printed_name: "__builtin__._SupportsIndex"
            fully_qualified_name: "__builtin__._SupportsIndex"
          }
          args {
            pretty_printed_name: "__builtin__._SupportsTrunc"
            fully_qualified_name: "__builtin__._SupportsTrunc"
          }
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__new__"
      fully_qualified_name: "__builtin__.int.__new__"
      return_annotation {
        pretty_printed_name: "__builtin__._T"
        kind: TYPE_VAR
      }
      parameters {
        name: "cls"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Type[__builtin__._T]"
          kind: TYPE
          args {
            pretty_printed_name: "__builtin__._T"
            kind: TYPE_VAR
          }
        }
      }
      parameters {
        name: "x"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.unicode,__builtin__.str,__builtin__.bytearray]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.unicode"
            fully_qualified_name: "builtins.unicode"
          }
          args {
            pretty_printed_name: "__builtin__.str"
            fully_qualified_name: "__builtin__.str"
          }
          args {
            pretty_printed_name: "__builtin__.bytearray"
            fully_qualified_name: "__builtin__.bytearray"
          }
        }
      }
      parameters {
        name: "base"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "__builtin__.int"
          fully_qualified_name: "__builtin__.int"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "27"
  }
  overloaded_methods {
    name: "__pow__"
    fullname: "__builtin__.int.__pow__"
    definitions {
      name: "__pow__"
      fully_qualified_name: "__builtin__.int.__pow__"
      return_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "__builtin__.int"
          fully_qualified_name: "__builtin__.int"
        }
      }
      parameters {
        name: "__x"
        type_annotation {
          pretty_printed_name: "Literal[builtins.int]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
        }
      }
      parameters {
        name: "__modulo"
        type_annotation {
          pretty_printed_name: "Union[__builtin__.int,None]"
          kind: UNION
          args {
            pretty_printed_name: "__builtin__.int"
            fully_qualified_name: "__builtin__.int"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__pow__"
      fully_qualified_name: "__builtin__.int.__pow__"
      return_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "__builtin__.int"
          fully_qualified_name: "__builtin__.int"
        }
      }
      parameters {
        name: "__x"
        type_annotation {
          pretty_printed_name: "__builtin__.int"
          fully_qualified_name: "__builtin__.int"
        }
      }
      parameters {
        name: "__modulo"
        type_annotation {
          pretty_printed_name: "Union[__builtin__.int,None]"
          kind: UNION
          args {
            pretty_printed_name: "__builtin__.int"
            fully_qualified_name: "__builtin__.int"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "27"
  }
  valid_for: "27"
}
classes {
  name: "float"
  fully_qualified_name: "__builtin__.float"
  super_classes: "builtins.object"
  methods {
    name: "__new__"
    fully_qualified_name: "__builtin__.float.__new__"
    return_annotation {
      pretty_printed_name: "__builtin__._T"
      kind: TYPE_VAR
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[__builtin__._T]"
        kind: TYPE
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
      }
    }
    parameters {
      name: "x"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.SupportsFloat,__builtin__._SupportsIndex,builtins.unicode,__builtin__.str,__builtin__.bytearray]"
        kind: UNION
        args {
          pretty_printed_name: "typing.SupportsFloat"
          fully_qualified_name: "typing.SupportsFloat"
        }
        args {
          pretty_printed_name: "__builtin__._SupportsIndex"
          fully_qualified_name: "__builtin__._SupportsIndex"
        }
        args {
          pretty_printed_name: "builtins.unicode"
          fully_qualified_name: "builtins.unicode"
        }
        args {
          pretty_printed_name: "__builtin__.str"
          fully_qualified_name: "__builtin__.str"
        }
        args {
          pretty_printed_name: "__builtin__.bytearray"
          fully_qualified_name: "__builtin__.bytearray"
        }
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "as_integer_ratio"
    fully_qualified_name: "__builtin__.float.as_integer_ratio"
    return_annotation {
      pretty_printed_name: "Tuple[__builtin__.int,__builtin__.int]"
      kind: TUPLE
      args {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
      args {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.float"
        fully_qualified_name: "__builtin__.float"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "hex"
    fully_qualified_name: "__builtin__.float.hex"
    return_annotation {
      pretty_printed_name: "__builtin__.str"
      fully_qualified_name: "__builtin__.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.float"
        fully_qualified_name: "__builtin__.float"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "is_integer"
    fully_qualified_name: "__builtin__.float.is_integer"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.float"
        fully_qualified_name: "__builtin__.float"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "fromhex"
    fully_qualified_name: "__builtin__.float.fromhex"
    return_annotation {
      pretty_printed_name: "__builtin__.float"
      fully_qualified_name: "__builtin__.float"
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.float"
        fully_qualified_name: "__builtin__.float"
      }
    }
    parameters {
      name: "__s"
      type_annotation {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
    }
    has_decorators: true
    resolved_decorator_names: "classmethod"
    valid_for: "27"
  }
  methods {
    name: "real"
    fully_qualified_name: "__builtin__.float.real"
    return_annotation {
      pretty_printed_name: "__builtin__.float"
      fully_qualified_name: "__builtin__.float"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.float"
        fully_qualified_name: "__builtin__.float"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "27"
  }
  methods {
    name: "imag"
    fully_qualified_name: "__builtin__.float.imag"
    return_annotation {
      pretty_printed_name: "__builtin__.float"
      fully_qualified_name: "__builtin__.float"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.float"
        fully_qualified_name: "__builtin__.float"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "27"
  }
  methods {
    name: "conjugate"
    fully_qualified_name: "__builtin__.float.conjugate"
    return_annotation {
      pretty_printed_name: "__builtin__.float"
      fully_qualified_name: "__builtin__.float"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.float"
        fully_qualified_name: "__builtin__.float"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__add__"
    fully_qualified_name: "__builtin__.float.__add__"
    return_annotation {
      pretty_printed_name: "__builtin__.float"
      fully_qualified_name: "__builtin__.float"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.float"
        fully_qualified_name: "__builtin__.float"
      }
    }
    parameters {
      name: "x"
      type_annotation {
        pretty_printed_name: "__builtin__.float"
        fully_qualified_name: "__builtin__.float"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__sub__"
    fully_qualified_name: "__builtin__.float.__sub__"
    return_annotation {
      pretty_printed_name: "__builtin__.float"
      fully_qualified_name: "__builtin__.float"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.float"
        fully_qualified_name: "__builtin__.float"
      }
    }
    parameters {
      name: "x"
      type_annotation {
        pretty_printed_name: "__builtin__.float"
        fully_qualified_name: "__builtin__.float"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__mul__"
    fully_qualified_name: "__builtin__.float.__mul__"
    return_annotation {
      pretty_printed_name: "__builtin__.float"
      fully_qualified_name: "__builtin__.float"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.float"
        fully_qualified_name: "__builtin__.float"
      }
    }
    parameters {
      name: "x"
      type_annotation {
        pretty_printed_name: "__builtin__.float"
        fully_qualified_name: "__builtin__.float"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__floordiv__"
    fully_qualified_name: "__builtin__.float.__floordiv__"
    return_annotation {
      pretty_printed_name: "__builtin__.float"
      fully_qualified_name: "__builtin__.float"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.float"
        fully_qualified_name: "__builtin__.float"
      }
    }
    parameters {
      name: "x"
      type_annotation {
        pretty_printed_name: "__builtin__.float"
        fully_qualified_name: "__builtin__.float"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__div__"
    fully_qualified_name: "__builtin__.float.__div__"
    return_annotation {
      pretty_printed_name: "__builtin__.float"
      fully_qualified_name: "__builtin__.float"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.float"
        fully_qualified_name: "__builtin__.float"
      }
    }
    parameters {
      name: "x"
      type_annotation {
        pretty_printed_name: "__builtin__.float"
        fully_qualified_name: "__builtin__.float"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__truediv__"
    fully_qualified_name: "__builtin__.float.__truediv__"
    return_annotation {
      pretty_printed_name: "__builtin__.float"
      fully_qualified_name: "__builtin__.float"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.float"
        fully_qualified_name: "__builtin__.float"
      }
    }
    parameters {
      name: "x"
      type_annotation {
        pretty_printed_name: "__builtin__.float"
        fully_qualified_name: "__builtin__.float"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__mod__"
    fully_qualified_name: "__builtin__.float.__mod__"
    return_annotation {
      pretty_printed_name: "__builtin__.float"
      fully_qualified_name: "__builtin__.float"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.float"
        fully_qualified_name: "__builtin__.float"
      }
    }
    parameters {
      name: "x"
      type_annotation {
        pretty_printed_name: "__builtin__.float"
        fully_qualified_name: "__builtin__.float"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__divmod__"
    fully_qualified_name: "__builtin__.float.__divmod__"
    return_annotation {
      pretty_printed_name: "Tuple[__builtin__.float,__builtin__.float]"
      kind: TUPLE
      args {
        pretty_printed_name: "__builtin__.float"
        fully_qualified_name: "__builtin__.float"
      }
      args {
        pretty_printed_name: "__builtin__.float"
        fully_qualified_name: "__builtin__.float"
      }
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.float"
        fully_qualified_name: "__builtin__.float"
      }
    }
    parameters {
      name: "x"
      type_annotation {
        pretty_printed_name: "__builtin__.float"
        fully_qualified_name: "__builtin__.float"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__pow__"
    fully_qualified_name: "__builtin__.float.__pow__"
    return_annotation {
      pretty_printed_name: "__builtin__.float"
      fully_qualified_name: "__builtin__.float"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.float"
        fully_qualified_name: "__builtin__.float"
      }
    }
    parameters {
      name: "x"
      type_annotation {
        pretty_printed_name: "__builtin__.float"
        fully_qualified_name: "__builtin__.float"
      }
    }
    parameters {
      name: "mod"
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "__radd__"
    fully_qualified_name: "__builtin__.float.__radd__"
    return_annotation {
      pretty_printed_name: "__builtin__.float"
      fully_qualified_name: "__builtin__.float"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.float"
        fully_qualified_name: "__builtin__.float"
      }
    }
    parameters {
      name: "x"
      type_annotation {
        pretty_printed_name: "__builtin__.float"
        fully_qualified_name: "__builtin__.float"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__rsub__"
    fully_qualified_name: "__builtin__.float.__rsub__"
    return_annotation {
      pretty_printed_name: "__builtin__.float"
      fully_qualified_name: "__builtin__.float"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.float"
        fully_qualified_name: "__builtin__.float"
      }
    }
    parameters {
      name: "x"
      type_annotation {
        pretty_printed_name: "__builtin__.float"
        fully_qualified_name: "__builtin__.float"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__rmul__"
    fully_qualified_name: "__builtin__.float.__rmul__"
    return_annotation {
      pretty_printed_name: "__builtin__.float"
      fully_qualified_name: "__builtin__.float"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.float"
        fully_qualified_name: "__builtin__.float"
      }
    }
    parameters {
      name: "x"
      type_annotation {
        pretty_printed_name: "__builtin__.float"
        fully_qualified_name: "__builtin__.float"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__rfloordiv__"
    fully_qualified_name: "__builtin__.float.__rfloordiv__"
    return_annotation {
      pretty_printed_name: "__builtin__.float"
      fully_qualified_name: "__builtin__.float"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.float"
        fully_qualified_name: "__builtin__.float"
      }
    }
    parameters {
      name: "x"
      type_annotation {
        pretty_printed_name: "__builtin__.float"
        fully_qualified_name: "__builtin__.float"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__rdiv__"
    fully_qualified_name: "__builtin__.float.__rdiv__"
    return_annotation {
      pretty_printed_name: "__builtin__.float"
      fully_qualified_name: "__builtin__.float"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.float"
        fully_qualified_name: "__builtin__.float"
      }
    }
    parameters {
      name: "x"
      type_annotation {
        pretty_printed_name: "__builtin__.float"
        fully_qualified_name: "__builtin__.float"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__rtruediv__"
    fully_qualified_name: "__builtin__.float.__rtruediv__"
    return_annotation {
      pretty_printed_name: "__builtin__.float"
      fully_qualified_name: "__builtin__.float"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.float"
        fully_qualified_name: "__builtin__.float"
      }
    }
    parameters {
      name: "x"
      type_annotation {
        pretty_printed_name: "__builtin__.float"
        fully_qualified_name: "__builtin__.float"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__rmod__"
    fully_qualified_name: "__builtin__.float.__rmod__"
    return_annotation {
      pretty_printed_name: "__builtin__.float"
      fully_qualified_name: "__builtin__.float"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.float"
        fully_qualified_name: "__builtin__.float"
      }
    }
    parameters {
      name: "x"
      type_annotation {
        pretty_printed_name: "__builtin__.float"
        fully_qualified_name: "__builtin__.float"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__rdivmod__"
    fully_qualified_name: "__builtin__.float.__rdivmod__"
    return_annotation {
      pretty_printed_name: "Tuple[__builtin__.float,__builtin__.float]"
      kind: TUPLE
      args {
        pretty_printed_name: "__builtin__.float"
        fully_qualified_name: "__builtin__.float"
      }
      args {
        pretty_printed_name: "__builtin__.float"
        fully_qualified_name: "__builtin__.float"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.float"
        fully_qualified_name: "__builtin__.float"
      }
    }
    parameters {
      name: "x"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.float"
        fully_qualified_name: "__builtin__.float"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__rpow__"
    fully_qualified_name: "__builtin__.float.__rpow__"
    return_annotation {
      pretty_printed_name: "__builtin__.float"
      fully_qualified_name: "__builtin__.float"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.float"
        fully_qualified_name: "__builtin__.float"
      }
    }
    parameters {
      name: "x"
      type_annotation {
        pretty_printed_name: "__builtin__.float"
        fully_qualified_name: "__builtin__.float"
      }
    }
    parameters {
      name: "mod"
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "__getnewargs__"
    fully_qualified_name: "__builtin__.float.__getnewargs__"
    return_annotation {
      pretty_printed_name: "Tuple[__builtin__.float]"
      kind: TUPLE
      args {
        pretty_printed_name: "__builtin__.float"
        fully_qualified_name: "__builtin__.float"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.float"
        fully_qualified_name: "__builtin__.float"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__trunc__"
    fully_qualified_name: "__builtin__.float.__trunc__"
    return_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.float"
        fully_qualified_name: "__builtin__.float"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__eq__"
    fully_qualified_name: "__builtin__.float.__eq__"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.float"
        fully_qualified_name: "__builtin__.float"
      }
    }
    parameters {
      name: "x"
      type_annotation {
        pretty_printed_name: "__builtin__.object"
        fully_qualified_name: "__builtin__.object"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__ne__"
    fully_qualified_name: "__builtin__.float.__ne__"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.float"
        fully_qualified_name: "__builtin__.float"
      }
    }
    parameters {
      name: "x"
      type_annotation {
        pretty_printed_name: "__builtin__.object"
        fully_qualified_name: "__builtin__.object"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__lt__"
    fully_qualified_name: "__builtin__.float.__lt__"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.float"
        fully_qualified_name: "__builtin__.float"
      }
    }
    parameters {
      name: "x"
      type_annotation {
        pretty_printed_name: "__builtin__.float"
        fully_qualified_name: "__builtin__.float"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__le__"
    fully_qualified_name: "__builtin__.float.__le__"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.float"
        fully_qualified_name: "__builtin__.float"
      }
    }
    parameters {
      name: "x"
      type_annotation {
        pretty_printed_name: "__builtin__.float"
        fully_qualified_name: "__builtin__.float"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__gt__"
    fully_qualified_name: "__builtin__.float.__gt__"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.float"
        fully_qualified_name: "__builtin__.float"
      }
    }
    parameters {
      name: "x"
      type_annotation {
        pretty_printed_name: "__builtin__.float"
        fully_qualified_name: "__builtin__.float"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__ge__"
    fully_qualified_name: "__builtin__.float.__ge__"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.float"
        fully_qualified_name: "__builtin__.float"
      }
    }
    parameters {
      name: "x"
      type_annotation {
        pretty_printed_name: "__builtin__.float"
        fully_qualified_name: "__builtin__.float"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__neg__"
    fully_qualified_name: "__builtin__.float.__neg__"
    return_annotation {
      pretty_printed_name: "__builtin__.float"
      fully_qualified_name: "__builtin__.float"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.float"
        fully_qualified_name: "__builtin__.float"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__pos__"
    fully_qualified_name: "__builtin__.float.__pos__"
    return_annotation {
      pretty_printed_name: "__builtin__.float"
      fully_qualified_name: "__builtin__.float"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.float"
        fully_qualified_name: "__builtin__.float"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__str__"
    fully_qualified_name: "__builtin__.float.__str__"
    return_annotation {
      pretty_printed_name: "__builtin__.str"
      fully_qualified_name: "__builtin__.str"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.float"
        fully_qualified_name: "__builtin__.float"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__int__"
    fully_qualified_name: "__builtin__.float.__int__"
    return_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.float"
        fully_qualified_name: "__builtin__.float"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__float__"
    fully_qualified_name: "__builtin__.float.__float__"
    return_annotation {
      pretty_printed_name: "__builtin__.float"
      fully_qualified_name: "__builtin__.float"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.float"
        fully_qualified_name: "__builtin__.float"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__abs__"
    fully_qualified_name: "__builtin__.float.__abs__"
    return_annotation {
      pretty_printed_name: "__builtin__.float"
      fully_qualified_name: "__builtin__.float"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.float"
        fully_qualified_name: "__builtin__.float"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__hash__"
    fully_qualified_name: "__builtin__.float.__hash__"
    return_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.float"
        fully_qualified_name: "__builtin__.float"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__nonzero__"
    fully_qualified_name: "__builtin__.float.__nonzero__"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.float"
        fully_qualified_name: "__builtin__.float"
      }
    }
    valid_for: "27"
  }
  valid_for: "27"
}
classes {
  name: "complex"
  fully_qualified_name: "__builtin__.complex"
  super_classes: "builtins.object"
  methods {
    name: "real"
    fully_qualified_name: "__builtin__.complex.real"
    return_annotation {
      pretty_printed_name: "__builtin__.float"
      fully_qualified_name: "__builtin__.float"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.complex"
        fully_qualified_name: "__builtin__.complex"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "27"
  }
  methods {
    name: "imag"
    fully_qualified_name: "__builtin__.complex.imag"
    return_annotation {
      pretty_printed_name: "__builtin__.float"
      fully_qualified_name: "__builtin__.float"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.complex"
        fully_qualified_name: "__builtin__.complex"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "27"
  }
  methods {
    name: "conjugate"
    fully_qualified_name: "__builtin__.complex.conjugate"
    return_annotation {
      pretty_printed_name: "__builtin__.complex"
      fully_qualified_name: "__builtin__.complex"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.complex"
        fully_qualified_name: "__builtin__.complex"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__add__"
    fully_qualified_name: "__builtin__.complex.__add__"
    return_annotation {
      pretty_printed_name: "__builtin__.complex"
      fully_qualified_name: "__builtin__.complex"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.complex"
        fully_qualified_name: "__builtin__.complex"
      }
    }
    parameters {
      name: "x"
      type_annotation {
        pretty_printed_name: "__builtin__.complex"
        fully_qualified_name: "__builtin__.complex"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__sub__"
    fully_qualified_name: "__builtin__.complex.__sub__"
    return_annotation {
      pretty_printed_name: "__builtin__.complex"
      fully_qualified_name: "__builtin__.complex"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.complex"
        fully_qualified_name: "__builtin__.complex"
      }
    }
    parameters {
      name: "x"
      type_annotation {
        pretty_printed_name: "__builtin__.complex"
        fully_qualified_name: "__builtin__.complex"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__mul__"
    fully_qualified_name: "__builtin__.complex.__mul__"
    return_annotation {
      pretty_printed_name: "__builtin__.complex"
      fully_qualified_name: "__builtin__.complex"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.complex"
        fully_qualified_name: "__builtin__.complex"
      }
    }
    parameters {
      name: "x"
      type_annotation {
        pretty_printed_name: "__builtin__.complex"
        fully_qualified_name: "__builtin__.complex"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__pow__"
    fully_qualified_name: "__builtin__.complex.__pow__"
    return_annotation {
      pretty_printed_name: "__builtin__.complex"
      fully_qualified_name: "__builtin__.complex"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.complex"
        fully_qualified_name: "__builtin__.complex"
      }
    }
    parameters {
      name: "x"
      type_annotation {
        pretty_printed_name: "__builtin__.complex"
        fully_qualified_name: "__builtin__.complex"
      }
    }
    parameters {
      name: "mod"
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "__div__"
    fully_qualified_name: "__builtin__.complex.__div__"
    return_annotation {
      pretty_printed_name: "__builtin__.complex"
      fully_qualified_name: "__builtin__.complex"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.complex"
        fully_qualified_name: "__builtin__.complex"
      }
    }
    parameters {
      name: "x"
      type_annotation {
        pretty_printed_name: "__builtin__.complex"
        fully_qualified_name: "__builtin__.complex"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__truediv__"
    fully_qualified_name: "__builtin__.complex.__truediv__"
    return_annotation {
      pretty_printed_name: "__builtin__.complex"
      fully_qualified_name: "__builtin__.complex"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.complex"
        fully_qualified_name: "__builtin__.complex"
      }
    }
    parameters {
      name: "x"
      type_annotation {
        pretty_printed_name: "__builtin__.complex"
        fully_qualified_name: "__builtin__.complex"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__radd__"
    fully_qualified_name: "__builtin__.complex.__radd__"
    return_annotation {
      pretty_printed_name: "__builtin__.complex"
      fully_qualified_name: "__builtin__.complex"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.complex"
        fully_qualified_name: "__builtin__.complex"
      }
    }
    parameters {
      name: "x"
      type_annotation {
        pretty_printed_name: "__builtin__.complex"
        fully_qualified_name: "__builtin__.complex"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__rsub__"
    fully_qualified_name: "__builtin__.complex.__rsub__"
    return_annotation {
      pretty_printed_name: "__builtin__.complex"
      fully_qualified_name: "__builtin__.complex"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.complex"
        fully_qualified_name: "__builtin__.complex"
      }
    }
    parameters {
      name: "x"
      type_annotation {
        pretty_printed_name: "__builtin__.complex"
        fully_qualified_name: "__builtin__.complex"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__rmul__"
    fully_qualified_name: "__builtin__.complex.__rmul__"
    return_annotation {
      pretty_printed_name: "__builtin__.complex"
      fully_qualified_name: "__builtin__.complex"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.complex"
        fully_qualified_name: "__builtin__.complex"
      }
    }
    parameters {
      name: "x"
      type_annotation {
        pretty_printed_name: "__builtin__.complex"
        fully_qualified_name: "__builtin__.complex"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__rpow__"
    fully_qualified_name: "__builtin__.complex.__rpow__"
    return_annotation {
      pretty_printed_name: "__builtin__.complex"
      fully_qualified_name: "__builtin__.complex"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.complex"
        fully_qualified_name: "__builtin__.complex"
      }
    }
    parameters {
      name: "x"
      type_annotation {
        pretty_printed_name: "__builtin__.complex"
        fully_qualified_name: "__builtin__.complex"
      }
    }
    parameters {
      name: "mod"
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "__rdiv__"
    fully_qualified_name: "__builtin__.complex.__rdiv__"
    return_annotation {
      pretty_printed_name: "__builtin__.complex"
      fully_qualified_name: "__builtin__.complex"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.complex"
        fully_qualified_name: "__builtin__.complex"
      }
    }
    parameters {
      name: "x"
      type_annotation {
        pretty_printed_name: "__builtin__.complex"
        fully_qualified_name: "__builtin__.complex"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__rtruediv__"
    fully_qualified_name: "__builtin__.complex.__rtruediv__"
    return_annotation {
      pretty_printed_name: "__builtin__.complex"
      fully_qualified_name: "__builtin__.complex"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.complex"
        fully_qualified_name: "__builtin__.complex"
      }
    }
    parameters {
      name: "x"
      type_annotation {
        pretty_printed_name: "__builtin__.complex"
        fully_qualified_name: "__builtin__.complex"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__eq__"
    fully_qualified_name: "__builtin__.complex.__eq__"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.complex"
        fully_qualified_name: "__builtin__.complex"
      }
    }
    parameters {
      name: "x"
      type_annotation {
        pretty_printed_name: "__builtin__.object"
        fully_qualified_name: "__builtin__.object"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__ne__"
    fully_qualified_name: "__builtin__.complex.__ne__"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.complex"
        fully_qualified_name: "__builtin__.complex"
      }
    }
    parameters {
      name: "x"
      type_annotation {
        pretty_printed_name: "__builtin__.object"
        fully_qualified_name: "__builtin__.object"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__neg__"
    fully_qualified_name: "__builtin__.complex.__neg__"
    return_annotation {
      pretty_printed_name: "__builtin__.complex"
      fully_qualified_name: "__builtin__.complex"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.complex"
        fully_qualified_name: "__builtin__.complex"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__pos__"
    fully_qualified_name: "__builtin__.complex.__pos__"
    return_annotation {
      pretty_printed_name: "__builtin__.complex"
      fully_qualified_name: "__builtin__.complex"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.complex"
        fully_qualified_name: "__builtin__.complex"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__str__"
    fully_qualified_name: "__builtin__.complex.__str__"
    return_annotation {
      pretty_printed_name: "__builtin__.str"
      fully_qualified_name: "__builtin__.str"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.complex"
        fully_qualified_name: "__builtin__.complex"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__complex__"
    fully_qualified_name: "__builtin__.complex.__complex__"
    return_annotation {
      pretty_printed_name: "__builtin__.complex"
      fully_qualified_name: "__builtin__.complex"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.complex"
        fully_qualified_name: "__builtin__.complex"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__abs__"
    fully_qualified_name: "__builtin__.complex.__abs__"
    return_annotation {
      pretty_printed_name: "__builtin__.float"
      fully_qualified_name: "__builtin__.float"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.complex"
        fully_qualified_name: "__builtin__.complex"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__hash__"
    fully_qualified_name: "__builtin__.complex.__hash__"
    return_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.complex"
        fully_qualified_name: "__builtin__.complex"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__nonzero__"
    fully_qualified_name: "__builtin__.complex.__nonzero__"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.complex"
        fully_qualified_name: "__builtin__.complex"
      }
    }
    valid_for: "27"
  }
  overloaded_methods {
    name: "__new__"
    fullname: "__builtin__.complex.__new__"
    definitions {
      name: "__new__"
      fully_qualified_name: "__builtin__.complex.__new__"
      return_annotation {
        pretty_printed_name: "__builtin__._T"
        kind: TYPE_VAR
      }
      parameters {
        name: "cls"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Type[__builtin__._T]"
          kind: TYPE
          args {
            pretty_printed_name: "__builtin__._T"
            kind: TYPE_VAR
          }
        }
      }
      parameters {
        name: "real"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "__builtin__.float"
          fully_qualified_name: "__builtin__.float"
        }
        has_default: true
      }
      parameters {
        name: "imag"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "__builtin__.float"
          fully_qualified_name: "__builtin__.float"
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__new__"
      fully_qualified_name: "__builtin__.complex.__new__"
      return_annotation {
        pretty_printed_name: "__builtin__._T"
        kind: TYPE_VAR
      }
      parameters {
        name: "cls"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Type[__builtin__._T]"
          kind: TYPE
          args {
            pretty_printed_name: "__builtin__._T"
            kind: TYPE_VAR
          }
        }
      }
      parameters {
        name: "real"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[__builtin__.str,typing.SupportsComplex,__builtin__._SupportsIndex]"
          kind: UNION
          args {
            pretty_printed_name: "__builtin__.str"
            fully_qualified_name: "__builtin__.str"
          }
          args {
            pretty_printed_name: "typing.SupportsComplex"
            fully_qualified_name: "typing.SupportsComplex"
          }
          args {
            pretty_printed_name: "__builtin__._SupportsIndex"
            fully_qualified_name: "__builtin__._SupportsIndex"
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "27"
  }
  valid_for: "27"
}
classes {
  name: "basestring"
  fully_qualified_name: "__builtin__.basestring"
  super_classes: "builtins.object"
  has_metaclass: true
  metaclass_name: "abc.ABCMeta"
  valid_for: "27"
}
classes {
  name: "unicode"
  fully_qualified_name: "__builtin__.unicode"
  super_classes: "__builtin__.basestring"
  super_classes: "typing.Sequence"
  methods {
    name: "capitalize"
    fully_qualified_name: "__builtin__.unicode.capitalize"
    return_annotation {
      pretty_printed_name: "__builtin__.unicode"
      fully_qualified_name: "__builtin__.unicode"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "center"
    fully_qualified_name: "__builtin__.unicode.center"
    return_annotation {
      pretty_printed_name: "__builtin__.unicode"
      fully_qualified_name: "__builtin__.unicode"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
    }
    parameters {
      name: "width"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    parameters {
      name: "fillchar"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "count"
    fully_qualified_name: "__builtin__.unicode.count"
    return_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
    }
    parameters {
      name: "x"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "decode"
    fully_qualified_name: "__builtin__.unicode.decode"
    return_annotation {
      pretty_printed_name: "__builtin__.unicode"
      fully_qualified_name: "__builtin__.unicode"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
    }
    parameters {
      name: "encoding"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
      has_default: true
    }
    parameters {
      name: "errors"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "encode"
    fully_qualified_name: "__builtin__.unicode.encode"
    return_annotation {
      pretty_printed_name: "__builtin__.str"
      fully_qualified_name: "__builtin__.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
    }
    parameters {
      name: "encoding"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
      has_default: true
    }
    parameters {
      name: "errors"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "endswith"
    fully_qualified_name: "__builtin__.unicode.endswith"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
    }
    parameters {
      name: "__suffix"
      type_annotation {
        pretty_printed_name: "Union[__builtin__.unicode,builtins.tuple[__builtin__.unicode]]"
        kind: UNION
        args {
          pretty_printed_name: "__builtin__.unicode"
          fully_qualified_name: "__builtin__.unicode"
        }
        args {
          pretty_printed_name: "builtins.tuple[__builtin__.unicode]"
          args {
            pretty_printed_name: "__builtin__.unicode"
            fully_qualified_name: "__builtin__.unicode"
          }
          fully_qualified_name: "builtins.tuple"
        }
      }
    }
    parameters {
      name: "__start"
      type_annotation {
        pretty_printed_name: "Union[__builtin__.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "__builtin__.int"
          fully_qualified_name: "__builtin__.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "__end"
      type_annotation {
        pretty_printed_name: "Union[__builtin__.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "__builtin__.int"
          fully_qualified_name: "__builtin__.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "expandtabs"
    fully_qualified_name: "__builtin__.unicode.expandtabs"
    return_annotation {
      pretty_printed_name: "__builtin__.unicode"
      fully_qualified_name: "__builtin__.unicode"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
    }
    parameters {
      name: "tabsize"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "find"
    fully_qualified_name: "__builtin__.unicode.find"
    return_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
    }
    parameters {
      name: "sub"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
    }
    parameters {
      name: "start"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
      has_default: true
    }
    parameters {
      name: "end"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "format"
    fully_qualified_name: "__builtin__.unicode.format"
    return_annotation {
      pretty_printed_name: "__builtin__.unicode"
      fully_qualified_name: "__builtin__.unicode"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "__builtin__.object"
        fully_qualified_name: "__builtin__.object"
      }
    }
    parameters {
      name: "kwargs"
      kind: VAR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.object"
        fully_qualified_name: "__builtin__.object"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "index"
    fully_qualified_name: "__builtin__.unicode.index"
    return_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
    }
    parameters {
      name: "sub"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
    }
    parameters {
      name: "start"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
      has_default: true
    }
    parameters {
      name: "end"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "isalnum"
    fully_qualified_name: "__builtin__.unicode.isalnum"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "isalpha"
    fully_qualified_name: "__builtin__.unicode.isalpha"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "isdecimal"
    fully_qualified_name: "__builtin__.unicode.isdecimal"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "isdigit"
    fully_qualified_name: "__builtin__.unicode.isdigit"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "isidentifier"
    fully_qualified_name: "__builtin__.unicode.isidentifier"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "islower"
    fully_qualified_name: "__builtin__.unicode.islower"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "isnumeric"
    fully_qualified_name: "__builtin__.unicode.isnumeric"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "isprintable"
    fully_qualified_name: "__builtin__.unicode.isprintable"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "isspace"
    fully_qualified_name: "__builtin__.unicode.isspace"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "istitle"
    fully_qualified_name: "__builtin__.unicode.istitle"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "isupper"
    fully_qualified_name: "__builtin__.unicode.isupper"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "join"
    fully_qualified_name: "__builtin__.unicode.join"
    return_annotation {
      pretty_printed_name: "__builtin__.unicode"
      fully_qualified_name: "__builtin__.unicode"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
    }
    parameters {
      name: "iterable"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[__builtin__.unicode]"
        args {
          pretty_printed_name: "__builtin__.unicode"
          fully_qualified_name: "__builtin__.unicode"
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "ljust"
    fully_qualified_name: "__builtin__.unicode.ljust"
    return_annotation {
      pretty_printed_name: "__builtin__.unicode"
      fully_qualified_name: "__builtin__.unicode"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
    }
    parameters {
      name: "width"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    parameters {
      name: "fillchar"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "lower"
    fully_qualified_name: "__builtin__.unicode.lower"
    return_annotation {
      pretty_printed_name: "__builtin__.unicode"
      fully_qualified_name: "__builtin__.unicode"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "lstrip"
    fully_qualified_name: "__builtin__.unicode.lstrip"
    return_annotation {
      pretty_printed_name: "__builtin__.unicode"
      fully_qualified_name: "__builtin__.unicode"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
    }
    parameters {
      name: "chars"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "partition"
    fully_qualified_name: "__builtin__.unicode.partition"
    return_annotation {
      pretty_printed_name: "Tuple[__builtin__.unicode,__builtin__.unicode,__builtin__.unicode]"
      kind: TUPLE
      args {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
      args {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
      args {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
    }
    parameters {
      name: "sep"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "replace"
    fully_qualified_name: "__builtin__.unicode.replace"
    return_annotation {
      pretty_printed_name: "__builtin__.unicode"
      fully_qualified_name: "__builtin__.unicode"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
    }
    parameters {
      name: "old"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
    }
    parameters {
      name: "new"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
    }
    parameters {
      name: "count"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "rfind"
    fully_qualified_name: "__builtin__.unicode.rfind"
    return_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
    }
    parameters {
      name: "sub"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
    }
    parameters {
      name: "start"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
      has_default: true
    }
    parameters {
      name: "end"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "rindex"
    fully_qualified_name: "__builtin__.unicode.rindex"
    return_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
    }
    parameters {
      name: "sub"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
    }
    parameters {
      name: "start"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
      has_default: true
    }
    parameters {
      name: "end"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "rjust"
    fully_qualified_name: "__builtin__.unicode.rjust"
    return_annotation {
      pretty_printed_name: "__builtin__.unicode"
      fully_qualified_name: "__builtin__.unicode"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
    }
    parameters {
      name: "width"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    parameters {
      name: "fillchar"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "rpartition"
    fully_qualified_name: "__builtin__.unicode.rpartition"
    return_annotation {
      pretty_printed_name: "Tuple[__builtin__.unicode,__builtin__.unicode,__builtin__.unicode]"
      kind: TUPLE
      args {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
      args {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
      args {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
    }
    parameters {
      name: "sep"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "rsplit"
    fully_qualified_name: "__builtin__.unicode.rsplit"
    return_annotation {
      pretty_printed_name: "builtins.list[__builtin__.unicode]"
      args {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
    }
    parameters {
      name: "sep"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[__builtin__.unicode,None]"
        kind: UNION
        args {
          pretty_printed_name: "__builtin__.unicode"
          fully_qualified_name: "__builtin__.unicode"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "maxsplit"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "rstrip"
    fully_qualified_name: "__builtin__.unicode.rstrip"
    return_annotation {
      pretty_printed_name: "__builtin__.unicode"
      fully_qualified_name: "__builtin__.unicode"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
    }
    parameters {
      name: "chars"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "split"
    fully_qualified_name: "__builtin__.unicode.split"
    return_annotation {
      pretty_printed_name: "builtins.list[__builtin__.unicode]"
      args {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
    }
    parameters {
      name: "sep"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[__builtin__.unicode,None]"
        kind: UNION
        args {
          pretty_printed_name: "__builtin__.unicode"
          fully_qualified_name: "__builtin__.unicode"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "maxsplit"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "splitlines"
    fully_qualified_name: "__builtin__.unicode.splitlines"
    return_annotation {
      pretty_printed_name: "builtins.list[__builtin__.unicode]"
      args {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
    }
    parameters {
      name: "keepends"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.bool"
        fully_qualified_name: "__builtin__.bool"
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "startswith"
    fully_qualified_name: "__builtin__.unicode.startswith"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
    }
    parameters {
      name: "__prefix"
      type_annotation {
        pretty_printed_name: "Union[__builtin__.unicode,builtins.tuple[__builtin__.unicode]]"
        kind: UNION
        args {
          pretty_printed_name: "__builtin__.unicode"
          fully_qualified_name: "__builtin__.unicode"
        }
        args {
          pretty_printed_name: "builtins.tuple[__builtin__.unicode]"
          args {
            pretty_printed_name: "__builtin__.unicode"
            fully_qualified_name: "__builtin__.unicode"
          }
          fully_qualified_name: "builtins.tuple"
        }
      }
    }
    parameters {
      name: "__start"
      type_annotation {
        pretty_printed_name: "Union[__builtin__.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "__builtin__.int"
          fully_qualified_name: "__builtin__.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "__end"
      type_annotation {
        pretty_printed_name: "Union[__builtin__.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "__builtin__.int"
          fully_qualified_name: "__builtin__.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "strip"
    fully_qualified_name: "__builtin__.unicode.strip"
    return_annotation {
      pretty_printed_name: "__builtin__.unicode"
      fully_qualified_name: "__builtin__.unicode"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
    }
    parameters {
      name: "chars"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "swapcase"
    fully_qualified_name: "__builtin__.unicode.swapcase"
    return_annotation {
      pretty_printed_name: "__builtin__.unicode"
      fully_qualified_name: "__builtin__.unicode"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "title"
    fully_qualified_name: "__builtin__.unicode.title"
    return_annotation {
      pretty_printed_name: "__builtin__.unicode"
      fully_qualified_name: "__builtin__.unicode"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "translate"
    fully_qualified_name: "__builtin__.unicode.translate"
    return_annotation {
      pretty_printed_name: "__builtin__.unicode"
      fully_qualified_name: "__builtin__.unicode"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
    }
    parameters {
      name: "table"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.dict[__builtin__.int,Any],__builtin__.unicode]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.dict[__builtin__.int,Any]"
          args {
            pretty_printed_name: "__builtin__.int"
            fully_qualified_name: "__builtin__.int"
          }
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "builtins.dict"
        }
        args {
          pretty_printed_name: "__builtin__.unicode"
          fully_qualified_name: "__builtin__.unicode"
        }
      }
    }
    valid_for: "27"
  }
  methods {
    name: "upper"
    fully_qualified_name: "__builtin__.unicode.upper"
    return_annotation {
      pretty_printed_name: "__builtin__.unicode"
      fully_qualified_name: "__builtin__.unicode"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "zfill"
    fully_qualified_name: "__builtin__.unicode.zfill"
    return_annotation {
      pretty_printed_name: "__builtin__.unicode"
      fully_qualified_name: "__builtin__.unicode"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
    }
    parameters {
      name: "width"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__getslice__"
    fully_qualified_name: "__builtin__.unicode.__getslice__"
    return_annotation {
      pretty_printed_name: "__builtin__.unicode"
      fully_qualified_name: "__builtin__.unicode"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
    }
    parameters {
      name: "start"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    parameters {
      name: "stop"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__add__"
    fully_qualified_name: "__builtin__.unicode.__add__"
    return_annotation {
      pretty_printed_name: "__builtin__.unicode"
      fully_qualified_name: "__builtin__.unicode"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
    }
    parameters {
      name: "s"
      type_annotation {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__mul__"
    fully_qualified_name: "__builtin__.unicode.__mul__"
    return_annotation {
      pretty_printed_name: "__builtin__.unicode"
      fully_qualified_name: "__builtin__.unicode"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
    }
    parameters {
      name: "n"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__rmul__"
    fully_qualified_name: "__builtin__.unicode.__rmul__"
    return_annotation {
      pretty_printed_name: "__builtin__.unicode"
      fully_qualified_name: "__builtin__.unicode"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
    }
    parameters {
      name: "n"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__mod__"
    fully_qualified_name: "__builtin__.unicode.__mod__"
    return_annotation {
      pretty_printed_name: "__builtin__.unicode"
      fully_qualified_name: "__builtin__.unicode"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
    }
    parameters {
      name: "x"
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__eq__"
    fully_qualified_name: "__builtin__.unicode.__eq__"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
    }
    parameters {
      name: "x"
      type_annotation {
        pretty_printed_name: "__builtin__.object"
        fully_qualified_name: "__builtin__.object"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__ne__"
    fully_qualified_name: "__builtin__.unicode.__ne__"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
    }
    parameters {
      name: "x"
      type_annotation {
        pretty_printed_name: "__builtin__.object"
        fully_qualified_name: "__builtin__.object"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__lt__"
    fully_qualified_name: "__builtin__.unicode.__lt__"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
    }
    parameters {
      name: "x"
      type_annotation {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__le__"
    fully_qualified_name: "__builtin__.unicode.__le__"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
    }
    parameters {
      name: "x"
      type_annotation {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__gt__"
    fully_qualified_name: "__builtin__.unicode.__gt__"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
    }
    parameters {
      name: "x"
      type_annotation {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__ge__"
    fully_qualified_name: "__builtin__.unicode.__ge__"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
    }
    parameters {
      name: "x"
      type_annotation {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__len__"
    fully_qualified_name: "__builtin__.unicode.__len__"
    return_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__contains__"
    fully_qualified_name: "__builtin__.unicode.__contains__"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
    }
    parameters {
      name: "s"
      type_annotation {
        pretty_printed_name: "Union[__builtin__.unicode,__builtin__.str]"
        kind: UNION
        args {
          pretty_printed_name: "__builtin__.unicode"
          fully_qualified_name: "__builtin__.unicode"
        }
        args {
          pretty_printed_name: "__builtin__.str"
          fully_qualified_name: "__builtin__.str"
        }
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__iter__"
    fully_qualified_name: "__builtin__.unicode.__iter__"
    return_annotation {
      pretty_printed_name: "typing.Iterator[__builtin__.unicode]"
      args {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__str__"
    fully_qualified_name: "__builtin__.unicode.__str__"
    return_annotation {
      pretty_printed_name: "__builtin__.str"
      fully_qualified_name: "__builtin__.str"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__repr__"
    fully_qualified_name: "__builtin__.unicode.__repr__"
    return_annotation {
      pretty_printed_name: "__builtin__.str"
      fully_qualified_name: "__builtin__.str"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__int__"
    fully_qualified_name: "__builtin__.unicode.__int__"
    return_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__float__"
    fully_qualified_name: "__builtin__.unicode.__float__"
    return_annotation {
      pretty_printed_name: "__builtin__.float"
      fully_qualified_name: "__builtin__.float"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__hash__"
    fully_qualified_name: "__builtin__.unicode.__hash__"
    return_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__getnewargs__"
    fully_qualified_name: "__builtin__.unicode.__getnewargs__"
    return_annotation {
      pretty_printed_name: "Tuple[__builtin__.unicode]"
      kind: TUPLE
      args {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
    }
    valid_for: "27"
  }
  overloaded_methods {
    name: "__init__"
    fullname: "__builtin__.unicode.__init__"
    definitions {
      name: "__init__"
      fully_qualified_name: "__builtin__.unicode.__init__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "__builtin__.unicode"
          fully_qualified_name: "__builtin__.unicode"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__init__"
      fully_qualified_name: "__builtin__.unicode.__init__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "__builtin__.unicode"
          fully_qualified_name: "__builtin__.unicode"
        }
      }
      parameters {
        name: "o"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "__builtin__.object"
          fully_qualified_name: "__builtin__.object"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__init__"
      fully_qualified_name: "__builtin__.unicode.__init__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "__builtin__.unicode"
          fully_qualified_name: "__builtin__.unicode"
        }
      }
      parameters {
        name: "o"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "__builtin__.str"
          fully_qualified_name: "__builtin__.str"
        }
      }
      parameters {
        name: "encoding"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "__builtin__.unicode"
          fully_qualified_name: "__builtin__.unicode"
        }
        has_default: true
      }
      parameters {
        name: "errors"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "__builtin__.unicode"
          fully_qualified_name: "__builtin__.unicode"
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "27"
  }
  overloaded_methods {
    name: "__getitem__"
    fullname: "__builtin__.unicode.__getitem__"
    definitions {
      name: "__getitem__"
      fully_qualified_name: "__builtin__.unicode.__getitem__"
      return_annotation {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "__builtin__.unicode"
          fully_qualified_name: "__builtin__.unicode"
        }
      }
      parameters {
        name: "i"
        type_annotation {
          pretty_printed_name: "__builtin__.int"
          fully_qualified_name: "__builtin__.int"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__getitem__"
      fully_qualified_name: "__builtin__.unicode.__getitem__"
      return_annotation {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "__builtin__.unicode"
          fully_qualified_name: "__builtin__.unicode"
        }
      }
      parameters {
        name: "s"
        type_annotation {
          pretty_printed_name: "__builtin__.slice"
          fully_qualified_name: "__builtin__.slice"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "27"
  }
  valid_for: "27"
}
classes {
  name: "_FormatMapMapping"
  fully_qualified_name: "__builtin__._FormatMapMapping"
  super_classes: "builtins.object"
  methods {
    name: "__getitem__"
    fully_qualified_name: "__builtin__._FormatMapMapping.__getitem__"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__._FormatMapMapping"
        fully_qualified_name: "__builtin__._FormatMapMapping"
      }
    }
    parameters {
      name: "__key"
      type_annotation {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
    }
    valid_for: "27"
  }
  is_protocol: true
  valid_for: "27"
}
classes {
  name: "str"
  fully_qualified_name: "__builtin__.str"
  super_classes: "typing.Sequence"
  super_classes: "__builtin__.basestring"
  methods {
    name: "__init__"
    fully_qualified_name: "__builtin__.str.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
    }
    parameters {
      name: "o"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.object"
        fully_qualified_name: "__builtin__.object"
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "capitalize"
    fully_qualified_name: "__builtin__.str.capitalize"
    return_annotation {
      pretty_printed_name: "__builtin__.str"
      fully_qualified_name: "__builtin__.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "center"
    fully_qualified_name: "__builtin__.str.center"
    return_annotation {
      pretty_printed_name: "__builtin__.str"
      fully_qualified_name: "__builtin__.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
    }
    parameters {
      name: "__width"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    parameters {
      name: "__fillchar"
      type_annotation {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "count"
    fully_qualified_name: "__builtin__.str.count"
    return_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
    }
    parameters {
      name: "x"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.unicode"
        fully_qualified_name: "builtins.unicode"
      }
    }
    parameters {
      name: "__start"
      type_annotation {
        pretty_printed_name: "Union[__builtin__.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "__builtin__.int"
          fully_qualified_name: "__builtin__.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "__end"
      type_annotation {
        pretty_printed_name: "Union[__builtin__.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "__builtin__.int"
          fully_qualified_name: "__builtin__.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "decode"
    fully_qualified_name: "__builtin__.str.decode"
    return_annotation {
      pretty_printed_name: "__builtin__.unicode"
      fully_qualified_name: "__builtin__.unicode"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
    }
    parameters {
      name: "encoding"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.unicode"
        fully_qualified_name: "builtins.unicode"
      }
      has_default: true
    }
    parameters {
      name: "errors"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.unicode"
        fully_qualified_name: "builtins.unicode"
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "encode"
    fully_qualified_name: "__builtin__.str.encode"
    return_annotation {
      pretty_printed_name: "__builtin__.str"
      fully_qualified_name: "__builtin__.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
    }
    parameters {
      name: "encoding"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.unicode"
        fully_qualified_name: "builtins.unicode"
      }
      has_default: true
    }
    parameters {
      name: "errors"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.unicode"
        fully_qualified_name: "builtins.unicode"
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "endswith"
    fully_qualified_name: "__builtin__.str.endswith"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
    }
    parameters {
      name: "__suffix"
      type_annotation {
        pretty_printed_name: "Union[builtins.unicode,builtins.tuple[builtins.unicode]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.unicode"
          fully_qualified_name: "builtins.unicode"
        }
        args {
          pretty_printed_name: "builtins.tuple[builtins.unicode]"
          args {
            pretty_printed_name: "builtins.unicode"
            fully_qualified_name: "builtins.unicode"
          }
          fully_qualified_name: "builtins.tuple"
        }
      }
    }
    parameters {
      name: "__start"
      type_annotation {
        pretty_printed_name: "Union[__builtin__.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "__builtin__.int"
          fully_qualified_name: "__builtin__.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "__end"
      type_annotation {
        pretty_printed_name: "Union[__builtin__.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "__builtin__.int"
          fully_qualified_name: "__builtin__.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "expandtabs"
    fully_qualified_name: "__builtin__.str.expandtabs"
    return_annotation {
      pretty_printed_name: "__builtin__.str"
      fully_qualified_name: "__builtin__.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
    }
    parameters {
      name: "tabsize"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "find"
    fully_qualified_name: "__builtin__.str.find"
    return_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
    }
    parameters {
      name: "sub"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.unicode"
        fully_qualified_name: "builtins.unicode"
      }
    }
    parameters {
      name: "__start"
      type_annotation {
        pretty_printed_name: "Union[__builtin__.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "__builtin__.int"
          fully_qualified_name: "__builtin__.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "__end"
      type_annotation {
        pretty_printed_name: "Union[__builtin__.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "__builtin__.int"
          fully_qualified_name: "__builtin__.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "format"
    fully_qualified_name: "__builtin__.str.format"
    return_annotation {
      pretty_printed_name: "__builtin__.str"
      fully_qualified_name: "__builtin__.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "__builtin__.object"
        fully_qualified_name: "__builtin__.object"
      }
    }
    parameters {
      name: "kwargs"
      kind: VAR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.object"
        fully_qualified_name: "__builtin__.object"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "format_map"
    fully_qualified_name: "__builtin__.str.format_map"
    return_annotation {
      pretty_printed_name: "__builtin__.str"
      fully_qualified_name: "__builtin__.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
    }
    parameters {
      name: "map"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__._FormatMapMapping"
        fully_qualified_name: "__builtin__._FormatMapMapping"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "index"
    fully_qualified_name: "__builtin__.str.index"
    return_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
    }
    parameters {
      name: "sub"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.unicode"
        fully_qualified_name: "builtins.unicode"
      }
    }
    parameters {
      name: "__start"
      type_annotation {
        pretty_printed_name: "Union[__builtin__.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "__builtin__.int"
          fully_qualified_name: "__builtin__.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "__end"
      type_annotation {
        pretty_printed_name: "Union[__builtin__.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "__builtin__.int"
          fully_qualified_name: "__builtin__.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "isalnum"
    fully_qualified_name: "__builtin__.str.isalnum"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "isalpha"
    fully_qualified_name: "__builtin__.str.isalpha"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "isdigit"
    fully_qualified_name: "__builtin__.str.isdigit"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "islower"
    fully_qualified_name: "__builtin__.str.islower"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "isspace"
    fully_qualified_name: "__builtin__.str.isspace"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "istitle"
    fully_qualified_name: "__builtin__.str.istitle"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "isupper"
    fully_qualified_name: "__builtin__.str.isupper"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "join"
    fully_qualified_name: "__builtin__.str.join"
    return_annotation {
      pretty_printed_name: "typing.AnyStr"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
    }
    parameters {
      name: "__iterable"
      type_annotation {
        pretty_printed_name: "typing.Iterable[typing.AnyStr]"
        args {
          pretty_printed_name: "typing.AnyStr"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "ljust"
    fully_qualified_name: "__builtin__.str.ljust"
    return_annotation {
      pretty_printed_name: "__builtin__.str"
      fully_qualified_name: "__builtin__.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
    }
    parameters {
      name: "__width"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    parameters {
      name: "__fillchar"
      type_annotation {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "lower"
    fully_qualified_name: "__builtin__.str.lower"
    return_annotation {
      pretty_printed_name: "__builtin__.str"
      fully_qualified_name: "__builtin__.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "replace"
    fully_qualified_name: "__builtin__.str.replace"
    return_annotation {
      pretty_printed_name: "typing.AnyStr"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
    }
    parameters {
      name: "__old"
      type_annotation {
        pretty_printed_name: "typing.AnyStr"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "__new"
      type_annotation {
        pretty_printed_name: "typing.AnyStr"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "__count"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "rfind"
    fully_qualified_name: "__builtin__.str.rfind"
    return_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
    }
    parameters {
      name: "sub"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.unicode"
        fully_qualified_name: "builtins.unicode"
      }
    }
    parameters {
      name: "__start"
      type_annotation {
        pretty_printed_name: "Union[__builtin__.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "__builtin__.int"
          fully_qualified_name: "__builtin__.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "__end"
      type_annotation {
        pretty_printed_name: "Union[__builtin__.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "__builtin__.int"
          fully_qualified_name: "__builtin__.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "rindex"
    fully_qualified_name: "__builtin__.str.rindex"
    return_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
    }
    parameters {
      name: "sub"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.unicode"
        fully_qualified_name: "builtins.unicode"
      }
    }
    parameters {
      name: "__start"
      type_annotation {
        pretty_printed_name: "Union[__builtin__.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "__builtin__.int"
          fully_qualified_name: "__builtin__.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "__end"
      type_annotation {
        pretty_printed_name: "Union[__builtin__.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "__builtin__.int"
          fully_qualified_name: "__builtin__.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "rjust"
    fully_qualified_name: "__builtin__.str.rjust"
    return_annotation {
      pretty_printed_name: "__builtin__.str"
      fully_qualified_name: "__builtin__.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
    }
    parameters {
      name: "__width"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    parameters {
      name: "__fillchar"
      type_annotation {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "splitlines"
    fully_qualified_name: "__builtin__.str.splitlines"
    return_annotation {
      pretty_printed_name: "builtins.list[__builtin__.str]"
      args {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
    }
    parameters {
      name: "keepends"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.bool"
        fully_qualified_name: "__builtin__.bool"
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "startswith"
    fully_qualified_name: "__builtin__.str.startswith"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
    }
    parameters {
      name: "__prefix"
      type_annotation {
        pretty_printed_name: "Union[builtins.unicode,builtins.tuple[builtins.unicode]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.unicode"
          fully_qualified_name: "builtins.unicode"
        }
        args {
          pretty_printed_name: "builtins.tuple[builtins.unicode]"
          args {
            pretty_printed_name: "builtins.unicode"
            fully_qualified_name: "builtins.unicode"
          }
          fully_qualified_name: "builtins.tuple"
        }
      }
    }
    parameters {
      name: "__start"
      type_annotation {
        pretty_printed_name: "Union[__builtin__.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "__builtin__.int"
          fully_qualified_name: "__builtin__.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "__end"
      type_annotation {
        pretty_printed_name: "Union[__builtin__.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "__builtin__.int"
          fully_qualified_name: "__builtin__.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "swapcase"
    fully_qualified_name: "__builtin__.str.swapcase"
    return_annotation {
      pretty_printed_name: "__builtin__.str"
      fully_qualified_name: "__builtin__.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "title"
    fully_qualified_name: "__builtin__.str.title"
    return_annotation {
      pretty_printed_name: "__builtin__.str"
      fully_qualified_name: "__builtin__.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "translate"
    fully_qualified_name: "__builtin__.str.translate"
    return_annotation {
      pretty_printed_name: "typing.AnyStr"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
    }
    parameters {
      name: "__table"
      type_annotation {
        pretty_printed_name: "Union[typing.AnyStr,None]"
        kind: UNION
        args {
          pretty_printed_name: "typing.AnyStr"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "deletechars"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.AnyStr"
        kind: TYPE_VAR
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "upper"
    fully_qualified_name: "__builtin__.str.upper"
    return_annotation {
      pretty_printed_name: "__builtin__.str"
      fully_qualified_name: "__builtin__.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "zfill"
    fully_qualified_name: "__builtin__.str.zfill"
    return_annotation {
      pretty_printed_name: "__builtin__.str"
      fully_qualified_name: "__builtin__.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
    }
    parameters {
      name: "__width"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__add__"
    fully_qualified_name: "__builtin__.str.__add__"
    return_annotation {
      pretty_printed_name: "typing.AnyStr"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
    }
    parameters {
      name: "s"
      type_annotation {
        pretty_printed_name: "typing.AnyStr"
        kind: TYPE_VAR
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__contains__"
    fully_qualified_name: "__builtin__.str.__contains__"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
    }
    parameters {
      name: "o"
      type_annotation {
        pretty_printed_name: "Union[__builtin__.str,builtins.unicode]"
        kind: UNION
        args {
          pretty_printed_name: "__builtin__.str"
          fully_qualified_name: "__builtin__.str"
        }
        args {
          pretty_printed_name: "builtins.unicode"
          fully_qualified_name: "builtins.unicode"
        }
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__eq__"
    fully_qualified_name: "__builtin__.str.__eq__"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
    }
    parameters {
      name: "x"
      type_annotation {
        pretty_printed_name: "__builtin__.object"
        fully_qualified_name: "__builtin__.object"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__ge__"
    fully_qualified_name: "__builtin__.str.__ge__"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
    }
    parameters {
      name: "x"
      type_annotation {
        pretty_printed_name: "builtins.unicode"
        fully_qualified_name: "builtins.unicode"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__getitem__"
    fully_qualified_name: "__builtin__.str.__getitem__"
    return_annotation {
      pretty_printed_name: "__builtin__.str"
      fully_qualified_name: "__builtin__.str"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
    }
    parameters {
      name: "i"
      type_annotation {
        pretty_printed_name: "Union[__builtin__.int,__builtin__.slice]"
        kind: UNION
        args {
          pretty_printed_name: "__builtin__.int"
          fully_qualified_name: "__builtin__.int"
        }
        args {
          pretty_printed_name: "__builtin__.slice"
          fully_qualified_name: "__builtin__.slice"
        }
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__gt__"
    fully_qualified_name: "__builtin__.str.__gt__"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
    }
    parameters {
      name: "x"
      type_annotation {
        pretty_printed_name: "builtins.unicode"
        fully_qualified_name: "builtins.unicode"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__hash__"
    fully_qualified_name: "__builtin__.str.__hash__"
    return_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__iter__"
    fully_qualified_name: "__builtin__.str.__iter__"
    return_annotation {
      pretty_printed_name: "typing.Iterator[__builtin__.str]"
      args {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__le__"
    fully_qualified_name: "__builtin__.str.__le__"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
    }
    parameters {
      name: "x"
      type_annotation {
        pretty_printed_name: "builtins.unicode"
        fully_qualified_name: "builtins.unicode"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__len__"
    fully_qualified_name: "__builtin__.str.__len__"
    return_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__lt__"
    fully_qualified_name: "__builtin__.str.__lt__"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
    }
    parameters {
      name: "x"
      type_annotation {
        pretty_printed_name: "builtins.unicode"
        fully_qualified_name: "builtins.unicode"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__mod__"
    fully_qualified_name: "__builtin__.str.__mod__"
    return_annotation {
      pretty_printed_name: "__builtin__.str"
      fully_qualified_name: "__builtin__.str"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
    }
    parameters {
      name: "x"
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__mul__"
    fully_qualified_name: "__builtin__.str.__mul__"
    return_annotation {
      pretty_printed_name: "__builtin__.str"
      fully_qualified_name: "__builtin__.str"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
    }
    parameters {
      name: "n"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__ne__"
    fully_qualified_name: "__builtin__.str.__ne__"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
    }
    parameters {
      name: "x"
      type_annotation {
        pretty_printed_name: "__builtin__.object"
        fully_qualified_name: "__builtin__.object"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__repr__"
    fully_qualified_name: "__builtin__.str.__repr__"
    return_annotation {
      pretty_printed_name: "__builtin__.str"
      fully_qualified_name: "__builtin__.str"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__rmul__"
    fully_qualified_name: "__builtin__.str.__rmul__"
    return_annotation {
      pretty_printed_name: "__builtin__.str"
      fully_qualified_name: "__builtin__.str"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
    }
    parameters {
      name: "n"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__str__"
    fully_qualified_name: "__builtin__.str.__str__"
    return_annotation {
      pretty_printed_name: "__builtin__.str"
      fully_qualified_name: "__builtin__.str"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__getnewargs__"
    fully_qualified_name: "__builtin__.str.__getnewargs__"
    return_annotation {
      pretty_printed_name: "Tuple[__builtin__.str]"
      kind: TUPLE
      args {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__getslice__"
    fully_qualified_name: "__builtin__.str.__getslice__"
    return_annotation {
      pretty_printed_name: "__builtin__.str"
      fully_qualified_name: "__builtin__.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
    }
    parameters {
      name: "start"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    parameters {
      name: "stop"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__float__"
    fully_qualified_name: "__builtin__.str.__float__"
    return_annotation {
      pretty_printed_name: "__builtin__.float"
      fully_qualified_name: "__builtin__.float"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__int__"
    fully_qualified_name: "__builtin__.str.__int__"
    return_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
    }
    valid_for: "27"
  }
  overloaded_methods {
    name: "lstrip"
    fullname: "__builtin__.str.lstrip"
    definitions {
      name: "lstrip"
      fully_qualified_name: "__builtin__.str.lstrip"
      return_annotation {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "__builtin__.str"
          fully_qualified_name: "__builtin__.str"
        }
      }
      parameters {
        name: "__chars"
        type_annotation {
          pretty_printed_name: "__builtin__.str"
          fully_qualified_name: "__builtin__.str"
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "lstrip"
      fully_qualified_name: "__builtin__.str.lstrip"
      return_annotation {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "__builtin__.str"
          fully_qualified_name: "__builtin__.str"
        }
      }
      parameters {
        name: "__chars"
        type_annotation {
          pretty_printed_name: "__builtin__.unicode"
          fully_qualified_name: "__builtin__.unicode"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "27"
  }
  overloaded_methods {
    name: "partition"
    fullname: "__builtin__.str.partition"
    definitions {
      name: "partition"
      fully_qualified_name: "__builtin__.str.partition"
      return_annotation {
        pretty_printed_name: "Tuple[__builtin__.str,__builtin__.bytearray,__builtin__.str]"
        kind: TUPLE
        args {
          pretty_printed_name: "__builtin__.str"
          fully_qualified_name: "__builtin__.str"
        }
        args {
          pretty_printed_name: "__builtin__.bytearray"
          fully_qualified_name: "__builtin__.bytearray"
        }
        args {
          pretty_printed_name: "__builtin__.str"
          fully_qualified_name: "__builtin__.str"
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "__builtin__.str"
          fully_qualified_name: "__builtin__.str"
        }
      }
      parameters {
        name: "__sep"
        type_annotation {
          pretty_printed_name: "__builtin__.bytearray"
          fully_qualified_name: "__builtin__.bytearray"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "partition"
      fully_qualified_name: "__builtin__.str.partition"
      return_annotation {
        pretty_printed_name: "Tuple[__builtin__.str,__builtin__.str,__builtin__.str]"
        kind: TUPLE
        args {
          pretty_printed_name: "__builtin__.str"
          fully_qualified_name: "__builtin__.str"
        }
        args {
          pretty_printed_name: "__builtin__.str"
          fully_qualified_name: "__builtin__.str"
        }
        args {
          pretty_printed_name: "__builtin__.str"
          fully_qualified_name: "__builtin__.str"
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "__builtin__.str"
          fully_qualified_name: "__builtin__.str"
        }
      }
      parameters {
        name: "__sep"
        type_annotation {
          pretty_printed_name: "__builtin__.str"
          fully_qualified_name: "__builtin__.str"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "partition"
      fully_qualified_name: "__builtin__.str.partition"
      return_annotation {
        pretty_printed_name: "Tuple[__builtin__.unicode,__builtin__.unicode,__builtin__.unicode]"
        kind: TUPLE
        args {
          pretty_printed_name: "__builtin__.unicode"
          fully_qualified_name: "__builtin__.unicode"
        }
        args {
          pretty_printed_name: "__builtin__.unicode"
          fully_qualified_name: "__builtin__.unicode"
        }
        args {
          pretty_printed_name: "__builtin__.unicode"
          fully_qualified_name: "__builtin__.unicode"
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "__builtin__.str"
          fully_qualified_name: "__builtin__.str"
        }
      }
      parameters {
        name: "__sep"
        type_annotation {
          pretty_printed_name: "__builtin__.unicode"
          fully_qualified_name: "__builtin__.unicode"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "27"
  }
  overloaded_methods {
    name: "rpartition"
    fullname: "__builtin__.str.rpartition"
    definitions {
      name: "rpartition"
      fully_qualified_name: "__builtin__.str.rpartition"
      return_annotation {
        pretty_printed_name: "Tuple[__builtin__.str,__builtin__.bytearray,__builtin__.str]"
        kind: TUPLE
        args {
          pretty_printed_name: "__builtin__.str"
          fully_qualified_name: "__builtin__.str"
        }
        args {
          pretty_printed_name: "__builtin__.bytearray"
          fully_qualified_name: "__builtin__.bytearray"
        }
        args {
          pretty_printed_name: "__builtin__.str"
          fully_qualified_name: "__builtin__.str"
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "__builtin__.str"
          fully_qualified_name: "__builtin__.str"
        }
      }
      parameters {
        name: "__sep"
        type_annotation {
          pretty_printed_name: "__builtin__.bytearray"
          fully_qualified_name: "__builtin__.bytearray"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "rpartition"
      fully_qualified_name: "__builtin__.str.rpartition"
      return_annotation {
        pretty_printed_name: "Tuple[__builtin__.str,__builtin__.str,__builtin__.str]"
        kind: TUPLE
        args {
          pretty_printed_name: "__builtin__.str"
          fully_qualified_name: "__builtin__.str"
        }
        args {
          pretty_printed_name: "__builtin__.str"
          fully_qualified_name: "__builtin__.str"
        }
        args {
          pretty_printed_name: "__builtin__.str"
          fully_qualified_name: "__builtin__.str"
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "__builtin__.str"
          fully_qualified_name: "__builtin__.str"
        }
      }
      parameters {
        name: "__sep"
        type_annotation {
          pretty_printed_name: "__builtin__.str"
          fully_qualified_name: "__builtin__.str"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "rpartition"
      fully_qualified_name: "__builtin__.str.rpartition"
      return_annotation {
        pretty_printed_name: "Tuple[__builtin__.unicode,__builtin__.unicode,__builtin__.unicode]"
        kind: TUPLE
        args {
          pretty_printed_name: "__builtin__.unicode"
          fully_qualified_name: "__builtin__.unicode"
        }
        args {
          pretty_printed_name: "__builtin__.unicode"
          fully_qualified_name: "__builtin__.unicode"
        }
        args {
          pretty_printed_name: "__builtin__.unicode"
          fully_qualified_name: "__builtin__.unicode"
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "__builtin__.str"
          fully_qualified_name: "__builtin__.str"
        }
      }
      parameters {
        name: "__sep"
        type_annotation {
          pretty_printed_name: "__builtin__.unicode"
          fully_qualified_name: "__builtin__.unicode"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "27"
  }
  overloaded_methods {
    name: "rsplit"
    fullname: "__builtin__.str.rsplit"
    definitions {
      name: "rsplit"
      fully_qualified_name: "__builtin__.str.rsplit"
      return_annotation {
        pretty_printed_name: "builtins.list[__builtin__.str]"
        args {
          pretty_printed_name: "__builtin__.str"
          fully_qualified_name: "__builtin__.str"
        }
        fully_qualified_name: "builtins.list"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "__builtin__.str"
          fully_qualified_name: "__builtin__.str"
        }
      }
      parameters {
        name: "sep"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[__builtin__.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "__builtin__.str"
            fully_qualified_name: "__builtin__.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "maxsplit"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "__builtin__.int"
          fully_qualified_name: "__builtin__.int"
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "rsplit"
      fully_qualified_name: "__builtin__.str.rsplit"
      return_annotation {
        pretty_printed_name: "builtins.list[__builtin__.unicode]"
        args {
          pretty_printed_name: "__builtin__.unicode"
          fully_qualified_name: "__builtin__.unicode"
        }
        fully_qualified_name: "builtins.list"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "__builtin__.str"
          fully_qualified_name: "__builtin__.str"
        }
      }
      parameters {
        name: "sep"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "__builtin__.unicode"
          fully_qualified_name: "__builtin__.unicode"
        }
      }
      parameters {
        name: "maxsplit"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "__builtin__.int"
          fully_qualified_name: "__builtin__.int"
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "27"
  }
  overloaded_methods {
    name: "rstrip"
    fullname: "__builtin__.str.rstrip"
    definitions {
      name: "rstrip"
      fully_qualified_name: "__builtin__.str.rstrip"
      return_annotation {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "__builtin__.str"
          fully_qualified_name: "__builtin__.str"
        }
      }
      parameters {
        name: "__chars"
        type_annotation {
          pretty_printed_name: "__builtin__.str"
          fully_qualified_name: "__builtin__.str"
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "rstrip"
      fully_qualified_name: "__builtin__.str.rstrip"
      return_annotation {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "__builtin__.str"
          fully_qualified_name: "__builtin__.str"
        }
      }
      parameters {
        name: "__chars"
        type_annotation {
          pretty_printed_name: "__builtin__.unicode"
          fully_qualified_name: "__builtin__.unicode"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "27"
  }
  overloaded_methods {
    name: "split"
    fullname: "__builtin__.str.split"
    definitions {
      name: "split"
      fully_qualified_name: "__builtin__.str.split"
      return_annotation {
        pretty_printed_name: "builtins.list[__builtin__.str]"
        args {
          pretty_printed_name: "__builtin__.str"
          fully_qualified_name: "__builtin__.str"
        }
        fully_qualified_name: "builtins.list"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "__builtin__.str"
          fully_qualified_name: "__builtin__.str"
        }
      }
      parameters {
        name: "sep"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[__builtin__.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "__builtin__.str"
            fully_qualified_name: "__builtin__.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "maxsplit"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "__builtin__.int"
          fully_qualified_name: "__builtin__.int"
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "split"
      fully_qualified_name: "__builtin__.str.split"
      return_annotation {
        pretty_printed_name: "builtins.list[__builtin__.unicode]"
        args {
          pretty_printed_name: "__builtin__.unicode"
          fully_qualified_name: "__builtin__.unicode"
        }
        fully_qualified_name: "builtins.list"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "__builtin__.str"
          fully_qualified_name: "__builtin__.str"
        }
      }
      parameters {
        name: "sep"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "__builtin__.unicode"
          fully_qualified_name: "__builtin__.unicode"
        }
      }
      parameters {
        name: "maxsplit"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "__builtin__.int"
          fully_qualified_name: "__builtin__.int"
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "27"
  }
  overloaded_methods {
    name: "strip"
    fullname: "__builtin__.str.strip"
    definitions {
      name: "strip"
      fully_qualified_name: "__builtin__.str.strip"
      return_annotation {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "__builtin__.str"
          fully_qualified_name: "__builtin__.str"
        }
      }
      parameters {
        name: "__chars"
        type_annotation {
          pretty_printed_name: "__builtin__.str"
          fully_qualified_name: "__builtin__.str"
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "strip"
      fully_qualified_name: "__builtin__.str.strip"
      return_annotation {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "__builtin__.str"
          fully_qualified_name: "__builtin__.str"
        }
      }
      parameters {
        name: "chars"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "__builtin__.unicode"
          fully_qualified_name: "__builtin__.unicode"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "27"
  }
  valid_for: "27"
}
classes {
  name: "bytearray"
  fully_qualified_name: "__builtin__.bytearray"
  super_classes: "typing.MutableSequence"
  super_classes: "typing.ByteString"
  methods {
    name: "capitalize"
    fully_qualified_name: "__builtin__.bytearray.capitalize"
    return_annotation {
      pretty_printed_name: "__builtin__.bytearray"
      fully_qualified_name: "__builtin__.bytearray"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.bytearray"
        fully_qualified_name: "__builtin__.bytearray"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "center"
    fully_qualified_name: "__builtin__.bytearray.center"
    return_annotation {
      pretty_printed_name: "__builtin__.bytearray"
      fully_qualified_name: "__builtin__.bytearray"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.bytearray"
        fully_qualified_name: "__builtin__.bytearray"
      }
    }
    parameters {
      name: "__width"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    parameters {
      name: "__fillchar"
      type_annotation {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "count"
    fully_qualified_name: "__builtin__.bytearray.count"
    return_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.bytearray"
        fully_qualified_name: "__builtin__.bytearray"
      }
    }
    parameters {
      name: "__sub"
      type_annotation {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "decode"
    fully_qualified_name: "__builtin__.bytearray.decode"
    return_annotation {
      pretty_printed_name: "__builtin__.str"
      fully_qualified_name: "__builtin__.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.bytearray"
        fully_qualified_name: "__builtin__.bytearray"
      }
    }
    parameters {
      name: "encoding"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.unicode"
        fully_qualified_name: "builtins.unicode"
      }
      has_default: true
    }
    parameters {
      name: "errors"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.unicode"
        fully_qualified_name: "builtins.unicode"
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "endswith"
    fully_qualified_name: "__builtin__.bytearray.endswith"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.bytearray"
        fully_qualified_name: "__builtin__.bytearray"
      }
    }
    parameters {
      name: "__suffix"
      type_annotation {
        pretty_printed_name: "Union[__builtin__.str,builtins.tuple[__builtin__.str]]"
        kind: UNION
        args {
          pretty_printed_name: "__builtin__.str"
          fully_qualified_name: "__builtin__.str"
        }
        args {
          pretty_printed_name: "builtins.tuple[__builtin__.str]"
          args {
            pretty_printed_name: "__builtin__.str"
            fully_qualified_name: "__builtin__.str"
          }
          fully_qualified_name: "builtins.tuple"
        }
      }
    }
    parameters {
      name: "__start"
      type_annotation {
        pretty_printed_name: "Union[__builtin__.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "__builtin__.int"
          fully_qualified_name: "__builtin__.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "__end"
      type_annotation {
        pretty_printed_name: "Union[__builtin__.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "__builtin__.int"
          fully_qualified_name: "__builtin__.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "expandtabs"
    fully_qualified_name: "__builtin__.bytearray.expandtabs"
    return_annotation {
      pretty_printed_name: "__builtin__.bytearray"
      fully_qualified_name: "__builtin__.bytearray"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.bytearray"
        fully_qualified_name: "__builtin__.bytearray"
      }
    }
    parameters {
      name: "tabsize"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "extend"
    fully_qualified_name: "__builtin__.bytearray.extend"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.bytearray"
        fully_qualified_name: "__builtin__.bytearray"
      }
    }
    parameters {
      name: "iterable"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[__builtin__.str,typing.Iterable[__builtin__.int]]"
        kind: UNION
        args {
          pretty_printed_name: "__builtin__.str"
          fully_qualified_name: "__builtin__.str"
        }
        args {
          pretty_printed_name: "typing.Iterable[__builtin__.int]"
          args {
            pretty_printed_name: "__builtin__.int"
            fully_qualified_name: "__builtin__.int"
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
    }
    valid_for: "27"
  }
  methods {
    name: "find"
    fully_qualified_name: "__builtin__.bytearray.find"
    return_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.bytearray"
        fully_qualified_name: "__builtin__.bytearray"
      }
    }
    parameters {
      name: "__sub"
      type_annotation {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
    }
    parameters {
      name: "__start"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
      has_default: true
    }
    parameters {
      name: "__end"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "index"
    fully_qualified_name: "__builtin__.bytearray.index"
    return_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.bytearray"
        fully_qualified_name: "__builtin__.bytearray"
      }
    }
    parameters {
      name: "__sub"
      type_annotation {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
    }
    parameters {
      name: "__start"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
      has_default: true
    }
    parameters {
      name: "__end"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "insert"
    fully_qualified_name: "__builtin__.bytearray.insert"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.bytearray"
        fully_qualified_name: "__builtin__.bytearray"
      }
    }
    parameters {
      name: "__index"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    parameters {
      name: "__item"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "isalnum"
    fully_qualified_name: "__builtin__.bytearray.isalnum"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.bytearray"
        fully_qualified_name: "__builtin__.bytearray"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "isalpha"
    fully_qualified_name: "__builtin__.bytearray.isalpha"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.bytearray"
        fully_qualified_name: "__builtin__.bytearray"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "isdigit"
    fully_qualified_name: "__builtin__.bytearray.isdigit"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.bytearray"
        fully_qualified_name: "__builtin__.bytearray"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "islower"
    fully_qualified_name: "__builtin__.bytearray.islower"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.bytearray"
        fully_qualified_name: "__builtin__.bytearray"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "isspace"
    fully_qualified_name: "__builtin__.bytearray.isspace"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.bytearray"
        fully_qualified_name: "__builtin__.bytearray"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "istitle"
    fully_qualified_name: "__builtin__.bytearray.istitle"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.bytearray"
        fully_qualified_name: "__builtin__.bytearray"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "isupper"
    fully_qualified_name: "__builtin__.bytearray.isupper"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.bytearray"
        fully_qualified_name: "__builtin__.bytearray"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "join"
    fully_qualified_name: "__builtin__.bytearray.join"
    return_annotation {
      pretty_printed_name: "__builtin__.bytearray"
      fully_qualified_name: "__builtin__.bytearray"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.bytearray"
        fully_qualified_name: "__builtin__.bytearray"
      }
    }
    parameters {
      name: "__iterable"
      type_annotation {
        pretty_printed_name: "typing.Iterable[__builtin__.str]"
        args {
          pretty_printed_name: "__builtin__.str"
          fully_qualified_name: "__builtin__.str"
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "ljust"
    fully_qualified_name: "__builtin__.bytearray.ljust"
    return_annotation {
      pretty_printed_name: "__builtin__.bytearray"
      fully_qualified_name: "__builtin__.bytearray"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.bytearray"
        fully_qualified_name: "__builtin__.bytearray"
      }
    }
    parameters {
      name: "__width"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    parameters {
      name: "__fillchar"
      type_annotation {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "lower"
    fully_qualified_name: "__builtin__.bytearray.lower"
    return_annotation {
      pretty_printed_name: "__builtin__.bytearray"
      fully_qualified_name: "__builtin__.bytearray"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.bytearray"
        fully_qualified_name: "__builtin__.bytearray"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "lstrip"
    fully_qualified_name: "__builtin__.bytearray.lstrip"
    return_annotation {
      pretty_printed_name: "__builtin__.bytearray"
      fully_qualified_name: "__builtin__.bytearray"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.bytearray"
        fully_qualified_name: "__builtin__.bytearray"
      }
    }
    parameters {
      name: "__bytes"
      type_annotation {
        pretty_printed_name: "Union[__builtin__.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "__builtin__.str"
          fully_qualified_name: "__builtin__.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "partition"
    fully_qualified_name: "__builtin__.bytearray.partition"
    return_annotation {
      pretty_printed_name: "Tuple[__builtin__.bytearray,__builtin__.bytearray,__builtin__.bytearray]"
      kind: TUPLE
      args {
        pretty_printed_name: "__builtin__.bytearray"
        fully_qualified_name: "__builtin__.bytearray"
      }
      args {
        pretty_printed_name: "__builtin__.bytearray"
        fully_qualified_name: "__builtin__.bytearray"
      }
      args {
        pretty_printed_name: "__builtin__.bytearray"
        fully_qualified_name: "__builtin__.bytearray"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.bytearray"
        fully_qualified_name: "__builtin__.bytearray"
      }
    }
    parameters {
      name: "__sep"
      type_annotation {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "replace"
    fully_qualified_name: "__builtin__.bytearray.replace"
    return_annotation {
      pretty_printed_name: "__builtin__.bytearray"
      fully_qualified_name: "__builtin__.bytearray"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.bytearray"
        fully_qualified_name: "__builtin__.bytearray"
      }
    }
    parameters {
      name: "__old"
      type_annotation {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
    }
    parameters {
      name: "__new"
      type_annotation {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
    }
    parameters {
      name: "__count"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "rfind"
    fully_qualified_name: "__builtin__.bytearray.rfind"
    return_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.bytearray"
        fully_qualified_name: "__builtin__.bytearray"
      }
    }
    parameters {
      name: "__sub"
      type_annotation {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
    }
    parameters {
      name: "__start"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
      has_default: true
    }
    parameters {
      name: "__end"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "rindex"
    fully_qualified_name: "__builtin__.bytearray.rindex"
    return_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.bytearray"
        fully_qualified_name: "__builtin__.bytearray"
      }
    }
    parameters {
      name: "__sub"
      type_annotation {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
    }
    parameters {
      name: "__start"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
      has_default: true
    }
    parameters {
      name: "__end"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "rjust"
    fully_qualified_name: "__builtin__.bytearray.rjust"
    return_annotation {
      pretty_printed_name: "__builtin__.bytearray"
      fully_qualified_name: "__builtin__.bytearray"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.bytearray"
        fully_qualified_name: "__builtin__.bytearray"
      }
    }
    parameters {
      name: "__width"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    parameters {
      name: "__fillchar"
      type_annotation {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "rpartition"
    fully_qualified_name: "__builtin__.bytearray.rpartition"
    return_annotation {
      pretty_printed_name: "Tuple[__builtin__.bytearray,__builtin__.bytearray,__builtin__.bytearray]"
      kind: TUPLE
      args {
        pretty_printed_name: "__builtin__.bytearray"
        fully_qualified_name: "__builtin__.bytearray"
      }
      args {
        pretty_printed_name: "__builtin__.bytearray"
        fully_qualified_name: "__builtin__.bytearray"
      }
      args {
        pretty_printed_name: "__builtin__.bytearray"
        fully_qualified_name: "__builtin__.bytearray"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.bytearray"
        fully_qualified_name: "__builtin__.bytearray"
      }
    }
    parameters {
      name: "__sep"
      type_annotation {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "rsplit"
    fully_qualified_name: "__builtin__.bytearray.rsplit"
    return_annotation {
      pretty_printed_name: "builtins.list[__builtin__.bytearray]"
      args {
        pretty_printed_name: "__builtin__.bytearray"
        fully_qualified_name: "__builtin__.bytearray"
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.bytearray"
        fully_qualified_name: "__builtin__.bytearray"
      }
    }
    parameters {
      name: "sep"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[__builtin__.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "__builtin__.str"
          fully_qualified_name: "__builtin__.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "maxsplit"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "rstrip"
    fully_qualified_name: "__builtin__.bytearray.rstrip"
    return_annotation {
      pretty_printed_name: "__builtin__.bytearray"
      fully_qualified_name: "__builtin__.bytearray"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.bytearray"
        fully_qualified_name: "__builtin__.bytearray"
      }
    }
    parameters {
      name: "__bytes"
      type_annotation {
        pretty_printed_name: "Union[__builtin__.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "__builtin__.str"
          fully_qualified_name: "__builtin__.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "split"
    fully_qualified_name: "__builtin__.bytearray.split"
    return_annotation {
      pretty_printed_name: "builtins.list[__builtin__.bytearray]"
      args {
        pretty_printed_name: "__builtin__.bytearray"
        fully_qualified_name: "__builtin__.bytearray"
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.bytearray"
        fully_qualified_name: "__builtin__.bytearray"
      }
    }
    parameters {
      name: "sep"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[__builtin__.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "__builtin__.str"
          fully_qualified_name: "__builtin__.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "maxsplit"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "splitlines"
    fully_qualified_name: "__builtin__.bytearray.splitlines"
    return_annotation {
      pretty_printed_name: "builtins.list[__builtin__.bytearray]"
      args {
        pretty_printed_name: "__builtin__.bytearray"
        fully_qualified_name: "__builtin__.bytearray"
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.bytearray"
        fully_qualified_name: "__builtin__.bytearray"
      }
    }
    parameters {
      name: "keepends"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.bool"
        fully_qualified_name: "__builtin__.bool"
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "startswith"
    fully_qualified_name: "__builtin__.bytearray.startswith"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.bytearray"
        fully_qualified_name: "__builtin__.bytearray"
      }
    }
    parameters {
      name: "__prefix"
      type_annotation {
        pretty_printed_name: "Union[__builtin__.str,builtins.tuple[__builtin__.str]]"
        kind: UNION
        args {
          pretty_printed_name: "__builtin__.str"
          fully_qualified_name: "__builtin__.str"
        }
        args {
          pretty_printed_name: "builtins.tuple[__builtin__.str]"
          args {
            pretty_printed_name: "__builtin__.str"
            fully_qualified_name: "__builtin__.str"
          }
          fully_qualified_name: "builtins.tuple"
        }
      }
    }
    parameters {
      name: "__start"
      type_annotation {
        pretty_printed_name: "Union[__builtin__.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "__builtin__.int"
          fully_qualified_name: "__builtin__.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "__end"
      type_annotation {
        pretty_printed_name: "Union[__builtin__.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "__builtin__.int"
          fully_qualified_name: "__builtin__.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "strip"
    fully_qualified_name: "__builtin__.bytearray.strip"
    return_annotation {
      pretty_printed_name: "__builtin__.bytearray"
      fully_qualified_name: "__builtin__.bytearray"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.bytearray"
        fully_qualified_name: "__builtin__.bytearray"
      }
    }
    parameters {
      name: "__bytes"
      type_annotation {
        pretty_printed_name: "Union[__builtin__.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "__builtin__.str"
          fully_qualified_name: "__builtin__.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "swapcase"
    fully_qualified_name: "__builtin__.bytearray.swapcase"
    return_annotation {
      pretty_printed_name: "__builtin__.bytearray"
      fully_qualified_name: "__builtin__.bytearray"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.bytearray"
        fully_qualified_name: "__builtin__.bytearray"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "title"
    fully_qualified_name: "__builtin__.bytearray.title"
    return_annotation {
      pretty_printed_name: "__builtin__.bytearray"
      fully_qualified_name: "__builtin__.bytearray"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.bytearray"
        fully_qualified_name: "__builtin__.bytearray"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "translate"
    fully_qualified_name: "__builtin__.bytearray.translate"
    return_annotation {
      pretty_printed_name: "__builtin__.bytearray"
      fully_qualified_name: "__builtin__.bytearray"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.bytearray"
        fully_qualified_name: "__builtin__.bytearray"
      }
    }
    parameters {
      name: "__table"
      type_annotation {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "upper"
    fully_qualified_name: "__builtin__.bytearray.upper"
    return_annotation {
      pretty_printed_name: "__builtin__.bytearray"
      fully_qualified_name: "__builtin__.bytearray"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.bytearray"
        fully_qualified_name: "__builtin__.bytearray"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "zfill"
    fully_qualified_name: "__builtin__.bytearray.zfill"
    return_annotation {
      pretty_printed_name: "__builtin__.bytearray"
      fully_qualified_name: "__builtin__.bytearray"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.bytearray"
        fully_qualified_name: "__builtin__.bytearray"
      }
    }
    parameters {
      name: "__width"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "fromhex"
    fully_qualified_name: "__builtin__.bytearray.fromhex"
    return_annotation {
      pretty_printed_name: "__builtin__.bytearray"
      fully_qualified_name: "__builtin__.bytearray"
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.bytearray"
        fully_qualified_name: "__builtin__.bytearray"
      }
    }
    parameters {
      name: "__string"
      type_annotation {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
    }
    has_decorators: true
    resolved_decorator_names: "classmethod"
    valid_for: "27"
  }
  methods {
    name: "__len__"
    fully_qualified_name: "__builtin__.bytearray.__len__"
    return_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.bytearray"
        fully_qualified_name: "__builtin__.bytearray"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__iter__"
    fully_qualified_name: "__builtin__.bytearray.__iter__"
    return_annotation {
      pretty_printed_name: "typing.Iterator[__builtin__.int]"
      args {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.bytearray"
        fully_qualified_name: "__builtin__.bytearray"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__str__"
    fully_qualified_name: "__builtin__.bytearray.__str__"
    return_annotation {
      pretty_printed_name: "__builtin__.str"
      fully_qualified_name: "__builtin__.str"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.bytearray"
        fully_qualified_name: "__builtin__.bytearray"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__repr__"
    fully_qualified_name: "__builtin__.bytearray.__repr__"
    return_annotation {
      pretty_printed_name: "__builtin__.str"
      fully_qualified_name: "__builtin__.str"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.bytearray"
        fully_qualified_name: "__builtin__.bytearray"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__int__"
    fully_qualified_name: "__builtin__.bytearray.__int__"
    return_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.bytearray"
        fully_qualified_name: "__builtin__.bytearray"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__float__"
    fully_qualified_name: "__builtin__.bytearray.__float__"
    return_annotation {
      pretty_printed_name: "__builtin__.float"
      fully_qualified_name: "__builtin__.float"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.bytearray"
        fully_qualified_name: "__builtin__.bytearray"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__delitem__"
    fully_qualified_name: "__builtin__.bytearray.__delitem__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.bytearray"
        fully_qualified_name: "__builtin__.bytearray"
      }
    }
    parameters {
      name: "i"
      type_annotation {
        pretty_printed_name: "Union[__builtin__.int,__builtin__.slice]"
        kind: UNION
        args {
          pretty_printed_name: "__builtin__.int"
          fully_qualified_name: "__builtin__.int"
        }
        args {
          pretty_printed_name: "__builtin__.slice"
          fully_qualified_name: "__builtin__.slice"
        }
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__getslice__"
    fully_qualified_name: "__builtin__.bytearray.__getslice__"
    return_annotation {
      pretty_printed_name: "__builtin__.bytearray"
      fully_qualified_name: "__builtin__.bytearray"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.bytearray"
        fully_qualified_name: "__builtin__.bytearray"
      }
    }
    parameters {
      name: "start"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    parameters {
      name: "stop"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__setslice__"
    fully_qualified_name: "__builtin__.bytearray.__setslice__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.bytearray"
        fully_qualified_name: "__builtin__.bytearray"
      }
    }
    parameters {
      name: "start"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    parameters {
      name: "stop"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    parameters {
      name: "x"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.Sequence[__builtin__.int],__builtin__.str]"
        kind: UNION
        args {
          pretty_printed_name: "typing.Sequence[__builtin__.int]"
          args {
            pretty_printed_name: "__builtin__.int"
            fully_qualified_name: "__builtin__.int"
          }
          fully_qualified_name: "typing.Sequence"
        }
        args {
          pretty_printed_name: "__builtin__.str"
          fully_qualified_name: "__builtin__.str"
        }
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__delslice__"
    fully_qualified_name: "__builtin__.bytearray.__delslice__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.bytearray"
        fully_qualified_name: "__builtin__.bytearray"
      }
    }
    parameters {
      name: "start"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    parameters {
      name: "stop"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__add__"
    fully_qualified_name: "__builtin__.bytearray.__add__"
    return_annotation {
      pretty_printed_name: "__builtin__.bytearray"
      fully_qualified_name: "__builtin__.bytearray"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.bytearray"
        fully_qualified_name: "__builtin__.bytearray"
      }
    }
    parameters {
      name: "s"
      type_annotation {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__mul__"
    fully_qualified_name: "__builtin__.bytearray.__mul__"
    return_annotation {
      pretty_printed_name: "__builtin__.bytearray"
      fully_qualified_name: "__builtin__.bytearray"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.bytearray"
        fully_qualified_name: "__builtin__.bytearray"
      }
    }
    parameters {
      name: "n"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__contains__"
    fully_qualified_name: "__builtin__.bytearray.__contains__"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.bytearray"
        fully_qualified_name: "__builtin__.bytearray"
      }
    }
    parameters {
      name: "o"
      type_annotation {
        pretty_printed_name: "Union[__builtin__.int,__builtin__.str]"
        kind: UNION
        args {
          pretty_printed_name: "__builtin__.int"
          fully_qualified_name: "__builtin__.int"
        }
        args {
          pretty_printed_name: "__builtin__.str"
          fully_qualified_name: "__builtin__.str"
        }
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__eq__"
    fully_qualified_name: "__builtin__.bytearray.__eq__"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.bytearray"
        fully_qualified_name: "__builtin__.bytearray"
      }
    }
    parameters {
      name: "x"
      type_annotation {
        pretty_printed_name: "__builtin__.object"
        fully_qualified_name: "__builtin__.object"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__ne__"
    fully_qualified_name: "__builtin__.bytearray.__ne__"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.bytearray"
        fully_qualified_name: "__builtin__.bytearray"
      }
    }
    parameters {
      name: "x"
      type_annotation {
        pretty_printed_name: "__builtin__.object"
        fully_qualified_name: "__builtin__.object"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__lt__"
    fully_qualified_name: "__builtin__.bytearray.__lt__"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.bytearray"
        fully_qualified_name: "__builtin__.bytearray"
      }
    }
    parameters {
      name: "x"
      type_annotation {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__le__"
    fully_qualified_name: "__builtin__.bytearray.__le__"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.bytearray"
        fully_qualified_name: "__builtin__.bytearray"
      }
    }
    parameters {
      name: "x"
      type_annotation {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__gt__"
    fully_qualified_name: "__builtin__.bytearray.__gt__"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.bytearray"
        fully_qualified_name: "__builtin__.bytearray"
      }
    }
    parameters {
      name: "x"
      type_annotation {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__ge__"
    fully_qualified_name: "__builtin__.bytearray.__ge__"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.bytearray"
        fully_qualified_name: "__builtin__.bytearray"
      }
    }
    parameters {
      name: "x"
      type_annotation {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
    }
    valid_for: "27"
  }
  overloaded_methods {
    name: "__init__"
    fullname: "__builtin__.bytearray.__init__"
    definitions {
      name: "__init__"
      fully_qualified_name: "__builtin__.bytearray.__init__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "__builtin__.bytearray"
          fully_qualified_name: "__builtin__.bytearray"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__init__"
      fully_qualified_name: "__builtin__.bytearray.__init__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "__builtin__.bytearray"
          fully_qualified_name: "__builtin__.bytearray"
        }
      }
      parameters {
        name: "ints"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "typing.Iterable[__builtin__.int]"
          args {
            pretty_printed_name: "__builtin__.int"
            fully_qualified_name: "__builtin__.int"
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__init__"
      fully_qualified_name: "__builtin__.bytearray.__init__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "__builtin__.bytearray"
          fully_qualified_name: "__builtin__.bytearray"
        }
      }
      parameters {
        name: "string"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "__builtin__.str"
          fully_qualified_name: "__builtin__.str"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__init__"
      fully_qualified_name: "__builtin__.bytearray.__init__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "__builtin__.bytearray"
          fully_qualified_name: "__builtin__.bytearray"
        }
      }
      parameters {
        name: "string"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.unicode"
          fully_qualified_name: "builtins.unicode"
        }
      }
      parameters {
        name: "encoding"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.unicode"
          fully_qualified_name: "builtins.unicode"
        }
      }
      parameters {
        name: "errors"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.unicode"
          fully_qualified_name: "builtins.unicode"
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__init__"
      fully_qualified_name: "__builtin__.bytearray.__init__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "__builtin__.bytearray"
          fully_qualified_name: "__builtin__.bytearray"
        }
      }
      parameters {
        name: "length"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "__builtin__.int"
          fully_qualified_name: "__builtin__.int"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "27"
  }
  overloaded_methods {
    name: "__getitem__"
    fullname: "__builtin__.bytearray.__getitem__"
    definitions {
      name: "__getitem__"
      fully_qualified_name: "__builtin__.bytearray.__getitem__"
      return_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "__builtin__.bytearray"
          fully_qualified_name: "__builtin__.bytearray"
        }
      }
      parameters {
        name: "i"
        type_annotation {
          pretty_printed_name: "__builtin__.int"
          fully_qualified_name: "__builtin__.int"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__getitem__"
      fully_qualified_name: "__builtin__.bytearray.__getitem__"
      return_annotation {
        pretty_printed_name: "__builtin__.bytearray"
        fully_qualified_name: "__builtin__.bytearray"
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "__builtin__.bytearray"
          fully_qualified_name: "__builtin__.bytearray"
        }
      }
      parameters {
        name: "s"
        type_annotation {
          pretty_printed_name: "__builtin__.slice"
          fully_qualified_name: "__builtin__.slice"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "27"
  }
  overloaded_methods {
    name: "__setitem__"
    fullname: "__builtin__.bytearray.__setitem__"
    definitions {
      name: "__setitem__"
      fully_qualified_name: "__builtin__.bytearray.__setitem__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "__builtin__.bytearray"
          fully_qualified_name: "__builtin__.bytearray"
        }
      }
      parameters {
        name: "i"
        type_annotation {
          pretty_printed_name: "__builtin__.int"
          fully_qualified_name: "__builtin__.int"
        }
      }
      parameters {
        name: "x"
        type_annotation {
          pretty_printed_name: "__builtin__.int"
          fully_qualified_name: "__builtin__.int"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__setitem__"
      fully_qualified_name: "__builtin__.bytearray.__setitem__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "__builtin__.bytearray"
          fully_qualified_name: "__builtin__.bytearray"
        }
      }
      parameters {
        name: "s"
        type_annotation {
          pretty_printed_name: "__builtin__.slice"
          fully_qualified_name: "__builtin__.slice"
        }
      }
      parameters {
        name: "x"
        type_annotation {
          pretty_printed_name: "Union[typing.Iterable[__builtin__.int],__builtin__.str]"
          kind: UNION
          args {
            pretty_printed_name: "typing.Iterable[__builtin__.int]"
            args {
              pretty_printed_name: "__builtin__.int"
              fully_qualified_name: "__builtin__.int"
            }
            fully_qualified_name: "typing.Iterable"
          }
          args {
            pretty_printed_name: "__builtin__.str"
            fully_qualified_name: "__builtin__.str"
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "27"
  }
  valid_for: "27"
  attributes {
    name: "__hash__"
    fully_qualified_name: "__builtin__.bytearray.__hash__"
    type_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    valid_for: "27"
  }
}
classes {
  name: "memoryview"
  fully_qualified_name: "__builtin__.memoryview"
  super_classes: "typing.Sized"
  super_classes: "typing.Container"
  methods {
    name: "__init__"
    fully_qualified_name: "__builtin__.memoryview.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.memoryview"
        fully_qualified_name: "__builtin__.memoryview"
      }
    }
    parameters {
      name: "obj"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,builtins.buffer]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,builtins.buffer]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytearray"
            fully_qualified_name: "builtins.bytearray"
          }
          args {
            pretty_printed_name: "builtins.memoryview"
            fully_qualified_name: "builtins.memoryview"
          }
          args {
            pretty_printed_name: "array.array[Any]"
            args {
              pretty_printed_name: "Any"
              kind: ANY
            }
            fully_qualified_name: "array.array"
          }
          args {
            pretty_printed_name: "mmap.mmap"
            fully_qualified_name: "mmap.mmap"
          }
          args {
            pretty_printed_name: "builtins.buffer"
            fully_qualified_name: "builtins.buffer"
          }
        }
        fully_qualified_name: "_typeshed.ReadableBuffer"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__contains__"
    fully_qualified_name: "__builtin__.memoryview.__contains__"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.memoryview"
        fully_qualified_name: "__builtin__.memoryview"
      }
    }
    parameters {
      name: "x"
      type_annotation {
        pretty_printed_name: "__builtin__.object"
        fully_qualified_name: "__builtin__.object"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__iter__"
    fully_qualified_name: "__builtin__.memoryview.__iter__"
    return_annotation {
      pretty_printed_name: "typing.Iterator[__builtin__.str]"
      args {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.memoryview"
        fully_qualified_name: "__builtin__.memoryview"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__len__"
    fully_qualified_name: "__builtin__.memoryview.__len__"
    return_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.memoryview"
        fully_qualified_name: "__builtin__.memoryview"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "tobytes"
    fully_qualified_name: "__builtin__.memoryview.tobytes"
    return_annotation {
      pretty_printed_name: "__builtin__.str"
      fully_qualified_name: "__builtin__.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.memoryview"
        fully_qualified_name: "__builtin__.memoryview"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "tolist"
    fully_qualified_name: "__builtin__.memoryview.tolist"
    return_annotation {
      pretty_printed_name: "builtins.list[__builtin__.int]"
      args {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.memoryview"
        fully_qualified_name: "__builtin__.memoryview"
      }
    }
    valid_for: "27"
  }
  overloaded_methods {
    name: "__getitem__"
    fullname: "__builtin__.memoryview.__getitem__"
    definitions {
      name: "__getitem__"
      fully_qualified_name: "__builtin__.memoryview.__getitem__"
      return_annotation {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "__builtin__.memoryview"
          fully_qualified_name: "__builtin__.memoryview"
        }
      }
      parameters {
        name: "i"
        type_annotation {
          pretty_printed_name: "__builtin__.int"
          fully_qualified_name: "__builtin__.int"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__getitem__"
      fully_qualified_name: "__builtin__.memoryview.__getitem__"
      return_annotation {
        pretty_printed_name: "__builtin__.memoryview"
        fully_qualified_name: "__builtin__.memoryview"
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "__builtin__.memoryview"
          fully_qualified_name: "__builtin__.memoryview"
        }
      }
      parameters {
        name: "s"
        type_annotation {
          pretty_printed_name: "__builtin__.slice"
          fully_qualified_name: "__builtin__.slice"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "27"
  }
  overloaded_methods {
    name: "__setitem__"
    fullname: "__builtin__.memoryview.__setitem__"
    definitions {
      name: "__setitem__"
      fully_qualified_name: "__builtin__.memoryview.__setitem__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "__builtin__.memoryview"
          fully_qualified_name: "__builtin__.memoryview"
        }
      }
      parameters {
        name: "s"
        type_annotation {
          pretty_printed_name: "__builtin__.slice"
          fully_qualified_name: "__builtin__.slice"
        }
      }
      parameters {
        name: "o"
        type_annotation {
          pretty_printed_name: "__builtin__.str"
          fully_qualified_name: "__builtin__.str"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__setitem__"
      fully_qualified_name: "__builtin__.memoryview.__setitem__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "__builtin__.memoryview"
          fully_qualified_name: "__builtin__.memoryview"
        }
      }
      parameters {
        name: "i"
        type_annotation {
          pretty_printed_name: "__builtin__.int"
          fully_qualified_name: "__builtin__.int"
        }
      }
      parameters {
        name: "o"
        type_annotation {
          pretty_printed_name: "__builtin__.int"
          fully_qualified_name: "__builtin__.int"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "27"
  }
  valid_for: "27"
  attributes {
    name: "format"
    fully_qualified_name: "__builtin__.memoryview.format"
    type_annotation {
      pretty_printed_name: "__builtin__.str"
      fully_qualified_name: "__builtin__.str"
    }
    valid_for: "27"
  }
  attributes {
    name: "itemsize"
    fully_qualified_name: "__builtin__.memoryview.itemsize"
    type_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    valid_for: "27"
  }
  attributes {
    name: "shape"
    fully_qualified_name: "__builtin__.memoryview.shape"
    type_annotation {
      pretty_printed_name: "Union[builtins.tuple[__builtin__.int],None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.tuple[__builtin__.int]"
        args {
          pretty_printed_name: "__builtin__.int"
          fully_qualified_name: "__builtin__.int"
        }
        fully_qualified_name: "builtins.tuple"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "27"
  }
  attributes {
    name: "strides"
    fully_qualified_name: "__builtin__.memoryview.strides"
    type_annotation {
      pretty_printed_name: "Union[builtins.tuple[__builtin__.int],None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.tuple[__builtin__.int]"
        args {
          pretty_printed_name: "__builtin__.int"
          fully_qualified_name: "__builtin__.int"
        }
        fully_qualified_name: "builtins.tuple"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "27"
  }
  attributes {
    name: "suboffsets"
    fully_qualified_name: "__builtin__.memoryview.suboffsets"
    type_annotation {
      pretty_printed_name: "Union[builtins.tuple[__builtin__.int],None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.tuple[__builtin__.int]"
        args {
          pretty_printed_name: "__builtin__.int"
          fully_qualified_name: "__builtin__.int"
        }
        fully_qualified_name: "builtins.tuple"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "27"
  }
  attributes {
    name: "readonly"
    fully_qualified_name: "__builtin__.memoryview.readonly"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    valid_for: "27"
  }
  attributes {
    name: "ndim"
    fully_qualified_name: "__builtin__.memoryview.ndim"
    type_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    valid_for: "27"
  }
}
classes {
  name: "bool"
  fully_qualified_name: "__builtin__.bool"
  super_classes: "__builtin__.int"
  methods {
    name: "__new__"
    fully_qualified_name: "__builtin__.bool.__new__"
    return_annotation {
      pretty_printed_name: "__builtin__._T"
      kind: TYPE_VAR
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[__builtin__._T]"
        kind: TYPE
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
      }
    }
    parameters {
      name: "__o"
      type_annotation {
        pretty_printed_name: "__builtin__.object"
        fully_qualified_name: "__builtin__.object"
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "__getnewargs__"
    fully_qualified_name: "__builtin__.bool.__getnewargs__"
    return_annotation {
      pretty_printed_name: "Tuple[__builtin__.int]"
      kind: TUPLE
      args {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.bool"
        fully_qualified_name: "__builtin__.bool"
      }
    }
    valid_for: "27"
  }
  overloaded_methods {
    name: "__and__"
    fullname: "__builtin__.bool.__and__"
    definitions {
      name: "__and__"
      fully_qualified_name: "__builtin__.bool.__and__"
      return_annotation {
        pretty_printed_name: "__builtin__.bool"
        fully_qualified_name: "__builtin__.bool"
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "__builtin__.bool"
          fully_qualified_name: "__builtin__.bool"
        }
      }
      parameters {
        name: "x"
        type_annotation {
          pretty_printed_name: "__builtin__.bool"
          fully_qualified_name: "__builtin__.bool"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__and__"
      fully_qualified_name: "__builtin__.bool.__and__"
      return_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "__builtin__.bool"
          fully_qualified_name: "__builtin__.bool"
        }
      }
      parameters {
        name: "x"
        type_annotation {
          pretty_printed_name: "__builtin__.int"
          fully_qualified_name: "__builtin__.int"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "27"
  }
  overloaded_methods {
    name: "__or__"
    fullname: "__builtin__.bool.__or__"
    definitions {
      name: "__or__"
      fully_qualified_name: "__builtin__.bool.__or__"
      return_annotation {
        pretty_printed_name: "__builtin__.bool"
        fully_qualified_name: "__builtin__.bool"
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "__builtin__.bool"
          fully_qualified_name: "__builtin__.bool"
        }
      }
      parameters {
        name: "x"
        type_annotation {
          pretty_printed_name: "__builtin__.bool"
          fully_qualified_name: "__builtin__.bool"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__or__"
      fully_qualified_name: "__builtin__.bool.__or__"
      return_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "__builtin__.bool"
          fully_qualified_name: "__builtin__.bool"
        }
      }
      parameters {
        name: "x"
        type_annotation {
          pretty_printed_name: "__builtin__.int"
          fully_qualified_name: "__builtin__.int"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "27"
  }
  overloaded_methods {
    name: "__xor__"
    fullname: "__builtin__.bool.__xor__"
    definitions {
      name: "__xor__"
      fully_qualified_name: "__builtin__.bool.__xor__"
      return_annotation {
        pretty_printed_name: "__builtin__.bool"
        fully_qualified_name: "__builtin__.bool"
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "__builtin__.bool"
          fully_qualified_name: "__builtin__.bool"
        }
      }
      parameters {
        name: "x"
        type_annotation {
          pretty_printed_name: "__builtin__.bool"
          fully_qualified_name: "__builtin__.bool"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__xor__"
      fully_qualified_name: "__builtin__.bool.__xor__"
      return_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "__builtin__.bool"
          fully_qualified_name: "__builtin__.bool"
        }
      }
      parameters {
        name: "x"
        type_annotation {
          pretty_printed_name: "__builtin__.int"
          fully_qualified_name: "__builtin__.int"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "27"
  }
  overloaded_methods {
    name: "__rand__"
    fullname: "__builtin__.bool.__rand__"
    definitions {
      name: "__rand__"
      fully_qualified_name: "__builtin__.bool.__rand__"
      return_annotation {
        pretty_printed_name: "__builtin__.bool"
        fully_qualified_name: "__builtin__.bool"
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "__builtin__.bool"
          fully_qualified_name: "__builtin__.bool"
        }
      }
      parameters {
        name: "x"
        type_annotation {
          pretty_printed_name: "__builtin__.bool"
          fully_qualified_name: "__builtin__.bool"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__rand__"
      fully_qualified_name: "__builtin__.bool.__rand__"
      return_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "__builtin__.bool"
          fully_qualified_name: "__builtin__.bool"
        }
      }
      parameters {
        name: "x"
        type_annotation {
          pretty_printed_name: "__builtin__.int"
          fully_qualified_name: "__builtin__.int"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "27"
  }
  overloaded_methods {
    name: "__ror__"
    fullname: "__builtin__.bool.__ror__"
    definitions {
      name: "__ror__"
      fully_qualified_name: "__builtin__.bool.__ror__"
      return_annotation {
        pretty_printed_name: "__builtin__.bool"
        fully_qualified_name: "__builtin__.bool"
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "__builtin__.bool"
          fully_qualified_name: "__builtin__.bool"
        }
      }
      parameters {
        name: "x"
        type_annotation {
          pretty_printed_name: "__builtin__.bool"
          fully_qualified_name: "__builtin__.bool"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__ror__"
      fully_qualified_name: "__builtin__.bool.__ror__"
      return_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "__builtin__.bool"
          fully_qualified_name: "__builtin__.bool"
        }
      }
      parameters {
        name: "x"
        type_annotation {
          pretty_printed_name: "__builtin__.int"
          fully_qualified_name: "__builtin__.int"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "27"
  }
  overloaded_methods {
    name: "__rxor__"
    fullname: "__builtin__.bool.__rxor__"
    definitions {
      name: "__rxor__"
      fully_qualified_name: "__builtin__.bool.__rxor__"
      return_annotation {
        pretty_printed_name: "__builtin__.bool"
        fully_qualified_name: "__builtin__.bool"
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "__builtin__.bool"
          fully_qualified_name: "__builtin__.bool"
        }
      }
      parameters {
        name: "x"
        type_annotation {
          pretty_printed_name: "__builtin__.bool"
          fully_qualified_name: "__builtin__.bool"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__rxor__"
      fully_qualified_name: "__builtin__.bool.__rxor__"
      return_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "__builtin__.bool"
          fully_qualified_name: "__builtin__.bool"
        }
      }
      parameters {
        name: "x"
        type_annotation {
          pretty_printed_name: "__builtin__.int"
          fully_qualified_name: "__builtin__.int"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "27"
  }
  has_decorators: true
  valid_for: "27"
}
classes {
  name: "slice"
  fully_qualified_name: "__builtin__.slice"
  super_classes: "__builtin__.object"
  methods {
    name: "indices"
    fully_qualified_name: "__builtin__.slice.indices"
    return_annotation {
      pretty_printed_name: "Tuple[__builtin__.int,__builtin__.int,__builtin__.int]"
      kind: TUPLE
      args {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
      args {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
      args {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.slice"
        fully_qualified_name: "__builtin__.slice"
      }
    }
    parameters {
      name: "len"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    valid_for: "27"
  }
  overloaded_methods {
    name: "__init__"
    fullname: "__builtin__.slice.__init__"
    definitions {
      name: "__init__"
      fully_qualified_name: "__builtin__.slice.__init__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "__builtin__.slice"
          fully_qualified_name: "__builtin__.slice"
        }
      }
      parameters {
        name: "stop"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Any"
          kind: ANY
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__init__"
      fully_qualified_name: "__builtin__.slice.__init__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "__builtin__.slice"
          fully_qualified_name: "__builtin__.slice"
        }
      }
      parameters {
        name: "start"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Any"
          kind: ANY
        }
      }
      parameters {
        name: "stop"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Any"
          kind: ANY
        }
      }
      parameters {
        name: "step"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Any"
          kind: ANY
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "27"
  }
  valid_for: "27"
  attributes {
    name: "start"
    fully_qualified_name: "__builtin__.slice.start"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "27"
  }
  attributes {
    name: "step"
    fully_qualified_name: "__builtin__.slice.step"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "27"
  }
  attributes {
    name: "stop"
    fully_qualified_name: "__builtin__.slice.stop"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "27"
  }
  attributes {
    name: "__hash__"
    fully_qualified_name: "__builtin__.slice.__hash__"
    type_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    valid_for: "27"
  }
}
classes {
  name: "tuple"
  fully_qualified_name: "__builtin__.tuple"
  super_classes: "typing.Sequence"
  methods {
    name: "__new__"
    fully_qualified_name: "__builtin__.tuple.__new__"
    return_annotation {
      pretty_printed_name: "__builtin__._T"
      kind: TYPE_VAR
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[__builtin__._T]"
        kind: TYPE
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
      }
    }
    parameters {
      name: "iterable"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[__builtin__._T_co]"
        args {
          pretty_printed_name: "__builtin__._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "__len__"
    fully_qualified_name: "__builtin__.tuple.__len__"
    return_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.tuple[__builtin__._T_co]"
        args {
          pretty_printed_name: "__builtin__._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.tuple"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__contains__"
    fully_qualified_name: "__builtin__.tuple.__contains__"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.tuple[__builtin__._T_co]"
        args {
          pretty_printed_name: "__builtin__._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.tuple"
      }
    }
    parameters {
      name: "x"
      type_annotation {
        pretty_printed_name: "__builtin__.object"
        fully_qualified_name: "__builtin__.object"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__iter__"
    fully_qualified_name: "__builtin__.tuple.__iter__"
    return_annotation {
      pretty_printed_name: "typing.Iterator[__builtin__._T_co]"
      args {
        pretty_printed_name: "__builtin__._T_co"
        kind: TYPE_VAR
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.tuple[__builtin__._T_co]"
        args {
          pretty_printed_name: "__builtin__._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.tuple"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__lt__"
    fully_qualified_name: "__builtin__.tuple.__lt__"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.tuple[__builtin__._T_co]"
        args {
          pretty_printed_name: "__builtin__._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.tuple"
      }
    }
    parameters {
      name: "x"
      type_annotation {
        pretty_printed_name: "builtins.tuple[__builtin__._T_co]"
        args {
          pretty_printed_name: "__builtin__._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.tuple"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__le__"
    fully_qualified_name: "__builtin__.tuple.__le__"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.tuple[__builtin__._T_co]"
        args {
          pretty_printed_name: "__builtin__._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.tuple"
      }
    }
    parameters {
      name: "x"
      type_annotation {
        pretty_printed_name: "builtins.tuple[__builtin__._T_co]"
        args {
          pretty_printed_name: "__builtin__._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.tuple"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__gt__"
    fully_qualified_name: "__builtin__.tuple.__gt__"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.tuple[__builtin__._T_co]"
        args {
          pretty_printed_name: "__builtin__._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.tuple"
      }
    }
    parameters {
      name: "x"
      type_annotation {
        pretty_printed_name: "builtins.tuple[__builtin__._T_co]"
        args {
          pretty_printed_name: "__builtin__._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.tuple"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__ge__"
    fully_qualified_name: "__builtin__.tuple.__ge__"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.tuple[__builtin__._T_co]"
        args {
          pretty_printed_name: "__builtin__._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.tuple"
      }
    }
    parameters {
      name: "x"
      type_annotation {
        pretty_printed_name: "builtins.tuple[__builtin__._T_co]"
        args {
          pretty_printed_name: "__builtin__._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.tuple"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__mul__"
    fully_qualified_name: "__builtin__.tuple.__mul__"
    return_annotation {
      pretty_printed_name: "builtins.tuple[__builtin__._T_co]"
      args {
        pretty_printed_name: "__builtin__._T_co"
        kind: TYPE_VAR
      }
      fully_qualified_name: "builtins.tuple"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.tuple[__builtin__._T_co]"
        args {
          pretty_printed_name: "__builtin__._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.tuple"
      }
    }
    parameters {
      name: "n"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__rmul__"
    fully_qualified_name: "__builtin__.tuple.__rmul__"
    return_annotation {
      pretty_printed_name: "builtins.tuple[__builtin__._T_co]"
      args {
        pretty_printed_name: "__builtin__._T_co"
        kind: TYPE_VAR
      }
      fully_qualified_name: "builtins.tuple"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.tuple[__builtin__._T_co]"
        args {
          pretty_printed_name: "__builtin__._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.tuple"
      }
    }
    parameters {
      name: "n"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "count"
    fully_qualified_name: "__builtin__.tuple.count"
    return_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.tuple[__builtin__._T_co]"
        args {
          pretty_printed_name: "__builtin__._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.tuple"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "27"
  }
  methods {
    name: "index"
    fully_qualified_name: "__builtin__.tuple.index"
    return_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.tuple[__builtin__._T_co]"
        args {
          pretty_printed_name: "__builtin__._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.tuple"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "27"
  }
  overloaded_methods {
    name: "__getitem__"
    fullname: "__builtin__.tuple.__getitem__"
    definitions {
      name: "__getitem__"
      fully_qualified_name: "__builtin__.tuple.__getitem__"
      return_annotation {
        pretty_printed_name: "__builtin__._T_co"
        kind: TYPE_VAR
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "__builtin__.tuple[__builtin__._T_co]"
          args {
            pretty_printed_name: "__builtin__._T_co"
            kind: TYPE_VAR
          }
          fully_qualified_name: "__builtin__.tuple"
        }
      }
      parameters {
        name: "x"
        type_annotation {
          pretty_printed_name: "__builtin__.int"
          fully_qualified_name: "__builtin__.int"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__getitem__"
      fully_qualified_name: "__builtin__.tuple.__getitem__"
      return_annotation {
        pretty_printed_name: "builtins.tuple[__builtin__._T_co]"
        args {
          pretty_printed_name: "__builtin__._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.tuple"
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "__builtin__.tuple[__builtin__._T_co]"
          args {
            pretty_printed_name: "__builtin__._T_co"
            kind: TYPE_VAR
          }
          fully_qualified_name: "__builtin__.tuple"
        }
      }
      parameters {
        name: "x"
        type_annotation {
          pretty_printed_name: "__builtin__.slice"
          fully_qualified_name: "__builtin__.slice"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "27"
  }
  overloaded_methods {
    name: "__add__"
    fullname: "__builtin__.tuple.__add__"
    definitions {
      name: "__add__"
      fully_qualified_name: "__builtin__.tuple.__add__"
      return_annotation {
        pretty_printed_name: "builtins.tuple[__builtin__._T_co]"
        args {
          pretty_printed_name: "__builtin__._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.tuple"
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "__builtin__.tuple[__builtin__._T_co]"
          args {
            pretty_printed_name: "__builtin__._T_co"
            kind: TYPE_VAR
          }
          fully_qualified_name: "__builtin__.tuple"
        }
      }
      parameters {
        name: "x"
        type_annotation {
          pretty_printed_name: "builtins.tuple[__builtin__._T_co]"
          args {
            pretty_printed_name: "__builtin__._T_co"
            kind: TYPE_VAR
          }
          fully_qualified_name: "builtins.tuple"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__add__"
      fully_qualified_name: "__builtin__.tuple.__add__"
      return_annotation {
        pretty_printed_name: "builtins.tuple[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "builtins.tuple"
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "__builtin__.tuple[__builtin__._T_co]"
          args {
            pretty_printed_name: "__builtin__._T_co"
            kind: TYPE_VAR
          }
          fully_qualified_name: "__builtin__.tuple"
        }
      }
      parameters {
        name: "x"
        type_annotation {
          pretty_printed_name: "builtins.tuple[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "builtins.tuple"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "27"
  }
  is_generic: true
  valid_for: "27"
}
classes {
  name: "function"
  fully_qualified_name: "__builtin__.function"
  super_classes: "builtins.object"
  valid_for: "27"
  attributes {
    name: "__module__"
    fully_qualified_name: "__builtin__.function.__module__"
    type_annotation {
      pretty_printed_name: "__builtin__.str"
      fully_qualified_name: "__builtin__.str"
    }
    valid_for: "27"
  }
  attributes {
    name: "__code__"
    fully_qualified_name: "__builtin__.function.__code__"
    type_annotation {
      pretty_printed_name: "types.CodeType"
      fully_qualified_name: "types.CodeType"
    }
    valid_for: "27"
  }
}
classes {
  name: "list"
  fully_qualified_name: "__builtin__.list"
  super_classes: "typing.MutableSequence"
  methods {
    name: "append"
    fully_qualified_name: "__builtin__.list.append"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.list[__builtin__._T]"
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.list"
      }
    }
    parameters {
      name: "__object"
      type_annotation {
        pretty_printed_name: "__builtin__._T"
        kind: TYPE_VAR
      }
    }
    valid_for: "27"
  }
  methods {
    name: "extend"
    fully_qualified_name: "__builtin__.list.extend"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.list[__builtin__._T]"
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.list"
      }
    }
    parameters {
      name: "__iterable"
      type_annotation {
        pretty_printed_name: "typing.Iterable[__builtin__._T]"
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "pop"
    fully_qualified_name: "__builtin__.list.pop"
    return_annotation {
      pretty_printed_name: "__builtin__._T"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.list[__builtin__._T]"
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.list"
      }
    }
    parameters {
      name: "__index"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "index"
    fully_qualified_name: "__builtin__.list.index"
    return_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.list[__builtin__._T]"
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.list"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "__builtin__._T"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "__start"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
      has_default: true
    }
    parameters {
      name: "__stop"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "count"
    fully_qualified_name: "__builtin__.list.count"
    return_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.list[__builtin__._T]"
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.list"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "__builtin__._T"
        kind: TYPE_VAR
      }
    }
    valid_for: "27"
  }
  methods {
    name: "insert"
    fully_qualified_name: "__builtin__.list.insert"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.list[__builtin__._T]"
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.list"
      }
    }
    parameters {
      name: "__index"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    parameters {
      name: "__object"
      type_annotation {
        pretty_printed_name: "__builtin__._T"
        kind: TYPE_VAR
      }
    }
    valid_for: "27"
  }
  methods {
    name: "remove"
    fully_qualified_name: "__builtin__.list.remove"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.list[__builtin__._T]"
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.list"
      }
    }
    parameters {
      name: "__value"
      type_annotation {
        pretty_printed_name: "__builtin__._T"
        kind: TYPE_VAR
      }
    }
    valid_for: "27"
  }
  methods {
    name: "reverse"
    fully_qualified_name: "__builtin__.list.reverse"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.list[__builtin__._T]"
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.list"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "sort"
    fully_qualified_name: "__builtin__.list.sort"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.list[__builtin__._T]"
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.list"
      }
    }
    parameters {
      name: "cmp"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
      has_default: true
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
      has_default: true
    }
    parameters {
      name: "reverse"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.bool"
        fully_qualified_name: "__builtin__.bool"
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "__len__"
    fully_qualified_name: "__builtin__.list.__len__"
    return_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.list[__builtin__._T]"
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.list"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__iter__"
    fully_qualified_name: "__builtin__.list.__iter__"
    return_annotation {
      pretty_printed_name: "typing.Iterator[__builtin__._T]"
      args {
        pretty_printed_name: "__builtin__._T"
        kind: TYPE_VAR
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.list[__builtin__._T]"
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.list"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__str__"
    fully_qualified_name: "__builtin__.list.__str__"
    return_annotation {
      pretty_printed_name: "__builtin__.str"
      fully_qualified_name: "__builtin__.str"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.list[__builtin__._T]"
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.list"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__delitem__"
    fully_qualified_name: "__builtin__.list.__delitem__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.list[__builtin__._T]"
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.list"
      }
    }
    parameters {
      name: "i"
      type_annotation {
        pretty_printed_name: "Union[__builtin__.int,__builtin__.slice]"
        kind: UNION
        args {
          pretty_printed_name: "__builtin__.int"
          fully_qualified_name: "__builtin__.int"
        }
        args {
          pretty_printed_name: "__builtin__.slice"
          fully_qualified_name: "__builtin__.slice"
        }
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__getslice__"
    fully_qualified_name: "__builtin__.list.__getslice__"
    return_annotation {
      pretty_printed_name: "builtins.list[__builtin__._T]"
      args {
        pretty_printed_name: "__builtin__._T"
        kind: TYPE_VAR
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.list[__builtin__._T]"
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.list"
      }
    }
    parameters {
      name: "start"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    parameters {
      name: "stop"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__setslice__"
    fully_qualified_name: "__builtin__.list.__setslice__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.list[__builtin__._T]"
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.list"
      }
    }
    parameters {
      name: "start"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    parameters {
      name: "stop"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    parameters {
      name: "o"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Sequence[__builtin__._T]"
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Sequence"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__delslice__"
    fully_qualified_name: "__builtin__.list.__delslice__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.list[__builtin__._T]"
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.list"
      }
    }
    parameters {
      name: "start"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    parameters {
      name: "stop"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__add__"
    fully_qualified_name: "__builtin__.list.__add__"
    return_annotation {
      pretty_printed_name: "builtins.list[__builtin__._T]"
      args {
        pretty_printed_name: "__builtin__._T"
        kind: TYPE_VAR
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.list[__builtin__._T]"
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.list"
      }
    }
    parameters {
      name: "x"
      type_annotation {
        pretty_printed_name: "builtins.list[__builtin__._T]"
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.list"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__iadd__"
    fully_qualified_name: "__builtin__.list.__iadd__"
    return_annotation {
      pretty_printed_name: "__builtin__._S"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__._S"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "x"
      type_annotation {
        pretty_printed_name: "typing.Iterable[__builtin__._T]"
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__mul__"
    fully_qualified_name: "__builtin__.list.__mul__"
    return_annotation {
      pretty_printed_name: "builtins.list[__builtin__._T]"
      args {
        pretty_printed_name: "__builtin__._T"
        kind: TYPE_VAR
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.list[__builtin__._T]"
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.list"
      }
    }
    parameters {
      name: "n"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__rmul__"
    fully_qualified_name: "__builtin__.list.__rmul__"
    return_annotation {
      pretty_printed_name: "builtins.list[__builtin__._T]"
      args {
        pretty_printed_name: "__builtin__._T"
        kind: TYPE_VAR
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.list[__builtin__._T]"
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.list"
      }
    }
    parameters {
      name: "n"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__contains__"
    fully_qualified_name: "__builtin__.list.__contains__"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.list[__builtin__._T]"
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.list"
      }
    }
    parameters {
      name: "o"
      type_annotation {
        pretty_printed_name: "__builtin__.object"
        fully_qualified_name: "__builtin__.object"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__reversed__"
    fully_qualified_name: "__builtin__.list.__reversed__"
    return_annotation {
      pretty_printed_name: "typing.Iterator[__builtin__._T]"
      args {
        pretty_printed_name: "__builtin__._T"
        kind: TYPE_VAR
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.list[__builtin__._T]"
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.list"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__gt__"
    fully_qualified_name: "__builtin__.list.__gt__"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.list[__builtin__._T]"
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.list"
      }
    }
    parameters {
      name: "x"
      type_annotation {
        pretty_printed_name: "builtins.list[__builtin__._T]"
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.list"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__ge__"
    fully_qualified_name: "__builtin__.list.__ge__"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.list[__builtin__._T]"
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.list"
      }
    }
    parameters {
      name: "x"
      type_annotation {
        pretty_printed_name: "builtins.list[__builtin__._T]"
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.list"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__lt__"
    fully_qualified_name: "__builtin__.list.__lt__"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.list[__builtin__._T]"
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.list"
      }
    }
    parameters {
      name: "x"
      type_annotation {
        pretty_printed_name: "builtins.list[__builtin__._T]"
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.list"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__le__"
    fully_qualified_name: "__builtin__.list.__le__"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.list[__builtin__._T]"
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.list"
      }
    }
    parameters {
      name: "x"
      type_annotation {
        pretty_printed_name: "builtins.list[__builtin__._T]"
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.list"
      }
    }
    valid_for: "27"
  }
  overloaded_methods {
    name: "__init__"
    fullname: "__builtin__.list.__init__"
    definitions {
      name: "__init__"
      fully_qualified_name: "__builtin__.list.__init__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "__builtin__.list[__builtin__._T]"
          args {
            pretty_printed_name: "__builtin__._T"
            kind: TYPE_VAR
          }
          fully_qualified_name: "__builtin__.list"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__init__"
      fully_qualified_name: "__builtin__.list.__init__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "__builtin__.list[__builtin__._T]"
          args {
            pretty_printed_name: "__builtin__._T"
            kind: TYPE_VAR
          }
          fully_qualified_name: "__builtin__.list"
        }
      }
      parameters {
        name: "iterable"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "typing.Iterable[__builtin__._T]"
          args {
            pretty_printed_name: "__builtin__._T"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "27"
  }
  overloaded_methods {
    name: "__getitem__"
    fullname: "__builtin__.list.__getitem__"
    definitions {
      name: "__getitem__"
      fully_qualified_name: "__builtin__.list.__getitem__"
      return_annotation {
        pretty_printed_name: "__builtin__._T"
        kind: TYPE_VAR
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "__builtin__.list[__builtin__._T]"
          args {
            pretty_printed_name: "__builtin__._T"
            kind: TYPE_VAR
          }
          fully_qualified_name: "__builtin__.list"
        }
      }
      parameters {
        name: "i"
        type_annotation {
          pretty_printed_name: "__builtin__.int"
          fully_qualified_name: "__builtin__.int"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__getitem__"
      fully_qualified_name: "__builtin__.list.__getitem__"
      return_annotation {
        pretty_printed_name: "builtins.list[__builtin__._T]"
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.list"
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "__builtin__.list[__builtin__._T]"
          args {
            pretty_printed_name: "__builtin__._T"
            kind: TYPE_VAR
          }
          fully_qualified_name: "__builtin__.list"
        }
      }
      parameters {
        name: "s"
        type_annotation {
          pretty_printed_name: "__builtin__.slice"
          fully_qualified_name: "__builtin__.slice"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "27"
  }
  overloaded_methods {
    name: "__setitem__"
    fullname: "__builtin__.list.__setitem__"
    definitions {
      name: "__setitem__"
      fully_qualified_name: "__builtin__.list.__setitem__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "__builtin__.list[__builtin__._T]"
          args {
            pretty_printed_name: "__builtin__._T"
            kind: TYPE_VAR
          }
          fully_qualified_name: "__builtin__.list"
        }
      }
      parameters {
        name: "i"
        type_annotation {
          pretty_printed_name: "__builtin__.int"
          fully_qualified_name: "__builtin__.int"
        }
      }
      parameters {
        name: "o"
        type_annotation {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__setitem__"
      fully_qualified_name: "__builtin__.list.__setitem__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "__builtin__.list[__builtin__._T]"
          args {
            pretty_printed_name: "__builtin__._T"
            kind: TYPE_VAR
          }
          fully_qualified_name: "__builtin__.list"
        }
      }
      parameters {
        name: "s"
        type_annotation {
          pretty_printed_name: "__builtin__.slice"
          fully_qualified_name: "__builtin__.slice"
        }
      }
      parameters {
        name: "o"
        type_annotation {
          pretty_printed_name: "typing.Iterable[__builtin__._T]"
          args {
            pretty_printed_name: "__builtin__._T"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "27"
  }
  is_generic: true
  valid_for: "27"
  attributes {
    name: "__hash__"
    fully_qualified_name: "__builtin__.list.__hash__"
    type_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    valid_for: "27"
  }
}
classes {
  name: "dict"
  fully_qualified_name: "__builtin__.dict"
  super_classes: "typing.MutableMapping"
  methods {
    name: "__new__"
    fully_qualified_name: "__builtin__.dict.__new__"
    return_annotation {
      pretty_printed_name: "__builtin__._T1"
      kind: TYPE_VAR
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[__builtin__._T1]"
        kind: TYPE
        args {
          pretty_printed_name: "__builtin__._T1"
          kind: TYPE_VAR
        }
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "kwargs"
      kind: VAR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "27"
  }
  methods {
    name: "has_key"
    fully_qualified_name: "__builtin__.dict.has_key"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.dict[__builtin__._KT,__builtin__._VT]"
        args {
          pretty_printed_name: "__builtin__._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "__builtin__._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.dict"
      }
    }
    parameters {
      name: "k"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__._KT"
        kind: TYPE_VAR
      }
    }
    valid_for: "27"
  }
  methods {
    name: "clear"
    fully_qualified_name: "__builtin__.dict.clear"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.dict[__builtin__._KT,__builtin__._VT]"
        args {
          pretty_printed_name: "__builtin__._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "__builtin__._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.dict"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "copy"
    fully_qualified_name: "__builtin__.dict.copy"
    return_annotation {
      pretty_printed_name: "builtins.dict[__builtin__._KT,__builtin__._VT]"
      args {
        pretty_printed_name: "__builtin__._KT"
        kind: TYPE_VAR
      }
      args {
        pretty_printed_name: "__builtin__._VT"
        kind: TYPE_VAR
      }
      fully_qualified_name: "builtins.dict"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.dict[__builtin__._KT,__builtin__._VT]"
        args {
          pretty_printed_name: "__builtin__._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "__builtin__._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.dict"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "popitem"
    fully_qualified_name: "__builtin__.dict.popitem"
    return_annotation {
      pretty_printed_name: "Tuple[__builtin__._KT,__builtin__._VT]"
      kind: TUPLE
      args {
        pretty_printed_name: "__builtin__._KT"
        kind: TYPE_VAR
      }
      args {
        pretty_printed_name: "__builtin__._VT"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.dict[__builtin__._KT,__builtin__._VT]"
        args {
          pretty_printed_name: "__builtin__._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "__builtin__._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.dict"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "setdefault"
    fully_qualified_name: "__builtin__.dict.setdefault"
    return_annotation {
      pretty_printed_name: "__builtin__._VT"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.dict[__builtin__._KT,__builtin__._VT]"
        args {
          pretty_printed_name: "__builtin__._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "__builtin__._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.dict"
      }
    }
    parameters {
      name: "__key"
      type_annotation {
        pretty_printed_name: "__builtin__._KT"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "__default"
      type_annotation {
        pretty_printed_name: "__builtin__._VT"
        kind: TYPE_VAR
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "iterkeys"
    fully_qualified_name: "__builtin__.dict.iterkeys"
    return_annotation {
      pretty_printed_name: "typing.Iterator[__builtin__._KT]"
      args {
        pretty_printed_name: "__builtin__._KT"
        kind: TYPE_VAR
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.dict[__builtin__._KT,__builtin__._VT]"
        args {
          pretty_printed_name: "__builtin__._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "__builtin__._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.dict"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "itervalues"
    fully_qualified_name: "__builtin__.dict.itervalues"
    return_annotation {
      pretty_printed_name: "typing.Iterator[__builtin__._VT]"
      args {
        pretty_printed_name: "__builtin__._VT"
        kind: TYPE_VAR
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.dict[__builtin__._KT,__builtin__._VT]"
        args {
          pretty_printed_name: "__builtin__._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "__builtin__._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.dict"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "iteritems"
    fully_qualified_name: "__builtin__.dict.iteritems"
    return_annotation {
      pretty_printed_name: "typing.Iterator[Tuple[__builtin__._KT,__builtin__._VT]]"
      args {
        pretty_printed_name: "Tuple[__builtin__._KT,__builtin__._VT]"
        kind: TUPLE
        args {
          pretty_printed_name: "__builtin__._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "__builtin__._VT"
          kind: TYPE_VAR
        }
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.dict[__builtin__._KT,__builtin__._VT]"
        args {
          pretty_printed_name: "__builtin__._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "__builtin__._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.dict"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "viewkeys"
    fully_qualified_name: "__builtin__.dict.viewkeys"
    return_annotation {
      pretty_printed_name: "typing.KeysView[__builtin__._KT]"
      args {
        pretty_printed_name: "__builtin__._KT"
        kind: TYPE_VAR
      }
      fully_qualified_name: "typing.KeysView"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.dict[__builtin__._KT,__builtin__._VT]"
        args {
          pretty_printed_name: "__builtin__._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "__builtin__._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.dict"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "viewvalues"
    fully_qualified_name: "__builtin__.dict.viewvalues"
    return_annotation {
      pretty_printed_name: "typing.ValuesView[__builtin__._VT]"
      args {
        pretty_printed_name: "__builtin__._VT"
        kind: TYPE_VAR
      }
      fully_qualified_name: "typing.ValuesView"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.dict[__builtin__._KT,__builtin__._VT]"
        args {
          pretty_printed_name: "__builtin__._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "__builtin__._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.dict"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "viewitems"
    fully_qualified_name: "__builtin__.dict.viewitems"
    return_annotation {
      pretty_printed_name: "typing.ItemsView[__builtin__._KT,__builtin__._VT]"
      args {
        pretty_printed_name: "__builtin__._KT"
        kind: TYPE_VAR
      }
      args {
        pretty_printed_name: "__builtin__._VT"
        kind: TYPE_VAR
      }
      fully_qualified_name: "typing.ItemsView"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.dict[__builtin__._KT,__builtin__._VT]"
        args {
          pretty_printed_name: "__builtin__._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "__builtin__._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.dict"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__len__"
    fully_qualified_name: "__builtin__.dict.__len__"
    return_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.dict[__builtin__._KT,__builtin__._VT]"
        args {
          pretty_printed_name: "__builtin__._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "__builtin__._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.dict"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__getitem__"
    fully_qualified_name: "__builtin__.dict.__getitem__"
    return_annotation {
      pretty_printed_name: "__builtin__._VT"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.dict[__builtin__._KT,__builtin__._VT]"
        args {
          pretty_printed_name: "__builtin__._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "__builtin__._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.dict"
      }
    }
    parameters {
      name: "k"
      type_annotation {
        pretty_printed_name: "__builtin__._KT"
        kind: TYPE_VAR
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__setitem__"
    fully_qualified_name: "__builtin__.dict.__setitem__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.dict[__builtin__._KT,__builtin__._VT]"
        args {
          pretty_printed_name: "__builtin__._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "__builtin__._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.dict"
      }
    }
    parameters {
      name: "k"
      type_annotation {
        pretty_printed_name: "__builtin__._KT"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "v"
      type_annotation {
        pretty_printed_name: "__builtin__._VT"
        kind: TYPE_VAR
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__delitem__"
    fully_qualified_name: "__builtin__.dict.__delitem__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.dict[__builtin__._KT,__builtin__._VT]"
        args {
          pretty_printed_name: "__builtin__._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "__builtin__._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.dict"
      }
    }
    parameters {
      name: "v"
      type_annotation {
        pretty_printed_name: "__builtin__._KT"
        kind: TYPE_VAR
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__iter__"
    fully_qualified_name: "__builtin__.dict.__iter__"
    return_annotation {
      pretty_printed_name: "typing.Iterator[__builtin__._KT]"
      args {
        pretty_printed_name: "__builtin__._KT"
        kind: TYPE_VAR
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.dict[__builtin__._KT,__builtin__._VT]"
        args {
          pretty_printed_name: "__builtin__._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "__builtin__._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.dict"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__str__"
    fully_qualified_name: "__builtin__.dict.__str__"
    return_annotation {
      pretty_printed_name: "__builtin__.str"
      fully_qualified_name: "__builtin__.str"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.dict[__builtin__._KT,__builtin__._VT]"
        args {
          pretty_printed_name: "__builtin__._KT"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "__builtin__._VT"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.dict"
      }
    }
    valid_for: "27"
  }
  overloaded_methods {
    name: "__init__"
    fullname: "__builtin__.dict.__init__"
    definitions {
      name: "__init__"
      fully_qualified_name: "__builtin__.dict.__init__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "__builtin__.dict[__builtin__._KT,__builtin__._VT]"
          args {
            pretty_printed_name: "__builtin__._KT"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "__builtin__._VT"
            kind: TYPE_VAR
          }
          fully_qualified_name: "__builtin__.dict"
        }
      }
      parameters {
        name: "kwargs"
        kind: VAR_KEYWORD
        type_annotation {
          pretty_printed_name: "__builtin__._VT"
          kind: TYPE_VAR
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__init__"
      fully_qualified_name: "__builtin__.dict.__init__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "__builtin__.dict[__builtin__._KT,__builtin__._VT]"
          args {
            pretty_printed_name: "__builtin__._KT"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "__builtin__._VT"
            kind: TYPE_VAR
          }
          fully_qualified_name: "__builtin__.dict"
        }
      }
      parameters {
        name: "map"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "_typeshed.SupportsKeysAndGetItem[__builtin__._KT,__builtin__._VT]"
          args {
            pretty_printed_name: "__builtin__._KT"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "__builtin__._VT"
            kind: TYPE_VAR
          }
          fully_qualified_name: "_typeshed.SupportsKeysAndGetItem"
        }
      }
      parameters {
        name: "kwargs"
        kind: VAR_KEYWORD
        type_annotation {
          pretty_printed_name: "__builtin__._VT"
          kind: TYPE_VAR
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__init__"
      fully_qualified_name: "__builtin__.dict.__init__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "__builtin__.dict[__builtin__._KT,__builtin__._VT]"
          args {
            pretty_printed_name: "__builtin__._KT"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "__builtin__._VT"
            kind: TYPE_VAR
          }
          fully_qualified_name: "__builtin__.dict"
        }
      }
      parameters {
        name: "iterable"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "typing.Iterable[Tuple[__builtin__._KT,__builtin__._VT]]"
          args {
            pretty_printed_name: "Tuple[__builtin__._KT,__builtin__._VT]"
            kind: TUPLE
            args {
              pretty_printed_name: "__builtin__._KT"
              kind: TYPE_VAR
            }
            args {
              pretty_printed_name: "__builtin__._VT"
              kind: TYPE_VAR
            }
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "kwargs"
        kind: VAR_KEYWORD
        type_annotation {
          pretty_printed_name: "__builtin__._VT"
          kind: TYPE_VAR
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "27"
  }
  overloaded_methods {
    name: "update"
    fullname: "__builtin__.dict.update"
    definitions {
      name: "update"
      fully_qualified_name: "__builtin__.dict.update"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "__builtin__.dict[__builtin__._KT,__builtin__._VT]"
          args {
            pretty_printed_name: "__builtin__._KT"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "__builtin__._VT"
            kind: TYPE_VAR
          }
          fully_qualified_name: "__builtin__.dict"
        }
      }
      parameters {
        name: "__m"
        type_annotation {
          pretty_printed_name: "typing.Mapping[__builtin__._KT,__builtin__._VT]"
          args {
            pretty_printed_name: "__builtin__._KT"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "__builtin__._VT"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Mapping"
        }
      }
      parameters {
        name: "kwargs"
        kind: VAR_KEYWORD
        type_annotation {
          pretty_printed_name: "__builtin__._VT"
          kind: TYPE_VAR
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "update"
      fully_qualified_name: "__builtin__.dict.update"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "__builtin__.dict[__builtin__._KT,__builtin__._VT]"
          args {
            pretty_printed_name: "__builtin__._KT"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "__builtin__._VT"
            kind: TYPE_VAR
          }
          fully_qualified_name: "__builtin__.dict"
        }
      }
      parameters {
        name: "__m"
        type_annotation {
          pretty_printed_name: "typing.Iterable[Tuple[__builtin__._KT,__builtin__._VT]]"
          args {
            pretty_printed_name: "Tuple[__builtin__._KT,__builtin__._VT]"
            kind: TUPLE
            args {
              pretty_printed_name: "__builtin__._KT"
              kind: TYPE_VAR
            }
            args {
              pretty_printed_name: "__builtin__._VT"
              kind: TYPE_VAR
            }
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "kwargs"
        kind: VAR_KEYWORD
        type_annotation {
          pretty_printed_name: "__builtin__._VT"
          kind: TYPE_VAR
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "update"
      fully_qualified_name: "__builtin__.dict.update"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "__builtin__.dict[__builtin__._KT,__builtin__._VT]"
          args {
            pretty_printed_name: "__builtin__._KT"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "__builtin__._VT"
            kind: TYPE_VAR
          }
          fully_qualified_name: "__builtin__.dict"
        }
      }
      parameters {
        name: "kwargs"
        kind: VAR_KEYWORD
        type_annotation {
          pretty_printed_name: "__builtin__._VT"
          kind: TYPE_VAR
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "27"
  }
  overloaded_methods {
    name: "fromkeys"
    fullname: "__builtin__.dict.fromkeys"
    definitions {
      name: "fromkeys"
      fully_qualified_name: "__builtin__.dict.fromkeys"
      return_annotation {
        pretty_printed_name: "builtins.dict[__builtin__._T,Any]"
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "builtins.dict"
      }
      parameters {
        name: "cls"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "__builtin__.dict[__builtin__._KT,__builtin__._VT]"
          args {
            pretty_printed_name: "__builtin__._KT"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "__builtin__._VT"
            kind: TYPE_VAR
          }
          fully_qualified_name: "__builtin__.dict"
        }
      }
      parameters {
        name: "__iterable"
        type_annotation {
          pretty_printed_name: "typing.Iterable[__builtin__._T]"
          args {
            pretty_printed_name: "__builtin__._T"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      has_decorators: true
      resolved_decorator_names: "classmethod"
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "fromkeys"
      fully_qualified_name: "__builtin__.dict.fromkeys"
      return_annotation {
        pretty_printed_name: "builtins.dict[__builtin__._T,__builtin__._S]"
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "__builtin__._S"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.dict"
      }
      parameters {
        name: "cls"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "__builtin__.dict[__builtin__._KT,__builtin__._VT]"
          args {
            pretty_printed_name: "__builtin__._KT"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "__builtin__._VT"
            kind: TYPE_VAR
          }
          fully_qualified_name: "__builtin__.dict"
        }
      }
      parameters {
        name: "__iterable"
        type_annotation {
          pretty_printed_name: "typing.Iterable[__builtin__._T]"
          args {
            pretty_printed_name: "__builtin__._T"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "__value"
        type_annotation {
          pretty_printed_name: "__builtin__._S"
          kind: TYPE_VAR
        }
      }
      has_decorators: true
      resolved_decorator_names: "classmethod"
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "27"
  }
  is_generic: true
  valid_for: "27"
  attributes {
    name: "__hash__"
    fully_qualified_name: "__builtin__.dict.__hash__"
    type_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    valid_for: "27"
  }
}
classes {
  name: "set"
  fully_qualified_name: "__builtin__.set"
  super_classes: "typing.MutableSet"
  methods {
    name: "__init__"
    fully_qualified_name: "__builtin__.set.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.set[__builtin__._T]"
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.set"
      }
    }
    parameters {
      name: "iterable"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[__builtin__._T]"
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "add"
    fully_qualified_name: "__builtin__.set.add"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.set[__builtin__._T]"
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.set"
      }
    }
    parameters {
      name: "element"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__._T"
        kind: TYPE_VAR
      }
    }
    valid_for: "27"
  }
  methods {
    name: "clear"
    fully_qualified_name: "__builtin__.set.clear"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.set[__builtin__._T]"
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.set"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "copy"
    fully_qualified_name: "__builtin__.set.copy"
    return_annotation {
      pretty_printed_name: "builtins.set[__builtin__._T]"
      args {
        pretty_printed_name: "__builtin__._T"
        kind: TYPE_VAR
      }
      fully_qualified_name: "builtins.set"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.set[__builtin__._T]"
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.set"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "difference"
    fully_qualified_name: "__builtin__.set.difference"
    return_annotation {
      pretty_printed_name: "builtins.set[__builtin__._T]"
      args {
        pretty_printed_name: "__builtin__._T"
        kind: TYPE_VAR
      }
      fully_qualified_name: "builtins.set"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.set[__builtin__._T]"
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.set"
      }
    }
    parameters {
      name: "s"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "typing.Iterable[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "difference_update"
    fully_qualified_name: "__builtin__.set.difference_update"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.set[__builtin__._T]"
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.set"
      }
    }
    parameters {
      name: "s"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "typing.Iterable[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "discard"
    fully_qualified_name: "__builtin__.set.discard"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.set[__builtin__._T]"
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.set"
      }
    }
    parameters {
      name: "element"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__._T"
        kind: TYPE_VAR
      }
    }
    valid_for: "27"
  }
  methods {
    name: "intersection"
    fully_qualified_name: "__builtin__.set.intersection"
    return_annotation {
      pretty_printed_name: "builtins.set[__builtin__._T]"
      args {
        pretty_printed_name: "__builtin__._T"
        kind: TYPE_VAR
      }
      fully_qualified_name: "builtins.set"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.set[__builtin__._T]"
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.set"
      }
    }
    parameters {
      name: "s"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "typing.Iterable[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "intersection_update"
    fully_qualified_name: "__builtin__.set.intersection_update"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.set[__builtin__._T]"
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.set"
      }
    }
    parameters {
      name: "s"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "typing.Iterable[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "isdisjoint"
    fully_qualified_name: "__builtin__.set.isdisjoint"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.set[__builtin__._T]"
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.set"
      }
    }
    parameters {
      name: "s"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "issubset"
    fully_qualified_name: "__builtin__.set.issubset"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.set[__builtin__._T]"
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.set"
      }
    }
    parameters {
      name: "s"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "issuperset"
    fully_qualified_name: "__builtin__.set.issuperset"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.set[__builtin__._T]"
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.set"
      }
    }
    parameters {
      name: "s"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "pop"
    fully_qualified_name: "__builtin__.set.pop"
    return_annotation {
      pretty_printed_name: "__builtin__._T"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.set[__builtin__._T]"
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.set"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "remove"
    fully_qualified_name: "__builtin__.set.remove"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.set[__builtin__._T]"
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.set"
      }
    }
    parameters {
      name: "element"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__._T"
        kind: TYPE_VAR
      }
    }
    valid_for: "27"
  }
  methods {
    name: "symmetric_difference"
    fully_qualified_name: "__builtin__.set.symmetric_difference"
    return_annotation {
      pretty_printed_name: "builtins.set[__builtin__._T]"
      args {
        pretty_printed_name: "__builtin__._T"
        kind: TYPE_VAR
      }
      fully_qualified_name: "builtins.set"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.set[__builtin__._T]"
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.set"
      }
    }
    parameters {
      name: "s"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[__builtin__._T]"
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "symmetric_difference_update"
    fully_qualified_name: "__builtin__.set.symmetric_difference_update"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.set[__builtin__._T]"
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.set"
      }
    }
    parameters {
      name: "s"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[__builtin__._T]"
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "union"
    fully_qualified_name: "__builtin__.set.union"
    return_annotation {
      pretty_printed_name: "builtins.set[__builtin__._T]"
      args {
        pretty_printed_name: "__builtin__._T"
        kind: TYPE_VAR
      }
      fully_qualified_name: "builtins.set"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.set[__builtin__._T]"
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.set"
      }
    }
    parameters {
      name: "s"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "typing.Iterable[__builtin__._T]"
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "update"
    fully_qualified_name: "__builtin__.set.update"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.set[__builtin__._T]"
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.set"
      }
    }
    parameters {
      name: "s"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "typing.Iterable[__builtin__._T]"
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__len__"
    fully_qualified_name: "__builtin__.set.__len__"
    return_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.set[__builtin__._T]"
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.set"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__contains__"
    fully_qualified_name: "__builtin__.set.__contains__"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.set[__builtin__._T]"
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.set"
      }
    }
    parameters {
      name: "o"
      type_annotation {
        pretty_printed_name: "__builtin__.object"
        fully_qualified_name: "__builtin__.object"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__iter__"
    fully_qualified_name: "__builtin__.set.__iter__"
    return_annotation {
      pretty_printed_name: "typing.Iterator[__builtin__._T]"
      args {
        pretty_printed_name: "__builtin__._T"
        kind: TYPE_VAR
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.set[__builtin__._T]"
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.set"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__str__"
    fully_qualified_name: "__builtin__.set.__str__"
    return_annotation {
      pretty_printed_name: "__builtin__.str"
      fully_qualified_name: "__builtin__.str"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.set[__builtin__._T]"
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.set"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__and__"
    fully_qualified_name: "__builtin__.set.__and__"
    return_annotation {
      pretty_printed_name: "builtins.set[__builtin__._T]"
      args {
        pretty_printed_name: "__builtin__._T"
        kind: TYPE_VAR
      }
      fully_qualified_name: "builtins.set"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.set[__builtin__._T]"
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.set"
      }
    }
    parameters {
      name: "s"
      type_annotation {
        pretty_printed_name: "typing.AbstractSet[__builtin__.object]"
        args {
          pretty_printed_name: "__builtin__.object"
          fully_qualified_name: "__builtin__.object"
        }
        fully_qualified_name: "typing.AbstractSet"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__iand__"
    fully_qualified_name: "__builtin__.set.__iand__"
    return_annotation {
      pretty_printed_name: "builtins.set[__builtin__._T]"
      args {
        pretty_printed_name: "__builtin__._T"
        kind: TYPE_VAR
      }
      fully_qualified_name: "builtins.set"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.set[__builtin__._T]"
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.set"
      }
    }
    parameters {
      name: "s"
      type_annotation {
        pretty_printed_name: "typing.AbstractSet[__builtin__.object]"
        args {
          pretty_printed_name: "__builtin__.object"
          fully_qualified_name: "__builtin__.object"
        }
        fully_qualified_name: "typing.AbstractSet"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__or__"
    fully_qualified_name: "__builtin__.set.__or__"
    return_annotation {
      pretty_printed_name: "builtins.set[Union[__builtin__._T,__builtin__._S]]"
      args {
        pretty_printed_name: "Union[__builtin__._T,__builtin__._S]"
        kind: UNION
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "__builtin__._S"
          kind: TYPE_VAR
        }
      }
      fully_qualified_name: "builtins.set"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.set[__builtin__._T]"
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.set"
      }
    }
    parameters {
      name: "s"
      type_annotation {
        pretty_printed_name: "typing.AbstractSet[__builtin__._S]"
        args {
          pretty_printed_name: "__builtin__._S"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.AbstractSet"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__ior__"
    fully_qualified_name: "__builtin__.set.__ior__"
    return_annotation {
      pretty_printed_name: "builtins.set[Union[__builtin__._T,__builtin__._S]]"
      args {
        pretty_printed_name: "Union[__builtin__._T,__builtin__._S]"
        kind: UNION
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "__builtin__._S"
          kind: TYPE_VAR
        }
      }
      fully_qualified_name: "builtins.set"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.set[__builtin__._T]"
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.set"
      }
    }
    parameters {
      name: "s"
      type_annotation {
        pretty_printed_name: "typing.AbstractSet[__builtin__._S]"
        args {
          pretty_printed_name: "__builtin__._S"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.AbstractSet"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__xor__"
    fully_qualified_name: "__builtin__.set.__xor__"
    return_annotation {
      pretty_printed_name: "builtins.set[Union[__builtin__._T,__builtin__._S]]"
      args {
        pretty_printed_name: "Union[__builtin__._T,__builtin__._S]"
        kind: UNION
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "__builtin__._S"
          kind: TYPE_VAR
        }
      }
      fully_qualified_name: "builtins.set"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.set[__builtin__._T]"
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.set"
      }
    }
    parameters {
      name: "s"
      type_annotation {
        pretty_printed_name: "typing.AbstractSet[__builtin__._S]"
        args {
          pretty_printed_name: "__builtin__._S"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.AbstractSet"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__ixor__"
    fully_qualified_name: "__builtin__.set.__ixor__"
    return_annotation {
      pretty_printed_name: "builtins.set[Union[__builtin__._T,__builtin__._S]]"
      args {
        pretty_printed_name: "Union[__builtin__._T,__builtin__._S]"
        kind: UNION
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "__builtin__._S"
          kind: TYPE_VAR
        }
      }
      fully_qualified_name: "builtins.set"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.set[__builtin__._T]"
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.set"
      }
    }
    parameters {
      name: "s"
      type_annotation {
        pretty_printed_name: "typing.AbstractSet[__builtin__._S]"
        args {
          pretty_printed_name: "__builtin__._S"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.AbstractSet"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__le__"
    fully_qualified_name: "__builtin__.set.__le__"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.set[__builtin__._T]"
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.set"
      }
    }
    parameters {
      name: "s"
      type_annotation {
        pretty_printed_name: "typing.AbstractSet[__builtin__.object]"
        args {
          pretty_printed_name: "__builtin__.object"
          fully_qualified_name: "__builtin__.object"
        }
        fully_qualified_name: "typing.AbstractSet"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__lt__"
    fully_qualified_name: "__builtin__.set.__lt__"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.set[__builtin__._T]"
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.set"
      }
    }
    parameters {
      name: "s"
      type_annotation {
        pretty_printed_name: "typing.AbstractSet[__builtin__.object]"
        args {
          pretty_printed_name: "__builtin__.object"
          fully_qualified_name: "__builtin__.object"
        }
        fully_qualified_name: "typing.AbstractSet"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__ge__"
    fully_qualified_name: "__builtin__.set.__ge__"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.set[__builtin__._T]"
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.set"
      }
    }
    parameters {
      name: "s"
      type_annotation {
        pretty_printed_name: "typing.AbstractSet[__builtin__.object]"
        args {
          pretty_printed_name: "__builtin__.object"
          fully_qualified_name: "__builtin__.object"
        }
        fully_qualified_name: "typing.AbstractSet"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__gt__"
    fully_qualified_name: "__builtin__.set.__gt__"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.set[__builtin__._T]"
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.set"
      }
    }
    parameters {
      name: "s"
      type_annotation {
        pretty_printed_name: "typing.AbstractSet[__builtin__.object]"
        args {
          pretty_printed_name: "__builtin__.object"
          fully_qualified_name: "__builtin__.object"
        }
        fully_qualified_name: "typing.AbstractSet"
      }
    }
    valid_for: "27"
  }
  overloaded_methods {
    name: "__sub__"
    fullname: "__builtin__.set.__sub__"
    definitions {
      name: "__sub__"
      fully_qualified_name: "__builtin__.set.__sub__"
      return_annotation {
        pretty_printed_name: "builtins.set[__builtin__._T]"
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.set"
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "builtins.set[__builtin__.str]"
          args {
            pretty_printed_name: "__builtin__.str"
            fully_qualified_name: "__builtin__.str"
          }
          fully_qualified_name: "builtins.set"
        }
      }
      parameters {
        name: "s"
        type_annotation {
          pretty_printed_name: "typing.AbstractSet[Union[builtins.unicode,None]]"
          args {
            pretty_printed_name: "Union[builtins.unicode,None]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.unicode"
              fully_qualified_name: "builtins.unicode"
            }
            args {
              pretty_printed_name: "None"
              kind: NONE
            }
          }
          fully_qualified_name: "typing.AbstractSet"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__sub__"
      fully_qualified_name: "__builtin__.set.__sub__"
      return_annotation {
        pretty_printed_name: "builtins.set[__builtin__._T]"
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.set"
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "__builtin__.set[__builtin__._T]"
          args {
            pretty_printed_name: "__builtin__._T"
            kind: TYPE_VAR
          }
          fully_qualified_name: "__builtin__.set"
        }
      }
      parameters {
        name: "s"
        type_annotation {
          pretty_printed_name: "typing.AbstractSet[Union[__builtin__._T,None]]"
          args {
            pretty_printed_name: "Union[__builtin__._T,None]"
            kind: UNION
            args {
              pretty_printed_name: "__builtin__._T"
              kind: TYPE_VAR
            }
            args {
              pretty_printed_name: "None"
              kind: NONE
            }
          }
          fully_qualified_name: "typing.AbstractSet"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "27"
  }
  overloaded_methods {
    name: "__isub__"
    fullname: "__builtin__.set.__isub__"
    definitions {
      name: "__isub__"
      fully_qualified_name: "__builtin__.set.__isub__"
      return_annotation {
        pretty_printed_name: "builtins.set[__builtin__._T]"
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.set"
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "builtins.set[__builtin__.str]"
          args {
            pretty_printed_name: "__builtin__.str"
            fully_qualified_name: "__builtin__.str"
          }
          fully_qualified_name: "builtins.set"
        }
      }
      parameters {
        name: "s"
        type_annotation {
          pretty_printed_name: "typing.AbstractSet[Union[builtins.unicode,None]]"
          args {
            pretty_printed_name: "Union[builtins.unicode,None]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.unicode"
              fully_qualified_name: "builtins.unicode"
            }
            args {
              pretty_printed_name: "None"
              kind: NONE
            }
          }
          fully_qualified_name: "typing.AbstractSet"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__isub__"
      fully_qualified_name: "__builtin__.set.__isub__"
      return_annotation {
        pretty_printed_name: "builtins.set[__builtin__._T]"
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.set"
      }
      parameters {
        name: "self"
        type_annotation {
          pretty_printed_name: "__builtin__.set[__builtin__._T]"
          args {
            pretty_printed_name: "__builtin__._T"
            kind: TYPE_VAR
          }
          fully_qualified_name: "__builtin__.set"
        }
      }
      parameters {
        name: "s"
        type_annotation {
          pretty_printed_name: "typing.AbstractSet[Union[__builtin__._T,None]]"
          args {
            pretty_printed_name: "Union[__builtin__._T,None]"
            kind: UNION
            args {
              pretty_printed_name: "__builtin__._T"
              kind: TYPE_VAR
            }
            args {
              pretty_printed_name: "None"
              kind: NONE
            }
          }
          fully_qualified_name: "typing.AbstractSet"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "27"
  }
  is_generic: true
  valid_for: "27"
  attributes {
    name: "__hash__"
    fully_qualified_name: "__builtin__.set.__hash__"
    type_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    valid_for: "27"
  }
}
classes {
  name: "frozenset"
  fully_qualified_name: "__builtin__.frozenset"
  super_classes: "typing.AbstractSet"
  methods {
    name: "__init__"
    fully_qualified_name: "__builtin__.frozenset.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.frozenset[__builtin__._T_co]"
        args {
          pretty_printed_name: "__builtin__._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.frozenset"
      }
    }
    parameters {
      name: "iterable"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[__builtin__._T_co]"
        args {
          pretty_printed_name: "__builtin__._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "copy"
    fully_qualified_name: "__builtin__.frozenset.copy"
    return_annotation {
      pretty_printed_name: "builtins.frozenset[__builtin__._T_co]"
      args {
        pretty_printed_name: "__builtin__._T_co"
        kind: TYPE_VAR
      }
      fully_qualified_name: "builtins.frozenset"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.frozenset[__builtin__._T_co]"
        args {
          pretty_printed_name: "__builtin__._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.frozenset"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "difference"
    fully_qualified_name: "__builtin__.frozenset.difference"
    return_annotation {
      pretty_printed_name: "builtins.frozenset[__builtin__._T_co]"
      args {
        pretty_printed_name: "__builtin__._T_co"
        kind: TYPE_VAR
      }
      fully_qualified_name: "builtins.frozenset"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.frozenset[__builtin__._T_co]"
        args {
          pretty_printed_name: "__builtin__._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.frozenset"
      }
    }
    parameters {
      name: "s"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "typing.Iterable[__builtin__.object]"
        args {
          pretty_printed_name: "__builtin__.object"
          fully_qualified_name: "__builtin__.object"
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "intersection"
    fully_qualified_name: "__builtin__.frozenset.intersection"
    return_annotation {
      pretty_printed_name: "builtins.frozenset[__builtin__._T_co]"
      args {
        pretty_printed_name: "__builtin__._T_co"
        kind: TYPE_VAR
      }
      fully_qualified_name: "builtins.frozenset"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.frozenset[__builtin__._T_co]"
        args {
          pretty_printed_name: "__builtin__._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.frozenset"
      }
    }
    parameters {
      name: "s"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "typing.Iterable[__builtin__.object]"
        args {
          pretty_printed_name: "__builtin__.object"
          fully_qualified_name: "__builtin__.object"
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "isdisjoint"
    fully_qualified_name: "__builtin__.frozenset.isdisjoint"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.frozenset[__builtin__._T_co]"
        args {
          pretty_printed_name: "__builtin__._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.frozenset"
      }
    }
    parameters {
      name: "s"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[__builtin__._T_co]"
        args {
          pretty_printed_name: "__builtin__._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "issubset"
    fully_qualified_name: "__builtin__.frozenset.issubset"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.frozenset[__builtin__._T_co]"
        args {
          pretty_printed_name: "__builtin__._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.frozenset"
      }
    }
    parameters {
      name: "s"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[__builtin__.object]"
        args {
          pretty_printed_name: "__builtin__.object"
          fully_qualified_name: "__builtin__.object"
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "issuperset"
    fully_qualified_name: "__builtin__.frozenset.issuperset"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.frozenset[__builtin__._T_co]"
        args {
          pretty_printed_name: "__builtin__._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.frozenset"
      }
    }
    parameters {
      name: "s"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[__builtin__.object]"
        args {
          pretty_printed_name: "__builtin__.object"
          fully_qualified_name: "__builtin__.object"
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "symmetric_difference"
    fully_qualified_name: "__builtin__.frozenset.symmetric_difference"
    return_annotation {
      pretty_printed_name: "builtins.frozenset[__builtin__._T_co]"
      args {
        pretty_printed_name: "__builtin__._T_co"
        kind: TYPE_VAR
      }
      fully_qualified_name: "builtins.frozenset"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.frozenset[__builtin__._T_co]"
        args {
          pretty_printed_name: "__builtin__._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.frozenset"
      }
    }
    parameters {
      name: "s"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[__builtin__._T_co]"
        args {
          pretty_printed_name: "__builtin__._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "union"
    fully_qualified_name: "__builtin__.frozenset.union"
    return_annotation {
      pretty_printed_name: "builtins.frozenset[__builtin__._T_co]"
      args {
        pretty_printed_name: "__builtin__._T_co"
        kind: TYPE_VAR
      }
      fully_qualified_name: "builtins.frozenset"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.frozenset[__builtin__._T_co]"
        args {
          pretty_printed_name: "__builtin__._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.frozenset"
      }
    }
    parameters {
      name: "s"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "typing.Iterable[__builtin__._T_co]"
        args {
          pretty_printed_name: "__builtin__._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__len__"
    fully_qualified_name: "__builtin__.frozenset.__len__"
    return_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.frozenset[__builtin__._T_co]"
        args {
          pretty_printed_name: "__builtin__._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.frozenset"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__contains__"
    fully_qualified_name: "__builtin__.frozenset.__contains__"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.frozenset[__builtin__._T_co]"
        args {
          pretty_printed_name: "__builtin__._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.frozenset"
      }
    }
    parameters {
      name: "o"
      type_annotation {
        pretty_printed_name: "__builtin__.object"
        fully_qualified_name: "__builtin__.object"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__iter__"
    fully_qualified_name: "__builtin__.frozenset.__iter__"
    return_annotation {
      pretty_printed_name: "typing.Iterator[__builtin__._T_co]"
      args {
        pretty_printed_name: "__builtin__._T_co"
        kind: TYPE_VAR
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.frozenset[__builtin__._T_co]"
        args {
          pretty_printed_name: "__builtin__._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.frozenset"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__str__"
    fully_qualified_name: "__builtin__.frozenset.__str__"
    return_annotation {
      pretty_printed_name: "__builtin__.str"
      fully_qualified_name: "__builtin__.str"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.frozenset[__builtin__._T_co]"
        args {
          pretty_printed_name: "__builtin__._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.frozenset"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__and__"
    fully_qualified_name: "__builtin__.frozenset.__and__"
    return_annotation {
      pretty_printed_name: "builtins.frozenset[__builtin__._T_co]"
      args {
        pretty_printed_name: "__builtin__._T_co"
        kind: TYPE_VAR
      }
      fully_qualified_name: "builtins.frozenset"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.frozenset[__builtin__._T_co]"
        args {
          pretty_printed_name: "__builtin__._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.frozenset"
      }
    }
    parameters {
      name: "s"
      type_annotation {
        pretty_printed_name: "typing.AbstractSet[__builtin__._T_co]"
        args {
          pretty_printed_name: "__builtin__._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.AbstractSet"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__or__"
    fully_qualified_name: "__builtin__.frozenset.__or__"
    return_annotation {
      pretty_printed_name: "builtins.frozenset[Union[__builtin__._T_co,__builtin__._S]]"
      args {
        pretty_printed_name: "Union[__builtin__._T_co,__builtin__._S]"
        kind: UNION
        args {
          pretty_printed_name: "__builtin__._T_co"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "__builtin__._S"
          kind: TYPE_VAR
        }
      }
      fully_qualified_name: "builtins.frozenset"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.frozenset[__builtin__._T_co]"
        args {
          pretty_printed_name: "__builtin__._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.frozenset"
      }
    }
    parameters {
      name: "s"
      type_annotation {
        pretty_printed_name: "typing.AbstractSet[__builtin__._S]"
        args {
          pretty_printed_name: "__builtin__._S"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.AbstractSet"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__sub__"
    fully_qualified_name: "__builtin__.frozenset.__sub__"
    return_annotation {
      pretty_printed_name: "builtins.frozenset[__builtin__._T_co]"
      args {
        pretty_printed_name: "__builtin__._T_co"
        kind: TYPE_VAR
      }
      fully_qualified_name: "builtins.frozenset"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.frozenset[__builtin__._T_co]"
        args {
          pretty_printed_name: "__builtin__._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.frozenset"
      }
    }
    parameters {
      name: "s"
      type_annotation {
        pretty_printed_name: "typing.AbstractSet[__builtin__._T_co]"
        args {
          pretty_printed_name: "__builtin__._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.AbstractSet"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__xor__"
    fully_qualified_name: "__builtin__.frozenset.__xor__"
    return_annotation {
      pretty_printed_name: "builtins.frozenset[Union[__builtin__._T_co,__builtin__._S]]"
      args {
        pretty_printed_name: "Union[__builtin__._T_co,__builtin__._S]"
        kind: UNION
        args {
          pretty_printed_name: "__builtin__._T_co"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "__builtin__._S"
          kind: TYPE_VAR
        }
      }
      fully_qualified_name: "builtins.frozenset"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.frozenset[__builtin__._T_co]"
        args {
          pretty_printed_name: "__builtin__._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.frozenset"
      }
    }
    parameters {
      name: "s"
      type_annotation {
        pretty_printed_name: "typing.AbstractSet[__builtin__._S]"
        args {
          pretty_printed_name: "__builtin__._S"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.AbstractSet"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__le__"
    fully_qualified_name: "__builtin__.frozenset.__le__"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.frozenset[__builtin__._T_co]"
        args {
          pretty_printed_name: "__builtin__._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.frozenset"
      }
    }
    parameters {
      name: "s"
      type_annotation {
        pretty_printed_name: "typing.AbstractSet[__builtin__.object]"
        args {
          pretty_printed_name: "__builtin__.object"
          fully_qualified_name: "__builtin__.object"
        }
        fully_qualified_name: "typing.AbstractSet"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__lt__"
    fully_qualified_name: "__builtin__.frozenset.__lt__"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.frozenset[__builtin__._T_co]"
        args {
          pretty_printed_name: "__builtin__._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.frozenset"
      }
    }
    parameters {
      name: "s"
      type_annotation {
        pretty_printed_name: "typing.AbstractSet[__builtin__.object]"
        args {
          pretty_printed_name: "__builtin__.object"
          fully_qualified_name: "__builtin__.object"
        }
        fully_qualified_name: "typing.AbstractSet"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__ge__"
    fully_qualified_name: "__builtin__.frozenset.__ge__"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.frozenset[__builtin__._T_co]"
        args {
          pretty_printed_name: "__builtin__._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.frozenset"
      }
    }
    parameters {
      name: "s"
      type_annotation {
        pretty_printed_name: "typing.AbstractSet[__builtin__.object]"
        args {
          pretty_printed_name: "__builtin__.object"
          fully_qualified_name: "__builtin__.object"
        }
        fully_qualified_name: "typing.AbstractSet"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__gt__"
    fully_qualified_name: "__builtin__.frozenset.__gt__"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.frozenset[__builtin__._T_co]"
        args {
          pretty_printed_name: "__builtin__._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.frozenset"
      }
    }
    parameters {
      name: "s"
      type_annotation {
        pretty_printed_name: "typing.AbstractSet[__builtin__.object]"
        args {
          pretty_printed_name: "__builtin__.object"
          fully_qualified_name: "__builtin__.object"
        }
        fully_qualified_name: "typing.AbstractSet"
      }
    }
    valid_for: "27"
  }
  is_generic: true
  valid_for: "27"
}
classes {
  name: "enumerate"
  fully_qualified_name: "__builtin__.enumerate"
  super_classes: "typing.Iterator"
  methods {
    name: "__init__"
    fully_qualified_name: "__builtin__.enumerate.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.enumerate[__builtin__._T]"
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.enumerate"
      }
    }
    parameters {
      name: "iterable"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[__builtin__._T]"
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    parameters {
      name: "start"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "__iter__"
    fully_qualified_name: "__builtin__.enumerate.__iter__"
    return_annotation {
      pretty_printed_name: "typing.Iterator[Tuple[__builtin__.int,__builtin__._T]]"
      args {
        pretty_printed_name: "Tuple[__builtin__.int,__builtin__._T]"
        kind: TUPLE
        args {
          pretty_printed_name: "__builtin__.int"
          fully_qualified_name: "__builtin__.int"
        }
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.enumerate[__builtin__._T]"
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.enumerate"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "next"
    fully_qualified_name: "__builtin__.enumerate.next"
    return_annotation {
      pretty_printed_name: "Tuple[__builtin__.int,__builtin__._T]"
      kind: TUPLE
      args {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
      args {
        pretty_printed_name: "__builtin__._T"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.enumerate[__builtin__._T]"
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__.enumerate"
      }
    }
    valid_for: "27"
  }
  is_generic: true
  valid_for: "27"
}
classes {
  name: "xrange"
  fully_qualified_name: "__builtin__.xrange"
  super_classes: "typing.Sized"
  super_classes: "typing.Iterable"
  super_classes: "typing.Reversible"
  methods {
    name: "__len__"
    fully_qualified_name: "__builtin__.xrange.__len__"
    return_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.xrange"
        fully_qualified_name: "__builtin__.xrange"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__iter__"
    fully_qualified_name: "__builtin__.xrange.__iter__"
    return_annotation {
      pretty_printed_name: "typing.Iterator[__builtin__.int]"
      args {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.xrange"
        fully_qualified_name: "__builtin__.xrange"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__getitem__"
    fully_qualified_name: "__builtin__.xrange.__getitem__"
    return_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.xrange"
        fully_qualified_name: "__builtin__.xrange"
      }
    }
    parameters {
      name: "i"
      type_annotation {
        pretty_printed_name: "__builtin__._SupportsIndex"
        fully_qualified_name: "__builtin__._SupportsIndex"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__reversed__"
    fully_qualified_name: "__builtin__.xrange.__reversed__"
    return_annotation {
      pretty_printed_name: "typing.Iterator[__builtin__.int]"
      args {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.xrange"
        fully_qualified_name: "__builtin__.xrange"
      }
    }
    valid_for: "27"
  }
  overloaded_methods {
    name: "__init__"
    fullname: "__builtin__.xrange.__init__"
    definitions {
      name: "__init__"
      fully_qualified_name: "__builtin__.xrange.__init__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "__builtin__.xrange"
          fully_qualified_name: "__builtin__.xrange"
        }
      }
      parameters {
        name: "stop"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "__builtin__.int"
          fully_qualified_name: "__builtin__.int"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__init__"
      fully_qualified_name: "__builtin__.xrange.__init__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "__builtin__.xrange"
          fully_qualified_name: "__builtin__.xrange"
        }
      }
      parameters {
        name: "start"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "__builtin__.int"
          fully_qualified_name: "__builtin__.int"
        }
      }
      parameters {
        name: "stop"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "__builtin__.int"
          fully_qualified_name: "__builtin__.int"
        }
      }
      parameters {
        name: "step"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "__builtin__.int"
          fully_qualified_name: "__builtin__.int"
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "27"
  }
  valid_for: "27"
}
classes {
  name: "property"
  fully_qualified_name: "__builtin__.property"
  super_classes: "__builtin__.object"
  methods {
    name: "__init__"
    fully_qualified_name: "__builtin__.property.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.property"
        fully_qualified_name: "__builtin__.property"
      }
    }
    parameters {
      name: "fget"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[CallableType[builtins.function],None]"
        kind: UNION
        args {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "fset"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[CallableType[builtins.function],None]"
        kind: UNION
        args {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "fdel"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[CallableType[builtins.function],None]"
        kind: UNION
        args {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "doc"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[__builtin__.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "__builtin__.str"
          fully_qualified_name: "__builtin__.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "getter"
    fully_qualified_name: "__builtin__.property.getter"
    return_annotation {
      pretty_printed_name: "__builtin__.property"
      fully_qualified_name: "__builtin__.property"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.property"
        fully_qualified_name: "__builtin__.property"
      }
    }
    parameters {
      name: "fget"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    valid_for: "27"
  }
  methods {
    name: "setter"
    fully_qualified_name: "__builtin__.property.setter"
    return_annotation {
      pretty_printed_name: "__builtin__.property"
      fully_qualified_name: "__builtin__.property"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.property"
        fully_qualified_name: "__builtin__.property"
      }
    }
    parameters {
      name: "fset"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    valid_for: "27"
  }
  methods {
    name: "deleter"
    fully_qualified_name: "__builtin__.property.deleter"
    return_annotation {
      pretty_printed_name: "__builtin__.property"
      fully_qualified_name: "__builtin__.property"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.property"
        fully_qualified_name: "__builtin__.property"
      }
    }
    parameters {
      name: "fdel"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__get__"
    fully_qualified_name: "__builtin__.property.__get__"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.property"
        fully_qualified_name: "__builtin__.property"
      }
    }
    parameters {
      name: "obj"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "type"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[__builtin__.type,None]"
        kind: UNION
        args {
          pretty_printed_name: "__builtin__.type"
          fully_qualified_name: "__builtin__.type"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "__set__"
    fully_qualified_name: "__builtin__.property.__set__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.property"
        fully_qualified_name: "__builtin__.property"
      }
    }
    parameters {
      name: "obj"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__delete__"
    fully_qualified_name: "__builtin__.property.__delete__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.property"
        fully_qualified_name: "__builtin__.property"
      }
    }
    parameters {
      name: "obj"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "27"
  }
  methods {
    name: "fget"
    fully_qualified_name: "__builtin__.property.fget"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.property"
        fully_qualified_name: "__builtin__.property"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "fset"
    fully_qualified_name: "__builtin__.property.fset"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.property"
        fully_qualified_name: "__builtin__.property"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "27"
  }
  methods {
    name: "fdel"
    fully_qualified_name: "__builtin__.property.fdel"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.property"
        fully_qualified_name: "__builtin__.property"
      }
    }
    valid_for: "27"
  }
  valid_for: "27"
}
classes {
  name: "_NotImplementedType"
  fully_qualified_name: "__builtin__._NotImplementedType"
  super_classes: "builtins.object"
  valid_for: "27"
  attributes {
    name: "__call__"
    fully_qualified_name: "__builtin__._NotImplementedType.__call__"
    type_annotation {
      pretty_printed_name: "UnboundType[NotImplemented]"
      kind: UNBOUND
    }
    valid_for: "27"
  }
}
classes {
  name: "_SupportsPow2"
  fully_qualified_name: "__builtin__._SupportsPow2"
  super_classes: "builtins.object"
  methods {
    name: "__pow__"
    fully_qualified_name: "__builtin__._SupportsPow2.__pow__"
    return_annotation {
      pretty_printed_name: "__builtin__._T_co"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__._SupportsPow2[__builtin__._E,__builtin__._T_co]"
        args {
          pretty_printed_name: "__builtin__._E"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "__builtin__._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__._SupportsPow2"
      }
    }
    parameters {
      name: "__other"
      type_annotation {
        pretty_printed_name: "__builtin__._E"
        kind: TYPE_VAR
      }
    }
    valid_for: "27"
  }
  is_generic: true
  is_protocol: true
  valid_for: "27"
}
classes {
  name: "_SupportsPow3"
  fully_qualified_name: "__builtin__._SupportsPow3"
  super_classes: "builtins.object"
  methods {
    name: "__pow__"
    fully_qualified_name: "__builtin__._SupportsPow3.__pow__"
    return_annotation {
      pretty_printed_name: "__builtin__._T_co"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__._SupportsPow3[__builtin__._E,__builtin__._M,__builtin__._T_co]"
        args {
          pretty_printed_name: "__builtin__._E"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "__builtin__._M"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "__builtin__._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__._SupportsPow3"
      }
    }
    parameters {
      name: "__other"
      type_annotation {
        pretty_printed_name: "__builtin__._E"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "__modulo"
      type_annotation {
        pretty_printed_name: "__builtin__._M"
        kind: TYPE_VAR
      }
    }
    valid_for: "27"
  }
  is_generic: true
  is_protocol: true
  valid_for: "27"
}
classes {
  name: "ellipsis"
  fully_qualified_name: "__builtin__.ellipsis"
  super_classes: "builtins.object"
  valid_for: "27"
}
classes {
  name: "buffer"
  fully_qualified_name: "__builtin__.buffer"
  super_classes: "typing.Sized"
  methods {
    name: "__init__"
    fully_qualified_name: "__builtin__.buffer.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.buffer"
        fully_qualified_name: "__builtin__.buffer"
      }
    }
    parameters {
      name: "object"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__._AnyBuffer"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "offset"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
      has_default: true
    }
    parameters {
      name: "size"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "__add__"
    fully_qualified_name: "__builtin__.buffer.__add__"
    return_annotation {
      pretty_printed_name: "__builtin__.str"
      fully_qualified_name: "__builtin__.str"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.buffer"
        fully_qualified_name: "__builtin__.buffer"
      }
    }
    parameters {
      name: "other"
      type_annotation {
        pretty_printed_name: "__builtin__._AnyBuffer"
        kind: TYPE_VAR
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__cmp__"
    fully_qualified_name: "__builtin__.buffer.__cmp__"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.buffer"
        fully_qualified_name: "__builtin__.buffer"
      }
    }
    parameters {
      name: "other"
      type_annotation {
        pretty_printed_name: "__builtin__._AnyBuffer"
        kind: TYPE_VAR
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__getitem__"
    fully_qualified_name: "__builtin__.buffer.__getitem__"
    return_annotation {
      pretty_printed_name: "__builtin__.str"
      fully_qualified_name: "__builtin__.str"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.buffer"
        fully_qualified_name: "__builtin__.buffer"
      }
    }
    parameters {
      name: "key"
      type_annotation {
        pretty_printed_name: "Union[__builtin__.int,__builtin__.slice]"
        kind: UNION
        args {
          pretty_printed_name: "__builtin__.int"
          fully_qualified_name: "__builtin__.int"
        }
        args {
          pretty_printed_name: "__builtin__.slice"
          fully_qualified_name: "__builtin__.slice"
        }
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__getslice__"
    fully_qualified_name: "__builtin__.buffer.__getslice__"
    return_annotation {
      pretty_printed_name: "__builtin__.str"
      fully_qualified_name: "__builtin__.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.buffer"
        fully_qualified_name: "__builtin__.buffer"
      }
    }
    parameters {
      name: "i"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    parameters {
      name: "j"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__len__"
    fully_qualified_name: "__builtin__.buffer.__len__"
    return_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.buffer"
        fully_qualified_name: "__builtin__.buffer"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__mul__"
    fully_qualified_name: "__builtin__.buffer.__mul__"
    return_annotation {
      pretty_printed_name: "__builtin__.str"
      fully_qualified_name: "__builtin__.str"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.buffer"
        fully_qualified_name: "__builtin__.buffer"
      }
    }
    parameters {
      name: "x"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    valid_for: "27"
  }
  valid_for: "27"
}
classes {
  name: "BaseException"
  fully_qualified_name: "__builtin__.BaseException"
  super_classes: "__builtin__.object"
  methods {
    name: "__init__"
    fully_qualified_name: "__builtin__.BaseException.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.BaseException"
        fully_qualified_name: "__builtin__.BaseException"
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "__builtin__.object"
        fully_qualified_name: "__builtin__.object"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__str__"
    fully_qualified_name: "__builtin__.BaseException.__str__"
    return_annotation {
      pretty_printed_name: "__builtin__.str"
      fully_qualified_name: "__builtin__.str"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.BaseException"
        fully_qualified_name: "__builtin__.BaseException"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__repr__"
    fully_qualified_name: "__builtin__.BaseException.__repr__"
    return_annotation {
      pretty_printed_name: "__builtin__.str"
      fully_qualified_name: "__builtin__.str"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.BaseException"
        fully_qualified_name: "__builtin__.BaseException"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__getitem__"
    fully_qualified_name: "__builtin__.BaseException.__getitem__"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.BaseException"
        fully_qualified_name: "__builtin__.BaseException"
      }
    }
    parameters {
      name: "i"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__getslice__"
    fully_qualified_name: "__builtin__.BaseException.__getslice__"
    return_annotation {
      pretty_printed_name: "builtins.tuple[Any]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "builtins.tuple"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.BaseException"
        fully_qualified_name: "__builtin__.BaseException"
      }
    }
    parameters {
      name: "start"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    parameters {
      name: "stop"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    valid_for: "27"
  }
  valid_for: "27"
  attributes {
    name: "args"
    fully_qualified_name: "__builtin__.BaseException.args"
    type_annotation {
      pretty_printed_name: "builtins.tuple[Any]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "builtins.tuple"
    }
    valid_for: "27"
  }
  attributes {
    name: "message"
    fully_qualified_name: "__builtin__.BaseException.message"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "27"
  }
}
classes {
  name: "GeneratorExit"
  fully_qualified_name: "__builtin__.GeneratorExit"
  super_classes: "__builtin__.BaseException"
  valid_for: "27"
}
classes {
  name: "KeyboardInterrupt"
  fully_qualified_name: "__builtin__.KeyboardInterrupt"
  super_classes: "__builtin__.BaseException"
  valid_for: "27"
}
classes {
  name: "SystemExit"
  fully_qualified_name: "__builtin__.SystemExit"
  super_classes: "__builtin__.BaseException"
  valid_for: "27"
  attributes {
    name: "code"
    fully_qualified_name: "__builtin__.SystemExit.code"
    type_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    valid_for: "27"
  }
}
classes {
  name: "Exception"
  fully_qualified_name: "__builtin__.Exception"
  super_classes: "__builtin__.BaseException"
  valid_for: "27"
}
classes {
  name: "StopIteration"
  fully_qualified_name: "__builtin__.StopIteration"
  super_classes: "__builtin__.Exception"
  valid_for: "27"
}
classes {
  name: "StandardError"
  fully_qualified_name: "__builtin__.StandardError"
  super_classes: "__builtin__.Exception"
  valid_for: "27"
}
classes {
  name: "EnvironmentError"
  fully_qualified_name: "__builtin__.EnvironmentError"
  super_classes: "__builtin__.StandardError"
  valid_for: "27"
  attributes {
    name: "errno"
    fully_qualified_name: "__builtin__.EnvironmentError.errno"
    type_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    valid_for: "27"
  }
  attributes {
    name: "strerror"
    fully_qualified_name: "__builtin__.EnvironmentError.strerror"
    type_annotation {
      pretty_printed_name: "__builtin__.str"
      fully_qualified_name: "__builtin__.str"
    }
    valid_for: "27"
  }
  attributes {
    name: "filename"
    fully_qualified_name: "__builtin__.EnvironmentError.filename"
    type_annotation {
      pretty_printed_name: "__builtin__.str"
      fully_qualified_name: "__builtin__.str"
    }
    valid_for: "27"
  }
}
classes {
  name: "OSError"
  fully_qualified_name: "__builtin__.OSError"
  super_classes: "__builtin__.EnvironmentError"
  valid_for: "27"
}
classes {
  name: "IOError"
  fully_qualified_name: "__builtin__.IOError"
  super_classes: "__builtin__.EnvironmentError"
  valid_for: "27"
}
classes {
  name: "ArithmeticError"
  fully_qualified_name: "__builtin__.ArithmeticError"
  super_classes: "__builtin__.StandardError"
  valid_for: "27"
}
classes {
  name: "AssertionError"
  fully_qualified_name: "__builtin__.AssertionError"
  super_classes: "__builtin__.StandardError"
  valid_for: "27"
}
classes {
  name: "AttributeError"
  fully_qualified_name: "__builtin__.AttributeError"
  super_classes: "__builtin__.StandardError"
  valid_for: "27"
}
classes {
  name: "BufferError"
  fully_qualified_name: "__builtin__.BufferError"
  super_classes: "__builtin__.StandardError"
  valid_for: "27"
}
classes {
  name: "EOFError"
  fully_qualified_name: "__builtin__.EOFError"
  super_classes: "__builtin__.StandardError"
  valid_for: "27"
}
classes {
  name: "ImportError"
  fully_qualified_name: "__builtin__.ImportError"
  super_classes: "__builtin__.StandardError"
  valid_for: "27"
}
classes {
  name: "LookupError"
  fully_qualified_name: "__builtin__.LookupError"
  super_classes: "__builtin__.StandardError"
  valid_for: "27"
}
classes {
  name: "MemoryError"
  fully_qualified_name: "__builtin__.MemoryError"
  super_classes: "__builtin__.StandardError"
  valid_for: "27"
}
classes {
  name: "NameError"
  fully_qualified_name: "__builtin__.NameError"
  super_classes: "__builtin__.StandardError"
  valid_for: "27"
}
classes {
  name: "ReferenceError"
  fully_qualified_name: "__builtin__.ReferenceError"
  super_classes: "__builtin__.StandardError"
  valid_for: "27"
}
classes {
  name: "RuntimeError"
  fully_qualified_name: "__builtin__.RuntimeError"
  super_classes: "__builtin__.StandardError"
  valid_for: "27"
}
classes {
  name: "SyntaxError"
  fully_qualified_name: "__builtin__.SyntaxError"
  super_classes: "__builtin__.StandardError"
  valid_for: "27"
  attributes {
    name: "msg"
    fully_qualified_name: "__builtin__.SyntaxError.msg"
    type_annotation {
      pretty_printed_name: "__builtin__.str"
      fully_qualified_name: "__builtin__.str"
    }
    valid_for: "27"
  }
  attributes {
    name: "lineno"
    fully_qualified_name: "__builtin__.SyntaxError.lineno"
    type_annotation {
      pretty_printed_name: "Union[__builtin__.int,None]"
      kind: UNION
      args {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "27"
  }
  attributes {
    name: "offset"
    fully_qualified_name: "__builtin__.SyntaxError.offset"
    type_annotation {
      pretty_printed_name: "Union[__builtin__.int,None]"
      kind: UNION
      args {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "27"
  }
  attributes {
    name: "text"
    fully_qualified_name: "__builtin__.SyntaxError.text"
    type_annotation {
      pretty_printed_name: "Union[__builtin__.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "27"
  }
  attributes {
    name: "filename"
    fully_qualified_name: "__builtin__.SyntaxError.filename"
    type_annotation {
      pretty_printed_name: "Union[__builtin__.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    valid_for: "27"
  }
}
classes {
  name: "SystemError"
  fully_qualified_name: "__builtin__.SystemError"
  super_classes: "__builtin__.StandardError"
  valid_for: "27"
}
classes {
  name: "TypeError"
  fully_qualified_name: "__builtin__.TypeError"
  super_classes: "__builtin__.StandardError"
  valid_for: "27"
}
classes {
  name: "ValueError"
  fully_qualified_name: "__builtin__.ValueError"
  super_classes: "__builtin__.StandardError"
  valid_for: "27"
}
classes {
  name: "FloatingPointError"
  fully_qualified_name: "__builtin__.FloatingPointError"
  super_classes: "__builtin__.ArithmeticError"
  valid_for: "27"
}
classes {
  name: "OverflowError"
  fully_qualified_name: "__builtin__.OverflowError"
  super_classes: "__builtin__.ArithmeticError"
  valid_for: "27"
}
classes {
  name: "ZeroDivisionError"
  fully_qualified_name: "__builtin__.ZeroDivisionError"
  super_classes: "__builtin__.ArithmeticError"
  valid_for: "27"
}
classes {
  name: "IndexError"
  fully_qualified_name: "__builtin__.IndexError"
  super_classes: "__builtin__.LookupError"
  valid_for: "27"
}
classes {
  name: "KeyError"
  fully_qualified_name: "__builtin__.KeyError"
  super_classes: "__builtin__.LookupError"
  valid_for: "27"
}
classes {
  name: "UnboundLocalError"
  fully_qualified_name: "__builtin__.UnboundLocalError"
  super_classes: "__builtin__.NameError"
  valid_for: "27"
}
classes {
  name: "WindowsError"
  fully_qualified_name: "__builtin__.WindowsError"
  super_classes: "__builtin__.OSError"
  valid_for: "27"
  attributes {
    name: "winerror"
    fully_qualified_name: "__builtin__.WindowsError.winerror"
    type_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    valid_for: "27"
  }
}
classes {
  name: "NotImplementedError"
  fully_qualified_name: "__builtin__.NotImplementedError"
  super_classes: "__builtin__.RuntimeError"
  valid_for: "27"
}
classes {
  name: "IndentationError"
  fully_qualified_name: "__builtin__.IndentationError"
  super_classes: "__builtin__.SyntaxError"
  valid_for: "27"
}
classes {
  name: "TabError"
  fully_qualified_name: "__builtin__.TabError"
  super_classes: "__builtin__.IndentationError"
  valid_for: "27"
}
classes {
  name: "UnicodeError"
  fully_qualified_name: "__builtin__.UnicodeError"
  super_classes: "__builtin__.ValueError"
  valid_for: "27"
}
classes {
  name: "UnicodeDecodeError"
  fully_qualified_name: "__builtin__.UnicodeDecodeError"
  super_classes: "__builtin__.UnicodeError"
  methods {
    name: "__init__"
    fully_qualified_name: "__builtin__.UnicodeDecodeError.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.UnicodeDecodeError"
        fully_qualified_name: "__builtin__.UnicodeDecodeError"
      }
    }
    parameters {
      name: "__encoding"
      type_annotation {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
    }
    parameters {
      name: "__object"
      type_annotation {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
    }
    parameters {
      name: "__start"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    parameters {
      name: "__end"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    parameters {
      name: "__reason"
      type_annotation {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
    }
    valid_for: "27"
  }
  valid_for: "27"
  attributes {
    name: "encoding"
    fully_qualified_name: "__builtin__.UnicodeDecodeError.encoding"
    type_annotation {
      pretty_printed_name: "__builtin__.str"
      fully_qualified_name: "__builtin__.str"
    }
    valid_for: "27"
  }
  attributes {
    name: "object"
    fully_qualified_name: "__builtin__.UnicodeDecodeError.object"
    type_annotation {
      pretty_printed_name: "__builtin__.str"
      fully_qualified_name: "__builtin__.str"
    }
    valid_for: "27"
  }
  attributes {
    name: "start"
    fully_qualified_name: "__builtin__.UnicodeDecodeError.start"
    type_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    valid_for: "27"
  }
  attributes {
    name: "end"
    fully_qualified_name: "__builtin__.UnicodeDecodeError.end"
    type_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    valid_for: "27"
  }
  attributes {
    name: "reason"
    fully_qualified_name: "__builtin__.UnicodeDecodeError.reason"
    type_annotation {
      pretty_printed_name: "__builtin__.str"
      fully_qualified_name: "__builtin__.str"
    }
    valid_for: "27"
  }
}
classes {
  name: "UnicodeEncodeError"
  fully_qualified_name: "__builtin__.UnicodeEncodeError"
  super_classes: "__builtin__.UnicodeError"
  methods {
    name: "__init__"
    fully_qualified_name: "__builtin__.UnicodeEncodeError.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.UnicodeEncodeError"
        fully_qualified_name: "__builtin__.UnicodeEncodeError"
      }
    }
    parameters {
      name: "__encoding"
      type_annotation {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
    }
    parameters {
      name: "__object"
      type_annotation {
        pretty_printed_name: "builtins.unicode"
        fully_qualified_name: "builtins.unicode"
      }
    }
    parameters {
      name: "__start"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    parameters {
      name: "__end"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    parameters {
      name: "__reason"
      type_annotation {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
    }
    valid_for: "27"
  }
  valid_for: "27"
  attributes {
    name: "encoding"
    fully_qualified_name: "__builtin__.UnicodeEncodeError.encoding"
    type_annotation {
      pretty_printed_name: "__builtin__.str"
      fully_qualified_name: "__builtin__.str"
    }
    valid_for: "27"
  }
  attributes {
    name: "object"
    fully_qualified_name: "__builtin__.UnicodeEncodeError.object"
    type_annotation {
      pretty_printed_name: "builtins.unicode"
      fully_qualified_name: "builtins.unicode"
    }
    valid_for: "27"
  }
  attributes {
    name: "start"
    fully_qualified_name: "__builtin__.UnicodeEncodeError.start"
    type_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    valid_for: "27"
  }
  attributes {
    name: "end"
    fully_qualified_name: "__builtin__.UnicodeEncodeError.end"
    type_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    valid_for: "27"
  }
  attributes {
    name: "reason"
    fully_qualified_name: "__builtin__.UnicodeEncodeError.reason"
    type_annotation {
      pretty_printed_name: "__builtin__.str"
      fully_qualified_name: "__builtin__.str"
    }
    valid_for: "27"
  }
}
classes {
  name: "UnicodeTranslateError"
  fully_qualified_name: "__builtin__.UnicodeTranslateError"
  super_classes: "__builtin__.UnicodeError"
  valid_for: "27"
}
classes {
  name: "Warning"
  fully_qualified_name: "__builtin__.Warning"
  super_classes: "__builtin__.Exception"
  valid_for: "27"
}
classes {
  name: "UserWarning"
  fully_qualified_name: "__builtin__.UserWarning"
  super_classes: "__builtin__.Warning"
  valid_for: "27"
}
classes {
  name: "DeprecationWarning"
  fully_qualified_name: "__builtin__.DeprecationWarning"
  super_classes: "__builtin__.Warning"
  valid_for: "27"
}
classes {
  name: "SyntaxWarning"
  fully_qualified_name: "__builtin__.SyntaxWarning"
  super_classes: "__builtin__.Warning"
  valid_for: "27"
}
classes {
  name: "RuntimeWarning"
  fully_qualified_name: "__builtin__.RuntimeWarning"
  super_classes: "__builtin__.Warning"
  valid_for: "27"
}
classes {
  name: "FutureWarning"
  fully_qualified_name: "__builtin__.FutureWarning"
  super_classes: "__builtin__.Warning"
  valid_for: "27"
}
classes {
  name: "PendingDeprecationWarning"
  fully_qualified_name: "__builtin__.PendingDeprecationWarning"
  super_classes: "__builtin__.Warning"
  valid_for: "27"
}
classes {
  name: "ImportWarning"
  fully_qualified_name: "__builtin__.ImportWarning"
  super_classes: "__builtin__.Warning"
  valid_for: "27"
}
classes {
  name: "UnicodeWarning"
  fully_qualified_name: "__builtin__.UnicodeWarning"
  super_classes: "__builtin__.Warning"
  valid_for: "27"
}
classes {
  name: "BytesWarning"
  fully_qualified_name: "__builtin__.BytesWarning"
  super_classes: "__builtin__.Warning"
  valid_for: "27"
}
classes {
  name: "file"
  fully_qualified_name: "__builtin__.file"
  super_classes: "typing.BinaryIO"
  methods {
    name: "__iter__"
    fully_qualified_name: "__builtin__.file.__iter__"
    return_annotation {
      pretty_printed_name: "typing.Iterator[__builtin__.str]"
      args {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.file"
        fully_qualified_name: "__builtin__.file"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "next"
    fully_qualified_name: "__builtin__.file.next"
    return_annotation {
      pretty_printed_name: "__builtin__.str"
      fully_qualified_name: "__builtin__.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.file"
        fully_qualified_name: "__builtin__.file"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "read"
    fully_qualified_name: "__builtin__.file.read"
    return_annotation {
      pretty_printed_name: "__builtin__.str"
      fully_qualified_name: "__builtin__.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.file"
        fully_qualified_name: "__builtin__.file"
      }
    }
    parameters {
      name: "n"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "__enter__"
    fully_qualified_name: "__builtin__.file.__enter__"
    return_annotation {
      pretty_printed_name: "typing.BinaryIO"
      fully_qualified_name: "typing.BinaryIO"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.file"
        fully_qualified_name: "__builtin__.file"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "__exit__"
    fully_qualified_name: "__builtin__.file.__exit__"
    return_annotation {
      pretty_printed_name: "Union[__builtin__.bool,None]"
      kind: UNION
      args {
        pretty_printed_name: "__builtin__.bool"
        fully_qualified_name: "__builtin__.bool"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "__builtin__.file"
        fully_qualified_name: "__builtin__.file"
      }
    }
    parameters {
      name: "t"
      type_annotation {
        pretty_printed_name: "Union[__builtin__.type,None]"
        kind: UNION
        args {
          pretty_printed_name: "__builtin__.type"
          fully_qualified_name: "__builtin__.type"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "exc"
      type_annotation {
        pretty_printed_name: "Union[__builtin__.BaseException,None]"
        kind: UNION
        args {
          pretty_printed_name: "__builtin__.BaseException"
          fully_qualified_name: "__builtin__.BaseException"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "tb"
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "flush"
    fully_qualified_name: "__builtin__.file.flush"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.file"
        fully_qualified_name: "__builtin__.file"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "fileno"
    fully_qualified_name: "__builtin__.file.fileno"
    return_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.file"
        fully_qualified_name: "__builtin__.file"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "isatty"
    fully_qualified_name: "__builtin__.file.isatty"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.file"
        fully_qualified_name: "__builtin__.file"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "close"
    fully_qualified_name: "__builtin__.file.close"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.file"
        fully_qualified_name: "__builtin__.file"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "readable"
    fully_qualified_name: "__builtin__.file.readable"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.file"
        fully_qualified_name: "__builtin__.file"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "writable"
    fully_qualified_name: "__builtin__.file.writable"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.file"
        fully_qualified_name: "__builtin__.file"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "seekable"
    fully_qualified_name: "__builtin__.file.seekable"
    return_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.file"
        fully_qualified_name: "__builtin__.file"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "seek"
    fully_qualified_name: "__builtin__.file.seek"
    return_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.file"
        fully_qualified_name: "__builtin__.file"
      }
    }
    parameters {
      name: "offset"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    parameters {
      name: "whence"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "tell"
    fully_qualified_name: "__builtin__.file.tell"
    return_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.file"
        fully_qualified_name: "__builtin__.file"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "readline"
    fully_qualified_name: "__builtin__.file.readline"
    return_annotation {
      pretty_printed_name: "__builtin__.str"
      fully_qualified_name: "__builtin__.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.file"
        fully_qualified_name: "__builtin__.file"
      }
    }
    parameters {
      name: "limit"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "readlines"
    fully_qualified_name: "__builtin__.file.readlines"
    return_annotation {
      pretty_printed_name: "builtins.list[__builtin__.str]"
      args {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.file"
        fully_qualified_name: "__builtin__.file"
      }
    }
    parameters {
      name: "hint"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "write"
    fully_qualified_name: "__builtin__.file.write"
    return_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.file"
        fully_qualified_name: "__builtin__.file"
      }
    }
    parameters {
      name: "data"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "writelines"
    fully_qualified_name: "__builtin__.file.writelines"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.file"
        fully_qualified_name: "__builtin__.file"
      }
    }
    parameters {
      name: "data"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[__builtin__.str]"
        args {
          pretty_printed_name: "__builtin__.str"
          fully_qualified_name: "__builtin__.str"
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "truncate"
    fully_qualified_name: "__builtin__.file.truncate"
    return_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.file"
        fully_qualified_name: "__builtin__.file"
      }
    }
    parameters {
      name: "pos"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[__builtin__.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "__builtin__.int"
          fully_qualified_name: "__builtin__.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "27"
  }
  overloaded_methods {
    name: "__init__"
    fullname: "__builtin__.file.__init__"
    definitions {
      name: "__init__"
      fully_qualified_name: "__builtin__.file.__init__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "__builtin__.file"
          fully_qualified_name: "__builtin__.file"
        }
      }
      parameters {
        name: "file"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "__builtin__.str"
          fully_qualified_name: "__builtin__.str"
        }
      }
      parameters {
        name: "mode"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "__builtin__.str"
          fully_qualified_name: "__builtin__.str"
        }
        has_default: true
      }
      parameters {
        name: "buffering"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "__builtin__.int"
          fully_qualified_name: "__builtin__.int"
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__init__"
      fully_qualified_name: "__builtin__.file.__init__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "__builtin__.file"
          fully_qualified_name: "__builtin__.file"
        }
      }
      parameters {
        name: "file"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "__builtin__.unicode"
          fully_qualified_name: "__builtin__.unicode"
        }
      }
      parameters {
        name: "mode"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "__builtin__.str"
          fully_qualified_name: "__builtin__.str"
        }
        has_default: true
      }
      parameters {
        name: "buffering"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "__builtin__.int"
          fully_qualified_name: "__builtin__.int"
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__init__"
      fully_qualified_name: "__builtin__.file.__init__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "__builtin__.file"
          fully_qualified_name: "__builtin__.file"
        }
      }
      parameters {
        name: "file"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "__builtin__.int"
          fully_qualified_name: "__builtin__.int"
        }
      }
      parameters {
        name: "mode"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "__builtin__.str"
          fully_qualified_name: "__builtin__.str"
        }
        has_default: true
      }
      parameters {
        name: "buffering"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "__builtin__.int"
          fully_qualified_name: "__builtin__.int"
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "27"
  }
  valid_for: "27"
}
functions {
  name: "abs"
  fully_qualified_name: "__builtin__.abs"
  return_annotation {
    pretty_printed_name: "__builtin__._T"
    kind: TYPE_VAR
  }
  parameters {
    name: "__x"
    type_annotation {
      pretty_printed_name: "typing.SupportsAbs[__builtin__._T]"
      args {
        pretty_printed_name: "__builtin__._T"
        kind: TYPE_VAR
      }
      fully_qualified_name: "typing.SupportsAbs"
    }
  }
  valid_for: "27"
}
functions {
  name: "all"
  fully_qualified_name: "__builtin__.all"
  return_annotation {
    pretty_printed_name: "__builtin__.bool"
    fully_qualified_name: "__builtin__.bool"
  }
  parameters {
    name: "__iterable"
    type_annotation {
      pretty_printed_name: "typing.Iterable[__builtin__.object]"
      args {
        pretty_printed_name: "__builtin__.object"
        fully_qualified_name: "__builtin__.object"
      }
      fully_qualified_name: "typing.Iterable"
    }
  }
  valid_for: "27"
}
functions {
  name: "any"
  fully_qualified_name: "__builtin__.any"
  return_annotation {
    pretty_printed_name: "__builtin__.bool"
    fully_qualified_name: "__builtin__.bool"
  }
  parameters {
    name: "__iterable"
    type_annotation {
      pretty_printed_name: "typing.Iterable[__builtin__.object]"
      args {
        pretty_printed_name: "__builtin__.object"
        fully_qualified_name: "__builtin__.object"
      }
      fully_qualified_name: "typing.Iterable"
    }
  }
  valid_for: "27"
}
functions {
  name: "apply"
  fully_qualified_name: "__builtin__.apply"
  return_annotation {
    pretty_printed_name: "__builtin__._T"
    kind: TYPE_VAR
  }
  parameters {
    name: "__func"
    type_annotation {
      pretty_printed_name: "CallableType[builtins.function]"
      kind: CALLABLE
      args {
        pretty_printed_name: "builtins.function"
        fully_qualified_name: "builtins.function"
      }
    }
  }
  parameters {
    name: "__args"
    type_annotation {
      pretty_printed_name: "Union[typing.Sequence[Any],None]"
      kind: UNION
      args {
        pretty_printed_name: "typing.Sequence[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "typing.Sequence"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "__kwds"
    type_annotation {
      pretty_printed_name: "Union[typing.Mapping[__builtin__.str,Any],None]"
      kind: UNION
      args {
        pretty_printed_name: "typing.Mapping[__builtin__.str,Any]"
        args {
          pretty_printed_name: "__builtin__.str"
          fully_qualified_name: "__builtin__.str"
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "typing.Mapping"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  valid_for: "27"
}
functions {
  name: "bin"
  fully_qualified_name: "__builtin__.bin"
  return_annotation {
    pretty_printed_name: "__builtin__.str"
    fully_qualified_name: "__builtin__.str"
  }
  parameters {
    name: "__number"
    type_annotation {
      pretty_printed_name: "Union[__builtin__.int,__builtin__._SupportsIndex]"
      kind: UNION
      args {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
      args {
        pretty_printed_name: "__builtin__._SupportsIndex"
        fully_qualified_name: "__builtin__._SupportsIndex"
      }
    }
  }
  valid_for: "27"
}
functions {
  name: "callable"
  fully_qualified_name: "__builtin__.callable"
  return_annotation {
    pretty_printed_name: "__builtin__.bool"
    fully_qualified_name: "__builtin__.bool"
  }
  parameters {
    name: "__obj"
    type_annotation {
      pretty_printed_name: "__builtin__.object"
      fully_qualified_name: "__builtin__.object"
    }
  }
  valid_for: "27"
}
functions {
  name: "chr"
  fully_qualified_name: "__builtin__.chr"
  return_annotation {
    pretty_printed_name: "__builtin__.str"
    fully_qualified_name: "__builtin__.str"
  }
  parameters {
    name: "__i"
    type_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
  }
  valid_for: "27"
}
functions {
  name: "cmp"
  fully_qualified_name: "__builtin__.cmp"
  return_annotation {
    pretty_printed_name: "__builtin__.int"
    fully_qualified_name: "__builtin__.int"
  }
  parameters {
    name: "__x"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  parameters {
    name: "__y"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  valid_for: "27"
}
functions {
  name: "coerce"
  fully_qualified_name: "__builtin__.coerce"
  return_annotation {
    pretty_printed_name: "Tuple[__builtin__._N1,__builtin__._N1]"
    kind: TUPLE
    args {
      pretty_printed_name: "__builtin__._N1"
      kind: TYPE_VAR
    }
    args {
      pretty_printed_name: "__builtin__._N1"
      kind: TYPE_VAR
    }
  }
  parameters {
    name: "__x"
    type_annotation {
      pretty_printed_name: "__builtin__._N1"
      kind: TYPE_VAR
    }
  }
  parameters {
    name: "__y"
    type_annotation {
      pretty_printed_name: "__builtin__._N1"
      kind: TYPE_VAR
    }
  }
  valid_for: "27"
}
functions {
  name: "compile"
  fully_qualified_name: "__builtin__.compile"
  return_annotation {
    pretty_printed_name: "Any"
    kind: ANY
  }
  parameters {
    name: "source"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.unicode,_ast.mod]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.unicode"
        fully_qualified_name: "builtins.unicode"
      }
      args {
        pretty_printed_name: "_ast.mod"
        fully_qualified_name: "_ast.mod"
      }
    }
  }
  parameters {
    name: "filename"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.unicode"
      fully_qualified_name: "builtins.unicode"
    }
  }
  parameters {
    name: "mode"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.unicode"
      fully_qualified_name: "builtins.unicode"
    }
  }
  parameters {
    name: "flags"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    has_default: true
  }
  parameters {
    name: "dont_inherit"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    has_default: true
  }
  valid_for: "27"
}
functions {
  name: "delattr"
  fully_qualified_name: "__builtin__.delattr"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "__obj"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  parameters {
    name: "__name"
    type_annotation {
      pretty_printed_name: "builtins.unicode"
      fully_qualified_name: "builtins.unicode"
    }
  }
  valid_for: "27"
}
functions {
  name: "dir"
  fully_qualified_name: "__builtin__.dir"
  return_annotation {
    pretty_printed_name: "builtins.list[__builtin__.str]"
    args {
      pretty_printed_name: "__builtin__.str"
      fully_qualified_name: "__builtin__.str"
    }
    fully_qualified_name: "builtins.list"
  }
  parameters {
    name: "__o"
    type_annotation {
      pretty_printed_name: "__builtin__.object"
      fully_qualified_name: "__builtin__.object"
    }
    has_default: true
  }
  valid_for: "27"
}
functions {
  name: "divmod"
  fully_qualified_name: "__builtin__.divmod"
  return_annotation {
    pretty_printed_name: "Tuple[__builtin__._N2,__builtin__._N2]"
    kind: TUPLE
    args {
      pretty_printed_name: "__builtin__._N2"
      kind: TYPE_VAR
    }
    args {
      pretty_printed_name: "__builtin__._N2"
      kind: TYPE_VAR
    }
  }
  parameters {
    name: "__x"
    type_annotation {
      pretty_printed_name: "__builtin__._N2"
      kind: TYPE_VAR
    }
  }
  parameters {
    name: "__y"
    type_annotation {
      pretty_printed_name: "__builtin__._N2"
      kind: TYPE_VAR
    }
  }
  valid_for: "27"
}
functions {
  name: "eval"
  fully_qualified_name: "__builtin__.eval"
  return_annotation {
    pretty_printed_name: "Any"
    kind: ANY
  }
  parameters {
    name: "__source"
    type_annotation {
      pretty_printed_name: "Union[builtins.unicode,__builtin__.str,types.CodeType]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.unicode"
        fully_qualified_name: "builtins.unicode"
      }
      args {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
      args {
        pretty_printed_name: "types.CodeType"
        fully_qualified_name: "types.CodeType"
      }
    }
  }
  parameters {
    name: "__globals"
    type_annotation {
      pretty_printed_name: "Union[builtins.dict[__builtin__.str,Any],None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.dict[__builtin__.str,Any]"
        args {
          pretty_printed_name: "__builtin__.str"
          fully_qualified_name: "__builtin__.str"
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "builtins.dict"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "__locals"
    type_annotation {
      pretty_printed_name: "Union[typing.Mapping[__builtin__.str,Any],None]"
      kind: UNION
      args {
        pretty_printed_name: "typing.Mapping[__builtin__.str,Any]"
        args {
          pretty_printed_name: "__builtin__.str"
          fully_qualified_name: "__builtin__.str"
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "typing.Mapping"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  valid_for: "27"
}
functions {
  name: "execfile"
  fully_qualified_name: "__builtin__.execfile"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "__filename"
    type_annotation {
      pretty_printed_name: "__builtin__.str"
      fully_qualified_name: "__builtin__.str"
    }
  }
  parameters {
    name: "__globals"
    type_annotation {
      pretty_printed_name: "Union[builtins.dict[__builtin__.str,Any],None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.dict[__builtin__.str,Any]"
        args {
          pretty_printed_name: "__builtin__.str"
          fully_qualified_name: "__builtin__.str"
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "builtins.dict"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "__locals"
    type_annotation {
      pretty_printed_name: "Union[builtins.dict[__builtin__.str,Any],None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.dict[__builtin__.str,Any]"
        args {
          pretty_printed_name: "__builtin__.str"
          fully_qualified_name: "__builtin__.str"
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "builtins.dict"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  valid_for: "27"
}
functions {
  name: "exit"
  fully_qualified_name: "__builtin__.exit"
  return_annotation {
    pretty_printed_name: "NoReturn"
    kind: UNINHABITED
  }
  parameters {
    name: "code"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "__builtin__.object"
      fully_qualified_name: "__builtin__.object"
    }
    has_default: true
  }
  valid_for: "27"
}
functions {
  name: "format"
  fully_qualified_name: "__builtin__.format"
  return_annotation {
    pretty_printed_name: "__builtin__.str"
    fully_qualified_name: "__builtin__.str"
  }
  parameters {
    name: "__value"
    type_annotation {
      pretty_printed_name: "__builtin__.object"
      fully_qualified_name: "__builtin__.object"
    }
  }
  parameters {
    name: "__format_spec"
    type_annotation {
      pretty_printed_name: "__builtin__.str"
      fully_qualified_name: "__builtin__.str"
    }
    has_default: true
  }
  valid_for: "27"
}
functions {
  name: "globals"
  fully_qualified_name: "__builtin__.globals"
  return_annotation {
    pretty_printed_name: "builtins.dict[__builtin__.str,Any]"
    args {
      pretty_printed_name: "__builtin__.str"
      fully_qualified_name: "__builtin__.str"
    }
    args {
      pretty_printed_name: "Any"
      kind: ANY
    }
    fully_qualified_name: "builtins.dict"
  }
  valid_for: "27"
}
functions {
  name: "hasattr"
  fully_qualified_name: "__builtin__.hasattr"
  return_annotation {
    pretty_printed_name: "__builtin__.bool"
    fully_qualified_name: "__builtin__.bool"
  }
  parameters {
    name: "__obj"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  parameters {
    name: "__name"
    type_annotation {
      pretty_printed_name: "builtins.unicode"
      fully_qualified_name: "builtins.unicode"
    }
  }
  valid_for: "27"
}
functions {
  name: "hash"
  fully_qualified_name: "__builtin__.hash"
  return_annotation {
    pretty_printed_name: "__builtin__.int"
    fully_qualified_name: "__builtin__.int"
  }
  parameters {
    name: "__obj"
    type_annotation {
      pretty_printed_name: "__builtin__.object"
      fully_qualified_name: "__builtin__.object"
    }
  }
  valid_for: "27"
}
functions {
  name: "hex"
  fully_qualified_name: "__builtin__.hex"
  return_annotation {
    pretty_printed_name: "__builtin__.str"
    fully_qualified_name: "__builtin__.str"
  }
  parameters {
    name: "__number"
    type_annotation {
      pretty_printed_name: "Union[__builtin__.int,__builtin__._SupportsIndex]"
      kind: UNION
      args {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
      args {
        pretty_printed_name: "__builtin__._SupportsIndex"
        fully_qualified_name: "__builtin__._SupportsIndex"
      }
    }
  }
  valid_for: "27"
}
functions {
  name: "id"
  fully_qualified_name: "__builtin__.id"
  return_annotation {
    pretty_printed_name: "__builtin__.int"
    fully_qualified_name: "__builtin__.int"
  }
  parameters {
    name: "__obj"
    type_annotation {
      pretty_printed_name: "__builtin__.object"
      fully_qualified_name: "__builtin__.object"
    }
  }
  valid_for: "27"
}
functions {
  name: "input"
  fully_qualified_name: "__builtin__.input"
  return_annotation {
    pretty_printed_name: "Any"
    kind: ANY
  }
  parameters {
    name: "__prompt"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    has_default: true
  }
  valid_for: "27"
}
functions {
  name: "intern"
  fully_qualified_name: "__builtin__.intern"
  return_annotation {
    pretty_printed_name: "__builtin__.str"
    fully_qualified_name: "__builtin__.str"
  }
  parameters {
    name: "__string"
    type_annotation {
      pretty_printed_name: "__builtin__.str"
      fully_qualified_name: "__builtin__.str"
    }
  }
  valid_for: "27"
}
functions {
  name: "isinstance"
  fully_qualified_name: "__builtin__.isinstance"
  return_annotation {
    pretty_printed_name: "__builtin__.bool"
    fully_qualified_name: "__builtin__.bool"
  }
  parameters {
    name: "__obj"
    type_annotation {
      pretty_printed_name: "__builtin__.object"
      fully_qualified_name: "__builtin__.object"
    }
  }
  parameters {
    name: "__class_or_tuple"
    type_annotation {
      pretty_printed_name: "Union[__builtin__.type,builtins.tuple[Union[__builtin__.type,builtins.tuple[Any]]]]"
      kind: UNION
      args {
        pretty_printed_name: "__builtin__.type"
        fully_qualified_name: "__builtin__.type"
      }
      args {
        pretty_printed_name: "builtins.tuple[Union[__builtin__.type,builtins.tuple[Any]]]"
        args {
          pretty_printed_name: "Union[__builtin__.type,builtins.tuple[Any]]"
          kind: UNION
          args {
            pretty_printed_name: "__builtin__.type"
            fully_qualified_name: "__builtin__.type"
          }
          args {
            pretty_printed_name: "builtins.tuple[Any]"
            args {
              pretty_printed_name: "Any"
              kind: ANY
            }
            fully_qualified_name: "builtins.tuple"
          }
        }
        fully_qualified_name: "builtins.tuple"
      }
    }
  }
  valid_for: "27"
}
functions {
  name: "issubclass"
  fully_qualified_name: "__builtin__.issubclass"
  return_annotation {
    pretty_printed_name: "__builtin__.bool"
    fully_qualified_name: "__builtin__.bool"
  }
  parameters {
    name: "__cls"
    type_annotation {
      pretty_printed_name: "__builtin__.type"
      fully_qualified_name: "__builtin__.type"
    }
  }
  parameters {
    name: "__class_or_tuple"
    type_annotation {
      pretty_printed_name: "Union[__builtin__.type,builtins.tuple[Union[__builtin__.type,builtins.tuple[Any]]]]"
      kind: UNION
      args {
        pretty_printed_name: "__builtin__.type"
        fully_qualified_name: "__builtin__.type"
      }
      args {
        pretty_printed_name: "builtins.tuple[Union[__builtin__.type,builtins.tuple[Any]]]"
        args {
          pretty_printed_name: "Union[__builtin__.type,builtins.tuple[Any]]"
          kind: UNION
          args {
            pretty_printed_name: "__builtin__.type"
            fully_qualified_name: "__builtin__.type"
          }
          args {
            pretty_printed_name: "builtins.tuple[Any]"
            args {
              pretty_printed_name: "Any"
              kind: ANY
            }
            fully_qualified_name: "builtins.tuple"
          }
        }
        fully_qualified_name: "builtins.tuple"
      }
    }
  }
  valid_for: "27"
}
functions {
  name: "len"
  fully_qualified_name: "__builtin__.len"
  return_annotation {
    pretty_printed_name: "__builtin__.int"
    fully_qualified_name: "__builtin__.int"
  }
  parameters {
    name: "__obj"
    type_annotation {
      pretty_printed_name: "typing.Sized"
      fully_qualified_name: "typing.Sized"
    }
  }
  valid_for: "27"
}
functions {
  name: "locals"
  fully_qualified_name: "__builtin__.locals"
  return_annotation {
    pretty_printed_name: "builtins.dict[__builtin__.str,Any]"
    args {
      pretty_printed_name: "__builtin__.str"
      fully_qualified_name: "__builtin__.str"
    }
    args {
      pretty_printed_name: "Any"
      kind: ANY
    }
    fully_qualified_name: "builtins.dict"
  }
  valid_for: "27"
}
functions {
  name: "oct"
  fully_qualified_name: "__builtin__.oct"
  return_annotation {
    pretty_printed_name: "__builtin__.str"
    fully_qualified_name: "__builtin__.str"
  }
  parameters {
    name: "__number"
    type_annotation {
      pretty_printed_name: "Union[__builtin__.int,__builtin__._SupportsIndex]"
      kind: UNION
      args {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
      args {
        pretty_printed_name: "__builtin__._SupportsIndex"
        fully_qualified_name: "__builtin__._SupportsIndex"
      }
    }
  }
  valid_for: "27"
}
functions {
  name: "open"
  fully_qualified_name: "__builtin__.open"
  return_annotation {
    pretty_printed_name: "typing.BinaryIO"
    fully_qualified_name: "typing.BinaryIO"
  }
  parameters {
    name: "name"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[__builtin__.unicode,__builtin__.int]"
      kind: UNION
      args {
        pretty_printed_name: "__builtin__.unicode"
        fully_qualified_name: "__builtin__.unicode"
      }
      args {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
  }
  parameters {
    name: "mode"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "__builtin__.unicode"
      fully_qualified_name: "__builtin__.unicode"
    }
    has_default: true
  }
  parameters {
    name: "buffering"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    has_default: true
  }
  valid_for: "27"
}
functions {
  name: "ord"
  fully_qualified_name: "__builtin__.ord"
  return_annotation {
    pretty_printed_name: "__builtin__.int"
    fully_qualified_name: "__builtin__.int"
  }
  parameters {
    name: "__c"
    type_annotation {
      pretty_printed_name: "Union[builtins.unicode,__builtin__.str]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.unicode"
        fully_qualified_name: "builtins.unicode"
      }
      args {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
    }
  }
  valid_for: "27"
}
functions {
  name: "print"
  fully_qualified_name: "__builtin__.print"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "values"
    kind: VAR_POSITIONAL
    type_annotation {
      pretty_printed_name: "__builtin__.object"
      fully_qualified_name: "__builtin__.object"
    }
  }
  parameters {
    name: "sep"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[builtins.unicode,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.unicode"
        fully_qualified_name: "builtins.unicode"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "end"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[builtins.unicode,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.unicode"
        fully_qualified_name: "builtins.unicode"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "file"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[_typeshed.SupportsWrite[Any],None]"
      kind: UNION
      args {
        pretty_printed_name: "_typeshed.SupportsWrite[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "_typeshed.SupportsWrite"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  valid_for: "27"
}
functions {
  name: "quit"
  fully_qualified_name: "__builtin__.quit"
  return_annotation {
    pretty_printed_name: "NoReturn"
    kind: UNINHABITED
  }
  parameters {
    name: "code"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "__builtin__.object"
      fully_qualified_name: "__builtin__.object"
    }
    has_default: true
  }
  valid_for: "27"
}
functions {
  name: "range"
  fully_qualified_name: "__builtin__.range"
  return_annotation {
    pretty_printed_name: "builtins.list[__builtin__.int]"
    args {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    fully_qualified_name: "builtins.list"
  }
  parameters {
    name: "__x"
    type_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
  }
  parameters {
    name: "__y"
    type_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    has_default: true
  }
  parameters {
    name: "__step"
    type_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    has_default: true
  }
  valid_for: "27"
}
functions {
  name: "raw_input"
  fully_qualified_name: "__builtin__.raw_input"
  return_annotation {
    pretty_printed_name: "__builtin__.str"
    fully_qualified_name: "__builtin__.str"
  }
  parameters {
    name: "__prompt"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    has_default: true
  }
  valid_for: "27"
}
functions {
  name: "reload"
  fully_qualified_name: "__builtin__.reload"
  return_annotation {
    pretty_printed_name: "Any"
    kind: ANY
  }
  parameters {
    name: "__module"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  valid_for: "27"
}
functions {
  name: "repr"
  fully_qualified_name: "__builtin__.repr"
  return_annotation {
    pretty_printed_name: "__builtin__.str"
    fully_qualified_name: "__builtin__.str"
  }
  parameters {
    name: "__obj"
    type_annotation {
      pretty_printed_name: "__builtin__.object"
      fully_qualified_name: "__builtin__.object"
    }
  }
  valid_for: "27"
}
functions {
  name: "setattr"
  fully_qualified_name: "__builtin__.setattr"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "__obj"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  parameters {
    name: "__name"
    type_annotation {
      pretty_printed_name: "builtins.unicode"
      fully_qualified_name: "builtins.unicode"
    }
  }
  parameters {
    name: "__value"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  valid_for: "27"
}
functions {
  name: "sorted"
  fully_qualified_name: "__builtin__.sorted"
  return_annotation {
    pretty_printed_name: "builtins.list[__builtin__._T]"
    args {
      pretty_printed_name: "__builtin__._T"
      kind: TYPE_VAR
    }
    fully_qualified_name: "builtins.list"
  }
  parameters {
    name: "__iterable"
    type_annotation {
      pretty_printed_name: "typing.Iterable[__builtin__._T]"
      args {
        pretty_printed_name: "__builtin__._T"
        kind: TYPE_VAR
      }
      fully_qualified_name: "typing.Iterable"
    }
  }
  parameters {
    name: "cmp"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "CallableType[builtins.function]"
      kind: CALLABLE
      args {
        pretty_printed_name: "builtins.function"
        fully_qualified_name: "builtins.function"
      }
    }
    has_default: true
  }
  parameters {
    name: "key"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[CallableType[builtins.function],None]"
      kind: UNION
      args {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "reverse"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "__builtin__.bool"
      fully_qualified_name: "__builtin__.bool"
    }
    has_default: true
  }
  valid_for: "27"
}
functions {
  name: "unichr"
  fully_qualified_name: "__builtin__.unichr"
  return_annotation {
    pretty_printed_name: "__builtin__.unicode"
    fully_qualified_name: "__builtin__.unicode"
  }
  parameters {
    name: "__i"
    type_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
  }
  valid_for: "27"
}
functions {
  name: "vars"
  fully_qualified_name: "__builtin__.vars"
  return_annotation {
    pretty_printed_name: "builtins.dict[__builtin__.str,Any]"
    args {
      pretty_printed_name: "__builtin__.str"
      fully_qualified_name: "__builtin__.str"
    }
    args {
      pretty_printed_name: "Any"
      kind: ANY
    }
    fully_qualified_name: "builtins.dict"
  }
  parameters {
    name: "__object"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    has_default: true
  }
  valid_for: "27"
}
functions {
  name: "__import__"
  fully_qualified_name: "__builtin__.__import__"
  return_annotation {
    pretty_printed_name: "Any"
    kind: ANY
  }
  parameters {
    name: "name"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.unicode"
      fully_qualified_name: "builtins.unicode"
    }
  }
  parameters {
    name: "globals"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[typing.Mapping[__builtin__.str,Any],None]"
      kind: UNION
      args {
        pretty_printed_name: "typing.Mapping[__builtin__.str,Any]"
        args {
          pretty_printed_name: "__builtin__.str"
          fully_qualified_name: "__builtin__.str"
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "typing.Mapping"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "locals"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[typing.Mapping[__builtin__.str,Any],None]"
      kind: UNION
      args {
        pretty_printed_name: "typing.Mapping[__builtin__.str,Any]"
        args {
          pretty_printed_name: "__builtin__.str"
          fully_qualified_name: "__builtin__.str"
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "typing.Mapping"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "fromlist"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "typing.Sequence[__builtin__.str]"
      args {
        pretty_printed_name: "__builtin__.str"
        fully_qualified_name: "__builtin__.str"
      }
      fully_qualified_name: "typing.Sequence"
    }
    has_default: true
  }
  parameters {
    name: "level"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    has_default: true
  }
  valid_for: "27"
}
overloaded_functions {
  name: "filter"
  fullname: "__builtin__.filter"
  definitions {
    name: "filter"
    fully_qualified_name: "__builtin__.filter"
    return_annotation {
      pretty_printed_name: "typing.AnyStr"
      kind: TYPE_VAR
    }
    parameters {
      name: "__function"
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    parameters {
      name: "__iterable"
      type_annotation {
        pretty_printed_name: "typing.AnyStr"
        kind: TYPE_VAR
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "filter"
    fully_qualified_name: "__builtin__.filter"
    return_annotation {
      pretty_printed_name: "builtins.tuple[__builtin__._T]"
      args {
        pretty_printed_name: "__builtin__._T"
        kind: TYPE_VAR
      }
      fully_qualified_name: "builtins.tuple"
    }
    parameters {
      name: "__function"
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "__iterable"
      type_annotation {
        pretty_printed_name: "builtins.tuple[Union[__builtin__._T,None]]"
        args {
          pretty_printed_name: "Union[__builtin__._T,None]"
          kind: UNION
          args {
            pretty_printed_name: "__builtin__._T"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        fully_qualified_name: "builtins.tuple"
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "filter"
    fully_qualified_name: "__builtin__.filter"
    return_annotation {
      pretty_printed_name: "builtins.tuple[__builtin__._T]"
      args {
        pretty_printed_name: "__builtin__._T"
        kind: TYPE_VAR
      }
      fully_qualified_name: "builtins.tuple"
    }
    parameters {
      name: "__function"
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    parameters {
      name: "__iterable"
      type_annotation {
        pretty_printed_name: "builtins.tuple[__builtin__._T]"
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.tuple"
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "filter"
    fully_qualified_name: "__builtin__.filter"
    return_annotation {
      pretty_printed_name: "builtins.list[__builtin__._T]"
      args {
        pretty_printed_name: "__builtin__._T"
        kind: TYPE_VAR
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "__function"
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "__iterable"
      type_annotation {
        pretty_printed_name: "typing.Iterable[Union[__builtin__._T,None]]"
        args {
          pretty_printed_name: "Union[__builtin__._T,None]"
          kind: UNION
          args {
            pretty_printed_name: "__builtin__._T"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "filter"
    fully_qualified_name: "__builtin__.filter"
    return_annotation {
      pretty_printed_name: "builtins.list[__builtin__._T]"
      args {
        pretty_printed_name: "__builtin__._T"
        kind: TYPE_VAR
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "__function"
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    parameters {
      name: "__iterable"
      type_annotation {
        pretty_printed_name: "typing.Iterable[__builtin__._T]"
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  valid_for: "27"
}
overloaded_functions {
  name: "getattr"
  fullname: "__builtin__.getattr"
  definitions {
    name: "getattr"
    fully_qualified_name: "__builtin__.getattr"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "__o"
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.unicode"
        fully_qualified_name: "builtins.unicode"
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "getattr"
    fully_qualified_name: "__builtin__.getattr"
    return_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "__o"
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.unicode"
        fully_qualified_name: "builtins.unicode"
      }
    }
    parameters {
      name: "__default"
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "getattr"
    fully_qualified_name: "__builtin__.getattr"
    return_annotation {
      pretty_printed_name: "Union[Any,__builtin__.bool]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "__builtin__.bool"
        fully_qualified_name: "__builtin__.bool"
      }
    }
    parameters {
      name: "__o"
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.unicode"
        fully_qualified_name: "builtins.unicode"
      }
    }
    parameters {
      name: "__default"
      type_annotation {
        pretty_printed_name: "__builtin__.bool"
        fully_qualified_name: "__builtin__.bool"
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "getattr"
    fully_qualified_name: "__builtin__.getattr"
    return_annotation {
      pretty_printed_name: "Union[Any,__builtin__._T]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "__builtin__._T"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "__o"
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.unicode"
        fully_qualified_name: "builtins.unicode"
      }
    }
    parameters {
      name: "__default"
      type_annotation {
        pretty_printed_name: "__builtin__._T"
        kind: TYPE_VAR
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  valid_for: "27"
}
overloaded_functions {
  name: "iter"
  fullname: "__builtin__.iter"
  definitions {
    name: "iter"
    fully_qualified_name: "__builtin__.iter"
    return_annotation {
      pretty_printed_name: "typing.Iterator[__builtin__._T]"
      args {
        pretty_printed_name: "__builtin__._T"
        kind: TYPE_VAR
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "__iterable"
      type_annotation {
        pretty_printed_name: "typing.Iterable[__builtin__._T]"
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "iter"
    fully_qualified_name: "__builtin__.iter"
    return_annotation {
      pretty_printed_name: "typing.Iterator[__builtin__._T]"
      args {
        pretty_printed_name: "__builtin__._T"
        kind: TYPE_VAR
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "__function"
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    parameters {
      name: "__sentinel"
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "iter"
    fully_qualified_name: "__builtin__.iter"
    return_annotation {
      pretty_printed_name: "typing.Iterator[__builtin__._T]"
      args {
        pretty_printed_name: "__builtin__._T"
        kind: TYPE_VAR
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "__function"
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    parameters {
      name: "__sentinel"
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  valid_for: "27"
}
overloaded_functions {
  name: "map"
  fullname: "__builtin__.map"
  definitions {
    name: "map"
    fully_qualified_name: "__builtin__.map"
    return_annotation {
      pretty_printed_name: "builtins.list[__builtin__._T1]"
      args {
        pretty_printed_name: "__builtin__._T1"
        kind: TYPE_VAR
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "__func"
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "__iter1"
      type_annotation {
        pretty_printed_name: "typing.Iterable[__builtin__._T1]"
        args {
          pretty_printed_name: "__builtin__._T1"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "map"
    fully_qualified_name: "__builtin__.map"
    return_annotation {
      pretty_printed_name: "builtins.list[Tuple[__builtin__._T1,__builtin__._T2]]"
      args {
        pretty_printed_name: "Tuple[__builtin__._T1,__builtin__._T2]"
        kind: TUPLE
        args {
          pretty_printed_name: "__builtin__._T1"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "__builtin__._T2"
          kind: TYPE_VAR
        }
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "__func"
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "__iter1"
      type_annotation {
        pretty_printed_name: "typing.Iterable[__builtin__._T1]"
        args {
          pretty_printed_name: "__builtin__._T1"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    parameters {
      name: "__iter2"
      type_annotation {
        pretty_printed_name: "typing.Iterable[__builtin__._T2]"
        args {
          pretty_printed_name: "__builtin__._T2"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "map"
    fully_qualified_name: "__builtin__.map"
    return_annotation {
      pretty_printed_name: "builtins.list[Tuple[__builtin__._T1,__builtin__._T2,__builtin__._T3]]"
      args {
        pretty_printed_name: "Tuple[__builtin__._T1,__builtin__._T2,__builtin__._T3]"
        kind: TUPLE
        args {
          pretty_printed_name: "__builtin__._T1"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "__builtin__._T2"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "__builtin__._T3"
          kind: TYPE_VAR
        }
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "__func"
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "__iter1"
      type_annotation {
        pretty_printed_name: "typing.Iterable[__builtin__._T1]"
        args {
          pretty_printed_name: "__builtin__._T1"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    parameters {
      name: "__iter2"
      type_annotation {
        pretty_printed_name: "typing.Iterable[__builtin__._T2]"
        args {
          pretty_printed_name: "__builtin__._T2"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    parameters {
      name: "__iter3"
      type_annotation {
        pretty_printed_name: "typing.Iterable[__builtin__._T3]"
        args {
          pretty_printed_name: "__builtin__._T3"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "map"
    fully_qualified_name: "__builtin__.map"
    return_annotation {
      pretty_printed_name: "builtins.list[Tuple[__builtin__._T1,__builtin__._T2,__builtin__._T3,__builtin__._T4]]"
      args {
        pretty_printed_name: "Tuple[__builtin__._T1,__builtin__._T2,__builtin__._T3,__builtin__._T4]"
        kind: TUPLE
        args {
          pretty_printed_name: "__builtin__._T1"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "__builtin__._T2"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "__builtin__._T3"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "__builtin__._T4"
          kind: TYPE_VAR
        }
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "__func"
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "__iter1"
      type_annotation {
        pretty_printed_name: "typing.Iterable[__builtin__._T1]"
        args {
          pretty_printed_name: "__builtin__._T1"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    parameters {
      name: "__iter2"
      type_annotation {
        pretty_printed_name: "typing.Iterable[__builtin__._T2]"
        args {
          pretty_printed_name: "__builtin__._T2"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    parameters {
      name: "__iter3"
      type_annotation {
        pretty_printed_name: "typing.Iterable[__builtin__._T3]"
        args {
          pretty_printed_name: "__builtin__._T3"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    parameters {
      name: "__iter4"
      type_annotation {
        pretty_printed_name: "typing.Iterable[__builtin__._T4]"
        args {
          pretty_printed_name: "__builtin__._T4"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "map"
    fully_qualified_name: "__builtin__.map"
    return_annotation {
      pretty_printed_name: "builtins.list[Tuple[__builtin__._T1,__builtin__._T2,__builtin__._T3,__builtin__._T4,__builtin__._T5]]"
      args {
        pretty_printed_name: "Tuple[__builtin__._T1,__builtin__._T2,__builtin__._T3,__builtin__._T4,__builtin__._T5]"
        kind: TUPLE
        args {
          pretty_printed_name: "__builtin__._T1"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "__builtin__._T2"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "__builtin__._T3"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "__builtin__._T4"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "__builtin__._T5"
          kind: TYPE_VAR
        }
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "__func"
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "__iter1"
      type_annotation {
        pretty_printed_name: "typing.Iterable[__builtin__._T1]"
        args {
          pretty_printed_name: "__builtin__._T1"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    parameters {
      name: "__iter2"
      type_annotation {
        pretty_printed_name: "typing.Iterable[__builtin__._T2]"
        args {
          pretty_printed_name: "__builtin__._T2"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    parameters {
      name: "__iter3"
      type_annotation {
        pretty_printed_name: "typing.Iterable[__builtin__._T3]"
        args {
          pretty_printed_name: "__builtin__._T3"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    parameters {
      name: "__iter4"
      type_annotation {
        pretty_printed_name: "typing.Iterable[__builtin__._T4]"
        args {
          pretty_printed_name: "__builtin__._T4"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    parameters {
      name: "__iter5"
      type_annotation {
        pretty_printed_name: "typing.Iterable[__builtin__._T5]"
        args {
          pretty_printed_name: "__builtin__._T5"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "map"
    fully_qualified_name: "__builtin__.map"
    return_annotation {
      pretty_printed_name: "builtins.list[builtins.tuple[Any]]"
      args {
        pretty_printed_name: "builtins.tuple[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "builtins.tuple"
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "__func"
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "__iter1"
      type_annotation {
        pretty_printed_name: "typing.Iterable[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    parameters {
      name: "__iter2"
      type_annotation {
        pretty_printed_name: "typing.Iterable[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    parameters {
      name: "__iter3"
      type_annotation {
        pretty_printed_name: "typing.Iterable[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    parameters {
      name: "__iter4"
      type_annotation {
        pretty_printed_name: "typing.Iterable[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    parameters {
      name: "__iter5"
      type_annotation {
        pretty_printed_name: "typing.Iterable[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    parameters {
      name: "__iter6"
      type_annotation {
        pretty_printed_name: "typing.Iterable[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    parameters {
      name: "iterables"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "typing.Iterable[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "map"
    fully_qualified_name: "__builtin__.map"
    return_annotation {
      pretty_printed_name: "builtins.list[__builtin__._S]"
      args {
        pretty_printed_name: "__builtin__._S"
        kind: TYPE_VAR
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "__func"
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    parameters {
      name: "__iter1"
      type_annotation {
        pretty_printed_name: "typing.Iterable[__builtin__._T1]"
        args {
          pretty_printed_name: "__builtin__._T1"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "map"
    fully_qualified_name: "__builtin__.map"
    return_annotation {
      pretty_printed_name: "builtins.list[__builtin__._S]"
      args {
        pretty_printed_name: "__builtin__._S"
        kind: TYPE_VAR
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "__func"
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    parameters {
      name: "__iter1"
      type_annotation {
        pretty_printed_name: "typing.Iterable[__builtin__._T1]"
        args {
          pretty_printed_name: "__builtin__._T1"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    parameters {
      name: "__iter2"
      type_annotation {
        pretty_printed_name: "typing.Iterable[__builtin__._T2]"
        args {
          pretty_printed_name: "__builtin__._T2"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "map"
    fully_qualified_name: "__builtin__.map"
    return_annotation {
      pretty_printed_name: "builtins.list[__builtin__._S]"
      args {
        pretty_printed_name: "__builtin__._S"
        kind: TYPE_VAR
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "__func"
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    parameters {
      name: "__iter1"
      type_annotation {
        pretty_printed_name: "typing.Iterable[__builtin__._T1]"
        args {
          pretty_printed_name: "__builtin__._T1"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    parameters {
      name: "__iter2"
      type_annotation {
        pretty_printed_name: "typing.Iterable[__builtin__._T2]"
        args {
          pretty_printed_name: "__builtin__._T2"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    parameters {
      name: "__iter3"
      type_annotation {
        pretty_printed_name: "typing.Iterable[__builtin__._T3]"
        args {
          pretty_printed_name: "__builtin__._T3"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "map"
    fully_qualified_name: "__builtin__.map"
    return_annotation {
      pretty_printed_name: "builtins.list[__builtin__._S]"
      args {
        pretty_printed_name: "__builtin__._S"
        kind: TYPE_VAR
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "__func"
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    parameters {
      name: "__iter1"
      type_annotation {
        pretty_printed_name: "typing.Iterable[__builtin__._T1]"
        args {
          pretty_printed_name: "__builtin__._T1"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    parameters {
      name: "__iter2"
      type_annotation {
        pretty_printed_name: "typing.Iterable[__builtin__._T2]"
        args {
          pretty_printed_name: "__builtin__._T2"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    parameters {
      name: "__iter3"
      type_annotation {
        pretty_printed_name: "typing.Iterable[__builtin__._T3]"
        args {
          pretty_printed_name: "__builtin__._T3"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    parameters {
      name: "__iter4"
      type_annotation {
        pretty_printed_name: "typing.Iterable[__builtin__._T4]"
        args {
          pretty_printed_name: "__builtin__._T4"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "map"
    fully_qualified_name: "__builtin__.map"
    return_annotation {
      pretty_printed_name: "builtins.list[__builtin__._S]"
      args {
        pretty_printed_name: "__builtin__._S"
        kind: TYPE_VAR
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "__func"
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    parameters {
      name: "__iter1"
      type_annotation {
        pretty_printed_name: "typing.Iterable[__builtin__._T1]"
        args {
          pretty_printed_name: "__builtin__._T1"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    parameters {
      name: "__iter2"
      type_annotation {
        pretty_printed_name: "typing.Iterable[__builtin__._T2]"
        args {
          pretty_printed_name: "__builtin__._T2"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    parameters {
      name: "__iter3"
      type_annotation {
        pretty_printed_name: "typing.Iterable[__builtin__._T3]"
        args {
          pretty_printed_name: "__builtin__._T3"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    parameters {
      name: "__iter4"
      type_annotation {
        pretty_printed_name: "typing.Iterable[__builtin__._T4]"
        args {
          pretty_printed_name: "__builtin__._T4"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    parameters {
      name: "__iter5"
      type_annotation {
        pretty_printed_name: "typing.Iterable[__builtin__._T5]"
        args {
          pretty_printed_name: "__builtin__._T5"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "map"
    fully_qualified_name: "__builtin__.map"
    return_annotation {
      pretty_printed_name: "builtins.list[__builtin__._S]"
      args {
        pretty_printed_name: "__builtin__._S"
        kind: TYPE_VAR
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "__func"
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    parameters {
      name: "__iter1"
      type_annotation {
        pretty_printed_name: "typing.Iterable[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    parameters {
      name: "__iter2"
      type_annotation {
        pretty_printed_name: "typing.Iterable[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    parameters {
      name: "__iter3"
      type_annotation {
        pretty_printed_name: "typing.Iterable[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    parameters {
      name: "__iter4"
      type_annotation {
        pretty_printed_name: "typing.Iterable[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    parameters {
      name: "__iter5"
      type_annotation {
        pretty_printed_name: "typing.Iterable[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    parameters {
      name: "__iter6"
      type_annotation {
        pretty_printed_name: "typing.Iterable[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    parameters {
      name: "iterables"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "typing.Iterable[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  valid_for: "27"
}
overloaded_functions {
  name: "max"
  fullname: "__builtin__.max"
  definitions {
    name: "max"
    fully_qualified_name: "__builtin__.max"
    return_annotation {
      pretty_printed_name: "__builtin__._T"
      kind: TYPE_VAR
    }
    parameters {
      name: "__arg1"
      type_annotation {
        pretty_printed_name: "__builtin__._T"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "__arg2"
      type_annotation {
        pretty_printed_name: "__builtin__._T"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "_args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "__builtin__._T"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "key"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "max"
    fully_qualified_name: "__builtin__.max"
    return_annotation {
      pretty_printed_name: "__builtin__._T"
      kind: TYPE_VAR
    }
    parameters {
      name: "__iterable"
      type_annotation {
        pretty_printed_name: "typing.Iterable[__builtin__._T]"
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    parameters {
      name: "key"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  valid_for: "27"
}
overloaded_functions {
  name: "min"
  fullname: "__builtin__.min"
  definitions {
    name: "min"
    fully_qualified_name: "__builtin__.min"
    return_annotation {
      pretty_printed_name: "__builtin__._T"
      kind: TYPE_VAR
    }
    parameters {
      name: "__arg1"
      type_annotation {
        pretty_printed_name: "__builtin__._T"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "__arg2"
      type_annotation {
        pretty_printed_name: "__builtin__._T"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "_args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "__builtin__._T"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "key"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "min"
    fully_qualified_name: "__builtin__.min"
    return_annotation {
      pretty_printed_name: "__builtin__._T"
      kind: TYPE_VAR
    }
    parameters {
      name: "__iterable"
      type_annotation {
        pretty_printed_name: "typing.Iterable[__builtin__._T]"
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    parameters {
      name: "key"
      kind: KEYWORD_ONLY
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  valid_for: "27"
}
overloaded_functions {
  name: "next"
  fullname: "__builtin__.next"
  definitions {
    name: "next"
    fully_qualified_name: "__builtin__.next"
    return_annotation {
      pretty_printed_name: "__builtin__._T"
      kind: TYPE_VAR
    }
    parameters {
      name: "__i"
      type_annotation {
        pretty_printed_name: "typing.Iterator[__builtin__._T]"
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterator"
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "next"
    fully_qualified_name: "__builtin__.next"
    return_annotation {
      pretty_printed_name: "Union[__builtin__._T,__builtin__._VT]"
      kind: UNION
      args {
        pretty_printed_name: "__builtin__._T"
        kind: TYPE_VAR
      }
      args {
        pretty_printed_name: "__builtin__._VT"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "__i"
      type_annotation {
        pretty_printed_name: "typing.Iterator[__builtin__._T]"
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterator"
      }
    }
    parameters {
      name: "default"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__._VT"
        kind: TYPE_VAR
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  valid_for: "27"
}
overloaded_functions {
  name: "pow"
  fullname: "__builtin__.pow"
  definitions {
    name: "pow"
    fully_qualified_name: "__builtin__.pow"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "__base"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    parameters {
      name: "__exp"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    parameters {
      name: "__mod"
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "pow"
    fully_qualified_name: "__builtin__.pow"
    return_annotation {
      pretty_printed_name: "__builtin__.int"
      fully_qualified_name: "__builtin__.int"
    }
    parameters {
      name: "__base"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    parameters {
      name: "__exp"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    parameters {
      name: "__mod"
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "pow"
    fully_qualified_name: "__builtin__.pow"
    return_annotation {
      pretty_printed_name: "__builtin__.float"
      fully_qualified_name: "__builtin__.float"
    }
    parameters {
      name: "__base"
      type_annotation {
        pretty_printed_name: "__builtin__.float"
        fully_qualified_name: "__builtin__.float"
      }
    }
    parameters {
      name: "__exp"
      type_annotation {
        pretty_printed_name: "__builtin__.float"
        fully_qualified_name: "__builtin__.float"
      }
    }
    parameters {
      name: "__mod"
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      has_default: true
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "pow"
    fully_qualified_name: "__builtin__.pow"
    return_annotation {
      pretty_printed_name: "__builtin__._T_co"
      kind: TYPE_VAR
    }
    parameters {
      name: "__base"
      type_annotation {
        pretty_printed_name: "__builtin__._SupportsPow2[__builtin__._E,__builtin__._T_co]"
        args {
          pretty_printed_name: "__builtin__._E"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "__builtin__._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__._SupportsPow2"
      }
    }
    parameters {
      name: "__exp"
      type_annotation {
        pretty_printed_name: "__builtin__._E"
        kind: TYPE_VAR
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "pow"
    fully_qualified_name: "__builtin__.pow"
    return_annotation {
      pretty_printed_name: "__builtin__._T_co"
      kind: TYPE_VAR
    }
    parameters {
      name: "__base"
      type_annotation {
        pretty_printed_name: "__builtin__._SupportsPow3[__builtin__._E,__builtin__._M,__builtin__._T_co]"
        args {
          pretty_printed_name: "__builtin__._E"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "__builtin__._M"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "__builtin__._T_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "__builtin__._SupportsPow3"
      }
    }
    parameters {
      name: "__exp"
      type_annotation {
        pretty_printed_name: "__builtin__._E"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "__mod"
      type_annotation {
        pretty_printed_name: "__builtin__._M"
        kind: TYPE_VAR
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  valid_for: "27"
}
overloaded_functions {
  name: "reduce"
  fullname: "__builtin__.reduce"
  definitions {
    name: "reduce"
    fully_qualified_name: "__builtin__.reduce"
    return_annotation {
      pretty_printed_name: "__builtin__._T"
      kind: TYPE_VAR
    }
    parameters {
      name: "__function"
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    parameters {
      name: "__iterable"
      type_annotation {
        pretty_printed_name: "typing.Iterable[__builtin__._S]"
        args {
          pretty_printed_name: "__builtin__._S"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    parameters {
      name: "__initializer"
      type_annotation {
        pretty_printed_name: "__builtin__._T"
        kind: TYPE_VAR
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "reduce"
    fully_qualified_name: "__builtin__.reduce"
    return_annotation {
      pretty_printed_name: "__builtin__._T"
      kind: TYPE_VAR
    }
    parameters {
      name: "__function"
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    parameters {
      name: "__iterable"
      type_annotation {
        pretty_printed_name: "typing.Iterable[__builtin__._T]"
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  valid_for: "27"
}
overloaded_functions {
  name: "reversed"
  fullname: "__builtin__.reversed"
  definitions {
    name: "reversed"
    fully_qualified_name: "__builtin__.reversed"
    return_annotation {
      pretty_printed_name: "typing.Iterator[__builtin__._T]"
      args {
        pretty_printed_name: "__builtin__._T"
        kind: TYPE_VAR
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "__sequence"
      type_annotation {
        pretty_printed_name: "typing.Sequence[__builtin__._T]"
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Sequence"
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "reversed"
    fully_qualified_name: "__builtin__.reversed"
    return_annotation {
      pretty_printed_name: "typing.Iterator[__builtin__._T]"
      args {
        pretty_printed_name: "__builtin__._T"
        kind: TYPE_VAR
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "__sequence"
      type_annotation {
        pretty_printed_name: "typing.Reversible[__builtin__._T]"
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Reversible"
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  valid_for: "27"
}
overloaded_functions {
  name: "round"
  fullname: "__builtin__.round"
  definitions {
    name: "round"
    fully_qualified_name: "__builtin__.round"
    return_annotation {
      pretty_printed_name: "__builtin__.float"
      fully_qualified_name: "__builtin__.float"
    }
    parameters {
      name: "number"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.float"
        fully_qualified_name: "__builtin__.float"
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "round"
    fully_qualified_name: "__builtin__.round"
    return_annotation {
      pretty_printed_name: "__builtin__.float"
      fully_qualified_name: "__builtin__.float"
    }
    parameters {
      name: "number"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.float"
        fully_qualified_name: "__builtin__.float"
      }
    }
    parameters {
      name: "ndigits"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "round"
    fully_qualified_name: "__builtin__.round"
    return_annotation {
      pretty_printed_name: "__builtin__.float"
      fully_qualified_name: "__builtin__.float"
    }
    parameters {
      name: "number"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.SupportsFloat"
        fully_qualified_name: "typing.SupportsFloat"
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "round"
    fully_qualified_name: "__builtin__.round"
    return_annotation {
      pretty_printed_name: "__builtin__.float"
      fully_qualified_name: "__builtin__.float"
    }
    parameters {
      name: "number"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.SupportsFloat"
        fully_qualified_name: "typing.SupportsFloat"
      }
    }
    parameters {
      name: "ndigits"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  valid_for: "27"
}
overloaded_functions {
  name: "sum"
  fullname: "__builtin__.sum"
  definitions {
    name: "sum"
    fully_qualified_name: "__builtin__.sum"
    return_annotation {
      pretty_printed_name: "Union[__builtin__._T,__builtin__.int]"
      kind: UNION
      args {
        pretty_printed_name: "__builtin__._T"
        kind: TYPE_VAR
      }
      args {
        pretty_printed_name: "__builtin__.int"
        fully_qualified_name: "__builtin__.int"
      }
    }
    parameters {
      name: "__iterable"
      type_annotation {
        pretty_printed_name: "typing.Iterable[__builtin__._T]"
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "sum"
    fully_qualified_name: "__builtin__.sum"
    return_annotation {
      pretty_printed_name: "Union[__builtin__._T,__builtin__._S]"
      kind: UNION
      args {
        pretty_printed_name: "__builtin__._T"
        kind: TYPE_VAR
      }
      args {
        pretty_printed_name: "__builtin__._S"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "__iterable"
      type_annotation {
        pretty_printed_name: "typing.Iterable[__builtin__._T]"
        args {
          pretty_printed_name: "__builtin__._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    parameters {
      name: "__start"
      type_annotation {
        pretty_printed_name: "__builtin__._S"
        kind: TYPE_VAR
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  valid_for: "27"
}
overloaded_functions {
  name: "zip"
  fullname: "__builtin__.zip"
  definitions {
    name: "zip"
    fully_qualified_name: "__builtin__.zip"
    return_annotation {
      pretty_printed_name: "builtins.list[Tuple[__builtin__._T1]]"
      args {
        pretty_printed_name: "Tuple[__builtin__._T1]"
        kind: TUPLE
        args {
          pretty_printed_name: "__builtin__._T1"
          kind: TYPE_VAR
        }
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "__iter1"
      type_annotation {
        pretty_printed_name: "typing.Iterable[__builtin__._T1]"
        args {
          pretty_printed_name: "__builtin__._T1"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "zip"
    fully_qualified_name: "__builtin__.zip"
    return_annotation {
      pretty_printed_name: "builtins.list[Tuple[__builtin__._T1,__builtin__._T2]]"
      args {
        pretty_printed_name: "Tuple[__builtin__._T1,__builtin__._T2]"
        kind: TUPLE
        args {
          pretty_printed_name: "__builtin__._T1"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "__builtin__._T2"
          kind: TYPE_VAR
        }
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "__iter1"
      type_annotation {
        pretty_printed_name: "typing.Iterable[__builtin__._T1]"
        args {
          pretty_printed_name: "__builtin__._T1"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    parameters {
      name: "__iter2"
      type_annotation {
        pretty_printed_name: "typing.Iterable[__builtin__._T2]"
        args {
          pretty_printed_name: "__builtin__._T2"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "zip"
    fully_qualified_name: "__builtin__.zip"
    return_annotation {
      pretty_printed_name: "builtins.list[Tuple[__builtin__._T1,__builtin__._T2,__builtin__._T3]]"
      args {
        pretty_printed_name: "Tuple[__builtin__._T1,__builtin__._T2,__builtin__._T3]"
        kind: TUPLE
        args {
          pretty_printed_name: "__builtin__._T1"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "__builtin__._T2"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "__builtin__._T3"
          kind: TYPE_VAR
        }
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "__iter1"
      type_annotation {
        pretty_printed_name: "typing.Iterable[__builtin__._T1]"
        args {
          pretty_printed_name: "__builtin__._T1"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    parameters {
      name: "__iter2"
      type_annotation {
        pretty_printed_name: "typing.Iterable[__builtin__._T2]"
        args {
          pretty_printed_name: "__builtin__._T2"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    parameters {
      name: "__iter3"
      type_annotation {
        pretty_printed_name: "typing.Iterable[__builtin__._T3]"
        args {
          pretty_printed_name: "__builtin__._T3"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "zip"
    fully_qualified_name: "__builtin__.zip"
    return_annotation {
      pretty_printed_name: "builtins.list[Tuple[__builtin__._T1,__builtin__._T2,__builtin__._T3,__builtin__._T4]]"
      args {
        pretty_printed_name: "Tuple[__builtin__._T1,__builtin__._T2,__builtin__._T3,__builtin__._T4]"
        kind: TUPLE
        args {
          pretty_printed_name: "__builtin__._T1"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "__builtin__._T2"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "__builtin__._T3"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "__builtin__._T4"
          kind: TYPE_VAR
        }
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "__iter1"
      type_annotation {
        pretty_printed_name: "typing.Iterable[__builtin__._T1]"
        args {
          pretty_printed_name: "__builtin__._T1"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    parameters {
      name: "__iter2"
      type_annotation {
        pretty_printed_name: "typing.Iterable[__builtin__._T2]"
        args {
          pretty_printed_name: "__builtin__._T2"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    parameters {
      name: "__iter3"
      type_annotation {
        pretty_printed_name: "typing.Iterable[__builtin__._T3]"
        args {
          pretty_printed_name: "__builtin__._T3"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    parameters {
      name: "__iter4"
      type_annotation {
        pretty_printed_name: "typing.Iterable[__builtin__._T4]"
        args {
          pretty_printed_name: "__builtin__._T4"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "zip"
    fully_qualified_name: "__builtin__.zip"
    return_annotation {
      pretty_printed_name: "builtins.list[Tuple[__builtin__._T1,__builtin__._T2,__builtin__._T3,__builtin__._T4,__builtin__._T5]]"
      args {
        pretty_printed_name: "Tuple[__builtin__._T1,__builtin__._T2,__builtin__._T3,__builtin__._T4,__builtin__._T5]"
        kind: TUPLE
        args {
          pretty_printed_name: "__builtin__._T1"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "__builtin__._T2"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "__builtin__._T3"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "__builtin__._T4"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "__builtin__._T5"
          kind: TYPE_VAR
        }
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "__iter1"
      type_annotation {
        pretty_printed_name: "typing.Iterable[__builtin__._T1]"
        args {
          pretty_printed_name: "__builtin__._T1"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    parameters {
      name: "__iter2"
      type_annotation {
        pretty_printed_name: "typing.Iterable[__builtin__._T2]"
        args {
          pretty_printed_name: "__builtin__._T2"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    parameters {
      name: "__iter3"
      type_annotation {
        pretty_printed_name: "typing.Iterable[__builtin__._T3]"
        args {
          pretty_printed_name: "__builtin__._T3"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    parameters {
      name: "__iter4"
      type_annotation {
        pretty_printed_name: "typing.Iterable[__builtin__._T4]"
        args {
          pretty_printed_name: "__builtin__._T4"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    parameters {
      name: "__iter5"
      type_annotation {
        pretty_printed_name: "typing.Iterable[__builtin__._T5]"
        args {
          pretty_printed_name: "__builtin__._T5"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "zip"
    fully_qualified_name: "__builtin__.zip"
    return_annotation {
      pretty_printed_name: "builtins.list[builtins.tuple[Any]]"
      args {
        pretty_printed_name: "builtins.tuple[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "builtins.tuple"
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "__iter1"
      type_annotation {
        pretty_printed_name: "typing.Iterable[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    parameters {
      name: "__iter2"
      type_annotation {
        pretty_printed_name: "typing.Iterable[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    parameters {
      name: "__iter3"
      type_annotation {
        pretty_printed_name: "typing.Iterable[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    parameters {
      name: "__iter4"
      type_annotation {
        pretty_printed_name: "typing.Iterable[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    parameters {
      name: "__iter5"
      type_annotation {
        pretty_printed_name: "typing.Iterable[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    parameters {
      name: "__iter6"
      type_annotation {
        pretty_printed_name: "typing.Iterable[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    parameters {
      name: "iterables"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "typing.Iterable[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  valid_for: "27"
}
vars {
  name: "NotImplemented"
  fully_qualified_name: "__builtin__.NotImplemented"
  type_annotation {
    pretty_printed_name: "__builtin__._NotImplementedType"
    fully_qualified_name: "__builtin__._NotImplementedType"
  }
  valid_for: "27"
}
vars {
  name: "Ellipsis"
  fully_qualified_name: "__builtin__.Ellipsis"
  type_annotation {
    pretty_printed_name: "__builtin__.ellipsis"
    fully_qualified_name: "__builtin__.ellipsis"
  }
  valid_for: "27"
}
