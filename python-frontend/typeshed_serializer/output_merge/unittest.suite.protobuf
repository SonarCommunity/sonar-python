fully_qualified_name: "unittest.suite"
classes {
  name: "BaseTestSuite"
  fully_qualified_name: "unittest.suite.BaseTestSuite"
  super_classes: "typing.Iterable"
  methods {
    name: "__init__"
    fully_qualified_name: "unittest.suite.BaseTestSuite.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "unittest.suite.BaseTestSuite"
        fully_qualified_name: "unittest.suite.BaseTestSuite"
      }
    }
    parameters {
      name: "tests"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[UnboundType[_TestType]]"
        args {
          pretty_printed_name: "UnboundType[_TestType]"
          kind: UNBOUND
        }
        fully_qualified_name: "typing.Iterable"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__call__"
    fully_qualified_name: "unittest.suite.BaseTestSuite.__call__"
    return_annotation {
      pretty_printed_name: "unittest.result.TestResult"
      fully_qualified_name: "unittest.result.TestResult"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "unittest.suite.BaseTestSuite"
        fully_qualified_name: "unittest.suite.BaseTestSuite"
      }
    }
    parameters {
      name: "result"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "unittest.result.TestResult"
        fully_qualified_name: "unittest.result.TestResult"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "addTest"
    fully_qualified_name: "unittest.suite.BaseTestSuite.addTest"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "unittest.suite.BaseTestSuite"
        fully_qualified_name: "unittest.suite.BaseTestSuite"
      }
    }
    parameters {
      name: "test"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UnboundType[_TestType]"
        kind: UNBOUND
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "addTests"
    fully_qualified_name: "unittest.suite.BaseTestSuite.addTests"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "unittest.suite.BaseTestSuite"
        fully_qualified_name: "unittest.suite.BaseTestSuite"
      }
    }
    parameters {
      name: "tests"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[UnboundType[_TestType]]"
        args {
          pretty_printed_name: "UnboundType[_TestType]"
          kind: UNBOUND
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "run"
    fully_qualified_name: "unittest.suite.BaseTestSuite.run"
    return_annotation {
      pretty_printed_name: "unittest.result.TestResult"
      fully_qualified_name: "unittest.result.TestResult"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "unittest.suite.BaseTestSuite"
        fully_qualified_name: "unittest.suite.BaseTestSuite"
      }
    }
    parameters {
      name: "result"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "unittest.result.TestResult"
        fully_qualified_name: "unittest.result.TestResult"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "debug"
    fully_qualified_name: "unittest.suite.BaseTestSuite.debug"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "unittest.suite.BaseTestSuite"
        fully_qualified_name: "unittest.suite.BaseTestSuite"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "countTestCases"
    fully_qualified_name: "unittest.suite.BaseTestSuite.countTestCases"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "unittest.suite.BaseTestSuite"
        fully_qualified_name: "unittest.suite.BaseTestSuite"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__iter__"
    fully_qualified_name: "unittest.suite.BaseTestSuite.__iter__"
    return_annotation {
      pretty_printed_name: "typing.Iterator[UnboundType[_TestType]]"
      args {
        pretty_printed_name: "UnboundType[_TestType]"
        kind: UNBOUND
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "unittest.suite.BaseTestSuite"
        fully_qualified_name: "unittest.suite.BaseTestSuite"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__eq__"
    fully_qualified_name: "unittest.suite.BaseTestSuite.__eq__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "unittest.suite.BaseTestSuite"
        fully_qualified_name: "unittest.suite.BaseTestSuite"
      }
    }
    parameters {
      name: "other"
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "_tests"
    fully_qualified_name: "unittest.suite.BaseTestSuite._tests"
    type_annotation {
      pretty_printed_name: "builtins.list[unittest.case.TestCase]"
      args {
        pretty_printed_name: "unittest.case.TestCase"
        fully_qualified_name: "unittest.case.TestCase"
      }
      fully_qualified_name: "builtins.list"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "_removed_tests"
    fully_qualified_name: "unittest.suite.BaseTestSuite._removed_tests"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "TestSuite"
  fully_qualified_name: "unittest.suite.TestSuite"
  super_classes: "unittest.suite.BaseTestSuite"
  methods {
    name: "run"
    fully_qualified_name: "unittest.suite.TestSuite.run"
    return_annotation {
      pretty_printed_name: "unittest.result.TestResult"
      fully_qualified_name: "unittest.result.TestResult"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "unittest.suite.TestSuite"
        fully_qualified_name: "unittest.suite.TestSuite"
      }
    }
    parameters {
      name: "result"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "unittest.result.TestResult"
        fully_qualified_name: "unittest.result.TestResult"
      }
    }
    parameters {
      name: "debug"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "unittest"
  fully_qualified_name: "unittest"
  is_imported_module: true
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "_TestType"
  fully_qualified_name: "unittest.suite._TestType"
  type_annotation {
    pretty_printed_name: "UnboundType[TypeAlias]"
    kind: UNBOUND
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
