fully_qualified_name: "redis.client"
classes {
  name: "Redis"
  fully_qualified_name: "redis.client.Redis"
  super_classes: "builtins.object"
  methods {
    name: "set_response_callback"
    fully_qualified_name: "redis.client.Redis.set_response_callback"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "command"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "callback"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "pipeline"
    fully_qualified_name: "redis.client.Redis.pipeline"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "transaction"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    parameters {
      name: "shard_hint"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "transaction"
    fully_qualified_name: "redis.client.Redis.transaction"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "func"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "watches"
      kind: VAR_POSITIONAL
    }
    parameters {
      name: "kwargs"
      kind: VAR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "pubsub"
    fully_qualified_name: "redis.client.Redis.pubsub"
    return_annotation {
      pretty_printed_name: "redis.client.PubSub"
      fully_qualified_name: "redis.client.PubSub"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "shard_hint"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
      has_default: true
    }
    parameters {
      name: "ignore_subscribe_messages"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "execute_command"
    fully_qualified_name: "redis.client.Redis.execute_command"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
    }
    parameters {
      name: "options"
      kind: VAR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "parse_response"
    fully_qualified_name: "redis.client.Redis.parse_response"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "connection"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "command_name"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "options"
      kind: VAR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "acl_cat"
    fully_qualified_name: "redis.client.Redis.acl_cat"
    return_annotation {
      pretty_printed_name: "builtins.list[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "category"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "acl_deluser"
    fully_qualified_name: "redis.client.Redis.acl_deluser"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "username"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "acl_genpass"
    fully_qualified_name: "redis.client.Redis.acl_genpass"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "acl_getuser"
    fully_qualified_name: "redis.client.Redis.acl_getuser"
    return_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "username"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "acl_list"
    fully_qualified_name: "redis.client.Redis.acl_list"
    return_annotation {
      pretty_printed_name: "builtins.list[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "acl_load"
    fully_qualified_name: "redis.client.Redis.acl_load"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "acl_setuser"
    fully_qualified_name: "redis.client.Redis.acl_setuser"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "username"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      has_default: true
    }
    parameters {
      name: "enabled"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    parameters {
      name: "nopass"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    parameters {
      name: "passwords"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.Sequence[builtins.str],None]"
        kind: UNION
        args {
          pretty_printed_name: "typing.Sequence[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "typing.Sequence"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "hashed_passwords"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.Sequence[builtins.str],None]"
        kind: UNION
        args {
          pretty_printed_name: "typing.Sequence[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "typing.Sequence"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "categories"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.Sequence[builtins.str],None]"
        kind: UNION
        args {
          pretty_printed_name: "typing.Sequence[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "typing.Sequence"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "commands"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.Sequence[builtins.str],None]"
        kind: UNION
        args {
          pretty_printed_name: "typing.Sequence[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "typing.Sequence"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "keys"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.Sequence[builtins.str],None]"
        kind: UNION
        args {
          pretty_printed_name: "typing.Sequence[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "typing.Sequence"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "reset"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    parameters {
      name: "reset_keys"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    parameters {
      name: "reset_passwords"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "acl_users"
    fully_qualified_name: "redis.client.Redis.acl_users"
    return_annotation {
      pretty_printed_name: "builtins.list[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "acl_whoami"
    fully_qualified_name: "redis.client.Redis.acl_whoami"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "bgrewriteaof"
    fully_qualified_name: "redis.client.Redis.bgrewriteaof"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "bgsave"
    fully_qualified_name: "redis.client.Redis.bgsave"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "client_id"
    fully_qualified_name: "redis.client.Redis.client_id"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "client_kill"
    fully_qualified_name: "redis.client.Redis.client_kill"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "address"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "client_list"
    fully_qualified_name: "redis.client.Redis.client_list"
    return_annotation {
      pretty_printed_name: "builtins.list[builtins.dict[builtins.str,builtins.str]]"
      args {
        pretty_printed_name: "builtins.dict[builtins.str,builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "builtins.dict"
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "client_getname"
    fully_qualified_name: "redis.client.Redis.client_getname"
    return_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "client_setname"
    fully_qualified_name: "redis.client.Redis.client_setname"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "readwrite"
    fully_qualified_name: "redis.client.Redis.readwrite"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "readonly"
    fully_qualified_name: "redis.client.Redis.readonly"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "config_get"
    fully_qualified_name: "redis.client.Redis.config_get"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "pattern"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "config_set"
    fully_qualified_name: "redis.client.Redis.config_set"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "config_resetstat"
    fully_qualified_name: "redis.client.Redis.config_resetstat"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "config_rewrite"
    fully_qualified_name: "redis.client.Redis.config_rewrite"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "dbsize"
    fully_qualified_name: "redis.client.Redis.dbsize"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "debug_object"
    fully_qualified_name: "redis.client.Redis.debug_object"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "echo"
    fully_qualified_name: "redis.client.Redis.echo"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        fully_qualified_name: "redis.client._Value"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "flushall"
    fully_qualified_name: "redis.client.Redis.flushall"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "flushdb"
    fully_qualified_name: "redis.client.Redis.flushdb"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "info"
    fully_qualified_name: "redis.client.Redis.info"
    return_annotation {
      pretty_printed_name: "typing.Mapping[builtins.str,Any]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "typing.Mapping"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "section"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,builtins.bytes,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "lastsave"
    fully_qualified_name: "redis.client.Redis.lastsave"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "object"
    fully_qualified_name: "redis.client.Redis.object"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "infotype"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "ping"
    fully_qualified_name: "redis.client.Redis.ping"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "save"
    fully_qualified_name: "redis.client.Redis.save"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "sentinel"
    fully_qualified_name: "redis.client.Redis.sentinel"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "sentinel_get_master_addr_by_name"
    fully_qualified_name: "redis.client.Redis.sentinel_get_master_addr_by_name"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "service_name"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "sentinel_master"
    fully_qualified_name: "redis.client.Redis.sentinel_master"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "service_name"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "sentinel_masters"
    fully_qualified_name: "redis.client.Redis.sentinel_masters"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "sentinel_monitor"
    fully_qualified_name: "redis.client.Redis.sentinel_monitor"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "ip"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "port"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "quorum"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "sentinel_remove"
    fully_qualified_name: "redis.client.Redis.sentinel_remove"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "sentinel_sentinels"
    fully_qualified_name: "redis.client.Redis.sentinel_sentinels"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "service_name"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "sentinel_set"
    fully_qualified_name: "redis.client.Redis.sentinel_set"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "option"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "sentinel_slaves"
    fully_qualified_name: "redis.client.Redis.sentinel_slaves"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "service_name"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "shutdown"
    fully_qualified_name: "redis.client.Redis.shutdown"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "slaveof"
    fully_qualified_name: "redis.client.Redis.slaveof"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "host"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
    parameters {
      name: "port"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "slowlog_get"
    fully_qualified_name: "redis.client.Redis.slowlog_get"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "num"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "slowlog_len"
    fully_qualified_name: "redis.client.Redis.slowlog_len"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "slowlog_reset"
    fully_qualified_name: "redis.client.Redis.slowlog_reset"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "time"
    fully_qualified_name: "redis.client.Redis.time"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "append"
    fully_qualified_name: "redis.client.Redis.append"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "bitcount"
    fully_qualified_name: "redis.client.Redis.bitcount"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "start"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "end"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "bitop"
    fully_qualified_name: "redis.client.Redis.bitop"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "operation"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "dest"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "keys"
      kind: VAR_POSITIONAL
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "bitpos"
    fully_qualified_name: "redis.client.Redis.bitpos"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "bit"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "start"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
    parameters {
      name: "end"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "decr"
    fully_qualified_name: "redis.client.Redis.decr"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "amount"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "delete"
    fully_qualified_name: "redis.client.Redis.delete"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "names"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__delitem__"
    fully_qualified_name: "redis.client.Redis.__delitem__"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "_Key"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "dump"
    fully_qualified_name: "redis.client.Redis.dump"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "exists"
    fully_qualified_name: "redis.client.Redis.exists"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "names"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "expire"
    fully_qualified_name: "redis.client.Redis.expire"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "time"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,datetime.timedelta]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "datetime.timedelta"
          fully_qualified_name: "datetime.timedelta"
        }
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "expireat"
    fully_qualified_name: "redis.client.Redis.expireat"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "when"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "get"
    fully_qualified_name: "redis.client.Redis.get"
    return_annotation {
      pretty_printed_name: "Union[redis.client._StrType,None]"
      kind: UNION
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__getitem__"
    fully_qualified_name: "redis.client.Redis.__getitem__"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "getbit"
    fully_qualified_name: "redis.client.Redis.getbit"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "offset"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "getrange"
    fully_qualified_name: "redis.client.Redis.getrange"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "start"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "end"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "getset"
    fully_qualified_name: "redis.client.Redis.getset"
    return_annotation {
      pretty_printed_name: "Union[redis.client._StrType,None]"
      kind: UNION
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "incr"
    fully_qualified_name: "redis.client.Redis.incr"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "amount"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "incrby"
    fully_qualified_name: "redis.client.Redis.incrby"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "amount"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "incrbyfloat"
    fully_qualified_name: "redis.client.Redis.incrbyfloat"
    return_annotation {
      pretty_printed_name: "builtins.float"
      fully_qualified_name: "builtins.float"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "amount"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "keys"
    fully_qualified_name: "redis.client.Redis.keys"
    return_annotation {
      pretty_printed_name: "builtins.list[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "pattern"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "mget"
    fully_qualified_name: "redis.client.Redis.mget"
    return_annotation {
      pretty_printed_name: "builtins.list[Union[redis.client._StrType,None]]"
      args {
        pretty_printed_name: "Union[redis.client._StrType,None]"
        kind: UNION
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "keys"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[TypeAlias[Union[builtins.str,builtins.bytes]],typing.Iterable[TypeAlias[Union[builtins.str,builtins.bytes]]]]"
        kind: UNION
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
          }
          fully_qualified_name: "redis.client._Key"
        }
        args {
          pretty_printed_name: "typing.Iterable[TypeAlias[Union[builtins.str,builtins.bytes]]]"
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.str,builtins.bytes]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
            }
            fully_qualified_name: "redis.client._Key"
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "mset"
    fully_qualified_name: "redis.client.Redis.mset"
    return_annotation {
      pretty_printed_name: "Literal[builtins.bool]"
      kind: LITERAL
      args {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "mapping"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Mapping[TypeAlias[Union[builtins.str,builtins.bytes]],TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]]"
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
          }
          fully_qualified_name: "redis.client._Key"
        }
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "builtins.float"
              fully_qualified_name: "builtins.float"
            }
            args {
              pretty_printed_name: "builtins.int"
              fully_qualified_name: "builtins.int"
            }
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          fully_qualified_name: "redis.client._Value"
        }
        fully_qualified_name: "typing.Mapping"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "msetnx"
    fully_qualified_name: "redis.client.Redis.msetnx"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "mapping"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Mapping[TypeAlias[Union[builtins.str,builtins.bytes]],TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]]"
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
          }
          fully_qualified_name: "redis.client._Key"
        }
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "builtins.float"
              fully_qualified_name: "builtins.float"
            }
            args {
              pretty_printed_name: "builtins.int"
              fully_qualified_name: "builtins.int"
            }
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          fully_qualified_name: "redis.client._Value"
        }
        fully_qualified_name: "typing.Mapping"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "move"
    fully_qualified_name: "redis.client.Redis.move"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "db"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "persist"
    fully_qualified_name: "redis.client.Redis.persist"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "pexpire"
    fully_qualified_name: "redis.client.Redis.pexpire"
    return_annotation {
      pretty_printed_name: "Union[Literal[builtins.int],Literal[builtins.int]]"
      kind: UNION
      args {
        pretty_printed_name: "Literal[builtins.int]"
        kind: LITERAL
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
      args {
        pretty_printed_name: "Literal[builtins.int]"
        kind: LITERAL
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "time"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,datetime.timedelta]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "datetime.timedelta"
          fully_qualified_name: "datetime.timedelta"
        }
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "pexpireat"
    fully_qualified_name: "redis.client.Redis.pexpireat"
    return_annotation {
      pretty_printed_name: "Union[Literal[builtins.int],Literal[builtins.int]]"
      kind: UNION
      args {
        pretty_printed_name: "Literal[builtins.int]"
        kind: LITERAL
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
      args {
        pretty_printed_name: "Literal[builtins.int]"
        kind: LITERAL
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "when"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,datetime.datetime]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "datetime.datetime"
          fully_qualified_name: "datetime.datetime"
        }
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "psetex"
    fully_qualified_name: "redis.client.Redis.psetex"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "time_ms"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "pttl"
    fully_qualified_name: "redis.client.Redis.pttl"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "randomkey"
    fully_qualified_name: "redis.client.Redis.randomkey"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "rename"
    fully_qualified_name: "redis.client.Redis.rename"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "src"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "dst"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "renamenx"
    fully_qualified_name: "redis.client.Redis.renamenx"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "src"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "dst"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "restore"
    fully_qualified_name: "redis.client.Redis.restore"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "ttl"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "replace"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "set"
    fully_qualified_name: "redis.client.Redis.set"
    return_annotation {
      pretty_printed_name: "Union[builtins.bool,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        fully_qualified_name: "redis.client._Value"
      }
    }
    parameters {
      name: "ex"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[None,builtins.int,datetime.timedelta]"
        kind: UNION
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "datetime.timedelta"
          fully_qualified_name: "datetime.timedelta"
        }
      }
      has_default: true
    }
    parameters {
      name: "px"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[None,builtins.int,datetime.timedelta]"
        kind: UNION
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "datetime.timedelta"
          fully_qualified_name: "datetime.timedelta"
        }
      }
      has_default: true
    }
    parameters {
      name: "nx"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    parameters {
      name: "xx"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    parameters {
      name: "keepttl"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__setitem__"
    fully_qualified_name: "redis.client.Redis.__setitem__"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "setbit"
    fully_qualified_name: "redis.client.Redis.setbit"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "offset"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "setex"
    fully_qualified_name: "redis.client.Redis.setex"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "time"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,datetime.timedelta]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "datetime.timedelta"
          fully_qualified_name: "datetime.timedelta"
        }
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        fully_qualified_name: "redis.client._Value"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "setnx"
    fully_qualified_name: "redis.client.Redis.setnx"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        fully_qualified_name: "redis.client._Value"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "setrange"
    fully_qualified_name: "redis.client.Redis.setrange"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "offset"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "strlen"
    fully_qualified_name: "redis.client.Redis.strlen"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "substr"
    fully_qualified_name: "redis.client.Redis.substr"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "start"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "end"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "ttl"
    fully_qualified_name: "redis.client.Redis.ttl"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "type"
    fully_qualified_name: "redis.client.Redis.type"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "watch"
    fully_qualified_name: "redis.client.Redis.watch"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "names"
      kind: VAR_POSITIONAL
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "unlink"
    fully_qualified_name: "redis.client.Redis.unlink"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "names"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "unwatch"
    fully_qualified_name: "redis.client.Redis.unwatch"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "brpoplpush"
    fully_qualified_name: "redis.client.Redis.brpoplpush"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "src"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "dst"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "timeout"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "lindex"
    fully_qualified_name: "redis.client.Redis.lindex"
    return_annotation {
      pretty_printed_name: "Union[redis.client._StrType,None]"
      kind: UNION
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "index"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "linsert"
    fully_qualified_name: "redis.client.Redis.linsert"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "where"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]"
        kind: UNION
        args {
          pretty_printed_name: "Literal[builtins.str]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        args {
          pretty_printed_name: "Literal[builtins.str]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        args {
          pretty_printed_name: "Literal[builtins.str]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        args {
          pretty_printed_name: "Literal[builtins.str]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
      }
    }
    parameters {
      name: "refvalue"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        fully_qualified_name: "redis.client._Value"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        fully_qualified_name: "redis.client._Value"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "llen"
    fully_qualified_name: "redis.client.Redis.llen"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "lpop"
    fully_qualified_name: "redis.client.Redis.lpop"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "lpush"
    fully_qualified_name: "redis.client.Redis.lpush"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        fully_qualified_name: "redis.client._Value"
      }
    }
    parameters {
      name: "values"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        fully_qualified_name: "redis.client._Value"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "lpushx"
    fully_qualified_name: "redis.client.Redis.lpushx"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "lrange"
    fully_qualified_name: "redis.client.Redis.lrange"
    return_annotation {
      pretty_printed_name: "builtins.list[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "start"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "end"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "lrem"
    fully_qualified_name: "redis.client.Redis.lrem"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "count"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        fully_qualified_name: "redis.client._Value"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "lset"
    fully_qualified_name: "redis.client.Redis.lset"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "index"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        fully_qualified_name: "redis.client._Value"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "ltrim"
    fully_qualified_name: "redis.client.Redis.ltrim"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "start"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "end"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "rpop"
    fully_qualified_name: "redis.client.Redis.rpop"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "rpoplpush"
    fully_qualified_name: "redis.client.Redis.rpoplpush"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "src"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "dst"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "rpush"
    fully_qualified_name: "redis.client.Redis.rpush"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        fully_qualified_name: "redis.client._Value"
      }
    }
    parameters {
      name: "values"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        fully_qualified_name: "redis.client._Value"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "rpushx"
    fully_qualified_name: "redis.client.Redis.rpushx"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "scan"
    fully_qualified_name: "redis.client.Redis.scan"
    return_annotation {
      pretty_printed_name: "Tuple[builtins.int,builtins.list[redis.client._StrType]]"
      kind: TUPLE
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "builtins.list[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.list"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "cursor"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    parameters {
      name: "match"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,builtins.bytes,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "count"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "scan_iter"
    fully_qualified_name: "redis.client.Redis.scan_iter"
    return_annotation {
      pretty_printed_name: "typing.Iterator[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "match"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "count"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "sscan"
    fully_qualified_name: "redis.client.Redis.sscan"
    return_annotation {
      pretty_printed_name: "Tuple[builtins.int,builtins.list[redis.client._StrType]]"
      kind: TUPLE
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "builtins.list[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.list"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "cursor"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    parameters {
      name: "match"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      has_default: true
    }
    parameters {
      name: "count"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "sscan_iter"
    fully_qualified_name: "redis.client.Redis.sscan_iter"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "match"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
    parameters {
      name: "count"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "hscan"
    fully_qualified_name: "redis.client.Redis.hscan"
    return_annotation {
      pretty_printed_name: "Tuple[builtins.int,builtins.dict[redis.client._StrType,redis.client._StrType]]"
      kind: TUPLE
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "builtins.dict[redis.client._StrType,redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.dict"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "cursor"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    parameters {
      name: "match"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      has_default: true
    }
    parameters {
      name: "count"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "hscan_iter"
    fully_qualified_name: "redis.client.Redis.hscan_iter"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "match"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
    parameters {
      name: "count"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "zscan"
    fully_qualified_name: "redis.client.Redis.zscan"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "cursor"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
    parameters {
      name: "match"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
    parameters {
      name: "count"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
    parameters {
      name: "score_cast_func"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "zscan_iter"
    fully_qualified_name: "redis.client.Redis.zscan_iter"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "match"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
    parameters {
      name: "count"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
    parameters {
      name: "score_cast_func"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "sadd"
    fully_qualified_name: "redis.client.Redis.sadd"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "values"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        fully_qualified_name: "redis.client._Value"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "scard"
    fully_qualified_name: "redis.client.Redis.scard"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "sdiff"
    fully_qualified_name: "redis.client.Redis.sdiff"
    return_annotation {
      pretty_printed_name: "builtins.set[TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]]"
      args {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        fully_qualified_name: "redis.client._Value"
      }
      fully_qualified_name: "builtins.set"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "keys"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[TypeAlias[Union[builtins.str,builtins.bytes]],typing.Iterable[TypeAlias[Union[builtins.str,builtins.bytes]]]]"
        kind: UNION
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
          }
          fully_qualified_name: "redis.client._Key"
        }
        args {
          pretty_printed_name: "typing.Iterable[TypeAlias[Union[builtins.str,builtins.bytes]]]"
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.str,builtins.bytes]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
            }
            fully_qualified_name: "redis.client._Key"
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "sdiffstore"
    fully_qualified_name: "redis.client.Redis.sdiffstore"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "dest"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "keys"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[TypeAlias[Union[builtins.str,builtins.bytes]],typing.Iterable[TypeAlias[Union[builtins.str,builtins.bytes]]]]"
        kind: UNION
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
          }
          fully_qualified_name: "redis.client._Key"
        }
        args {
          pretty_printed_name: "typing.Iterable[TypeAlias[Union[builtins.str,builtins.bytes]]]"
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.str,builtins.bytes]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
            }
            fully_qualified_name: "redis.client._Key"
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "sinter"
    fully_qualified_name: "redis.client.Redis.sinter"
    return_annotation {
      pretty_printed_name: "builtins.set[TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]]"
      args {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        fully_qualified_name: "redis.client._Value"
      }
      fully_qualified_name: "builtins.set"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "keys"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[TypeAlias[Union[builtins.str,builtins.bytes]],typing.Iterable[TypeAlias[Union[builtins.str,builtins.bytes]]]]"
        kind: UNION
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
          }
          fully_qualified_name: "redis.client._Key"
        }
        args {
          pretty_printed_name: "typing.Iterable[TypeAlias[Union[builtins.str,builtins.bytes]]]"
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.str,builtins.bytes]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
            }
            fully_qualified_name: "redis.client._Key"
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "sinterstore"
    fully_qualified_name: "redis.client.Redis.sinterstore"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "dest"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "keys"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[TypeAlias[Union[builtins.str,builtins.bytes]],typing.Iterable[TypeAlias[Union[builtins.str,builtins.bytes]]]]"
        kind: UNION
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
          }
          fully_qualified_name: "redis.client._Key"
        }
        args {
          pretty_printed_name: "typing.Iterable[TypeAlias[Union[builtins.str,builtins.bytes]]]"
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.str,builtins.bytes]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
            }
            fully_qualified_name: "redis.client._Key"
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "sismember"
    fully_qualified_name: "redis.client.Redis.sismember"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        fully_qualified_name: "redis.client._Value"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "smembers"
    fully_qualified_name: "redis.client.Redis.smembers"
    return_annotation {
      pretty_printed_name: "builtins.set[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "builtins.set"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "smove"
    fully_qualified_name: "redis.client.Redis.smove"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "src"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "dst"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        fully_qualified_name: "redis.client._Value"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "srem"
    fully_qualified_name: "redis.client.Redis.srem"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "values"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        fully_qualified_name: "redis.client._Value"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "sunion"
    fully_qualified_name: "redis.client.Redis.sunion"
    return_annotation {
      pretty_printed_name: "builtins.set[TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]]"
      args {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        fully_qualified_name: "redis.client._Value"
      }
      fully_qualified_name: "builtins.set"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "keys"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[TypeAlias[Union[builtins.str,builtins.bytes]],typing.Iterable[TypeAlias[Union[builtins.str,builtins.bytes]]]]"
        kind: UNION
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
          }
          fully_qualified_name: "redis.client._Key"
        }
        args {
          pretty_printed_name: "typing.Iterable[TypeAlias[Union[builtins.str,builtins.bytes]]]"
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.str,builtins.bytes]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
            }
            fully_qualified_name: "redis.client._Key"
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "sunionstore"
    fully_qualified_name: "redis.client.Redis.sunionstore"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "dest"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "keys"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[TypeAlias[Union[builtins.str,builtins.bytes]],typing.Iterable[TypeAlias[Union[builtins.str,builtins.bytes]]]]"
        kind: UNION
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
          }
          fully_qualified_name: "redis.client._Key"
        }
        args {
          pretty_printed_name: "typing.Iterable[TypeAlias[Union[builtins.str,builtins.bytes]]]"
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.str,builtins.bytes]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
            }
            fully_qualified_name: "redis.client._Key"
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "xack"
    fully_qualified_name: "redis.client.Redis.xack"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "groupname"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "ids"
      kind: VAR_POSITIONAL
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "xadd"
    fully_qualified_name: "redis.client.Redis.xadd"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "fields"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "id"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
    parameters {
      name: "maxlen"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
    parameters {
      name: "approximate"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "xclaim"
    fully_qualified_name: "redis.client.Redis.xclaim"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "groupname"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "consumername"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "min_idle_time"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "message_ids"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "idle"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
    parameters {
      name: "time"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
    parameters {
      name: "retrycount"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
    parameters {
      name: "force"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
    parameters {
      name: "justid"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "xdel"
    fully_qualified_name: "redis.client.Redis.xdel"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "ids"
      kind: VAR_POSITIONAL
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "xgroup_create"
    fully_qualified_name: "redis.client.Redis.xgroup_create"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "groupname"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "id"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
    parameters {
      name: "mkstream"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "xgroup_delconsumer"
    fully_qualified_name: "redis.client.Redis.xgroup_delconsumer"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "groupname"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "consumername"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "xgroup_destroy"
    fully_qualified_name: "redis.client.Redis.xgroup_destroy"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "groupname"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "xgroup_setid"
    fully_qualified_name: "redis.client.Redis.xgroup_setid"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "groupname"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "id"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "xinfo_consumers"
    fully_qualified_name: "redis.client.Redis.xinfo_consumers"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "groupname"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "xinfo_groups"
    fully_qualified_name: "redis.client.Redis.xinfo_groups"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "xinfo_stream"
    fully_qualified_name: "redis.client.Redis.xinfo_stream"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "xlen"
    fully_qualified_name: "redis.client.Redis.xlen"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "xpending"
    fully_qualified_name: "redis.client.Redis.xpending"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "groupname"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "xpending_range"
    fully_qualified_name: "redis.client.Redis.xpending_range"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "groupname"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "min"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "max"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "count"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "consumername"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "xrange"
    fully_qualified_name: "redis.client.Redis.xrange"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "min"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
    parameters {
      name: "max"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
    parameters {
      name: "count"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "xread"
    fully_qualified_name: "redis.client.Redis.xread"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "streams"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "count"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
    parameters {
      name: "block"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "xreadgroup"
    fully_qualified_name: "redis.client.Redis.xreadgroup"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "groupname"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "consumername"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "streams"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "count"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
    parameters {
      name: "block"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
    parameters {
      name: "noack"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "xrevrange"
    fully_qualified_name: "redis.client.Redis.xrevrange"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "max"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
    parameters {
      name: "min"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
    parameters {
      name: "count"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "xtrim"
    fully_qualified_name: "redis.client.Redis.xtrim"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "maxlen"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "approximate"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "zadd"
    fully_qualified_name: "redis.client.Redis.zadd"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "mapping"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Mapping[TypeAlias[Union[builtins.str,builtins.bytes]],TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]]"
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
          }
          fully_qualified_name: "redis.client._Key"
        }
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "builtins.float"
              fully_qualified_name: "builtins.float"
            }
            args {
              pretty_printed_name: "builtins.int"
              fully_qualified_name: "builtins.int"
            }
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          fully_qualified_name: "redis.client._Value"
        }
        fully_qualified_name: "typing.Mapping"
      }
    }
    parameters {
      name: "nx"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    parameters {
      name: "xx"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    parameters {
      name: "ch"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    parameters {
      name: "incr"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "zcard"
    fully_qualified_name: "redis.client.Redis.zcard"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "zcount"
    fully_qualified_name: "redis.client.Redis.zcount"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "min"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        fully_qualified_name: "redis.client._Value"
      }
    }
    parameters {
      name: "max"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        fully_qualified_name: "redis.client._Value"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "zincrby"
    fully_qualified_name: "redis.client.Redis.zincrby"
    return_annotation {
      pretty_printed_name: "builtins.float"
      fully_qualified_name: "builtins.float"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "amount"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        fully_qualified_name: "redis.client._Value"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "zinterstore"
    fully_qualified_name: "redis.client.Redis.zinterstore"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "dest"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "keys"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[TypeAlias[Union[builtins.str,builtins.bytes]]]"
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
          }
          fully_qualified_name: "redis.client._Key"
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    parameters {
      name: "aggregate"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]"
        kind: UNION
        args {
          pretty_printed_name: "Literal[builtins.str]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        args {
          pretty_printed_name: "Literal[builtins.str]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        args {
          pretty_printed_name: "Literal[builtins.str]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "zlexcount"
    fully_qualified_name: "redis.client.Redis.zlexcount"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "min"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        fully_qualified_name: "redis.client._Value"
      }
    }
    parameters {
      name: "max"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        fully_qualified_name: "redis.client._Value"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "zpopmax"
    fully_qualified_name: "redis.client.Redis.zpopmax"
    return_annotation {
      pretty_printed_name: "builtins.list[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "count"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "zpopmin"
    fully_qualified_name: "redis.client.Redis.zpopmin"
    return_annotation {
      pretty_printed_name: "builtins.list[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "count"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "zrangebylex"
    fully_qualified_name: "redis.client.Redis.zrangebylex"
    return_annotation {
      pretty_printed_name: "builtins.list[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "min"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        fully_qualified_name: "redis.client._Value"
      }
    }
    parameters {
      name: "max"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        fully_qualified_name: "redis.client._Value"
      }
    }
    parameters {
      name: "start"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "num"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "zrank"
    fully_qualified_name: "redis.client.Redis.zrank"
    return_annotation {
      pretty_printed_name: "Union[builtins.int,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        fully_qualified_name: "redis.client._Value"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "zrem"
    fully_qualified_name: "redis.client.Redis.zrem"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "values"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        fully_qualified_name: "redis.client._Value"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "zremrangebylex"
    fully_qualified_name: "redis.client.Redis.zremrangebylex"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "min"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        fully_qualified_name: "redis.client._Value"
      }
    }
    parameters {
      name: "max"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        fully_qualified_name: "redis.client._Value"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "zremrangebyrank"
    fully_qualified_name: "redis.client.Redis.zremrangebyrank"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "min"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "max"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "zremrangebyscore"
    fully_qualified_name: "redis.client.Redis.zremrangebyscore"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "min"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        fully_qualified_name: "redis.client._Value"
      }
    }
    parameters {
      name: "max"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        fully_qualified_name: "redis.client._Value"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "zrevrangebylex"
    fully_qualified_name: "redis.client.Redis.zrevrangebylex"
    return_annotation {
      pretty_printed_name: "builtins.list[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "min"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        fully_qualified_name: "redis.client._Value"
      }
    }
    parameters {
      name: "max"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        fully_qualified_name: "redis.client._Value"
      }
    }
    parameters {
      name: "start"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "num"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "zrevrank"
    fully_qualified_name: "redis.client.Redis.zrevrank"
    return_annotation {
      pretty_printed_name: "Union[builtins.int,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        fully_qualified_name: "redis.client._Value"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "zscore"
    fully_qualified_name: "redis.client.Redis.zscore"
    return_annotation {
      pretty_printed_name: "Union[builtins.float,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        fully_qualified_name: "redis.client._Value"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "zunionstore"
    fully_qualified_name: "redis.client.Redis.zunionstore"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "dest"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "keys"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[TypeAlias[Union[builtins.str,builtins.bytes]]]"
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
          }
          fully_qualified_name: "redis.client._Key"
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    parameters {
      name: "aggregate"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]"
        kind: UNION
        args {
          pretty_printed_name: "Literal[builtins.str]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        args {
          pretty_printed_name: "Literal[builtins.str]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        args {
          pretty_printed_name: "Literal[builtins.str]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "pfadd"
    fully_qualified_name: "redis.client.Redis.pfadd"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "values"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        fully_qualified_name: "redis.client._Value"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "pfcount"
    fully_qualified_name: "redis.client.Redis.pfcount"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "pfmerge"
    fully_qualified_name: "redis.client.Redis.pfmerge"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "dest"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "sources"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "hdel"
    fully_qualified_name: "redis.client.Redis.hdel"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "keys"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "hexists"
    fully_qualified_name: "redis.client.Redis.hexists"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "hget"
    fully_qualified_name: "redis.client.Redis.hget"
    return_annotation {
      pretty_printed_name: "Union[redis.client._StrType,None]"
      kind: UNION
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "hgetall"
    fully_qualified_name: "redis.client.Redis.hgetall"
    return_annotation {
      pretty_printed_name: "builtins.dict[redis.client._StrType,redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "builtins.dict"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "hincrby"
    fully_qualified_name: "redis.client.Redis.hincrby"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "amount"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "hincrbyfloat"
    fully_qualified_name: "redis.client.Redis.hincrbyfloat"
    return_annotation {
      pretty_printed_name: "builtins.float"
      fully_qualified_name: "builtins.float"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "amount"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "hkeys"
    fully_qualified_name: "redis.client.Redis.hkeys"
    return_annotation {
      pretty_printed_name: "builtins.list[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "hlen"
    fully_qualified_name: "redis.client.Redis.hlen"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "hsetnx"
    fully_qualified_name: "redis.client.Redis.hsetnx"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        fully_qualified_name: "redis.client._Value"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "hmset"
    fully_qualified_name: "redis.client.Redis.hmset"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "mapping"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Mapping[TypeAlias[Union[builtins.str,builtins.bytes]],TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]]"
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
          }
          fully_qualified_name: "redis.client._Key"
        }
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "builtins.float"
              fully_qualified_name: "builtins.float"
            }
            args {
              pretty_printed_name: "builtins.int"
              fully_qualified_name: "builtins.int"
            }
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          fully_qualified_name: "redis.client._Value"
        }
        fully_qualified_name: "typing.Mapping"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "hmget"
    fully_qualified_name: "redis.client.Redis.hmget"
    return_annotation {
      pretty_printed_name: "builtins.list[Union[redis.client._StrType,None]]"
      args {
        pretty_printed_name: "Union[redis.client._StrType,None]"
        kind: UNION
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "keys"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[TypeAlias[Union[builtins.str,builtins.bytes]],typing.Iterable[TypeAlias[Union[builtins.str,builtins.bytes]]]]"
        kind: UNION
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
          }
          fully_qualified_name: "redis.client._Key"
        }
        args {
          pretty_printed_name: "typing.Iterable[TypeAlias[Union[builtins.str,builtins.bytes]]]"
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.str,builtins.bytes]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
            }
            fully_qualified_name: "redis.client._Key"
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "hvals"
    fully_qualified_name: "redis.client.Redis.hvals"
    return_annotation {
      pretty_printed_name: "builtins.list[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "publish"
    fully_qualified_name: "redis.client.Redis.publish"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "channel"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "message"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "eval"
    fully_qualified_name: "redis.client.Redis.eval"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "script"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "numkeys"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "keys_and_args"
      kind: VAR_POSITIONAL
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "evalsha"
    fully_qualified_name: "redis.client.Redis.evalsha"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "sha"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "numkeys"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "keys_and_args"
      kind: VAR_POSITIONAL
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "script_exists"
    fully_qualified_name: "redis.client.Redis.script_exists"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "script_flush"
    fully_qualified_name: "redis.client.Redis.script_flush"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "script_kill"
    fully_qualified_name: "redis.client.Redis.script_kill"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "script_load"
    fully_qualified_name: "redis.client.Redis.script_load"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "script"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "register_script"
    fully_qualified_name: "redis.client.Redis.register_script"
    return_annotation {
      pretty_printed_name: "redis.client.Script"
      fully_qualified_name: "redis.client.Script"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "script"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,redis.client._StrType]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "pubsub_channels"
    fully_qualified_name: "redis.client.Redis.pubsub_channels"
    return_annotation {
      pretty_printed_name: "builtins.list[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "pattern"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "pubsub_numsub"
    fully_qualified_name: "redis.client.Redis.pubsub_numsub"
    return_annotation {
      pretty_printed_name: "builtins.list[Tuple[builtins.str,builtins.int]]"
      args {
        pretty_printed_name: "Tuple[builtins.str,builtins.int]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "pubsub_numpat"
    fully_qualified_name: "redis.client.Redis.pubsub_numpat"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "monitor"
    fully_qualified_name: "redis.client.Redis.monitor"
    return_annotation {
      pretty_printed_name: "redis.client.Monitor"
      fully_qualified_name: "redis.client.Monitor"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "cluster"
    fully_qualified_name: "redis.client.Redis.cluster"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    parameters {
      name: "cluster_arg"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__enter__"
    fully_qualified_name: "redis.client.Redis.__enter__"
    return_annotation {
      pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Redis"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__exit__"
    fully_qualified_name: "redis.client.Redis.__exit__"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "exc_type"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "exc_value"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "traceback"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__del__"
    fully_qualified_name: "redis.client.Redis.__del__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "close"
    fully_qualified_name: "redis.client.Redis.close"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "client"
    fully_qualified_name: "redis.client.Redis.client"
    return_annotation {
      pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Redis"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Redis"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "from_url"
    fullname: "redis.client.Redis.from_url"
    definitions {
      name: "from_url"
      fully_qualified_name: "redis.client.Redis.from_url"
      return_annotation {
        pretty_printed_name: "redis.client.Redis[builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "redis.client.Redis"
      }
      parameters {
        name: "cls"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Type[redis.client.Redis[redis.client._StrType]]"
          kind: TYPE
          args {
            pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
            args {
              pretty_printed_name: "redis.client._StrType"
              kind: TYPE_VAR
            }
            fully_qualified_name: "redis.client.Redis"
          }
        }
      }
      parameters {
        name: "url"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      parameters {
        name: "host"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      parameters {
        name: "port"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.int,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      parameters {
        name: "db"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.int,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      parameters {
        name: "password"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      parameters {
        name: "socket_timeout"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.float,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      parameters {
        name: "socket_connect_timeout"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.float,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      parameters {
        name: "socket_keepalive"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.bool,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bool"
            fully_qualified_name: "builtins.bool"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      parameters {
        name: "socket_keepalive_options"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[typing.Mapping[builtins.str,Union[builtins.int,builtins.str]],None]"
          kind: UNION
          args {
            pretty_printed_name: "typing.Mapping[builtins.str,Union[builtins.int,builtins.str]]"
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "Union[builtins.int,builtins.str]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.int"
                fully_qualified_name: "builtins.int"
              }
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
            }
            fully_qualified_name: "typing.Mapping"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      parameters {
        name: "connection_pool"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[redis.connection.ConnectionPool,None]"
          kind: UNION
          args {
            pretty_printed_name: "redis.connection.ConnectionPool"
            fully_qualified_name: "redis.connection.ConnectionPool"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      parameters {
        name: "unix_socket_path"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      parameters {
        name: "encoding"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      parameters {
        name: "encoding_errors"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      parameters {
        name: "charset"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      parameters {
        name: "errors"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      parameters {
        name: "decode_responses"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Literal[builtins.bool]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.bool"
            fully_qualified_name: "builtins.bool"
          }
        }
      }
      parameters {
        name: "retry_on_timeout"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        has_default: true
      }
      parameters {
        name: "ssl"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        has_default: true
      }
      parameters {
        name: "ssl_keyfile"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "ssl_certfile"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "ssl_cert_reqs"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,builtins.int,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "ssl_ca_certs"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "ssl_check_hostname"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        has_default: true
      }
      parameters {
        name: "max_connections"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.int,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "single_connection_client"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        has_default: true
      }
      parameters {
        name: "health_check_interval"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        has_default: true
      }
      parameters {
        name: "client_name"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "username"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      resolved_decorator_names: "classmethod"
      is_overload: true
      is_class_method: true
    }
    definitions {
      name: "from_url"
      fully_qualified_name: "redis.client.Redis.from_url"
      return_annotation {
        pretty_printed_name: "redis.client.Redis[builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "redis.client.Redis"
      }
      parameters {
        name: "cls"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Type[redis.client.Redis[redis.client._StrType]]"
          kind: TYPE
          args {
            pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
            args {
              pretty_printed_name: "redis.client._StrType"
              kind: TYPE_VAR
            }
            fully_qualified_name: "redis.client.Redis"
          }
        }
      }
      parameters {
        name: "url"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      parameters {
        name: "host"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "port"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.int,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "db"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.int,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "password"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "socket_timeout"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.float,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "socket_connect_timeout"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.float,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "socket_keepalive"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.bool,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bool"
            fully_qualified_name: "builtins.bool"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "socket_keepalive_options"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[typing.Mapping[builtins.str,Union[builtins.int,builtins.str]],None]"
          kind: UNION
          args {
            pretty_printed_name: "typing.Mapping[builtins.str,Union[builtins.int,builtins.str]]"
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "Union[builtins.int,builtins.str]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.int"
                fully_qualified_name: "builtins.int"
              }
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
            }
            fully_qualified_name: "typing.Mapping"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "connection_pool"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[redis.connection.ConnectionPool,None]"
          kind: UNION
          args {
            pretty_printed_name: "redis.connection.ConnectionPool"
            fully_qualified_name: "redis.connection.ConnectionPool"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "unix_socket_path"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "encoding"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        has_default: true
      }
      parameters {
        name: "encoding_errors"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        has_default: true
      }
      parameters {
        name: "charset"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "errors"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "decode_responses"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "Literal[builtins.bool]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.bool"
            fully_qualified_name: "builtins.bool"
          }
        }
      }
      parameters {
        name: "retry_on_timeout"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        has_default: true
      }
      parameters {
        name: "ssl"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        has_default: true
      }
      parameters {
        name: "ssl_keyfile"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "ssl_certfile"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "ssl_cert_reqs"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "Union[builtins.str,builtins.int,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "ssl_ca_certs"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "ssl_check_hostname"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        has_default: true
      }
      parameters {
        name: "max_connections"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "Union[builtins.int,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "single_connection_client"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        has_default: true
      }
      parameters {
        name: "health_check_interval"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        has_default: true
      }
      parameters {
        name: "client_name"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "username"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      resolved_decorator_names: "classmethod"
      is_overload: true
      is_class_method: true
    }
    definitions {
      name: "from_url"
      fully_qualified_name: "redis.client.Redis.from_url"
      return_annotation {
        pretty_printed_name: "redis.client.Redis[builtins.bytes]"
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        fully_qualified_name: "redis.client.Redis"
      }
      parameters {
        name: "cls"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Type[redis.client.Redis[redis.client._StrType]]"
          kind: TYPE
          args {
            pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
            args {
              pretty_printed_name: "redis.client._StrType"
              kind: TYPE_VAR
            }
            fully_qualified_name: "redis.client.Redis"
          }
        }
      }
      parameters {
        name: "url"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      parameters {
        name: "host"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "port"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.int,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "db"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.int,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "password"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "socket_timeout"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.float,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "socket_connect_timeout"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.float,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "socket_keepalive"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.bool,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bool"
            fully_qualified_name: "builtins.bool"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "socket_keepalive_options"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[typing.Mapping[builtins.str,Union[builtins.int,builtins.str]],None]"
          kind: UNION
          args {
            pretty_printed_name: "typing.Mapping[builtins.str,Union[builtins.int,builtins.str]]"
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "Union[builtins.int,builtins.str]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.int"
                fully_qualified_name: "builtins.int"
              }
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
            }
            fully_qualified_name: "typing.Mapping"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "connection_pool"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[redis.connection.ConnectionPool,None]"
          kind: UNION
          args {
            pretty_printed_name: "redis.connection.ConnectionPool"
            fully_qualified_name: "redis.connection.ConnectionPool"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "unix_socket_path"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "encoding"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        has_default: true
      }
      parameters {
        name: "encoding_errors"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        has_default: true
      }
      parameters {
        name: "charset"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "decode_responses"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Literal[builtins.bool]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.bool"
            fully_qualified_name: "builtins.bool"
          }
        }
        has_default: true
      }
      parameters {
        name: "errors"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "retry_on_timeout"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        has_default: true
      }
      parameters {
        name: "ssl"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        has_default: true
      }
      parameters {
        name: "ssl_keyfile"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "ssl_certfile"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "ssl_cert_reqs"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,builtins.int,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "ssl_ca_certs"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "ssl_check_hostname"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        has_default: true
      }
      parameters {
        name: "max_connections"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.int,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "single_connection_client"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        has_default: true
      }
      parameters {
        name: "health_check_interval"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        has_default: true
      }
      parameters {
        name: "client_name"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "username"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      resolved_decorator_names: "classmethod"
      is_overload: true
      is_class_method: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "__new__"
    fullname: "redis.client.Redis.__new__"
    definitions {
      name: "__new__"
      fully_qualified_name: "redis.client.Redis.__new__"
      return_annotation {
        pretty_printed_name: "redis.client.Redis[builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "redis.client.Redis"
      }
      parameters {
        name: "cls"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Type[redis.client.Redis[redis.client._StrType]]"
          kind: TYPE
          args {
            pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
            args {
              pretty_printed_name: "redis.client._StrType"
              kind: TYPE_VAR
            }
            fully_qualified_name: "redis.client.Redis"
          }
        }
      }
      parameters {
        name: "host"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      parameters {
        name: "port"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
      parameters {
        name: "db"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
      parameters {
        name: "password"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      parameters {
        name: "socket_timeout"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.float,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      parameters {
        name: "socket_connect_timeout"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.float,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      parameters {
        name: "socket_keepalive"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.bool,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bool"
            fully_qualified_name: "builtins.bool"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      parameters {
        name: "socket_keepalive_options"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[typing.Mapping[builtins.str,Union[builtins.int,builtins.str]],None]"
          kind: UNION
          args {
            pretty_printed_name: "typing.Mapping[builtins.str,Union[builtins.int,builtins.str]]"
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "Union[builtins.int,builtins.str]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.int"
                fully_qualified_name: "builtins.int"
              }
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
            }
            fully_qualified_name: "typing.Mapping"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      parameters {
        name: "connection_pool"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[redis.connection.ConnectionPool,None]"
          kind: UNION
          args {
            pretty_printed_name: "redis.connection.ConnectionPool"
            fully_qualified_name: "redis.connection.ConnectionPool"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      parameters {
        name: "unix_socket_path"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      parameters {
        name: "encoding"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      parameters {
        name: "encoding_errors"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      parameters {
        name: "charset"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      parameters {
        name: "decode_responses"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Literal[builtins.bool]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.bool"
            fully_qualified_name: "builtins.bool"
          }
        }
      }
      parameters {
        name: "errors"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "retry_on_timeout"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        has_default: true
      }
      parameters {
        name: "ssl"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        has_default: true
      }
      parameters {
        name: "ssl_keyfile"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "ssl_certfile"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "ssl_cert_reqs"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,builtins.int,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "ssl_ca_certs"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "ssl_check_hostname"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        has_default: true
      }
      parameters {
        name: "max_connections"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.int,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "single_connection_client"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        has_default: true
      }
      parameters {
        name: "health_check_interval"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        has_default: true
      }
      parameters {
        name: "client_name"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "username"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__new__"
      fully_qualified_name: "redis.client.Redis.__new__"
      return_annotation {
        pretty_printed_name: "redis.client.Redis[builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "redis.client.Redis"
      }
      parameters {
        name: "cls"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Type[redis.client.Redis[redis.client._StrType]]"
          kind: TYPE
          args {
            pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
            args {
              pretty_printed_name: "redis.client._StrType"
              kind: TYPE_VAR
            }
            fully_qualified_name: "redis.client.Redis"
          }
        }
      }
      parameters {
        name: "host"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        has_default: true
      }
      parameters {
        name: "port"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        has_default: true
      }
      parameters {
        name: "db"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        has_default: true
      }
      parameters {
        name: "password"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "socket_timeout"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.float,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "socket_connect_timeout"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.float,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "socket_keepalive"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.bool,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bool"
            fully_qualified_name: "builtins.bool"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "socket_keepalive_options"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[typing.Mapping[builtins.str,Union[builtins.int,builtins.str]],None]"
          kind: UNION
          args {
            pretty_printed_name: "typing.Mapping[builtins.str,Union[builtins.int,builtins.str]]"
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "Union[builtins.int,builtins.str]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.int"
                fully_qualified_name: "builtins.int"
              }
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
            }
            fully_qualified_name: "typing.Mapping"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "connection_pool"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[redis.connection.ConnectionPool,None]"
          kind: UNION
          args {
            pretty_printed_name: "redis.connection.ConnectionPool"
            fully_qualified_name: "redis.connection.ConnectionPool"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "unix_socket_path"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "encoding"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        has_default: true
      }
      parameters {
        name: "encoding_errors"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        has_default: true
      }
      parameters {
        name: "charset"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "decode_responses"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "Literal[builtins.bool]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.bool"
            fully_qualified_name: "builtins.bool"
          }
        }
      }
      parameters {
        name: "errors"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "retry_on_timeout"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        has_default: true
      }
      parameters {
        name: "ssl"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        has_default: true
      }
      parameters {
        name: "ssl_keyfile"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "ssl_certfile"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "ssl_cert_reqs"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "Union[builtins.str,builtins.int,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "ssl_ca_certs"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "ssl_check_hostname"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        has_default: true
      }
      parameters {
        name: "max_connections"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "Union[builtins.int,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "single_connection_client"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        has_default: true
      }
      parameters {
        name: "health_check_interval"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        has_default: true
      }
      parameters {
        name: "client_name"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "username"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__new__"
      fully_qualified_name: "redis.client.Redis.__new__"
      return_annotation {
        pretty_printed_name: "redis.client.Redis[builtins.bytes]"
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        fully_qualified_name: "redis.client.Redis"
      }
      parameters {
        name: "cls"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Type[redis.client.Redis[redis.client._StrType]]"
          kind: TYPE
          args {
            pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
            args {
              pretty_printed_name: "redis.client._StrType"
              kind: TYPE_VAR
            }
            fully_qualified_name: "redis.client.Redis"
          }
        }
      }
      parameters {
        name: "host"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        has_default: true
      }
      parameters {
        name: "port"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        has_default: true
      }
      parameters {
        name: "db"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        has_default: true
      }
      parameters {
        name: "password"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "socket_timeout"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.float,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "socket_connect_timeout"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.float,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "socket_keepalive"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.bool,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bool"
            fully_qualified_name: "builtins.bool"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "socket_keepalive_options"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[typing.Mapping[builtins.str,Union[builtins.int,builtins.str]],None]"
          kind: UNION
          args {
            pretty_printed_name: "typing.Mapping[builtins.str,Union[builtins.int,builtins.str]]"
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "Union[builtins.int,builtins.str]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.int"
                fully_qualified_name: "builtins.int"
              }
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
            }
            fully_qualified_name: "typing.Mapping"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "connection_pool"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[redis.connection.ConnectionPool,None]"
          kind: UNION
          args {
            pretty_printed_name: "redis.connection.ConnectionPool"
            fully_qualified_name: "redis.connection.ConnectionPool"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "unix_socket_path"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "encoding"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        has_default: true
      }
      parameters {
        name: "encoding_errors"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        has_default: true
      }
      parameters {
        name: "charset"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "errors"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "decode_responses"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Literal[builtins.bool]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.bool"
            fully_qualified_name: "builtins.bool"
          }
        }
        has_default: true
      }
      parameters {
        name: "retry_on_timeout"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        has_default: true
      }
      parameters {
        name: "ssl"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        has_default: true
      }
      parameters {
        name: "ssl_keyfile"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "ssl_certfile"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "ssl_cert_reqs"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,builtins.int,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "ssl_ca_certs"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "ssl_check_hostname"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        has_default: true
      }
      parameters {
        name: "max_connections"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.int,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "single_connection_client"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        has_default: true
      }
      parameters {
        name: "health_check_interval"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        has_default: true
      }
      parameters {
        name: "client_name"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "username"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "__init__"
    fullname: "redis.client.Redis.__init__"
    definitions {
      name: "__init__"
      fully_qualified_name: "redis.client.Redis.__init__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "redis.client.Redis[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "redis.client.Redis"
        }
      }
      parameters {
        name: "host"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      parameters {
        name: "port"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
      parameters {
        name: "db"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
      parameters {
        name: "password"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      parameters {
        name: "socket_timeout"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.float,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      parameters {
        name: "socket_connect_timeout"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.float,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      parameters {
        name: "socket_keepalive"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.bool,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bool"
            fully_qualified_name: "builtins.bool"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      parameters {
        name: "socket_keepalive_options"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[typing.Mapping[builtins.str,Union[builtins.int,builtins.str]],None]"
          kind: UNION
          args {
            pretty_printed_name: "typing.Mapping[builtins.str,Union[builtins.int,builtins.str]]"
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "Union[builtins.int,builtins.str]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.int"
                fully_qualified_name: "builtins.int"
              }
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
            }
            fully_qualified_name: "typing.Mapping"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      parameters {
        name: "connection_pool"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[redis.connection.ConnectionPool,None]"
          kind: UNION
          args {
            pretty_printed_name: "redis.connection.ConnectionPool"
            fully_qualified_name: "redis.connection.ConnectionPool"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      parameters {
        name: "unix_socket_path"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      parameters {
        name: "encoding"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      parameters {
        name: "encoding_errors"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      parameters {
        name: "charset"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      parameters {
        name: "errors"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      parameters {
        name: "decode_responses"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Literal[builtins.bool]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.bool"
            fully_qualified_name: "builtins.bool"
          }
        }
      }
      parameters {
        name: "retry_on_timeout"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        has_default: true
      }
      parameters {
        name: "ssl"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        has_default: true
      }
      parameters {
        name: "ssl_keyfile"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "ssl_certfile"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "ssl_cert_reqs"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,builtins.int,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "ssl_ca_certs"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "ssl_check_hostname"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        has_default: true
      }
      parameters {
        name: "max_connections"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.int,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "single_connection_client"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        has_default: true
      }
      parameters {
        name: "health_check_interval"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        has_default: true
      }
      parameters {
        name: "client_name"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "username"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__init__"
      fully_qualified_name: "redis.client.Redis.__init__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "redis.client.Redis[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "redis.client.Redis"
        }
      }
      parameters {
        name: "host"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        has_default: true
      }
      parameters {
        name: "port"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        has_default: true
      }
      parameters {
        name: "db"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        has_default: true
      }
      parameters {
        name: "password"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "socket_timeout"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.float,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "socket_connect_timeout"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.float,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "socket_keepalive"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.bool,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bool"
            fully_qualified_name: "builtins.bool"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "socket_keepalive_options"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[typing.Mapping[builtins.str,Union[builtins.int,builtins.str]],None]"
          kind: UNION
          args {
            pretty_printed_name: "typing.Mapping[builtins.str,Union[builtins.int,builtins.str]]"
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "Union[builtins.int,builtins.str]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.int"
                fully_qualified_name: "builtins.int"
              }
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
            }
            fully_qualified_name: "typing.Mapping"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "connection_pool"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[redis.connection.ConnectionPool,None]"
          kind: UNION
          args {
            pretty_printed_name: "redis.connection.ConnectionPool"
            fully_qualified_name: "redis.connection.ConnectionPool"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "unix_socket_path"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "encoding"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        has_default: true
      }
      parameters {
        name: "encoding_errors"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        has_default: true
      }
      parameters {
        name: "charset"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "errors"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "decode_responses"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "Literal[builtins.bool]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.bool"
            fully_qualified_name: "builtins.bool"
          }
        }
      }
      parameters {
        name: "retry_on_timeout"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        has_default: true
      }
      parameters {
        name: "ssl"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        has_default: true
      }
      parameters {
        name: "ssl_keyfile"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "ssl_certfile"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "ssl_cert_reqs"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "Union[builtins.str,builtins.int,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "ssl_ca_certs"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "ssl_check_hostname"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        has_default: true
      }
      parameters {
        name: "max_connections"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "Union[builtins.int,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "single_connection_client"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        has_default: true
      }
      parameters {
        name: "health_check_interval"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        has_default: true
      }
      parameters {
        name: "client_name"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "username"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__init__"
      fully_qualified_name: "redis.client.Redis.__init__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "redis.client.Redis[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "redis.client.Redis"
        }
      }
      parameters {
        name: "host"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        has_default: true
      }
      parameters {
        name: "port"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        has_default: true
      }
      parameters {
        name: "db"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        has_default: true
      }
      parameters {
        name: "password"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "socket_timeout"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.float,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "socket_connect_timeout"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.float,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "socket_keepalive"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.bool,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bool"
            fully_qualified_name: "builtins.bool"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "socket_keepalive_options"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[typing.Mapping[builtins.str,Union[builtins.int,builtins.str]],None]"
          kind: UNION
          args {
            pretty_printed_name: "typing.Mapping[builtins.str,Union[builtins.int,builtins.str]]"
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "Union[builtins.int,builtins.str]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.int"
                fully_qualified_name: "builtins.int"
              }
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
            }
            fully_qualified_name: "typing.Mapping"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "connection_pool"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[redis.connection.ConnectionPool,None]"
          kind: UNION
          args {
            pretty_printed_name: "redis.connection.ConnectionPool"
            fully_qualified_name: "redis.connection.ConnectionPool"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "unix_socket_path"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "encoding"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        has_default: true
      }
      parameters {
        name: "encoding_errors"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        has_default: true
      }
      parameters {
        name: "charset"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "errors"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "decode_responses"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Literal[builtins.bool]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.bool"
            fully_qualified_name: "builtins.bool"
          }
        }
        has_default: true
      }
      parameters {
        name: "retry_on_timeout"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        has_default: true
      }
      parameters {
        name: "ssl"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        has_default: true
      }
      parameters {
        name: "ssl_keyfile"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "ssl_certfile"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "ssl_cert_reqs"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,builtins.int,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "ssl_ca_certs"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "ssl_check_hostname"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        has_default: true
      }
      parameters {
        name: "max_connections"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.int,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "single_connection_client"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        has_default: true
      }
      parameters {
        name: "health_check_interval"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        has_default: true
      }
      parameters {
        name: "client_name"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "username"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "lock"
    fullname: "redis.client.Redis.lock"
    definitions {
      name: "lock"
      fully_qualified_name: "redis.client.Redis.lock"
      return_annotation {
        pretty_printed_name: "redis.lock.Lock"
        fully_qualified_name: "redis.lock.Lock"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
          args {
            pretty_printed_name: "redis.client._StrType"
            kind: TYPE_VAR
          }
          fully_qualified_name: "redis.client.Redis"
        }
      }
      parameters {
        name: "name"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
          }
          fully_qualified_name: "redis.client._Key"
        }
      }
      parameters {
        name: "timeout"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.float,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "sleep"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        has_default: true
      }
      parameters {
        name: "blocking_timeout"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.float,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "lock_class"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "None"
          kind: NONE
        }
        has_default: true
      }
      parameters {
        name: "thread_local"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "lock"
      fully_qualified_name: "redis.client.Redis.lock"
      return_annotation {
        pretty_printed_name: "redis.client._LockType"
        kind: TYPE_VAR
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
          args {
            pretty_printed_name: "redis.client._StrType"
            kind: TYPE_VAR
          }
          fully_qualified_name: "redis.client.Redis"
        }
      }
      parameters {
        name: "name"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
          }
          fully_qualified_name: "redis.client._Key"
        }
      }
      parameters {
        name: "timeout"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.float,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      parameters {
        name: "sleep"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
      }
      parameters {
        name: "blocking_timeout"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.float,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      parameters {
        name: "lock_class"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Type[redis.client._LockType]"
          kind: TYPE
          args {
            pretty_printed_name: "redis.client._LockType"
            kind: TYPE_VAR
          }
        }
      }
      parameters {
        name: "thread_local"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "lock"
      fully_qualified_name: "redis.client.Redis.lock"
      return_annotation {
        pretty_printed_name: "redis.client._LockType"
        kind: TYPE_VAR
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
          args {
            pretty_printed_name: "redis.client._StrType"
            kind: TYPE_VAR
          }
          fully_qualified_name: "redis.client.Redis"
        }
      }
      parameters {
        name: "name"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
          }
          fully_qualified_name: "redis.client._Key"
        }
      }
      parameters {
        name: "timeout"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.float,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "sleep"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        has_default: true
      }
      parameters {
        name: "blocking_timeout"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.float,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "lock_class"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "Type[redis.client._LockType]"
          kind: TYPE
          args {
            pretty_printed_name: "redis.client._LockType"
            kind: TYPE_VAR
          }
        }
      }
      parameters {
        name: "thread_local"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "blpop"
    fullname: "redis.client.Redis.blpop"
    definitions {
      name: "blpop"
      fully_qualified_name: "redis.client.Redis.blpop"
      return_annotation {
        pretty_printed_name: "Tuple[redis.client._StrType,redis.client._StrType]"
        kind: TUPLE
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
          args {
            pretty_printed_name: "redis.client._StrType"
            kind: TYPE_VAR
          }
          fully_qualified_name: "redis.client.Redis"
        }
      }
      parameters {
        name: "keys"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]],typing.Iterable[TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]]]"
          kind: UNION
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              args {
                pretty_printed_name: "builtins.float"
                fully_qualified_name: "builtins.float"
              }
              args {
                pretty_printed_name: "builtins.int"
                fully_qualified_name: "builtins.int"
              }
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
            }
            fully_qualified_name: "redis.client._Value"
          }
          args {
            pretty_printed_name: "typing.Iterable[TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]]"
            args {
              pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
              kind: TYPE_ALIAS
              args {
                pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
                kind: UNION
                args {
                  pretty_printed_name: "builtins.bytes"
                  fully_qualified_name: "builtins.bytes"
                }
                args {
                  pretty_printed_name: "builtins.float"
                  fully_qualified_name: "builtins.float"
                }
                args {
                  pretty_printed_name: "builtins.int"
                  fully_qualified_name: "builtins.int"
                }
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              fully_qualified_name: "redis.client._Value"
            }
            fully_qualified_name: "typing.Iterable"
          }
        }
      }
      parameters {
        name: "timeout"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Literal[builtins.int]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "blpop"
      fully_qualified_name: "redis.client.Redis.blpop"
      return_annotation {
        pretty_printed_name: "Union[Tuple[redis.client._StrType,redis.client._StrType],None]"
        kind: UNION
        args {
          pretty_printed_name: "Tuple[redis.client._StrType,redis.client._StrType]"
          kind: TUPLE
          args {
            pretty_printed_name: "redis.client._StrType"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "redis.client._StrType"
            kind: TYPE_VAR
          }
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
          args {
            pretty_printed_name: "redis.client._StrType"
            kind: TYPE_VAR
          }
          fully_qualified_name: "redis.client.Redis"
        }
      }
      parameters {
        name: "keys"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]],typing.Iterable[TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]]]"
          kind: UNION
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              args {
                pretty_printed_name: "builtins.float"
                fully_qualified_name: "builtins.float"
              }
              args {
                pretty_printed_name: "builtins.int"
                fully_qualified_name: "builtins.int"
              }
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
            }
            fully_qualified_name: "redis.client._Value"
          }
          args {
            pretty_printed_name: "typing.Iterable[TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]]"
            args {
              pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
              kind: TYPE_ALIAS
              args {
                pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
                kind: UNION
                args {
                  pretty_printed_name: "builtins.bytes"
                  fully_qualified_name: "builtins.bytes"
                }
                args {
                  pretty_printed_name: "builtins.float"
                  fully_qualified_name: "builtins.float"
                }
                args {
                  pretty_printed_name: "builtins.int"
                  fully_qualified_name: "builtins.int"
                }
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              fully_qualified_name: "redis.client._Value"
            }
            fully_qualified_name: "typing.Iterable"
          }
        }
      }
      parameters {
        name: "timeout"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "brpop"
    fullname: "redis.client.Redis.brpop"
    definitions {
      name: "brpop"
      fully_qualified_name: "redis.client.Redis.brpop"
      return_annotation {
        pretty_printed_name: "Tuple[redis.client._StrType,redis.client._StrType]"
        kind: TUPLE
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
          args {
            pretty_printed_name: "redis.client._StrType"
            kind: TYPE_VAR
          }
          fully_qualified_name: "redis.client.Redis"
        }
      }
      parameters {
        name: "keys"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]],typing.Iterable[TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]]]"
          kind: UNION
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              args {
                pretty_printed_name: "builtins.float"
                fully_qualified_name: "builtins.float"
              }
              args {
                pretty_printed_name: "builtins.int"
                fully_qualified_name: "builtins.int"
              }
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
            }
            fully_qualified_name: "redis.client._Value"
          }
          args {
            pretty_printed_name: "typing.Iterable[TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]]"
            args {
              pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
              kind: TYPE_ALIAS
              args {
                pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
                kind: UNION
                args {
                  pretty_printed_name: "builtins.bytes"
                  fully_qualified_name: "builtins.bytes"
                }
                args {
                  pretty_printed_name: "builtins.float"
                  fully_qualified_name: "builtins.float"
                }
                args {
                  pretty_printed_name: "builtins.int"
                  fully_qualified_name: "builtins.int"
                }
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              fully_qualified_name: "redis.client._Value"
            }
            fully_qualified_name: "typing.Iterable"
          }
        }
      }
      parameters {
        name: "timeout"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Literal[builtins.int]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "brpop"
      fully_qualified_name: "redis.client.Redis.brpop"
      return_annotation {
        pretty_printed_name: "Union[Tuple[redis.client._StrType,redis.client._StrType],None]"
        kind: UNION
        args {
          pretty_printed_name: "Tuple[redis.client._StrType,redis.client._StrType]"
          kind: TUPLE
          args {
            pretty_printed_name: "redis.client._StrType"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "redis.client._StrType"
            kind: TYPE_VAR
          }
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
          args {
            pretty_printed_name: "redis.client._StrType"
            kind: TYPE_VAR
          }
          fully_qualified_name: "redis.client.Redis"
        }
      }
      parameters {
        name: "keys"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]],typing.Iterable[TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]]]"
          kind: UNION
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              args {
                pretty_printed_name: "builtins.float"
                fully_qualified_name: "builtins.float"
              }
              args {
                pretty_printed_name: "builtins.int"
                fully_qualified_name: "builtins.int"
              }
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
            }
            fully_qualified_name: "redis.client._Value"
          }
          args {
            pretty_printed_name: "typing.Iterable[TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]]"
            args {
              pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
              kind: TYPE_ALIAS
              args {
                pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
                kind: UNION
                args {
                  pretty_printed_name: "builtins.bytes"
                  fully_qualified_name: "builtins.bytes"
                }
                args {
                  pretty_printed_name: "builtins.float"
                  fully_qualified_name: "builtins.float"
                }
                args {
                  pretty_printed_name: "builtins.int"
                  fully_qualified_name: "builtins.int"
                }
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              fully_qualified_name: "redis.client._Value"
            }
            fully_qualified_name: "typing.Iterable"
          }
        }
      }
      parameters {
        name: "timeout"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "sort"
    fullname: "redis.client.Redis.sort"
    definitions {
      name: "sort"
      fully_qualified_name: "redis.client.Redis.sort"
      return_annotation {
        pretty_printed_name: "builtins.list[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.list"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
          args {
            pretty_printed_name: "redis.client._StrType"
            kind: TYPE_VAR
          }
          fully_qualified_name: "redis.client.Redis"
        }
      }
      parameters {
        name: "name"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
          }
          fully_qualified_name: "redis.client._Key"
        }
      }
      parameters {
        name: "start"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.int,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "num"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.int,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "by"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,builtins.bytes,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "get"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,builtins.bytes,typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes]]],None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes]]]"
            args {
              pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
              kind: TYPE_ALIAS
              args {
                pretty_printed_name: "Union[builtins.str,builtins.bytes]"
                kind: UNION
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
                args {
                  pretty_printed_name: "builtins.bytes"
                  fully_qualified_name: "builtins.bytes"
                }
              }
              fully_qualified_name: "redis.client._Key"
            }
            fully_qualified_name: "typing.Sequence"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "desc"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        has_default: true
      }
      parameters {
        name: "alpha"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        has_default: true
      }
      parameters {
        name: "store"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "None"
          kind: NONE
        }
        has_default: true
      }
      parameters {
        name: "groups"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "sort"
      fully_qualified_name: "redis.client.Redis.sort"
      return_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
          args {
            pretty_printed_name: "redis.client._StrType"
            kind: TYPE_VAR
          }
          fully_qualified_name: "redis.client.Redis"
        }
      }
      parameters {
        name: "name"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
          }
          fully_qualified_name: "redis.client._Key"
        }
      }
      parameters {
        name: "start"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.int,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "num"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.int,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "by"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,builtins.bytes,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "get"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,builtins.bytes,typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes]]],None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes]]]"
            args {
              pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
              kind: TYPE_ALIAS
              args {
                pretty_printed_name: "Union[builtins.str,builtins.bytes]"
                kind: UNION
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
                args {
                  pretty_printed_name: "builtins.bytes"
                  fully_qualified_name: "builtins.bytes"
                }
              }
              fully_qualified_name: "redis.client._Key"
            }
            fully_qualified_name: "typing.Sequence"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "desc"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        has_default: true
      }
      parameters {
        name: "alpha"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        has_default: true
      }
      parameters {
        name: "store"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
          }
          fully_qualified_name: "redis.client._Key"
        }
      }
      parameters {
        name: "groups"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "sort"
      fully_qualified_name: "redis.client.Redis.sort"
      return_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
          args {
            pretty_printed_name: "redis.client._StrType"
            kind: TYPE_VAR
          }
          fully_qualified_name: "redis.client.Redis"
        }
      }
      parameters {
        name: "name"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
          }
          fully_qualified_name: "redis.client._Key"
        }
      }
      parameters {
        name: "start"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.int,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      parameters {
        name: "num"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.int,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      parameters {
        name: "by"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,builtins.bytes,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      parameters {
        name: "get"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,builtins.bytes,typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes]]],None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes]]]"
            args {
              pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
              kind: TYPE_ALIAS
              args {
                pretty_printed_name: "Union[builtins.str,builtins.bytes]"
                kind: UNION
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
                args {
                  pretty_printed_name: "builtins.bytes"
                  fully_qualified_name: "builtins.bytes"
                }
              }
              fully_qualified_name: "redis.client._Key"
            }
            fully_qualified_name: "typing.Sequence"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      parameters {
        name: "desc"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
      }
      parameters {
        name: "alpha"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
      }
      parameters {
        name: "store"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
          }
          fully_qualified_name: "redis.client._Key"
        }
      }
      parameters {
        name: "groups"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "spop"
    fullname: "redis.client.Redis.spop"
    definitions {
      name: "spop"
      fully_qualified_name: "redis.client.Redis.spop"
      return_annotation {
        pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
          args {
            pretty_printed_name: "redis.client._StrType"
            kind: TYPE_VAR
          }
          fully_qualified_name: "redis.client.Redis"
        }
      }
      parameters {
        name: "name"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
          }
          fully_qualified_name: "redis.client._Key"
        }
      }
      parameters {
        name: "count"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "None"
          kind: NONE
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "spop"
      fully_qualified_name: "redis.client.Redis.spop"
      return_annotation {
        pretty_printed_name: "builtins.list[TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]]"
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "builtins.float"
              fully_qualified_name: "builtins.float"
            }
            args {
              pretty_printed_name: "builtins.int"
              fully_qualified_name: "builtins.int"
            }
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          fully_qualified_name: "redis.client._Value"
        }
        fully_qualified_name: "builtins.list"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
          args {
            pretty_printed_name: "redis.client._StrType"
            kind: TYPE_VAR
          }
          fully_qualified_name: "redis.client.Redis"
        }
      }
      parameters {
        name: "name"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
          }
          fully_qualified_name: "redis.client._Key"
        }
      }
      parameters {
        name: "count"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "srandmember"
    fullname: "redis.client.Redis.srandmember"
    definitions {
      name: "srandmember"
      fully_qualified_name: "redis.client.Redis.srandmember"
      return_annotation {
        pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
          args {
            pretty_printed_name: "redis.client._StrType"
            kind: TYPE_VAR
          }
          fully_qualified_name: "redis.client.Redis"
        }
      }
      parameters {
        name: "name"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
          }
          fully_qualified_name: "redis.client._Key"
        }
      }
      parameters {
        name: "number"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "None"
          kind: NONE
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "srandmember"
      fully_qualified_name: "redis.client.Redis.srandmember"
      return_annotation {
        pretty_printed_name: "builtins.list[TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]]"
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "builtins.float"
              fully_qualified_name: "builtins.float"
            }
            args {
              pretty_printed_name: "builtins.int"
              fully_qualified_name: "builtins.int"
            }
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          fully_qualified_name: "redis.client._Value"
        }
        fully_qualified_name: "builtins.list"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
          args {
            pretty_printed_name: "redis.client._StrType"
            kind: TYPE_VAR
          }
          fully_qualified_name: "redis.client.Redis"
        }
      }
      parameters {
        name: "name"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
          }
          fully_qualified_name: "redis.client._Key"
        }
      }
      parameters {
        name: "number"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "bzpopmax"
    fullname: "redis.client.Redis.bzpopmax"
    definitions {
      name: "bzpopmax"
      fully_qualified_name: "redis.client.Redis.bzpopmax"
      return_annotation {
        pretty_printed_name: "Tuple[redis.client._StrType,redis.client._StrType,builtins.float]"
        kind: TUPLE
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
          args {
            pretty_printed_name: "redis.client._StrType"
            kind: TYPE_VAR
          }
          fully_qualified_name: "redis.client.Redis"
        }
      }
      parameters {
        name: "keys"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[TypeAlias[Union[builtins.str,builtins.bytes]],typing.Iterable[TypeAlias[Union[builtins.str,builtins.bytes]]]]"
          kind: UNION
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.str,builtins.bytes]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
            }
            fully_qualified_name: "redis.client._Key"
          }
          args {
            pretty_printed_name: "typing.Iterable[TypeAlias[Union[builtins.str,builtins.bytes]]]"
            args {
              pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
              kind: TYPE_ALIAS
              args {
                pretty_printed_name: "Union[builtins.str,builtins.bytes]"
                kind: UNION
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
                args {
                  pretty_printed_name: "builtins.bytes"
                  fully_qualified_name: "builtins.bytes"
                }
              }
              fully_qualified_name: "redis.client._Key"
            }
            fully_qualified_name: "typing.Iterable"
          }
        }
      }
      parameters {
        name: "timeout"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Literal[builtins.int]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "bzpopmax"
      fully_qualified_name: "redis.client.Redis.bzpopmax"
      return_annotation {
        pretty_printed_name: "Union[Tuple[redis.client._StrType,redis.client._StrType,builtins.float],None]"
        kind: UNION
        args {
          pretty_printed_name: "Tuple[redis.client._StrType,redis.client._StrType,builtins.float]"
          kind: TUPLE
          args {
            pretty_printed_name: "redis.client._StrType"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "redis.client._StrType"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
          args {
            pretty_printed_name: "redis.client._StrType"
            kind: TYPE_VAR
          }
          fully_qualified_name: "redis.client.Redis"
        }
      }
      parameters {
        name: "keys"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[TypeAlias[Union[builtins.str,builtins.bytes]],typing.Iterable[TypeAlias[Union[builtins.str,builtins.bytes]]]]"
          kind: UNION
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.str,builtins.bytes]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
            }
            fully_qualified_name: "redis.client._Key"
          }
          args {
            pretty_printed_name: "typing.Iterable[TypeAlias[Union[builtins.str,builtins.bytes]]]"
            args {
              pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
              kind: TYPE_ALIAS
              args {
                pretty_printed_name: "Union[builtins.str,builtins.bytes]"
                kind: UNION
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
                args {
                  pretty_printed_name: "builtins.bytes"
                  fully_qualified_name: "builtins.bytes"
                }
              }
              fully_qualified_name: "redis.client._Key"
            }
            fully_qualified_name: "typing.Iterable"
          }
        }
      }
      parameters {
        name: "timeout"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "bzpopmin"
    fullname: "redis.client.Redis.bzpopmin"
    definitions {
      name: "bzpopmin"
      fully_qualified_name: "redis.client.Redis.bzpopmin"
      return_annotation {
        pretty_printed_name: "Tuple[redis.client._StrType,redis.client._StrType,builtins.float]"
        kind: TUPLE
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
          args {
            pretty_printed_name: "redis.client._StrType"
            kind: TYPE_VAR
          }
          fully_qualified_name: "redis.client.Redis"
        }
      }
      parameters {
        name: "keys"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[TypeAlias[Union[builtins.str,builtins.bytes]],typing.Iterable[TypeAlias[Union[builtins.str,builtins.bytes]]]]"
          kind: UNION
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.str,builtins.bytes]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
            }
            fully_qualified_name: "redis.client._Key"
          }
          args {
            pretty_printed_name: "typing.Iterable[TypeAlias[Union[builtins.str,builtins.bytes]]]"
            args {
              pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
              kind: TYPE_ALIAS
              args {
                pretty_printed_name: "Union[builtins.str,builtins.bytes]"
                kind: UNION
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
                args {
                  pretty_printed_name: "builtins.bytes"
                  fully_qualified_name: "builtins.bytes"
                }
              }
              fully_qualified_name: "redis.client._Key"
            }
            fully_qualified_name: "typing.Iterable"
          }
        }
      }
      parameters {
        name: "timeout"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Literal[builtins.int]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "bzpopmin"
      fully_qualified_name: "redis.client.Redis.bzpopmin"
      return_annotation {
        pretty_printed_name: "Union[Tuple[redis.client._StrType,redis.client._StrType,builtins.float],None]"
        kind: UNION
        args {
          pretty_printed_name: "Tuple[redis.client._StrType,redis.client._StrType,builtins.float]"
          kind: TUPLE
          args {
            pretty_printed_name: "redis.client._StrType"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "redis.client._StrType"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
          args {
            pretty_printed_name: "redis.client._StrType"
            kind: TYPE_VAR
          }
          fully_qualified_name: "redis.client.Redis"
        }
      }
      parameters {
        name: "keys"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[TypeAlias[Union[builtins.str,builtins.bytes]],typing.Iterable[TypeAlias[Union[builtins.str,builtins.bytes]]]]"
          kind: UNION
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.str,builtins.bytes]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
            }
            fully_qualified_name: "redis.client._Key"
          }
          args {
            pretty_printed_name: "typing.Iterable[TypeAlias[Union[builtins.str,builtins.bytes]]]"
            args {
              pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
              kind: TYPE_ALIAS
              args {
                pretty_printed_name: "Union[builtins.str,builtins.bytes]"
                kind: UNION
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
                args {
                  pretty_printed_name: "builtins.bytes"
                  fully_qualified_name: "builtins.bytes"
                }
              }
              fully_qualified_name: "redis.client._Key"
            }
            fully_qualified_name: "typing.Iterable"
          }
        }
      }
      parameters {
        name: "timeout"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "zrange"
    fullname: "redis.client.Redis.zrange"
    definitions {
      name: "zrange"
      fully_qualified_name: "redis.client.Redis.zrange"
      return_annotation {
        pretty_printed_name: "builtins.list[Tuple[redis.client._StrType,redis.client._ScoreCastFuncReturn]]"
        args {
          pretty_printed_name: "Tuple[redis.client._StrType,redis.client._ScoreCastFuncReturn]"
          kind: TUPLE
          args {
            pretty_printed_name: "redis.client._StrType"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "redis.client._ScoreCastFuncReturn"
            kind: TYPE_VAR
          }
        }
        fully_qualified_name: "builtins.list"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
          args {
            pretty_printed_name: "redis.client._StrType"
            kind: TYPE_VAR
          }
          fully_qualified_name: "redis.client.Redis"
        }
      }
      parameters {
        name: "name"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
          }
          fully_qualified_name: "redis.client._Key"
        }
      }
      parameters {
        name: "start"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
      parameters {
        name: "end"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
      parameters {
        name: "desc"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        has_default: true
      }
      parameters {
        name: "withscores"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "Literal[builtins.bool]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.bool"
            fully_qualified_name: "builtins.bool"
          }
        }
      }
      parameters {
        name: "score_cast_func"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "zrange"
      fully_qualified_name: "redis.client.Redis.zrange"
      return_annotation {
        pretty_printed_name: "builtins.list[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.list"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
          args {
            pretty_printed_name: "redis.client._StrType"
            kind: TYPE_VAR
          }
          fully_qualified_name: "redis.client.Redis"
        }
      }
      parameters {
        name: "name"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
          }
          fully_qualified_name: "redis.client._Key"
        }
      }
      parameters {
        name: "start"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
      parameters {
        name: "end"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
      parameters {
        name: "desc"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        has_default: true
      }
      parameters {
        name: "withscores"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        has_default: true
      }
      parameters {
        name: "score_cast_func"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "zrangebyscore"
    fullname: "redis.client.Redis.zrangebyscore"
    definitions {
      name: "zrangebyscore"
      fully_qualified_name: "redis.client.Redis.zrangebyscore"
      return_annotation {
        pretty_printed_name: "builtins.list[Tuple[redis.client._StrType,redis.client._ScoreCastFuncReturn]]"
        args {
          pretty_printed_name: "Tuple[redis.client._StrType,redis.client._ScoreCastFuncReturn]"
          kind: TUPLE
          args {
            pretty_printed_name: "redis.client._StrType"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "redis.client._ScoreCastFuncReturn"
            kind: TYPE_VAR
          }
        }
        fully_qualified_name: "builtins.list"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
          args {
            pretty_printed_name: "redis.client._StrType"
            kind: TYPE_VAR
          }
          fully_qualified_name: "redis.client.Redis"
        }
      }
      parameters {
        name: "name"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
          }
          fully_qualified_name: "redis.client._Key"
        }
      }
      parameters {
        name: "min"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "builtins.float"
              fully_qualified_name: "builtins.float"
            }
            args {
              pretty_printed_name: "builtins.int"
              fully_qualified_name: "builtins.int"
            }
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          fully_qualified_name: "redis.client._Value"
        }
      }
      parameters {
        name: "max"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "builtins.float"
              fully_qualified_name: "builtins.float"
            }
            args {
              pretty_printed_name: "builtins.int"
              fully_qualified_name: "builtins.int"
            }
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          fully_qualified_name: "redis.client._Value"
        }
      }
      parameters {
        name: "start"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.int,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "num"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.int,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "withscores"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "Literal[builtins.bool]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.bool"
            fully_qualified_name: "builtins.bool"
          }
        }
      }
      parameters {
        name: "score_cast_func"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "zrangebyscore"
      fully_qualified_name: "redis.client.Redis.zrangebyscore"
      return_annotation {
        pretty_printed_name: "builtins.list[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.list"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
          args {
            pretty_printed_name: "redis.client._StrType"
            kind: TYPE_VAR
          }
          fully_qualified_name: "redis.client.Redis"
        }
      }
      parameters {
        name: "name"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
          }
          fully_qualified_name: "redis.client._Key"
        }
      }
      parameters {
        name: "min"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "builtins.float"
              fully_qualified_name: "builtins.float"
            }
            args {
              pretty_printed_name: "builtins.int"
              fully_qualified_name: "builtins.int"
            }
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          fully_qualified_name: "redis.client._Value"
        }
      }
      parameters {
        name: "max"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "builtins.float"
              fully_qualified_name: "builtins.float"
            }
            args {
              pretty_printed_name: "builtins.int"
              fully_qualified_name: "builtins.int"
            }
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          fully_qualified_name: "redis.client._Value"
        }
      }
      parameters {
        name: "start"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.int,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "num"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.int,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "withscores"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        has_default: true
      }
      parameters {
        name: "score_cast_func"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "zrevrange"
    fullname: "redis.client.Redis.zrevrange"
    definitions {
      name: "zrevrange"
      fully_qualified_name: "redis.client.Redis.zrevrange"
      return_annotation {
        pretty_printed_name: "builtins.list[Tuple[redis.client._StrType,redis.client._ScoreCastFuncReturn]]"
        args {
          pretty_printed_name: "Tuple[redis.client._StrType,redis.client._ScoreCastFuncReturn]"
          kind: TUPLE
          args {
            pretty_printed_name: "redis.client._StrType"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "redis.client._ScoreCastFuncReturn"
            kind: TYPE_VAR
          }
        }
        fully_qualified_name: "builtins.list"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
          args {
            pretty_printed_name: "redis.client._StrType"
            kind: TYPE_VAR
          }
          fully_qualified_name: "redis.client.Redis"
        }
      }
      parameters {
        name: "name"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
          }
          fully_qualified_name: "redis.client._Key"
        }
      }
      parameters {
        name: "start"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
      parameters {
        name: "end"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
      parameters {
        name: "desc"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        has_default: true
      }
      parameters {
        name: "withscores"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "Literal[builtins.bool]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.bool"
            fully_qualified_name: "builtins.bool"
          }
        }
      }
      parameters {
        name: "score_cast_func"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "zrevrange"
      fully_qualified_name: "redis.client.Redis.zrevrange"
      return_annotation {
        pretty_printed_name: "builtins.list[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.list"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
          args {
            pretty_printed_name: "redis.client._StrType"
            kind: TYPE_VAR
          }
          fully_qualified_name: "redis.client.Redis"
        }
      }
      parameters {
        name: "name"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
          }
          fully_qualified_name: "redis.client._Key"
        }
      }
      parameters {
        name: "start"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
      parameters {
        name: "end"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
      parameters {
        name: "desc"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        has_default: true
      }
      parameters {
        name: "withscores"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        has_default: true
      }
      parameters {
        name: "score_cast_func"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "zrevrangebyscore"
    fullname: "redis.client.Redis.zrevrangebyscore"
    definitions {
      name: "zrevrangebyscore"
      fully_qualified_name: "redis.client.Redis.zrevrangebyscore"
      return_annotation {
        pretty_printed_name: "builtins.list[Tuple[redis.client._StrType,redis.client._ScoreCastFuncReturn]]"
        args {
          pretty_printed_name: "Tuple[redis.client._StrType,redis.client._ScoreCastFuncReturn]"
          kind: TUPLE
          args {
            pretty_printed_name: "redis.client._StrType"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "redis.client._ScoreCastFuncReturn"
            kind: TYPE_VAR
          }
        }
        fully_qualified_name: "builtins.list"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
          args {
            pretty_printed_name: "redis.client._StrType"
            kind: TYPE_VAR
          }
          fully_qualified_name: "redis.client.Redis"
        }
      }
      parameters {
        name: "name"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
          }
          fully_qualified_name: "redis.client._Key"
        }
      }
      parameters {
        name: "min"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "builtins.float"
              fully_qualified_name: "builtins.float"
            }
            args {
              pretty_printed_name: "builtins.int"
              fully_qualified_name: "builtins.int"
            }
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          fully_qualified_name: "redis.client._Value"
        }
      }
      parameters {
        name: "max"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "builtins.float"
              fully_qualified_name: "builtins.float"
            }
            args {
              pretty_printed_name: "builtins.int"
              fully_qualified_name: "builtins.int"
            }
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          fully_qualified_name: "redis.client._Value"
        }
      }
      parameters {
        name: "start"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.int,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "num"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.int,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "withscores"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "Literal[builtins.bool]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.bool"
            fully_qualified_name: "builtins.bool"
          }
        }
      }
      parameters {
        name: "score_cast_func"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "zrevrangebyscore"
      fully_qualified_name: "redis.client.Redis.zrevrangebyscore"
      return_annotation {
        pretty_printed_name: "builtins.list[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.list"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
          args {
            pretty_printed_name: "redis.client._StrType"
            kind: TYPE_VAR
          }
          fully_qualified_name: "redis.client.Redis"
        }
      }
      parameters {
        name: "name"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
          }
          fully_qualified_name: "redis.client._Key"
        }
      }
      parameters {
        name: "min"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "builtins.float"
              fully_qualified_name: "builtins.float"
            }
            args {
              pretty_printed_name: "builtins.int"
              fully_qualified_name: "builtins.int"
            }
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          fully_qualified_name: "redis.client._Value"
        }
      }
      parameters {
        name: "max"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "builtins.float"
              fully_qualified_name: "builtins.float"
            }
            args {
              pretty_printed_name: "builtins.int"
              fully_qualified_name: "builtins.int"
            }
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          fully_qualified_name: "redis.client._Value"
        }
      }
      parameters {
        name: "start"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.int,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "num"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.int,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      parameters {
        name: "withscores"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        has_default: true
      }
      parameters {
        name: "score_cast_func"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "hset"
    fullname: "redis.client.Redis.hset"
    definitions {
      name: "hset"
      fully_qualified_name: "redis.client.Redis.hset"
      return_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
          args {
            pretty_printed_name: "redis.client._StrType"
            kind: TYPE_VAR
          }
          fully_qualified_name: "redis.client.Redis"
        }
      }
      parameters {
        name: "name"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
          }
          fully_qualified_name: "redis.client._Key"
        }
      }
      parameters {
        name: "key"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
          }
          fully_qualified_name: "redis.client._Key"
        }
      }
      parameters {
        name: "value"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "builtins.float"
              fully_qualified_name: "builtins.float"
            }
            args {
              pretty_printed_name: "builtins.int"
              fully_qualified_name: "builtins.int"
            }
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          fully_qualified_name: "redis.client._Value"
        }
      }
      parameters {
        name: "mapping"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[typing.Mapping[TypeAlias[Union[builtins.str,builtins.bytes]],TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]],None]"
          kind: UNION
          args {
            pretty_printed_name: "typing.Mapping[TypeAlias[Union[builtins.str,builtins.bytes]],TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]]"
            args {
              pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
              kind: TYPE_ALIAS
              args {
                pretty_printed_name: "Union[builtins.str,builtins.bytes]"
                kind: UNION
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
                args {
                  pretty_printed_name: "builtins.bytes"
                  fully_qualified_name: "builtins.bytes"
                }
              }
              fully_qualified_name: "redis.client._Key"
            }
            args {
              pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
              kind: TYPE_ALIAS
              args {
                pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
                kind: UNION
                args {
                  pretty_printed_name: "builtins.bytes"
                  fully_qualified_name: "builtins.bytes"
                }
                args {
                  pretty_printed_name: "builtins.float"
                  fully_qualified_name: "builtins.float"
                }
                args {
                  pretty_printed_name: "builtins.int"
                  fully_qualified_name: "builtins.int"
                }
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              fully_qualified_name: "redis.client._Value"
            }
            fully_qualified_name: "typing.Mapping"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "hset"
      fully_qualified_name: "redis.client.Redis.hset"
      return_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
          args {
            pretty_printed_name: "redis.client._StrType"
            kind: TYPE_VAR
          }
          fully_qualified_name: "redis.client.Redis"
        }
      }
      parameters {
        name: "name"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
          }
          fully_qualified_name: "redis.client._Key"
        }
      }
      parameters {
        name: "key"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      parameters {
        name: "value"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      parameters {
        name: "mapping"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "typing.Mapping[TypeAlias[Union[builtins.str,builtins.bytes]],TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]]"
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.str,builtins.bytes]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
            }
            fully_qualified_name: "redis.client._Key"
          }
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              args {
                pretty_printed_name: "builtins.float"
                fully_qualified_name: "builtins.float"
              }
              args {
                pretty_printed_name: "builtins.int"
                fully_qualified_name: "builtins.int"
              }
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
            }
            fully_qualified_name: "redis.client._Value"
          }
          fully_qualified_name: "typing.Mapping"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "hset"
      fully_qualified_name: "redis.client.Redis.hset"
      return_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "redis.client.Redis[redis.client._StrType]"
          args {
            pretty_printed_name: "redis.client._StrType"
            kind: TYPE_VAR
          }
          fully_qualified_name: "redis.client.Redis"
        }
      }
      parameters {
        name: "name"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
          }
          fully_qualified_name: "redis.client._Key"
        }
      }
      parameters {
        name: "mapping"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "typing.Mapping[TypeAlias[Union[builtins.str,builtins.bytes]],TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]]"
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.str,builtins.bytes]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
            }
            fully_qualified_name: "redis.client._Key"
          }
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              args {
                pretty_printed_name: "builtins.float"
                fully_qualified_name: "builtins.float"
              }
              args {
                pretty_printed_name: "builtins.int"
                fully_qualified_name: "builtins.int"
              }
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
            }
            fully_qualified_name: "redis.client._Value"
          }
          fully_qualified_name: "typing.Mapping"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  is_generic: true
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "RESPONSE_CALLBACKS"
    fully_qualified_name: "redis.client.Redis.RESPONSE_CALLBACKS"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "connection_pool"
    fully_qualified_name: "redis.client.Redis.connection_pool"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "response_callbacks"
    fully_qualified_name: "redis.client.Redis.response_callbacks"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "__contains__"
    fully_qualified_name: "redis.client.Redis.__contains__"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "PubSub"
  fully_qualified_name: "redis.client.PubSub"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "redis.client.PubSub.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.PubSub"
        fully_qualified_name: "redis.client.PubSub"
      }
    }
    parameters {
      name: "connection_pool"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "shard_hint"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
      has_default: true
    }
    parameters {
      name: "ignore_subscribe_messages"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__del__"
    fully_qualified_name: "redis.client.PubSub.__del__"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "reset"
    fully_qualified_name: "redis.client.PubSub.reset"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "close"
    fully_qualified_name: "redis.client.PubSub.close"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.PubSub"
        fully_qualified_name: "redis.client.PubSub"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "on_connect"
    fully_qualified_name: "redis.client.PubSub.on_connect"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "connection"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "encode"
    fully_qualified_name: "redis.client.PubSub.encode"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "subscribed"
    fully_qualified_name: "redis.client.PubSub.subscribed"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "execute_command"
    fully_qualified_name: "redis.client.PubSub.execute_command"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
    }
    parameters {
      name: "kwargs"
      kind: VAR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "parse_response"
    fully_qualified_name: "redis.client.PubSub.parse_response"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "block"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "psubscribe"
    fully_qualified_name: "redis.client.PubSub.psubscribe"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.PubSub"
        fully_qualified_name: "redis.client.PubSub"
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "kwargs"
      kind: VAR_KEYWORD
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "punsubscribe"
    fully_qualified_name: "redis.client.PubSub.punsubscribe"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.PubSub"
        fully_qualified_name: "redis.client.PubSub"
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "subscribe"
    fully_qualified_name: "redis.client.PubSub.subscribe"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.PubSub"
        fully_qualified_name: "redis.client.PubSub"
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "kwargs"
      kind: VAR_KEYWORD
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "unsubscribe"
    fully_qualified_name: "redis.client.PubSub.unsubscribe"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.PubSub"
        fully_qualified_name: "redis.client.PubSub"
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "listen"
    fully_qualified_name: "redis.client.PubSub.listen"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "get_message"
    fully_qualified_name: "redis.client.PubSub.get_message"
    return_annotation {
      pretty_printed_name: "Union[builtins.dict[builtins.str,Any],None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.dict[builtins.str,Any]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "builtins.dict"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.PubSub"
        fully_qualified_name: "redis.client.PubSub"
      }
    }
    parameters {
      name: "ignore_subscribe_messages"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    parameters {
      name: "timeout"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "handle_message"
    fully_qualified_name: "redis.client.PubSub.handle_message"
    return_annotation {
      pretty_printed_name: "Union[builtins.dict[builtins.str,Any],None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.dict[builtins.str,Any]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "builtins.dict"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.PubSub"
        fully_qualified_name: "redis.client.PubSub"
      }
    }
    parameters {
      name: "response"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "ignore_subscribe_messages"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "run_in_thread"
    fully_qualified_name: "redis.client.PubSub.run_in_thread"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "sleep_time"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "ping"
    fully_qualified_name: "redis.client.PubSub.ping"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.PubSub"
        fully_qualified_name: "redis.client.PubSub"
      }
    }
    parameters {
      name: "message"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "PUBLISH_MESSAGE_TYPES"
    fully_qualified_name: "redis.client.PubSub.PUBLISH_MESSAGE_TYPES"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "UNSUBSCRIBE_MESSAGE_TYPES"
    fully_qualified_name: "redis.client.PubSub.UNSUBSCRIBE_MESSAGE_TYPES"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "connection_pool"
    fully_qualified_name: "redis.client.PubSub.connection_pool"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "shard_hint"
    fully_qualified_name: "redis.client.PubSub.shard_hint"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "ignore_subscribe_messages"
    fully_qualified_name: "redis.client.PubSub.ignore_subscribe_messages"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "connection"
    fully_qualified_name: "redis.client.PubSub.connection"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "encoding"
    fully_qualified_name: "redis.client.PubSub.encoding"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "encoding_errors"
    fully_qualified_name: "redis.client.PubSub.encoding_errors"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "decode_responses"
    fully_qualified_name: "redis.client.PubSub.decode_responses"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "channels"
    fully_qualified_name: "redis.client.PubSub.channels"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "patterns"
    fully_qualified_name: "redis.client.PubSub.patterns"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "Pipeline"
  fully_qualified_name: "redis.client.Pipeline"
  super_classes: "redis.client.Redis"
  methods {
    name: "__init__"
    fully_qualified_name: "redis.client.Pipeline.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "connection_pool"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "response_callbacks"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "transaction"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "shard_hint"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__enter__"
    fully_qualified_name: "redis.client.Pipeline.__enter__"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__exit__"
    fully_qualified_name: "redis.client.Pipeline.__exit__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "exc_type"
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "exc_value"
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "traceback"
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__del__"
    fully_qualified_name: "redis.client.Pipeline.__del__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__len__"
    fully_qualified_name: "redis.client.Pipeline.__len__"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__bool__"
    fully_qualified_name: "redis.client.Pipeline.__bool__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "reset"
    fully_qualified_name: "redis.client.Pipeline.reset"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "multi"
    fully_qualified_name: "redis.client.Pipeline.multi"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "execute_command"
    fully_qualified_name: "redis.client.Pipeline.execute_command"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
    }
    parameters {
      name: "options"
      kind: VAR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "immediate_execute_command"
    fully_qualified_name: "redis.client.Pipeline.immediate_execute_command"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
    }
    parameters {
      name: "options"
      kind: VAR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "pipeline_execute_command"
    fully_qualified_name: "redis.client.Pipeline.pipeline_execute_command"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
    }
    parameters {
      name: "options"
      kind: VAR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "raise_first_error"
    fully_qualified_name: "redis.client.Pipeline.raise_first_error"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "commands"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "response"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "annotate_exception"
    fully_qualified_name: "redis.client.Pipeline.annotate_exception"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "exception"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "number"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "command"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "parse_response"
    fully_qualified_name: "redis.client.Pipeline.parse_response"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "connection"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "command_name"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "options"
      kind: VAR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "load_scripts"
    fully_qualified_name: "redis.client.Pipeline.load_scripts"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "execute"
    fully_qualified_name: "redis.client.Pipeline.execute"
    return_annotation {
      pretty_printed_name: "builtins.list[Any]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "raise_on_error"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "watch"
    fully_qualified_name: "redis.client.Pipeline.watch"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "names"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "unwatch"
    fully_qualified_name: "redis.client.Pipeline.unwatch"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "set_response_callback"
    fully_qualified_name: "redis.client.Pipeline.set_response_callback"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "command"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "callback"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "pipeline"
    fully_qualified_name: "redis.client.Pipeline.pipeline"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "transaction"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    parameters {
      name: "shard_hint"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "lock"
    fully_qualified_name: "redis.client.Pipeline.lock"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "timeout"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
    parameters {
      name: "sleep"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
    parameters {
      name: "blocking_timeout"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
    parameters {
      name: "lock_class"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
    parameters {
      name: "thread_local"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "pubsub"
    fully_qualified_name: "redis.client.Pipeline.pubsub"
    return_annotation {
      pretty_printed_name: "redis.client.PubSub"
      fully_qualified_name: "redis.client.PubSub"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "shard_hint"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
      has_default: true
    }
    parameters {
      name: "ignore_subscribe_messages"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "acl_cat"
    fully_qualified_name: "redis.client.Pipeline.acl_cat"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "category"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "acl_deluser"
    fully_qualified_name: "redis.client.Pipeline.acl_deluser"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "username"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "acl_genpass"
    fully_qualified_name: "redis.client.Pipeline.acl_genpass"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "acl_getuser"
    fully_qualified_name: "redis.client.Pipeline.acl_getuser"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "username"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "acl_list"
    fully_qualified_name: "redis.client.Pipeline.acl_list"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "acl_load"
    fully_qualified_name: "redis.client.Pipeline.acl_load"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "acl_setuser"
    fully_qualified_name: "redis.client.Pipeline.acl_setuser"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "username"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      has_default: true
    }
    parameters {
      name: "enabled"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    parameters {
      name: "nopass"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    parameters {
      name: "passwords"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.Sequence[builtins.str],None]"
        kind: UNION
        args {
          pretty_printed_name: "typing.Sequence[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "typing.Sequence"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "hashed_passwords"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.Sequence[builtins.str],None]"
        kind: UNION
        args {
          pretty_printed_name: "typing.Sequence[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "typing.Sequence"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "categories"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.Sequence[builtins.str],None]"
        kind: UNION
        args {
          pretty_printed_name: "typing.Sequence[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "typing.Sequence"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "commands"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.Sequence[builtins.str],None]"
        kind: UNION
        args {
          pretty_printed_name: "typing.Sequence[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "typing.Sequence"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "keys"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.Sequence[builtins.str],None]"
        kind: UNION
        args {
          pretty_printed_name: "typing.Sequence[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "typing.Sequence"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "reset"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    parameters {
      name: "reset_keys"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    parameters {
      name: "reset_passwords"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "acl_users"
    fully_qualified_name: "redis.client.Pipeline.acl_users"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "acl_whoami"
    fully_qualified_name: "redis.client.Pipeline.acl_whoami"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "bgrewriteaof"
    fully_qualified_name: "redis.client.Pipeline.bgrewriteaof"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "bgsave"
    fully_qualified_name: "redis.client.Pipeline.bgsave"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "client_id"
    fully_qualified_name: "redis.client.Pipeline.client_id"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "client_kill"
    fully_qualified_name: "redis.client.Pipeline.client_kill"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "address"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "client_list"
    fully_qualified_name: "redis.client.Pipeline.client_list"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "client_getname"
    fully_qualified_name: "redis.client.Pipeline.client_getname"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "client_setname"
    fully_qualified_name: "redis.client.Pipeline.client_setname"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "readwrite"
    fully_qualified_name: "redis.client.Pipeline.readwrite"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "readonly"
    fully_qualified_name: "redis.client.Pipeline.readonly"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "config_get"
    fully_qualified_name: "redis.client.Pipeline.config_get"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "pattern"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "config_set"
    fully_qualified_name: "redis.client.Pipeline.config_set"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "config_resetstat"
    fully_qualified_name: "redis.client.Pipeline.config_resetstat"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "config_rewrite"
    fully_qualified_name: "redis.client.Pipeline.config_rewrite"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "dbsize"
    fully_qualified_name: "redis.client.Pipeline.dbsize"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "debug_object"
    fully_qualified_name: "redis.client.Pipeline.debug_object"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "echo"
    fully_qualified_name: "redis.client.Pipeline.echo"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "flushall"
    fully_qualified_name: "redis.client.Pipeline.flushall"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "flushdb"
    fully_qualified_name: "redis.client.Pipeline.flushdb"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "info"
    fully_qualified_name: "redis.client.Pipeline.info"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "section"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,builtins.bytes,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "lastsave"
    fully_qualified_name: "redis.client.Pipeline.lastsave"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "object"
    fully_qualified_name: "redis.client.Pipeline.object"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "infotype"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "ping"
    fully_qualified_name: "redis.client.Pipeline.ping"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "save"
    fully_qualified_name: "redis.client.Pipeline.save"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "sentinel"
    fully_qualified_name: "redis.client.Pipeline.sentinel"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "sentinel_get_master_addr_by_name"
    fully_qualified_name: "redis.client.Pipeline.sentinel_get_master_addr_by_name"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "service_name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "sentinel_master"
    fully_qualified_name: "redis.client.Pipeline.sentinel_master"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "service_name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "sentinel_masters"
    fully_qualified_name: "redis.client.Pipeline.sentinel_masters"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "sentinel_monitor"
    fully_qualified_name: "redis.client.Pipeline.sentinel_monitor"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "ip"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "port"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "quorum"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "sentinel_remove"
    fully_qualified_name: "redis.client.Pipeline.sentinel_remove"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "sentinel_sentinels"
    fully_qualified_name: "redis.client.Pipeline.sentinel_sentinels"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "service_name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "sentinel_set"
    fully_qualified_name: "redis.client.Pipeline.sentinel_set"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "option"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "sentinel_slaves"
    fully_qualified_name: "redis.client.Pipeline.sentinel_slaves"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "service_name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "shutdown"
    fully_qualified_name: "redis.client.Pipeline.shutdown"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "slaveof"
    fully_qualified_name: "redis.client.Pipeline.slaveof"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "host"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
      has_default: true
    }
    parameters {
      name: "port"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "slowlog_get"
    fully_qualified_name: "redis.client.Pipeline.slowlog_get"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "num"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "slowlog_len"
    fully_qualified_name: "redis.client.Pipeline.slowlog_len"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "slowlog_reset"
    fully_qualified_name: "redis.client.Pipeline.slowlog_reset"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "time"
    fully_qualified_name: "redis.client.Pipeline.time"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "append"
    fully_qualified_name: "redis.client.Pipeline.append"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "bitcount"
    fully_qualified_name: "redis.client.Pipeline.bitcount"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "start"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "end"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "bitop"
    fully_qualified_name: "redis.client.Pipeline.bitop"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "operation"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "dest"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "keys"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "bitpos"
    fully_qualified_name: "redis.client.Pipeline.bitpos"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "bit"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "start"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
      has_default: true
    }
    parameters {
      name: "end"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "decr"
    fully_qualified_name: "redis.client.Pipeline.decr"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "amount"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "delete"
    fully_qualified_name: "redis.client.Pipeline.delete"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "names"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__delitem__"
    fully_qualified_name: "redis.client.Pipeline.__delitem__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "_Key"
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "dump"
    fully_qualified_name: "redis.client.Pipeline.dump"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "exists"
    fully_qualified_name: "redis.client.Pipeline.exists"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "names"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__contains__"
    fully_qualified_name: "redis.client.Pipeline.__contains__"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "names"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "expire"
    fully_qualified_name: "redis.client.Pipeline.expire"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "time"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,datetime.timedelta]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "datetime.timedelta"
          fully_qualified_name: "datetime.timedelta"
        }
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "expireat"
    fully_qualified_name: "redis.client.Pipeline.expireat"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "when"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "get"
    fully_qualified_name: "redis.client.Pipeline.get"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__getitem__"
    fully_qualified_name: "redis.client.Pipeline.__getitem__"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "getbit"
    fully_qualified_name: "redis.client.Pipeline.getbit"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "offset"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "getrange"
    fully_qualified_name: "redis.client.Pipeline.getrange"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "start"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "end"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "getset"
    fully_qualified_name: "redis.client.Pipeline.getset"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "incr"
    fully_qualified_name: "redis.client.Pipeline.incr"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "amount"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "incrby"
    fully_qualified_name: "redis.client.Pipeline.incrby"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "amount"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "incrbyfloat"
    fully_qualified_name: "redis.client.Pipeline.incrbyfloat"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "amount"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "keys"
    fully_qualified_name: "redis.client.Pipeline.keys"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "pattern"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "mget"
    fully_qualified_name: "redis.client.Pipeline.mget"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "keys"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[TypeAlias[Union[builtins.str,builtins.bytes]],typing.Iterable[TypeAlias[Union[builtins.str,builtins.bytes]]]]"
        kind: UNION
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
          }
          fully_qualified_name: "redis.client._Key"
        }
        args {
          pretty_printed_name: "typing.Iterable[TypeAlias[Union[builtins.str,builtins.bytes]]]"
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.str,builtins.bytes]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
            }
            fully_qualified_name: "redis.client._Key"
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "mset"
    fully_qualified_name: "redis.client.Pipeline.mset"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "mapping"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Mapping[TypeAlias[Union[builtins.str,builtins.bytes]],TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]]"
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
          }
          fully_qualified_name: "redis.client._Key"
        }
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "builtins.float"
              fully_qualified_name: "builtins.float"
            }
            args {
              pretty_printed_name: "builtins.int"
              fully_qualified_name: "builtins.int"
            }
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          fully_qualified_name: "redis.client._Value"
        }
        fully_qualified_name: "typing.Mapping"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "msetnx"
    fully_qualified_name: "redis.client.Pipeline.msetnx"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "mapping"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Mapping[TypeAlias[Union[builtins.str,builtins.bytes]],TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]]"
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
          }
          fully_qualified_name: "redis.client._Key"
        }
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "builtins.float"
              fully_qualified_name: "builtins.float"
            }
            args {
              pretty_printed_name: "builtins.int"
              fully_qualified_name: "builtins.int"
            }
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          fully_qualified_name: "redis.client._Value"
        }
        fully_qualified_name: "typing.Mapping"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "move"
    fully_qualified_name: "redis.client.Pipeline.move"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "db"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "persist"
    fully_qualified_name: "redis.client.Pipeline.persist"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "pexpire"
    fully_qualified_name: "redis.client.Pipeline.pexpire"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "time"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,datetime.timedelta]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "datetime.timedelta"
          fully_qualified_name: "datetime.timedelta"
        }
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "pexpireat"
    fully_qualified_name: "redis.client.Pipeline.pexpireat"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "when"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,datetime.datetime]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "datetime.datetime"
          fully_qualified_name: "datetime.datetime"
        }
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "psetex"
    fully_qualified_name: "redis.client.Pipeline.psetex"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "time_ms"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "pttl"
    fully_qualified_name: "redis.client.Pipeline.pttl"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "randomkey"
    fully_qualified_name: "redis.client.Pipeline.randomkey"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "rename"
    fully_qualified_name: "redis.client.Pipeline.rename"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "src"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "dst"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "renamenx"
    fully_qualified_name: "redis.client.Pipeline.renamenx"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "src"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "dst"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "restore"
    fully_qualified_name: "redis.client.Pipeline.restore"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "ttl"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "replace"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "set"
    fully_qualified_name: "redis.client.Pipeline.set"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        fully_qualified_name: "redis.client._Value"
      }
    }
    parameters {
      name: "ex"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[None,builtins.int,datetime.timedelta]"
        kind: UNION
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "datetime.timedelta"
          fully_qualified_name: "datetime.timedelta"
        }
      }
      has_default: true
    }
    parameters {
      name: "px"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[None,builtins.int,datetime.timedelta]"
        kind: UNION
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "datetime.timedelta"
          fully_qualified_name: "datetime.timedelta"
        }
      }
      has_default: true
    }
    parameters {
      name: "nx"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    parameters {
      name: "xx"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    parameters {
      name: "keepttl"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__setitem__"
    fully_qualified_name: "redis.client.Pipeline.__setitem__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "value"
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "setbit"
    fully_qualified_name: "redis.client.Pipeline.setbit"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "offset"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "setex"
    fully_qualified_name: "redis.client.Pipeline.setex"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "time"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,datetime.timedelta]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "datetime.timedelta"
          fully_qualified_name: "datetime.timedelta"
        }
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        fully_qualified_name: "redis.client._Value"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "setnx"
    fully_qualified_name: "redis.client.Pipeline.setnx"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "setrange"
    fully_qualified_name: "redis.client.Pipeline.setrange"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "offset"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "strlen"
    fully_qualified_name: "redis.client.Pipeline.strlen"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "substr"
    fully_qualified_name: "redis.client.Pipeline.substr"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "start"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "end"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "ttl"
    fully_qualified_name: "redis.client.Pipeline.ttl"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "type"
    fully_qualified_name: "redis.client.Pipeline.type"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "unlink"
    fully_qualified_name: "redis.client.Pipeline.unlink"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "names"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "blpop"
    fully_qualified_name: "redis.client.Pipeline.blpop"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "keys"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]],typing.Iterable[TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]]]"
        kind: UNION
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "builtins.float"
              fully_qualified_name: "builtins.float"
            }
            args {
              pretty_printed_name: "builtins.int"
              fully_qualified_name: "builtins.int"
            }
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          fully_qualified_name: "redis.client._Value"
        }
        args {
          pretty_printed_name: "typing.Iterable[TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]]"
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              args {
                pretty_printed_name: "builtins.float"
                fully_qualified_name: "builtins.float"
              }
              args {
                pretty_printed_name: "builtins.int"
                fully_qualified_name: "builtins.int"
              }
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
            }
            fully_qualified_name: "redis.client._Value"
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
    }
    parameters {
      name: "timeout"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "brpop"
    fully_qualified_name: "redis.client.Pipeline.brpop"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "keys"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]],typing.Iterable[TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]]]"
        kind: UNION
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "builtins.float"
              fully_qualified_name: "builtins.float"
            }
            args {
              pretty_printed_name: "builtins.int"
              fully_qualified_name: "builtins.int"
            }
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          fully_qualified_name: "redis.client._Value"
        }
        args {
          pretty_printed_name: "typing.Iterable[TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]]"
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              args {
                pretty_printed_name: "builtins.float"
                fully_qualified_name: "builtins.float"
              }
              args {
                pretty_printed_name: "builtins.int"
                fully_qualified_name: "builtins.int"
              }
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
            }
            fully_qualified_name: "redis.client._Value"
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
    }
    parameters {
      name: "timeout"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "brpoplpush"
    fully_qualified_name: "redis.client.Pipeline.brpoplpush"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "src"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "dst"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "timeout"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "lindex"
    fully_qualified_name: "redis.client.Pipeline.lindex"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "index"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "linsert"
    fully_qualified_name: "redis.client.Pipeline.linsert"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "where"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]"
        kind: UNION
        args {
          pretty_printed_name: "Literal[builtins.str]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        args {
          pretty_printed_name: "Literal[builtins.str]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        args {
          pretty_printed_name: "Literal[builtins.str]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        args {
          pretty_printed_name: "Literal[builtins.str]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
      }
    }
    parameters {
      name: "refvalue"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        fully_qualified_name: "redis.client._Value"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        fully_qualified_name: "redis.client._Value"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "llen"
    fully_qualified_name: "redis.client.Pipeline.llen"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "lpop"
    fully_qualified_name: "redis.client.Pipeline.lpop"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "lpush"
    fully_qualified_name: "redis.client.Pipeline.lpush"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        fully_qualified_name: "redis.client._Value"
      }
    }
    parameters {
      name: "values"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        fully_qualified_name: "redis.client._Value"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "lpushx"
    fully_qualified_name: "redis.client.Pipeline.lpushx"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "lrange"
    fully_qualified_name: "redis.client.Pipeline.lrange"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "start"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "end"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "lrem"
    fully_qualified_name: "redis.client.Pipeline.lrem"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "count"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        fully_qualified_name: "redis.client._Value"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "lset"
    fully_qualified_name: "redis.client.Pipeline.lset"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "index"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        fully_qualified_name: "redis.client._Value"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "ltrim"
    fully_qualified_name: "redis.client.Pipeline.ltrim"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "start"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "end"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "rpop"
    fully_qualified_name: "redis.client.Pipeline.rpop"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "rpoplpush"
    fully_qualified_name: "redis.client.Pipeline.rpoplpush"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "src"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "dst"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "rpush"
    fully_qualified_name: "redis.client.Pipeline.rpush"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        fully_qualified_name: "redis.client._Value"
      }
    }
    parameters {
      name: "values"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        fully_qualified_name: "redis.client._Value"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "rpushx"
    fully_qualified_name: "redis.client.Pipeline.rpushx"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "sort"
    fully_qualified_name: "redis.client.Pipeline.sort"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "start"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "num"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "by"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,builtins.bytes,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "get"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,builtins.bytes,typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes]]],None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes]]]"
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.str,builtins.bytes]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
            }
            fully_qualified_name: "redis.client._Key"
          }
          fully_qualified_name: "typing.Sequence"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "desc"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    parameters {
      name: "alpha"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    parameters {
      name: "store"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,builtins.bytes,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "groups"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "scan"
    fully_qualified_name: "redis.client.Pipeline.scan"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "cursor"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    parameters {
      name: "match"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,builtins.bytes,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "count"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "scan_iter"
    fully_qualified_name: "redis.client.Pipeline.scan_iter"
    return_annotation {
      pretty_printed_name: "typing.Iterator[Any]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "match"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "count"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "sscan"
    fully_qualified_name: "redis.client.Pipeline.sscan"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "cursor"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    parameters {
      name: "match"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      has_default: true
    }
    parameters {
      name: "count"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "sscan_iter"
    fully_qualified_name: "redis.client.Pipeline.sscan_iter"
    return_annotation {
      pretty_printed_name: "typing.Iterator[Any]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "match"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
      has_default: true
    }
    parameters {
      name: "count"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "hscan"
    fully_qualified_name: "redis.client.Pipeline.hscan"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "cursor"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    parameters {
      name: "match"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      has_default: true
    }
    parameters {
      name: "count"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "hscan_iter"
    fully_qualified_name: "redis.client.Pipeline.hscan_iter"
    return_annotation {
      pretty_printed_name: "typing.Iterator[Any]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "match"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
      has_default: true
    }
    parameters {
      name: "count"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "zscan"
    fully_qualified_name: "redis.client.Pipeline.zscan"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "cursor"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
      has_default: true
    }
    parameters {
      name: "match"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
      has_default: true
    }
    parameters {
      name: "count"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
      has_default: true
    }
    parameters {
      name: "score_cast_func"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "zscan_iter"
    fully_qualified_name: "redis.client.Pipeline.zscan_iter"
    return_annotation {
      pretty_printed_name: "typing.Iterator[Any]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "match"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
      has_default: true
    }
    parameters {
      name: "count"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
      has_default: true
    }
    parameters {
      name: "score_cast_func"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "sadd"
    fully_qualified_name: "redis.client.Pipeline.sadd"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "values"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        fully_qualified_name: "redis.client._Value"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "scard"
    fully_qualified_name: "redis.client.Pipeline.scard"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "sdiff"
    fully_qualified_name: "redis.client.Pipeline.sdiff"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "keys"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[TypeAlias[Union[builtins.str,builtins.bytes]],typing.Iterable[TypeAlias[Union[builtins.str,builtins.bytes]]]]"
        kind: UNION
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
          }
          fully_qualified_name: "redis.client._Key"
        }
        args {
          pretty_printed_name: "typing.Iterable[TypeAlias[Union[builtins.str,builtins.bytes]]]"
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.str,builtins.bytes]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
            }
            fully_qualified_name: "redis.client._Key"
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "sdiffstore"
    fully_qualified_name: "redis.client.Pipeline.sdiffstore"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "dest"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "keys"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[TypeAlias[Union[builtins.str,builtins.bytes]],typing.Iterable[TypeAlias[Union[builtins.str,builtins.bytes]]]]"
        kind: UNION
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
          }
          fully_qualified_name: "redis.client._Key"
        }
        args {
          pretty_printed_name: "typing.Iterable[TypeAlias[Union[builtins.str,builtins.bytes]]]"
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.str,builtins.bytes]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
            }
            fully_qualified_name: "redis.client._Key"
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "sinter"
    fully_qualified_name: "redis.client.Pipeline.sinter"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "keys"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[TypeAlias[Union[builtins.str,builtins.bytes]],typing.Iterable[TypeAlias[Union[builtins.str,builtins.bytes]]]]"
        kind: UNION
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
          }
          fully_qualified_name: "redis.client._Key"
        }
        args {
          pretty_printed_name: "typing.Iterable[TypeAlias[Union[builtins.str,builtins.bytes]]]"
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.str,builtins.bytes]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
            }
            fully_qualified_name: "redis.client._Key"
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "sinterstore"
    fully_qualified_name: "redis.client.Pipeline.sinterstore"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "dest"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "keys"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[TypeAlias[Union[builtins.str,builtins.bytes]],typing.Iterable[TypeAlias[Union[builtins.str,builtins.bytes]]]]"
        kind: UNION
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
          }
          fully_qualified_name: "redis.client._Key"
        }
        args {
          pretty_printed_name: "typing.Iterable[TypeAlias[Union[builtins.str,builtins.bytes]]]"
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.str,builtins.bytes]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
            }
            fully_qualified_name: "redis.client._Key"
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "sismember"
    fully_qualified_name: "redis.client.Pipeline.sismember"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        fully_qualified_name: "redis.client._Value"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "smembers"
    fully_qualified_name: "redis.client.Pipeline.smembers"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "smove"
    fully_qualified_name: "redis.client.Pipeline.smove"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "src"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "dst"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        fully_qualified_name: "redis.client._Value"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "spop"
    fully_qualified_name: "redis.client.Pipeline.spop"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "count"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "srandmember"
    fully_qualified_name: "redis.client.Pipeline.srandmember"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "number"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "srem"
    fully_qualified_name: "redis.client.Pipeline.srem"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "values"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        fully_qualified_name: "redis.client._Value"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "sunion"
    fully_qualified_name: "redis.client.Pipeline.sunion"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "keys"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[TypeAlias[Union[builtins.str,builtins.bytes]],typing.Iterable[TypeAlias[Union[builtins.str,builtins.bytes]]]]"
        kind: UNION
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
          }
          fully_qualified_name: "redis.client._Key"
        }
        args {
          pretty_printed_name: "typing.Iterable[TypeAlias[Union[builtins.str,builtins.bytes]]]"
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.str,builtins.bytes]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
            }
            fully_qualified_name: "redis.client._Key"
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "sunionstore"
    fully_qualified_name: "redis.client.Pipeline.sunionstore"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "dest"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "keys"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[TypeAlias[Union[builtins.str,builtins.bytes]],typing.Iterable[TypeAlias[Union[builtins.str,builtins.bytes]]]]"
        kind: UNION
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
          }
          fully_qualified_name: "redis.client._Key"
        }
        args {
          pretty_printed_name: "typing.Iterable[TypeAlias[Union[builtins.str,builtins.bytes]]]"
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.str,builtins.bytes]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
            }
            fully_qualified_name: "redis.client._Key"
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "xack"
    fully_qualified_name: "redis.client.Pipeline.xack"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "groupname"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "ids"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "xadd"
    fully_qualified_name: "redis.client.Pipeline.xadd"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "fields"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "id"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
      has_default: true
    }
    parameters {
      name: "maxlen"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
      has_default: true
    }
    parameters {
      name: "approximate"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "xclaim"
    fully_qualified_name: "redis.client.Pipeline.xclaim"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "groupname"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "consumername"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "min_idle_time"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "message_ids"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "idle"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
      has_default: true
    }
    parameters {
      name: "time"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
      has_default: true
    }
    parameters {
      name: "retrycount"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
      has_default: true
    }
    parameters {
      name: "force"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
      has_default: true
    }
    parameters {
      name: "justid"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "xdel"
    fully_qualified_name: "redis.client.Pipeline.xdel"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "ids"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "xgroup_create"
    fully_qualified_name: "redis.client.Pipeline.xgroup_create"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "groupname"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "id"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
      has_default: true
    }
    parameters {
      name: "mkstream"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "xgroup_delconsumer"
    fully_qualified_name: "redis.client.Pipeline.xgroup_delconsumer"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "groupname"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "consumername"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "xgroup_destroy"
    fully_qualified_name: "redis.client.Pipeline.xgroup_destroy"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "groupname"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "xgroup_setid"
    fully_qualified_name: "redis.client.Pipeline.xgroup_setid"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "groupname"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "id"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "xinfo_consumers"
    fully_qualified_name: "redis.client.Pipeline.xinfo_consumers"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "groupname"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "xinfo_groups"
    fully_qualified_name: "redis.client.Pipeline.xinfo_groups"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "xinfo_stream"
    fully_qualified_name: "redis.client.Pipeline.xinfo_stream"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "xlen"
    fully_qualified_name: "redis.client.Pipeline.xlen"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "xpending"
    fully_qualified_name: "redis.client.Pipeline.xpending"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "groupname"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "xpending_range"
    fully_qualified_name: "redis.client.Pipeline.xpending_range"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "groupname"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "min"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "max"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "count"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "consumername"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "xrange"
    fully_qualified_name: "redis.client.Pipeline.xrange"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "min"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
      has_default: true
    }
    parameters {
      name: "max"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
      has_default: true
    }
    parameters {
      name: "count"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "xread"
    fully_qualified_name: "redis.client.Pipeline.xread"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "streams"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "count"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
      has_default: true
    }
    parameters {
      name: "block"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "xreadgroup"
    fully_qualified_name: "redis.client.Pipeline.xreadgroup"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "groupname"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "consumername"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "streams"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "count"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
      has_default: true
    }
    parameters {
      name: "block"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
      has_default: true
    }
    parameters {
      name: "noack"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "xrevrange"
    fully_qualified_name: "redis.client.Pipeline.xrevrange"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "max"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
      has_default: true
    }
    parameters {
      name: "min"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
      has_default: true
    }
    parameters {
      name: "count"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "xtrim"
    fully_qualified_name: "redis.client.Pipeline.xtrim"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "maxlen"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "approximate"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "zadd"
    fully_qualified_name: "redis.client.Pipeline.zadd"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "mapping"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Mapping[TypeAlias[Union[builtins.str,builtins.bytes]],TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]]"
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
          }
          fully_qualified_name: "redis.client._Key"
        }
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "builtins.float"
              fully_qualified_name: "builtins.float"
            }
            args {
              pretty_printed_name: "builtins.int"
              fully_qualified_name: "builtins.int"
            }
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          fully_qualified_name: "redis.client._Value"
        }
        fully_qualified_name: "typing.Mapping"
      }
    }
    parameters {
      name: "nx"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    parameters {
      name: "xx"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    parameters {
      name: "ch"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    parameters {
      name: "incr"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "zcard"
    fully_qualified_name: "redis.client.Pipeline.zcard"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "zcount"
    fully_qualified_name: "redis.client.Pipeline.zcount"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "min"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        fully_qualified_name: "redis.client._Value"
      }
    }
    parameters {
      name: "max"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        fully_qualified_name: "redis.client._Value"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "zincrby"
    fully_qualified_name: "redis.client.Pipeline.zincrby"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "amount"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        fully_qualified_name: "redis.client._Value"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "zinterstore"
    fully_qualified_name: "redis.client.Pipeline.zinterstore"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "dest"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "keys"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[TypeAlias[Union[builtins.str,builtins.bytes]]]"
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
          }
          fully_qualified_name: "redis.client._Key"
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    parameters {
      name: "aggregate"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]"
        kind: UNION
        args {
          pretty_printed_name: "Literal[builtins.str]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        args {
          pretty_printed_name: "Literal[builtins.str]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        args {
          pretty_printed_name: "Literal[builtins.str]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "zlexcount"
    fully_qualified_name: "redis.client.Pipeline.zlexcount"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "min"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        fully_qualified_name: "redis.client._Value"
      }
    }
    parameters {
      name: "max"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        fully_qualified_name: "redis.client._Value"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "zpopmax"
    fully_qualified_name: "redis.client.Pipeline.zpopmax"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "count"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "zpopmin"
    fully_qualified_name: "redis.client.Pipeline.zpopmin"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "count"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "bzpopmax"
    fully_qualified_name: "redis.client.Pipeline.bzpopmax"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "keys"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[TypeAlias[Union[builtins.str,builtins.bytes]],typing.Iterable[TypeAlias[Union[builtins.str,builtins.bytes]]]]"
        kind: UNION
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
          }
          fully_qualified_name: "redis.client._Key"
        }
        args {
          pretty_printed_name: "typing.Iterable[TypeAlias[Union[builtins.str,builtins.bytes]]]"
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.str,builtins.bytes]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
            }
            fully_qualified_name: "redis.client._Key"
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
    }
    parameters {
      name: "timeout"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "bzpopmin"
    fully_qualified_name: "redis.client.Pipeline.bzpopmin"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "keys"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[TypeAlias[Union[builtins.str,builtins.bytes]],typing.Iterable[TypeAlias[Union[builtins.str,builtins.bytes]]]]"
        kind: UNION
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
          }
          fully_qualified_name: "redis.client._Key"
        }
        args {
          pretty_printed_name: "typing.Iterable[TypeAlias[Union[builtins.str,builtins.bytes]]]"
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.str,builtins.bytes]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
            }
            fully_qualified_name: "redis.client._Key"
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
    }
    parameters {
      name: "timeout"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "zrange"
    fully_qualified_name: "redis.client.Pipeline.zrange"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "start"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "end"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "desc"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    parameters {
      name: "withscores"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    parameters {
      name: "score_cast_func"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "zrangebylex"
    fully_qualified_name: "redis.client.Pipeline.zrangebylex"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "min"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        fully_qualified_name: "redis.client._Value"
      }
    }
    parameters {
      name: "max"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        fully_qualified_name: "redis.client._Value"
      }
    }
    parameters {
      name: "start"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "num"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "zrangebyscore"
    fully_qualified_name: "redis.client.Pipeline.zrangebyscore"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "min"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        fully_qualified_name: "redis.client._Value"
      }
    }
    parameters {
      name: "max"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        fully_qualified_name: "redis.client._Value"
      }
    }
    parameters {
      name: "start"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "num"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "withscores"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    parameters {
      name: "score_cast_func"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "zrank"
    fully_qualified_name: "redis.client.Pipeline.zrank"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        fully_qualified_name: "redis.client._Value"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "zrem"
    fully_qualified_name: "redis.client.Pipeline.zrem"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "values"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        fully_qualified_name: "redis.client._Value"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "zremrangebylex"
    fully_qualified_name: "redis.client.Pipeline.zremrangebylex"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "min"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        fully_qualified_name: "redis.client._Value"
      }
    }
    parameters {
      name: "max"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        fully_qualified_name: "redis.client._Value"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "zremrangebyrank"
    fully_qualified_name: "redis.client.Pipeline.zremrangebyrank"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "min"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        fully_qualified_name: "redis.client._Value"
      }
    }
    parameters {
      name: "max"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        fully_qualified_name: "redis.client._Value"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "zremrangebyscore"
    fully_qualified_name: "redis.client.Pipeline.zremrangebyscore"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "min"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        fully_qualified_name: "redis.client._Value"
      }
    }
    parameters {
      name: "max"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        fully_qualified_name: "redis.client._Value"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "zrevrange"
    fully_qualified_name: "redis.client.Pipeline.zrevrange"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "start"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "end"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "desc"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    parameters {
      name: "withscores"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    parameters {
      name: "score_cast_func"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "zrevrangebyscore"
    fully_qualified_name: "redis.client.Pipeline.zrevrangebyscore"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "min"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        fully_qualified_name: "redis.client._Value"
      }
    }
    parameters {
      name: "max"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        fully_qualified_name: "redis.client._Value"
      }
    }
    parameters {
      name: "start"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "num"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "withscores"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    parameters {
      name: "score_cast_func"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "zrevrangebylex"
    fully_qualified_name: "redis.client.Pipeline.zrevrangebylex"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "min"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        fully_qualified_name: "redis.client._Value"
      }
    }
    parameters {
      name: "max"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        fully_qualified_name: "redis.client._Value"
      }
    }
    parameters {
      name: "start"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "num"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "zrevrank"
    fully_qualified_name: "redis.client.Pipeline.zrevrank"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        fully_qualified_name: "redis.client._Value"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "zscore"
    fully_qualified_name: "redis.client.Pipeline.zscore"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        fully_qualified_name: "redis.client._Value"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "zunionstore"
    fully_qualified_name: "redis.client.Pipeline.zunionstore"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "dest"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "keys"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[TypeAlias[Union[builtins.str,builtins.bytes]]]"
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
          }
          fully_qualified_name: "redis.client._Key"
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    parameters {
      name: "aggregate"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]"
        kind: UNION
        args {
          pretty_printed_name: "Literal[builtins.str]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        args {
          pretty_printed_name: "Literal[builtins.str]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        args {
          pretty_printed_name: "Literal[builtins.str]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "pfadd"
    fully_qualified_name: "redis.client.Pipeline.pfadd"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "values"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        fully_qualified_name: "redis.client._Value"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "pfcount"
    fully_qualified_name: "redis.client.Pipeline.pfcount"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "pfmerge"
    fully_qualified_name: "redis.client.Pipeline.pfmerge"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "dest"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "sources"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "hdel"
    fully_qualified_name: "redis.client.Pipeline.hdel"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "keys"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "hexists"
    fully_qualified_name: "redis.client.Pipeline.hexists"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "hget"
    fully_qualified_name: "redis.client.Pipeline.hget"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "hgetall"
    fully_qualified_name: "redis.client.Pipeline.hgetall"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "hincrby"
    fully_qualified_name: "redis.client.Pipeline.hincrby"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "amount"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "hincrbyfloat"
    fully_qualified_name: "redis.client.Pipeline.hincrbyfloat"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "amount"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "hkeys"
    fully_qualified_name: "redis.client.Pipeline.hkeys"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "hlen"
    fully_qualified_name: "redis.client.Pipeline.hlen"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "hsetnx"
    fully_qualified_name: "redis.client.Pipeline.hsetnx"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        fully_qualified_name: "redis.client._Value"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "hmset"
    fully_qualified_name: "redis.client.Pipeline.hmset"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "mapping"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Mapping[TypeAlias[Union[builtins.str,builtins.bytes]],TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]]"
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
          }
          fully_qualified_name: "redis.client._Key"
        }
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "builtins.float"
              fully_qualified_name: "builtins.float"
            }
            args {
              pretty_printed_name: "builtins.int"
              fully_qualified_name: "builtins.int"
            }
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          fully_qualified_name: "redis.client._Value"
        }
        fully_qualified_name: "typing.Mapping"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "hmget"
    fully_qualified_name: "redis.client.Pipeline.hmget"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "keys"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[TypeAlias[Union[builtins.str,builtins.bytes]],typing.Iterable[TypeAlias[Union[builtins.str,builtins.bytes]]]]"
        kind: UNION
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
          }
          fully_qualified_name: "redis.client._Key"
        }
        args {
          pretty_printed_name: "typing.Iterable[TypeAlias[Union[builtins.str,builtins.bytes]]]"
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.str,builtins.bytes]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
            }
            fully_qualified_name: "redis.client._Key"
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "hvals"
    fully_qualified_name: "redis.client.Pipeline.hvals"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "publish"
    fully_qualified_name: "redis.client.Pipeline.publish"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "channel"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    parameters {
      name: "message"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "eval"
    fully_qualified_name: "redis.client.Pipeline.eval"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "script"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "numkeys"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "keys_and_args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "evalsha"
    fully_qualified_name: "redis.client.Pipeline.evalsha"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "sha"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "numkeys"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "keys_and_args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "script_exists"
    fully_qualified_name: "redis.client.Pipeline.script_exists"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "script_flush"
    fully_qualified_name: "redis.client.Pipeline.script_flush"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "script_kill"
    fully_qualified_name: "redis.client.Pipeline.script_kill"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "script_load"
    fully_qualified_name: "redis.client.Pipeline.script_load"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "script"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "register_script"
    fully_qualified_name: "redis.client.Pipeline.register_script"
    return_annotation {
      pretty_printed_name: "redis.client.Script"
      fully_qualified_name: "redis.client.Script"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "script"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,redis.client._StrType]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "pubsub_channels"
    fully_qualified_name: "redis.client.Pipeline.pubsub_channels"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "pattern"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "pubsub_numsub"
    fully_qualified_name: "redis.client.Pipeline.pubsub_numsub"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
        }
        fully_qualified_name: "redis.client._Key"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "pubsub_numpat"
    fully_qualified_name: "redis.client.Pipeline.pubsub_numpat"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "monitor"
    fully_qualified_name: "redis.client.Pipeline.monitor"
    return_annotation {
      pretty_printed_name: "redis.client.Monitor"
      fully_qualified_name: "redis.client.Monitor"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "cluster"
    fully_qualified_name: "redis.client.Pipeline.cluster"
    return_annotation {
      pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
      args {
        pretty_printed_name: "redis.client._StrType"
        kind: TYPE_VAR
      }
      fully_qualified_name: "redis.client.Pipeline"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    parameters {
      name: "cluster_arg"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "client"
    fully_qualified_name: "redis.client.Pipeline.client"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  overloaded_methods {
    name: "hset"
    fullname: "redis.client.Pipeline.hset"
    definitions {
      name: "hset"
      fully_qualified_name: "redis.client.Pipeline.hset"
      return_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
          args {
            pretty_printed_name: "redis.client._StrType"
            kind: TYPE_VAR
          }
          fully_qualified_name: "redis.client.Pipeline"
        }
      }
      parameters {
        name: "name"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
          }
          fully_qualified_name: "redis.client._Key"
        }
      }
      parameters {
        name: "key"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
          }
          fully_qualified_name: "redis.client._Key"
        }
      }
      parameters {
        name: "value"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "builtins.float"
              fully_qualified_name: "builtins.float"
            }
            args {
              pretty_printed_name: "builtins.int"
              fully_qualified_name: "builtins.int"
            }
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          fully_qualified_name: "redis.client._Value"
        }
      }
      parameters {
        name: "mapping"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[typing.Mapping[TypeAlias[Union[builtins.str,builtins.bytes]],TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]],None]"
          kind: UNION
          args {
            pretty_printed_name: "typing.Mapping[TypeAlias[Union[builtins.str,builtins.bytes]],TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]]"
            args {
              pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
              kind: TYPE_ALIAS
              args {
                pretty_printed_name: "Union[builtins.str,builtins.bytes]"
                kind: UNION
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
                args {
                  pretty_printed_name: "builtins.bytes"
                  fully_qualified_name: "builtins.bytes"
                }
              }
              fully_qualified_name: "redis.client._Key"
            }
            args {
              pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
              kind: TYPE_ALIAS
              args {
                pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
                kind: UNION
                args {
                  pretty_printed_name: "builtins.bytes"
                  fully_qualified_name: "builtins.bytes"
                }
                args {
                  pretty_printed_name: "builtins.float"
                  fully_qualified_name: "builtins.float"
                }
                args {
                  pretty_printed_name: "builtins.int"
                  fully_qualified_name: "builtins.int"
                }
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              fully_qualified_name: "redis.client._Value"
            }
            fully_qualified_name: "typing.Mapping"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "hset"
      fully_qualified_name: "redis.client.Pipeline.hset"
      return_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
          args {
            pretty_printed_name: "redis.client._StrType"
            kind: TYPE_VAR
          }
          fully_qualified_name: "redis.client.Pipeline"
        }
      }
      parameters {
        name: "name"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
          }
          fully_qualified_name: "redis.client._Key"
        }
      }
      parameters {
        name: "key"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      parameters {
        name: "value"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      parameters {
        name: "mapping"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "typing.Mapping[TypeAlias[Union[builtins.str,builtins.bytes]],TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]]"
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.str,builtins.bytes]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
            }
            fully_qualified_name: "redis.client._Key"
          }
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              args {
                pretty_printed_name: "builtins.float"
                fully_qualified_name: "builtins.float"
              }
              args {
                pretty_printed_name: "builtins.int"
                fully_qualified_name: "builtins.int"
              }
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
            }
            fully_qualified_name: "redis.client._Value"
          }
          fully_qualified_name: "typing.Mapping"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "hset"
      fully_qualified_name: "redis.client.Pipeline.hset"
      return_annotation {
        pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
        args {
          pretty_printed_name: "redis.client._StrType"
          kind: TYPE_VAR
        }
        fully_qualified_name: "redis.client.Pipeline"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "redis.client.Pipeline[redis.client._StrType]"
          args {
            pretty_printed_name: "redis.client._StrType"
            kind: TYPE_VAR
          }
          fully_qualified_name: "redis.client.Pipeline"
        }
      }
      parameters {
        name: "name"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
          }
          fully_qualified_name: "redis.client._Key"
        }
      }
      parameters {
        name: "mapping"
        kind: KEYWORD_ONLY
        type_annotation {
          pretty_printed_name: "typing.Mapping[TypeAlias[Union[builtins.str,builtins.bytes]],TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]]"
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.str,builtins.bytes]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
            }
            fully_qualified_name: "redis.client._Key"
          }
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.float,builtins.int,builtins.str]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.bytes,builtins.float,builtins.int,builtins.str]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              args {
                pretty_printed_name: "builtins.float"
                fully_qualified_name: "builtins.float"
              }
              args {
                pretty_printed_name: "builtins.int"
                fully_qualified_name: "builtins.int"
              }
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
            }
            fully_qualified_name: "redis.client._Value"
          }
          fully_qualified_name: "typing.Mapping"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  is_generic: true
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "UNWATCH_COMMANDS"
    fully_qualified_name: "redis.client.Pipeline.UNWATCH_COMMANDS"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "connection_pool"
    fully_qualified_name: "redis.client.Pipeline.connection_pool"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "connection"
    fully_qualified_name: "redis.client.Pipeline.connection"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "response_callbacks"
    fully_qualified_name: "redis.client.Pipeline.response_callbacks"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "transaction"
    fully_qualified_name: "redis.client.Pipeline.transaction"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "shard_hint"
    fully_qualified_name: "redis.client.Pipeline.shard_hint"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "watching"
    fully_qualified_name: "redis.client.Pipeline.watching"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "command_stack"
    fully_qualified_name: "redis.client.Pipeline.command_stack"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "scripts"
    fully_qualified_name: "redis.client.Pipeline.scripts"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "explicit_transaction"
    fully_qualified_name: "redis.client.Pipeline.explicit_transaction"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "Script"
  fully_qualified_name: "redis.client.Script"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "redis.client.Script.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Script"
        fully_qualified_name: "redis.client.Script"
      }
    }
    parameters {
      name: "registered_client"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "script"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__call__"
    fully_qualified_name: "redis.client.Script.__call__"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "keys"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
    parameters {
      name: "args"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
    parameters {
      name: "client"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "registered_client"
    fully_qualified_name: "redis.client.Script.registered_client"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "script"
    fully_qualified_name: "redis.client.Script.script"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "sha"
    fully_qualified_name: "redis.client.Script.sha"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "Monitor"
  fully_qualified_name: "redis.client.Monitor"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "redis.client.Monitor.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Monitor"
        fully_qualified_name: "redis.client.Monitor"
      }
    }
    parameters {
      name: "connection_pool"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__enter__"
    fully_qualified_name: "redis.client.Monitor.__enter__"
    return_annotation {
      pretty_printed_name: "redis.client.Monitor"
      fully_qualified_name: "redis.client.Monitor"
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "redis.client.Monitor"
        fully_qualified_name: "redis.client.Monitor"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__exit__"
    fully_qualified_name: "redis.client.Monitor.__exit__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "redis.client.Monitor"
        fully_qualified_name: "redis.client.Monitor"
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "next_command"
    fully_qualified_name: "redis.client.Monitor.next_command"
    return_annotation {
      pretty_printed_name: "builtins.dict[builtins.str,Any]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "builtins.dict"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Monitor"
        fully_qualified_name: "redis.client.Monitor"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "listen"
    fully_qualified_name: "redis.client.Monitor.listen"
    return_annotation {
      pretty_printed_name: "typing.Iterable[builtins.dict[builtins.str,Any]]"
      args {
        pretty_printed_name: "builtins.dict[builtins.str,Any]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "builtins.dict"
      }
      fully_qualified_name: "typing.Iterable"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "redis.client.Monitor"
        fully_qualified_name: "redis.client.Monitor"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "list_or_args"
  fully_qualified_name: "redis.client.list_or_args"
  parameters {
    name: "keys"
    kind: POSITIONAL_OR_KEYWORD
  }
  parameters {
    name: "args"
    kind: POSITIONAL_OR_KEYWORD
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "timestamp_to_datetime"
  fully_qualified_name: "redis.client.timestamp_to_datetime"
  parameters {
    name: "response"
    kind: POSITIONAL_OR_KEYWORD
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "string_keys_to_dict"
  fully_qualified_name: "redis.client.string_keys_to_dict"
  parameters {
    name: "key_string"
    kind: POSITIONAL_OR_KEYWORD
  }
  parameters {
    name: "callback"
    kind: POSITIONAL_OR_KEYWORD
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "dict_merge"
  fully_qualified_name: "redis.client.dict_merge"
  parameters {
    name: "dicts"
    kind: VAR_POSITIONAL
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "parse_debug_object"
  fully_qualified_name: "redis.client.parse_debug_object"
  parameters {
    name: "response"
    kind: POSITIONAL_OR_KEYWORD
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "parse_object"
  fully_qualified_name: "redis.client.parse_object"
  parameters {
    name: "response"
    kind: POSITIONAL_OR_KEYWORD
  }
  parameters {
    name: "infotype"
    kind: POSITIONAL_OR_KEYWORD
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "parse_info"
  fully_qualified_name: "redis.client.parse_info"
  parameters {
    name: "response"
    kind: POSITIONAL_OR_KEYWORD
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "parse_sentinel_state"
  fully_qualified_name: "redis.client.parse_sentinel_state"
  parameters {
    name: "item"
    kind: POSITIONAL_OR_KEYWORD
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "parse_sentinel_master"
  fully_qualified_name: "redis.client.parse_sentinel_master"
  parameters {
    name: "response"
    kind: POSITIONAL_OR_KEYWORD
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "parse_sentinel_masters"
  fully_qualified_name: "redis.client.parse_sentinel_masters"
  parameters {
    name: "response"
    kind: POSITIONAL_OR_KEYWORD
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "parse_sentinel_slaves_and_sentinels"
  fully_qualified_name: "redis.client.parse_sentinel_slaves_and_sentinels"
  parameters {
    name: "response"
    kind: POSITIONAL_OR_KEYWORD
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "parse_sentinel_get_master"
  fully_qualified_name: "redis.client.parse_sentinel_get_master"
  parameters {
    name: "response"
    kind: POSITIONAL_OR_KEYWORD
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "pairs_to_dict"
  fully_qualified_name: "redis.client.pairs_to_dict"
  parameters {
    name: "response"
    kind: POSITIONAL_OR_KEYWORD
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "pairs_to_dict_typed"
  fully_qualified_name: "redis.client.pairs_to_dict_typed"
  parameters {
    name: "response"
    kind: POSITIONAL_OR_KEYWORD
  }
  parameters {
    name: "type_info"
    kind: POSITIONAL_OR_KEYWORD
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "zset_score_pairs"
  fully_qualified_name: "redis.client.zset_score_pairs"
  parameters {
    name: "response"
    kind: POSITIONAL_OR_KEYWORD
  }
  parameters {
    name: "options"
    kind: VAR_KEYWORD
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "sort_return_tuples"
  fully_qualified_name: "redis.client.sort_return_tuples"
  parameters {
    name: "response"
    kind: POSITIONAL_OR_KEYWORD
  }
  parameters {
    name: "options"
    kind: VAR_KEYWORD
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "int_or_none"
  fully_qualified_name: "redis.client.int_or_none"
  parameters {
    name: "response"
    kind: POSITIONAL_OR_KEYWORD
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "float_or_none"
  fully_qualified_name: "redis.client.float_or_none"
  parameters {
    name: "response"
    kind: POSITIONAL_OR_KEYWORD
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "bool_ok"
  fully_qualified_name: "redis.client.bool_ok"
  parameters {
    name: "response"
    kind: POSITIONAL_OR_KEYWORD
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "parse_client_list"
  fully_qualified_name: "redis.client.parse_client_list"
  parameters {
    name: "response"
    kind: POSITIONAL_OR_KEYWORD
  }
  parameters {
    name: "options"
    kind: VAR_KEYWORD
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "parse_config_get"
  fully_qualified_name: "redis.client.parse_config_get"
  parameters {
    name: "response"
    kind: POSITIONAL_OR_KEYWORD
  }
  parameters {
    name: "options"
    kind: VAR_KEYWORD
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "parse_scan"
  fully_qualified_name: "redis.client.parse_scan"
  parameters {
    name: "response"
    kind: POSITIONAL_OR_KEYWORD
  }
  parameters {
    name: "options"
    kind: VAR_KEYWORD
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "parse_hscan"
  fully_qualified_name: "redis.client.parse_hscan"
  parameters {
    name: "response"
    kind: POSITIONAL_OR_KEYWORD
  }
  parameters {
    name: "options"
    kind: VAR_KEYWORD
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "parse_zscan"
  fully_qualified_name: "redis.client.parse_zscan"
  parameters {
    name: "response"
    kind: POSITIONAL_OR_KEYWORD
  }
  parameters {
    name: "options"
    kind: VAR_KEYWORD
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "parse_slowlog_get"
  fully_qualified_name: "redis.client.parse_slowlog_get"
  parameters {
    name: "response"
    kind: POSITIONAL_OR_KEYWORD
  }
  parameters {
    name: "options"
    kind: VAR_KEYWORD
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "SYM_EMPTY"
  fully_qualified_name: "redis.client.SYM_EMPTY"
  type_annotation {
    pretty_printed_name: "Any"
    kind: ANY
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "SENTINEL_STATE_TYPES"
  fully_qualified_name: "redis.client.SENTINEL_STATE_TYPES"
  type_annotation {
    pretty_printed_name: "Any"
    kind: ANY
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
