fully_qualified_name: "requests.api"
functions {
  name: "request"
  fully_qualified_name: "requests.api.request"
  return_annotation {
    pretty_printed_name: "requests.models.Response"
    fully_qualified_name: "requests.models.Response"
  }
  parameters {
    name: "method"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,builtins.bytes]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
  }
  parameters {
    name: "url"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,builtins.bytes]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
  }
  parameters {
    name: "params"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[_typeshed.SupportsItems[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]],Tuple[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]],typing.Iterable[Tuple[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]]],builtins.str,builtins.bytes,None]"
      kind: UNION
      args {
        pretty_printed_name: "_typeshed.SupportsItems[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]]"
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "builtins.int"
              fully_qualified_name: "builtins.int"
            }
            args {
              pretty_printed_name: "builtins.float"
              fully_qualified_name: "builtins.float"
            }
          }
          fully_qualified_name: "requests.sessions._ParamsMappingKeyType"
        }
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "builtins.int"
              fully_qualified_name: "builtins.int"
            }
            args {
              pretty_printed_name: "builtins.float"
              fully_qualified_name: "builtins.float"
            }
            args {
              pretty_printed_name: "typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
              args {
                pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
                kind: UNION
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
                args {
                  pretty_printed_name: "builtins.bytes"
                  fully_qualified_name: "builtins.bytes"
                }
                args {
                  pretty_printed_name: "builtins.int"
                  fully_qualified_name: "builtins.int"
                }
                args {
                  pretty_printed_name: "builtins.float"
                  fully_qualified_name: "builtins.float"
                }
              }
              fully_qualified_name: "typing.Iterable"
            }
            args {
              pretty_printed_name: "None"
              kind: NONE
            }
          }
          fully_qualified_name: "requests.sessions._ParamsMappingValueType"
        }
        fully_qualified_name: "_typeshed.SupportsItems"
      }
      args {
        pretty_printed_name: "Tuple[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]]"
        kind: TUPLE
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "builtins.int"
              fully_qualified_name: "builtins.int"
            }
            args {
              pretty_printed_name: "builtins.float"
              fully_qualified_name: "builtins.float"
            }
          }
          fully_qualified_name: "requests.sessions._ParamsMappingKeyType"
        }
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "builtins.int"
              fully_qualified_name: "builtins.int"
            }
            args {
              pretty_printed_name: "builtins.float"
              fully_qualified_name: "builtins.float"
            }
            args {
              pretty_printed_name: "typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
              args {
                pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
                kind: UNION
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
                args {
                  pretty_printed_name: "builtins.bytes"
                  fully_qualified_name: "builtins.bytes"
                }
                args {
                  pretty_printed_name: "builtins.int"
                  fully_qualified_name: "builtins.int"
                }
                args {
                  pretty_printed_name: "builtins.float"
                  fully_qualified_name: "builtins.float"
                }
              }
              fully_qualified_name: "typing.Iterable"
            }
            args {
              pretty_printed_name: "None"
              kind: NONE
            }
          }
          fully_qualified_name: "requests.sessions._ParamsMappingValueType"
        }
      }
      args {
        pretty_printed_name: "typing.Iterable[Tuple[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]]]"
        args {
          pretty_printed_name: "Tuple[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]]"
          kind: TUPLE
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              args {
                pretty_printed_name: "builtins.int"
                fully_qualified_name: "builtins.int"
              }
              args {
                pretty_printed_name: "builtins.float"
                fully_qualified_name: "builtins.float"
              }
            }
            fully_qualified_name: "requests.sessions._ParamsMappingKeyType"
          }
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              args {
                pretty_printed_name: "builtins.int"
                fully_qualified_name: "builtins.int"
              }
              args {
                pretty_printed_name: "builtins.float"
                fully_qualified_name: "builtins.float"
              }
              args {
                pretty_printed_name: "typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
                args {
                  pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
                  kind: UNION
                  args {
                    pretty_printed_name: "builtins.str"
                    fully_qualified_name: "builtins.str"
                  }
                  args {
                    pretty_printed_name: "builtins.bytes"
                    fully_qualified_name: "builtins.bytes"
                  }
                  args {
                    pretty_printed_name: "builtins.int"
                    fully_qualified_name: "builtins.int"
                  }
                  args {
                    pretty_printed_name: "builtins.float"
                    fully_qualified_name: "builtins.float"
                  }
                }
                fully_qualified_name: "typing.Iterable"
              }
              args {
                pretty_printed_name: "None"
                kind: NONE
              }
            }
            fully_qualified_name: "requests.sessions._ParamsMappingValueType"
          }
        }
        fully_qualified_name: "typing.Iterable"
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "data"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "headers"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "cookies"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "files"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "auth"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "timeout"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "allow_redirects"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    has_default: true
  }
  parameters {
    name: "proxies"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "hooks"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "stream"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "verify"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "cert"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "json"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "get"
  fully_qualified_name: "requests.api.get"
  return_annotation {
    pretty_printed_name: "requests.models.Response"
    fully_qualified_name: "requests.models.Response"
  }
  parameters {
    name: "url"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,builtins.bytes]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
  }
  parameters {
    name: "params"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[_typeshed.SupportsItems[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]],Tuple[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]],typing.Iterable[Tuple[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]]],builtins.str,builtins.bytes,None]"
      kind: UNION
      args {
        pretty_printed_name: "_typeshed.SupportsItems[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]]"
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "builtins.int"
              fully_qualified_name: "builtins.int"
            }
            args {
              pretty_printed_name: "builtins.float"
              fully_qualified_name: "builtins.float"
            }
          }
          fully_qualified_name: "requests.sessions._ParamsMappingKeyType"
        }
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "builtins.int"
              fully_qualified_name: "builtins.int"
            }
            args {
              pretty_printed_name: "builtins.float"
              fully_qualified_name: "builtins.float"
            }
            args {
              pretty_printed_name: "typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
              args {
                pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
                kind: UNION
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
                args {
                  pretty_printed_name: "builtins.bytes"
                  fully_qualified_name: "builtins.bytes"
                }
                args {
                  pretty_printed_name: "builtins.int"
                  fully_qualified_name: "builtins.int"
                }
                args {
                  pretty_printed_name: "builtins.float"
                  fully_qualified_name: "builtins.float"
                }
              }
              fully_qualified_name: "typing.Iterable"
            }
            args {
              pretty_printed_name: "None"
              kind: NONE
            }
          }
          fully_qualified_name: "requests.sessions._ParamsMappingValueType"
        }
        fully_qualified_name: "_typeshed.SupportsItems"
      }
      args {
        pretty_printed_name: "Tuple[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]]"
        kind: TUPLE
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "builtins.int"
              fully_qualified_name: "builtins.int"
            }
            args {
              pretty_printed_name: "builtins.float"
              fully_qualified_name: "builtins.float"
            }
          }
          fully_qualified_name: "requests.sessions._ParamsMappingKeyType"
        }
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "builtins.int"
              fully_qualified_name: "builtins.int"
            }
            args {
              pretty_printed_name: "builtins.float"
              fully_qualified_name: "builtins.float"
            }
            args {
              pretty_printed_name: "typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
              args {
                pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
                kind: UNION
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
                args {
                  pretty_printed_name: "builtins.bytes"
                  fully_qualified_name: "builtins.bytes"
                }
                args {
                  pretty_printed_name: "builtins.int"
                  fully_qualified_name: "builtins.int"
                }
                args {
                  pretty_printed_name: "builtins.float"
                  fully_qualified_name: "builtins.float"
                }
              }
              fully_qualified_name: "typing.Iterable"
            }
            args {
              pretty_printed_name: "None"
              kind: NONE
            }
          }
          fully_qualified_name: "requests.sessions._ParamsMappingValueType"
        }
      }
      args {
        pretty_printed_name: "typing.Iterable[Tuple[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]]]"
        args {
          pretty_printed_name: "Tuple[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]]"
          kind: TUPLE
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              args {
                pretty_printed_name: "builtins.int"
                fully_qualified_name: "builtins.int"
              }
              args {
                pretty_printed_name: "builtins.float"
                fully_qualified_name: "builtins.float"
              }
            }
            fully_qualified_name: "requests.sessions._ParamsMappingKeyType"
          }
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              args {
                pretty_printed_name: "builtins.int"
                fully_qualified_name: "builtins.int"
              }
              args {
                pretty_printed_name: "builtins.float"
                fully_qualified_name: "builtins.float"
              }
              args {
                pretty_printed_name: "typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
                args {
                  pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
                  kind: UNION
                  args {
                    pretty_printed_name: "builtins.str"
                    fully_qualified_name: "builtins.str"
                  }
                  args {
                    pretty_printed_name: "builtins.bytes"
                    fully_qualified_name: "builtins.bytes"
                  }
                  args {
                    pretty_printed_name: "builtins.int"
                    fully_qualified_name: "builtins.int"
                  }
                  args {
                    pretty_printed_name: "builtins.float"
                    fully_qualified_name: "builtins.float"
                  }
                }
                fully_qualified_name: "typing.Iterable"
              }
              args {
                pretty_printed_name: "None"
                kind: NONE
              }
            }
            fully_qualified_name: "requests.sessions._ParamsMappingValueType"
          }
        }
        fully_qualified_name: "typing.Iterable"
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "data"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "headers"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "cookies"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "files"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "auth"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "timeout"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "allow_redirects"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    has_default: true
  }
  parameters {
    name: "proxies"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "hooks"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "stream"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "verify"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "cert"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "json"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "options"
  fully_qualified_name: "requests.api.options"
  return_annotation {
    pretty_printed_name: "requests.models.Response"
    fully_qualified_name: "requests.models.Response"
  }
  parameters {
    name: "url"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,builtins.bytes]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
  }
  parameters {
    name: "params"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[_typeshed.SupportsItems[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]],Tuple[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]],typing.Iterable[Tuple[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]]],builtins.str,builtins.bytes,None]"
      kind: UNION
      args {
        pretty_printed_name: "_typeshed.SupportsItems[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]]"
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "builtins.int"
              fully_qualified_name: "builtins.int"
            }
            args {
              pretty_printed_name: "builtins.float"
              fully_qualified_name: "builtins.float"
            }
          }
          fully_qualified_name: "requests.sessions._ParamsMappingKeyType"
        }
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "builtins.int"
              fully_qualified_name: "builtins.int"
            }
            args {
              pretty_printed_name: "builtins.float"
              fully_qualified_name: "builtins.float"
            }
            args {
              pretty_printed_name: "typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
              args {
                pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
                kind: UNION
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
                args {
                  pretty_printed_name: "builtins.bytes"
                  fully_qualified_name: "builtins.bytes"
                }
                args {
                  pretty_printed_name: "builtins.int"
                  fully_qualified_name: "builtins.int"
                }
                args {
                  pretty_printed_name: "builtins.float"
                  fully_qualified_name: "builtins.float"
                }
              }
              fully_qualified_name: "typing.Iterable"
            }
            args {
              pretty_printed_name: "None"
              kind: NONE
            }
          }
          fully_qualified_name: "requests.sessions._ParamsMappingValueType"
        }
        fully_qualified_name: "_typeshed.SupportsItems"
      }
      args {
        pretty_printed_name: "Tuple[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]]"
        kind: TUPLE
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "builtins.int"
              fully_qualified_name: "builtins.int"
            }
            args {
              pretty_printed_name: "builtins.float"
              fully_qualified_name: "builtins.float"
            }
          }
          fully_qualified_name: "requests.sessions._ParamsMappingKeyType"
        }
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "builtins.int"
              fully_qualified_name: "builtins.int"
            }
            args {
              pretty_printed_name: "builtins.float"
              fully_qualified_name: "builtins.float"
            }
            args {
              pretty_printed_name: "typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
              args {
                pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
                kind: UNION
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
                args {
                  pretty_printed_name: "builtins.bytes"
                  fully_qualified_name: "builtins.bytes"
                }
                args {
                  pretty_printed_name: "builtins.int"
                  fully_qualified_name: "builtins.int"
                }
                args {
                  pretty_printed_name: "builtins.float"
                  fully_qualified_name: "builtins.float"
                }
              }
              fully_qualified_name: "typing.Iterable"
            }
            args {
              pretty_printed_name: "None"
              kind: NONE
            }
          }
          fully_qualified_name: "requests.sessions._ParamsMappingValueType"
        }
      }
      args {
        pretty_printed_name: "typing.Iterable[Tuple[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]]]"
        args {
          pretty_printed_name: "Tuple[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]]"
          kind: TUPLE
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              args {
                pretty_printed_name: "builtins.int"
                fully_qualified_name: "builtins.int"
              }
              args {
                pretty_printed_name: "builtins.float"
                fully_qualified_name: "builtins.float"
              }
            }
            fully_qualified_name: "requests.sessions._ParamsMappingKeyType"
          }
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              args {
                pretty_printed_name: "builtins.int"
                fully_qualified_name: "builtins.int"
              }
              args {
                pretty_printed_name: "builtins.float"
                fully_qualified_name: "builtins.float"
              }
              args {
                pretty_printed_name: "typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
                args {
                  pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
                  kind: UNION
                  args {
                    pretty_printed_name: "builtins.str"
                    fully_qualified_name: "builtins.str"
                  }
                  args {
                    pretty_printed_name: "builtins.bytes"
                    fully_qualified_name: "builtins.bytes"
                  }
                  args {
                    pretty_printed_name: "builtins.int"
                    fully_qualified_name: "builtins.int"
                  }
                  args {
                    pretty_printed_name: "builtins.float"
                    fully_qualified_name: "builtins.float"
                  }
                }
                fully_qualified_name: "typing.Iterable"
              }
              args {
                pretty_printed_name: "None"
                kind: NONE
              }
            }
            fully_qualified_name: "requests.sessions._ParamsMappingValueType"
          }
        }
        fully_qualified_name: "typing.Iterable"
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "data"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "headers"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "cookies"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "files"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "auth"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "timeout"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "allow_redirects"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    has_default: true
  }
  parameters {
    name: "proxies"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "hooks"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "stream"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "verify"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "cert"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "json"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "head"
  fully_qualified_name: "requests.api.head"
  return_annotation {
    pretty_printed_name: "requests.models.Response"
    fully_qualified_name: "requests.models.Response"
  }
  parameters {
    name: "url"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,builtins.bytes]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
  }
  parameters {
    name: "params"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[_typeshed.SupportsItems[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]],Tuple[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]],typing.Iterable[Tuple[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]]],builtins.str,builtins.bytes,None]"
      kind: UNION
      args {
        pretty_printed_name: "_typeshed.SupportsItems[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]]"
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "builtins.int"
              fully_qualified_name: "builtins.int"
            }
            args {
              pretty_printed_name: "builtins.float"
              fully_qualified_name: "builtins.float"
            }
          }
          fully_qualified_name: "requests.sessions._ParamsMappingKeyType"
        }
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "builtins.int"
              fully_qualified_name: "builtins.int"
            }
            args {
              pretty_printed_name: "builtins.float"
              fully_qualified_name: "builtins.float"
            }
            args {
              pretty_printed_name: "typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
              args {
                pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
                kind: UNION
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
                args {
                  pretty_printed_name: "builtins.bytes"
                  fully_qualified_name: "builtins.bytes"
                }
                args {
                  pretty_printed_name: "builtins.int"
                  fully_qualified_name: "builtins.int"
                }
                args {
                  pretty_printed_name: "builtins.float"
                  fully_qualified_name: "builtins.float"
                }
              }
              fully_qualified_name: "typing.Iterable"
            }
            args {
              pretty_printed_name: "None"
              kind: NONE
            }
          }
          fully_qualified_name: "requests.sessions._ParamsMappingValueType"
        }
        fully_qualified_name: "_typeshed.SupportsItems"
      }
      args {
        pretty_printed_name: "Tuple[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]]"
        kind: TUPLE
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "builtins.int"
              fully_qualified_name: "builtins.int"
            }
            args {
              pretty_printed_name: "builtins.float"
              fully_qualified_name: "builtins.float"
            }
          }
          fully_qualified_name: "requests.sessions._ParamsMappingKeyType"
        }
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "builtins.int"
              fully_qualified_name: "builtins.int"
            }
            args {
              pretty_printed_name: "builtins.float"
              fully_qualified_name: "builtins.float"
            }
            args {
              pretty_printed_name: "typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
              args {
                pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
                kind: UNION
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
                args {
                  pretty_printed_name: "builtins.bytes"
                  fully_qualified_name: "builtins.bytes"
                }
                args {
                  pretty_printed_name: "builtins.int"
                  fully_qualified_name: "builtins.int"
                }
                args {
                  pretty_printed_name: "builtins.float"
                  fully_qualified_name: "builtins.float"
                }
              }
              fully_qualified_name: "typing.Iterable"
            }
            args {
              pretty_printed_name: "None"
              kind: NONE
            }
          }
          fully_qualified_name: "requests.sessions._ParamsMappingValueType"
        }
      }
      args {
        pretty_printed_name: "typing.Iterable[Tuple[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]]]"
        args {
          pretty_printed_name: "Tuple[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]]"
          kind: TUPLE
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              args {
                pretty_printed_name: "builtins.int"
                fully_qualified_name: "builtins.int"
              }
              args {
                pretty_printed_name: "builtins.float"
                fully_qualified_name: "builtins.float"
              }
            }
            fully_qualified_name: "requests.sessions._ParamsMappingKeyType"
          }
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              args {
                pretty_printed_name: "builtins.int"
                fully_qualified_name: "builtins.int"
              }
              args {
                pretty_printed_name: "builtins.float"
                fully_qualified_name: "builtins.float"
              }
              args {
                pretty_printed_name: "typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
                args {
                  pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
                  kind: UNION
                  args {
                    pretty_printed_name: "builtins.str"
                    fully_qualified_name: "builtins.str"
                  }
                  args {
                    pretty_printed_name: "builtins.bytes"
                    fully_qualified_name: "builtins.bytes"
                  }
                  args {
                    pretty_printed_name: "builtins.int"
                    fully_qualified_name: "builtins.int"
                  }
                  args {
                    pretty_printed_name: "builtins.float"
                    fully_qualified_name: "builtins.float"
                  }
                }
                fully_qualified_name: "typing.Iterable"
              }
              args {
                pretty_printed_name: "None"
                kind: NONE
              }
            }
            fully_qualified_name: "requests.sessions._ParamsMappingValueType"
          }
        }
        fully_qualified_name: "typing.Iterable"
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "data"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "headers"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "cookies"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "files"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "auth"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "timeout"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "allow_redirects"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    has_default: true
  }
  parameters {
    name: "proxies"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "hooks"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "stream"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "verify"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "cert"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "json"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "post"
  fully_qualified_name: "requests.api.post"
  return_annotation {
    pretty_printed_name: "requests.models.Response"
    fully_qualified_name: "requests.models.Response"
  }
  parameters {
    name: "url"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,builtins.bytes]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
  }
  parameters {
    name: "data"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[None,builtins.str,builtins.bytes,typing.Mapping[builtins.str,Any],typing.Mapping[builtins.str,Any],typing.Iterable[Tuple[builtins.str,Union[builtins.str,None]]],typing.IO[Any]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[None,builtins.str,builtins.bytes,typing.Mapping[builtins.str,Any],typing.Mapping[builtins.str,Any],typing.Iterable[Tuple[builtins.str,Union[builtins.str,None]]],typing.IO[Any]]"
        kind: UNION
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "typing.Mapping[builtins.str,Any]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "typing.Mapping"
        }
        args {
          pretty_printed_name: "typing.Mapping[builtins.str,Any]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "typing.Mapping"
        }
        args {
          pretty_printed_name: "typing.Iterable[Tuple[builtins.str,Union[builtins.str,None]]]"
          args {
            pretty_printed_name: "Tuple[builtins.str,Union[builtins.str,None]]"
            kind: TUPLE
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "Union[builtins.str,None]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "None"
                kind: NONE
              }
            }
          }
          fully_qualified_name: "typing.Iterable"
        }
        args {
          pretty_printed_name: "typing.IO[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "typing.IO"
        }
      }
      fully_qualified_name: "requests.sessions._Data"
    }
    has_default: true
  }
  parameters {
    name: "json"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "params"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[_typeshed.SupportsItems[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]],Tuple[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]],typing.Iterable[Tuple[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]]],builtins.str,builtins.bytes,None]"
      kind: UNION
      args {
        pretty_printed_name: "_typeshed.SupportsItems[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]]"
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "builtins.int"
              fully_qualified_name: "builtins.int"
            }
            args {
              pretty_printed_name: "builtins.float"
              fully_qualified_name: "builtins.float"
            }
          }
          fully_qualified_name: "requests.sessions._ParamsMappingKeyType"
        }
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "builtins.int"
              fully_qualified_name: "builtins.int"
            }
            args {
              pretty_printed_name: "builtins.float"
              fully_qualified_name: "builtins.float"
            }
            args {
              pretty_printed_name: "typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
              args {
                pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
                kind: UNION
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
                args {
                  pretty_printed_name: "builtins.bytes"
                  fully_qualified_name: "builtins.bytes"
                }
                args {
                  pretty_printed_name: "builtins.int"
                  fully_qualified_name: "builtins.int"
                }
                args {
                  pretty_printed_name: "builtins.float"
                  fully_qualified_name: "builtins.float"
                }
              }
              fully_qualified_name: "typing.Iterable"
            }
            args {
              pretty_printed_name: "None"
              kind: NONE
            }
          }
          fully_qualified_name: "requests.sessions._ParamsMappingValueType"
        }
        fully_qualified_name: "_typeshed.SupportsItems"
      }
      args {
        pretty_printed_name: "Tuple[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]]"
        kind: TUPLE
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "builtins.int"
              fully_qualified_name: "builtins.int"
            }
            args {
              pretty_printed_name: "builtins.float"
              fully_qualified_name: "builtins.float"
            }
          }
          fully_qualified_name: "requests.sessions._ParamsMappingKeyType"
        }
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "builtins.int"
              fully_qualified_name: "builtins.int"
            }
            args {
              pretty_printed_name: "builtins.float"
              fully_qualified_name: "builtins.float"
            }
            args {
              pretty_printed_name: "typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
              args {
                pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
                kind: UNION
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
                args {
                  pretty_printed_name: "builtins.bytes"
                  fully_qualified_name: "builtins.bytes"
                }
                args {
                  pretty_printed_name: "builtins.int"
                  fully_qualified_name: "builtins.int"
                }
                args {
                  pretty_printed_name: "builtins.float"
                  fully_qualified_name: "builtins.float"
                }
              }
              fully_qualified_name: "typing.Iterable"
            }
            args {
              pretty_printed_name: "None"
              kind: NONE
            }
          }
          fully_qualified_name: "requests.sessions._ParamsMappingValueType"
        }
      }
      args {
        pretty_printed_name: "typing.Iterable[Tuple[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]]]"
        args {
          pretty_printed_name: "Tuple[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]]"
          kind: TUPLE
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              args {
                pretty_printed_name: "builtins.int"
                fully_qualified_name: "builtins.int"
              }
              args {
                pretty_printed_name: "builtins.float"
                fully_qualified_name: "builtins.float"
              }
            }
            fully_qualified_name: "requests.sessions._ParamsMappingKeyType"
          }
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              args {
                pretty_printed_name: "builtins.int"
                fully_qualified_name: "builtins.int"
              }
              args {
                pretty_printed_name: "builtins.float"
                fully_qualified_name: "builtins.float"
              }
              args {
                pretty_printed_name: "typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
                args {
                  pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
                  kind: UNION
                  args {
                    pretty_printed_name: "builtins.str"
                    fully_qualified_name: "builtins.str"
                  }
                  args {
                    pretty_printed_name: "builtins.bytes"
                    fully_qualified_name: "builtins.bytes"
                  }
                  args {
                    pretty_printed_name: "builtins.int"
                    fully_qualified_name: "builtins.int"
                  }
                  args {
                    pretty_printed_name: "builtins.float"
                    fully_qualified_name: "builtins.float"
                  }
                }
                fully_qualified_name: "typing.Iterable"
              }
              args {
                pretty_printed_name: "None"
                kind: NONE
              }
            }
            fully_qualified_name: "requests.sessions._ParamsMappingValueType"
          }
        }
        fully_qualified_name: "typing.Iterable"
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "headers"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "cookies"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "files"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "auth"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "timeout"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "allow_redirects"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    has_default: true
  }
  parameters {
    name: "proxies"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "hooks"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "stream"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "verify"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "cert"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "put"
  fully_qualified_name: "requests.api.put"
  return_annotation {
    pretty_printed_name: "requests.models.Response"
    fully_qualified_name: "requests.models.Response"
  }
  parameters {
    name: "url"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,builtins.bytes]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
  }
  parameters {
    name: "data"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[None,builtins.str,builtins.bytes,typing.Mapping[builtins.str,Any],typing.Mapping[builtins.str,Any],typing.Iterable[Tuple[builtins.str,Union[builtins.str,None]]],typing.IO[Any]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[None,builtins.str,builtins.bytes,typing.Mapping[builtins.str,Any],typing.Mapping[builtins.str,Any],typing.Iterable[Tuple[builtins.str,Union[builtins.str,None]]],typing.IO[Any]]"
        kind: UNION
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "typing.Mapping[builtins.str,Any]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "typing.Mapping"
        }
        args {
          pretty_printed_name: "typing.Mapping[builtins.str,Any]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "typing.Mapping"
        }
        args {
          pretty_printed_name: "typing.Iterable[Tuple[builtins.str,Union[builtins.str,None]]]"
          args {
            pretty_printed_name: "Tuple[builtins.str,Union[builtins.str,None]]"
            kind: TUPLE
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "Union[builtins.str,None]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "None"
                kind: NONE
              }
            }
          }
          fully_qualified_name: "typing.Iterable"
        }
        args {
          pretty_printed_name: "typing.IO[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "typing.IO"
        }
      }
      fully_qualified_name: "requests.sessions._Data"
    }
    has_default: true
  }
  parameters {
    name: "params"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[_typeshed.SupportsItems[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]],Tuple[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]],typing.Iterable[Tuple[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]]],builtins.str,builtins.bytes,None]"
      kind: UNION
      args {
        pretty_printed_name: "_typeshed.SupportsItems[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]]"
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "builtins.int"
              fully_qualified_name: "builtins.int"
            }
            args {
              pretty_printed_name: "builtins.float"
              fully_qualified_name: "builtins.float"
            }
          }
          fully_qualified_name: "requests.sessions._ParamsMappingKeyType"
        }
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "builtins.int"
              fully_qualified_name: "builtins.int"
            }
            args {
              pretty_printed_name: "builtins.float"
              fully_qualified_name: "builtins.float"
            }
            args {
              pretty_printed_name: "typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
              args {
                pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
                kind: UNION
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
                args {
                  pretty_printed_name: "builtins.bytes"
                  fully_qualified_name: "builtins.bytes"
                }
                args {
                  pretty_printed_name: "builtins.int"
                  fully_qualified_name: "builtins.int"
                }
                args {
                  pretty_printed_name: "builtins.float"
                  fully_qualified_name: "builtins.float"
                }
              }
              fully_qualified_name: "typing.Iterable"
            }
            args {
              pretty_printed_name: "None"
              kind: NONE
            }
          }
          fully_qualified_name: "requests.sessions._ParamsMappingValueType"
        }
        fully_qualified_name: "_typeshed.SupportsItems"
      }
      args {
        pretty_printed_name: "Tuple[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]]"
        kind: TUPLE
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "builtins.int"
              fully_qualified_name: "builtins.int"
            }
            args {
              pretty_printed_name: "builtins.float"
              fully_qualified_name: "builtins.float"
            }
          }
          fully_qualified_name: "requests.sessions._ParamsMappingKeyType"
        }
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "builtins.int"
              fully_qualified_name: "builtins.int"
            }
            args {
              pretty_printed_name: "builtins.float"
              fully_qualified_name: "builtins.float"
            }
            args {
              pretty_printed_name: "typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
              args {
                pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
                kind: UNION
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
                args {
                  pretty_printed_name: "builtins.bytes"
                  fully_qualified_name: "builtins.bytes"
                }
                args {
                  pretty_printed_name: "builtins.int"
                  fully_qualified_name: "builtins.int"
                }
                args {
                  pretty_printed_name: "builtins.float"
                  fully_qualified_name: "builtins.float"
                }
              }
              fully_qualified_name: "typing.Iterable"
            }
            args {
              pretty_printed_name: "None"
              kind: NONE
            }
          }
          fully_qualified_name: "requests.sessions._ParamsMappingValueType"
        }
      }
      args {
        pretty_printed_name: "typing.Iterable[Tuple[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]]]"
        args {
          pretty_printed_name: "Tuple[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]]"
          kind: TUPLE
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              args {
                pretty_printed_name: "builtins.int"
                fully_qualified_name: "builtins.int"
              }
              args {
                pretty_printed_name: "builtins.float"
                fully_qualified_name: "builtins.float"
              }
            }
            fully_qualified_name: "requests.sessions._ParamsMappingKeyType"
          }
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              args {
                pretty_printed_name: "builtins.int"
                fully_qualified_name: "builtins.int"
              }
              args {
                pretty_printed_name: "builtins.float"
                fully_qualified_name: "builtins.float"
              }
              args {
                pretty_printed_name: "typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
                args {
                  pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
                  kind: UNION
                  args {
                    pretty_printed_name: "builtins.str"
                    fully_qualified_name: "builtins.str"
                  }
                  args {
                    pretty_printed_name: "builtins.bytes"
                    fully_qualified_name: "builtins.bytes"
                  }
                  args {
                    pretty_printed_name: "builtins.int"
                    fully_qualified_name: "builtins.int"
                  }
                  args {
                    pretty_printed_name: "builtins.float"
                    fully_qualified_name: "builtins.float"
                  }
                }
                fully_qualified_name: "typing.Iterable"
              }
              args {
                pretty_printed_name: "None"
                kind: NONE
              }
            }
            fully_qualified_name: "requests.sessions._ParamsMappingValueType"
          }
        }
        fully_qualified_name: "typing.Iterable"
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "headers"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "cookies"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "files"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "auth"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "timeout"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "allow_redirects"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    has_default: true
  }
  parameters {
    name: "proxies"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "hooks"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "stream"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "verify"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "cert"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "json"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "patch"
  fully_qualified_name: "requests.api.patch"
  return_annotation {
    pretty_printed_name: "requests.models.Response"
    fully_qualified_name: "requests.models.Response"
  }
  parameters {
    name: "url"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,builtins.bytes]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
  }
  parameters {
    name: "data"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[None,builtins.str,builtins.bytes,typing.Mapping[builtins.str,Any],typing.Mapping[builtins.str,Any],typing.Iterable[Tuple[builtins.str,Union[builtins.str,None]]],typing.IO[Any]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[None,builtins.str,builtins.bytes,typing.Mapping[builtins.str,Any],typing.Mapping[builtins.str,Any],typing.Iterable[Tuple[builtins.str,Union[builtins.str,None]]],typing.IO[Any]]"
        kind: UNION
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "typing.Mapping[builtins.str,Any]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "typing.Mapping"
        }
        args {
          pretty_printed_name: "typing.Mapping[builtins.str,Any]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "typing.Mapping"
        }
        args {
          pretty_printed_name: "typing.Iterable[Tuple[builtins.str,Union[builtins.str,None]]]"
          args {
            pretty_printed_name: "Tuple[builtins.str,Union[builtins.str,None]]"
            kind: TUPLE
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "Union[builtins.str,None]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "None"
                kind: NONE
              }
            }
          }
          fully_qualified_name: "typing.Iterable"
        }
        args {
          pretty_printed_name: "typing.IO[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "typing.IO"
        }
      }
      fully_qualified_name: "requests.sessions._Data"
    }
    has_default: true
  }
  parameters {
    name: "params"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[_typeshed.SupportsItems[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]],Tuple[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]],typing.Iterable[Tuple[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]]],builtins.str,builtins.bytes,None]"
      kind: UNION
      args {
        pretty_printed_name: "_typeshed.SupportsItems[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]]"
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "builtins.int"
              fully_qualified_name: "builtins.int"
            }
            args {
              pretty_printed_name: "builtins.float"
              fully_qualified_name: "builtins.float"
            }
          }
          fully_qualified_name: "requests.sessions._ParamsMappingKeyType"
        }
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "builtins.int"
              fully_qualified_name: "builtins.int"
            }
            args {
              pretty_printed_name: "builtins.float"
              fully_qualified_name: "builtins.float"
            }
            args {
              pretty_printed_name: "typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
              args {
                pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
                kind: UNION
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
                args {
                  pretty_printed_name: "builtins.bytes"
                  fully_qualified_name: "builtins.bytes"
                }
                args {
                  pretty_printed_name: "builtins.int"
                  fully_qualified_name: "builtins.int"
                }
                args {
                  pretty_printed_name: "builtins.float"
                  fully_qualified_name: "builtins.float"
                }
              }
              fully_qualified_name: "typing.Iterable"
            }
            args {
              pretty_printed_name: "None"
              kind: NONE
            }
          }
          fully_qualified_name: "requests.sessions._ParamsMappingValueType"
        }
        fully_qualified_name: "_typeshed.SupportsItems"
      }
      args {
        pretty_printed_name: "Tuple[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]]"
        kind: TUPLE
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "builtins.int"
              fully_qualified_name: "builtins.int"
            }
            args {
              pretty_printed_name: "builtins.float"
              fully_qualified_name: "builtins.float"
            }
          }
          fully_qualified_name: "requests.sessions._ParamsMappingKeyType"
        }
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "builtins.int"
              fully_qualified_name: "builtins.int"
            }
            args {
              pretty_printed_name: "builtins.float"
              fully_qualified_name: "builtins.float"
            }
            args {
              pretty_printed_name: "typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
              args {
                pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
                kind: UNION
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
                args {
                  pretty_printed_name: "builtins.bytes"
                  fully_qualified_name: "builtins.bytes"
                }
                args {
                  pretty_printed_name: "builtins.int"
                  fully_qualified_name: "builtins.int"
                }
                args {
                  pretty_printed_name: "builtins.float"
                  fully_qualified_name: "builtins.float"
                }
              }
              fully_qualified_name: "typing.Iterable"
            }
            args {
              pretty_printed_name: "None"
              kind: NONE
            }
          }
          fully_qualified_name: "requests.sessions._ParamsMappingValueType"
        }
      }
      args {
        pretty_printed_name: "typing.Iterable[Tuple[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]]]"
        args {
          pretty_printed_name: "Tuple[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]]"
          kind: TUPLE
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              args {
                pretty_printed_name: "builtins.int"
                fully_qualified_name: "builtins.int"
              }
              args {
                pretty_printed_name: "builtins.float"
                fully_qualified_name: "builtins.float"
              }
            }
            fully_qualified_name: "requests.sessions._ParamsMappingKeyType"
          }
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              args {
                pretty_printed_name: "builtins.int"
                fully_qualified_name: "builtins.int"
              }
              args {
                pretty_printed_name: "builtins.float"
                fully_qualified_name: "builtins.float"
              }
              args {
                pretty_printed_name: "typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
                args {
                  pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
                  kind: UNION
                  args {
                    pretty_printed_name: "builtins.str"
                    fully_qualified_name: "builtins.str"
                  }
                  args {
                    pretty_printed_name: "builtins.bytes"
                    fully_qualified_name: "builtins.bytes"
                  }
                  args {
                    pretty_printed_name: "builtins.int"
                    fully_qualified_name: "builtins.int"
                  }
                  args {
                    pretty_printed_name: "builtins.float"
                    fully_qualified_name: "builtins.float"
                  }
                }
                fully_qualified_name: "typing.Iterable"
              }
              args {
                pretty_printed_name: "None"
                kind: NONE
              }
            }
            fully_qualified_name: "requests.sessions._ParamsMappingValueType"
          }
        }
        fully_qualified_name: "typing.Iterable"
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "headers"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "cookies"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "files"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "auth"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "timeout"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "allow_redirects"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    has_default: true
  }
  parameters {
    name: "proxies"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "hooks"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "stream"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "verify"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "cert"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "json"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "delete"
  fully_qualified_name: "requests.api.delete"
  return_annotation {
    pretty_printed_name: "requests.models.Response"
    fully_qualified_name: "requests.models.Response"
  }
  parameters {
    name: "url"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,builtins.bytes]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
  }
  parameters {
    name: "params"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[_typeshed.SupportsItems[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]],Tuple[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]],typing.Iterable[Tuple[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]]],builtins.str,builtins.bytes,None]"
      kind: UNION
      args {
        pretty_printed_name: "_typeshed.SupportsItems[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]]"
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "builtins.int"
              fully_qualified_name: "builtins.int"
            }
            args {
              pretty_printed_name: "builtins.float"
              fully_qualified_name: "builtins.float"
            }
          }
          fully_qualified_name: "requests.sessions._ParamsMappingKeyType"
        }
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "builtins.int"
              fully_qualified_name: "builtins.int"
            }
            args {
              pretty_printed_name: "builtins.float"
              fully_qualified_name: "builtins.float"
            }
            args {
              pretty_printed_name: "typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
              args {
                pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
                kind: UNION
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
                args {
                  pretty_printed_name: "builtins.bytes"
                  fully_qualified_name: "builtins.bytes"
                }
                args {
                  pretty_printed_name: "builtins.int"
                  fully_qualified_name: "builtins.int"
                }
                args {
                  pretty_printed_name: "builtins.float"
                  fully_qualified_name: "builtins.float"
                }
              }
              fully_qualified_name: "typing.Iterable"
            }
            args {
              pretty_printed_name: "None"
              kind: NONE
            }
          }
          fully_qualified_name: "requests.sessions._ParamsMappingValueType"
        }
        fully_qualified_name: "_typeshed.SupportsItems"
      }
      args {
        pretty_printed_name: "Tuple[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]]"
        kind: TUPLE
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "builtins.int"
              fully_qualified_name: "builtins.int"
            }
            args {
              pretty_printed_name: "builtins.float"
              fully_qualified_name: "builtins.float"
            }
          }
          fully_qualified_name: "requests.sessions._ParamsMappingKeyType"
        }
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "builtins.int"
              fully_qualified_name: "builtins.int"
            }
            args {
              pretty_printed_name: "builtins.float"
              fully_qualified_name: "builtins.float"
            }
            args {
              pretty_printed_name: "typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
              args {
                pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
                kind: UNION
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
                args {
                  pretty_printed_name: "builtins.bytes"
                  fully_qualified_name: "builtins.bytes"
                }
                args {
                  pretty_printed_name: "builtins.int"
                  fully_qualified_name: "builtins.int"
                }
                args {
                  pretty_printed_name: "builtins.float"
                  fully_qualified_name: "builtins.float"
                }
              }
              fully_qualified_name: "typing.Iterable"
            }
            args {
              pretty_printed_name: "None"
              kind: NONE
            }
          }
          fully_qualified_name: "requests.sessions._ParamsMappingValueType"
        }
      }
      args {
        pretty_printed_name: "typing.Iterable[Tuple[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]]]"
        args {
          pretty_printed_name: "Tuple[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]]"
          kind: TUPLE
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              args {
                pretty_printed_name: "builtins.int"
                fully_qualified_name: "builtins.int"
              }
              args {
                pretty_printed_name: "builtins.float"
                fully_qualified_name: "builtins.float"
              }
            }
            fully_qualified_name: "requests.sessions._ParamsMappingKeyType"
          }
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              args {
                pretty_printed_name: "builtins.int"
                fully_qualified_name: "builtins.int"
              }
              args {
                pretty_printed_name: "builtins.float"
                fully_qualified_name: "builtins.float"
              }
              args {
                pretty_printed_name: "typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
                args {
                  pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
                  kind: UNION
                  args {
                    pretty_printed_name: "builtins.str"
                    fully_qualified_name: "builtins.str"
                  }
                  args {
                    pretty_printed_name: "builtins.bytes"
                    fully_qualified_name: "builtins.bytes"
                  }
                  args {
                    pretty_printed_name: "builtins.int"
                    fully_qualified_name: "builtins.int"
                  }
                  args {
                    pretty_printed_name: "builtins.float"
                    fully_qualified_name: "builtins.float"
                  }
                }
                fully_qualified_name: "typing.Iterable"
              }
              args {
                pretty_printed_name: "None"
                kind: NONE
              }
            }
            fully_qualified_name: "requests.sessions._ParamsMappingValueType"
          }
        }
        fully_qualified_name: "typing.Iterable"
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "data"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "headers"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "cookies"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "files"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "auth"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "timeout"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "allow_redirects"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    has_default: true
  }
  parameters {
    name: "proxies"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "hooks"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "stream"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "verify"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "cert"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "json"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
