fully_qualified_name: "requests.sessions"
classes {
  name: "SessionRedirectMixin"
  fully_qualified_name: "requests.sessions.SessionRedirectMixin"
  super_classes: "builtins.object"
  methods {
    name: "resolve_redirects"
    fully_qualified_name: "requests.sessions.SessionRedirectMixin.resolve_redirects"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "resp"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "req"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "stream"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
    parameters {
      name: "timeout"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
    parameters {
      name: "verify"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
    parameters {
      name: "cert"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
    parameters {
      name: "proxies"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "rebuild_auth"
    fully_qualified_name: "requests.sessions.SessionRedirectMixin.rebuild_auth"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "prepared_request"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "response"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "rebuild_proxies"
    fully_qualified_name: "requests.sessions.SessionRedirectMixin.rebuild_proxies"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "prepared_request"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "proxies"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "should_strip_auth"
    fully_qualified_name: "requests.sessions.SessionRedirectMixin.should_strip_auth"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "old_url"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "new_url"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "Session"
  fully_qualified_name: "requests.sessions.Session"
  super_classes: "requests.sessions.SessionRedirectMixin"
  methods {
    name: "__init__"
    fully_qualified_name: "requests.sessions.Session.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "requests.sessions.Session"
        fully_qualified_name: "requests.sessions.Session"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__enter__"
    fully_qualified_name: "requests.sessions.Session.__enter__"
    return_annotation {
      pretty_printed_name: "requests.sessions._SessionT"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "requests.sessions._SessionT"
        kind: TYPE_VAR
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "__exit__"
    fully_qualified_name: "requests.sessions.Session.__exit__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      type_annotation {
        pretty_printed_name: "requests.sessions.Session"
        fully_qualified_name: "requests.sessions.Session"
      }
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "prepare_request"
    fully_qualified_name: "requests.sessions.Session.prepare_request"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "request"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "request"
    fully_qualified_name: "requests.sessions.Session.request"
    return_annotation {
      pretty_printed_name: "requests.models.Response"
      fully_qualified_name: "requests.models.Response"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "requests.sessions.Session"
        fully_qualified_name: "requests.sessions.Session"
      }
    }
    parameters {
      name: "method"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "url"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.str]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
    }
    parameters {
      name: "params"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[_typeshed.SupportsItems[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]],Tuple[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]],typing.Iterable[Tuple[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]]],builtins.str,builtins.bytes,None]"
        kind: UNION
        args {
          pretty_printed_name: "_typeshed.SupportsItems[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]]"
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              args {
                pretty_printed_name: "builtins.int"
                fully_qualified_name: "builtins.int"
              }
              args {
                pretty_printed_name: "builtins.float"
                fully_qualified_name: "builtins.float"
              }
            }
            fully_qualified_name: "requests.sessions._ParamsMappingKeyType"
          }
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              args {
                pretty_printed_name: "builtins.int"
                fully_qualified_name: "builtins.int"
              }
              args {
                pretty_printed_name: "builtins.float"
                fully_qualified_name: "builtins.float"
              }
              args {
                pretty_printed_name: "typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
                args {
                  pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
                  kind: UNION
                  args {
                    pretty_printed_name: "builtins.str"
                    fully_qualified_name: "builtins.str"
                  }
                  args {
                    pretty_printed_name: "builtins.bytes"
                    fully_qualified_name: "builtins.bytes"
                  }
                  args {
                    pretty_printed_name: "builtins.int"
                    fully_qualified_name: "builtins.int"
                  }
                  args {
                    pretty_printed_name: "builtins.float"
                    fully_qualified_name: "builtins.float"
                  }
                }
                fully_qualified_name: "typing.Iterable"
              }
              args {
                pretty_printed_name: "None"
                kind: NONE
              }
            }
            fully_qualified_name: "requests.sessions._ParamsMappingValueType"
          }
          fully_qualified_name: "_typeshed.SupportsItems"
        }
        args {
          pretty_printed_name: "Tuple[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]]"
          kind: TUPLE
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              args {
                pretty_printed_name: "builtins.int"
                fully_qualified_name: "builtins.int"
              }
              args {
                pretty_printed_name: "builtins.float"
                fully_qualified_name: "builtins.float"
              }
            }
            fully_qualified_name: "requests.sessions._ParamsMappingKeyType"
          }
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              args {
                pretty_printed_name: "builtins.int"
                fully_qualified_name: "builtins.int"
              }
              args {
                pretty_printed_name: "builtins.float"
                fully_qualified_name: "builtins.float"
              }
              args {
                pretty_printed_name: "typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
                args {
                  pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
                  kind: UNION
                  args {
                    pretty_printed_name: "builtins.str"
                    fully_qualified_name: "builtins.str"
                  }
                  args {
                    pretty_printed_name: "builtins.bytes"
                    fully_qualified_name: "builtins.bytes"
                  }
                  args {
                    pretty_printed_name: "builtins.int"
                    fully_qualified_name: "builtins.int"
                  }
                  args {
                    pretty_printed_name: "builtins.float"
                    fully_qualified_name: "builtins.float"
                  }
                }
                fully_qualified_name: "typing.Iterable"
              }
              args {
                pretty_printed_name: "None"
                kind: NONE
              }
            }
            fully_qualified_name: "requests.sessions._ParamsMappingValueType"
          }
        }
        args {
          pretty_printed_name: "typing.Iterable[Tuple[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]]]"
          args {
            pretty_printed_name: "Tuple[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]]"
            kind: TUPLE
            args {
              pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
              kind: TYPE_ALIAS
              args {
                pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
                kind: UNION
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
                args {
                  pretty_printed_name: "builtins.bytes"
                  fully_qualified_name: "builtins.bytes"
                }
                args {
                  pretty_printed_name: "builtins.int"
                  fully_qualified_name: "builtins.int"
                }
                args {
                  pretty_printed_name: "builtins.float"
                  fully_qualified_name: "builtins.float"
                }
              }
              fully_qualified_name: "requests.sessions._ParamsMappingKeyType"
            }
            args {
              pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]"
              kind: TYPE_ALIAS
              args {
                pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]"
                kind: UNION
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
                args {
                  pretty_printed_name: "builtins.bytes"
                  fully_qualified_name: "builtins.bytes"
                }
                args {
                  pretty_printed_name: "builtins.int"
                  fully_qualified_name: "builtins.int"
                }
                args {
                  pretty_printed_name: "builtins.float"
                  fully_qualified_name: "builtins.float"
                }
                args {
                  pretty_printed_name: "typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
                  args {
                    pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
                    kind: UNION
                    args {
                      pretty_printed_name: "builtins.str"
                      fully_qualified_name: "builtins.str"
                    }
                    args {
                      pretty_printed_name: "builtins.bytes"
                      fully_qualified_name: "builtins.bytes"
                    }
                    args {
                      pretty_printed_name: "builtins.int"
                      fully_qualified_name: "builtins.int"
                    }
                    args {
                      pretty_printed_name: "builtins.float"
                      fully_qualified_name: "builtins.float"
                    }
                  }
                  fully_qualified_name: "typing.Iterable"
                }
                args {
                  pretty_printed_name: "None"
                  kind: NONE
                }
              }
              fully_qualified_name: "requests.sessions._ParamsMappingValueType"
            }
          }
          fully_qualified_name: "typing.Iterable"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "data"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[None,builtins.str,builtins.bytes,typing.Mapping[builtins.str,Any],typing.Mapping[builtins.str,Any],typing.Iterable[Tuple[builtins.str,Union[builtins.str,None]]],typing.IO[Any]]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[None,builtins.str,builtins.bytes,typing.Mapping[builtins.str,Any],typing.Mapping[builtins.str,Any],typing.Iterable[Tuple[builtins.str,Union[builtins.str,None]]],typing.IO[Any]]"
          kind: UNION
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "typing.Mapping[builtins.str,Any]"
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "Any"
              kind: ANY
            }
            fully_qualified_name: "typing.Mapping"
          }
          args {
            pretty_printed_name: "typing.Mapping[builtins.str,Any]"
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "Any"
              kind: ANY
            }
            fully_qualified_name: "typing.Mapping"
          }
          args {
            pretty_printed_name: "typing.Iterable[Tuple[builtins.str,Union[builtins.str,None]]]"
            args {
              pretty_printed_name: "Tuple[builtins.str,Union[builtins.str,None]]"
              kind: TUPLE
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "Union[builtins.str,None]"
                kind: UNION
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
                args {
                  pretty_printed_name: "None"
                  kind: NONE
                }
              }
            }
            fully_qualified_name: "typing.Iterable"
          }
          args {
            pretty_printed_name: "typing.IO[Any]"
            args {
              pretty_printed_name: "Any"
              kind: ANY
            }
            fully_qualified_name: "typing.IO"
          }
        }
        fully_qualified_name: "requests.sessions._Data"
      }
      has_default: true
    }
    parameters {
      name: "headers"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.MutableMapping[builtins.str,builtins.str],None]"
        kind: UNION
        args {
          pretty_printed_name: "typing.MutableMapping[builtins.str,builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "typing.MutableMapping"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "cookies"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[None,requests.cookies.RequestsCookieJar,typing.MutableMapping[builtins.str,builtins.str]]"
        kind: UNION
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
        args {
          pretty_printed_name: "requests.cookies.RequestsCookieJar"
          fully_qualified_name: "requests.cookies.RequestsCookieJar"
        }
        args {
          pretty_printed_name: "typing.MutableMapping[builtins.str,builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "typing.MutableMapping"
        }
      }
      has_default: true
    }
    parameters {
      name: "files"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.MutableMapping[builtins.str,typing.IO[Any]],None]"
        kind: UNION
        args {
          pretty_printed_name: "typing.MutableMapping[builtins.str,typing.IO[Any]]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "typing.IO[Any]"
            args {
              pretty_printed_name: "Any"
              kind: ANY
            }
            fully_qualified_name: "typing.IO"
          }
          fully_qualified_name: "typing.MutableMapping"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "auth"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[None,Tuple[builtins.str,builtins.str],Any,CallableType[builtins.function]]"
        kind: UNION
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
        args {
          pretty_printed_name: "Tuple[builtins.str,builtins.str]"
          kind: TUPLE
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
      }
      has_default: true
    }
    parameters {
      name: "timeout"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[None,builtins.float,Tuple[builtins.float,builtins.float],Tuple[builtins.float,None]]"
        kind: UNION
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        args {
          pretty_printed_name: "Tuple[builtins.float,builtins.float]"
          kind: TUPLE
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
        }
        args {
          pretty_printed_name: "Tuple[builtins.float,None]"
          kind: TUPLE
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      has_default: true
    }
    parameters {
      name: "allow_redirects"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.bool,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "proxies"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.MutableMapping[builtins.str,builtins.str],None]"
        kind: UNION
        args {
          pretty_printed_name: "typing.MutableMapping[builtins.str,builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "typing.MutableMapping"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "hooks"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.MutableMapping[builtins.str,Union[typing.Iterable[TypeAlias[CallableType[builtins.function]]],TypeAlias[CallableType[builtins.function]]]],None]"
        kind: UNION
        args {
          pretty_printed_name: "typing.MutableMapping[builtins.str,Union[typing.Iterable[TypeAlias[CallableType[builtins.function]]],TypeAlias[CallableType[builtins.function]]]]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "Union[typing.Iterable[TypeAlias[CallableType[builtins.function]]],TypeAlias[CallableType[builtins.function]]]"
            kind: UNION
            args {
              pretty_printed_name: "typing.Iterable[TypeAlias[CallableType[builtins.function]]]"
              args {
                pretty_printed_name: "TypeAlias[CallableType[builtins.function]]"
                kind: TYPE_ALIAS
                args {
                  pretty_printed_name: "CallableType[builtins.function]"
                  kind: CALLABLE
                  args {
                    pretty_printed_name: "builtins.function"
                    fully_qualified_name: "builtins.function"
                  }
                }
                fully_qualified_name: "requests.sessions._Hook"
              }
              fully_qualified_name: "typing.Iterable"
            }
            args {
              pretty_printed_name: "TypeAlias[CallableType[builtins.function]]"
              kind: TYPE_ALIAS
              args {
                pretty_printed_name: "CallableType[builtins.function]"
                kind: CALLABLE
                args {
                  pretty_printed_name: "builtins.function"
                  fully_qualified_name: "builtins.function"
                }
              }
              fully_qualified_name: "requests.sessions._Hook"
            }
          }
          fully_qualified_name: "typing.MutableMapping"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "stream"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.bool,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "verify"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[None,builtins.bool,builtins.str]"
        kind: UNION
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
        args {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      has_default: true
    }
    parameters {
      name: "cert"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,Tuple[builtins.str,builtins.str],None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "Tuple[builtins.str,builtins.str]"
          kind: TUPLE
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "json"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "get"
    fully_qualified_name: "requests.sessions.Session.get"
    return_annotation {
      pretty_printed_name: "requests.models.Response"
      fully_qualified_name: "requests.models.Response"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "requests.sessions.Session"
        fully_qualified_name: "requests.sessions.Session"
      }
    }
    parameters {
      name: "url"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,builtins.bytes]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
      }
    }
    parameters {
      name: "params"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[_typeshed.SupportsItems[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]],Tuple[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]],typing.Iterable[Tuple[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]]],builtins.str,builtins.bytes,None]"
        kind: UNION
        args {
          pretty_printed_name: "_typeshed.SupportsItems[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]]"
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              args {
                pretty_printed_name: "builtins.int"
                fully_qualified_name: "builtins.int"
              }
              args {
                pretty_printed_name: "builtins.float"
                fully_qualified_name: "builtins.float"
              }
            }
            fully_qualified_name: "requests.sessions._ParamsMappingKeyType"
          }
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              args {
                pretty_printed_name: "builtins.int"
                fully_qualified_name: "builtins.int"
              }
              args {
                pretty_printed_name: "builtins.float"
                fully_qualified_name: "builtins.float"
              }
              args {
                pretty_printed_name: "typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
                args {
                  pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
                  kind: UNION
                  args {
                    pretty_printed_name: "builtins.str"
                    fully_qualified_name: "builtins.str"
                  }
                  args {
                    pretty_printed_name: "builtins.bytes"
                    fully_qualified_name: "builtins.bytes"
                  }
                  args {
                    pretty_printed_name: "builtins.int"
                    fully_qualified_name: "builtins.int"
                  }
                  args {
                    pretty_printed_name: "builtins.float"
                    fully_qualified_name: "builtins.float"
                  }
                }
                fully_qualified_name: "typing.Iterable"
              }
              args {
                pretty_printed_name: "None"
                kind: NONE
              }
            }
            fully_qualified_name: "requests.sessions._ParamsMappingValueType"
          }
          fully_qualified_name: "_typeshed.SupportsItems"
        }
        args {
          pretty_printed_name: "Tuple[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]]"
          kind: TUPLE
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              args {
                pretty_printed_name: "builtins.int"
                fully_qualified_name: "builtins.int"
              }
              args {
                pretty_printed_name: "builtins.float"
                fully_qualified_name: "builtins.float"
              }
            }
            fully_qualified_name: "requests.sessions._ParamsMappingKeyType"
          }
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              args {
                pretty_printed_name: "builtins.int"
                fully_qualified_name: "builtins.int"
              }
              args {
                pretty_printed_name: "builtins.float"
                fully_qualified_name: "builtins.float"
              }
              args {
                pretty_printed_name: "typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
                args {
                  pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
                  kind: UNION
                  args {
                    pretty_printed_name: "builtins.str"
                    fully_qualified_name: "builtins.str"
                  }
                  args {
                    pretty_printed_name: "builtins.bytes"
                    fully_qualified_name: "builtins.bytes"
                  }
                  args {
                    pretty_printed_name: "builtins.int"
                    fully_qualified_name: "builtins.int"
                  }
                  args {
                    pretty_printed_name: "builtins.float"
                    fully_qualified_name: "builtins.float"
                  }
                }
                fully_qualified_name: "typing.Iterable"
              }
              args {
                pretty_printed_name: "None"
                kind: NONE
              }
            }
            fully_qualified_name: "requests.sessions._ParamsMappingValueType"
          }
        }
        args {
          pretty_printed_name: "typing.Iterable[Tuple[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]]]"
          args {
            pretty_printed_name: "Tuple[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]]"
            kind: TUPLE
            args {
              pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
              kind: TYPE_ALIAS
              args {
                pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
                kind: UNION
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
                args {
                  pretty_printed_name: "builtins.bytes"
                  fully_qualified_name: "builtins.bytes"
                }
                args {
                  pretty_printed_name: "builtins.int"
                  fully_qualified_name: "builtins.int"
                }
                args {
                  pretty_printed_name: "builtins.float"
                  fully_qualified_name: "builtins.float"
                }
              }
              fully_qualified_name: "requests.sessions._ParamsMappingKeyType"
            }
            args {
              pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]"
              kind: TYPE_ALIAS
              args {
                pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]"
                kind: UNION
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
                args {
                  pretty_printed_name: "builtins.bytes"
                  fully_qualified_name: "builtins.bytes"
                }
                args {
                  pretty_printed_name: "builtins.int"
                  fully_qualified_name: "builtins.int"
                }
                args {
                  pretty_printed_name: "builtins.float"
                  fully_qualified_name: "builtins.float"
                }
                args {
                  pretty_printed_name: "typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
                  args {
                    pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
                    kind: UNION
                    args {
                      pretty_printed_name: "builtins.str"
                      fully_qualified_name: "builtins.str"
                    }
                    args {
                      pretty_printed_name: "builtins.bytes"
                      fully_qualified_name: "builtins.bytes"
                    }
                    args {
                      pretty_printed_name: "builtins.int"
                      fully_qualified_name: "builtins.int"
                    }
                    args {
                      pretty_printed_name: "builtins.float"
                      fully_qualified_name: "builtins.float"
                    }
                  }
                  fully_qualified_name: "typing.Iterable"
                }
                args {
                  pretty_printed_name: "None"
                  kind: NONE
                }
              }
              fully_qualified_name: "requests.sessions._ParamsMappingValueType"
            }
          }
          fully_qualified_name: "typing.Iterable"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "data"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "headers"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "cookies"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "files"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "auth"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "timeout"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "allow_redirects"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    parameters {
      name: "proxies"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "hooks"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "stream"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "verify"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "cert"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "json"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "options"
    fully_qualified_name: "requests.sessions.Session.options"
    return_annotation {
      pretty_printed_name: "requests.models.Response"
      fully_qualified_name: "requests.models.Response"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "requests.sessions.Session"
        fully_qualified_name: "requests.sessions.Session"
      }
    }
    parameters {
      name: "url"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,builtins.bytes]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
      }
    }
    parameters {
      name: "params"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[_typeshed.SupportsItems[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]],Tuple[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]],typing.Iterable[Tuple[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]]],builtins.str,builtins.bytes,None]"
        kind: UNION
        args {
          pretty_printed_name: "_typeshed.SupportsItems[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]]"
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              args {
                pretty_printed_name: "builtins.int"
                fully_qualified_name: "builtins.int"
              }
              args {
                pretty_printed_name: "builtins.float"
                fully_qualified_name: "builtins.float"
              }
            }
            fully_qualified_name: "requests.sessions._ParamsMappingKeyType"
          }
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              args {
                pretty_printed_name: "builtins.int"
                fully_qualified_name: "builtins.int"
              }
              args {
                pretty_printed_name: "builtins.float"
                fully_qualified_name: "builtins.float"
              }
              args {
                pretty_printed_name: "typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
                args {
                  pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
                  kind: UNION
                  args {
                    pretty_printed_name: "builtins.str"
                    fully_qualified_name: "builtins.str"
                  }
                  args {
                    pretty_printed_name: "builtins.bytes"
                    fully_qualified_name: "builtins.bytes"
                  }
                  args {
                    pretty_printed_name: "builtins.int"
                    fully_qualified_name: "builtins.int"
                  }
                  args {
                    pretty_printed_name: "builtins.float"
                    fully_qualified_name: "builtins.float"
                  }
                }
                fully_qualified_name: "typing.Iterable"
              }
              args {
                pretty_printed_name: "None"
                kind: NONE
              }
            }
            fully_qualified_name: "requests.sessions._ParamsMappingValueType"
          }
          fully_qualified_name: "_typeshed.SupportsItems"
        }
        args {
          pretty_printed_name: "Tuple[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]]"
          kind: TUPLE
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              args {
                pretty_printed_name: "builtins.int"
                fully_qualified_name: "builtins.int"
              }
              args {
                pretty_printed_name: "builtins.float"
                fully_qualified_name: "builtins.float"
              }
            }
            fully_qualified_name: "requests.sessions._ParamsMappingKeyType"
          }
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              args {
                pretty_printed_name: "builtins.int"
                fully_qualified_name: "builtins.int"
              }
              args {
                pretty_printed_name: "builtins.float"
                fully_qualified_name: "builtins.float"
              }
              args {
                pretty_printed_name: "typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
                args {
                  pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
                  kind: UNION
                  args {
                    pretty_printed_name: "builtins.str"
                    fully_qualified_name: "builtins.str"
                  }
                  args {
                    pretty_printed_name: "builtins.bytes"
                    fully_qualified_name: "builtins.bytes"
                  }
                  args {
                    pretty_printed_name: "builtins.int"
                    fully_qualified_name: "builtins.int"
                  }
                  args {
                    pretty_printed_name: "builtins.float"
                    fully_qualified_name: "builtins.float"
                  }
                }
                fully_qualified_name: "typing.Iterable"
              }
              args {
                pretty_printed_name: "None"
                kind: NONE
              }
            }
            fully_qualified_name: "requests.sessions._ParamsMappingValueType"
          }
        }
        args {
          pretty_printed_name: "typing.Iterable[Tuple[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]]]"
          args {
            pretty_printed_name: "Tuple[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]]"
            kind: TUPLE
            args {
              pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
              kind: TYPE_ALIAS
              args {
                pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
                kind: UNION
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
                args {
                  pretty_printed_name: "builtins.bytes"
                  fully_qualified_name: "builtins.bytes"
                }
                args {
                  pretty_printed_name: "builtins.int"
                  fully_qualified_name: "builtins.int"
                }
                args {
                  pretty_printed_name: "builtins.float"
                  fully_qualified_name: "builtins.float"
                }
              }
              fully_qualified_name: "requests.sessions._ParamsMappingKeyType"
            }
            args {
              pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]"
              kind: TYPE_ALIAS
              args {
                pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]"
                kind: UNION
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
                args {
                  pretty_printed_name: "builtins.bytes"
                  fully_qualified_name: "builtins.bytes"
                }
                args {
                  pretty_printed_name: "builtins.int"
                  fully_qualified_name: "builtins.int"
                }
                args {
                  pretty_printed_name: "builtins.float"
                  fully_qualified_name: "builtins.float"
                }
                args {
                  pretty_printed_name: "typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
                  args {
                    pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
                    kind: UNION
                    args {
                      pretty_printed_name: "builtins.str"
                      fully_qualified_name: "builtins.str"
                    }
                    args {
                      pretty_printed_name: "builtins.bytes"
                      fully_qualified_name: "builtins.bytes"
                    }
                    args {
                      pretty_printed_name: "builtins.int"
                      fully_qualified_name: "builtins.int"
                    }
                    args {
                      pretty_printed_name: "builtins.float"
                      fully_qualified_name: "builtins.float"
                    }
                  }
                  fully_qualified_name: "typing.Iterable"
                }
                args {
                  pretty_printed_name: "None"
                  kind: NONE
                }
              }
              fully_qualified_name: "requests.sessions._ParamsMappingValueType"
            }
          }
          fully_qualified_name: "typing.Iterable"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "data"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "headers"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "cookies"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "files"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "auth"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "timeout"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "allow_redirects"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    parameters {
      name: "proxies"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "hooks"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "stream"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "verify"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "cert"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "json"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "head"
    fully_qualified_name: "requests.sessions.Session.head"
    return_annotation {
      pretty_printed_name: "requests.models.Response"
      fully_qualified_name: "requests.models.Response"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "requests.sessions.Session"
        fully_qualified_name: "requests.sessions.Session"
      }
    }
    parameters {
      name: "url"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,builtins.bytes]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
      }
    }
    parameters {
      name: "params"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[_typeshed.SupportsItems[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]],Tuple[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]],typing.Iterable[Tuple[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]]],builtins.str,builtins.bytes,None]"
        kind: UNION
        args {
          pretty_printed_name: "_typeshed.SupportsItems[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]]"
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              args {
                pretty_printed_name: "builtins.int"
                fully_qualified_name: "builtins.int"
              }
              args {
                pretty_printed_name: "builtins.float"
                fully_qualified_name: "builtins.float"
              }
            }
            fully_qualified_name: "requests.sessions._ParamsMappingKeyType"
          }
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              args {
                pretty_printed_name: "builtins.int"
                fully_qualified_name: "builtins.int"
              }
              args {
                pretty_printed_name: "builtins.float"
                fully_qualified_name: "builtins.float"
              }
              args {
                pretty_printed_name: "typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
                args {
                  pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
                  kind: UNION
                  args {
                    pretty_printed_name: "builtins.str"
                    fully_qualified_name: "builtins.str"
                  }
                  args {
                    pretty_printed_name: "builtins.bytes"
                    fully_qualified_name: "builtins.bytes"
                  }
                  args {
                    pretty_printed_name: "builtins.int"
                    fully_qualified_name: "builtins.int"
                  }
                  args {
                    pretty_printed_name: "builtins.float"
                    fully_qualified_name: "builtins.float"
                  }
                }
                fully_qualified_name: "typing.Iterable"
              }
              args {
                pretty_printed_name: "None"
                kind: NONE
              }
            }
            fully_qualified_name: "requests.sessions._ParamsMappingValueType"
          }
          fully_qualified_name: "_typeshed.SupportsItems"
        }
        args {
          pretty_printed_name: "Tuple[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]]"
          kind: TUPLE
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              args {
                pretty_printed_name: "builtins.int"
                fully_qualified_name: "builtins.int"
              }
              args {
                pretty_printed_name: "builtins.float"
                fully_qualified_name: "builtins.float"
              }
            }
            fully_qualified_name: "requests.sessions._ParamsMappingKeyType"
          }
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              args {
                pretty_printed_name: "builtins.int"
                fully_qualified_name: "builtins.int"
              }
              args {
                pretty_printed_name: "builtins.float"
                fully_qualified_name: "builtins.float"
              }
              args {
                pretty_printed_name: "typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
                args {
                  pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
                  kind: UNION
                  args {
                    pretty_printed_name: "builtins.str"
                    fully_qualified_name: "builtins.str"
                  }
                  args {
                    pretty_printed_name: "builtins.bytes"
                    fully_qualified_name: "builtins.bytes"
                  }
                  args {
                    pretty_printed_name: "builtins.int"
                    fully_qualified_name: "builtins.int"
                  }
                  args {
                    pretty_printed_name: "builtins.float"
                    fully_qualified_name: "builtins.float"
                  }
                }
                fully_qualified_name: "typing.Iterable"
              }
              args {
                pretty_printed_name: "None"
                kind: NONE
              }
            }
            fully_qualified_name: "requests.sessions._ParamsMappingValueType"
          }
        }
        args {
          pretty_printed_name: "typing.Iterable[Tuple[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]]]"
          args {
            pretty_printed_name: "Tuple[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]]"
            kind: TUPLE
            args {
              pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
              kind: TYPE_ALIAS
              args {
                pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
                kind: UNION
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
                args {
                  pretty_printed_name: "builtins.bytes"
                  fully_qualified_name: "builtins.bytes"
                }
                args {
                  pretty_printed_name: "builtins.int"
                  fully_qualified_name: "builtins.int"
                }
                args {
                  pretty_printed_name: "builtins.float"
                  fully_qualified_name: "builtins.float"
                }
              }
              fully_qualified_name: "requests.sessions._ParamsMappingKeyType"
            }
            args {
              pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]"
              kind: TYPE_ALIAS
              args {
                pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]"
                kind: UNION
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
                args {
                  pretty_printed_name: "builtins.bytes"
                  fully_qualified_name: "builtins.bytes"
                }
                args {
                  pretty_printed_name: "builtins.int"
                  fully_qualified_name: "builtins.int"
                }
                args {
                  pretty_printed_name: "builtins.float"
                  fully_qualified_name: "builtins.float"
                }
                args {
                  pretty_printed_name: "typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
                  args {
                    pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
                    kind: UNION
                    args {
                      pretty_printed_name: "builtins.str"
                      fully_qualified_name: "builtins.str"
                    }
                    args {
                      pretty_printed_name: "builtins.bytes"
                      fully_qualified_name: "builtins.bytes"
                    }
                    args {
                      pretty_printed_name: "builtins.int"
                      fully_qualified_name: "builtins.int"
                    }
                    args {
                      pretty_printed_name: "builtins.float"
                      fully_qualified_name: "builtins.float"
                    }
                  }
                  fully_qualified_name: "typing.Iterable"
                }
                args {
                  pretty_printed_name: "None"
                  kind: NONE
                }
              }
              fully_qualified_name: "requests.sessions._ParamsMappingValueType"
            }
          }
          fully_qualified_name: "typing.Iterable"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "data"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "headers"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "cookies"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "files"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "auth"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "timeout"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "allow_redirects"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    parameters {
      name: "proxies"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "hooks"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "stream"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "verify"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "cert"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "json"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "post"
    fully_qualified_name: "requests.sessions.Session.post"
    return_annotation {
      pretty_printed_name: "requests.models.Response"
      fully_qualified_name: "requests.models.Response"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "requests.sessions.Session"
        fully_qualified_name: "requests.sessions.Session"
      }
    }
    parameters {
      name: "url"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,builtins.bytes]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
      }
    }
    parameters {
      name: "data"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[None,builtins.str,builtins.bytes,typing.Mapping[builtins.str,Any],typing.Mapping[builtins.str,Any],typing.Iterable[Tuple[builtins.str,Union[builtins.str,None]]],typing.IO[Any]]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[None,builtins.str,builtins.bytes,typing.Mapping[builtins.str,Any],typing.Mapping[builtins.str,Any],typing.Iterable[Tuple[builtins.str,Union[builtins.str,None]]],typing.IO[Any]]"
          kind: UNION
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "typing.Mapping[builtins.str,Any]"
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "Any"
              kind: ANY
            }
            fully_qualified_name: "typing.Mapping"
          }
          args {
            pretty_printed_name: "typing.Mapping[builtins.str,Any]"
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "Any"
              kind: ANY
            }
            fully_qualified_name: "typing.Mapping"
          }
          args {
            pretty_printed_name: "typing.Iterable[Tuple[builtins.str,Union[builtins.str,None]]]"
            args {
              pretty_printed_name: "Tuple[builtins.str,Union[builtins.str,None]]"
              kind: TUPLE
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "Union[builtins.str,None]"
                kind: UNION
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
                args {
                  pretty_printed_name: "None"
                  kind: NONE
                }
              }
            }
            fully_qualified_name: "typing.Iterable"
          }
          args {
            pretty_printed_name: "typing.IO[Any]"
            args {
              pretty_printed_name: "Any"
              kind: ANY
            }
            fully_qualified_name: "typing.IO"
          }
        }
        fully_qualified_name: "requests.sessions._Data"
      }
      has_default: true
    }
    parameters {
      name: "json"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "params"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[_typeshed.SupportsItems[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]],Tuple[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]],typing.Iterable[Tuple[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]]],builtins.str,builtins.bytes,None]"
        kind: UNION
        args {
          pretty_printed_name: "_typeshed.SupportsItems[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]]"
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              args {
                pretty_printed_name: "builtins.int"
                fully_qualified_name: "builtins.int"
              }
              args {
                pretty_printed_name: "builtins.float"
                fully_qualified_name: "builtins.float"
              }
            }
            fully_qualified_name: "requests.sessions._ParamsMappingKeyType"
          }
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              args {
                pretty_printed_name: "builtins.int"
                fully_qualified_name: "builtins.int"
              }
              args {
                pretty_printed_name: "builtins.float"
                fully_qualified_name: "builtins.float"
              }
              args {
                pretty_printed_name: "typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
                args {
                  pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
                  kind: UNION
                  args {
                    pretty_printed_name: "builtins.str"
                    fully_qualified_name: "builtins.str"
                  }
                  args {
                    pretty_printed_name: "builtins.bytes"
                    fully_qualified_name: "builtins.bytes"
                  }
                  args {
                    pretty_printed_name: "builtins.int"
                    fully_qualified_name: "builtins.int"
                  }
                  args {
                    pretty_printed_name: "builtins.float"
                    fully_qualified_name: "builtins.float"
                  }
                }
                fully_qualified_name: "typing.Iterable"
              }
              args {
                pretty_printed_name: "None"
                kind: NONE
              }
            }
            fully_qualified_name: "requests.sessions._ParamsMappingValueType"
          }
          fully_qualified_name: "_typeshed.SupportsItems"
        }
        args {
          pretty_printed_name: "Tuple[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]]"
          kind: TUPLE
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              args {
                pretty_printed_name: "builtins.int"
                fully_qualified_name: "builtins.int"
              }
              args {
                pretty_printed_name: "builtins.float"
                fully_qualified_name: "builtins.float"
              }
            }
            fully_qualified_name: "requests.sessions._ParamsMappingKeyType"
          }
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              args {
                pretty_printed_name: "builtins.int"
                fully_qualified_name: "builtins.int"
              }
              args {
                pretty_printed_name: "builtins.float"
                fully_qualified_name: "builtins.float"
              }
              args {
                pretty_printed_name: "typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
                args {
                  pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
                  kind: UNION
                  args {
                    pretty_printed_name: "builtins.str"
                    fully_qualified_name: "builtins.str"
                  }
                  args {
                    pretty_printed_name: "builtins.bytes"
                    fully_qualified_name: "builtins.bytes"
                  }
                  args {
                    pretty_printed_name: "builtins.int"
                    fully_qualified_name: "builtins.int"
                  }
                  args {
                    pretty_printed_name: "builtins.float"
                    fully_qualified_name: "builtins.float"
                  }
                }
                fully_qualified_name: "typing.Iterable"
              }
              args {
                pretty_printed_name: "None"
                kind: NONE
              }
            }
            fully_qualified_name: "requests.sessions._ParamsMappingValueType"
          }
        }
        args {
          pretty_printed_name: "typing.Iterable[Tuple[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]]]"
          args {
            pretty_printed_name: "Tuple[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]]"
            kind: TUPLE
            args {
              pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
              kind: TYPE_ALIAS
              args {
                pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
                kind: UNION
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
                args {
                  pretty_printed_name: "builtins.bytes"
                  fully_qualified_name: "builtins.bytes"
                }
                args {
                  pretty_printed_name: "builtins.int"
                  fully_qualified_name: "builtins.int"
                }
                args {
                  pretty_printed_name: "builtins.float"
                  fully_qualified_name: "builtins.float"
                }
              }
              fully_qualified_name: "requests.sessions._ParamsMappingKeyType"
            }
            args {
              pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]"
              kind: TYPE_ALIAS
              args {
                pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]"
                kind: UNION
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
                args {
                  pretty_printed_name: "builtins.bytes"
                  fully_qualified_name: "builtins.bytes"
                }
                args {
                  pretty_printed_name: "builtins.int"
                  fully_qualified_name: "builtins.int"
                }
                args {
                  pretty_printed_name: "builtins.float"
                  fully_qualified_name: "builtins.float"
                }
                args {
                  pretty_printed_name: "typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
                  args {
                    pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
                    kind: UNION
                    args {
                      pretty_printed_name: "builtins.str"
                      fully_qualified_name: "builtins.str"
                    }
                    args {
                      pretty_printed_name: "builtins.bytes"
                      fully_qualified_name: "builtins.bytes"
                    }
                    args {
                      pretty_printed_name: "builtins.int"
                      fully_qualified_name: "builtins.int"
                    }
                    args {
                      pretty_printed_name: "builtins.float"
                      fully_qualified_name: "builtins.float"
                    }
                  }
                  fully_qualified_name: "typing.Iterable"
                }
                args {
                  pretty_printed_name: "None"
                  kind: NONE
                }
              }
              fully_qualified_name: "requests.sessions._ParamsMappingValueType"
            }
          }
          fully_qualified_name: "typing.Iterable"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "headers"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "cookies"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "files"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "auth"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "timeout"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "allow_redirects"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    parameters {
      name: "proxies"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "hooks"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "stream"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "verify"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "cert"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "put"
    fully_qualified_name: "requests.sessions.Session.put"
    return_annotation {
      pretty_printed_name: "requests.models.Response"
      fully_qualified_name: "requests.models.Response"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "requests.sessions.Session"
        fully_qualified_name: "requests.sessions.Session"
      }
    }
    parameters {
      name: "url"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,builtins.bytes]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
      }
    }
    parameters {
      name: "data"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[None,builtins.str,builtins.bytes,typing.Mapping[builtins.str,Any],typing.Mapping[builtins.str,Any],typing.Iterable[Tuple[builtins.str,Union[builtins.str,None]]],typing.IO[Any]]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[None,builtins.str,builtins.bytes,typing.Mapping[builtins.str,Any],typing.Mapping[builtins.str,Any],typing.Iterable[Tuple[builtins.str,Union[builtins.str,None]]],typing.IO[Any]]"
          kind: UNION
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "typing.Mapping[builtins.str,Any]"
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "Any"
              kind: ANY
            }
            fully_qualified_name: "typing.Mapping"
          }
          args {
            pretty_printed_name: "typing.Mapping[builtins.str,Any]"
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "Any"
              kind: ANY
            }
            fully_qualified_name: "typing.Mapping"
          }
          args {
            pretty_printed_name: "typing.Iterable[Tuple[builtins.str,Union[builtins.str,None]]]"
            args {
              pretty_printed_name: "Tuple[builtins.str,Union[builtins.str,None]]"
              kind: TUPLE
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "Union[builtins.str,None]"
                kind: UNION
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
                args {
                  pretty_printed_name: "None"
                  kind: NONE
                }
              }
            }
            fully_qualified_name: "typing.Iterable"
          }
          args {
            pretty_printed_name: "typing.IO[Any]"
            args {
              pretty_printed_name: "Any"
              kind: ANY
            }
            fully_qualified_name: "typing.IO"
          }
        }
        fully_qualified_name: "requests.sessions._Data"
      }
      has_default: true
    }
    parameters {
      name: "params"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[_typeshed.SupportsItems[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]],Tuple[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]],typing.Iterable[Tuple[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]]],builtins.str,builtins.bytes,None]"
        kind: UNION
        args {
          pretty_printed_name: "_typeshed.SupportsItems[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]]"
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              args {
                pretty_printed_name: "builtins.int"
                fully_qualified_name: "builtins.int"
              }
              args {
                pretty_printed_name: "builtins.float"
                fully_qualified_name: "builtins.float"
              }
            }
            fully_qualified_name: "requests.sessions._ParamsMappingKeyType"
          }
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              args {
                pretty_printed_name: "builtins.int"
                fully_qualified_name: "builtins.int"
              }
              args {
                pretty_printed_name: "builtins.float"
                fully_qualified_name: "builtins.float"
              }
              args {
                pretty_printed_name: "typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
                args {
                  pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
                  kind: UNION
                  args {
                    pretty_printed_name: "builtins.str"
                    fully_qualified_name: "builtins.str"
                  }
                  args {
                    pretty_printed_name: "builtins.bytes"
                    fully_qualified_name: "builtins.bytes"
                  }
                  args {
                    pretty_printed_name: "builtins.int"
                    fully_qualified_name: "builtins.int"
                  }
                  args {
                    pretty_printed_name: "builtins.float"
                    fully_qualified_name: "builtins.float"
                  }
                }
                fully_qualified_name: "typing.Iterable"
              }
              args {
                pretty_printed_name: "None"
                kind: NONE
              }
            }
            fully_qualified_name: "requests.sessions._ParamsMappingValueType"
          }
          fully_qualified_name: "_typeshed.SupportsItems"
        }
        args {
          pretty_printed_name: "Tuple[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]]"
          kind: TUPLE
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              args {
                pretty_printed_name: "builtins.int"
                fully_qualified_name: "builtins.int"
              }
              args {
                pretty_printed_name: "builtins.float"
                fully_qualified_name: "builtins.float"
              }
            }
            fully_qualified_name: "requests.sessions._ParamsMappingKeyType"
          }
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              args {
                pretty_printed_name: "builtins.int"
                fully_qualified_name: "builtins.int"
              }
              args {
                pretty_printed_name: "builtins.float"
                fully_qualified_name: "builtins.float"
              }
              args {
                pretty_printed_name: "typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
                args {
                  pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
                  kind: UNION
                  args {
                    pretty_printed_name: "builtins.str"
                    fully_qualified_name: "builtins.str"
                  }
                  args {
                    pretty_printed_name: "builtins.bytes"
                    fully_qualified_name: "builtins.bytes"
                  }
                  args {
                    pretty_printed_name: "builtins.int"
                    fully_qualified_name: "builtins.int"
                  }
                  args {
                    pretty_printed_name: "builtins.float"
                    fully_qualified_name: "builtins.float"
                  }
                }
                fully_qualified_name: "typing.Iterable"
              }
              args {
                pretty_printed_name: "None"
                kind: NONE
              }
            }
            fully_qualified_name: "requests.sessions._ParamsMappingValueType"
          }
        }
        args {
          pretty_printed_name: "typing.Iterable[Tuple[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]]]"
          args {
            pretty_printed_name: "Tuple[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]]"
            kind: TUPLE
            args {
              pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
              kind: TYPE_ALIAS
              args {
                pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
                kind: UNION
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
                args {
                  pretty_printed_name: "builtins.bytes"
                  fully_qualified_name: "builtins.bytes"
                }
                args {
                  pretty_printed_name: "builtins.int"
                  fully_qualified_name: "builtins.int"
                }
                args {
                  pretty_printed_name: "builtins.float"
                  fully_qualified_name: "builtins.float"
                }
              }
              fully_qualified_name: "requests.sessions._ParamsMappingKeyType"
            }
            args {
              pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]"
              kind: TYPE_ALIAS
              args {
                pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]"
                kind: UNION
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
                args {
                  pretty_printed_name: "builtins.bytes"
                  fully_qualified_name: "builtins.bytes"
                }
                args {
                  pretty_printed_name: "builtins.int"
                  fully_qualified_name: "builtins.int"
                }
                args {
                  pretty_printed_name: "builtins.float"
                  fully_qualified_name: "builtins.float"
                }
                args {
                  pretty_printed_name: "typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
                  args {
                    pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
                    kind: UNION
                    args {
                      pretty_printed_name: "builtins.str"
                      fully_qualified_name: "builtins.str"
                    }
                    args {
                      pretty_printed_name: "builtins.bytes"
                      fully_qualified_name: "builtins.bytes"
                    }
                    args {
                      pretty_printed_name: "builtins.int"
                      fully_qualified_name: "builtins.int"
                    }
                    args {
                      pretty_printed_name: "builtins.float"
                      fully_qualified_name: "builtins.float"
                    }
                  }
                  fully_qualified_name: "typing.Iterable"
                }
                args {
                  pretty_printed_name: "None"
                  kind: NONE
                }
              }
              fully_qualified_name: "requests.sessions._ParamsMappingValueType"
            }
          }
          fully_qualified_name: "typing.Iterable"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "headers"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "cookies"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "files"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "auth"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "timeout"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "allow_redirects"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    parameters {
      name: "proxies"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "hooks"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "stream"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "verify"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "cert"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "json"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "patch"
    fully_qualified_name: "requests.sessions.Session.patch"
    return_annotation {
      pretty_printed_name: "requests.models.Response"
      fully_qualified_name: "requests.models.Response"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "requests.sessions.Session"
        fully_qualified_name: "requests.sessions.Session"
      }
    }
    parameters {
      name: "url"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,builtins.bytes]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
      }
    }
    parameters {
      name: "data"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[None,builtins.str,builtins.bytes,typing.Mapping[builtins.str,Any],typing.Mapping[builtins.str,Any],typing.Iterable[Tuple[builtins.str,Union[builtins.str,None]]],typing.IO[Any]]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[None,builtins.str,builtins.bytes,typing.Mapping[builtins.str,Any],typing.Mapping[builtins.str,Any],typing.Iterable[Tuple[builtins.str,Union[builtins.str,None]]],typing.IO[Any]]"
          kind: UNION
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "typing.Mapping[builtins.str,Any]"
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "Any"
              kind: ANY
            }
            fully_qualified_name: "typing.Mapping"
          }
          args {
            pretty_printed_name: "typing.Mapping[builtins.str,Any]"
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "Any"
              kind: ANY
            }
            fully_qualified_name: "typing.Mapping"
          }
          args {
            pretty_printed_name: "typing.Iterable[Tuple[builtins.str,Union[builtins.str,None]]]"
            args {
              pretty_printed_name: "Tuple[builtins.str,Union[builtins.str,None]]"
              kind: TUPLE
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "Union[builtins.str,None]"
                kind: UNION
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
                args {
                  pretty_printed_name: "None"
                  kind: NONE
                }
              }
            }
            fully_qualified_name: "typing.Iterable"
          }
          args {
            pretty_printed_name: "typing.IO[Any]"
            args {
              pretty_printed_name: "Any"
              kind: ANY
            }
            fully_qualified_name: "typing.IO"
          }
        }
        fully_qualified_name: "requests.sessions._Data"
      }
      has_default: true
    }
    parameters {
      name: "params"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[_typeshed.SupportsItems[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]],Tuple[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]],typing.Iterable[Tuple[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]]],builtins.str,builtins.bytes,None]"
        kind: UNION
        args {
          pretty_printed_name: "_typeshed.SupportsItems[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]]"
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              args {
                pretty_printed_name: "builtins.int"
                fully_qualified_name: "builtins.int"
              }
              args {
                pretty_printed_name: "builtins.float"
                fully_qualified_name: "builtins.float"
              }
            }
            fully_qualified_name: "requests.sessions._ParamsMappingKeyType"
          }
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              args {
                pretty_printed_name: "builtins.int"
                fully_qualified_name: "builtins.int"
              }
              args {
                pretty_printed_name: "builtins.float"
                fully_qualified_name: "builtins.float"
              }
              args {
                pretty_printed_name: "typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
                args {
                  pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
                  kind: UNION
                  args {
                    pretty_printed_name: "builtins.str"
                    fully_qualified_name: "builtins.str"
                  }
                  args {
                    pretty_printed_name: "builtins.bytes"
                    fully_qualified_name: "builtins.bytes"
                  }
                  args {
                    pretty_printed_name: "builtins.int"
                    fully_qualified_name: "builtins.int"
                  }
                  args {
                    pretty_printed_name: "builtins.float"
                    fully_qualified_name: "builtins.float"
                  }
                }
                fully_qualified_name: "typing.Iterable"
              }
              args {
                pretty_printed_name: "None"
                kind: NONE
              }
            }
            fully_qualified_name: "requests.sessions._ParamsMappingValueType"
          }
          fully_qualified_name: "_typeshed.SupportsItems"
        }
        args {
          pretty_printed_name: "Tuple[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]]"
          kind: TUPLE
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              args {
                pretty_printed_name: "builtins.int"
                fully_qualified_name: "builtins.int"
              }
              args {
                pretty_printed_name: "builtins.float"
                fully_qualified_name: "builtins.float"
              }
            }
            fully_qualified_name: "requests.sessions._ParamsMappingKeyType"
          }
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              args {
                pretty_printed_name: "builtins.int"
                fully_qualified_name: "builtins.int"
              }
              args {
                pretty_printed_name: "builtins.float"
                fully_qualified_name: "builtins.float"
              }
              args {
                pretty_printed_name: "typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
                args {
                  pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
                  kind: UNION
                  args {
                    pretty_printed_name: "builtins.str"
                    fully_qualified_name: "builtins.str"
                  }
                  args {
                    pretty_printed_name: "builtins.bytes"
                    fully_qualified_name: "builtins.bytes"
                  }
                  args {
                    pretty_printed_name: "builtins.int"
                    fully_qualified_name: "builtins.int"
                  }
                  args {
                    pretty_printed_name: "builtins.float"
                    fully_qualified_name: "builtins.float"
                  }
                }
                fully_qualified_name: "typing.Iterable"
              }
              args {
                pretty_printed_name: "None"
                kind: NONE
              }
            }
            fully_qualified_name: "requests.sessions._ParamsMappingValueType"
          }
        }
        args {
          pretty_printed_name: "typing.Iterable[Tuple[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]]]"
          args {
            pretty_printed_name: "Tuple[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]]"
            kind: TUPLE
            args {
              pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
              kind: TYPE_ALIAS
              args {
                pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
                kind: UNION
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
                args {
                  pretty_printed_name: "builtins.bytes"
                  fully_qualified_name: "builtins.bytes"
                }
                args {
                  pretty_printed_name: "builtins.int"
                  fully_qualified_name: "builtins.int"
                }
                args {
                  pretty_printed_name: "builtins.float"
                  fully_qualified_name: "builtins.float"
                }
              }
              fully_qualified_name: "requests.sessions._ParamsMappingKeyType"
            }
            args {
              pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]"
              kind: TYPE_ALIAS
              args {
                pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]"
                kind: UNION
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
                args {
                  pretty_printed_name: "builtins.bytes"
                  fully_qualified_name: "builtins.bytes"
                }
                args {
                  pretty_printed_name: "builtins.int"
                  fully_qualified_name: "builtins.int"
                }
                args {
                  pretty_printed_name: "builtins.float"
                  fully_qualified_name: "builtins.float"
                }
                args {
                  pretty_printed_name: "typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
                  args {
                    pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
                    kind: UNION
                    args {
                      pretty_printed_name: "builtins.str"
                      fully_qualified_name: "builtins.str"
                    }
                    args {
                      pretty_printed_name: "builtins.bytes"
                      fully_qualified_name: "builtins.bytes"
                    }
                    args {
                      pretty_printed_name: "builtins.int"
                      fully_qualified_name: "builtins.int"
                    }
                    args {
                      pretty_printed_name: "builtins.float"
                      fully_qualified_name: "builtins.float"
                    }
                  }
                  fully_qualified_name: "typing.Iterable"
                }
                args {
                  pretty_printed_name: "None"
                  kind: NONE
                }
              }
              fully_qualified_name: "requests.sessions._ParamsMappingValueType"
            }
          }
          fully_qualified_name: "typing.Iterable"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "headers"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "cookies"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "files"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "auth"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "timeout"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "allow_redirects"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    parameters {
      name: "proxies"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "hooks"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "stream"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "verify"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "cert"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "json"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "delete"
    fully_qualified_name: "requests.sessions.Session.delete"
    return_annotation {
      pretty_printed_name: "requests.models.Response"
      fully_qualified_name: "requests.models.Response"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "requests.sessions.Session"
        fully_qualified_name: "requests.sessions.Session"
      }
    }
    parameters {
      name: "url"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,builtins.bytes]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
      }
    }
    parameters {
      name: "params"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[_typeshed.SupportsItems[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]],Tuple[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]],typing.Iterable[Tuple[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]]],builtins.str,builtins.bytes,None]"
        kind: UNION
        args {
          pretty_printed_name: "_typeshed.SupportsItems[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]]"
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              args {
                pretty_printed_name: "builtins.int"
                fully_qualified_name: "builtins.int"
              }
              args {
                pretty_printed_name: "builtins.float"
                fully_qualified_name: "builtins.float"
              }
            }
            fully_qualified_name: "requests.sessions._ParamsMappingKeyType"
          }
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              args {
                pretty_printed_name: "builtins.int"
                fully_qualified_name: "builtins.int"
              }
              args {
                pretty_printed_name: "builtins.float"
                fully_qualified_name: "builtins.float"
              }
              args {
                pretty_printed_name: "typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
                args {
                  pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
                  kind: UNION
                  args {
                    pretty_printed_name: "builtins.str"
                    fully_qualified_name: "builtins.str"
                  }
                  args {
                    pretty_printed_name: "builtins.bytes"
                    fully_qualified_name: "builtins.bytes"
                  }
                  args {
                    pretty_printed_name: "builtins.int"
                    fully_qualified_name: "builtins.int"
                  }
                  args {
                    pretty_printed_name: "builtins.float"
                    fully_qualified_name: "builtins.float"
                  }
                }
                fully_qualified_name: "typing.Iterable"
              }
              args {
                pretty_printed_name: "None"
                kind: NONE
              }
            }
            fully_qualified_name: "requests.sessions._ParamsMappingValueType"
          }
          fully_qualified_name: "_typeshed.SupportsItems"
        }
        args {
          pretty_printed_name: "Tuple[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]]"
          kind: TUPLE
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              args {
                pretty_printed_name: "builtins.int"
                fully_qualified_name: "builtins.int"
              }
              args {
                pretty_printed_name: "builtins.float"
                fully_qualified_name: "builtins.float"
              }
            }
            fully_qualified_name: "requests.sessions._ParamsMappingKeyType"
          }
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              args {
                pretty_printed_name: "builtins.int"
                fully_qualified_name: "builtins.int"
              }
              args {
                pretty_printed_name: "builtins.float"
                fully_qualified_name: "builtins.float"
              }
              args {
                pretty_printed_name: "typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
                args {
                  pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
                  kind: UNION
                  args {
                    pretty_printed_name: "builtins.str"
                    fully_qualified_name: "builtins.str"
                  }
                  args {
                    pretty_printed_name: "builtins.bytes"
                    fully_qualified_name: "builtins.bytes"
                  }
                  args {
                    pretty_printed_name: "builtins.int"
                    fully_qualified_name: "builtins.int"
                  }
                  args {
                    pretty_printed_name: "builtins.float"
                    fully_qualified_name: "builtins.float"
                  }
                }
                fully_qualified_name: "typing.Iterable"
              }
              args {
                pretty_printed_name: "None"
                kind: NONE
              }
            }
            fully_qualified_name: "requests.sessions._ParamsMappingValueType"
          }
        }
        args {
          pretty_printed_name: "typing.Iterable[Tuple[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]]]"
          args {
            pretty_printed_name: "Tuple[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]]"
            kind: TUPLE
            args {
              pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
              kind: TYPE_ALIAS
              args {
                pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
                kind: UNION
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
                args {
                  pretty_printed_name: "builtins.bytes"
                  fully_qualified_name: "builtins.bytes"
                }
                args {
                  pretty_printed_name: "builtins.int"
                  fully_qualified_name: "builtins.int"
                }
                args {
                  pretty_printed_name: "builtins.float"
                  fully_qualified_name: "builtins.float"
                }
              }
              fully_qualified_name: "requests.sessions._ParamsMappingKeyType"
            }
            args {
              pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]"
              kind: TYPE_ALIAS
              args {
                pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]"
                kind: UNION
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
                args {
                  pretty_printed_name: "builtins.bytes"
                  fully_qualified_name: "builtins.bytes"
                }
                args {
                  pretty_printed_name: "builtins.int"
                  fully_qualified_name: "builtins.int"
                }
                args {
                  pretty_printed_name: "builtins.float"
                  fully_qualified_name: "builtins.float"
                }
                args {
                  pretty_printed_name: "typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
                  args {
                    pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
                    kind: UNION
                    args {
                      pretty_printed_name: "builtins.str"
                      fully_qualified_name: "builtins.str"
                    }
                    args {
                      pretty_printed_name: "builtins.bytes"
                      fully_qualified_name: "builtins.bytes"
                    }
                    args {
                      pretty_printed_name: "builtins.int"
                      fully_qualified_name: "builtins.int"
                    }
                    args {
                      pretty_printed_name: "builtins.float"
                      fully_qualified_name: "builtins.float"
                    }
                  }
                  fully_qualified_name: "typing.Iterable"
                }
                args {
                  pretty_printed_name: "None"
                  kind: NONE
                }
              }
              fully_qualified_name: "requests.sessions._ParamsMappingValueType"
            }
          }
          fully_qualified_name: "typing.Iterable"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "data"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "headers"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "cookies"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "files"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "auth"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "timeout"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "allow_redirects"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      has_default: true
    }
    parameters {
      name: "proxies"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "hooks"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "stream"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "verify"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "cert"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "json"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "send"
    fully_qualified_name: "requests.sessions.Session.send"
    return_annotation {
      pretty_printed_name: "requests.models.Response"
      fully_qualified_name: "requests.models.Response"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "requests.sessions.Session"
        fully_qualified_name: "requests.sessions.Session"
      }
    }
    parameters {
      name: "request"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "requests.models.PreparedRequest"
        fully_qualified_name: "requests.models.PreparedRequest"
      }
    }
    parameters {
      name: "kwargs"
      kind: VAR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "merge_environment_settings"
    fully_qualified_name: "requests.sessions.Session.merge_environment_settings"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "url"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "proxies"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "stream"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "verify"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "cert"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "get_adapter"
    fully_qualified_name: "requests.sessions.Session.get_adapter"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "url"
      kind: POSITIONAL_OR_KEYWORD
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "close"
    fully_qualified_name: "requests.sessions.Session.close"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "requests.sessions.Session"
        fully_qualified_name: "requests.sessions.Session"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "mount"
    fully_qualified_name: "requests.sessions.Session.mount"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "requests.sessions.Session"
        fully_qualified_name: "requests.sessions.Session"
      }
    }
    parameters {
      name: "prefix"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,builtins.bytes]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
      }
    }
    parameters {
      name: "adapter"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "UnboundType[BaseAdapter]"
        kind: UNBOUND
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "__attrs__"
    fully_qualified_name: "requests.sessions.Session.__attrs__"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "headers"
    fully_qualified_name: "requests.sessions.Session.headers"
    type_annotation {
      pretty_printed_name: "requests.structures.CaseInsensitiveDict[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "requests.structures.CaseInsensitiveDict"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "auth"
    fully_qualified_name: "requests.sessions.Session.auth"
    type_annotation {
      pretty_printed_name: "Union[None,Tuple[builtins.str,builtins.str],Any,CallableType[builtins.function]]"
      kind: UNION
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
      args {
        pretty_printed_name: "Tuple[builtins.str,builtins.str]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "proxies"
    fully_qualified_name: "requests.sessions.Session.proxies"
    type_annotation {
      pretty_printed_name: "typing.MutableMapping[builtins.str,builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "typing.MutableMapping"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "hooks"
    fully_qualified_name: "requests.sessions.Session.hooks"
    type_annotation {
      pretty_printed_name: "TypeAlias[typing.MutableMapping[builtins.str,builtins.list[TypeAlias[CallableType[builtins.function]]]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "typing.MutableMapping[builtins.str,builtins.list[TypeAlias[CallableType[builtins.function]]]]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.list[TypeAlias[CallableType[builtins.function]]]"
          args {
            pretty_printed_name: "TypeAlias[CallableType[builtins.function]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "CallableType[builtins.function]"
              kind: CALLABLE
              args {
                pretty_printed_name: "builtins.function"
                fully_qualified_name: "builtins.function"
              }
            }
            fully_qualified_name: "requests.sessions._Hook"
          }
          fully_qualified_name: "builtins.list"
        }
        fully_qualified_name: "typing.MutableMapping"
      }
      fully_qualified_name: "requests.sessions._Hooks"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "params"
    fully_qualified_name: "requests.sessions.Session.params"
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[_typeshed.SupportsItems[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]],Tuple[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]],typing.Iterable[Tuple[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]]],builtins.str,builtins.bytes]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[_typeshed.SupportsItems[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]],Tuple[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]],typing.Iterable[Tuple[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]]],builtins.str,builtins.bytes]"
        kind: UNION
        args {
          pretty_printed_name: "_typeshed.SupportsItems[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]]"
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              args {
                pretty_printed_name: "builtins.int"
                fully_qualified_name: "builtins.int"
              }
              args {
                pretty_printed_name: "builtins.float"
                fully_qualified_name: "builtins.float"
              }
            }
            fully_qualified_name: "requests.sessions._ParamsMappingKeyType"
          }
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              args {
                pretty_printed_name: "builtins.int"
                fully_qualified_name: "builtins.int"
              }
              args {
                pretty_printed_name: "builtins.float"
                fully_qualified_name: "builtins.float"
              }
              args {
                pretty_printed_name: "typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
                args {
                  pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
                  kind: UNION
                  args {
                    pretty_printed_name: "builtins.str"
                    fully_qualified_name: "builtins.str"
                  }
                  args {
                    pretty_printed_name: "builtins.bytes"
                    fully_qualified_name: "builtins.bytes"
                  }
                  args {
                    pretty_printed_name: "builtins.int"
                    fully_qualified_name: "builtins.int"
                  }
                  args {
                    pretty_printed_name: "builtins.float"
                    fully_qualified_name: "builtins.float"
                  }
                }
                fully_qualified_name: "typing.Iterable"
              }
              args {
                pretty_printed_name: "None"
                kind: NONE
              }
            }
            fully_qualified_name: "requests.sessions._ParamsMappingValueType"
          }
          fully_qualified_name: "_typeshed.SupportsItems"
        }
        args {
          pretty_printed_name: "Tuple[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]]"
          kind: TUPLE
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              args {
                pretty_printed_name: "builtins.int"
                fully_qualified_name: "builtins.int"
              }
              args {
                pretty_printed_name: "builtins.float"
                fully_qualified_name: "builtins.float"
              }
            }
            fully_qualified_name: "requests.sessions._ParamsMappingKeyType"
          }
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              args {
                pretty_printed_name: "builtins.int"
                fully_qualified_name: "builtins.int"
              }
              args {
                pretty_printed_name: "builtins.float"
                fully_qualified_name: "builtins.float"
              }
              args {
                pretty_printed_name: "typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
                args {
                  pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
                  kind: UNION
                  args {
                    pretty_printed_name: "builtins.str"
                    fully_qualified_name: "builtins.str"
                  }
                  args {
                    pretty_printed_name: "builtins.bytes"
                    fully_qualified_name: "builtins.bytes"
                  }
                  args {
                    pretty_printed_name: "builtins.int"
                    fully_qualified_name: "builtins.int"
                  }
                  args {
                    pretty_printed_name: "builtins.float"
                    fully_qualified_name: "builtins.float"
                  }
                }
                fully_qualified_name: "typing.Iterable"
              }
              args {
                pretty_printed_name: "None"
                kind: NONE
              }
            }
            fully_qualified_name: "requests.sessions._ParamsMappingValueType"
          }
        }
        args {
          pretty_printed_name: "typing.Iterable[Tuple[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]]]"
          args {
            pretty_printed_name: "Tuple[TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]]"
            kind: TUPLE
            args {
              pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
              kind: TYPE_ALIAS
              args {
                pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
                kind: UNION
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
                args {
                  pretty_printed_name: "builtins.bytes"
                  fully_qualified_name: "builtins.bytes"
                }
                args {
                  pretty_printed_name: "builtins.int"
                  fully_qualified_name: "builtins.int"
                }
                args {
                  pretty_printed_name: "builtins.float"
                  fully_qualified_name: "builtins.float"
                }
              }
              fully_qualified_name: "requests.sessions._ParamsMappingKeyType"
            }
            args {
              pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]]"
              kind: TYPE_ALIAS
              args {
                pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float,typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]],None]"
                kind: UNION
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
                args {
                  pretty_printed_name: "builtins.bytes"
                  fully_qualified_name: "builtins.bytes"
                }
                args {
                  pretty_printed_name: "builtins.int"
                  fully_qualified_name: "builtins.int"
                }
                args {
                  pretty_printed_name: "builtins.float"
                  fully_qualified_name: "builtins.float"
                }
                args {
                  pretty_printed_name: "typing.Iterable[Union[builtins.str,builtins.bytes,builtins.int,builtins.float]]"
                  args {
                    pretty_printed_name: "Union[builtins.str,builtins.bytes,builtins.int,builtins.float]"
                    kind: UNION
                    args {
                      pretty_printed_name: "builtins.str"
                      fully_qualified_name: "builtins.str"
                    }
                    args {
                      pretty_printed_name: "builtins.bytes"
                      fully_qualified_name: "builtins.bytes"
                    }
                    args {
                      pretty_printed_name: "builtins.int"
                      fully_qualified_name: "builtins.int"
                    }
                    args {
                      pretty_printed_name: "builtins.float"
                      fully_qualified_name: "builtins.float"
                    }
                  }
                  fully_qualified_name: "typing.Iterable"
                }
                args {
                  pretty_printed_name: "None"
                  kind: NONE
                }
              }
              fully_qualified_name: "requests.sessions._ParamsMappingValueType"
            }
          }
          fully_qualified_name: "typing.Iterable"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
      }
      fully_qualified_name: "requests.sessions._Params"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "stream"
    fully_qualified_name: "requests.sessions.Session.stream"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "verify"
    fully_qualified_name: "requests.sessions.Session.verify"
    type_annotation {
      pretty_printed_name: "Union[None,builtins.bool,builtins.str]"
      kind: UNION
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
      args {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "cert"
    fully_qualified_name: "requests.sessions.Session.cert"
    type_annotation {
      pretty_printed_name: "Union[None,builtins.str,Tuple[builtins.str,builtins.str]]"
      kind: UNION
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "Tuple[builtins.str,builtins.str]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "max_redirects"
    fully_qualified_name: "requests.sessions.Session.max_redirects"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "trust_env"
    fully_qualified_name: "requests.sessions.Session.trust_env"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "cookies"
    fully_qualified_name: "requests.sessions.Session.cookies"
    type_annotation {
      pretty_printed_name: "requests.cookies.RequestsCookieJar"
      fully_qualified_name: "requests.cookies.RequestsCookieJar"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "adapters"
    fully_qualified_name: "requests.sessions.Session.adapters"
    type_annotation {
      pretty_printed_name: "typing.MutableMapping[Any,Any]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "typing.MutableMapping"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "redirect_cache"
    fully_qualified_name: "requests.sessions.Session.redirect_cache"
    type_annotation {
      pretty_printed_name: "requests.packages.urllib3._collections.RecentlyUsedContainer[Any,Any]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "requests.packages.urllib3._collections.RecentlyUsedContainer"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
functions {
  name: "merge_setting"
  fully_qualified_name: "requests.sessions.merge_setting"
  parameters {
    name: "request_setting"
    kind: POSITIONAL_OR_KEYWORD
  }
  parameters {
    name: "session_setting"
    kind: POSITIONAL_OR_KEYWORD
  }
  parameters {
    name: "dict_class"
    kind: POSITIONAL_OR_KEYWORD
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "merge_hooks"
  fully_qualified_name: "requests.sessions.merge_hooks"
  parameters {
    name: "request_hooks"
    kind: POSITIONAL_OR_KEYWORD
  }
  parameters {
    name: "session_hooks"
    kind: POSITIONAL_OR_KEYWORD
  }
  parameters {
    name: "dict_class"
    kind: POSITIONAL_OR_KEYWORD
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "session"
  fully_qualified_name: "requests.sessions.session"
  return_annotation {
    pretty_printed_name: "requests.sessions.Session"
    fully_qualified_name: "requests.sessions.Session"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "_auth"
  fully_qualified_name: "requests.auth"
  is_imported_module: true
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "BaseAdapter"
  fully_qualified_name: "requests.sessions.BaseAdapter"
  type_annotation {
    pretty_printed_name: "Any"
    kind: ANY
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "cookiejar_from_dict"
  fully_qualified_name: "requests.sessions.cookiejar_from_dict"
  type_annotation {
    pretty_printed_name: "CallableType[builtins.function]"
    kind: CALLABLE
    args {
      pretty_printed_name: "builtins.function"
      fully_qualified_name: "builtins.function"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "extract_cookies_to_jar"
  fully_qualified_name: "requests.sessions.extract_cookies_to_jar"
  type_annotation {
    pretty_printed_name: "CallableType[builtins.function]"
    kind: CALLABLE
    args {
      pretty_printed_name: "builtins.function"
      fully_qualified_name: "builtins.function"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "merge_cookies"
  fully_qualified_name: "requests.sessions.merge_cookies"
  type_annotation {
    pretty_printed_name: "CallableType[builtins.function]"
    kind: CALLABLE
    args {
      pretty_printed_name: "builtins.function"
      fully_qualified_name: "builtins.function"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "DEFAULT_REDIRECT_LIMIT"
  fully_qualified_name: "requests.sessions.DEFAULT_REDIRECT_LIMIT"
  type_annotation {
    pretty_printed_name: "Any"
    kind: ANY
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "default_hooks"
  fully_qualified_name: "requests.sessions.default_hooks"
  type_annotation {
    pretty_printed_name: "CallableType[builtins.function]"
    kind: CALLABLE
    args {
      pretty_printed_name: "builtins.function"
      fully_qualified_name: "builtins.function"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "dispatch_hook"
  fully_qualified_name: "requests.sessions.dispatch_hook"
  type_annotation {
    pretty_printed_name: "CallableType[builtins.function]"
    kind: CALLABLE
    args {
      pretty_printed_name: "builtins.function"
      fully_qualified_name: "builtins.function"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "to_key_val_list"
  fully_qualified_name: "requests.sessions.to_key_val_list"
  type_annotation {
    pretty_printed_name: "Any"
    kind: ANY
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "default_headers"
  fully_qualified_name: "requests.sessions.default_headers"
  type_annotation {
    pretty_printed_name: "Any"
    kind: ANY
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "to_native_string"
  fully_qualified_name: "requests.sessions.to_native_string"
  type_annotation {
    pretty_printed_name: "Any"
    kind: ANY
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "HTTPAdapter"
  fully_qualified_name: "requests.sessions.HTTPAdapter"
  type_annotation {
    pretty_printed_name: "Any"
    kind: ANY
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "requote_uri"
  fully_qualified_name: "requests.sessions.requote_uri"
  type_annotation {
    pretty_printed_name: "Any"
    kind: ANY
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "get_environ_proxies"
  fully_qualified_name: "requests.sessions.get_environ_proxies"
  type_annotation {
    pretty_printed_name: "Any"
    kind: ANY
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "get_netrc_auth"
  fully_qualified_name: "requests.sessions.get_netrc_auth"
  type_annotation {
    pretty_printed_name: "Any"
    kind: ANY
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "should_bypass_proxies"
  fully_qualified_name: "requests.sessions.should_bypass_proxies"
  type_annotation {
    pretty_printed_name: "Any"
    kind: ANY
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "get_auth_from_url"
  fully_qualified_name: "requests.sessions.get_auth_from_url"
  type_annotation {
    pretty_printed_name: "Any"
    kind: ANY
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "codes"
  fully_qualified_name: "requests.sessions.codes"
  type_annotation {
    pretty_printed_name: "Any"
    kind: ANY
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "REDIRECT_STATI"
  fully_qualified_name: "requests.sessions.REDIRECT_STATI"
  type_annotation {
    pretty_printed_name: "Any"
    kind: ANY
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
