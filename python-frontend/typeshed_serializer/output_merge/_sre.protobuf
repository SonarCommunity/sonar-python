fully_qualified_name: "_sre"
classes {
  name: "SRE_Match"
  fully_qualified_name: "_sre.SRE_Match"
  super_classes: "builtins.object"
  methods {
    name: "start"
    fully_qualified_name: "_sre.SRE_Match.start"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_sre.SRE_Match"
        fully_qualified_name: "_sre.SRE_Match"
      }
    }
    parameters {
      name: "group"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "end"
    fully_qualified_name: "_sre.SRE_Match.end"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_sre.SRE_Match"
        fully_qualified_name: "_sre.SRE_Match"
      }
    }
    parameters {
      name: "group"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "expand"
    fully_qualified_name: "_sre.SRE_Match.expand"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_sre.SRE_Match"
        fully_qualified_name: "_sre.SRE_Match"
      }
    }
    parameters {
      name: "s"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "groupdict"
    fully_qualified_name: "_sre.SRE_Match.groupdict"
    return_annotation {
      pretty_printed_name: "builtins.dict[builtins.int,Union[builtins.str,None]]"
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      fully_qualified_name: "builtins.dict"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_sre.SRE_Match"
        fully_qualified_name: "_sre.SRE_Match"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "groups"
    fully_qualified_name: "_sre.SRE_Match.groups"
    return_annotation {
      pretty_printed_name: "builtins.tuple[Union[builtins.str,None]]"
      args {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      fully_qualified_name: "builtins.tuple"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_sre.SRE_Match"
        fully_qualified_name: "_sre.SRE_Match"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "span"
    fully_qualified_name: "_sre.SRE_Match.span"
    return_annotation {
      pretty_printed_name: "Tuple[builtins.int,builtins.int]"
      kind: TUPLE
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_sre.SRE_Match"
        fully_qualified_name: "_sre.SRE_Match"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "regs"
    fully_qualified_name: "_sre.SRE_Match.regs"
    return_annotation {
      pretty_printed_name: "builtins.tuple[Tuple[builtins.int,builtins.int]]"
      args {
        pretty_printed_name: "Tuple[builtins.int,builtins.int]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
      fully_qualified_name: "builtins.tuple"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_sre.SRE_Match"
        fully_qualified_name: "_sre.SRE_Match"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
    valid_for: "27"
  }
  overloaded_methods {
    name: "group"
    fullname: "_sre.SRE_Match.group"
    definitions {
      name: "group"
      fully_qualified_name: "_sre.SRE_Match.group"
      return_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "_sre.SRE_Match"
          fully_qualified_name: "_sre.SRE_Match"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "group"
      fully_qualified_name: "_sre.SRE_Match.group"
      return_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "_sre.SRE_Match"
          fully_qualified_name: "_sre.SRE_Match"
        }
      }
      parameters {
        name: "group"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        has_default: true
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    valid_for: "27"
  }
  valid_for: "27"
}
classes {
  name: "SRE_Scanner"
  fully_qualified_name: "_sre.SRE_Scanner"
  super_classes: "builtins.object"
  methods {
    name: "match"
    fully_qualified_name: "_sre.SRE_Scanner.match"
    return_annotation {
      pretty_printed_name: "_sre.SRE_Match"
      fully_qualified_name: "_sre.SRE_Match"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_sre.SRE_Scanner"
        fully_qualified_name: "_sre.SRE_Scanner"
      }
    }
    valid_for: "27"
  }
  methods {
    name: "search"
    fully_qualified_name: "_sre.SRE_Scanner.search"
    return_annotation {
      pretty_printed_name: "_sre.SRE_Match"
      fully_qualified_name: "_sre.SRE_Match"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_sre.SRE_Scanner"
        fully_qualified_name: "_sre.SRE_Scanner"
      }
    }
    valid_for: "27"
  }
  valid_for: "27"
  attributes {
    name: "pattern"
    fully_qualified_name: "_sre.SRE_Scanner.pattern"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "27"
  }
}
classes {
  name: "SRE_Pattern"
  fully_qualified_name: "_sre.SRE_Pattern"
  super_classes: "builtins.object"
  methods {
    name: "findall"
    fully_qualified_name: "_sre.SRE_Pattern.findall"
    return_annotation {
      pretty_printed_name: "builtins.list[Union[builtins.tuple[Any],builtins.str]]"
      args {
        pretty_printed_name: "Union[builtins.tuple[Any],builtins.str]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.tuple[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "builtins.tuple"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_sre.SRE_Pattern"
        fully_qualified_name: "_sre.SRE_Pattern"
      }
    }
    parameters {
      name: "source"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "pos"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    parameters {
      name: "endpos"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "finditer"
    fully_qualified_name: "_sre.SRE_Pattern.finditer"
    return_annotation {
      pretty_printed_name: "typing.Iterable[Union[builtins.tuple[Any],builtins.str]]"
      args {
        pretty_printed_name: "Union[builtins.tuple[Any],builtins.str]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.tuple[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "builtins.tuple"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      fully_qualified_name: "typing.Iterable"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_sre.SRE_Pattern"
        fully_qualified_name: "_sre.SRE_Pattern"
      }
    }
    parameters {
      name: "source"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "pos"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    parameters {
      name: "endpos"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "match"
    fully_qualified_name: "_sre.SRE_Pattern.match"
    return_annotation {
      pretty_printed_name: "_sre.SRE_Match"
      fully_qualified_name: "_sre.SRE_Match"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_sre.SRE_Pattern"
        fully_qualified_name: "_sre.SRE_Pattern"
      }
    }
    parameters {
      name: "pattern"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "pos"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    parameters {
      name: "endpos"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "scanner"
    fully_qualified_name: "_sre.SRE_Pattern.scanner"
    return_annotation {
      pretty_printed_name: "_sre.SRE_Scanner"
      fully_qualified_name: "_sre.SRE_Scanner"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_sre.SRE_Pattern"
        fully_qualified_name: "_sre.SRE_Pattern"
      }
    }
    parameters {
      name: "s"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "start"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    parameters {
      name: "end"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "search"
    fully_qualified_name: "_sre.SRE_Pattern.search"
    return_annotation {
      pretty_printed_name: "_sre.SRE_Match"
      fully_qualified_name: "_sre.SRE_Match"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_sre.SRE_Pattern"
        fully_qualified_name: "_sre.SRE_Pattern"
      }
    }
    parameters {
      name: "pattern"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "pos"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    parameters {
      name: "endpos"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "split"
    fully_qualified_name: "_sre.SRE_Pattern.split"
    return_annotation {
      pretty_printed_name: "builtins.list[Union[builtins.str,None]]"
      args {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_sre.SRE_Pattern"
        fully_qualified_name: "_sre.SRE_Pattern"
      }
    }
    parameters {
      name: "source"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "maxsplit"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "sub"
    fully_qualified_name: "_sre.SRE_Pattern.sub"
    return_annotation {
      pretty_printed_name: "builtins.tuple[Any]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "builtins.tuple"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_sre.SRE_Pattern"
        fully_qualified_name: "_sre.SRE_Pattern"
      }
    }
    parameters {
      name: "repl"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "string"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "count"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    valid_for: "27"
  }
  methods {
    name: "subn"
    fully_qualified_name: "_sre.SRE_Pattern.subn"
    return_annotation {
      pretty_printed_name: "builtins.tuple[Any]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "builtins.tuple"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_sre.SRE_Pattern"
        fully_qualified_name: "_sre.SRE_Pattern"
      }
    }
    parameters {
      name: "repl"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "string"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "count"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      has_default: true
    }
    valid_for: "27"
  }
  valid_for: "27"
  attributes {
    name: "pattern"
    fully_qualified_name: "_sre.SRE_Pattern.pattern"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "27"
  }
  attributes {
    name: "flags"
    fully_qualified_name: "_sre.SRE_Pattern.flags"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "27"
  }
  attributes {
    name: "groups"
    fully_qualified_name: "_sre.SRE_Pattern.groups"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    valid_for: "27"
  }
  attributes {
    name: "groupindex"
    fully_qualified_name: "_sre.SRE_Pattern.groupindex"
    type_annotation {
      pretty_printed_name: "typing.Mapping[builtins.str,builtins.int]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      fully_qualified_name: "typing.Mapping"
    }
    valid_for: "27"
  }
  attributes {
    name: "indexgroup"
    fully_qualified_name: "_sre.SRE_Pattern.indexgroup"
    type_annotation {
      pretty_printed_name: "typing.Sequence[builtins.int]"
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      fully_qualified_name: "typing.Sequence"
    }
    valid_for: "27"
  }
}
functions {
  name: "compile"
  fully_qualified_name: "_sre.compile"
  return_annotation {
    pretty_printed_name: "_sre.SRE_Pattern"
    fully_qualified_name: "_sre.SRE_Pattern"
  }
  parameters {
    name: "pattern"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  parameters {
    name: "flags"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "code"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.list[builtins.int]"
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      fully_qualified_name: "builtins.list"
    }
  }
  parameters {
    name: "groups"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    has_default: true
  }
  parameters {
    name: "groupindex"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "typing.Mapping[builtins.str,builtins.int]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      fully_qualified_name: "typing.Mapping"
    }
    has_default: true
  }
  parameters {
    name: "indexgroup"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "typing.Sequence[builtins.int]"
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      fully_qualified_name: "typing.Sequence"
    }
    has_default: true
  }
  valid_for: "27"
}
functions {
  name: "getcodesize"
  fully_qualified_name: "_sre.getcodesize"
  return_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
  valid_for: "27"
}
functions {
  name: "getlower"
  fully_qualified_name: "_sre.getlower"
  return_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
  parameters {
    name: "a"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "b"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  valid_for: "27"
}
vars {
  name: "CODESIZE"
  fully_qualified_name: "_sre.CODESIZE"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
  valid_for: "27"
}
vars {
  name: "MAGIC"
  fully_qualified_name: "_sre.MAGIC"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
  valid_for: "27"
}
vars {
  name: "MAXREPEAT"
  fully_qualified_name: "_sre.MAXREPEAT"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
  valid_for: "27"
}
vars {
  name: "copyright"
  fully_qualified_name: "_sre.copyright"
  type_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
  valid_for: "27"
}
