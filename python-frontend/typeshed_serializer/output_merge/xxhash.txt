fully_qualified_name: "xxhash"
classes {
  name: "_IntDigestHash"
  fully_qualified_name: "xxhash._IntDigestHash"
  super_classes: "hashlib._Hash"
  methods {
    name: "__init__"
    fully_qualified_name: "xxhash._IntDigestHash.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xxhash._IntDigestHash"
        fully_qualified_name: "xxhash._IntDigestHash"
      }
    }
    parameters {
      name: "__string"
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "builtins.bytearray"
            fully_qualified_name: "builtins.bytearray"
          }
          args {
            pretty_printed_name: "builtins.memoryview"
            fully_qualified_name: "builtins.memoryview"
          }
          args {
            pretty_printed_name: "array.array[Any]"
            args {
              pretty_printed_name: "Any"
              kind: ANY
            }
            fully_qualified_name: "array.array"
          }
          args {
            pretty_printed_name: "mmap.mmap"
            fully_qualified_name: "mmap.mmap"
          }
        }
        fully_qualified_name: "_typeshed.ReadableBuffer"
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  methods {
    name: "intdigest"
    fully_qualified_name: "xxhash._IntDigestHash.intdigest"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "xxhash._IntDigestHash"
        fully_qualified_name: "xxhash._IntDigestHash"
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "xxh32"
  fully_qualified_name: "xxhash.xxh32"
  super_classes: "xxhash._IntDigestHash"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "xxh64"
  fully_qualified_name: "xxhash.xxh64"
  super_classes: "xxhash._IntDigestHash"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "xxh3_64"
  fully_qualified_name: "xxhash.xxh3_64"
  super_classes: "xxhash._IntDigestHash"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
classes {
  name: "xxh3_128"
  fully_qualified_name: "xxhash.xxh3_128"
  super_classes: "xxhash._IntDigestHash"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "xxh32_digest"
  fully_qualified_name: "xxhash.xxh32_digest"
  return_annotation {
    pretty_printed_name: "builtins.bytes"
    fully_qualified_name: "builtins.bytes"
  }
  parameters {
    name: "input"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "builtins.bytearray"
          fully_qualified_name: "builtins.bytearray"
        }
        args {
          pretty_printed_name: "builtins.memoryview"
          fully_qualified_name: "builtins.memoryview"
        }
        args {
          pretty_printed_name: "array.array[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "array.array"
        }
        args {
          pretty_printed_name: "mmap.mmap"
          fully_qualified_name: "mmap.mmap"
        }
      }
      fully_qualified_name: "_typeshed.ReadableBuffer"
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "xxh32_intdigest"
  fully_qualified_name: "xxhash.xxh32_intdigest"
  return_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
  parameters {
    name: "input"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "builtins.bytearray"
          fully_qualified_name: "builtins.bytearray"
        }
        args {
          pretty_printed_name: "builtins.memoryview"
          fully_qualified_name: "builtins.memoryview"
        }
        args {
          pretty_printed_name: "array.array[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "array.array"
        }
        args {
          pretty_printed_name: "mmap.mmap"
          fully_qualified_name: "mmap.mmap"
        }
      }
      fully_qualified_name: "_typeshed.ReadableBuffer"
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "xxh32_hexdigest"
  fully_qualified_name: "xxhash.xxh32_hexdigest"
  return_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
  parameters {
    name: "input"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "builtins.bytearray"
          fully_qualified_name: "builtins.bytearray"
        }
        args {
          pretty_printed_name: "builtins.memoryview"
          fully_qualified_name: "builtins.memoryview"
        }
        args {
          pretty_printed_name: "array.array[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "array.array"
        }
        args {
          pretty_printed_name: "mmap.mmap"
          fully_qualified_name: "mmap.mmap"
        }
      }
      fully_qualified_name: "_typeshed.ReadableBuffer"
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "xxh64_digest"
  fully_qualified_name: "xxhash.xxh64_digest"
  return_annotation {
    pretty_printed_name: "builtins.bytes"
    fully_qualified_name: "builtins.bytes"
  }
  parameters {
    name: "input"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "builtins.bytearray"
          fully_qualified_name: "builtins.bytearray"
        }
        args {
          pretty_printed_name: "builtins.memoryview"
          fully_qualified_name: "builtins.memoryview"
        }
        args {
          pretty_printed_name: "array.array[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "array.array"
        }
        args {
          pretty_printed_name: "mmap.mmap"
          fully_qualified_name: "mmap.mmap"
        }
      }
      fully_qualified_name: "_typeshed.ReadableBuffer"
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "xxh64_intdigest"
  fully_qualified_name: "xxhash.xxh64_intdigest"
  return_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
  parameters {
    name: "input"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "builtins.bytearray"
          fully_qualified_name: "builtins.bytearray"
        }
        args {
          pretty_printed_name: "builtins.memoryview"
          fully_qualified_name: "builtins.memoryview"
        }
        args {
          pretty_printed_name: "array.array[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "array.array"
        }
        args {
          pretty_printed_name: "mmap.mmap"
          fully_qualified_name: "mmap.mmap"
        }
      }
      fully_qualified_name: "_typeshed.ReadableBuffer"
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "xxh64_hexdigest"
  fully_qualified_name: "xxhash.xxh64_hexdigest"
  return_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
  parameters {
    name: "input"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "builtins.bytearray"
          fully_qualified_name: "builtins.bytearray"
        }
        args {
          pretty_printed_name: "builtins.memoryview"
          fully_qualified_name: "builtins.memoryview"
        }
        args {
          pretty_printed_name: "array.array[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "array.array"
        }
        args {
          pretty_printed_name: "mmap.mmap"
          fully_qualified_name: "mmap.mmap"
        }
      }
      fully_qualified_name: "_typeshed.ReadableBuffer"
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "xxh3_64_digest"
  fully_qualified_name: "xxhash.xxh3_64_digest"
  return_annotation {
    pretty_printed_name: "builtins.bytes"
    fully_qualified_name: "builtins.bytes"
  }
  parameters {
    name: "input"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "builtins.bytearray"
          fully_qualified_name: "builtins.bytearray"
        }
        args {
          pretty_printed_name: "builtins.memoryview"
          fully_qualified_name: "builtins.memoryview"
        }
        args {
          pretty_printed_name: "array.array[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "array.array"
        }
        args {
          pretty_printed_name: "mmap.mmap"
          fully_qualified_name: "mmap.mmap"
        }
      }
      fully_qualified_name: "_typeshed.ReadableBuffer"
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "xxh3_64_intdigest"
  fully_qualified_name: "xxhash.xxh3_64_intdigest"
  return_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
  parameters {
    name: "input"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "builtins.bytearray"
          fully_qualified_name: "builtins.bytearray"
        }
        args {
          pretty_printed_name: "builtins.memoryview"
          fully_qualified_name: "builtins.memoryview"
        }
        args {
          pretty_printed_name: "array.array[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "array.array"
        }
        args {
          pretty_printed_name: "mmap.mmap"
          fully_qualified_name: "mmap.mmap"
        }
      }
      fully_qualified_name: "_typeshed.ReadableBuffer"
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "xxh3_64_hexdigest"
  fully_qualified_name: "xxhash.xxh3_64_hexdigest"
  return_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
  parameters {
    name: "input"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "builtins.bytearray"
          fully_qualified_name: "builtins.bytearray"
        }
        args {
          pretty_printed_name: "builtins.memoryview"
          fully_qualified_name: "builtins.memoryview"
        }
        args {
          pretty_printed_name: "array.array[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "array.array"
        }
        args {
          pretty_printed_name: "mmap.mmap"
          fully_qualified_name: "mmap.mmap"
        }
      }
      fully_qualified_name: "_typeshed.ReadableBuffer"
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "xxh3_128_digest"
  fully_qualified_name: "xxhash.xxh3_128_digest"
  return_annotation {
    pretty_printed_name: "builtins.bytes"
    fully_qualified_name: "builtins.bytes"
  }
  parameters {
    name: "input"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "builtins.bytearray"
          fully_qualified_name: "builtins.bytearray"
        }
        args {
          pretty_printed_name: "builtins.memoryview"
          fully_qualified_name: "builtins.memoryview"
        }
        args {
          pretty_printed_name: "array.array[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "array.array"
        }
        args {
          pretty_printed_name: "mmap.mmap"
          fully_qualified_name: "mmap.mmap"
        }
      }
      fully_qualified_name: "_typeshed.ReadableBuffer"
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "xxh3_128_intdigest"
  fully_qualified_name: "xxhash.xxh3_128_intdigest"
  return_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
  parameters {
    name: "input"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "builtins.bytearray"
          fully_qualified_name: "builtins.bytearray"
        }
        args {
          pretty_printed_name: "builtins.memoryview"
          fully_qualified_name: "builtins.memoryview"
        }
        args {
          pretty_printed_name: "array.array[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "array.array"
        }
        args {
          pretty_printed_name: "mmap.mmap"
          fully_qualified_name: "mmap.mmap"
        }
      }
      fully_qualified_name: "_typeshed.ReadableBuffer"
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
functions {
  name: "xxh3_128_hexdigest"
  fully_qualified_name: "xxhash.xxh3_128_hexdigest"
  return_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
  parameters {
    name: "input"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "builtins.bytearray"
          fully_qualified_name: "builtins.bytearray"
        }
        args {
          pretty_printed_name: "builtins.memoryview"
          fully_qualified_name: "builtins.memoryview"
        }
        args {
          pretty_printed_name: "array.array[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "array.array"
        }
        args {
          pretty_printed_name: "mmap.mmap"
          fully_qualified_name: "mmap.mmap"
        }
      }
      fully_qualified_name: "_typeshed.ReadableBuffer"
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "VERSION"
  fully_qualified_name: "xxhash.VERSION"
  type_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "XXHASH_VERSION"
  fully_qualified_name: "xxhash.XXHASH_VERSION"
  type_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "xxh128_digest"
  fully_qualified_name: "xxhash.xxh128_digest"
  type_annotation {
    pretty_printed_name: "CallableType[builtins.function]"
    kind: CALLABLE
    args {
      pretty_printed_name: "builtins.function"
      fully_qualified_name: "builtins.function"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "xxh128_intdigest"
  fully_qualified_name: "xxhash.xxh128_intdigest"
  type_annotation {
    pretty_printed_name: "CallableType[builtins.function]"
    kind: CALLABLE
    args {
      pretty_printed_name: "builtins.function"
      fully_qualified_name: "builtins.function"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "xxh128_hexdigest"
  fully_qualified_name: "xxhash.xxh128_hexdigest"
  type_annotation {
    pretty_printed_name: "CallableType[builtins.function]"
    kind: CALLABLE
    args {
      pretty_printed_name: "builtins.function"
      fully_qualified_name: "builtins.function"
    }
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
}
