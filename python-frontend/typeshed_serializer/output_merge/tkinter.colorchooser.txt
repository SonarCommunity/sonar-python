fully_qualified_name: "tkinter.colorchooser"
classes {
  name: "Chooser"
  fully_qualified_name: "tkinter.colorchooser.Chooser"
  super_classes: "tkinter.commondialog.Dialog"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "command"
    fully_qualified_name: "tkinter.colorchooser.Chooser.command"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
functions {
  name: "askcolor"
  fully_qualified_name: "tkinter.colorchooser.askcolor"
  return_annotation {
    pretty_printed_name: "Union[Tuple[None,None],Tuple[Tuple[builtins.float,builtins.float,builtins.float],builtins.str]]"
    kind: UNION
    args {
      pretty_printed_name: "Tuple[None,None]"
      kind: TUPLE
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    args {
      pretty_printed_name: "Tuple[Tuple[builtins.float,builtins.float,builtins.float],builtins.str]"
      kind: TUPLE
      args {
        pretty_printed_name: "Tuple[builtins.float,builtins.float,builtins.float]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  parameters {
    name: "color"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,builtins.bytes,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "initialcolor"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    has_default: true
  }
  parameters {
    name: "parent"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "tkinter.Misc"
      fully_qualified_name: "tkinter.Misc"
    }
    has_default: true
  }
  parameters {
    name: "title"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    has_default: true
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
}
functions {
  name: "askcolor"
  fully_qualified_name: "tkinter.colorchooser.askcolor"
  return_annotation {
    pretty_printed_name: "Union[Tuple[None,None],Tuple[Tuple[builtins.int,builtins.int,builtins.int],builtins.str]]"
    kind: UNION
    args {
      pretty_printed_name: "Tuple[None,None]"
      kind: TUPLE
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    args {
      pretty_printed_name: "Tuple[Tuple[builtins.int,builtins.int,builtins.int],builtins.str]"
      kind: TUPLE
      args {
        pretty_printed_name: "Tuple[builtins.int,builtins.int,builtins.int]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  parameters {
    name: "color"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,builtins.bytes,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "initialcolor"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    has_default: true
  }
  parameters {
    name: "parent"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "tkinter.Misc"
      fully_qualified_name: "tkinter.Misc"
    }
    has_default: true
  }
  parameters {
    name: "title"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    has_default: true
  }
  valid_for: "39"
  valid_for: "310"
}
vars {
  name: "__all__"
  fully_qualified_name: "tkinter.colorchooser.__all__"
  type_annotation {
    pretty_printed_name: "builtins.list[builtins.str]"
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    fully_qualified_name: "builtins.list"
  }
  valid_for: "39"
  valid_for: "310"
}
