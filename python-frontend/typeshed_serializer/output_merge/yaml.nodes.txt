fully_qualified_name: "yaml.nodes"
classes {
  name: "Node"
  fully_qualified_name: "yaml.nodes.Node"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "yaml.nodes.Node.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "yaml.nodes.Node"
        fully_qualified_name: "yaml.nodes.Node"
      }
    }
    parameters {
      name: "tag"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "start_mark"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[yaml.error.Mark,None]"
        kind: UNION
        args {
          pretty_printed_name: "yaml.error.Mark"
          fully_qualified_name: "yaml.error.Mark"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "end_mark"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[yaml.error.Mark,None]"
        kind: UNION
        args {
          pretty_printed_name: "yaml.error.Mark"
          fully_qualified_name: "yaml.error.Mark"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "tag"
    fully_qualified_name: "yaml.nodes.Node.tag"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "value"
    fully_qualified_name: "yaml.nodes.Node.value"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "start_mark"
    fully_qualified_name: "yaml.nodes.Node.start_mark"
    type_annotation {
      pretty_printed_name: "Union[yaml.error.Mark,Any]"
      kind: UNION
      args {
        pretty_printed_name: "yaml.error.Mark"
        fully_qualified_name: "yaml.error.Mark"
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "end_mark"
    fully_qualified_name: "yaml.nodes.Node.end_mark"
    type_annotation {
      pretty_printed_name: "Union[yaml.error.Mark,Any]"
      kind: UNION
      args {
        pretty_printed_name: "yaml.error.Mark"
        fully_qualified_name: "yaml.error.Mark"
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "ScalarNode"
  fully_qualified_name: "yaml.nodes.ScalarNode"
  super_classes: "yaml.nodes.Node"
  methods {
    name: "__init__"
    fully_qualified_name: "yaml.nodes.ScalarNode.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "yaml.nodes.ScalarNode"
        fully_qualified_name: "yaml.nodes.ScalarNode"
      }
    }
    parameters {
      name: "tag"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "start_mark"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[yaml.error.Mark,None]"
        kind: UNION
        args {
          pretty_printed_name: "yaml.error.Mark"
          fully_qualified_name: "yaml.error.Mark"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "end_mark"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[yaml.error.Mark,None]"
        kind: UNION
        args {
          pretty_printed_name: "yaml.error.Mark"
          fully_qualified_name: "yaml.error.Mark"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "style"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "id"
    fully_qualified_name: "yaml.nodes.ScalarNode.id"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  attributes {
    name: "style"
    fully_qualified_name: "yaml.nodes.ScalarNode.style"
    type_annotation {
      pretty_printed_name: "Union[builtins.str,Any]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "CollectionNode"
  fully_qualified_name: "yaml.nodes.CollectionNode"
  super_classes: "yaml.nodes.Node"
  methods {
    name: "__init__"
    fully_qualified_name: "yaml.nodes.CollectionNode.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "yaml.nodes.CollectionNode"
        fully_qualified_name: "yaml.nodes.CollectionNode"
      }
    }
    parameters {
      name: "tag"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "start_mark"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[yaml.error.Mark,None]"
        kind: UNION
        args {
          pretty_printed_name: "yaml.error.Mark"
          fully_qualified_name: "yaml.error.Mark"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "end_mark"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[yaml.error.Mark,None]"
        kind: UNION
        args {
          pretty_printed_name: "yaml.error.Mark"
          fully_qualified_name: "yaml.error.Mark"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "flow_style"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.bool,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "flow_style"
    fully_qualified_name: "yaml.nodes.CollectionNode.flow_style"
    type_annotation {
      pretty_printed_name: "Union[builtins.bool,Any]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "SequenceNode"
  fully_qualified_name: "yaml.nodes.SequenceNode"
  super_classes: "yaml.nodes.CollectionNode"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "id"
    fully_qualified_name: "yaml.nodes.SequenceNode.id"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
classes {
  name: "MappingNode"
  fully_qualified_name: "yaml.nodes.MappingNode"
  super_classes: "yaml.nodes.CollectionNode"
  valid_for: "35"
  valid_for: "36"
  valid_for: "37"
  valid_for: "38"
  valid_for: "39"
  valid_for: "310"
  attributes {
    name: "id"
    fully_qualified_name: "yaml.nodes.MappingNode.id"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    valid_for: "35"
    valid_for: "36"
    valid_for: "37"
    valid_for: "38"
    valid_for: "39"
    valid_for: "310"
  }
}
