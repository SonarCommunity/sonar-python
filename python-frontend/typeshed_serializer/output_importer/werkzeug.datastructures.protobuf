fully_qualified_name: "werkzeug.datastructures"
classes {
  name: "Accept"
  fully_qualified_name: "werkzeug.datastructures.accept.Accept"
  super_classes: "werkzeug.datastructures.structures.ImmutableList"
  methods {
    name: "__init__"
    fully_qualified_name: "werkzeug.datastructures.accept.Accept.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.accept.Accept"
        fully_qualified_name: "werkzeug.datastructures.accept.Accept"
      }
    }
    parameters {
      name: "values"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[werkzeug.datastructures.accept.Accept,typing.Iterable[Tuple[builtins.str,builtins.float]],None]"
        kind: UNION
        args {
          pretty_printed_name: "werkzeug.datastructures.accept.Accept"
          fully_qualified_name: "werkzeug.datastructures.accept.Accept"
        }
        args {
          pretty_printed_name: "typing.Iterable[Tuple[builtins.str,builtins.float]]"
          args {
            pretty_printed_name: "Tuple[builtins.str,builtins.float]"
            kind: TUPLE
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.float"
              fully_qualified_name: "builtins.float"
            }
          }
          fully_qualified_name: "typing.Iterable"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "_specificity"
    fully_qualified_name: "werkzeug.datastructures.accept.Accept._specificity"
    return_annotation {
      pretty_printed_name: "builtins.tuple[builtins.bool]"
      args {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      fully_qualified_name: "builtins.tuple"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.accept.Accept"
        fully_qualified_name: "werkzeug.datastructures.accept.Accept"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  methods {
    name: "_value_matches"
    fully_qualified_name: "werkzeug.datastructures.accept.Accept._value_matches"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.accept.Accept"
        fully_qualified_name: "werkzeug.datastructures.accept.Accept"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "item"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  methods {
    name: "quality"
    fully_qualified_name: "werkzeug.datastructures.accept.Accept.quality"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.accept.Accept"
        fully_qualified_name: "werkzeug.datastructures.accept.Accept"
      }
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  methods {
    name: "__contains__"
    fully_qualified_name: "werkzeug.datastructures.accept.Accept.__contains__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.accept.Accept"
        fully_qualified_name: "werkzeug.datastructures.accept.Accept"
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  methods {
    name: "index"
    fully_qualified_name: "werkzeug.datastructures.accept.Accept.index"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.accept.Accept"
        fully_qualified_name: "werkzeug.datastructures.accept.Accept"
      }
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  methods {
    name: "find"
    fully_qualified_name: "werkzeug.datastructures.accept.Accept.find"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.accept.Accept"
        fully_qualified_name: "werkzeug.datastructures.accept.Accept"
      }
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  methods {
    name: "values"
    fully_qualified_name: "werkzeug.datastructures.accept.Accept.values"
    return_annotation {
      pretty_printed_name: "typing.Iterator[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.accept.Accept"
        fully_qualified_name: "werkzeug.datastructures.accept.Accept"
      }
    }
  }
  methods {
    name: "to_header"
    fully_qualified_name: "werkzeug.datastructures.accept.Accept.to_header"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.accept.Accept"
        fully_qualified_name: "werkzeug.datastructures.accept.Accept"
      }
    }
  }
  methods {
    name: "_best_single_match"
    fully_qualified_name: "werkzeug.datastructures.accept.Accept._best_single_match"
    return_annotation {
      pretty_printed_name: "Union[Tuple[builtins.str,builtins.int],None]"
      kind: UNION
      args {
        pretty_printed_name: "Tuple[builtins.str,builtins.int]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.accept.Accept"
        fully_qualified_name: "werkzeug.datastructures.accept.Accept"
      }
    }
    parameters {
      name: "match"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  methods {
    name: "best"
    fully_qualified_name: "werkzeug.datastructures.accept.Accept.best"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.accept.Accept"
        fully_qualified_name: "werkzeug.datastructures.accept.Accept"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  overloaded_methods {
    name: "__getitem__"
    fullname: "werkzeug.datastructures.accept.Accept.__getitem__"
    definitions {
      name: "__getitem__"
      fully_qualified_name: "werkzeug.datastructures.accept.Accept.__getitem__"
      return_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.accept.Accept"
          fully_qualified_name: "werkzeug.datastructures.accept.Accept"
        }
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__getitem__"
      fully_qualified_name: "werkzeug.datastructures.accept.Accept.__getitem__"
      return_annotation {
        pretty_printed_name: "Tuple[builtins.str,builtins.int]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.accept.Accept"
          fully_qualified_name: "werkzeug.datastructures.accept.Accept"
        }
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__getitem__"
      fully_qualified_name: "werkzeug.datastructures.accept.Accept.__getitem__"
      return_annotation {
        pretty_printed_name: "typing.Iterable[Tuple[builtins.str,builtins.int]]"
        args {
          pretty_printed_name: "Tuple[builtins.str,builtins.int]"
          kind: TUPLE
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
        }
        fully_qualified_name: "typing.Iterable"
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.accept.Accept"
          fully_qualified_name: "werkzeug.datastructures.accept.Accept"
        }
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "builtins.slice"
          fully_qualified_name: "builtins.slice"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
  }
  overloaded_methods {
    name: "best_match"
    fullname: "werkzeug.datastructures.accept.Accept.best_match"
    definitions {
      name: "best_match"
      fully_qualified_name: "werkzeug.datastructures.accept.Accept.best_match"
      return_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.accept.Accept"
          fully_qualified_name: "werkzeug.datastructures.accept.Accept"
        }
      }
      parameters {
        name: "matches"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "default"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "best_match"
      fully_qualified_name: "werkzeug.datastructures.accept.Accept.best_match"
      return_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.accept.Accept"
          fully_qualified_name: "werkzeug.datastructures.accept.Accept"
        }
      }
      parameters {
        name: "matches"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "default"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
  }
  attributes {
    name: "provided"
    fully_qualified_name: "werkzeug.datastructures.accept.Accept.provided"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
}
classes {
  name: "CharsetAccept"
  fully_qualified_name: "werkzeug.datastructures.accept.CharsetAccept"
  super_classes: "werkzeug.datastructures.accept.Accept"
  methods {
    name: "_value_matches"
    fully_qualified_name: "werkzeug.datastructures.accept.CharsetAccept._value_matches"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.accept.CharsetAccept"
        fully_qualified_name: "werkzeug.datastructures.accept.CharsetAccept"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "item"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
}
classes {
  name: "LanguageAccept"
  fully_qualified_name: "werkzeug.datastructures.accept.LanguageAccept"
  super_classes: "werkzeug.datastructures.accept.Accept"
  methods {
    name: "_value_matches"
    fully_qualified_name: "werkzeug.datastructures.accept.LanguageAccept._value_matches"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.accept.LanguageAccept"
        fully_qualified_name: "werkzeug.datastructures.accept.LanguageAccept"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "item"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
}
classes {
  name: "MIMEAccept"
  fully_qualified_name: "werkzeug.datastructures.accept.MIMEAccept"
  super_classes: "werkzeug.datastructures.accept.Accept"
  methods {
    name: "_specificity"
    fully_qualified_name: "werkzeug.datastructures.accept.MIMEAccept._specificity"
    return_annotation {
      pretty_printed_name: "builtins.tuple[builtins.bool]"
      args {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      fully_qualified_name: "builtins.tuple"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.accept.MIMEAccept"
        fully_qualified_name: "werkzeug.datastructures.accept.MIMEAccept"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  methods {
    name: "_value_matches"
    fully_qualified_name: "werkzeug.datastructures.accept.MIMEAccept._value_matches"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.accept.MIMEAccept"
        fully_qualified_name: "werkzeug.datastructures.accept.MIMEAccept"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "item"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  methods {
    name: "accept_html"
    fully_qualified_name: "werkzeug.datastructures.accept.MIMEAccept.accept_html"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.accept.MIMEAccept"
        fully_qualified_name: "werkzeug.datastructures.accept.MIMEAccept"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "accept_xhtml"
    fully_qualified_name: "werkzeug.datastructures.accept.MIMEAccept.accept_xhtml"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.accept.MIMEAccept"
        fully_qualified_name: "werkzeug.datastructures.accept.MIMEAccept"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "accept_json"
    fully_qualified_name: "werkzeug.datastructures.accept.MIMEAccept.accept_json"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.accept.MIMEAccept"
        fully_qualified_name: "werkzeug.datastructures.accept.MIMEAccept"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
}
classes {
  name: "Authorization"
  fully_qualified_name: "werkzeug.datastructures.auth.Authorization"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "werkzeug.datastructures.auth.Authorization.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.auth.Authorization"
        fully_qualified_name: "werkzeug.datastructures.auth.Authorization"
      }
    }
    parameters {
      name: "auth_type"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "data"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.dict[builtins.str,builtins.str],None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.dict[builtins.str,builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "builtins.dict"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "token"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "__getattr__"
    fully_qualified_name: "werkzeug.datastructures.auth.Authorization.__getattr__"
    return_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.auth.Authorization"
        fully_qualified_name: "werkzeug.datastructures.auth.Authorization"
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  methods {
    name: "__getitem__"
    fully_qualified_name: "werkzeug.datastructures.auth.Authorization.__getitem__"
    return_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.auth.Authorization"
        fully_qualified_name: "werkzeug.datastructures.auth.Authorization"
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  methods {
    name: "get"
    fully_qualified_name: "werkzeug.datastructures.auth.Authorization.get"
    return_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.auth.Authorization"
        fully_qualified_name: "werkzeug.datastructures.auth.Authorization"
      }
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "default"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "__contains__"
    fully_qualified_name: "werkzeug.datastructures.auth.Authorization.__contains__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.auth.Authorization"
        fully_qualified_name: "werkzeug.datastructures.auth.Authorization"
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  methods {
    name: "__eq__"
    fully_qualified_name: "werkzeug.datastructures.auth.Authorization.__eq__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.auth.Authorization"
        fully_qualified_name: "werkzeug.datastructures.auth.Authorization"
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
  }
  methods {
    name: "from_header"
    fully_qualified_name: "werkzeug.datastructures.auth.Authorization.from_header"
    return_annotation {
      pretty_printed_name: "Union[werkzeug.datastructures.auth.Authorization.Self,None]"
      kind: UNION
      args {
        pretty_printed_name: "werkzeug.datastructures.auth.Authorization.Self"
        kind: TYPE_VAR
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[werkzeug.datastructures.auth.Authorization.Self]"
        kind: TYPE
        args {
          pretty_printed_name: "werkzeug.datastructures.auth.Authorization.Self"
          kind: TYPE_VAR
        }
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "classmethod"
    is_class_method: true
  }
  methods {
    name: "to_header"
    fully_qualified_name: "werkzeug.datastructures.auth.Authorization.to_header"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.auth.Authorization"
        fully_qualified_name: "werkzeug.datastructures.auth.Authorization"
      }
    }
  }
  methods {
    name: "__str__"
    fully_qualified_name: "werkzeug.datastructures.auth.Authorization.__str__"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.auth.Authorization"
        fully_qualified_name: "werkzeug.datastructures.auth.Authorization"
      }
    }
  }
  methods {
    name: "__repr__"
    fully_qualified_name: "werkzeug.datastructures.auth.Authorization.__repr__"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.auth.Authorization"
        fully_qualified_name: "werkzeug.datastructures.auth.Authorization"
      }
    }
  }
  attributes {
    name: "type"
    fully_qualified_name: "werkzeug.datastructures.auth.Authorization.type"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  attributes {
    name: "parameters"
    fully_qualified_name: "werkzeug.datastructures.auth.Authorization.parameters"
    type_annotation {
      pretty_printed_name: "builtins.dict[builtins.str,builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "builtins.dict"
    }
  }
  attributes {
    name: "token"
    fully_qualified_name: "werkzeug.datastructures.auth.Authorization.token"
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
}
classes {
  name: "WWWAuthenticate"
  fully_qualified_name: "werkzeug.datastructures.auth.WWWAuthenticate"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "werkzeug.datastructures.auth.WWWAuthenticate.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.auth.WWWAuthenticate"
        fully_qualified_name: "werkzeug.datastructures.auth.WWWAuthenticate"
      }
    }
    parameters {
      name: "auth_type"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "values"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.dict[builtins.str,builtins.str],None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.dict[builtins.str,builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "builtins.dict"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "token"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "_trigger_on_update"
    fully_qualified_name: "werkzeug.datastructures.auth.WWWAuthenticate._trigger_on_update"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.auth.WWWAuthenticate"
        fully_qualified_name: "werkzeug.datastructures.auth.WWWAuthenticate"
      }
    }
  }
  methods {
    name: "set_basic"
    fully_qualified_name: "werkzeug.datastructures.auth.WWWAuthenticate.set_basic"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.auth.WWWAuthenticate"
        fully_qualified_name: "werkzeug.datastructures.auth.WWWAuthenticate"
      }
    }
    parameters {
      name: "realm"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  methods {
    name: "set_digest"
    fully_qualified_name: "werkzeug.datastructures.auth.WWWAuthenticate.set_digest"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.auth.WWWAuthenticate"
        fully_qualified_name: "werkzeug.datastructures.auth.WWWAuthenticate"
      }
    }
    parameters {
      name: "realm"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "nonce"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "qop"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Sequence[builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "typing.Sequence"
      }
    }
    parameters {
      name: "opaque"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "algorithm"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "stale"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
  }
  methods {
    name: "__getitem__"
    fully_qualified_name: "werkzeug.datastructures.auth.WWWAuthenticate.__getitem__"
    return_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.auth.WWWAuthenticate"
        fully_qualified_name: "werkzeug.datastructures.auth.WWWAuthenticate"
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  methods {
    name: "__setitem__"
    fully_qualified_name: "werkzeug.datastructures.auth.WWWAuthenticate.__setitem__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.auth.WWWAuthenticate"
        fully_qualified_name: "werkzeug.datastructures.auth.WWWAuthenticate"
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "__delitem__"
    fully_qualified_name: "werkzeug.datastructures.auth.WWWAuthenticate.__delitem__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.auth.WWWAuthenticate"
        fully_qualified_name: "werkzeug.datastructures.auth.WWWAuthenticate"
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  methods {
    name: "__getattr__"
    fully_qualified_name: "werkzeug.datastructures.auth.WWWAuthenticate.__getattr__"
    return_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.auth.WWWAuthenticate"
        fully_qualified_name: "werkzeug.datastructures.auth.WWWAuthenticate"
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  methods {
    name: "__setattr__"
    fully_qualified_name: "werkzeug.datastructures.auth.WWWAuthenticate.__setattr__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.auth.WWWAuthenticate"
        fully_qualified_name: "werkzeug.datastructures.auth.WWWAuthenticate"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "__delattr__"
    fully_qualified_name: "werkzeug.datastructures.auth.WWWAuthenticate.__delattr__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.auth.WWWAuthenticate"
        fully_qualified_name: "werkzeug.datastructures.auth.WWWAuthenticate"
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  methods {
    name: "__contains__"
    fully_qualified_name: "werkzeug.datastructures.auth.WWWAuthenticate.__contains__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.auth.WWWAuthenticate"
        fully_qualified_name: "werkzeug.datastructures.auth.WWWAuthenticate"
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  methods {
    name: "__eq__"
    fully_qualified_name: "werkzeug.datastructures.auth.WWWAuthenticate.__eq__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.auth.WWWAuthenticate"
        fully_qualified_name: "werkzeug.datastructures.auth.WWWAuthenticate"
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
  }
  methods {
    name: "get"
    fully_qualified_name: "werkzeug.datastructures.auth.WWWAuthenticate.get"
    return_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.auth.WWWAuthenticate"
        fully_qualified_name: "werkzeug.datastructures.auth.WWWAuthenticate"
      }
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "default"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "from_header"
    fully_qualified_name: "werkzeug.datastructures.auth.WWWAuthenticate.from_header"
    return_annotation {
      pretty_printed_name: "Union[werkzeug.datastructures.auth.WWWAuthenticate.Self,None]"
      kind: UNION
      args {
        pretty_printed_name: "werkzeug.datastructures.auth.WWWAuthenticate.Self"
        kind: TYPE_VAR
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[werkzeug.datastructures.auth.WWWAuthenticate.Self]"
        kind: TYPE
        args {
          pretty_printed_name: "werkzeug.datastructures.auth.WWWAuthenticate.Self"
          kind: TYPE_VAR
        }
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "classmethod"
    is_class_method: true
  }
  methods {
    name: "to_header"
    fully_qualified_name: "werkzeug.datastructures.auth.WWWAuthenticate.to_header"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.auth.WWWAuthenticate"
        fully_qualified_name: "werkzeug.datastructures.auth.WWWAuthenticate"
      }
    }
  }
  methods {
    name: "__str__"
    fully_qualified_name: "werkzeug.datastructures.auth.WWWAuthenticate.__str__"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.auth.WWWAuthenticate"
        fully_qualified_name: "werkzeug.datastructures.auth.WWWAuthenticate"
      }
    }
  }
  methods {
    name: "__repr__"
    fully_qualified_name: "werkzeug.datastructures.auth.WWWAuthenticate.__repr__"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.auth.WWWAuthenticate"
        fully_qualified_name: "werkzeug.datastructures.auth.WWWAuthenticate"
      }
    }
  }
  methods {
    name: "qop"
    fully_qualified_name: "werkzeug.datastructures.auth.WWWAuthenticate.qop"
    return_annotation {
      pretty_printed_name: "builtins.set[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "builtins.set"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.auth.WWWAuthenticate"
        fully_qualified_name: "werkzeug.datastructures.auth.WWWAuthenticate"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  overloaded_methods {
    name: "type"
    fullname: "werkzeug.datastructures.auth.WWWAuthenticate.type"
    definitions {
      name: "type"
      fully_qualified_name: "werkzeug.datastructures.auth.WWWAuthenticate.type"
      return_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.auth.WWWAuthenticate"
          fully_qualified_name: "werkzeug.datastructures.auth.WWWAuthenticate"
        }
      }
      has_decorators: true
      resolved_decorator_names: "property"
      is_overload: true
      is_property: true
    }
    definitions {
      name: "type"
      fully_qualified_name: "werkzeug.datastructures.auth.WWWAuthenticate.type"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.auth.WWWAuthenticate"
          fully_qualified_name: "werkzeug.datastructures.auth.WWWAuthenticate"
        }
      }
      parameters {
        name: "value"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      has_decorators: true
      resolved_decorator_names: "type.setter"
    }
  }
  overloaded_methods {
    name: "parameters"
    fullname: "werkzeug.datastructures.auth.WWWAuthenticate.parameters"
    definitions {
      name: "parameters"
      fully_qualified_name: "werkzeug.datastructures.auth.WWWAuthenticate.parameters"
      return_annotation {
        pretty_printed_name: "builtins.dict[builtins.str,builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "builtins.dict"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.auth.WWWAuthenticate"
          fully_qualified_name: "werkzeug.datastructures.auth.WWWAuthenticate"
        }
      }
      has_decorators: true
      resolved_decorator_names: "property"
      is_overload: true
      is_property: true
    }
    definitions {
      name: "parameters"
      fully_qualified_name: "werkzeug.datastructures.auth.WWWAuthenticate.parameters"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.auth.WWWAuthenticate"
          fully_qualified_name: "werkzeug.datastructures.auth.WWWAuthenticate"
        }
      }
      parameters {
        name: "value"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.dict[builtins.str,builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "builtins.dict"
        }
      }
      has_decorators: true
      resolved_decorator_names: "parameters.setter"
    }
  }
  overloaded_methods {
    name: "token"
    fullname: "werkzeug.datastructures.auth.WWWAuthenticate.token"
    definitions {
      name: "token"
      fully_qualified_name: "werkzeug.datastructures.auth.WWWAuthenticate.token"
      return_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.auth.WWWAuthenticate"
          fully_qualified_name: "werkzeug.datastructures.auth.WWWAuthenticate"
        }
      }
      has_decorators: true
      resolved_decorator_names: "property"
      is_overload: true
      is_property: true
    }
    definitions {
      name: "token"
      fully_qualified_name: "werkzeug.datastructures.auth.WWWAuthenticate.token"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.auth.WWWAuthenticate"
          fully_qualified_name: "werkzeug.datastructures.auth.WWWAuthenticate"
        }
      }
      parameters {
        name: "value"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "token.setter"
    }
  }
  overloaded_methods {
    name: "stale"
    fullname: "werkzeug.datastructures.auth.WWWAuthenticate.stale"
    definitions {
      name: "stale"
      fully_qualified_name: "werkzeug.datastructures.auth.WWWAuthenticate.stale"
      return_annotation {
        pretty_printed_name: "Union[builtins.bool,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.auth.WWWAuthenticate"
          fully_qualified_name: "werkzeug.datastructures.auth.WWWAuthenticate"
        }
      }
      has_decorators: true
      resolved_decorator_names: "property"
      is_overload: true
      is_property: true
    }
    definitions {
      name: "stale"
      fully_qualified_name: "werkzeug.datastructures.auth.WWWAuthenticate.stale"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.auth.WWWAuthenticate"
          fully_qualified_name: "werkzeug.datastructures.auth.WWWAuthenticate"
        }
      }
      parameters {
        name: "value"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.bool,builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bool"
            fully_qualified_name: "builtins.bool"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "stale.setter"
    }
  }
  attributes {
    name: "auth_property"
    fully_qualified_name: "werkzeug.datastructures.auth.WWWAuthenticate.auth_property"
    type_annotation {
      pretty_printed_name: "builtins.staticmethod[Unknown]"
      args {
      }
      args {
        pretty_printed_name: "builtins.property"
        fully_qualified_name: "builtins.property"
      }
      fully_qualified_name: "builtins.staticmethod"
    }
  }
  attributes {
    name: "_type"
    fully_qualified_name: "werkzeug.datastructures.auth.WWWAuthenticate._type"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  attributes {
    name: "_parameters"
    fully_qualified_name: "werkzeug.datastructures.auth.WWWAuthenticate._parameters"
    type_annotation {
      pretty_printed_name: "builtins.dict[builtins.str,builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "builtins.dict"
    }
  }
  attributes {
    name: "_token"
    fully_qualified_name: "werkzeug.datastructures.auth.WWWAuthenticate._token"
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  attributes {
    name: "_on_update"
    fully_qualified_name: "werkzeug.datastructures.auth.WWWAuthenticate._on_update"
    type_annotation {
      pretty_printed_name: "Union[CallableType[builtins.function],None]"
      kind: UNION
      args {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
}
classes {
  name: "RequestCacheControl"
  fully_qualified_name: "werkzeug.datastructures.cache_control.RequestCacheControl"
  super_classes: "werkzeug.datastructures.mixins.ImmutableDictMixin"
  super_classes: "werkzeug.datastructures.cache_control._CacheControl"
  overloaded_methods {
    name: "max_stale"
    fullname: "werkzeug.datastructures.cache_control.RequestCacheControl.max_stale"
    definitions {
      name: "max_stale"
      fully_qualified_name: "werkzeug.datastructures.cache_control.RequestCacheControl.max_stale"
      return_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.cache_control.RequestCacheControl"
          fully_qualified_name: "werkzeug.datastructures.cache_control.RequestCacheControl"
        }
      }
      has_decorators: true
      resolved_decorator_names: "property"
      is_overload: true
      is_property: true
    }
    definitions {
      name: "max_stale"
      fully_qualified_name: "werkzeug.datastructures.cache_control.RequestCacheControl.max_stale"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.cache_control.RequestCacheControl"
          fully_qualified_name: "werkzeug.datastructures.cache_control.RequestCacheControl"
        }
      }
      parameters {
        name: "value"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.int,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "max_stale.setter"
    }
    definitions {
      name: "max_stale"
      fully_qualified_name: "werkzeug.datastructures.cache_control.RequestCacheControl.max_stale"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.cache_control.RequestCacheControl"
          fully_qualified_name: "werkzeug.datastructures.cache_control.RequestCacheControl"
        }
      }
      has_decorators: true
      resolved_decorator_names: "max_stale.deleter"
    }
  }
  overloaded_methods {
    name: "min_fresh"
    fullname: "werkzeug.datastructures.cache_control.RequestCacheControl.min_fresh"
    definitions {
      name: "min_fresh"
      fully_qualified_name: "werkzeug.datastructures.cache_control.RequestCacheControl.min_fresh"
      return_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.cache_control.RequestCacheControl"
          fully_qualified_name: "werkzeug.datastructures.cache_control.RequestCacheControl"
        }
      }
      has_decorators: true
      resolved_decorator_names: "property"
      is_overload: true
      is_property: true
    }
    definitions {
      name: "min_fresh"
      fully_qualified_name: "werkzeug.datastructures.cache_control.RequestCacheControl.min_fresh"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.cache_control.RequestCacheControl"
          fully_qualified_name: "werkzeug.datastructures.cache_control.RequestCacheControl"
        }
      }
      parameters {
        name: "value"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.int,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "min_fresh.setter"
    }
    definitions {
      name: "min_fresh"
      fully_qualified_name: "werkzeug.datastructures.cache_control.RequestCacheControl.min_fresh"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.cache_control.RequestCacheControl"
          fully_qualified_name: "werkzeug.datastructures.cache_control.RequestCacheControl"
        }
      }
      has_decorators: true
      resolved_decorator_names: "min_fresh.deleter"
    }
  }
  overloaded_methods {
    name: "only_if_cached"
    fullname: "werkzeug.datastructures.cache_control.RequestCacheControl.only_if_cached"
    definitions {
      name: "only_if_cached"
      fully_qualified_name: "werkzeug.datastructures.cache_control.RequestCacheControl.only_if_cached"
      return_annotation {
        pretty_printed_name: "Union[builtins.bool,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.cache_control.RequestCacheControl"
          fully_qualified_name: "werkzeug.datastructures.cache_control.RequestCacheControl"
        }
      }
      has_decorators: true
      resolved_decorator_names: "property"
      is_overload: true
      is_property: true
    }
    definitions {
      name: "only_if_cached"
      fully_qualified_name: "werkzeug.datastructures.cache_control.RequestCacheControl.only_if_cached"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.cache_control.RequestCacheControl"
          fully_qualified_name: "werkzeug.datastructures.cache_control.RequestCacheControl"
        }
      }
      parameters {
        name: "value"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.bool,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bool"
            fully_qualified_name: "builtins.bool"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "only_if_cached.setter"
    }
    definitions {
      name: "only_if_cached"
      fully_qualified_name: "werkzeug.datastructures.cache_control.RequestCacheControl.only_if_cached"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.cache_control.RequestCacheControl"
          fully_qualified_name: "werkzeug.datastructures.cache_control.RequestCacheControl"
        }
      }
      has_decorators: true
      resolved_decorator_names: "only_if_cached.deleter"
    }
  }
}
classes {
  name: "ResponseCacheControl"
  fully_qualified_name: "werkzeug.datastructures.cache_control.ResponseCacheControl"
  super_classes: "werkzeug.datastructures.cache_control._CacheControl"
  overloaded_methods {
    name: "public"
    fullname: "werkzeug.datastructures.cache_control.ResponseCacheControl.public"
    definitions {
      name: "public"
      fully_qualified_name: "werkzeug.datastructures.cache_control.ResponseCacheControl.public"
      return_annotation {
        pretty_printed_name: "Union[builtins.bool,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.cache_control.ResponseCacheControl"
          fully_qualified_name: "werkzeug.datastructures.cache_control.ResponseCacheControl"
        }
      }
      has_decorators: true
      resolved_decorator_names: "property"
      is_overload: true
      is_property: true
    }
    definitions {
      name: "public"
      fully_qualified_name: "werkzeug.datastructures.cache_control.ResponseCacheControl.public"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.cache_control.ResponseCacheControl"
          fully_qualified_name: "werkzeug.datastructures.cache_control.ResponseCacheControl"
        }
      }
      parameters {
        name: "value"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.bool,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bool"
            fully_qualified_name: "builtins.bool"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "public.setter"
    }
    definitions {
      name: "public"
      fully_qualified_name: "werkzeug.datastructures.cache_control.ResponseCacheControl.public"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.cache_control.ResponseCacheControl"
          fully_qualified_name: "werkzeug.datastructures.cache_control.ResponseCacheControl"
        }
      }
      has_decorators: true
      resolved_decorator_names: "public.deleter"
    }
  }
  overloaded_methods {
    name: "private"
    fullname: "werkzeug.datastructures.cache_control.ResponseCacheControl.private"
    definitions {
      name: "private"
      fully_qualified_name: "werkzeug.datastructures.cache_control.ResponseCacheControl.private"
      return_annotation {
        pretty_printed_name: "Union[builtins.bool,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.cache_control.ResponseCacheControl"
          fully_qualified_name: "werkzeug.datastructures.cache_control.ResponseCacheControl"
        }
      }
      has_decorators: true
      resolved_decorator_names: "property"
      is_overload: true
      is_property: true
    }
    definitions {
      name: "private"
      fully_qualified_name: "werkzeug.datastructures.cache_control.ResponseCacheControl.private"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.cache_control.ResponseCacheControl"
          fully_qualified_name: "werkzeug.datastructures.cache_control.ResponseCacheControl"
        }
      }
      parameters {
        name: "value"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.bool,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bool"
            fully_qualified_name: "builtins.bool"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "private.setter"
    }
    definitions {
      name: "private"
      fully_qualified_name: "werkzeug.datastructures.cache_control.ResponseCacheControl.private"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.cache_control.ResponseCacheControl"
          fully_qualified_name: "werkzeug.datastructures.cache_control.ResponseCacheControl"
        }
      }
      has_decorators: true
      resolved_decorator_names: "private.deleter"
    }
  }
  overloaded_methods {
    name: "must_revalidate"
    fullname: "werkzeug.datastructures.cache_control.ResponseCacheControl.must_revalidate"
    definitions {
      name: "must_revalidate"
      fully_qualified_name: "werkzeug.datastructures.cache_control.ResponseCacheControl.must_revalidate"
      return_annotation {
        pretty_printed_name: "Union[builtins.bool,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.cache_control.ResponseCacheControl"
          fully_qualified_name: "werkzeug.datastructures.cache_control.ResponseCacheControl"
        }
      }
      has_decorators: true
      resolved_decorator_names: "property"
      is_overload: true
      is_property: true
    }
    definitions {
      name: "must_revalidate"
      fully_qualified_name: "werkzeug.datastructures.cache_control.ResponseCacheControl.must_revalidate"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.cache_control.ResponseCacheControl"
          fully_qualified_name: "werkzeug.datastructures.cache_control.ResponseCacheControl"
        }
      }
      parameters {
        name: "value"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.bool,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bool"
            fully_qualified_name: "builtins.bool"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "must_revalidate.setter"
    }
    definitions {
      name: "must_revalidate"
      fully_qualified_name: "werkzeug.datastructures.cache_control.ResponseCacheControl.must_revalidate"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.cache_control.ResponseCacheControl"
          fully_qualified_name: "werkzeug.datastructures.cache_control.ResponseCacheControl"
        }
      }
      has_decorators: true
      resolved_decorator_names: "must_revalidate.deleter"
    }
  }
  overloaded_methods {
    name: "proxy_revalidate"
    fullname: "werkzeug.datastructures.cache_control.ResponseCacheControl.proxy_revalidate"
    definitions {
      name: "proxy_revalidate"
      fully_qualified_name: "werkzeug.datastructures.cache_control.ResponseCacheControl.proxy_revalidate"
      return_annotation {
        pretty_printed_name: "Union[builtins.bool,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.cache_control.ResponseCacheControl"
          fully_qualified_name: "werkzeug.datastructures.cache_control.ResponseCacheControl"
        }
      }
      has_decorators: true
      resolved_decorator_names: "property"
      is_overload: true
      is_property: true
    }
    definitions {
      name: "proxy_revalidate"
      fully_qualified_name: "werkzeug.datastructures.cache_control.ResponseCacheControl.proxy_revalidate"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.cache_control.ResponseCacheControl"
          fully_qualified_name: "werkzeug.datastructures.cache_control.ResponseCacheControl"
        }
      }
      parameters {
        name: "value"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.bool,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bool"
            fully_qualified_name: "builtins.bool"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "proxy_revalidate.setter"
    }
    definitions {
      name: "proxy_revalidate"
      fully_qualified_name: "werkzeug.datastructures.cache_control.ResponseCacheControl.proxy_revalidate"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.cache_control.ResponseCacheControl"
          fully_qualified_name: "werkzeug.datastructures.cache_control.ResponseCacheControl"
        }
      }
      has_decorators: true
      resolved_decorator_names: "proxy_revalidate.deleter"
    }
  }
  overloaded_methods {
    name: "s_maxage"
    fullname: "werkzeug.datastructures.cache_control.ResponseCacheControl.s_maxage"
    definitions {
      name: "s_maxage"
      fully_qualified_name: "werkzeug.datastructures.cache_control.ResponseCacheControl.s_maxage"
      return_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.cache_control.ResponseCacheControl"
          fully_qualified_name: "werkzeug.datastructures.cache_control.ResponseCacheControl"
        }
      }
      has_decorators: true
      resolved_decorator_names: "property"
      is_overload: true
      is_property: true
    }
    definitions {
      name: "s_maxage"
      fully_qualified_name: "werkzeug.datastructures.cache_control.ResponseCacheControl.s_maxage"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.cache_control.ResponseCacheControl"
          fully_qualified_name: "werkzeug.datastructures.cache_control.ResponseCacheControl"
        }
      }
      parameters {
        name: "value"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.int,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "s_maxage.setter"
    }
    definitions {
      name: "s_maxage"
      fully_qualified_name: "werkzeug.datastructures.cache_control.ResponseCacheControl.s_maxage"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.cache_control.ResponseCacheControl"
          fully_qualified_name: "werkzeug.datastructures.cache_control.ResponseCacheControl"
        }
      }
      has_decorators: true
      resolved_decorator_names: "s_maxage.deleter"
    }
  }
  overloaded_methods {
    name: "immutable"
    fullname: "werkzeug.datastructures.cache_control.ResponseCacheControl.immutable"
    definitions {
      name: "immutable"
      fully_qualified_name: "werkzeug.datastructures.cache_control.ResponseCacheControl.immutable"
      return_annotation {
        pretty_printed_name: "Union[builtins.bool,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.cache_control.ResponseCacheControl"
          fully_qualified_name: "werkzeug.datastructures.cache_control.ResponseCacheControl"
        }
      }
      has_decorators: true
      resolved_decorator_names: "property"
      is_overload: true
      is_property: true
    }
    definitions {
      name: "immutable"
      fully_qualified_name: "werkzeug.datastructures.cache_control.ResponseCacheControl.immutable"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.cache_control.ResponseCacheControl"
          fully_qualified_name: "werkzeug.datastructures.cache_control.ResponseCacheControl"
        }
      }
      parameters {
        name: "value"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.bool,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bool"
            fully_qualified_name: "builtins.bool"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "immutable.setter"
    }
    definitions {
      name: "immutable"
      fully_qualified_name: "werkzeug.datastructures.cache_control.ResponseCacheControl.immutable"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.cache_control.ResponseCacheControl"
          fully_qualified_name: "werkzeug.datastructures.cache_control.ResponseCacheControl"
        }
      }
      has_decorators: true
      resolved_decorator_names: "immutable.deleter"
    }
  }
}
classes {
  name: "ContentSecurityPolicy"
  fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
  super_classes: "werkzeug.datastructures.mixins.UpdateDictMixin"
  super_classes: "builtins.dict"
  methods {
    name: "__init__"
    fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
        fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
      }
    }
    parameters {
      name: "values"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.Mapping[builtins.str,builtins.str],typing.Iterable[Tuple[builtins.str,builtins.str]]]"
        kind: UNION
        args {
          pretty_printed_name: "typing.Mapping[builtins.str,builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "typing.Mapping"
        }
        args {
          pretty_printed_name: "typing.Iterable[Tuple[builtins.str,builtins.str]]"
          args {
            pretty_printed_name: "Tuple[builtins.str,builtins.str]"
            kind: TUPLE
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
    }
    parameters {
      name: "on_update"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[CallableType[builtins.function],None]"
        kind: UNION
        args {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "_get_value"
    fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy._get_value"
    return_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
        fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
      }
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  methods {
    name: "_set_value"
    fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy._set_value"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
        fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
      }
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  methods {
    name: "_del_value"
    fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy._del_value"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
        fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
      }
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  methods {
    name: "to_header"
    fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy.to_header"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
        fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
      }
    }
  }
  overloaded_methods {
    name: "base_uri"
    fullname: "werkzeug.datastructures.csp.ContentSecurityPolicy.base_uri"
    definitions {
      name: "base_uri"
      fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy.base_uri"
      return_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
          fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
        }
      }
      has_decorators: true
      resolved_decorator_names: "property"
      is_overload: true
      is_property: true
    }
    definitions {
      name: "base_uri"
      fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy.base_uri"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
          fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
        }
      }
      parameters {
        name: "value"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "base_uri.setter"
    }
    definitions {
      name: "base_uri"
      fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy.base_uri"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
          fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
        }
      }
      has_decorators: true
      resolved_decorator_names: "base_uri.deleter"
    }
  }
  overloaded_methods {
    name: "child_src"
    fullname: "werkzeug.datastructures.csp.ContentSecurityPolicy.child_src"
    definitions {
      name: "child_src"
      fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy.child_src"
      return_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
          fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
        }
      }
      has_decorators: true
      resolved_decorator_names: "property"
      is_overload: true
      is_property: true
    }
    definitions {
      name: "child_src"
      fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy.child_src"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
          fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
        }
      }
      parameters {
        name: "value"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "child_src.setter"
    }
    definitions {
      name: "child_src"
      fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy.child_src"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
          fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
        }
      }
      has_decorators: true
      resolved_decorator_names: "child_src.deleter"
    }
  }
  overloaded_methods {
    name: "connect_src"
    fullname: "werkzeug.datastructures.csp.ContentSecurityPolicy.connect_src"
    definitions {
      name: "connect_src"
      fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy.connect_src"
      return_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
          fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
        }
      }
      has_decorators: true
      resolved_decorator_names: "property"
      is_overload: true
      is_property: true
    }
    definitions {
      name: "connect_src"
      fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy.connect_src"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
          fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
        }
      }
      parameters {
        name: "value"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "connect_src.setter"
    }
    definitions {
      name: "connect_src"
      fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy.connect_src"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
          fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
        }
      }
      has_decorators: true
      resolved_decorator_names: "connect_src.deleter"
    }
  }
  overloaded_methods {
    name: "default_src"
    fullname: "werkzeug.datastructures.csp.ContentSecurityPolicy.default_src"
    definitions {
      name: "default_src"
      fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy.default_src"
      return_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
          fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
        }
      }
      has_decorators: true
      resolved_decorator_names: "property"
      is_overload: true
      is_property: true
    }
    definitions {
      name: "default_src"
      fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy.default_src"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
          fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
        }
      }
      parameters {
        name: "value"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "default_src.setter"
    }
    definitions {
      name: "default_src"
      fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy.default_src"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
          fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
        }
      }
      has_decorators: true
      resolved_decorator_names: "default_src.deleter"
    }
  }
  overloaded_methods {
    name: "font_src"
    fullname: "werkzeug.datastructures.csp.ContentSecurityPolicy.font_src"
    definitions {
      name: "font_src"
      fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy.font_src"
      return_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
          fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
        }
      }
      has_decorators: true
      resolved_decorator_names: "property"
      is_overload: true
      is_property: true
    }
    definitions {
      name: "font_src"
      fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy.font_src"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
          fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
        }
      }
      parameters {
        name: "value"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "font_src.setter"
    }
    definitions {
      name: "font_src"
      fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy.font_src"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
          fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
        }
      }
      has_decorators: true
      resolved_decorator_names: "font_src.deleter"
    }
  }
  overloaded_methods {
    name: "form_action"
    fullname: "werkzeug.datastructures.csp.ContentSecurityPolicy.form_action"
    definitions {
      name: "form_action"
      fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy.form_action"
      return_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
          fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
        }
      }
      has_decorators: true
      resolved_decorator_names: "property"
      is_overload: true
      is_property: true
    }
    definitions {
      name: "form_action"
      fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy.form_action"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
          fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
        }
      }
      parameters {
        name: "value"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "form_action.setter"
    }
    definitions {
      name: "form_action"
      fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy.form_action"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
          fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
        }
      }
      has_decorators: true
      resolved_decorator_names: "form_action.deleter"
    }
  }
  overloaded_methods {
    name: "frame_ancestors"
    fullname: "werkzeug.datastructures.csp.ContentSecurityPolicy.frame_ancestors"
    definitions {
      name: "frame_ancestors"
      fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy.frame_ancestors"
      return_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
          fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
        }
      }
      has_decorators: true
      resolved_decorator_names: "property"
      is_overload: true
      is_property: true
    }
    definitions {
      name: "frame_ancestors"
      fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy.frame_ancestors"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
          fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
        }
      }
      parameters {
        name: "value"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "frame_ancestors.setter"
    }
    definitions {
      name: "frame_ancestors"
      fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy.frame_ancestors"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
          fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
        }
      }
      has_decorators: true
      resolved_decorator_names: "frame_ancestors.deleter"
    }
  }
  overloaded_methods {
    name: "frame_src"
    fullname: "werkzeug.datastructures.csp.ContentSecurityPolicy.frame_src"
    definitions {
      name: "frame_src"
      fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy.frame_src"
      return_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
          fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
        }
      }
      has_decorators: true
      resolved_decorator_names: "property"
      is_overload: true
      is_property: true
    }
    definitions {
      name: "frame_src"
      fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy.frame_src"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
          fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
        }
      }
      parameters {
        name: "value"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "frame_src.setter"
    }
    definitions {
      name: "frame_src"
      fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy.frame_src"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
          fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
        }
      }
      has_decorators: true
      resolved_decorator_names: "frame_src.deleter"
    }
  }
  overloaded_methods {
    name: "img_src"
    fullname: "werkzeug.datastructures.csp.ContentSecurityPolicy.img_src"
    definitions {
      name: "img_src"
      fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy.img_src"
      return_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
          fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
        }
      }
      has_decorators: true
      resolved_decorator_names: "property"
      is_overload: true
      is_property: true
    }
    definitions {
      name: "img_src"
      fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy.img_src"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
          fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
        }
      }
      parameters {
        name: "value"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "img_src.setter"
    }
    definitions {
      name: "img_src"
      fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy.img_src"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
          fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
        }
      }
      has_decorators: true
      resolved_decorator_names: "img_src.deleter"
    }
  }
  overloaded_methods {
    name: "manifest_src"
    fullname: "werkzeug.datastructures.csp.ContentSecurityPolicy.manifest_src"
    definitions {
      name: "manifest_src"
      fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy.manifest_src"
      return_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
          fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
        }
      }
      has_decorators: true
      resolved_decorator_names: "property"
      is_overload: true
      is_property: true
    }
    definitions {
      name: "manifest_src"
      fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy.manifest_src"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
          fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
        }
      }
      parameters {
        name: "value"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "manifest_src.setter"
    }
    definitions {
      name: "manifest_src"
      fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy.manifest_src"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
          fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
        }
      }
      has_decorators: true
      resolved_decorator_names: "manifest_src.deleter"
    }
  }
  overloaded_methods {
    name: "media_src"
    fullname: "werkzeug.datastructures.csp.ContentSecurityPolicy.media_src"
    definitions {
      name: "media_src"
      fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy.media_src"
      return_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
          fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
        }
      }
      has_decorators: true
      resolved_decorator_names: "property"
      is_overload: true
      is_property: true
    }
    definitions {
      name: "media_src"
      fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy.media_src"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
          fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
        }
      }
      parameters {
        name: "value"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "media_src.setter"
    }
    definitions {
      name: "media_src"
      fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy.media_src"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
          fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
        }
      }
      has_decorators: true
      resolved_decorator_names: "media_src.deleter"
    }
  }
  overloaded_methods {
    name: "navigate_to"
    fullname: "werkzeug.datastructures.csp.ContentSecurityPolicy.navigate_to"
    definitions {
      name: "navigate_to"
      fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy.navigate_to"
      return_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
          fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
        }
      }
      has_decorators: true
      resolved_decorator_names: "property"
      is_overload: true
      is_property: true
    }
    definitions {
      name: "navigate_to"
      fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy.navigate_to"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
          fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
        }
      }
      parameters {
        name: "value"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "navigate_to.setter"
    }
    definitions {
      name: "navigate_to"
      fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy.navigate_to"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
          fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
        }
      }
      has_decorators: true
      resolved_decorator_names: "navigate_to.deleter"
    }
  }
  overloaded_methods {
    name: "object_src"
    fullname: "werkzeug.datastructures.csp.ContentSecurityPolicy.object_src"
    definitions {
      name: "object_src"
      fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy.object_src"
      return_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
          fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
        }
      }
      has_decorators: true
      resolved_decorator_names: "property"
      is_overload: true
      is_property: true
    }
    definitions {
      name: "object_src"
      fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy.object_src"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
          fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
        }
      }
      parameters {
        name: "value"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "object_src.setter"
    }
    definitions {
      name: "object_src"
      fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy.object_src"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
          fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
        }
      }
      has_decorators: true
      resolved_decorator_names: "object_src.deleter"
    }
  }
  overloaded_methods {
    name: "prefetch_src"
    fullname: "werkzeug.datastructures.csp.ContentSecurityPolicy.prefetch_src"
    definitions {
      name: "prefetch_src"
      fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy.prefetch_src"
      return_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
          fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
        }
      }
      has_decorators: true
      resolved_decorator_names: "property"
      is_overload: true
      is_property: true
    }
    definitions {
      name: "prefetch_src"
      fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy.prefetch_src"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
          fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
        }
      }
      parameters {
        name: "value"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "prefetch_src.setter"
    }
    definitions {
      name: "prefetch_src"
      fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy.prefetch_src"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
          fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
        }
      }
      has_decorators: true
      resolved_decorator_names: "prefetch_src.deleter"
    }
  }
  overloaded_methods {
    name: "plugin_types"
    fullname: "werkzeug.datastructures.csp.ContentSecurityPolicy.plugin_types"
    definitions {
      name: "plugin_types"
      fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy.plugin_types"
      return_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
          fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
        }
      }
      has_decorators: true
      resolved_decorator_names: "property"
      is_overload: true
      is_property: true
    }
    definitions {
      name: "plugin_types"
      fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy.plugin_types"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
          fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
        }
      }
      parameters {
        name: "value"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "plugin_types.setter"
    }
    definitions {
      name: "plugin_types"
      fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy.plugin_types"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
          fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
        }
      }
      has_decorators: true
      resolved_decorator_names: "plugin_types.deleter"
    }
  }
  overloaded_methods {
    name: "report_to"
    fullname: "werkzeug.datastructures.csp.ContentSecurityPolicy.report_to"
    definitions {
      name: "report_to"
      fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy.report_to"
      return_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
          fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
        }
      }
      has_decorators: true
      resolved_decorator_names: "property"
      is_overload: true
      is_property: true
    }
    definitions {
      name: "report_to"
      fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy.report_to"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
          fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
        }
      }
      parameters {
        name: "value"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "report_to.setter"
    }
    definitions {
      name: "report_to"
      fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy.report_to"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
          fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
        }
      }
      has_decorators: true
      resolved_decorator_names: "report_to.deleter"
    }
  }
  overloaded_methods {
    name: "report_uri"
    fullname: "werkzeug.datastructures.csp.ContentSecurityPolicy.report_uri"
    definitions {
      name: "report_uri"
      fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy.report_uri"
      return_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
          fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
        }
      }
      has_decorators: true
      resolved_decorator_names: "property"
      is_overload: true
      is_property: true
    }
    definitions {
      name: "report_uri"
      fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy.report_uri"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
          fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
        }
      }
      parameters {
        name: "value"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "report_uri.setter"
    }
    definitions {
      name: "report_uri"
      fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy.report_uri"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
          fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
        }
      }
      has_decorators: true
      resolved_decorator_names: "report_uri.deleter"
    }
  }
  overloaded_methods {
    name: "sandbox"
    fullname: "werkzeug.datastructures.csp.ContentSecurityPolicy.sandbox"
    definitions {
      name: "sandbox"
      fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy.sandbox"
      return_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
          fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
        }
      }
      has_decorators: true
      resolved_decorator_names: "property"
      is_overload: true
      is_property: true
    }
    definitions {
      name: "sandbox"
      fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy.sandbox"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
          fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
        }
      }
      parameters {
        name: "value"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "sandbox.setter"
    }
    definitions {
      name: "sandbox"
      fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy.sandbox"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
          fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
        }
      }
      has_decorators: true
      resolved_decorator_names: "sandbox.deleter"
    }
  }
  overloaded_methods {
    name: "script_src"
    fullname: "werkzeug.datastructures.csp.ContentSecurityPolicy.script_src"
    definitions {
      name: "script_src"
      fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy.script_src"
      return_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
          fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
        }
      }
      has_decorators: true
      resolved_decorator_names: "property"
      is_overload: true
      is_property: true
    }
    definitions {
      name: "script_src"
      fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy.script_src"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
          fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
        }
      }
      parameters {
        name: "value"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "script_src.setter"
    }
    definitions {
      name: "script_src"
      fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy.script_src"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
          fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
        }
      }
      has_decorators: true
      resolved_decorator_names: "script_src.deleter"
    }
  }
  overloaded_methods {
    name: "script_src_attr"
    fullname: "werkzeug.datastructures.csp.ContentSecurityPolicy.script_src_attr"
    definitions {
      name: "script_src_attr"
      fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy.script_src_attr"
      return_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
          fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
        }
      }
      has_decorators: true
      resolved_decorator_names: "property"
      is_overload: true
      is_property: true
    }
    definitions {
      name: "script_src_attr"
      fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy.script_src_attr"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
          fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
        }
      }
      parameters {
        name: "value"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "script_src_attr.setter"
    }
    definitions {
      name: "script_src_attr"
      fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy.script_src_attr"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
          fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
        }
      }
      has_decorators: true
      resolved_decorator_names: "script_src_attr.deleter"
    }
  }
  overloaded_methods {
    name: "script_src_elem"
    fullname: "werkzeug.datastructures.csp.ContentSecurityPolicy.script_src_elem"
    definitions {
      name: "script_src_elem"
      fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy.script_src_elem"
      return_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
          fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
        }
      }
      has_decorators: true
      resolved_decorator_names: "property"
      is_overload: true
      is_property: true
    }
    definitions {
      name: "script_src_elem"
      fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy.script_src_elem"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
          fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
        }
      }
      parameters {
        name: "value"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "script_src_elem.setter"
    }
    definitions {
      name: "script_src_elem"
      fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy.script_src_elem"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
          fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
        }
      }
      has_decorators: true
      resolved_decorator_names: "script_src_elem.deleter"
    }
  }
  overloaded_methods {
    name: "style_src"
    fullname: "werkzeug.datastructures.csp.ContentSecurityPolicy.style_src"
    definitions {
      name: "style_src"
      fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy.style_src"
      return_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
          fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
        }
      }
      has_decorators: true
      resolved_decorator_names: "property"
      is_overload: true
      is_property: true
    }
    definitions {
      name: "style_src"
      fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy.style_src"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
          fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
        }
      }
      parameters {
        name: "value"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "style_src.setter"
    }
    definitions {
      name: "style_src"
      fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy.style_src"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
          fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
        }
      }
      has_decorators: true
      resolved_decorator_names: "style_src.deleter"
    }
  }
  overloaded_methods {
    name: "style_src_attr"
    fullname: "werkzeug.datastructures.csp.ContentSecurityPolicy.style_src_attr"
    definitions {
      name: "style_src_attr"
      fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy.style_src_attr"
      return_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
          fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
        }
      }
      has_decorators: true
      resolved_decorator_names: "property"
      is_overload: true
      is_property: true
    }
    definitions {
      name: "style_src_attr"
      fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy.style_src_attr"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
          fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
        }
      }
      parameters {
        name: "value"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "style_src_attr.setter"
    }
    definitions {
      name: "style_src_attr"
      fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy.style_src_attr"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
          fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
        }
      }
      has_decorators: true
      resolved_decorator_names: "style_src_attr.deleter"
    }
  }
  overloaded_methods {
    name: "style_src_elem"
    fullname: "werkzeug.datastructures.csp.ContentSecurityPolicy.style_src_elem"
    definitions {
      name: "style_src_elem"
      fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy.style_src_elem"
      return_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
          fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
        }
      }
      has_decorators: true
      resolved_decorator_names: "property"
      is_overload: true
      is_property: true
    }
    definitions {
      name: "style_src_elem"
      fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy.style_src_elem"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
          fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
        }
      }
      parameters {
        name: "value"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "style_src_elem.setter"
    }
    definitions {
      name: "style_src_elem"
      fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy.style_src_elem"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
          fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
        }
      }
      has_decorators: true
      resolved_decorator_names: "style_src_elem.deleter"
    }
  }
  overloaded_methods {
    name: "worker_src"
    fullname: "werkzeug.datastructures.csp.ContentSecurityPolicy.worker_src"
    definitions {
      name: "worker_src"
      fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy.worker_src"
      return_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
          fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
        }
      }
      has_decorators: true
      resolved_decorator_names: "property"
      is_overload: true
      is_property: true
    }
    definitions {
      name: "worker_src"
      fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy.worker_src"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
          fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
        }
      }
      parameters {
        name: "value"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "worker_src.setter"
    }
    definitions {
      name: "worker_src"
      fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy.worker_src"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
          fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
        }
      }
      has_decorators: true
      resolved_decorator_names: "worker_src.deleter"
    }
  }
  attributes {
    name: "provided"
    fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy.provided"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
}
classes {
  name: "ETags"
  fully_qualified_name: "werkzeug.datastructures.etag.ETags"
  super_classes: "typing.Collection"
  methods {
    name: "__init__"
    fully_qualified_name: "werkzeug.datastructures.etag.ETags.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.etag.ETags"
        fully_qualified_name: "werkzeug.datastructures.etag.ETags"
      }
    }
    parameters {
      name: "strong_etags"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.Iterable[builtins.str],None]"
        kind: UNION
        args {
          pretty_printed_name: "typing.Iterable[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "typing.Iterable"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "weak_etags"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.Iterable[builtins.str],None]"
        kind: UNION
        args {
          pretty_printed_name: "typing.Iterable[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "typing.Iterable"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "star_tag"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
  }
  methods {
    name: "as_set"
    fully_qualified_name: "werkzeug.datastructures.etag.ETags.as_set"
    return_annotation {
      pretty_printed_name: "builtins.set[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "builtins.set"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.etag.ETags"
        fully_qualified_name: "werkzeug.datastructures.etag.ETags"
      }
    }
    parameters {
      name: "include_weak"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
  }
  methods {
    name: "is_weak"
    fully_qualified_name: "werkzeug.datastructures.etag.ETags.is_weak"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.etag.ETags"
        fully_qualified_name: "werkzeug.datastructures.etag.ETags"
      }
    }
    parameters {
      name: "etag"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  methods {
    name: "is_strong"
    fully_qualified_name: "werkzeug.datastructures.etag.ETags.is_strong"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.etag.ETags"
        fully_qualified_name: "werkzeug.datastructures.etag.ETags"
      }
    }
    parameters {
      name: "etag"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  methods {
    name: "contains_weak"
    fully_qualified_name: "werkzeug.datastructures.etag.ETags.contains_weak"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.etag.ETags"
        fully_qualified_name: "werkzeug.datastructures.etag.ETags"
      }
    }
    parameters {
      name: "etag"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  methods {
    name: "contains"
    fully_qualified_name: "werkzeug.datastructures.etag.ETags.contains"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.etag.ETags"
        fully_qualified_name: "werkzeug.datastructures.etag.ETags"
      }
    }
    parameters {
      name: "etag"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  methods {
    name: "contains_raw"
    fully_qualified_name: "werkzeug.datastructures.etag.ETags.contains_raw"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.etag.ETags"
        fully_qualified_name: "werkzeug.datastructures.etag.ETags"
      }
    }
    parameters {
      name: "etag"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  methods {
    name: "to_header"
    fully_qualified_name: "werkzeug.datastructures.etag.ETags.to_header"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.etag.ETags"
        fully_qualified_name: "werkzeug.datastructures.etag.ETags"
      }
    }
  }
  methods {
    name: "__call__"
    fully_qualified_name: "werkzeug.datastructures.etag.ETags.__call__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.etag.ETags"
        fully_qualified_name: "werkzeug.datastructures.etag.ETags"
      }
    }
    parameters {
      name: "etag"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "data"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.bytes,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "include_weak"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
  }
  methods {
    name: "__len__"
    fully_qualified_name: "werkzeug.datastructures.etag.ETags.__len__"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.etag.ETags"
        fully_qualified_name: "werkzeug.datastructures.etag.ETags"
      }
    }
  }
  methods {
    name: "__iter__"
    fully_qualified_name: "werkzeug.datastructures.etag.ETags.__iter__"
    return_annotation {
      pretty_printed_name: "typing.Iterator[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.etag.ETags"
        fully_qualified_name: "werkzeug.datastructures.etag.ETags"
      }
    }
  }
  methods {
    name: "__contains__"
    fully_qualified_name: "werkzeug.datastructures.etag.ETags.__contains__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.etag.ETags"
        fully_qualified_name: "werkzeug.datastructures.etag.ETags"
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  attributes {
    name: "_strong"
    fully_qualified_name: "werkzeug.datastructures.etag.ETags._strong"
    type_annotation {
      pretty_printed_name: "builtins.frozenset[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "builtins.frozenset"
    }
  }
  attributes {
    name: "_weak"
    fully_qualified_name: "werkzeug.datastructures.etag.ETags._weak"
    type_annotation {
      pretty_printed_name: "builtins.frozenset[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "builtins.frozenset"
    }
  }
  attributes {
    name: "star_tag"
    fully_qualified_name: "werkzeug.datastructures.etag.ETags.star_tag"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
}
classes {
  name: "FileMultiDict"
  fully_qualified_name: "werkzeug.datastructures.file_storage.FileMultiDict"
  super_classes: "werkzeug.datastructures.structures.MultiDict"
  methods {
    name: "add_file"
    fully_qualified_name: "werkzeug.datastructures.file_storage.FileMultiDict.add_file"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.file_storage.FileMultiDict"
        fully_qualified_name: "werkzeug.datastructures.file_storage.FileMultiDict"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "file"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[werkzeug.datastructures.file_storage.FileStorage,builtins.str,typing.IO[builtins.bytes]]"
        kind: UNION
        args {
          pretty_printed_name: "werkzeug.datastructures.file_storage.FileStorage"
          fully_qualified_name: "werkzeug.datastructures.file_storage.FileStorage"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "typing.IO[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "typing.IO"
        }
      }
    }
    parameters {
      name: "filename"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "content_type"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
}
classes {
  name: "FileStorage"
  fully_qualified_name: "werkzeug.datastructures.file_storage.FileStorage"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "werkzeug.datastructures.file_storage.FileStorage.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.file_storage.FileStorage"
        fully_qualified_name: "werkzeug.datastructures.file_storage.FileStorage"
      }
    }
    parameters {
      name: "stream"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.IO[builtins.bytes],None]"
        kind: UNION
        args {
          pretty_printed_name: "typing.IO[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "typing.IO"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "filename"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,os.PathLike[Any],None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "os.PathLike[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "os.PathLike"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "content_type"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "content_length"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "headers"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[werkzeug.datastructures.headers.Headers,None]"
        kind: UNION
        args {
          pretty_printed_name: "werkzeug.datastructures.headers.Headers"
          fully_qualified_name: "werkzeug.datastructures.headers.Headers"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "_parse_content_type"
    fully_qualified_name: "werkzeug.datastructures.file_storage.FileStorage._parse_content_type"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.file_storage.FileStorage"
        fully_qualified_name: "werkzeug.datastructures.file_storage.FileStorage"
      }
    }
  }
  methods {
    name: "content_type"
    fully_qualified_name: "werkzeug.datastructures.file_storage.FileStorage.content_type"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.file_storage.FileStorage"
        fully_qualified_name: "werkzeug.datastructures.file_storage.FileStorage"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "content_length"
    fully_qualified_name: "werkzeug.datastructures.file_storage.FileStorage.content_length"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.file_storage.FileStorage"
        fully_qualified_name: "werkzeug.datastructures.file_storage.FileStorage"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "mimetype"
    fully_qualified_name: "werkzeug.datastructures.file_storage.FileStorage.mimetype"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.file_storage.FileStorage"
        fully_qualified_name: "werkzeug.datastructures.file_storage.FileStorage"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "mimetype_params"
    fully_qualified_name: "werkzeug.datastructures.file_storage.FileStorage.mimetype_params"
    return_annotation {
      pretty_printed_name: "builtins.dict[builtins.str,builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "builtins.dict"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.file_storage.FileStorage"
        fully_qualified_name: "werkzeug.datastructures.file_storage.FileStorage"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "save"
    fully_qualified_name: "werkzeug.datastructures.file_storage.FileStorage.save"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.file_storage.FileStorage"
        fully_qualified_name: "werkzeug.datastructures.file_storage.FileStorage"
      }
    }
    parameters {
      name: "dst"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,os.PathLike[Any],typing.IO[builtins.bytes]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "os.PathLike[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "os.PathLike"
        }
        args {
          pretty_printed_name: "typing.IO[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "typing.IO"
        }
      }
    }
    parameters {
      name: "buffer_size"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
  }
  methods {
    name: "close"
    fully_qualified_name: "werkzeug.datastructures.file_storage.FileStorage.close"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.file_storage.FileStorage"
        fully_qualified_name: "werkzeug.datastructures.file_storage.FileStorage"
      }
    }
  }
  methods {
    name: "__bool__"
    fully_qualified_name: "werkzeug.datastructures.file_storage.FileStorage.__bool__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.file_storage.FileStorage"
        fully_qualified_name: "werkzeug.datastructures.file_storage.FileStorage"
      }
    }
  }
  methods {
    name: "__getattr__"
    fully_qualified_name: "werkzeug.datastructures.file_storage.FileStorage.__getattr__"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.file_storage.FileStorage"
        fully_qualified_name: "werkzeug.datastructures.file_storage.FileStorage"
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  methods {
    name: "__iter__"
    fully_qualified_name: "werkzeug.datastructures.file_storage.FileStorage.__iter__"
    return_annotation {
      pretty_printed_name: "typing.Iterator[builtins.bytes]"
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.file_storage.FileStorage"
        fully_qualified_name: "werkzeug.datastructures.file_storage.FileStorage"
      }
    }
  }
  methods {
    name: "__repr__"
    fully_qualified_name: "werkzeug.datastructures.file_storage.FileStorage.__repr__"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.file_storage.FileStorage"
        fully_qualified_name: "werkzeug.datastructures.file_storage.FileStorage"
      }
    }
  }
  attributes {
    name: "name"
    fully_qualified_name: "werkzeug.datastructures.file_storage.FileStorage.name"
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  attributes {
    name: "stream"
    fully_qualified_name: "werkzeug.datastructures.file_storage.FileStorage.stream"
    type_annotation {
      pretty_printed_name: "typing.IO[builtins.bytes]"
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
      fully_qualified_name: "typing.IO"
    }
  }
  attributes {
    name: "filename"
    fully_qualified_name: "werkzeug.datastructures.file_storage.FileStorage.filename"
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  attributes {
    name: "headers"
    fully_qualified_name: "werkzeug.datastructures.file_storage.FileStorage.headers"
    type_annotation {
      pretty_printed_name: "werkzeug.datastructures.headers.Headers"
      fully_qualified_name: "werkzeug.datastructures.headers.Headers"
    }
  }
  attributes {
    name: "_parsed_content_type"
    fully_qualified_name: "werkzeug.datastructures.file_storage.FileStorage._parsed_content_type"
    type_annotation {
      pretty_printed_name: "Tuple[builtins.str,builtins.dict[builtins.str,builtins.str]]"
      kind: TUPLE
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.dict[builtins.str,builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "builtins.dict"
      }
    }
  }
}
classes {
  name: "EnvironHeaders"
  fully_qualified_name: "werkzeug.datastructures.headers.EnvironHeaders"
  super_classes: "werkzeug.datastructures.mixins.ImmutableHeadersMixin"
  super_classes: "werkzeug.datastructures.headers.Headers"
  methods {
    name: "__init__"
    fully_qualified_name: "werkzeug.datastructures.headers.EnvironHeaders.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.headers.EnvironHeaders"
        fully_qualified_name: "werkzeug.datastructures.headers.EnvironHeaders"
      }
    }
    parameters {
      name: "environ"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[builtins.dict[builtins.str,Any]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "builtins.dict[builtins.str,Any]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "builtins.dict"
        }
        fully_qualified_name: "_typeshed.wsgi.WSGIEnvironment"
      }
    }
  }
  methods {
    name: "__eq__"
    fully_qualified_name: "werkzeug.datastructures.headers.EnvironHeaders.__eq__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.headers.EnvironHeaders"
        fully_qualified_name: "werkzeug.datastructures.headers.EnvironHeaders"
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
  }
  methods {
    name: "__getitem__"
    fully_qualified_name: "werkzeug.datastructures.headers.EnvironHeaders.__getitem__"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.headers.EnvironHeaders"
        fully_qualified_name: "werkzeug.datastructures.headers.EnvironHeaders"
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "Literal[builtins.bool]"
        kind: LITERAL
        args {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
      }
    }
  }
  methods {
    name: "__iter__"
    fully_qualified_name: "werkzeug.datastructures.headers.EnvironHeaders.__iter__"
    return_annotation {
      pretty_printed_name: "typing.Iterator[Tuple[builtins.str,builtins.str]]"
      args {
        pretty_printed_name: "Tuple[builtins.str,builtins.str]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.headers.EnvironHeaders"
        fully_qualified_name: "werkzeug.datastructures.headers.EnvironHeaders"
      }
    }
  }
  methods {
    name: "copy"
    fully_qualified_name: "werkzeug.datastructures.headers.EnvironHeaders.copy"
    return_annotation {
      pretty_printed_name: "NoReturn"
      kind: UNINHABITED
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.headers.EnvironHeaders"
        fully_qualified_name: "werkzeug.datastructures.headers.EnvironHeaders"
      }
    }
  }
  attributes {
    name: "environ"
    fully_qualified_name: "werkzeug.datastructures.headers.EnvironHeaders.environ"
    type_annotation {
      pretty_printed_name: "TypeAlias[builtins.dict[builtins.str,Any]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "builtins.dict[builtins.str,Any]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "builtins.dict"
      }
      fully_qualified_name: "_typeshed.wsgi.WSGIEnvironment"
    }
  }
}
classes {
  name: "Headers"
  fully_qualified_name: "werkzeug.datastructures.headers.Headers"
  super_classes: "builtins.dict"
  methods {
    name: "__init__"
    fully_qualified_name: "werkzeug.datastructures.headers.Headers.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.headers.Headers"
        fully_qualified_name: "werkzeug.datastructures.headers.Headers"
      }
    }
    parameters {
      name: "defaults"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.Mapping[builtins.str,Union[builtins.str,typing.Iterable[builtins.str]]],typing.Iterable[Tuple[builtins.str,builtins.str]],None]"
        kind: UNION
        args {
          pretty_printed_name: "typing.Mapping[builtins.str,Union[builtins.str,typing.Iterable[builtins.str]]]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "Union[builtins.str,typing.Iterable[builtins.str]]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "typing.Iterable[builtins.str]"
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              fully_qualified_name: "typing.Iterable"
            }
          }
          fully_qualified_name: "typing.Mapping"
        }
        args {
          pretty_printed_name: "typing.Iterable[Tuple[builtins.str,builtins.str]]"
          args {
            pretty_printed_name: "Tuple[builtins.str,builtins.str]"
            kind: TUPLE
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          fully_qualified_name: "typing.Iterable"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "__eq__"
    fully_qualified_name: "werkzeug.datastructures.headers.Headers.__eq__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.headers.Headers"
        fully_qualified_name: "werkzeug.datastructures.headers.Headers"
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
  }
  methods {
    name: "get_all"
    fully_qualified_name: "werkzeug.datastructures.headers.Headers.get_all"
    return_annotation {
      pretty_printed_name: "builtins.list[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.headers.Headers"
        fully_qualified_name: "werkzeug.datastructures.headers.Headers"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  methods {
    name: "items"
    fully_qualified_name: "werkzeug.datastructures.headers.Headers.items"
    return_annotation {
      pretty_printed_name: "typing.Iterator[Tuple[builtins.str,builtins.str]]"
      args {
        pretty_printed_name: "Tuple[builtins.str,builtins.str]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.headers.Headers"
        fully_qualified_name: "werkzeug.datastructures.headers.Headers"
      }
    }
    parameters {
      name: "lower"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
  }
  methods {
    name: "keys"
    fully_qualified_name: "werkzeug.datastructures.headers.Headers.keys"
    return_annotation {
      pretty_printed_name: "typing.Iterator[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.headers.Headers"
        fully_qualified_name: "werkzeug.datastructures.headers.Headers"
      }
    }
    parameters {
      name: "lower"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
  }
  methods {
    name: "values"
    fully_qualified_name: "werkzeug.datastructures.headers.Headers.values"
    return_annotation {
      pretty_printed_name: "typing.Iterator[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.headers.Headers"
        fully_qualified_name: "werkzeug.datastructures.headers.Headers"
      }
    }
  }
  methods {
    name: "extend"
    fully_qualified_name: "werkzeug.datastructures.headers.Headers.extend"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.headers.Headers"
        fully_qualified_name: "werkzeug.datastructures.headers.Headers"
      }
    }
    parameters {
      name: "args"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.Mapping[builtins.str,Union[builtins.str,typing.Iterable[builtins.str]]],typing.Iterable[Tuple[builtins.str,builtins.str]]]"
        kind: UNION
        args {
          pretty_printed_name: "typing.Mapping[builtins.str,Union[builtins.str,typing.Iterable[builtins.str]]]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "Union[builtins.str,typing.Iterable[builtins.str]]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "typing.Iterable[builtins.str]"
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              fully_qualified_name: "typing.Iterable"
            }
          }
          fully_qualified_name: "typing.Mapping"
        }
        args {
          pretty_printed_name: "typing.Iterable[Tuple[builtins.str,builtins.str]]"
          args {
            pretty_printed_name: "Tuple[builtins.str,builtins.str]"
            kind: TUPLE
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
    }
    parameters {
      name: "kwargs"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,typing.Iterable[builtins.str]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "typing.Iterable[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
    }
  }
  methods {
    name: "remove"
    fully_qualified_name: "werkzeug.datastructures.headers.Headers.remove"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.headers.Headers"
        fully_qualified_name: "werkzeug.datastructures.headers.Headers"
      }
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  methods {
    name: "popitem"
    fully_qualified_name: "werkzeug.datastructures.headers.Headers.popitem"
    return_annotation {
      pretty_printed_name: "Tuple[builtins.str,builtins.str]"
      kind: TUPLE
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.headers.Headers"
        fully_qualified_name: "werkzeug.datastructures.headers.Headers"
      }
    }
  }
  methods {
    name: "__contains__"
    fully_qualified_name: "werkzeug.datastructures.headers.Headers.__contains__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.headers.Headers"
        fully_qualified_name: "werkzeug.datastructures.headers.Headers"
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  methods {
    name: "has_key"
    fully_qualified_name: "werkzeug.datastructures.headers.Headers.has_key"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.headers.Headers"
        fully_qualified_name: "werkzeug.datastructures.headers.Headers"
      }
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  methods {
    name: "__iter__"
    fully_qualified_name: "werkzeug.datastructures.headers.Headers.__iter__"
    return_annotation {
      pretty_printed_name: "typing.Iterator[Tuple[builtins.str,builtins.str]]"
      args {
        pretty_printed_name: "Tuple[builtins.str,builtins.str]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.headers.Headers"
        fully_qualified_name: "werkzeug.datastructures.headers.Headers"
      }
    }
  }
  methods {
    name: "add"
    fully_qualified_name: "werkzeug.datastructures.headers.Headers.add"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.headers.Headers"
        fully_qualified_name: "werkzeug.datastructures.headers.Headers"
      }
    }
    parameters {
      name: "_key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "_value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "kw"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  methods {
    name: "_validate_value"
    fully_qualified_name: "werkzeug.datastructures.headers.Headers._validate_value"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.headers.Headers"
        fully_qualified_name: "werkzeug.datastructures.headers.Headers"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  methods {
    name: "add_header"
    fully_qualified_name: "werkzeug.datastructures.headers.Headers.add_header"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.headers.Headers"
        fully_qualified_name: "werkzeug.datastructures.headers.Headers"
      }
    }
    parameters {
      name: "_key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "_value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "_kw"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  methods {
    name: "clear"
    fully_qualified_name: "werkzeug.datastructures.headers.Headers.clear"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.headers.Headers"
        fully_qualified_name: "werkzeug.datastructures.headers.Headers"
      }
    }
  }
  methods {
    name: "set"
    fully_qualified_name: "werkzeug.datastructures.headers.Headers.set"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.headers.Headers"
        fully_qualified_name: "werkzeug.datastructures.headers.Headers"
      }
    }
    parameters {
      name: "_key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "_value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "kw"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  methods {
    name: "setlist"
    fully_qualified_name: "werkzeug.datastructures.headers.Headers.setlist"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.headers.Headers"
        fully_qualified_name: "werkzeug.datastructures.headers.Headers"
      }
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "values"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
  }
  methods {
    name: "setdefault"
    fully_qualified_name: "werkzeug.datastructures.headers.Headers.setdefault"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.headers.Headers"
        fully_qualified_name: "werkzeug.datastructures.headers.Headers"
      }
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "default"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  methods {
    name: "setlistdefault"
    fully_qualified_name: "werkzeug.datastructures.headers.Headers.setlistdefault"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.headers.Headers"
        fully_qualified_name: "werkzeug.datastructures.headers.Headers"
      }
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "default"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
  }
  methods {
    name: "to_wsgi_list"
    fully_qualified_name: "werkzeug.datastructures.headers.Headers.to_wsgi_list"
    return_annotation {
      pretty_printed_name: "builtins.list[Tuple[builtins.str,builtins.str]]"
      args {
        pretty_printed_name: "Tuple[builtins.str,builtins.str]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.headers.Headers"
        fully_qualified_name: "werkzeug.datastructures.headers.Headers"
      }
    }
  }
  methods {
    name: "copy"
    fully_qualified_name: "werkzeug.datastructures.headers.Headers.copy"
    return_annotation {
      pretty_printed_name: "werkzeug.datastructures.headers.Headers"
      fully_qualified_name: "werkzeug.datastructures.headers.Headers"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.headers.Headers"
        fully_qualified_name: "werkzeug.datastructures.headers.Headers"
      }
    }
  }
  methods {
    name: "__copy__"
    fully_qualified_name: "werkzeug.datastructures.headers.Headers.__copy__"
    return_annotation {
      pretty_printed_name: "werkzeug.datastructures.headers.Headers"
      fully_qualified_name: "werkzeug.datastructures.headers.Headers"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.headers.Headers"
        fully_qualified_name: "werkzeug.datastructures.headers.Headers"
      }
    }
  }
  overloaded_methods {
    name: "__getitem__"
    fullname: "werkzeug.datastructures.headers.Headers.__getitem__"
    definitions {
      name: "__getitem__"
      fully_qualified_name: "werkzeug.datastructures.headers.Headers.__getitem__"
      return_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.headers.Headers"
          fully_qualified_name: "werkzeug.datastructures.headers.Headers"
        }
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__getitem__"
      fully_qualified_name: "werkzeug.datastructures.headers.Headers.__getitem__"
      return_annotation {
        pretty_printed_name: "Tuple[builtins.str,builtins.str]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.headers.Headers"
          fully_qualified_name: "werkzeug.datastructures.headers.Headers"
        }
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__getitem__"
      fully_qualified_name: "werkzeug.datastructures.headers.Headers.__getitem__"
      return_annotation {
        pretty_printed_name: "werkzeug.datastructures.headers.Headers"
        fully_qualified_name: "werkzeug.datastructures.headers.Headers"
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.headers.Headers"
          fully_qualified_name: "werkzeug.datastructures.headers.Headers"
        }
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "builtins.slice"
          fully_qualified_name: "builtins.slice"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__getitem__"
      fully_qualified_name: "werkzeug.datastructures.headers.Headers.__getitem__"
      return_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.headers.Headers"
          fully_qualified_name: "werkzeug.datastructures.headers.Headers"
        }
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "Literal[builtins.bool]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.bool"
            fully_qualified_name: "builtins.bool"
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
  }
  overloaded_methods {
    name: "get"
    fullname: "werkzeug.datastructures.headers.Headers.get"
    definitions {
      name: "get"
      fully_qualified_name: "werkzeug.datastructures.headers.Headers.get"
      return_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.headers.Headers"
          fully_qualified_name: "werkzeug.datastructures.headers.Headers"
        }
      }
      parameters {
        name: "key"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      parameters {
        name: "default"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "get"
      fully_qualified_name: "werkzeug.datastructures.headers.Headers.get"
      return_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.headers.Headers"
          fully_qualified_name: "werkzeug.datastructures.headers.Headers"
        }
      }
      parameters {
        name: "key"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      parameters {
        name: "default"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "get"
      fully_qualified_name: "werkzeug.datastructures.headers.Headers.get"
      return_annotation {
        pretty_printed_name: "Union[werkzeug.datastructures.headers.T,None]"
        kind: UNION
        args {
          pretty_printed_name: "werkzeug.datastructures.headers.T"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.headers.Headers"
          fully_qualified_name: "werkzeug.datastructures.headers.Headers"
        }
      }
      parameters {
        name: "key"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      parameters {
        name: "default"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[werkzeug.datastructures.headers.T,None]"
          kind: UNION
          args {
            pretty_printed_name: "werkzeug.datastructures.headers.T"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      parameters {
        name: "type"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
  }
  overloaded_methods {
    name: "getlist"
    fullname: "werkzeug.datastructures.headers.Headers.getlist"
    definitions {
      name: "getlist"
      fully_qualified_name: "werkzeug.datastructures.headers.Headers.getlist"
      return_annotation {
        pretty_printed_name: "builtins.list[builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "builtins.list"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.headers.Headers"
          fully_qualified_name: "werkzeug.datastructures.headers.Headers"
        }
      }
      parameters {
        name: "key"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "getlist"
      fully_qualified_name: "werkzeug.datastructures.headers.Headers.getlist"
      return_annotation {
        pretty_printed_name: "builtins.list[werkzeug.datastructures.headers.T]"
        args {
          pretty_printed_name: "werkzeug.datastructures.headers.T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.list"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.headers.Headers"
          fully_qualified_name: "werkzeug.datastructures.headers.Headers"
        }
      }
      parameters {
        name: "key"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      parameters {
        name: "type"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
  }
  overloaded_methods {
    name: "__delitem__"
    fullname: "werkzeug.datastructures.headers.Headers.__delitem__"
    definitions {
      name: "__delitem__"
      fully_qualified_name: "werkzeug.datastructures.headers.Headers.__delitem__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.headers.Headers"
          fully_qualified_name: "werkzeug.datastructures.headers.Headers"
        }
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "Union[builtins.str,builtins.int,builtins.slice]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.slice"
            fully_qualified_name: "builtins.slice"
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__delitem__"
      fully_qualified_name: "werkzeug.datastructures.headers.Headers.__delitem__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.headers.Headers"
          fully_qualified_name: "werkzeug.datastructures.headers.Headers"
        }
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "Literal[builtins.bool]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.bool"
            fully_qualified_name: "builtins.bool"
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
  }
  overloaded_methods {
    name: "pop"
    fullname: "werkzeug.datastructures.headers.Headers.pop"
    definitions {
      name: "pop"
      fully_qualified_name: "werkzeug.datastructures.headers.Headers.pop"
      return_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.headers.Headers"
          fully_qualified_name: "werkzeug.datastructures.headers.Headers"
        }
      }
      parameters {
        name: "key"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      parameters {
        name: "default"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "pop"
      fully_qualified_name: "werkzeug.datastructures.headers.Headers.pop"
      return_annotation {
        pretty_printed_name: "Tuple[builtins.str,builtins.str]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.headers.Headers"
          fully_qualified_name: "werkzeug.datastructures.headers.Headers"
        }
      }
      parameters {
        name: "key"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.int,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      parameters {
        name: "default"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[Tuple[builtins.str,builtins.str],None]"
          kind: UNION
          args {
            pretty_printed_name: "Tuple[builtins.str,builtins.str]"
            kind: TUPLE
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
  }
  overloaded_methods {
    name: "__setitem__"
    fullname: "werkzeug.datastructures.headers.Headers.__setitem__"
    definitions {
      name: "__setitem__"
      fully_qualified_name: "werkzeug.datastructures.headers.Headers.__setitem__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.headers.Headers"
          fully_qualified_name: "werkzeug.datastructures.headers.Headers"
        }
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__setitem__"
      fully_qualified_name: "werkzeug.datastructures.headers.Headers.__setitem__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.headers.Headers"
          fully_qualified_name: "werkzeug.datastructures.headers.Headers"
        }
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "Tuple[builtins.str,builtins.str]"
          kind: TUPLE
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__setitem__"
      fully_qualified_name: "werkzeug.datastructures.headers.Headers.__setitem__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.headers.Headers"
          fully_qualified_name: "werkzeug.datastructures.headers.Headers"
        }
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "builtins.slice"
          fully_qualified_name: "builtins.slice"
        }
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "typing.Iterable[Tuple[builtins.str,builtins.str]]"
          args {
            pretty_printed_name: "Tuple[builtins.str,builtins.str]"
            kind: TUPLE
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
  }
  overloaded_methods {
    name: "update"
    fullname: "werkzeug.datastructures.headers.Headers.update"
    definitions {
      name: "update"
      fully_qualified_name: "werkzeug.datastructures.headers.Headers.update"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.headers.Headers"
          fully_qualified_name: "werkzeug.datastructures.headers.Headers"
        }
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "_typeshed.SupportsKeysAndGetItem[builtins.str,builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "_typeshed.SupportsKeysAndGetItem"
        }
      }
      parameters {
        name: "kwargs"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,typing.Iterable[builtins.str]]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "typing.Iterable[builtins.str]"
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            fully_qualified_name: "typing.Iterable"
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "update"
      fully_qualified_name: "werkzeug.datastructures.headers.Headers.update"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.headers.Headers"
          fully_qualified_name: "werkzeug.datastructures.headers.Headers"
        }
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "typing.Iterable[Tuple[builtins.str,builtins.str]]"
          args {
            pretty_printed_name: "Tuple[builtins.str,builtins.str]"
            kind: TUPLE
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "kwargs"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,typing.Iterable[builtins.str]]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "typing.Iterable[builtins.str]"
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            fully_qualified_name: "typing.Iterable"
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "update"
      fully_qualified_name: "werkzeug.datastructures.headers.Headers.update"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.headers.Headers"
          fully_qualified_name: "werkzeug.datastructures.headers.Headers"
        }
      }
      parameters {
        name: "kwargs"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,typing.Iterable[builtins.str]]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "typing.Iterable[builtins.str]"
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            fully_qualified_name: "typing.Iterable"
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
  }
  attributes {
    name: "_list"
    fully_qualified_name: "werkzeug.datastructures.headers.Headers._list"
    type_annotation {
      pretty_printed_name: "builtins.list[Tuple[builtins.str,builtins.str]]"
      args {
        pretty_printed_name: "Tuple[builtins.str,builtins.str]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      fully_qualified_name: "builtins.list"
    }
  }
}
classes {
  name: "ImmutableDictMixin"
  fully_qualified_name: "werkzeug.datastructures.mixins.ImmutableDictMixin"
  super_classes: "builtins.dict"
  methods {
    name: "fromkeys"
    fully_qualified_name: "werkzeug.datastructures.mixins.ImmutableDictMixin.fromkeys"
    return_annotation {
      pretty_printed_name: "werkzeug.datastructures.mixins.ImmutableDictMixin[werkzeug.datastructures.mixins.K,werkzeug.datastructures.mixins.V]"
      args {
        pretty_printed_name: "werkzeug.datastructures.mixins.K"
        kind: TYPE_VAR
      }
      args {
        pretty_printed_name: "werkzeug.datastructures.mixins.V"
        kind: TYPE_VAR
      }
      fully_qualified_name: "werkzeug.datastructures.mixins.ImmutableDictMixin"
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[werkzeug.datastructures.mixins.ImmutableDictMixin[werkzeug.datastructures.mixins.K,werkzeug.datastructures.mixins.V]]"
        kind: TYPE
        args {
          pretty_printed_name: "werkzeug.datastructures.mixins.ImmutableDictMixin[werkzeug.datastructures.mixins.K,werkzeug.datastructures.mixins.V]"
          args {
            pretty_printed_name: "werkzeug.datastructures.mixins.K"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "werkzeug.datastructures.mixins.V"
            kind: TYPE_VAR
          }
          fully_qualified_name: "werkzeug.datastructures.mixins.ImmutableDictMixin"
        }
      }
    }
    parameters {
      name: "keys"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[werkzeug.datastructures.mixins.K]"
        args {
          pretty_printed_name: "werkzeug.datastructures.mixins.K"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[werkzeug.datastructures.mixins.V,None]"
        kind: UNION
        args {
          pretty_printed_name: "werkzeug.datastructures.mixins.V"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "classmethod"
    is_class_method: true
  }
  methods {
    name: "_iter_hashitems"
    fully_qualified_name: "werkzeug.datastructures.mixins.ImmutableDictMixin._iter_hashitems"
    return_annotation {
      pretty_printed_name: "typing.Iterable[typing.Hashable]"
      args {
        pretty_printed_name: "typing.Hashable"
        fully_qualified_name: "typing.Hashable"
      }
      fully_qualified_name: "typing.Iterable"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.mixins.ImmutableDictMixin[werkzeug.datastructures.mixins.K,werkzeug.datastructures.mixins.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.mixins.K"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "werkzeug.datastructures.mixins.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "werkzeug.datastructures.mixins.ImmutableDictMixin"
      }
    }
  }
  methods {
    name: "__hash__"
    fully_qualified_name: "werkzeug.datastructures.mixins.ImmutableDictMixin.__hash__"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.mixins.ImmutableDictMixin[werkzeug.datastructures.mixins.K,werkzeug.datastructures.mixins.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.mixins.K"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "werkzeug.datastructures.mixins.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "werkzeug.datastructures.mixins.ImmutableDictMixin"
      }
    }
  }
  methods {
    name: "setdefault"
    fully_qualified_name: "werkzeug.datastructures.mixins.ImmutableDictMixin.setdefault"
    return_annotation {
      pretty_printed_name: "NoReturn"
      kind: UNINHABITED
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.mixins.ImmutableDictMixin[werkzeug.datastructures.mixins.K,werkzeug.datastructures.mixins.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.mixins.K"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "werkzeug.datastructures.mixins.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "werkzeug.datastructures.mixins.ImmutableDictMixin"
      }
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.mixins.K"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "default"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[werkzeug.datastructures.mixins.V,None]"
        kind: UNION
        args {
          pretty_printed_name: "werkzeug.datastructures.mixins.V"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "update"
    fully_qualified_name: "werkzeug.datastructures.mixins.ImmutableDictMixin.update"
    return_annotation {
      pretty_printed_name: "NoReturn"
      kind: UNINHABITED
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.mixins.ImmutableDictMixin[werkzeug.datastructures.mixins.K,werkzeug.datastructures.mixins.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.mixins.K"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "werkzeug.datastructures.mixins.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "werkzeug.datastructures.mixins.ImmutableDictMixin"
      }
    }
    parameters {
      name: "args"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "kwargs"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.mixins.V"
        kind: TYPE_VAR
      }
    }
  }
  methods {
    name: "pop"
    fully_qualified_name: "werkzeug.datastructures.mixins.ImmutableDictMixin.pop"
    return_annotation {
      pretty_printed_name: "NoReturn"
      kind: UNINHABITED
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.mixins.ImmutableDictMixin[werkzeug.datastructures.mixins.K,werkzeug.datastructures.mixins.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.mixins.K"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "werkzeug.datastructures.mixins.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "werkzeug.datastructures.mixins.ImmutableDictMixin"
      }
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.mixins.K"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "default"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[werkzeug.datastructures.mixins.V,None]"
        kind: UNION
        args {
          pretty_printed_name: "werkzeug.datastructures.mixins.V"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "popitem"
    fully_qualified_name: "werkzeug.datastructures.mixins.ImmutableDictMixin.popitem"
    return_annotation {
      pretty_printed_name: "NoReturn"
      kind: UNINHABITED
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.mixins.ImmutableDictMixin[werkzeug.datastructures.mixins.K,werkzeug.datastructures.mixins.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.mixins.K"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "werkzeug.datastructures.mixins.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "werkzeug.datastructures.mixins.ImmutableDictMixin"
      }
    }
  }
  methods {
    name: "__setitem__"
    fully_qualified_name: "werkzeug.datastructures.mixins.ImmutableDictMixin.__setitem__"
    return_annotation {
      pretty_printed_name: "NoReturn"
      kind: UNINHABITED
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.mixins.ImmutableDictMixin[werkzeug.datastructures.mixins.K,werkzeug.datastructures.mixins.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.mixins.K"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "werkzeug.datastructures.mixins.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "werkzeug.datastructures.mixins.ImmutableDictMixin"
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.mixins.K"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.mixins.V"
        kind: TYPE_VAR
      }
    }
  }
  methods {
    name: "__delitem__"
    fully_qualified_name: "werkzeug.datastructures.mixins.ImmutableDictMixin.__delitem__"
    return_annotation {
      pretty_printed_name: "NoReturn"
      kind: UNINHABITED
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.mixins.ImmutableDictMixin[werkzeug.datastructures.mixins.K,werkzeug.datastructures.mixins.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.mixins.K"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "werkzeug.datastructures.mixins.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "werkzeug.datastructures.mixins.ImmutableDictMixin"
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.mixins.K"
        kind: TYPE_VAR
      }
    }
  }
  methods {
    name: "clear"
    fully_qualified_name: "werkzeug.datastructures.mixins.ImmutableDictMixin.clear"
    return_annotation {
      pretty_printed_name: "NoReturn"
      kind: UNINHABITED
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.mixins.ImmutableDictMixin[werkzeug.datastructures.mixins.K,werkzeug.datastructures.mixins.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.mixins.K"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "werkzeug.datastructures.mixins.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "werkzeug.datastructures.mixins.ImmutableDictMixin"
      }
    }
  }
  is_generic: true
  attributes {
    name: "_hash_cache"
    fully_qualified_name: "werkzeug.datastructures.mixins.ImmutableDictMixin._hash_cache"
    type_annotation {
      pretty_printed_name: "Union[builtins.int,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
}
classes {
  name: "ImmutableHeadersMixin"
  fully_qualified_name: "werkzeug.datastructures.mixins.ImmutableHeadersMixin"
  super_classes: "werkzeug.datastructures.headers.Headers"
  methods {
    name: "__delitem__"
    fully_qualified_name: "werkzeug.datastructures.mixins.ImmutableHeadersMixin.__delitem__"
    return_annotation {
      pretty_printed_name: "NoReturn"
      kind: UNINHABITED
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.mixins.ImmutableHeadersMixin"
        fully_qualified_name: "werkzeug.datastructures.mixins.ImmutableHeadersMixin"
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
  }
  methods {
    name: "__setitem__"
    fully_qualified_name: "werkzeug.datastructures.mixins.ImmutableHeadersMixin.__setitem__"
    return_annotation {
      pretty_printed_name: "NoReturn"
      kind: UNINHABITED
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.mixins.ImmutableHeadersMixin"
        fully_qualified_name: "werkzeug.datastructures.mixins.ImmutableHeadersMixin"
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
  }
  methods {
    name: "set"
    fully_qualified_name: "werkzeug.datastructures.mixins.ImmutableHeadersMixin.set"
    return_annotation {
      pretty_printed_name: "NoReturn"
      kind: UNINHABITED
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.mixins.ImmutableHeadersMixin"
        fully_qualified_name: "werkzeug.datastructures.mixins.ImmutableHeadersMixin"
      }
    }
    parameters {
      name: "_key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "_value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "kw"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
  }
  methods {
    name: "setlist"
    fully_qualified_name: "werkzeug.datastructures.mixins.ImmutableHeadersMixin.setlist"
    return_annotation {
      pretty_printed_name: "NoReturn"
      kind: UNINHABITED
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.mixins.ImmutableHeadersMixin"
        fully_qualified_name: "werkzeug.datastructures.mixins.ImmutableHeadersMixin"
      }
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "values"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
  }
  methods {
    name: "add"
    fully_qualified_name: "werkzeug.datastructures.mixins.ImmutableHeadersMixin.add"
    return_annotation {
      pretty_printed_name: "NoReturn"
      kind: UNINHABITED
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.mixins.ImmutableHeadersMixin"
        fully_qualified_name: "werkzeug.datastructures.mixins.ImmutableHeadersMixin"
      }
    }
    parameters {
      name: "_key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "_value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "kw"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
  }
  methods {
    name: "add_header"
    fully_qualified_name: "werkzeug.datastructures.mixins.ImmutableHeadersMixin.add_header"
    return_annotation {
      pretty_printed_name: "NoReturn"
      kind: UNINHABITED
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.mixins.ImmutableHeadersMixin"
        fully_qualified_name: "werkzeug.datastructures.mixins.ImmutableHeadersMixin"
      }
    }
    parameters {
      name: "_key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "_value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "_kw"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
  }
  methods {
    name: "remove"
    fully_qualified_name: "werkzeug.datastructures.mixins.ImmutableHeadersMixin.remove"
    return_annotation {
      pretty_printed_name: "NoReturn"
      kind: UNINHABITED
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.mixins.ImmutableHeadersMixin"
        fully_qualified_name: "werkzeug.datastructures.mixins.ImmutableHeadersMixin"
      }
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
  }
  methods {
    name: "extend"
    fully_qualified_name: "werkzeug.datastructures.mixins.ImmutableHeadersMixin.extend"
    return_annotation {
      pretty_printed_name: "NoReturn"
      kind: UNINHABITED
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.mixins.ImmutableHeadersMixin"
        fully_qualified_name: "werkzeug.datastructures.mixins.ImmutableHeadersMixin"
      }
    }
    parameters {
      name: "args"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "kwargs"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
  }
  methods {
    name: "update"
    fully_qualified_name: "werkzeug.datastructures.mixins.ImmutableHeadersMixin.update"
    return_annotation {
      pretty_printed_name: "NoReturn"
      kind: UNINHABITED
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.mixins.ImmutableHeadersMixin"
        fully_qualified_name: "werkzeug.datastructures.mixins.ImmutableHeadersMixin"
      }
    }
    parameters {
      name: "args"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "kwargs"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
  }
  methods {
    name: "insert"
    fully_qualified_name: "werkzeug.datastructures.mixins.ImmutableHeadersMixin.insert"
    return_annotation {
      pretty_printed_name: "NoReturn"
      kind: UNINHABITED
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.mixins.ImmutableHeadersMixin"
        fully_qualified_name: "werkzeug.datastructures.mixins.ImmutableHeadersMixin"
      }
    }
    parameters {
      name: "pos"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
  }
  methods {
    name: "pop"
    fully_qualified_name: "werkzeug.datastructures.mixins.ImmutableHeadersMixin.pop"
    return_annotation {
      pretty_printed_name: "NoReturn"
      kind: UNINHABITED
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.mixins.ImmutableHeadersMixin"
        fully_qualified_name: "werkzeug.datastructures.mixins.ImmutableHeadersMixin"
      }
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "default"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
  }
  methods {
    name: "popitem"
    fully_qualified_name: "werkzeug.datastructures.mixins.ImmutableHeadersMixin.popitem"
    return_annotation {
      pretty_printed_name: "NoReturn"
      kind: UNINHABITED
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.mixins.ImmutableHeadersMixin"
        fully_qualified_name: "werkzeug.datastructures.mixins.ImmutableHeadersMixin"
      }
    }
  }
  methods {
    name: "setdefault"
    fully_qualified_name: "werkzeug.datastructures.mixins.ImmutableHeadersMixin.setdefault"
    return_annotation {
      pretty_printed_name: "NoReturn"
      kind: UNINHABITED
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.mixins.ImmutableHeadersMixin"
        fully_qualified_name: "werkzeug.datastructures.mixins.ImmutableHeadersMixin"
      }
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "default"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
  }
  methods {
    name: "setlistdefault"
    fully_qualified_name: "werkzeug.datastructures.mixins.ImmutableHeadersMixin.setlistdefault"
    return_annotation {
      pretty_printed_name: "NoReturn"
      kind: UNINHABITED
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.mixins.ImmutableHeadersMixin"
        fully_qualified_name: "werkzeug.datastructures.mixins.ImmutableHeadersMixin"
      }
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "default"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
  }
}
classes {
  name: "ImmutableListMixin"
  fully_qualified_name: "werkzeug.datastructures.mixins.ImmutableListMixin"
  super_classes: "builtins.list"
  methods {
    name: "__hash__"
    fully_qualified_name: "werkzeug.datastructures.mixins.ImmutableListMixin.__hash__"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.mixins.ImmutableListMixin[werkzeug.datastructures.mixins.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.mixins.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "werkzeug.datastructures.mixins.ImmutableListMixin"
      }
    }
  }
  methods {
    name: "__delitem__"
    fully_qualified_name: "werkzeug.datastructures.mixins.ImmutableListMixin.__delitem__"
    return_annotation {
      pretty_printed_name: "NoReturn"
      kind: UNINHABITED
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.mixins.ImmutableListMixin[werkzeug.datastructures.mixins.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.mixins.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "werkzeug.datastructures.mixins.ImmutableListMixin"
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "Union[typing.SupportsIndex,builtins.slice]"
        kind: UNION
        args {
          pretty_printed_name: "typing.SupportsIndex"
          fully_qualified_name: "typing.SupportsIndex"
        }
        args {
          pretty_printed_name: "builtins.slice"
          fully_qualified_name: "builtins.slice"
        }
      }
    }
  }
  methods {
    name: "__iadd__"
    fully_qualified_name: "werkzeug.datastructures.mixins.ImmutableListMixin.__iadd__"
    return_annotation {
      pretty_printed_name: "NoReturn"
      kind: UNINHABITED
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.mixins.ImmutableListMixin[werkzeug.datastructures.mixins.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.mixins.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "werkzeug.datastructures.mixins.ImmutableListMixin"
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
  }
  methods {
    name: "__imul__"
    fully_qualified_name: "werkzeug.datastructures.mixins.ImmutableListMixin.__imul__"
    return_annotation {
      pretty_printed_name: "NoReturn"
      kind: UNINHABITED
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.mixins.ImmutableListMixin[werkzeug.datastructures.mixins.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.mixins.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "werkzeug.datastructures.mixins.ImmutableListMixin"
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "typing.SupportsIndex"
        fully_qualified_name: "typing.SupportsIndex"
      }
    }
  }
  methods {
    name: "__setitem__"
    fully_qualified_name: "werkzeug.datastructures.mixins.ImmutableListMixin.__setitem__"
    return_annotation {
      pretty_printed_name: "NoReturn"
      kind: UNINHABITED
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.mixins.ImmutableListMixin[werkzeug.datastructures.mixins.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.mixins.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "werkzeug.datastructures.mixins.ImmutableListMixin"
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "Union[builtins.int,builtins.slice]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.slice"
          fully_qualified_name: "builtins.slice"
        }
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.mixins.V"
        kind: TYPE_VAR
      }
    }
  }
  methods {
    name: "append"
    fully_qualified_name: "werkzeug.datastructures.mixins.ImmutableListMixin.append"
    return_annotation {
      pretty_printed_name: "NoReturn"
      kind: UNINHABITED
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.mixins.ImmutableListMixin[werkzeug.datastructures.mixins.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.mixins.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "werkzeug.datastructures.mixins.ImmutableListMixin"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.mixins.V"
        kind: TYPE_VAR
      }
    }
  }
  methods {
    name: "remove"
    fully_qualified_name: "werkzeug.datastructures.mixins.ImmutableListMixin.remove"
    return_annotation {
      pretty_printed_name: "NoReturn"
      kind: UNINHABITED
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.mixins.ImmutableListMixin[werkzeug.datastructures.mixins.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.mixins.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "werkzeug.datastructures.mixins.ImmutableListMixin"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.mixins.V"
        kind: TYPE_VAR
      }
    }
  }
  methods {
    name: "extend"
    fully_qualified_name: "werkzeug.datastructures.mixins.ImmutableListMixin.extend"
    return_annotation {
      pretty_printed_name: "NoReturn"
      kind: UNINHABITED
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.mixins.ImmutableListMixin[werkzeug.datastructures.mixins.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.mixins.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "werkzeug.datastructures.mixins.ImmutableListMixin"
      }
    }
    parameters {
      name: "values"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[werkzeug.datastructures.mixins.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.mixins.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
  }
  methods {
    name: "insert"
    fully_qualified_name: "werkzeug.datastructures.mixins.ImmutableListMixin.insert"
    return_annotation {
      pretty_printed_name: "NoReturn"
      kind: UNINHABITED
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.mixins.ImmutableListMixin[werkzeug.datastructures.mixins.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.mixins.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "werkzeug.datastructures.mixins.ImmutableListMixin"
      }
    }
    parameters {
      name: "pos"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.SupportsIndex"
        fully_qualified_name: "typing.SupportsIndex"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.mixins.V"
        kind: TYPE_VAR
      }
    }
  }
  methods {
    name: "pop"
    fully_qualified_name: "werkzeug.datastructures.mixins.ImmutableListMixin.pop"
    return_annotation {
      pretty_printed_name: "NoReturn"
      kind: UNINHABITED
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.mixins.ImmutableListMixin[werkzeug.datastructures.mixins.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.mixins.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "werkzeug.datastructures.mixins.ImmutableListMixin"
      }
    }
    parameters {
      name: "index"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.SupportsIndex"
        fully_qualified_name: "typing.SupportsIndex"
      }
    }
  }
  methods {
    name: "reverse"
    fully_qualified_name: "werkzeug.datastructures.mixins.ImmutableListMixin.reverse"
    return_annotation {
      pretty_printed_name: "NoReturn"
      kind: UNINHABITED
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.mixins.ImmutableListMixin[werkzeug.datastructures.mixins.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.mixins.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "werkzeug.datastructures.mixins.ImmutableListMixin"
      }
    }
  }
  methods {
    name: "sort"
    fully_qualified_name: "werkzeug.datastructures.mixins.ImmutableListMixin.sort"
    return_annotation {
      pretty_printed_name: "NoReturn"
      kind: UNINHABITED
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.mixins.ImmutableListMixin[werkzeug.datastructures.mixins.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.mixins.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "werkzeug.datastructures.mixins.ImmutableListMixin"
      }
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[CallableType[builtins.function],None]"
        kind: UNION
        args {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "reverse"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
  }
  is_generic: true
  attributes {
    name: "_hash_cache"
    fully_qualified_name: "werkzeug.datastructures.mixins.ImmutableListMixin._hash_cache"
    type_annotation {
      pretty_printed_name: "Union[builtins.int,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
}
classes {
  name: "ImmutableMultiDictMixin"
  fully_qualified_name: "werkzeug.datastructures.mixins.ImmutableMultiDictMixin"
  super_classes: "werkzeug.datastructures.mixins.ImmutableDictMixin"
  methods {
    name: "_iter_hashitems"
    fully_qualified_name: "werkzeug.datastructures.mixins.ImmutableMultiDictMixin._iter_hashitems"
    return_annotation {
      pretty_printed_name: "typing.Iterable[typing.Hashable]"
      args {
        pretty_printed_name: "typing.Hashable"
        fully_qualified_name: "typing.Hashable"
      }
      fully_qualified_name: "typing.Iterable"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.mixins.ImmutableMultiDictMixin[werkzeug.datastructures.mixins.K,werkzeug.datastructures.mixins.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.mixins.K"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "werkzeug.datastructures.mixins.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "werkzeug.datastructures.mixins.ImmutableMultiDictMixin"
      }
    }
  }
  methods {
    name: "add"
    fully_qualified_name: "werkzeug.datastructures.mixins.ImmutableMultiDictMixin.add"
    return_annotation {
      pretty_printed_name: "NoReturn"
      kind: UNINHABITED
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.mixins.ImmutableMultiDictMixin[werkzeug.datastructures.mixins.K,werkzeug.datastructures.mixins.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.mixins.K"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "werkzeug.datastructures.mixins.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "werkzeug.datastructures.mixins.ImmutableMultiDictMixin"
      }
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.mixins.K"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.mixins.V"
        kind: TYPE_VAR
      }
    }
  }
  methods {
    name: "popitemlist"
    fully_qualified_name: "werkzeug.datastructures.mixins.ImmutableMultiDictMixin.popitemlist"
    return_annotation {
      pretty_printed_name: "NoReturn"
      kind: UNINHABITED
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.mixins.ImmutableMultiDictMixin[werkzeug.datastructures.mixins.K,werkzeug.datastructures.mixins.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.mixins.K"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "werkzeug.datastructures.mixins.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "werkzeug.datastructures.mixins.ImmutableMultiDictMixin"
      }
    }
  }
  methods {
    name: "poplist"
    fully_qualified_name: "werkzeug.datastructures.mixins.ImmutableMultiDictMixin.poplist"
    return_annotation {
      pretty_printed_name: "NoReturn"
      kind: UNINHABITED
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.mixins.ImmutableMultiDictMixin[werkzeug.datastructures.mixins.K,werkzeug.datastructures.mixins.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.mixins.K"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "werkzeug.datastructures.mixins.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "werkzeug.datastructures.mixins.ImmutableMultiDictMixin"
      }
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.mixins.K"
        kind: TYPE_VAR
      }
    }
  }
  methods {
    name: "setlist"
    fully_qualified_name: "werkzeug.datastructures.mixins.ImmutableMultiDictMixin.setlist"
    return_annotation {
      pretty_printed_name: "NoReturn"
      kind: UNINHABITED
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.mixins.ImmutableMultiDictMixin[werkzeug.datastructures.mixins.K,werkzeug.datastructures.mixins.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.mixins.K"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "werkzeug.datastructures.mixins.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "werkzeug.datastructures.mixins.ImmutableMultiDictMixin"
      }
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.mixins.K"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "new_list"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[werkzeug.datastructures.mixins.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.mixins.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
  }
  methods {
    name: "setlistdefault"
    fully_qualified_name: "werkzeug.datastructures.mixins.ImmutableMultiDictMixin.setlistdefault"
    return_annotation {
      pretty_printed_name: "NoReturn"
      kind: UNINHABITED
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.mixins.ImmutableMultiDictMixin[werkzeug.datastructures.mixins.K,werkzeug.datastructures.mixins.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.mixins.K"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "werkzeug.datastructures.mixins.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "werkzeug.datastructures.mixins.ImmutableMultiDictMixin"
      }
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.mixins.K"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "default_list"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.Iterable[werkzeug.datastructures.mixins.V],None]"
        kind: UNION
        args {
          pretty_printed_name: "typing.Iterable[werkzeug.datastructures.mixins.V]"
          args {
            pretty_printed_name: "werkzeug.datastructures.mixins.V"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  is_generic: true
}
classes {
  name: "UpdateDictMixin"
  fully_qualified_name: "werkzeug.datastructures.mixins.UpdateDictMixin"
  super_classes: "builtins.dict"
  methods {
    name: "setdefault"
    fully_qualified_name: "werkzeug.datastructures.mixins.UpdateDictMixin.setdefault"
    return_annotation {
      pretty_printed_name: "werkzeug.datastructures.mixins.V"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.mixins.UpdateDictMixin[werkzeug.datastructures.mixins.K,werkzeug.datastructures.mixins.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.mixins.K"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "werkzeug.datastructures.mixins.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "werkzeug.datastructures.mixins.UpdateDictMixin"
      }
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.mixins.K"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "default"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[werkzeug.datastructures.mixins.V,None]"
        kind: UNION
        args {
          pretty_printed_name: "werkzeug.datastructures.mixins.V"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "__setitem__"
    fully_qualified_name: "werkzeug.datastructures.mixins.UpdateDictMixin.__setitem__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.mixins.UpdateDictMixin[werkzeug.datastructures.mixins.K,werkzeug.datastructures.mixins.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.mixins.K"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "werkzeug.datastructures.mixins.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "werkzeug.datastructures.mixins.UpdateDictMixin"
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.mixins.K"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.mixins.V"
        kind: TYPE_VAR
      }
    }
  }
  methods {
    name: "__delitem__"
    fully_qualified_name: "werkzeug.datastructures.mixins.UpdateDictMixin.__delitem__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.mixins.UpdateDictMixin[werkzeug.datastructures.mixins.K,werkzeug.datastructures.mixins.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.mixins.K"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "werkzeug.datastructures.mixins.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "werkzeug.datastructures.mixins.UpdateDictMixin"
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.mixins.K"
        kind: TYPE_VAR
      }
    }
  }
  methods {
    name: "clear"
    fully_qualified_name: "werkzeug.datastructures.mixins.UpdateDictMixin.clear"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.mixins.UpdateDictMixin[werkzeug.datastructures.mixins.K,werkzeug.datastructures.mixins.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.mixins.K"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "werkzeug.datastructures.mixins.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "werkzeug.datastructures.mixins.UpdateDictMixin"
      }
    }
  }
  methods {
    name: "popitem"
    fully_qualified_name: "werkzeug.datastructures.mixins.UpdateDictMixin.popitem"
    return_annotation {
      pretty_printed_name: "Tuple[werkzeug.datastructures.mixins.K,werkzeug.datastructures.mixins.V]"
      kind: TUPLE
      args {
        pretty_printed_name: "werkzeug.datastructures.mixins.K"
        kind: TYPE_VAR
      }
      args {
        pretty_printed_name: "werkzeug.datastructures.mixins.V"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.mixins.UpdateDictMixin[werkzeug.datastructures.mixins.K,werkzeug.datastructures.mixins.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.mixins.K"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "werkzeug.datastructures.mixins.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "werkzeug.datastructures.mixins.UpdateDictMixin"
      }
    }
  }
  overloaded_methods {
    name: "pop"
    fullname: "werkzeug.datastructures.mixins.UpdateDictMixin.pop"
    definitions {
      name: "pop"
      fully_qualified_name: "werkzeug.datastructures.mixins.UpdateDictMixin.pop"
      return_annotation {
        pretty_printed_name: "werkzeug.datastructures.mixins.V"
        kind: TYPE_VAR
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.mixins.UpdateDictMixin[werkzeug.datastructures.mixins.K,werkzeug.datastructures.mixins.V]"
          args {
            pretty_printed_name: "werkzeug.datastructures.mixins.K"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "werkzeug.datastructures.mixins.V"
            kind: TYPE_VAR
          }
          fully_qualified_name: "werkzeug.datastructures.mixins.UpdateDictMixin"
        }
      }
      parameters {
        name: "key"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.mixins.K"
          kind: TYPE_VAR
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "pop"
      fully_qualified_name: "werkzeug.datastructures.mixins.UpdateDictMixin.pop"
      return_annotation {
        pretty_printed_name: "Union[werkzeug.datastructures.mixins.V,werkzeug.datastructures.mixins.T]"
        kind: UNION
        args {
          pretty_printed_name: "werkzeug.datastructures.mixins.V"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "werkzeug.datastructures.mixins.T"
          kind: TYPE_VAR
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.mixins.UpdateDictMixin[werkzeug.datastructures.mixins.K,werkzeug.datastructures.mixins.V]"
          args {
            pretty_printed_name: "werkzeug.datastructures.mixins.K"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "werkzeug.datastructures.mixins.V"
            kind: TYPE_VAR
          }
          fully_qualified_name: "werkzeug.datastructures.mixins.UpdateDictMixin"
        }
      }
      parameters {
        name: "key"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.mixins.K"
          kind: TYPE_VAR
        }
      }
      parameters {
        name: "default"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[werkzeug.datastructures.mixins.V,werkzeug.datastructures.mixins.T]"
          kind: UNION
          args {
            pretty_printed_name: "werkzeug.datastructures.mixins.V"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "werkzeug.datastructures.mixins.T"
            kind: TYPE_VAR
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
  }
  overloaded_methods {
    name: "update"
    fullname: "werkzeug.datastructures.mixins.UpdateDictMixin.update"
    definitions {
      name: "update"
      fully_qualified_name: "werkzeug.datastructures.mixins.UpdateDictMixin.update"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.mixins.UpdateDictMixin[werkzeug.datastructures.mixins.K,werkzeug.datastructures.mixins.V]"
          args {
            pretty_printed_name: "werkzeug.datastructures.mixins.K"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "werkzeug.datastructures.mixins.V"
            kind: TYPE_VAR
          }
          fully_qualified_name: "werkzeug.datastructures.mixins.UpdateDictMixin"
        }
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "_typeshed.SupportsKeysAndGetItem[werkzeug.datastructures.mixins.K,werkzeug.datastructures.mixins.V]"
          args {
            pretty_printed_name: "werkzeug.datastructures.mixins.K"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "werkzeug.datastructures.mixins.V"
            kind: TYPE_VAR
          }
          fully_qualified_name: "_typeshed.SupportsKeysAndGetItem"
        }
      }
      parameters {
        name: "kwargs"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.mixins.V"
          kind: TYPE_VAR
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "update"
      fully_qualified_name: "werkzeug.datastructures.mixins.UpdateDictMixin.update"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.mixins.UpdateDictMixin[werkzeug.datastructures.mixins.K,werkzeug.datastructures.mixins.V]"
          args {
            pretty_printed_name: "werkzeug.datastructures.mixins.K"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "werkzeug.datastructures.mixins.V"
            kind: TYPE_VAR
          }
          fully_qualified_name: "werkzeug.datastructures.mixins.UpdateDictMixin"
        }
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "typing.Iterable[Tuple[werkzeug.datastructures.mixins.K,werkzeug.datastructures.mixins.V]]"
          args {
            pretty_printed_name: "Tuple[werkzeug.datastructures.mixins.K,werkzeug.datastructures.mixins.V]"
            kind: TUPLE
            args {
              pretty_printed_name: "werkzeug.datastructures.mixins.K"
              kind: TYPE_VAR
            }
            args {
              pretty_printed_name: "werkzeug.datastructures.mixins.V"
              kind: TYPE_VAR
            }
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "kwargs"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.mixins.V"
          kind: TYPE_VAR
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "update"
      fully_qualified_name: "werkzeug.datastructures.mixins.UpdateDictMixin.update"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.mixins.UpdateDictMixin[werkzeug.datastructures.mixins.K,werkzeug.datastructures.mixins.V]"
          args {
            pretty_printed_name: "werkzeug.datastructures.mixins.K"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "werkzeug.datastructures.mixins.V"
            kind: TYPE_VAR
          }
          fully_qualified_name: "werkzeug.datastructures.mixins.UpdateDictMixin"
        }
      }
      parameters {
        name: "kwargs"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.mixins.V"
          kind: TYPE_VAR
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
  }
  is_generic: true
  attributes {
    name: "on_update"
    fully_qualified_name: "werkzeug.datastructures.mixins.UpdateDictMixin.on_update"
    type_annotation {
      pretty_printed_name: "CallableType[builtins.function]"
      kind: CALLABLE
      args {
        pretty_printed_name: "builtins.function"
        fully_qualified_name: "builtins.function"
      }
    }
  }
}
classes {
  name: "ContentRange"
  fully_qualified_name: "werkzeug.datastructures.range.ContentRange"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "werkzeug.datastructures.range.ContentRange.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.range.ContentRange"
        fully_qualified_name: "werkzeug.datastructures.range.ContentRange"
      }
    }
    parameters {
      name: "units"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "start"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "stop"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "length"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "on_update"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[CallableType[builtins.function],None]"
        kind: UNION
        args {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "set"
    fully_qualified_name: "werkzeug.datastructures.range.ContentRange.set"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.range.ContentRange"
        fully_qualified_name: "werkzeug.datastructures.range.ContentRange"
      }
    }
    parameters {
      name: "start"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "stop"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "length"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "units"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "unset"
    fully_qualified_name: "werkzeug.datastructures.range.ContentRange.unset"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.range.ContentRange"
        fully_qualified_name: "werkzeug.datastructures.range.ContentRange"
      }
    }
  }
  methods {
    name: "to_header"
    fully_qualified_name: "werkzeug.datastructures.range.ContentRange.to_header"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.range.ContentRange"
        fully_qualified_name: "werkzeug.datastructures.range.ContentRange"
      }
    }
  }
  overloaded_methods {
    name: "units"
    fullname: "werkzeug.datastructures.range.ContentRange.units"
    definitions {
      name: "units"
      fully_qualified_name: "werkzeug.datastructures.range.ContentRange.units"
      return_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.range.ContentRange"
          fully_qualified_name: "werkzeug.datastructures.range.ContentRange"
        }
      }
      has_decorators: true
      resolved_decorator_names: "property"
      is_overload: true
      is_property: true
    }
    definitions {
      name: "units"
      fully_qualified_name: "werkzeug.datastructures.range.ContentRange.units"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.range.ContentRange"
          fully_qualified_name: "werkzeug.datastructures.range.ContentRange"
        }
      }
      parameters {
        name: "value"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "units.setter"
    }
  }
  overloaded_methods {
    name: "start"
    fullname: "werkzeug.datastructures.range.ContentRange.start"
    definitions {
      name: "start"
      fully_qualified_name: "werkzeug.datastructures.range.ContentRange.start"
      return_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.range.ContentRange"
          fully_qualified_name: "werkzeug.datastructures.range.ContentRange"
        }
      }
      has_decorators: true
      resolved_decorator_names: "property"
      is_overload: true
      is_property: true
    }
    definitions {
      name: "start"
      fully_qualified_name: "werkzeug.datastructures.range.ContentRange.start"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.range.ContentRange"
          fully_qualified_name: "werkzeug.datastructures.range.ContentRange"
        }
      }
      parameters {
        name: "value"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.int,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "start.setter"
    }
  }
  overloaded_methods {
    name: "stop"
    fullname: "werkzeug.datastructures.range.ContentRange.stop"
    definitions {
      name: "stop"
      fully_qualified_name: "werkzeug.datastructures.range.ContentRange.stop"
      return_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.range.ContentRange"
          fully_qualified_name: "werkzeug.datastructures.range.ContentRange"
        }
      }
      has_decorators: true
      resolved_decorator_names: "property"
      is_overload: true
      is_property: true
    }
    definitions {
      name: "stop"
      fully_qualified_name: "werkzeug.datastructures.range.ContentRange.stop"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.range.ContentRange"
          fully_qualified_name: "werkzeug.datastructures.range.ContentRange"
        }
      }
      parameters {
        name: "value"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.int,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "stop.setter"
    }
  }
  overloaded_methods {
    name: "length"
    fullname: "werkzeug.datastructures.range.ContentRange.length"
    definitions {
      name: "length"
      fully_qualified_name: "werkzeug.datastructures.range.ContentRange.length"
      return_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.range.ContentRange"
          fully_qualified_name: "werkzeug.datastructures.range.ContentRange"
        }
      }
      has_decorators: true
      resolved_decorator_names: "property"
      is_overload: true
      is_property: true
    }
    definitions {
      name: "length"
      fully_qualified_name: "werkzeug.datastructures.range.ContentRange.length"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.range.ContentRange"
          fully_qualified_name: "werkzeug.datastructures.range.ContentRange"
        }
      }
      parameters {
        name: "value"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.int,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "length.setter"
    }
  }
  attributes {
    name: "on_update"
    fully_qualified_name: "werkzeug.datastructures.range.ContentRange.on_update"
    type_annotation {
      pretty_printed_name: "Union[CallableType[builtins.function],None]"
      kind: UNION
      args {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
}
classes {
  name: "IfRange"
  fully_qualified_name: "werkzeug.datastructures.range.IfRange"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "werkzeug.datastructures.range.IfRange.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.range.IfRange"
        fully_qualified_name: "werkzeug.datastructures.range.IfRange"
      }
    }
    parameters {
      name: "etag"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "date"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[datetime.datetime,None]"
        kind: UNION
        args {
          pretty_printed_name: "datetime.datetime"
          fully_qualified_name: "datetime.datetime"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "to_header"
    fully_qualified_name: "werkzeug.datastructures.range.IfRange.to_header"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.range.IfRange"
        fully_qualified_name: "werkzeug.datastructures.range.IfRange"
      }
    }
  }
  attributes {
    name: "etag"
    fully_qualified_name: "werkzeug.datastructures.range.IfRange.etag"
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  attributes {
    name: "date"
    fully_qualified_name: "werkzeug.datastructures.range.IfRange.date"
    type_annotation {
      pretty_printed_name: "Union[datetime.datetime,None]"
      kind: UNION
      args {
        pretty_printed_name: "datetime.datetime"
        fully_qualified_name: "datetime.datetime"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
}
classes {
  name: "Range"
  fully_qualified_name: "werkzeug.datastructures.range.Range"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "werkzeug.datastructures.range.Range.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.range.Range"
        fully_qualified_name: "werkzeug.datastructures.range.Range"
      }
    }
    parameters {
      name: "units"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "ranges"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.list[Tuple[builtins.int,Union[builtins.int,None]]]"
        args {
          pretty_printed_name: "Tuple[builtins.int,Union[builtins.int,None]]"
          kind: TUPLE
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "Union[builtins.int,None]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.int"
              fully_qualified_name: "builtins.int"
            }
            args {
              pretty_printed_name: "None"
              kind: NONE
            }
          }
        }
        fully_qualified_name: "builtins.list"
      }
    }
  }
  methods {
    name: "range_for_length"
    fully_qualified_name: "werkzeug.datastructures.range.Range.range_for_length"
    return_annotation {
      pretty_printed_name: "Union[Tuple[builtins.int,builtins.int],None]"
      kind: UNION
      args {
        pretty_printed_name: "Tuple[builtins.int,builtins.int]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.range.Range"
        fully_qualified_name: "werkzeug.datastructures.range.Range"
      }
    }
    parameters {
      name: "length"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "make_content_range"
    fully_qualified_name: "werkzeug.datastructures.range.Range.make_content_range"
    return_annotation {
      pretty_printed_name: "Union[werkzeug.datastructures.range.ContentRange,None]"
      kind: UNION
      args {
        pretty_printed_name: "werkzeug.datastructures.range.ContentRange"
        fully_qualified_name: "werkzeug.datastructures.range.ContentRange"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.range.Range"
        fully_qualified_name: "werkzeug.datastructures.range.Range"
      }
    }
    parameters {
      name: "length"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "to_header"
    fully_qualified_name: "werkzeug.datastructures.range.Range.to_header"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.range.Range"
        fully_qualified_name: "werkzeug.datastructures.range.Range"
      }
    }
  }
  methods {
    name: "to_content_range_header"
    fully_qualified_name: "werkzeug.datastructures.range.Range.to_content_range_header"
    return_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.range.Range"
        fully_qualified_name: "werkzeug.datastructures.range.Range"
      }
    }
    parameters {
      name: "length"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  attributes {
    name: "units"
    fully_qualified_name: "werkzeug.datastructures.range.Range.units"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  attributes {
    name: "ranges"
    fully_qualified_name: "werkzeug.datastructures.range.Range.ranges"
    type_annotation {
      pretty_printed_name: "builtins.list[Tuple[builtins.int,Union[builtins.int,None]]]"
      args {
        pretty_printed_name: "Tuple[builtins.int,Union[builtins.int,None]]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "Union[builtins.int,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      fully_qualified_name: "builtins.list"
    }
  }
}
classes {
  name: "CallbackDict"
  fully_qualified_name: "werkzeug.datastructures.structures.CallbackDict"
  super_classes: "werkzeug.datastructures.mixins.UpdateDictMixin"
  super_classes: "builtins.dict"
  methods {
    name: "__init__"
    fully_qualified_name: "werkzeug.datastructures.structures.CallbackDict.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.CallbackDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.K"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "werkzeug.datastructures.structures.CallbackDict"
      }
    }
    parameters {
      name: "initial"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.Mapping[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V],typing.Iterable[Tuple[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]],None]"
        kind: UNION
        args {
          pretty_printed_name: "typing.Mapping[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
          args {
            pretty_printed_name: "werkzeug.datastructures.structures.K"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "werkzeug.datastructures.structures.V"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Mapping"
        }
        args {
          pretty_printed_name: "typing.Iterable[Tuple[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]]"
          args {
            pretty_printed_name: "Tuple[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
            kind: TUPLE
            args {
              pretty_printed_name: "werkzeug.datastructures.structures.K"
              kind: TYPE_VAR
            }
            args {
              pretty_printed_name: "werkzeug.datastructures.structures.V"
              kind: TYPE_VAR
            }
          }
          fully_qualified_name: "typing.Iterable"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "on_update"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[CallableType[builtins.function],None]"
        kind: UNION
        args {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  is_generic: true
}
classes {
  name: "CombinedMultiDict"
  fully_qualified_name: "werkzeug.datastructures.structures.CombinedMultiDict"
  super_classes: "werkzeug.datastructures.mixins.ImmutableMultiDictMixin"
  super_classes: "werkzeug.datastructures.structures.MultiDict"
  methods {
    name: "__init__"
    fully_qualified_name: "werkzeug.datastructures.structures.CombinedMultiDict.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.CombinedMultiDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.K"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "werkzeug.datastructures.structures.CombinedMultiDict"
      }
    }
    parameters {
      name: "dicts"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.Iterable[werkzeug.datastructures.structures.MultiDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]],None]"
        kind: UNION
        args {
          pretty_printed_name: "typing.Iterable[werkzeug.datastructures.structures.MultiDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]]"
          args {
            pretty_printed_name: "werkzeug.datastructures.structures.MultiDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
            args {
              pretty_printed_name: "werkzeug.datastructures.structures.K"
              kind: TYPE_VAR
            }
            args {
              pretty_printed_name: "werkzeug.datastructures.structures.V"
              kind: TYPE_VAR
            }
            fully_qualified_name: "werkzeug.datastructures.structures.MultiDict"
          }
          fully_qualified_name: "typing.Iterable"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "fromkeys"
    fully_qualified_name: "werkzeug.datastructures.structures.CombinedMultiDict.fromkeys"
    return_annotation {
      pretty_printed_name: "NoReturn"
      kind: UNINHABITED
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[werkzeug.datastructures.structures.CombinedMultiDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]]"
        kind: TYPE
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.CombinedMultiDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
          args {
            pretty_printed_name: "werkzeug.datastructures.structures.K"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "werkzeug.datastructures.structures.V"
            kind: TYPE_VAR
          }
          fully_qualified_name: "werkzeug.datastructures.structures.CombinedMultiDict"
        }
      }
    }
    parameters {
      name: "keys"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    has_decorators: true
    resolved_decorator_names: "classmethod"
    is_class_method: true
  }
  methods {
    name: "__getitem__"
    fully_qualified_name: "werkzeug.datastructures.structures.CombinedMultiDict.__getitem__"
    return_annotation {
      pretty_printed_name: "werkzeug.datastructures.structures.V"
      kind: TYPE_VAR
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.CombinedMultiDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.K"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "werkzeug.datastructures.structures.CombinedMultiDict"
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.K"
        kind: TYPE_VAR
      }
    }
  }
  methods {
    name: "_keys_impl"
    fully_qualified_name: "werkzeug.datastructures.structures.CombinedMultiDict._keys_impl"
    return_annotation {
      pretty_printed_name: "builtins.set[werkzeug.datastructures.structures.K]"
      args {
        pretty_printed_name: "werkzeug.datastructures.structures.K"
        kind: TYPE_VAR
      }
      fully_qualified_name: "builtins.set"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.CombinedMultiDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.K"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "werkzeug.datastructures.structures.CombinedMultiDict"
      }
    }
  }
  methods {
    name: "keys"
    fully_qualified_name: "werkzeug.datastructures.structures.CombinedMultiDict.keys"
    return_annotation {
      pretty_printed_name: "builtins.set[werkzeug.datastructures.structures.K]"
      args {
        pretty_printed_name: "werkzeug.datastructures.structures.K"
        kind: TYPE_VAR
      }
      fully_qualified_name: "builtins.set"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.CombinedMultiDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.K"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "werkzeug.datastructures.structures.CombinedMultiDict"
      }
    }
  }
  methods {
    name: "__iter__"
    fully_qualified_name: "werkzeug.datastructures.structures.CombinedMultiDict.__iter__"
    return_annotation {
      pretty_printed_name: "builtins.set[werkzeug.datastructures.structures.K]"
      args {
        pretty_printed_name: "werkzeug.datastructures.structures.K"
        kind: TYPE_VAR
      }
      fully_qualified_name: "builtins.set"
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.CombinedMultiDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.K"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "werkzeug.datastructures.structures.CombinedMultiDict"
      }
    }
  }
  methods {
    name: "items"
    fully_qualified_name: "werkzeug.datastructures.structures.CombinedMultiDict.items"
    return_annotation {
      pretty_printed_name: "typing.Iterator[Tuple[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]]"
      args {
        pretty_printed_name: "Tuple[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
        kind: TUPLE
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.K"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.V"
          kind: TYPE_VAR
        }
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.CombinedMultiDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.K"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "werkzeug.datastructures.structures.CombinedMultiDict"
      }
    }
    parameters {
      name: "multi"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
  }
  methods {
    name: "values"
    fully_qualified_name: "werkzeug.datastructures.structures.CombinedMultiDict.values"
    return_annotation {
      pretty_printed_name: "typing.Iterator[werkzeug.datastructures.structures.V]"
      args {
        pretty_printed_name: "werkzeug.datastructures.structures.V"
        kind: TYPE_VAR
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.CombinedMultiDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.K"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "werkzeug.datastructures.structures.CombinedMultiDict"
      }
    }
  }
  methods {
    name: "lists"
    fully_qualified_name: "werkzeug.datastructures.structures.CombinedMultiDict.lists"
    return_annotation {
      pretty_printed_name: "typing.Iterator[Tuple[werkzeug.datastructures.structures.K,builtins.list[werkzeug.datastructures.structures.V]]]"
      args {
        pretty_printed_name: "Tuple[werkzeug.datastructures.structures.K,builtins.list[werkzeug.datastructures.structures.V]]"
        kind: TUPLE
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.K"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "builtins.list[werkzeug.datastructures.structures.V]"
          args {
            pretty_printed_name: "werkzeug.datastructures.structures.V"
            kind: TYPE_VAR
          }
          fully_qualified_name: "builtins.list"
        }
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.CombinedMultiDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.K"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "werkzeug.datastructures.structures.CombinedMultiDict"
      }
    }
  }
  methods {
    name: "listvalues"
    fully_qualified_name: "werkzeug.datastructures.structures.CombinedMultiDict.listvalues"
    return_annotation {
      pretty_printed_name: "typing.Iterator[builtins.list[werkzeug.datastructures.structures.V]]"
      args {
        pretty_printed_name: "builtins.list[werkzeug.datastructures.structures.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.list"
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.CombinedMultiDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.K"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "werkzeug.datastructures.structures.CombinedMultiDict"
      }
    }
  }
  methods {
    name: "copy"
    fully_qualified_name: "werkzeug.datastructures.structures.CombinedMultiDict.copy"
    return_annotation {
      pretty_printed_name: "werkzeug.datastructures.structures.MultiDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
      args {
        pretty_printed_name: "werkzeug.datastructures.structures.K"
        kind: TYPE_VAR
      }
      args {
        pretty_printed_name: "werkzeug.datastructures.structures.V"
        kind: TYPE_VAR
      }
      fully_qualified_name: "werkzeug.datastructures.structures.MultiDict"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.CombinedMultiDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.K"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "werkzeug.datastructures.structures.CombinedMultiDict"
      }
    }
  }
  methods {
    name: "__contains__"
    fully_qualified_name: "werkzeug.datastructures.structures.CombinedMultiDict.__contains__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.CombinedMultiDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.K"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "werkzeug.datastructures.structures.CombinedMultiDict"
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.K"
        kind: TYPE_VAR
      }
    }
  }
  methods {
    name: "has_key"
    fully_qualified_name: "werkzeug.datastructures.structures.CombinedMultiDict.has_key"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.CombinedMultiDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.K"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "werkzeug.datastructures.structures.CombinedMultiDict"
      }
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.K"
        kind: TYPE_VAR
      }
    }
  }
  overloaded_methods {
    name: "get"
    fullname: "werkzeug.datastructures.structures.CombinedMultiDict.get"
    definitions {
      name: "get"
      fully_qualified_name: "werkzeug.datastructures.structures.CombinedMultiDict.get"
      return_annotation {
        pretty_printed_name: "Union[werkzeug.datastructures.structures.V,None]"
        kind: UNION
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.V"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.structures.CombinedMultiDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
          args {
            pretty_printed_name: "werkzeug.datastructures.structures.K"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "werkzeug.datastructures.structures.V"
            kind: TYPE_VAR
          }
          fully_qualified_name: "werkzeug.datastructures.structures.CombinedMultiDict"
        }
      }
      parameters {
        name: "key"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.structures.K"
          kind: TYPE_VAR
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "get"
      fully_qualified_name: "werkzeug.datastructures.structures.CombinedMultiDict.get"
      return_annotation {
        pretty_printed_name: "Union[werkzeug.datastructures.structures.V,werkzeug.datastructures.structures.T]"
        kind: UNION
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.V"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.T"
          kind: TYPE_VAR
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.structures.CombinedMultiDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
          args {
            pretty_printed_name: "werkzeug.datastructures.structures.K"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "werkzeug.datastructures.structures.V"
            kind: TYPE_VAR
          }
          fully_qualified_name: "werkzeug.datastructures.structures.CombinedMultiDict"
        }
      }
      parameters {
        name: "key"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.structures.K"
          kind: TYPE_VAR
        }
      }
      parameters {
        name: "default"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[werkzeug.datastructures.structures.V,werkzeug.datastructures.structures.T]"
          kind: UNION
          args {
            pretty_printed_name: "werkzeug.datastructures.structures.V"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "werkzeug.datastructures.structures.T"
            kind: TYPE_VAR
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "get"
      fully_qualified_name: "werkzeug.datastructures.structures.CombinedMultiDict.get"
      return_annotation {
        pretty_printed_name: "Union[werkzeug.datastructures.structures.T,None]"
        kind: UNION
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.T"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.structures.CombinedMultiDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
          args {
            pretty_printed_name: "werkzeug.datastructures.structures.K"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "werkzeug.datastructures.structures.V"
            kind: TYPE_VAR
          }
          fully_qualified_name: "werkzeug.datastructures.structures.CombinedMultiDict"
        }
      }
      parameters {
        name: "key"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.structures.K"
          kind: TYPE_VAR
        }
      }
      parameters {
        name: "default"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[werkzeug.datastructures.structures.T,None]"
          kind: UNION
          args {
            pretty_printed_name: "werkzeug.datastructures.structures.T"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      parameters {
        name: "type"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
  }
  overloaded_methods {
    name: "getlist"
    fullname: "werkzeug.datastructures.structures.CombinedMultiDict.getlist"
    definitions {
      name: "getlist"
      fully_qualified_name: "werkzeug.datastructures.structures.CombinedMultiDict.getlist"
      return_annotation {
        pretty_printed_name: "builtins.list[werkzeug.datastructures.structures.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.list"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.structures.CombinedMultiDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
          args {
            pretty_printed_name: "werkzeug.datastructures.structures.K"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "werkzeug.datastructures.structures.V"
            kind: TYPE_VAR
          }
          fully_qualified_name: "werkzeug.datastructures.structures.CombinedMultiDict"
        }
      }
      parameters {
        name: "key"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.structures.K"
          kind: TYPE_VAR
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "getlist"
      fully_qualified_name: "werkzeug.datastructures.structures.CombinedMultiDict.getlist"
      return_annotation {
        pretty_printed_name: "builtins.list[werkzeug.datastructures.structures.T]"
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.list"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.structures.CombinedMultiDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
          args {
            pretty_printed_name: "werkzeug.datastructures.structures.K"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "werkzeug.datastructures.structures.V"
            kind: TYPE_VAR
          }
          fully_qualified_name: "werkzeug.datastructures.structures.CombinedMultiDict"
        }
      }
      parameters {
        name: "key"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.structures.K"
          kind: TYPE_VAR
        }
      }
      parameters {
        name: "type"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
  }
  overloaded_methods {
    name: "to_dict"
    fullname: "werkzeug.datastructures.structures.CombinedMultiDict.to_dict"
    definitions {
      name: "to_dict"
      fully_qualified_name: "werkzeug.datastructures.structures.CombinedMultiDict.to_dict"
      return_annotation {
        pretty_printed_name: "builtins.dict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.K"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.dict"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.structures.CombinedMultiDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
          args {
            pretty_printed_name: "werkzeug.datastructures.structures.K"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "werkzeug.datastructures.structures.V"
            kind: TYPE_VAR
          }
          fully_qualified_name: "werkzeug.datastructures.structures.CombinedMultiDict"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "to_dict"
      fully_qualified_name: "werkzeug.datastructures.structures.CombinedMultiDict.to_dict"
      return_annotation {
        pretty_printed_name: "builtins.dict[werkzeug.datastructures.structures.K,builtins.list[werkzeug.datastructures.structures.V]]"
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.K"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "builtins.list[werkzeug.datastructures.structures.V]"
          args {
            pretty_printed_name: "werkzeug.datastructures.structures.V"
            kind: TYPE_VAR
          }
          fully_qualified_name: "builtins.list"
        }
        fully_qualified_name: "builtins.dict"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.structures.CombinedMultiDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
          args {
            pretty_printed_name: "werkzeug.datastructures.structures.K"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "werkzeug.datastructures.structures.V"
            kind: TYPE_VAR
          }
          fully_qualified_name: "werkzeug.datastructures.structures.CombinedMultiDict"
        }
      }
      parameters {
        name: "flat"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Literal[builtins.bool]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.bool"
            fully_qualified_name: "builtins.bool"
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
  }
  is_generic: true
  attributes {
    name: "dicts"
    fully_qualified_name: "werkzeug.datastructures.structures.CombinedMultiDict.dicts"
    type_annotation {
      pretty_printed_name: "builtins.list[werkzeug.datastructures.structures.MultiDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]]"
      args {
        pretty_printed_name: "werkzeug.datastructures.structures.MultiDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.K"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "werkzeug.datastructures.structures.MultiDict"
      }
      fully_qualified_name: "builtins.list"
    }
  }
}
classes {
  name: "HeaderSet"
  fully_qualified_name: "werkzeug.datastructures.structures.HeaderSet"
  super_classes: "builtins.set"
  methods {
    name: "__init__"
    fully_qualified_name: "werkzeug.datastructures.structures.HeaderSet.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.HeaderSet"
        fully_qualified_name: "werkzeug.datastructures.structures.HeaderSet"
      }
    }
    parameters {
      name: "headers"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.Iterable[builtins.str],None]"
        kind: UNION
        args {
          pretty_printed_name: "typing.Iterable[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "typing.Iterable"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "on_update"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[CallableType[builtins.function],None]"
        kind: UNION
        args {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "add"
    fully_qualified_name: "werkzeug.datastructures.structures.HeaderSet.add"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.HeaderSet"
        fully_qualified_name: "werkzeug.datastructures.structures.HeaderSet"
      }
    }
    parameters {
      name: "header"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  methods {
    name: "remove"
    fully_qualified_name: "werkzeug.datastructures.structures.HeaderSet.remove"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.HeaderSet"
        fully_qualified_name: "werkzeug.datastructures.structures.HeaderSet"
      }
    }
    parameters {
      name: "header"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  methods {
    name: "update"
    fully_qualified_name: "werkzeug.datastructures.structures.HeaderSet.update"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.HeaderSet"
        fully_qualified_name: "werkzeug.datastructures.structures.HeaderSet"
      }
    }
    parameters {
      name: "iterable"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
  }
  methods {
    name: "discard"
    fully_qualified_name: "werkzeug.datastructures.structures.HeaderSet.discard"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.HeaderSet"
        fully_qualified_name: "werkzeug.datastructures.structures.HeaderSet"
      }
    }
    parameters {
      name: "header"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  methods {
    name: "find"
    fully_qualified_name: "werkzeug.datastructures.structures.HeaderSet.find"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.HeaderSet"
        fully_qualified_name: "werkzeug.datastructures.structures.HeaderSet"
      }
    }
    parameters {
      name: "header"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  methods {
    name: "index"
    fully_qualified_name: "werkzeug.datastructures.structures.HeaderSet.index"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.HeaderSet"
        fully_qualified_name: "werkzeug.datastructures.structures.HeaderSet"
      }
    }
    parameters {
      name: "header"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  methods {
    name: "clear"
    fully_qualified_name: "werkzeug.datastructures.structures.HeaderSet.clear"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.HeaderSet"
        fully_qualified_name: "werkzeug.datastructures.structures.HeaderSet"
      }
    }
  }
  methods {
    name: "as_set"
    fully_qualified_name: "werkzeug.datastructures.structures.HeaderSet.as_set"
    return_annotation {
      pretty_printed_name: "builtins.set[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "builtins.set"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.HeaderSet"
        fully_qualified_name: "werkzeug.datastructures.structures.HeaderSet"
      }
    }
    parameters {
      name: "preserve_casing"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
  }
  methods {
    name: "to_header"
    fully_qualified_name: "werkzeug.datastructures.structures.HeaderSet.to_header"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.HeaderSet"
        fully_qualified_name: "werkzeug.datastructures.structures.HeaderSet"
      }
    }
  }
  methods {
    name: "__getitem__"
    fully_qualified_name: "werkzeug.datastructures.structures.HeaderSet.__getitem__"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.HeaderSet"
        fully_qualified_name: "werkzeug.datastructures.structures.HeaderSet"
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
  }
  methods {
    name: "__delitem__"
    fully_qualified_name: "werkzeug.datastructures.structures.HeaderSet.__delitem__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.HeaderSet"
        fully_qualified_name: "werkzeug.datastructures.structures.HeaderSet"
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
  }
  methods {
    name: "__setitem__"
    fully_qualified_name: "werkzeug.datastructures.structures.HeaderSet.__setitem__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.HeaderSet"
        fully_qualified_name: "werkzeug.datastructures.structures.HeaderSet"
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  methods {
    name: "__contains__"
    fully_qualified_name: "werkzeug.datastructures.structures.HeaderSet.__contains__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.HeaderSet"
        fully_qualified_name: "werkzeug.datastructures.structures.HeaderSet"
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  methods {
    name: "__len__"
    fully_qualified_name: "werkzeug.datastructures.structures.HeaderSet.__len__"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.HeaderSet"
        fully_qualified_name: "werkzeug.datastructures.structures.HeaderSet"
      }
    }
  }
  methods {
    name: "__iter__"
    fully_qualified_name: "werkzeug.datastructures.structures.HeaderSet.__iter__"
    return_annotation {
      pretty_printed_name: "typing.Iterator[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.HeaderSet"
        fully_qualified_name: "werkzeug.datastructures.structures.HeaderSet"
      }
    }
  }
  attributes {
    name: "_headers"
    fully_qualified_name: "werkzeug.datastructures.structures.HeaderSet._headers"
    type_annotation {
      pretty_printed_name: "builtins.list[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "builtins.list"
    }
  }
  attributes {
    name: "_set"
    fully_qualified_name: "werkzeug.datastructures.structures.HeaderSet._set"
    type_annotation {
      pretty_printed_name: "builtins.set[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "builtins.set"
    }
  }
  attributes {
    name: "on_update"
    fully_qualified_name: "werkzeug.datastructures.structures.HeaderSet.on_update"
    type_annotation {
      pretty_printed_name: "Union[CallableType[builtins.function],None]"
      kind: UNION
      args {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
}
classes {
  name: "ImmutableDict"
  fully_qualified_name: "werkzeug.datastructures.structures.ImmutableDict"
  super_classes: "werkzeug.datastructures.mixins.ImmutableDictMixin"
  super_classes: "builtins.dict"
  methods {
    name: "copy"
    fully_qualified_name: "werkzeug.datastructures.structures.ImmutableDict.copy"
    return_annotation {
      pretty_printed_name: "builtins.dict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
      args {
        pretty_printed_name: "werkzeug.datastructures.structures.K"
        kind: TYPE_VAR
      }
      args {
        pretty_printed_name: "werkzeug.datastructures.structures.V"
        kind: TYPE_VAR
      }
      fully_qualified_name: "builtins.dict"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.ImmutableDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.K"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "werkzeug.datastructures.structures.ImmutableDict"
      }
    }
  }
  methods {
    name: "__copy__"
    fully_qualified_name: "werkzeug.datastructures.structures.ImmutableDict.__copy__"
    return_annotation {
      pretty_printed_name: "werkzeug.datastructures.structures.ImmutableDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
      args {
        pretty_printed_name: "werkzeug.datastructures.structures.K"
        kind: TYPE_VAR
      }
      args {
        pretty_printed_name: "werkzeug.datastructures.structures.V"
        kind: TYPE_VAR
      }
      fully_qualified_name: "werkzeug.datastructures.structures.ImmutableDict"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.ImmutableDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.K"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "werkzeug.datastructures.structures.ImmutableDict"
      }
    }
  }
  is_generic: true
}
classes {
  name: "ImmutableList"
  fully_qualified_name: "werkzeug.datastructures.structures.ImmutableList"
  super_classes: "werkzeug.datastructures.mixins.ImmutableListMixin"
  is_generic: true
}
classes {
  name: "ImmutableMultiDict"
  fully_qualified_name: "werkzeug.datastructures.structures.ImmutableMultiDict"
  super_classes: "werkzeug.datastructures.mixins.ImmutableMultiDictMixin"
  super_classes: "werkzeug.datastructures.structures.MultiDict"
  methods {
    name: "copy"
    fully_qualified_name: "werkzeug.datastructures.structures.ImmutableMultiDict.copy"
    return_annotation {
      pretty_printed_name: "werkzeug.datastructures.structures.MultiDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
      args {
        pretty_printed_name: "werkzeug.datastructures.structures.K"
        kind: TYPE_VAR
      }
      args {
        pretty_printed_name: "werkzeug.datastructures.structures.V"
        kind: TYPE_VAR
      }
      fully_qualified_name: "werkzeug.datastructures.structures.MultiDict"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.ImmutableMultiDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.K"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "werkzeug.datastructures.structures.ImmutableMultiDict"
      }
    }
  }
  methods {
    name: "__copy__"
    fully_qualified_name: "werkzeug.datastructures.structures.ImmutableMultiDict.__copy__"
    return_annotation {
      pretty_printed_name: "werkzeug.datastructures.structures.ImmutableMultiDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
      args {
        pretty_printed_name: "werkzeug.datastructures.structures.K"
        kind: TYPE_VAR
      }
      args {
        pretty_printed_name: "werkzeug.datastructures.structures.V"
        kind: TYPE_VAR
      }
      fully_qualified_name: "werkzeug.datastructures.structures.ImmutableMultiDict"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.ImmutableMultiDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.K"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "werkzeug.datastructures.structures.ImmutableMultiDict"
      }
    }
  }
  is_generic: true
}
classes {
  name: "ImmutableOrderedMultiDict"
  fully_qualified_name: "werkzeug.datastructures.structures.ImmutableOrderedMultiDict"
  super_classes: "werkzeug.datastructures.mixins.ImmutableMultiDictMixin"
  super_classes: "werkzeug.datastructures.structures.OrderedMultiDict"
  methods {
    name: "_iter_hashitems"
    fully_qualified_name: "werkzeug.datastructures.structures.ImmutableOrderedMultiDict._iter_hashitems"
    return_annotation {
      pretty_printed_name: "typing.Iterator[Tuple[builtins.int,Tuple[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]]]"
      args {
        pretty_printed_name: "Tuple[builtins.int,Tuple[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "Tuple[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
          kind: TUPLE
          args {
            pretty_printed_name: "werkzeug.datastructures.structures.K"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "werkzeug.datastructures.structures.V"
            kind: TYPE_VAR
          }
        }
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.ImmutableOrderedMultiDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.K"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "werkzeug.datastructures.structures.ImmutableOrderedMultiDict"
      }
    }
  }
  methods {
    name: "copy"
    fully_qualified_name: "werkzeug.datastructures.structures.ImmutableOrderedMultiDict.copy"
    return_annotation {
      pretty_printed_name: "werkzeug.datastructures.structures.OrderedMultiDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
      args {
        pretty_printed_name: "werkzeug.datastructures.structures.K"
        kind: TYPE_VAR
      }
      args {
        pretty_printed_name: "werkzeug.datastructures.structures.V"
        kind: TYPE_VAR
      }
      fully_qualified_name: "werkzeug.datastructures.structures.OrderedMultiDict"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.ImmutableOrderedMultiDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.K"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "werkzeug.datastructures.structures.ImmutableOrderedMultiDict"
      }
    }
  }
  methods {
    name: "__copy__"
    fully_qualified_name: "werkzeug.datastructures.structures.ImmutableOrderedMultiDict.__copy__"
    return_annotation {
      pretty_printed_name: "werkzeug.datastructures.structures.ImmutableOrderedMultiDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
      args {
        pretty_printed_name: "werkzeug.datastructures.structures.K"
        kind: TYPE_VAR
      }
      args {
        pretty_printed_name: "werkzeug.datastructures.structures.V"
        kind: TYPE_VAR
      }
      fully_qualified_name: "werkzeug.datastructures.structures.ImmutableOrderedMultiDict"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.ImmutableOrderedMultiDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.K"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "werkzeug.datastructures.structures.ImmutableOrderedMultiDict"
      }
    }
  }
  is_generic: true
}
classes {
  name: "ImmutableTypeConversionDict"
  fully_qualified_name: "werkzeug.datastructures.structures.ImmutableTypeConversionDict"
  super_classes: "werkzeug.datastructures.mixins.ImmutableDictMixin"
  super_classes: "werkzeug.datastructures.structures.TypeConversionDict"
  methods {
    name: "copy"
    fully_qualified_name: "werkzeug.datastructures.structures.ImmutableTypeConversionDict.copy"
    return_annotation {
      pretty_printed_name: "werkzeug.datastructures.structures.TypeConversionDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
      args {
        pretty_printed_name: "werkzeug.datastructures.structures.K"
        kind: TYPE_VAR
      }
      args {
        pretty_printed_name: "werkzeug.datastructures.structures.V"
        kind: TYPE_VAR
      }
      fully_qualified_name: "werkzeug.datastructures.structures.TypeConversionDict"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.ImmutableTypeConversionDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.K"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "werkzeug.datastructures.structures.ImmutableTypeConversionDict"
      }
    }
  }
  methods {
    name: "__copy__"
    fully_qualified_name: "werkzeug.datastructures.structures.ImmutableTypeConversionDict.__copy__"
    return_annotation {
      pretty_printed_name: "werkzeug.datastructures.structures.ImmutableTypeConversionDict[Any,Any]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "werkzeug.datastructures.structures.ImmutableTypeConversionDict"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.ImmutableTypeConversionDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.K"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "werkzeug.datastructures.structures.ImmutableTypeConversionDict"
      }
    }
  }
  is_generic: true
}
classes {
  name: "MultiDict"
  fully_qualified_name: "werkzeug.datastructures.structures.MultiDict"
  super_classes: "werkzeug.datastructures.structures.TypeConversionDict"
  methods {
    name: "__init__"
    fully_qualified_name: "werkzeug.datastructures.structures.MultiDict.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.MultiDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.K"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "werkzeug.datastructures.structures.MultiDict"
      }
    }
    parameters {
      name: "mapping"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.Mapping[werkzeug.datastructures.structures.K,Union[typing.Iterable[werkzeug.datastructures.structures.V],werkzeug.datastructures.structures.V]],typing.Iterable[Tuple[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]],None]"
        kind: UNION
        args {
          pretty_printed_name: "typing.Mapping[werkzeug.datastructures.structures.K,Union[typing.Iterable[werkzeug.datastructures.structures.V],werkzeug.datastructures.structures.V]]"
          args {
            pretty_printed_name: "werkzeug.datastructures.structures.K"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "Union[typing.Iterable[werkzeug.datastructures.structures.V],werkzeug.datastructures.structures.V]"
            kind: UNION
            args {
              pretty_printed_name: "typing.Iterable[werkzeug.datastructures.structures.V]"
              args {
                pretty_printed_name: "werkzeug.datastructures.structures.V"
                kind: TYPE_VAR
              }
              fully_qualified_name: "typing.Iterable"
            }
            args {
              pretty_printed_name: "werkzeug.datastructures.structures.V"
              kind: TYPE_VAR
            }
          }
          fully_qualified_name: "typing.Mapping"
        }
        args {
          pretty_printed_name: "typing.Iterable[Tuple[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]]"
          args {
            pretty_printed_name: "Tuple[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
            kind: TUPLE
            args {
              pretty_printed_name: "werkzeug.datastructures.structures.K"
              kind: TYPE_VAR
            }
            args {
              pretty_printed_name: "werkzeug.datastructures.structures.V"
              kind: TYPE_VAR
            }
          }
          fully_qualified_name: "typing.Iterable"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "__getitem__"
    fully_qualified_name: "werkzeug.datastructures.structures.MultiDict.__getitem__"
    return_annotation {
      pretty_printed_name: "werkzeug.datastructures.structures.V"
      kind: TYPE_VAR
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.MultiDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.K"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "werkzeug.datastructures.structures.MultiDict"
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.K"
        kind: TYPE_VAR
      }
    }
  }
  methods {
    name: "__setitem__"
    fully_qualified_name: "werkzeug.datastructures.structures.MultiDict.__setitem__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.MultiDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.K"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "werkzeug.datastructures.structures.MultiDict"
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.K"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.V"
        kind: TYPE_VAR
      }
    }
  }
  methods {
    name: "add"
    fully_qualified_name: "werkzeug.datastructures.structures.MultiDict.add"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.MultiDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.K"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "werkzeug.datastructures.structures.MultiDict"
      }
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.K"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.V"
        kind: TYPE_VAR
      }
    }
  }
  methods {
    name: "setlist"
    fully_qualified_name: "werkzeug.datastructures.structures.MultiDict.setlist"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.MultiDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.K"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "werkzeug.datastructures.structures.MultiDict"
      }
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.K"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "new_list"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[werkzeug.datastructures.structures.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
  }
  methods {
    name: "setdefault"
    fully_qualified_name: "werkzeug.datastructures.structures.MultiDict.setdefault"
    return_annotation {
      pretty_printed_name: "werkzeug.datastructures.structures.V"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.MultiDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.K"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "werkzeug.datastructures.structures.MultiDict"
      }
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.K"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "default"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[werkzeug.datastructures.structures.V,None]"
        kind: UNION
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.V"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "setlistdefault"
    fully_qualified_name: "werkzeug.datastructures.structures.MultiDict.setlistdefault"
    return_annotation {
      pretty_printed_name: "builtins.list[werkzeug.datastructures.structures.V]"
      args {
        pretty_printed_name: "werkzeug.datastructures.structures.V"
        kind: TYPE_VAR
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.MultiDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.K"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "werkzeug.datastructures.structures.MultiDict"
      }
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.K"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "default_list"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.Iterable[werkzeug.datastructures.structures.V],None]"
        kind: UNION
        args {
          pretty_printed_name: "typing.Iterable[werkzeug.datastructures.structures.V]"
          args {
            pretty_printed_name: "werkzeug.datastructures.structures.V"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "items"
    fully_qualified_name: "werkzeug.datastructures.structures.MultiDict.items"
    return_annotation {
      pretty_printed_name: "typing.Iterator[Tuple[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]]"
      args {
        pretty_printed_name: "Tuple[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
        kind: TUPLE
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.K"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.V"
          kind: TYPE_VAR
        }
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.MultiDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.K"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "werkzeug.datastructures.structures.MultiDict"
      }
    }
    parameters {
      name: "multi"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
  }
  methods {
    name: "lists"
    fully_qualified_name: "werkzeug.datastructures.structures.MultiDict.lists"
    return_annotation {
      pretty_printed_name: "typing.Iterator[Tuple[werkzeug.datastructures.structures.K,builtins.list[werkzeug.datastructures.structures.V]]]"
      args {
        pretty_printed_name: "Tuple[werkzeug.datastructures.structures.K,builtins.list[werkzeug.datastructures.structures.V]]"
        kind: TUPLE
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.K"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "builtins.list[werkzeug.datastructures.structures.V]"
          args {
            pretty_printed_name: "werkzeug.datastructures.structures.V"
            kind: TYPE_VAR
          }
          fully_qualified_name: "builtins.list"
        }
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.MultiDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.K"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "werkzeug.datastructures.structures.MultiDict"
      }
    }
  }
  methods {
    name: "values"
    fully_qualified_name: "werkzeug.datastructures.structures.MultiDict.values"
    return_annotation {
      pretty_printed_name: "typing.Iterator[werkzeug.datastructures.structures.V]"
      args {
        pretty_printed_name: "werkzeug.datastructures.structures.V"
        kind: TYPE_VAR
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.MultiDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.K"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "werkzeug.datastructures.structures.MultiDict"
      }
    }
  }
  methods {
    name: "listvalues"
    fully_qualified_name: "werkzeug.datastructures.structures.MultiDict.listvalues"
    return_annotation {
      pretty_printed_name: "typing.Iterator[builtins.list[werkzeug.datastructures.structures.V]]"
      args {
        pretty_printed_name: "builtins.list[werkzeug.datastructures.structures.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.list"
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.MultiDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.K"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "werkzeug.datastructures.structures.MultiDict"
      }
    }
  }
  methods {
    name: "copy"
    fully_qualified_name: "werkzeug.datastructures.structures.MultiDict.copy"
    return_annotation {
      pretty_printed_name: "werkzeug.datastructures.structures.MultiDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
      args {
        pretty_printed_name: "werkzeug.datastructures.structures.K"
        kind: TYPE_VAR
      }
      args {
        pretty_printed_name: "werkzeug.datastructures.structures.V"
        kind: TYPE_VAR
      }
      fully_qualified_name: "werkzeug.datastructures.structures.MultiDict"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.MultiDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.K"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "werkzeug.datastructures.structures.MultiDict"
      }
    }
  }
  methods {
    name: "deepcopy"
    fully_qualified_name: "werkzeug.datastructures.structures.MultiDict.deepcopy"
    return_annotation {
      pretty_printed_name: "werkzeug.datastructures.structures.MultiDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
      args {
        pretty_printed_name: "werkzeug.datastructures.structures.K"
        kind: TYPE_VAR
      }
      args {
        pretty_printed_name: "werkzeug.datastructures.structures.V"
        kind: TYPE_VAR
      }
      fully_qualified_name: "werkzeug.datastructures.structures.MultiDict"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.MultiDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.K"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "werkzeug.datastructures.structures.MultiDict"
      }
    }
    parameters {
      name: "memo"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
  }
  methods {
    name: "update"
    fully_qualified_name: "werkzeug.datastructures.structures.MultiDict.update"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.MultiDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.K"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "werkzeug.datastructures.structures.MultiDict"
      }
    }
    parameters {
      name: "mapping"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.Mapping[werkzeug.datastructures.structures.K,Union[typing.Iterable[werkzeug.datastructures.structures.V],werkzeug.datastructures.structures.V]],typing.Iterable[Tuple[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]]]"
        kind: UNION
        args {
          pretty_printed_name: "typing.Mapping[werkzeug.datastructures.structures.K,Union[typing.Iterable[werkzeug.datastructures.structures.V],werkzeug.datastructures.structures.V]]"
          args {
            pretty_printed_name: "werkzeug.datastructures.structures.K"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "Union[typing.Iterable[werkzeug.datastructures.structures.V],werkzeug.datastructures.structures.V]"
            kind: UNION
            args {
              pretty_printed_name: "typing.Iterable[werkzeug.datastructures.structures.V]"
              args {
                pretty_printed_name: "werkzeug.datastructures.structures.V"
                kind: TYPE_VAR
              }
              fully_qualified_name: "typing.Iterable"
            }
            args {
              pretty_printed_name: "werkzeug.datastructures.structures.V"
              kind: TYPE_VAR
            }
          }
          fully_qualified_name: "typing.Mapping"
        }
        args {
          pretty_printed_name: "typing.Iterable[Tuple[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]]"
          args {
            pretty_printed_name: "Tuple[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
            kind: TUPLE
            args {
              pretty_printed_name: "werkzeug.datastructures.structures.K"
              kind: TYPE_VAR
            }
            args {
              pretty_printed_name: "werkzeug.datastructures.structures.V"
              kind: TYPE_VAR
            }
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
    }
  }
  methods {
    name: "popitem"
    fully_qualified_name: "werkzeug.datastructures.structures.MultiDict.popitem"
    return_annotation {
      pretty_printed_name: "Tuple[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
      kind: TUPLE
      args {
        pretty_printed_name: "werkzeug.datastructures.structures.K"
        kind: TYPE_VAR
      }
      args {
        pretty_printed_name: "werkzeug.datastructures.structures.V"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.MultiDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.K"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "werkzeug.datastructures.structures.MultiDict"
      }
    }
  }
  methods {
    name: "poplist"
    fully_qualified_name: "werkzeug.datastructures.structures.MultiDict.poplist"
    return_annotation {
      pretty_printed_name: "builtins.list[werkzeug.datastructures.structures.V]"
      args {
        pretty_printed_name: "werkzeug.datastructures.structures.V"
        kind: TYPE_VAR
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.MultiDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.K"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "werkzeug.datastructures.structures.MultiDict"
      }
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.K"
        kind: TYPE_VAR
      }
    }
  }
  methods {
    name: "popitemlist"
    fully_qualified_name: "werkzeug.datastructures.structures.MultiDict.popitemlist"
    return_annotation {
      pretty_printed_name: "Tuple[werkzeug.datastructures.structures.K,builtins.list[werkzeug.datastructures.structures.V]]"
      kind: TUPLE
      args {
        pretty_printed_name: "werkzeug.datastructures.structures.K"
        kind: TYPE_VAR
      }
      args {
        pretty_printed_name: "builtins.list[werkzeug.datastructures.structures.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.list"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.MultiDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.K"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "werkzeug.datastructures.structures.MultiDict"
      }
    }
  }
  methods {
    name: "__copy__"
    fully_qualified_name: "werkzeug.datastructures.structures.MultiDict.__copy__"
    return_annotation {
      pretty_printed_name: "werkzeug.datastructures.structures.MultiDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
      args {
        pretty_printed_name: "werkzeug.datastructures.structures.K"
        kind: TYPE_VAR
      }
      args {
        pretty_printed_name: "werkzeug.datastructures.structures.V"
        kind: TYPE_VAR
      }
      fully_qualified_name: "werkzeug.datastructures.structures.MultiDict"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.MultiDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.K"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "werkzeug.datastructures.structures.MultiDict"
      }
    }
  }
  methods {
    name: "__deepcopy__"
    fully_qualified_name: "werkzeug.datastructures.structures.MultiDict.__deepcopy__"
    return_annotation {
      pretty_printed_name: "werkzeug.datastructures.structures.MultiDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
      args {
        pretty_printed_name: "werkzeug.datastructures.structures.K"
        kind: TYPE_VAR
      }
      args {
        pretty_printed_name: "werkzeug.datastructures.structures.V"
        kind: TYPE_VAR
      }
      fully_qualified_name: "werkzeug.datastructures.structures.MultiDict"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.MultiDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.K"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "werkzeug.datastructures.structures.MultiDict"
      }
    }
    parameters {
      name: "memo"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
  }
  overloaded_methods {
    name: "getlist"
    fullname: "werkzeug.datastructures.structures.MultiDict.getlist"
    definitions {
      name: "getlist"
      fully_qualified_name: "werkzeug.datastructures.structures.MultiDict.getlist"
      return_annotation {
        pretty_printed_name: "builtins.list[werkzeug.datastructures.structures.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.list"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.structures.MultiDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
          args {
            pretty_printed_name: "werkzeug.datastructures.structures.K"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "werkzeug.datastructures.structures.V"
            kind: TYPE_VAR
          }
          fully_qualified_name: "werkzeug.datastructures.structures.MultiDict"
        }
      }
      parameters {
        name: "key"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.structures.K"
          kind: TYPE_VAR
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "getlist"
      fully_qualified_name: "werkzeug.datastructures.structures.MultiDict.getlist"
      return_annotation {
        pretty_printed_name: "builtins.list[werkzeug.datastructures.structures.T]"
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.list"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.structures.MultiDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
          args {
            pretty_printed_name: "werkzeug.datastructures.structures.K"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "werkzeug.datastructures.structures.V"
            kind: TYPE_VAR
          }
          fully_qualified_name: "werkzeug.datastructures.structures.MultiDict"
        }
      }
      parameters {
        name: "key"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.structures.K"
          kind: TYPE_VAR
        }
      }
      parameters {
        name: "type"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
  }
  overloaded_methods {
    name: "to_dict"
    fullname: "werkzeug.datastructures.structures.MultiDict.to_dict"
    definitions {
      name: "to_dict"
      fully_qualified_name: "werkzeug.datastructures.structures.MultiDict.to_dict"
      return_annotation {
        pretty_printed_name: "builtins.dict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.K"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.dict"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.structures.MultiDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
          args {
            pretty_printed_name: "werkzeug.datastructures.structures.K"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "werkzeug.datastructures.structures.V"
            kind: TYPE_VAR
          }
          fully_qualified_name: "werkzeug.datastructures.structures.MultiDict"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "to_dict"
      fully_qualified_name: "werkzeug.datastructures.structures.MultiDict.to_dict"
      return_annotation {
        pretty_printed_name: "builtins.dict[werkzeug.datastructures.structures.K,builtins.list[werkzeug.datastructures.structures.V]]"
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.K"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "builtins.list[werkzeug.datastructures.structures.V]"
          args {
            pretty_printed_name: "werkzeug.datastructures.structures.V"
            kind: TYPE_VAR
          }
          fully_qualified_name: "builtins.list"
        }
        fully_qualified_name: "builtins.dict"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.structures.MultiDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
          args {
            pretty_printed_name: "werkzeug.datastructures.structures.K"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "werkzeug.datastructures.structures.V"
            kind: TYPE_VAR
          }
          fully_qualified_name: "werkzeug.datastructures.structures.MultiDict"
        }
      }
      parameters {
        name: "flat"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Literal[builtins.bool]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.bool"
            fully_qualified_name: "builtins.bool"
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
  }
  overloaded_methods {
    name: "pop"
    fullname: "werkzeug.datastructures.structures.MultiDict.pop"
    definitions {
      name: "pop"
      fully_qualified_name: "werkzeug.datastructures.structures.MultiDict.pop"
      return_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.V"
        kind: TYPE_VAR
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.structures.MultiDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
          args {
            pretty_printed_name: "werkzeug.datastructures.structures.K"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "werkzeug.datastructures.structures.V"
            kind: TYPE_VAR
          }
          fully_qualified_name: "werkzeug.datastructures.structures.MultiDict"
        }
      }
      parameters {
        name: "key"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.structures.K"
          kind: TYPE_VAR
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "pop"
      fully_qualified_name: "werkzeug.datastructures.structures.MultiDict.pop"
      return_annotation {
        pretty_printed_name: "Union[werkzeug.datastructures.structures.V,werkzeug.datastructures.structures.T]"
        kind: UNION
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.V"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.T"
          kind: TYPE_VAR
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.structures.MultiDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
          args {
            pretty_printed_name: "werkzeug.datastructures.structures.K"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "werkzeug.datastructures.structures.V"
            kind: TYPE_VAR
          }
          fully_qualified_name: "werkzeug.datastructures.structures.MultiDict"
        }
      }
      parameters {
        name: "key"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.structures.K"
          kind: TYPE_VAR
        }
      }
      parameters {
        name: "default"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[werkzeug.datastructures.structures.V,werkzeug.datastructures.structures.T]"
          kind: UNION
          args {
            pretty_printed_name: "werkzeug.datastructures.structures.V"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "werkzeug.datastructures.structures.T"
            kind: TYPE_VAR
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
  }
  is_generic: true
}
classes {
  name: "OrderedMultiDict"
  fully_qualified_name: "werkzeug.datastructures.structures.OrderedMultiDict"
  super_classes: "werkzeug.datastructures.structures.MultiDict"
  methods {
    name: "__init__"
    fully_qualified_name: "werkzeug.datastructures.structures.OrderedMultiDict.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.OrderedMultiDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.K"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "werkzeug.datastructures.structures.OrderedMultiDict"
      }
    }
    parameters {
      name: "mapping"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.Mapping[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V],None]"
        kind: UNION
        args {
          pretty_printed_name: "typing.Mapping[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
          args {
            pretty_printed_name: "werkzeug.datastructures.structures.K"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "werkzeug.datastructures.structures.V"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Mapping"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "__eq__"
    fully_qualified_name: "werkzeug.datastructures.structures.OrderedMultiDict.__eq__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.OrderedMultiDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.K"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "werkzeug.datastructures.structures.OrderedMultiDict"
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
  }
  methods {
    name: "__getitem__"
    fully_qualified_name: "werkzeug.datastructures.structures.OrderedMultiDict.__getitem__"
    return_annotation {
      pretty_printed_name: "werkzeug.datastructures.structures.V"
      kind: TYPE_VAR
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.OrderedMultiDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.K"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "werkzeug.datastructures.structures.OrderedMultiDict"
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.K"
        kind: TYPE_VAR
      }
    }
  }
  methods {
    name: "__setitem__"
    fully_qualified_name: "werkzeug.datastructures.structures.OrderedMultiDict.__setitem__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.OrderedMultiDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.K"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "werkzeug.datastructures.structures.OrderedMultiDict"
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.K"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.V"
        kind: TYPE_VAR
      }
    }
  }
  methods {
    name: "__delitem__"
    fully_qualified_name: "werkzeug.datastructures.structures.OrderedMultiDict.__delitem__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.OrderedMultiDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.K"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "werkzeug.datastructures.structures.OrderedMultiDict"
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.K"
        kind: TYPE_VAR
      }
    }
  }
  methods {
    name: "keys"
    fully_qualified_name: "werkzeug.datastructures.structures.OrderedMultiDict.keys"
    return_annotation {
      pretty_printed_name: "typing.Iterator[werkzeug.datastructures.structures.K]"
      args {
        pretty_printed_name: "werkzeug.datastructures.structures.K"
        kind: TYPE_VAR
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.OrderedMultiDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.K"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "werkzeug.datastructures.structures.OrderedMultiDict"
      }
    }
  }
  methods {
    name: "__iter__"
    fully_qualified_name: "werkzeug.datastructures.structures.OrderedMultiDict.__iter__"
    return_annotation {
      pretty_printed_name: "typing.Iterator[werkzeug.datastructures.structures.K]"
      args {
        pretty_printed_name: "werkzeug.datastructures.structures.K"
        kind: TYPE_VAR
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.OrderedMultiDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.K"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "werkzeug.datastructures.structures.OrderedMultiDict"
      }
    }
  }
  methods {
    name: "values"
    fully_qualified_name: "werkzeug.datastructures.structures.OrderedMultiDict.values"
    return_annotation {
      pretty_printed_name: "typing.Iterator[werkzeug.datastructures.structures.V]"
      args {
        pretty_printed_name: "werkzeug.datastructures.structures.V"
        kind: TYPE_VAR
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.OrderedMultiDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.K"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "werkzeug.datastructures.structures.OrderedMultiDict"
      }
    }
  }
  methods {
    name: "items"
    fully_qualified_name: "werkzeug.datastructures.structures.OrderedMultiDict.items"
    return_annotation {
      pretty_printed_name: "typing.Iterator[Tuple[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]]"
      args {
        pretty_printed_name: "Tuple[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
        kind: TUPLE
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.K"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.V"
          kind: TYPE_VAR
        }
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.OrderedMultiDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.K"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "werkzeug.datastructures.structures.OrderedMultiDict"
      }
    }
    parameters {
      name: "multi"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
  }
  methods {
    name: "lists"
    fully_qualified_name: "werkzeug.datastructures.structures.OrderedMultiDict.lists"
    return_annotation {
      pretty_printed_name: "typing.Iterator[Tuple[werkzeug.datastructures.structures.K,builtins.list[werkzeug.datastructures.structures.V]]]"
      args {
        pretty_printed_name: "Tuple[werkzeug.datastructures.structures.K,builtins.list[werkzeug.datastructures.structures.V]]"
        kind: TUPLE
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.K"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "builtins.list[werkzeug.datastructures.structures.V]"
          args {
            pretty_printed_name: "werkzeug.datastructures.structures.V"
            kind: TYPE_VAR
          }
          fully_qualified_name: "builtins.list"
        }
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.OrderedMultiDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.K"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "werkzeug.datastructures.structures.OrderedMultiDict"
      }
    }
  }
  methods {
    name: "listvalues"
    fully_qualified_name: "werkzeug.datastructures.structures.OrderedMultiDict.listvalues"
    return_annotation {
      pretty_printed_name: "typing.Iterator[builtins.list[werkzeug.datastructures.structures.V]]"
      args {
        pretty_printed_name: "builtins.list[werkzeug.datastructures.structures.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.list"
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.OrderedMultiDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.K"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "werkzeug.datastructures.structures.OrderedMultiDict"
      }
    }
  }
  methods {
    name: "add"
    fully_qualified_name: "werkzeug.datastructures.structures.OrderedMultiDict.add"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.OrderedMultiDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.K"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "werkzeug.datastructures.structures.OrderedMultiDict"
      }
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.K"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.V"
        kind: TYPE_VAR
      }
    }
  }
  methods {
    name: "setlist"
    fully_qualified_name: "werkzeug.datastructures.structures.OrderedMultiDict.setlist"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.OrderedMultiDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.K"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "werkzeug.datastructures.structures.OrderedMultiDict"
      }
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.K"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "new_list"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[werkzeug.datastructures.structures.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
  }
  methods {
    name: "setlistdefault"
    fully_qualified_name: "werkzeug.datastructures.structures.OrderedMultiDict.setlistdefault"
    return_annotation {
      pretty_printed_name: "builtins.list[werkzeug.datastructures.structures.V]"
      args {
        pretty_printed_name: "werkzeug.datastructures.structures.V"
        kind: TYPE_VAR
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.OrderedMultiDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.K"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "werkzeug.datastructures.structures.OrderedMultiDict"
      }
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.K"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "default_list"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.Iterable[werkzeug.datastructures.structures.V],None]"
        kind: UNION
        args {
          pretty_printed_name: "typing.Iterable[werkzeug.datastructures.structures.V]"
          args {
            pretty_printed_name: "werkzeug.datastructures.structures.V"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "update"
    fully_qualified_name: "werkzeug.datastructures.structures.OrderedMultiDict.update"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.OrderedMultiDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.K"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "werkzeug.datastructures.structures.OrderedMultiDict"
      }
    }
    parameters {
      name: "mapping"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.Mapping[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V],typing.Iterable[Tuple[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]]]"
        kind: UNION
        args {
          pretty_printed_name: "typing.Mapping[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
          args {
            pretty_printed_name: "werkzeug.datastructures.structures.K"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "werkzeug.datastructures.structures.V"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Mapping"
        }
        args {
          pretty_printed_name: "typing.Iterable[Tuple[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]]"
          args {
            pretty_printed_name: "Tuple[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
            kind: TUPLE
            args {
              pretty_printed_name: "werkzeug.datastructures.structures.K"
              kind: TYPE_VAR
            }
            args {
              pretty_printed_name: "werkzeug.datastructures.structures.V"
              kind: TYPE_VAR
            }
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
    }
  }
  methods {
    name: "poplist"
    fully_qualified_name: "werkzeug.datastructures.structures.OrderedMultiDict.poplist"
    return_annotation {
      pretty_printed_name: "builtins.list[werkzeug.datastructures.structures.V]"
      args {
        pretty_printed_name: "werkzeug.datastructures.structures.V"
        kind: TYPE_VAR
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.OrderedMultiDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.K"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "werkzeug.datastructures.structures.OrderedMultiDict"
      }
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.K"
        kind: TYPE_VAR
      }
    }
  }
  methods {
    name: "popitem"
    fully_qualified_name: "werkzeug.datastructures.structures.OrderedMultiDict.popitem"
    return_annotation {
      pretty_printed_name: "Tuple[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
      kind: TUPLE
      args {
        pretty_printed_name: "werkzeug.datastructures.structures.K"
        kind: TYPE_VAR
      }
      args {
        pretty_printed_name: "werkzeug.datastructures.structures.V"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.OrderedMultiDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.K"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "werkzeug.datastructures.structures.OrderedMultiDict"
      }
    }
  }
  methods {
    name: "popitemlist"
    fully_qualified_name: "werkzeug.datastructures.structures.OrderedMultiDict.popitemlist"
    return_annotation {
      pretty_printed_name: "Tuple[werkzeug.datastructures.structures.K,builtins.list[werkzeug.datastructures.structures.V]]"
      kind: TUPLE
      args {
        pretty_printed_name: "werkzeug.datastructures.structures.K"
        kind: TYPE_VAR
      }
      args {
        pretty_printed_name: "builtins.list[werkzeug.datastructures.structures.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.list"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.OrderedMultiDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.K"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "werkzeug.datastructures.structures.OrderedMultiDict"
      }
    }
  }
  overloaded_methods {
    name: "getlist"
    fullname: "werkzeug.datastructures.structures.OrderedMultiDict.getlist"
    definitions {
      name: "getlist"
      fully_qualified_name: "werkzeug.datastructures.structures.OrderedMultiDict.getlist"
      return_annotation {
        pretty_printed_name: "builtins.list[werkzeug.datastructures.structures.V]"
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.V"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.list"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.structures.OrderedMultiDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
          args {
            pretty_printed_name: "werkzeug.datastructures.structures.K"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "werkzeug.datastructures.structures.V"
            kind: TYPE_VAR
          }
          fully_qualified_name: "werkzeug.datastructures.structures.OrderedMultiDict"
        }
      }
      parameters {
        name: "key"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.structures.K"
          kind: TYPE_VAR
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "getlist"
      fully_qualified_name: "werkzeug.datastructures.structures.OrderedMultiDict.getlist"
      return_annotation {
        pretty_printed_name: "builtins.list[werkzeug.datastructures.structures.T]"
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.list"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.structures.OrderedMultiDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
          args {
            pretty_printed_name: "werkzeug.datastructures.structures.K"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "werkzeug.datastructures.structures.V"
            kind: TYPE_VAR
          }
          fully_qualified_name: "werkzeug.datastructures.structures.OrderedMultiDict"
        }
      }
      parameters {
        name: "key"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.structures.K"
          kind: TYPE_VAR
        }
      }
      parameters {
        name: "type"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
  }
  overloaded_methods {
    name: "pop"
    fullname: "werkzeug.datastructures.structures.OrderedMultiDict.pop"
    definitions {
      name: "pop"
      fully_qualified_name: "werkzeug.datastructures.structures.OrderedMultiDict.pop"
      return_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.V"
        kind: TYPE_VAR
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.structures.OrderedMultiDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
          args {
            pretty_printed_name: "werkzeug.datastructures.structures.K"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "werkzeug.datastructures.structures.V"
            kind: TYPE_VAR
          }
          fully_qualified_name: "werkzeug.datastructures.structures.OrderedMultiDict"
        }
      }
      parameters {
        name: "key"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.structures.K"
          kind: TYPE_VAR
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "pop"
      fully_qualified_name: "werkzeug.datastructures.structures.OrderedMultiDict.pop"
      return_annotation {
        pretty_printed_name: "Union[werkzeug.datastructures.structures.V,werkzeug.datastructures.structures.T]"
        kind: UNION
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.V"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.T"
          kind: TYPE_VAR
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.structures.OrderedMultiDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
          args {
            pretty_printed_name: "werkzeug.datastructures.structures.K"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "werkzeug.datastructures.structures.V"
            kind: TYPE_VAR
          }
          fully_qualified_name: "werkzeug.datastructures.structures.OrderedMultiDict"
        }
      }
      parameters {
        name: "key"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.structures.K"
          kind: TYPE_VAR
        }
      }
      parameters {
        name: "default"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[werkzeug.datastructures.structures.V,werkzeug.datastructures.structures.T]"
          kind: UNION
          args {
            pretty_printed_name: "werkzeug.datastructures.structures.V"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "werkzeug.datastructures.structures.T"
            kind: TYPE_VAR
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
  }
  is_generic: true
  attributes {
    name: "_first_bucket"
    fully_qualified_name: "werkzeug.datastructures.structures.OrderedMultiDict._first_bucket"
    type_annotation {
      pretty_printed_name: "Union[werkzeug.datastructures.structures._omd_bucket[Any,Any],None]"
      kind: UNION
      args {
        pretty_printed_name: "werkzeug.datastructures.structures._omd_bucket[Any,Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "werkzeug.datastructures.structures._omd_bucket"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  attributes {
    name: "_last_bucket"
    fully_qualified_name: "werkzeug.datastructures.structures.OrderedMultiDict._last_bucket"
    type_annotation {
      pretty_printed_name: "Union[werkzeug.datastructures.structures._omd_bucket[Any,Any],None]"
      kind: UNION
      args {
        pretty_printed_name: "werkzeug.datastructures.structures._omd_bucket[Any,Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "werkzeug.datastructures.structures._omd_bucket"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
}
classes {
  name: "TypeConversionDict"
  fully_qualified_name: "werkzeug.datastructures.structures.TypeConversionDict"
  super_classes: "builtins.dict"
  overloaded_methods {
    name: "get"
    fullname: "werkzeug.datastructures.structures.TypeConversionDict.get"
    definitions {
      name: "get"
      fully_qualified_name: "werkzeug.datastructures.structures.TypeConversionDict.get"
      return_annotation {
        pretty_printed_name: "Union[werkzeug.datastructures.structures.V,None]"
        kind: UNION
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.V"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.structures.TypeConversionDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
          args {
            pretty_printed_name: "werkzeug.datastructures.structures.K"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "werkzeug.datastructures.structures.V"
            kind: TYPE_VAR
          }
          fully_qualified_name: "werkzeug.datastructures.structures.TypeConversionDict"
        }
      }
      parameters {
        name: "key"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.structures.K"
          kind: TYPE_VAR
        }
      }
      parameters {
        name: "default"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      parameters {
        name: "type"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "get"
      fully_qualified_name: "werkzeug.datastructures.structures.TypeConversionDict.get"
      return_annotation {
        pretty_printed_name: "Union[werkzeug.datastructures.structures.D,werkzeug.datastructures.structures.V]"
        kind: UNION
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.D"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.V"
          kind: TYPE_VAR
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.structures.TypeConversionDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
          args {
            pretty_printed_name: "werkzeug.datastructures.structures.K"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "werkzeug.datastructures.structures.V"
            kind: TYPE_VAR
          }
          fully_qualified_name: "werkzeug.datastructures.structures.TypeConversionDict"
        }
      }
      parameters {
        name: "key"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.structures.K"
          kind: TYPE_VAR
        }
      }
      parameters {
        name: "default"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.structures.D"
          kind: TYPE_VAR
        }
      }
      parameters {
        name: "type"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "get"
      fully_qualified_name: "werkzeug.datastructures.structures.TypeConversionDict.get"
      return_annotation {
        pretty_printed_name: "Union[werkzeug.datastructures.structures.D,werkzeug.datastructures.structures.T]"
        kind: UNION
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.D"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.T"
          kind: TYPE_VAR
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.structures.TypeConversionDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
          args {
            pretty_printed_name: "werkzeug.datastructures.structures.K"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "werkzeug.datastructures.structures.V"
            kind: TYPE_VAR
          }
          fully_qualified_name: "werkzeug.datastructures.structures.TypeConversionDict"
        }
      }
      parameters {
        name: "key"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.structures.K"
          kind: TYPE_VAR
        }
      }
      parameters {
        name: "default"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.structures.D"
          kind: TYPE_VAR
        }
      }
      parameters {
        name: "type"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "get"
      fully_qualified_name: "werkzeug.datastructures.structures.TypeConversionDict.get"
      return_annotation {
        pretty_printed_name: "Union[werkzeug.datastructures.structures.T,None]"
        kind: UNION
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.T"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.structures.TypeConversionDict[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
          args {
            pretty_printed_name: "werkzeug.datastructures.structures.K"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "werkzeug.datastructures.structures.V"
            kind: TYPE_VAR
          }
          fully_qualified_name: "werkzeug.datastructures.structures.TypeConversionDict"
        }
      }
      parameters {
        name: "key"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.structures.K"
          kind: TYPE_VAR
        }
      }
      parameters {
        name: "type"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
  }
  is_generic: true
}
functions {
  name: "iter_multi_items"
  fully_qualified_name: "werkzeug.datastructures.structures.iter_multi_items"
  return_annotation {
    pretty_printed_name: "typing.Iterator[Tuple[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]]"
    args {
      pretty_printed_name: "Tuple[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
      kind: TUPLE
      args {
        pretty_printed_name: "werkzeug.datastructures.structures.K"
        kind: TYPE_VAR
      }
      args {
        pretty_printed_name: "werkzeug.datastructures.structures.V"
        kind: TYPE_VAR
      }
    }
    fully_qualified_name: "typing.Iterator"
  }
  parameters {
    name: "mapping"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[typing.Mapping[werkzeug.datastructures.structures.K,Union[werkzeug.datastructures.structures.V,typing.Iterable[werkzeug.datastructures.structures.V]]],typing.Iterable[Tuple[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]]]"
      kind: UNION
      args {
        pretty_printed_name: "typing.Mapping[werkzeug.datastructures.structures.K,Union[werkzeug.datastructures.structures.V,typing.Iterable[werkzeug.datastructures.structures.V]]]"
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.K"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "Union[werkzeug.datastructures.structures.V,typing.Iterable[werkzeug.datastructures.structures.V]]"
          kind: UNION
          args {
            pretty_printed_name: "werkzeug.datastructures.structures.V"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "typing.Iterable[werkzeug.datastructures.structures.V]"
            args {
              pretty_printed_name: "werkzeug.datastructures.structures.V"
              kind: TYPE_VAR
            }
            fully_qualified_name: "typing.Iterable"
          }
        }
        fully_qualified_name: "typing.Mapping"
      }
      args {
        pretty_printed_name: "typing.Iterable[Tuple[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]]"
        args {
          pretty_printed_name: "Tuple[werkzeug.datastructures.structures.K,werkzeug.datastructures.structures.V]"
          kind: TUPLE
          args {
            pretty_printed_name: "werkzeug.datastructures.structures.K"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "werkzeug.datastructures.structures.V"
            kind: TYPE_VAR
          }
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
  }
}
vars {
  name: "__path__"
  fully_qualified_name: "werkzeug.datastructures.__path__"
  type_annotation {
    pretty_printed_name: "builtins.list[builtins.str]"
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    fully_qualified_name: "builtins.list"
  }
}
vars {
  name: "__annotations__"
  fully_qualified_name: "werkzeug.datastructures.__annotations__"
  type_annotation {
    pretty_printed_name: "builtins.dict[builtins.str,Any]"
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    args {
      pretty_printed_name: "Any"
      kind: ANY
    }
    fully_qualified_name: "builtins.dict"
  }
}
