fully_qualified_name: "werkzeug.exceptions"
classes {
  name: "WSGIRequest"
  fully_qualified_name: "werkzeug.wrappers.request.Request"
  super_classes: "werkzeug.sansio.request.Request"
  methods {
    name: "__init__"
    fully_qualified_name: "werkzeug.wrappers.request.Request.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.wrappers.request.Request"
        fully_qualified_name: "werkzeug.wrappers.request.Request"
      }
    }
    parameters {
      name: "environ"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[builtins.dict[builtins.str,Any]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "builtins.dict[builtins.str,Any]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "builtins.dict"
        }
        fully_qualified_name: "_typeshed.wsgi.WSGIEnvironment"
      }
    }
    parameters {
      name: "populate_request"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    parameters {
      name: "shallow"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
  }
  methods {
    name: "from_values"
    fully_qualified_name: "werkzeug.wrappers.request.Request.from_values"
    return_annotation {
      pretty_printed_name: "werkzeug.wrappers.request.Request"
      fully_qualified_name: "werkzeug.wrappers.request.Request"
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[werkzeug.wrappers.request.Request]"
        kind: TYPE
        args {
          pretty_printed_name: "werkzeug.wrappers.request.Request"
          fully_qualified_name: "werkzeug.wrappers.request.Request"
        }
      }
    }
    parameters {
      name: "args"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "kwargs"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    has_decorators: true
    resolved_decorator_names: "classmethod"
    is_class_method: true
  }
  methods {
    name: "application"
    fully_qualified_name: "werkzeug.wrappers.request.Request.application"
    return_annotation {
      pretty_printed_name: "TypeAlias[CallableType[builtins.function]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
      fully_qualified_name: "_typeshed.wsgi.WSGIApplication"
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[werkzeug.wrappers.request.Request]"
        kind: TYPE
        args {
          pretty_printed_name: "werkzeug.wrappers.request.Request"
          fully_qualified_name: "werkzeug.wrappers.request.Request"
        }
      }
    }
    parameters {
      name: "f"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "classmethod"
    is_class_method: true
  }
  methods {
    name: "_get_file_stream"
    fully_qualified_name: "werkzeug.wrappers.request.Request._get_file_stream"
    return_annotation {
      pretty_printed_name: "typing.IO[builtins.bytes]"
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
      fully_qualified_name: "typing.IO"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.wrappers.request.Request"
        fully_qualified_name: "werkzeug.wrappers.request.Request"
      }
    }
    parameters {
      name: "total_content_length"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "content_type"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "filename"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "content_length"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "want_form_data_parsed"
    fully_qualified_name: "werkzeug.wrappers.request.Request.want_form_data_parsed"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.wrappers.request.Request"
        fully_qualified_name: "werkzeug.wrappers.request.Request"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "make_form_data_parser"
    fully_qualified_name: "werkzeug.wrappers.request.Request.make_form_data_parser"
    return_annotation {
      pretty_printed_name: "werkzeug.formparser.FormDataParser"
      fully_qualified_name: "werkzeug.formparser.FormDataParser"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.wrappers.request.Request"
        fully_qualified_name: "werkzeug.wrappers.request.Request"
      }
    }
  }
  methods {
    name: "_load_form_data"
    fully_qualified_name: "werkzeug.wrappers.request.Request._load_form_data"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.wrappers.request.Request"
        fully_qualified_name: "werkzeug.wrappers.request.Request"
      }
    }
  }
  methods {
    name: "_get_stream_for_parsing"
    fully_qualified_name: "werkzeug.wrappers.request.Request._get_stream_for_parsing"
    return_annotation {
      pretty_printed_name: "typing.IO[builtins.bytes]"
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
      fully_qualified_name: "typing.IO"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.wrappers.request.Request"
        fully_qualified_name: "werkzeug.wrappers.request.Request"
      }
    }
  }
  methods {
    name: "close"
    fully_qualified_name: "werkzeug.wrappers.request.Request.close"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.wrappers.request.Request"
        fully_qualified_name: "werkzeug.wrappers.request.Request"
      }
    }
  }
  methods {
    name: "__enter__"
    fully_qualified_name: "werkzeug.wrappers.request.Request.__enter__"
    return_annotation {
      pretty_printed_name: "werkzeug.wrappers.request.Request"
      fully_qualified_name: "werkzeug.wrappers.request.Request"
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "werkzeug.wrappers.request.Request"
        fully_qualified_name: "werkzeug.wrappers.request.Request"
      }
    }
  }
  methods {
    name: "__exit__"
    fully_qualified_name: "werkzeug.wrappers.request.Request.__exit__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "werkzeug.wrappers.request.Request"
        fully_qualified_name: "werkzeug.wrappers.request.Request"
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
  }
  methods {
    name: "stream"
    fully_qualified_name: "werkzeug.wrappers.request.Request.stream"
    return_annotation {
      pretty_printed_name: "typing.IO[builtins.bytes]"
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
      fully_qualified_name: "typing.IO"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.wrappers.request.Request"
        fully_qualified_name: "werkzeug.wrappers.request.Request"
      }
    }
    has_decorators: true
    resolved_decorator_names: "cached_property"
  }
  methods {
    name: "data"
    fully_qualified_name: "werkzeug.wrappers.request.Request.data"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.wrappers.request.Request"
        fully_qualified_name: "werkzeug.wrappers.request.Request"
      }
    }
    has_decorators: true
    resolved_decorator_names: "cached_property"
  }
  methods {
    name: "form"
    fully_qualified_name: "werkzeug.wrappers.request.Request.form"
    return_annotation {
      pretty_printed_name: "werkzeug.datastructures.structures.ImmutableMultiDict[builtins.str,builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "werkzeug.datastructures.structures.ImmutableMultiDict"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.wrappers.request.Request"
        fully_qualified_name: "werkzeug.wrappers.request.Request"
      }
    }
    has_decorators: true
    resolved_decorator_names: "cached_property"
  }
  methods {
    name: "values"
    fully_qualified_name: "werkzeug.wrappers.request.Request.values"
    return_annotation {
      pretty_printed_name: "werkzeug.datastructures.structures.CombinedMultiDict[builtins.str,builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "werkzeug.datastructures.structures.CombinedMultiDict"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.wrappers.request.Request"
        fully_qualified_name: "werkzeug.wrappers.request.Request"
      }
    }
    has_decorators: true
    resolved_decorator_names: "cached_property"
  }
  methods {
    name: "files"
    fully_qualified_name: "werkzeug.wrappers.request.Request.files"
    return_annotation {
      pretty_printed_name: "werkzeug.datastructures.structures.ImmutableMultiDict[builtins.str,werkzeug.datastructures.file_storage.FileStorage]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "werkzeug.datastructures.file_storage.FileStorage"
        fully_qualified_name: "werkzeug.datastructures.file_storage.FileStorage"
      }
      fully_qualified_name: "werkzeug.datastructures.structures.ImmutableMultiDict"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.wrappers.request.Request"
        fully_qualified_name: "werkzeug.wrappers.request.Request"
      }
    }
    has_decorators: true
    resolved_decorator_names: "cached_property"
  }
  methods {
    name: "script_root"
    fully_qualified_name: "werkzeug.wrappers.request.Request.script_root"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.wrappers.request.Request"
        fully_qualified_name: "werkzeug.wrappers.request.Request"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "url_root"
    fully_qualified_name: "werkzeug.wrappers.request.Request.url_root"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.wrappers.request.Request"
        fully_qualified_name: "werkzeug.wrappers.request.Request"
      }
    }
    has_decorators: true
    resolved_decorator_names: "cached_property"
  }
  methods {
    name: "json"
    fully_qualified_name: "werkzeug.wrappers.request.Request.json"
    return_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.wrappers.request.Request"
        fully_qualified_name: "werkzeug.wrappers.request.Request"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "on_json_loading_failed"
    fully_qualified_name: "werkzeug.wrappers.request.Request.on_json_loading_failed"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.wrappers.request.Request"
        fully_qualified_name: "werkzeug.wrappers.request.Request"
      }
    }
    parameters {
      name: "e"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.ValueError,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.ValueError"
          fully_qualified_name: "builtins.ValueError"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  overloaded_methods {
    name: "get_data"
    fullname: "werkzeug.wrappers.request.Request.get_data"
    definitions {
      name: "get_data"
      fully_qualified_name: "werkzeug.wrappers.request.Request.get_data"
      return_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.wrappers.request.Request"
          fully_qualified_name: "werkzeug.wrappers.request.Request"
        }
      }
      parameters {
        name: "cache"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
      }
      parameters {
        name: "as_text"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Literal[builtins.bool]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.bool"
            fully_qualified_name: "builtins.bool"
          }
        }
      }
      parameters {
        name: "parse_form_data"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
      }
      has_decorators: true
      resolved_decorator_names: "t.overload"
      is_overload: true
    }
    definitions {
      name: "get_data"
      fully_qualified_name: "werkzeug.wrappers.request.Request.get_data"
      return_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.wrappers.request.Request"
          fully_qualified_name: "werkzeug.wrappers.request.Request"
        }
      }
      parameters {
        name: "cache"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
      }
      parameters {
        name: "as_text"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Literal[builtins.bool]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.bool"
            fully_qualified_name: "builtins.bool"
          }
        }
      }
      parameters {
        name: "parse_form_data"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
      }
      has_decorators: true
      resolved_decorator_names: "t.overload"
      is_overload: true
    }
  }
  overloaded_methods {
    name: "get_json"
    fullname: "werkzeug.wrappers.request.Request.get_json"
    definitions {
      name: "get_json"
      fully_qualified_name: "werkzeug.wrappers.request.Request.get_json"
      return_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.wrappers.request.Request"
          fully_qualified_name: "werkzeug.wrappers.request.Request"
        }
      }
      parameters {
        name: "force"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
      }
      parameters {
        name: "silent"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Literal[builtins.bool]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.bool"
            fully_qualified_name: "builtins.bool"
          }
        }
      }
      parameters {
        name: "cache"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
      }
      has_decorators: true
      resolved_decorator_names: "t.overload"
      is_overload: true
    }
    definitions {
      name: "get_json"
      fully_qualified_name: "werkzeug.wrappers.request.Request.get_json"
      return_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.wrappers.request.Request"
          fully_qualified_name: "werkzeug.wrappers.request.Request"
        }
      }
      parameters {
        name: "force"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
      }
      parameters {
        name: "silent"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
      }
      parameters {
        name: "cache"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
      }
      has_decorators: true
      resolved_decorator_names: "t.overload"
      is_overload: true
    }
  }
  attributes {
    name: "max_content_length"
    fully_qualified_name: "werkzeug.wrappers.request.Request.max_content_length"
    type_annotation {
      pretty_printed_name: "Union[builtins.int,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  attributes {
    name: "max_form_memory_size"
    fully_qualified_name: "werkzeug.wrappers.request.Request.max_form_memory_size"
    type_annotation {
      pretty_printed_name: "Union[builtins.int,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  attributes {
    name: "max_form_parts"
    fully_qualified_name: "werkzeug.wrappers.request.Request.max_form_parts"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  attributes {
    name: "form_data_parser_class"
    fully_qualified_name: "werkzeug.wrappers.request.Request.form_data_parser_class"
    type_annotation {
      pretty_printed_name: "Type[werkzeug.formparser.FormDataParser]"
      kind: TYPE
      args {
        pretty_printed_name: "werkzeug.formparser.FormDataParser"
        fully_qualified_name: "werkzeug.formparser.FormDataParser"
      }
    }
  }
  attributes {
    name: "environ"
    fully_qualified_name: "werkzeug.wrappers.request.Request.environ"
    type_annotation {
      pretty_printed_name: "TypeAlias[builtins.dict[builtins.str,Any]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "builtins.dict[builtins.str,Any]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "builtins.dict"
      }
      fully_qualified_name: "_typeshed.wsgi.WSGIEnvironment"
    }
  }
  attributes {
    name: "shallow"
    fully_qualified_name: "werkzeug.wrappers.request.Request.shallow"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
  attributes {
    name: "input_stream"
    fully_qualified_name: "werkzeug.wrappers.request.Request.input_stream"
    type_annotation {
      pretty_printed_name: "werkzeug.utils.environ_property[typing.IO[builtins.bytes]]"
      args {
        pretty_printed_name: "typing.IO[builtins.bytes]"
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        fully_qualified_name: "typing.IO"
      }
      fully_qualified_name: "werkzeug.utils.environ_property"
    }
  }
  attributes {
    name: "remote_user"
    fully_qualified_name: "werkzeug.wrappers.request.Request.remote_user"
    type_annotation {
      pretty_printed_name: "werkzeug.utils.environ_property[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "werkzeug.utils.environ_property"
    }
  }
  attributes {
    name: "is_multithread"
    fully_qualified_name: "werkzeug.wrappers.request.Request.is_multithread"
    type_annotation {
      pretty_printed_name: "werkzeug.utils.environ_property[builtins.bool]"
      args {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      fully_qualified_name: "werkzeug.utils.environ_property"
    }
  }
  attributes {
    name: "is_multiprocess"
    fully_qualified_name: "werkzeug.wrappers.request.Request.is_multiprocess"
    type_annotation {
      pretty_printed_name: "werkzeug.utils.environ_property[builtins.bool]"
      args {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      fully_qualified_name: "werkzeug.utils.environ_property"
    }
  }
  attributes {
    name: "is_run_once"
    fully_qualified_name: "werkzeug.wrappers.request.Request.is_run_once"
    type_annotation {
      pretty_printed_name: "werkzeug.utils.environ_property[builtins.bool]"
      args {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      fully_qualified_name: "werkzeug.utils.environ_property"
    }
  }
  attributes {
    name: "_cached_json"
    fully_qualified_name: "werkzeug.wrappers.request.Request._cached_json"
    type_annotation {
      pretty_printed_name: "Tuple[Any,Any]"
      kind: TUPLE
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
  }
  attributes {
    name: "_cached_data"
    fully_qualified_name: "werkzeug.wrappers.request.Request._cached_data"
    type_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
  }
}
classes {
  name: "WSGIResponse"
  fully_qualified_name: "werkzeug.wrappers.response.Response"
  super_classes: "werkzeug.sansio.response.Response"
  methods {
    name: "__init__"
    fully_qualified_name: "werkzeug.wrappers.response.Response.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.wrappers.response.Response"
        fully_qualified_name: "werkzeug.wrappers.response.Response"
      }
    }
    parameters {
      name: "response"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.Iterable[builtins.bytes],builtins.bytes,typing.Iterable[builtins.str],builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "typing.Iterable[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "typing.Iterable"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "typing.Iterable[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "typing.Iterable"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "status"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,builtins.str,http.HTTPStatus,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "http.HTTPStatus"
          fully_qualified_name: "http.HTTPStatus"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "headers"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.Mapping[builtins.str,Union[builtins.str,typing.Iterable[builtins.str]]],typing.Iterable[Tuple[builtins.str,builtins.str]],None]"
        kind: UNION
        args {
          pretty_printed_name: "typing.Mapping[builtins.str,Union[builtins.str,typing.Iterable[builtins.str]]]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "Union[builtins.str,typing.Iterable[builtins.str]]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "typing.Iterable[builtins.str]"
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              fully_qualified_name: "typing.Iterable"
            }
          }
          fully_qualified_name: "typing.Mapping"
        }
        args {
          pretty_printed_name: "typing.Iterable[Tuple[builtins.str,builtins.str]]"
          args {
            pretty_printed_name: "Tuple[builtins.str,builtins.str]"
            kind: TUPLE
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          fully_qualified_name: "typing.Iterable"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "mimetype"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "content_type"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "direct_passthrough"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
  }
  methods {
    name: "call_on_close"
    fully_qualified_name: "werkzeug.wrappers.response.Response.call_on_close"
    return_annotation {
      pretty_printed_name: "CallableType[builtins.function]"
      kind: CALLABLE
      args {
        pretty_printed_name: "builtins.function"
        fully_qualified_name: "builtins.function"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.wrappers.response.Response"
        fully_qualified_name: "werkzeug.wrappers.response.Response"
      }
    }
    parameters {
      name: "func"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
  }
  methods {
    name: "__repr__"
    fully_qualified_name: "werkzeug.wrappers.response.Response.__repr__"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "werkzeug.wrappers.response.Response"
        fully_qualified_name: "werkzeug.wrappers.response.Response"
      }
    }
  }
  methods {
    name: "force_type"
    fully_qualified_name: "werkzeug.wrappers.response.Response.force_type"
    return_annotation {
      pretty_printed_name: "werkzeug.wrappers.response.Response"
      fully_qualified_name: "werkzeug.wrappers.response.Response"
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[werkzeug.wrappers.response.Response]"
        kind: TYPE
        args {
          pretty_printed_name: "werkzeug.wrappers.response.Response"
          fully_qualified_name: "werkzeug.wrappers.response.Response"
        }
      }
    }
    parameters {
      name: "response"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.wrappers.response.Response"
        fully_qualified_name: "werkzeug.wrappers.response.Response"
      }
    }
    parameters {
      name: "environ"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[TypeAlias[builtins.dict[builtins.str,Any]],None]"
        kind: UNION
        args {
          pretty_printed_name: "TypeAlias[builtins.dict[builtins.str,Any]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "builtins.dict[builtins.str,Any]"
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "Any"
              kind: ANY
            }
            fully_qualified_name: "builtins.dict"
          }
          fully_qualified_name: "_typeshed.wsgi.WSGIEnvironment"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "classmethod"
    is_class_method: true
  }
  methods {
    name: "from_app"
    fully_qualified_name: "werkzeug.wrappers.response.Response.from_app"
    return_annotation {
      pretty_printed_name: "werkzeug.wrappers.response.Response"
      fully_qualified_name: "werkzeug.wrappers.response.Response"
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[werkzeug.wrappers.response.Response]"
        kind: TYPE
        args {
          pretty_printed_name: "werkzeug.wrappers.response.Response"
          fully_qualified_name: "werkzeug.wrappers.response.Response"
        }
      }
    }
    parameters {
      name: "app"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[CallableType[builtins.function]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
        fully_qualified_name: "_typeshed.wsgi.WSGIApplication"
      }
    }
    parameters {
      name: "environ"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[builtins.dict[builtins.str,Any]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "builtins.dict[builtins.str,Any]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "builtins.dict"
        }
        fully_qualified_name: "_typeshed.wsgi.WSGIEnvironment"
      }
    }
    parameters {
      name: "buffered"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    has_decorators: true
    resolved_decorator_names: "classmethod"
    is_class_method: true
  }
  methods {
    name: "set_data"
    fully_qualified_name: "werkzeug.wrappers.response.Response.set_data"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.wrappers.response.Response"
        fully_qualified_name: "werkzeug.wrappers.response.Response"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.bytes,builtins.str]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
    }
  }
  methods {
    name: "calculate_content_length"
    fully_qualified_name: "werkzeug.wrappers.response.Response.calculate_content_length"
    return_annotation {
      pretty_printed_name: "Union[builtins.int,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.wrappers.response.Response"
        fully_qualified_name: "werkzeug.wrappers.response.Response"
      }
    }
  }
  methods {
    name: "_ensure_sequence"
    fully_qualified_name: "werkzeug.wrappers.response.Response._ensure_sequence"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.wrappers.response.Response"
        fully_qualified_name: "werkzeug.wrappers.response.Response"
      }
    }
    parameters {
      name: "mutable"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
  }
  methods {
    name: "make_sequence"
    fully_qualified_name: "werkzeug.wrappers.response.Response.make_sequence"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.wrappers.response.Response"
        fully_qualified_name: "werkzeug.wrappers.response.Response"
      }
    }
  }
  methods {
    name: "iter_encoded"
    fully_qualified_name: "werkzeug.wrappers.response.Response.iter_encoded"
    return_annotation {
      pretty_printed_name: "typing.Iterator[builtins.bytes]"
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.wrappers.response.Response"
        fully_qualified_name: "werkzeug.wrappers.response.Response"
      }
    }
  }
  methods {
    name: "is_streamed"
    fully_qualified_name: "werkzeug.wrappers.response.Response.is_streamed"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.wrappers.response.Response"
        fully_qualified_name: "werkzeug.wrappers.response.Response"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "is_sequence"
    fully_qualified_name: "werkzeug.wrappers.response.Response.is_sequence"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.wrappers.response.Response"
        fully_qualified_name: "werkzeug.wrappers.response.Response"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "close"
    fully_qualified_name: "werkzeug.wrappers.response.Response.close"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.wrappers.response.Response"
        fully_qualified_name: "werkzeug.wrappers.response.Response"
      }
    }
  }
  methods {
    name: "__enter__"
    fully_qualified_name: "werkzeug.wrappers.response.Response.__enter__"
    return_annotation {
      pretty_printed_name: "werkzeug.wrappers.response.Response"
      fully_qualified_name: "werkzeug.wrappers.response.Response"
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "werkzeug.wrappers.response.Response"
        fully_qualified_name: "werkzeug.wrappers.response.Response"
      }
    }
  }
  methods {
    name: "__exit__"
    fully_qualified_name: "werkzeug.wrappers.response.Response.__exit__"
    parameters {
      name: "__"
    }
    parameters {
      name: "__"
    }
    parameters {
      name: "__"
    }
    parameters {
      name: "__"
    }
  }
  methods {
    name: "freeze"
    fully_qualified_name: "werkzeug.wrappers.response.Response.freeze"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.wrappers.response.Response"
        fully_qualified_name: "werkzeug.wrappers.response.Response"
      }
    }
  }
  methods {
    name: "get_wsgi_headers"
    fully_qualified_name: "werkzeug.wrappers.response.Response.get_wsgi_headers"
    return_annotation {
      pretty_printed_name: "werkzeug.datastructures.headers.Headers"
      fully_qualified_name: "werkzeug.datastructures.headers.Headers"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.wrappers.response.Response"
        fully_qualified_name: "werkzeug.wrappers.response.Response"
      }
    }
    parameters {
      name: "environ"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[builtins.dict[builtins.str,Any]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "builtins.dict[builtins.str,Any]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "builtins.dict"
        }
        fully_qualified_name: "_typeshed.wsgi.WSGIEnvironment"
      }
    }
  }
  methods {
    name: "get_app_iter"
    fully_qualified_name: "werkzeug.wrappers.response.Response.get_app_iter"
    return_annotation {
      pretty_printed_name: "typing.Iterable[builtins.bytes]"
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
      fully_qualified_name: "typing.Iterable"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.wrappers.response.Response"
        fully_qualified_name: "werkzeug.wrappers.response.Response"
      }
    }
    parameters {
      name: "environ"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[builtins.dict[builtins.str,Any]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "builtins.dict[builtins.str,Any]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "builtins.dict"
        }
        fully_qualified_name: "_typeshed.wsgi.WSGIEnvironment"
      }
    }
  }
  methods {
    name: "get_wsgi_response"
    fully_qualified_name: "werkzeug.wrappers.response.Response.get_wsgi_response"
    return_annotation {
      pretty_printed_name: "Tuple[typing.Iterable[builtins.bytes],builtins.str,builtins.list[Tuple[builtins.str,builtins.str]]]"
      kind: TUPLE
      args {
        pretty_printed_name: "typing.Iterable[builtins.bytes]"
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        fully_qualified_name: "typing.Iterable"
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.list[Tuple[builtins.str,builtins.str]]"
        args {
          pretty_printed_name: "Tuple[builtins.str,builtins.str]"
          kind: TUPLE
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        fully_qualified_name: "builtins.list"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.wrappers.response.Response"
        fully_qualified_name: "werkzeug.wrappers.response.Response"
      }
    }
    parameters {
      name: "environ"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[builtins.dict[builtins.str,Any]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "builtins.dict[builtins.str,Any]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "builtins.dict"
        }
        fully_qualified_name: "_typeshed.wsgi.WSGIEnvironment"
      }
    }
  }
  methods {
    name: "__call__"
    fully_qualified_name: "werkzeug.wrappers.response.Response.__call__"
    return_annotation {
      pretty_printed_name: "typing.Iterable[builtins.bytes]"
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
      fully_qualified_name: "typing.Iterable"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.wrappers.response.Response"
        fully_qualified_name: "werkzeug.wrappers.response.Response"
      }
    }
    parameters {
      name: "environ"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[builtins.dict[builtins.str,Any]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "builtins.dict[builtins.str,Any]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "builtins.dict"
        }
        fully_qualified_name: "_typeshed.wsgi.WSGIEnvironment"
      }
    }
    parameters {
      name: "start_response"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_typeshed.wsgi.StartResponse"
        fully_qualified_name: "_typeshed.wsgi.StartResponse"
      }
    }
  }
  methods {
    name: "json"
    fully_qualified_name: "werkzeug.wrappers.response.Response.json"
    return_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.wrappers.response.Response"
        fully_qualified_name: "werkzeug.wrappers.response.Response"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "stream"
    fully_qualified_name: "werkzeug.wrappers.response.Response.stream"
    return_annotation {
      pretty_printed_name: "werkzeug.wrappers.response.ResponseStream"
      fully_qualified_name: "werkzeug.wrappers.response.ResponseStream"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.wrappers.response.Response"
        fully_qualified_name: "werkzeug.wrappers.response.Response"
      }
    }
    has_decorators: true
    resolved_decorator_names: "cached_property"
  }
  methods {
    name: "_wrap_range_response"
    fully_qualified_name: "werkzeug.wrappers.response.Response._wrap_range_response"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.wrappers.response.Response"
        fully_qualified_name: "werkzeug.wrappers.response.Response"
      }
    }
    parameters {
      name: "start"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "length"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
  }
  methods {
    name: "_is_range_request_processable"
    fully_qualified_name: "werkzeug.wrappers.response.Response._is_range_request_processable"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.wrappers.response.Response"
        fully_qualified_name: "werkzeug.wrappers.response.Response"
      }
    }
    parameters {
      name: "environ"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[builtins.dict[builtins.str,Any]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "builtins.dict[builtins.str,Any]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "builtins.dict"
        }
        fully_qualified_name: "_typeshed.wsgi.WSGIEnvironment"
      }
    }
  }
  methods {
    name: "_process_range_request"
    fully_qualified_name: "werkzeug.wrappers.response.Response._process_range_request"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.wrappers.response.Response"
        fully_qualified_name: "werkzeug.wrappers.response.Response"
      }
    }
    parameters {
      name: "environ"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[builtins.dict[builtins.str,Any]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "builtins.dict[builtins.str,Any]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "builtins.dict"
        }
        fully_qualified_name: "_typeshed.wsgi.WSGIEnvironment"
      }
    }
    parameters {
      name: "complete_length"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "accept_ranges"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.bool,builtins.str]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
    }
  }
  methods {
    name: "make_conditional"
    fully_qualified_name: "werkzeug.wrappers.response.Response.make_conditional"
    return_annotation {
      pretty_printed_name: "werkzeug.wrappers.response.Response"
      fully_qualified_name: "werkzeug.wrappers.response.Response"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.wrappers.response.Response"
        fully_qualified_name: "werkzeug.wrappers.response.Response"
      }
    }
    parameters {
      name: "request_or_environ"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[TypeAlias[builtins.dict[builtins.str,Any]],werkzeug.wrappers.request.Request]"
        kind: UNION
        args {
          pretty_printed_name: "TypeAlias[builtins.dict[builtins.str,Any]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "builtins.dict[builtins.str,Any]"
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "Any"
              kind: ANY
            }
            fully_qualified_name: "builtins.dict"
          }
          fully_qualified_name: "_typeshed.wsgi.WSGIEnvironment"
        }
        args {
          pretty_printed_name: "werkzeug.wrappers.request.Request"
          fully_qualified_name: "werkzeug.wrappers.request.Request"
        }
      }
    }
    parameters {
      name: "accept_ranges"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.bool,builtins.str]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
    }
    parameters {
      name: "complete_length"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "add_etag"
    fully_qualified_name: "werkzeug.wrappers.response.Response.add_etag"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.wrappers.response.Response"
        fully_qualified_name: "werkzeug.wrappers.response.Response"
      }
    }
    parameters {
      name: "overwrite"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    parameters {
      name: "weak"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
  }
  overloaded_methods {
    name: "get_data"
    fullname: "werkzeug.wrappers.response.Response.get_data"
    definitions {
      name: "get_data"
      fully_qualified_name: "werkzeug.wrappers.response.Response.get_data"
      return_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.wrappers.response.Response"
          fully_qualified_name: "werkzeug.wrappers.response.Response"
        }
      }
      parameters {
        name: "as_text"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Literal[builtins.bool]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.bool"
            fully_qualified_name: "builtins.bool"
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "t.overload"
      is_overload: true
    }
    definitions {
      name: "get_data"
      fully_qualified_name: "werkzeug.wrappers.response.Response.get_data"
      return_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.wrappers.response.Response"
          fully_qualified_name: "werkzeug.wrappers.response.Response"
        }
      }
      parameters {
        name: "as_text"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Literal[builtins.bool]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.bool"
            fully_qualified_name: "builtins.bool"
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "t.overload"
      is_overload: true
    }
  }
  overloaded_methods {
    name: "get_json"
    fullname: "werkzeug.wrappers.response.Response.get_json"
    definitions {
      name: "get_json"
      fully_qualified_name: "werkzeug.wrappers.response.Response.get_json"
      return_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.wrappers.response.Response"
          fully_qualified_name: "werkzeug.wrappers.response.Response"
        }
      }
      parameters {
        name: "force"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
      }
      parameters {
        name: "silent"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Literal[builtins.bool]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.bool"
            fully_qualified_name: "builtins.bool"
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "t.overload"
      is_overload: true
    }
    definitions {
      name: "get_json"
      fully_qualified_name: "werkzeug.wrappers.response.Response.get_json"
      return_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.wrappers.response.Response"
          fully_qualified_name: "werkzeug.wrappers.response.Response"
        }
      }
      parameters {
        name: "force"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
      }
      parameters {
        name: "silent"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
      }
      has_decorators: true
      resolved_decorator_names: "t.overload"
      is_overload: true
    }
  }
  attributes {
    name: "implicit_sequence_conversion"
    fully_qualified_name: "werkzeug.wrappers.response.Response.implicit_sequence_conversion"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
  attributes {
    name: "autocorrect_location_header"
    fully_qualified_name: "werkzeug.wrappers.response.Response.autocorrect_location_header"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
  attributes {
    name: "automatically_set_content_length"
    fully_qualified_name: "werkzeug.wrappers.response.Response.automatically_set_content_length"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
  attributes {
    name: "response"
    fully_qualified_name: "werkzeug.wrappers.response.Response.response"
    type_annotation {
      pretty_printed_name: "Union[typing.Iterable[builtins.str],typing.Iterable[builtins.bytes]]"
      kind: UNION
      args {
        pretty_printed_name: "typing.Iterable[builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "typing.Iterable"
      }
      args {
        pretty_printed_name: "typing.Iterable[builtins.bytes]"
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
  }
  attributes {
    name: "data"
    fully_qualified_name: "werkzeug.wrappers.response.Response.data"
    type_annotation {
      pretty_printed_name: "builtins.property"
      fully_qualified_name: "builtins.property"
    }
  }
  attributes {
    name: "direct_passthrough"
    fully_qualified_name: "werkzeug.wrappers.response.Response.direct_passthrough"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
  attributes {
    name: "_on_close"
    fully_qualified_name: "werkzeug.wrappers.response.Response._on_close"
    type_annotation {
      pretty_printed_name: "builtins.list[CallableType[builtins.function]]"
      args {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
      fully_qualified_name: "builtins.list"
    }
  }
}
classes {
  name: "HTTPException"
  fully_qualified_name: "werkzeug.exceptions.HTTPException"
  super_classes: "builtins.Exception"
  methods {
    name: "__init__"
    fully_qualified_name: "werkzeug.exceptions.HTTPException.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.exceptions.HTTPException"
        fully_qualified_name: "werkzeug.exceptions.HTTPException"
      }
    }
    parameters {
      name: "description"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "response"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[werkzeug.sansio.response.Response,None]"
        kind: UNION
        args {
          pretty_printed_name: "werkzeug.sansio.response.Response"
          fully_qualified_name: "werkzeug.sansio.response.Response"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "name"
    fully_qualified_name: "werkzeug.exceptions.HTTPException.name"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.exceptions.HTTPException"
        fully_qualified_name: "werkzeug.exceptions.HTTPException"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "get_description"
    fully_qualified_name: "werkzeug.exceptions.HTTPException.get_description"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.exceptions.HTTPException"
        fully_qualified_name: "werkzeug.exceptions.HTTPException"
      }
    }
    parameters {
      name: "environ"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[TypeAlias[builtins.dict[builtins.str,Any]],None]"
        kind: UNION
        args {
          pretty_printed_name: "TypeAlias[builtins.dict[builtins.str,Any]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "builtins.dict[builtins.str,Any]"
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "Any"
              kind: ANY
            }
            fully_qualified_name: "builtins.dict"
          }
          fully_qualified_name: "_typeshed.wsgi.WSGIEnvironment"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "scope"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.dict[Any,Any],None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.dict[Any,Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "builtins.dict"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "get_body"
    fully_qualified_name: "werkzeug.exceptions.HTTPException.get_body"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.exceptions.HTTPException"
        fully_qualified_name: "werkzeug.exceptions.HTTPException"
      }
    }
    parameters {
      name: "environ"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[TypeAlias[builtins.dict[builtins.str,Any]],None]"
        kind: UNION
        args {
          pretty_printed_name: "TypeAlias[builtins.dict[builtins.str,Any]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "builtins.dict[builtins.str,Any]"
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "Any"
              kind: ANY
            }
            fully_qualified_name: "builtins.dict"
          }
          fully_qualified_name: "_typeshed.wsgi.WSGIEnvironment"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "scope"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.dict[Any,Any],None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.dict[Any,Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "builtins.dict"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "get_headers"
    fully_qualified_name: "werkzeug.exceptions.HTTPException.get_headers"
    return_annotation {
      pretty_printed_name: "builtins.list[Tuple[builtins.str,builtins.str]]"
      args {
        pretty_printed_name: "Tuple[builtins.str,builtins.str]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.exceptions.HTTPException"
        fully_qualified_name: "werkzeug.exceptions.HTTPException"
      }
    }
    parameters {
      name: "environ"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[TypeAlias[builtins.dict[builtins.str,Any]],None]"
        kind: UNION
        args {
          pretty_printed_name: "TypeAlias[builtins.dict[builtins.str,Any]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "builtins.dict[builtins.str,Any]"
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "Any"
              kind: ANY
            }
            fully_qualified_name: "builtins.dict"
          }
          fully_qualified_name: "_typeshed.wsgi.WSGIEnvironment"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "scope"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.dict[Any,Any],None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.dict[Any,Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "builtins.dict"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "get_response"
    fully_qualified_name: "werkzeug.exceptions.HTTPException.get_response"
    return_annotation {
      pretty_printed_name: "werkzeug.sansio.response.Response"
      fully_qualified_name: "werkzeug.sansio.response.Response"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.exceptions.HTTPException"
        fully_qualified_name: "werkzeug.exceptions.HTTPException"
      }
    }
    parameters {
      name: "environ"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[TypeAlias[builtins.dict[builtins.str,Any]],werkzeug.wrappers.request.Request,None]"
        kind: UNION
        args {
          pretty_printed_name: "TypeAlias[builtins.dict[builtins.str,Any]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "builtins.dict[builtins.str,Any]"
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "Any"
              kind: ANY
            }
            fully_qualified_name: "builtins.dict"
          }
          fully_qualified_name: "_typeshed.wsgi.WSGIEnvironment"
        }
        args {
          pretty_printed_name: "werkzeug.wrappers.request.Request"
          fully_qualified_name: "werkzeug.wrappers.request.Request"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "scope"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.dict[Any,Any],None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.dict[Any,Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "builtins.dict"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "__call__"
    fully_qualified_name: "werkzeug.exceptions.HTTPException.__call__"
    return_annotation {
      pretty_printed_name: "typing.Iterable[builtins.bytes]"
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
      fully_qualified_name: "typing.Iterable"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.exceptions.HTTPException"
        fully_qualified_name: "werkzeug.exceptions.HTTPException"
      }
    }
    parameters {
      name: "environ"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[builtins.dict[builtins.str,Any]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "builtins.dict[builtins.str,Any]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "builtins.dict"
        }
        fully_qualified_name: "_typeshed.wsgi.WSGIEnvironment"
      }
    }
    parameters {
      name: "start_response"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_typeshed.wsgi.StartResponse"
        fully_qualified_name: "_typeshed.wsgi.StartResponse"
      }
    }
  }
  methods {
    name: "__str__"
    fully_qualified_name: "werkzeug.exceptions.HTTPException.__str__"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "werkzeug.exceptions.HTTPException"
        fully_qualified_name: "werkzeug.exceptions.HTTPException"
      }
    }
  }
  methods {
    name: "__repr__"
    fully_qualified_name: "werkzeug.exceptions.HTTPException.__repr__"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "werkzeug.exceptions.HTTPException"
        fully_qualified_name: "werkzeug.exceptions.HTTPException"
      }
    }
  }
  attributes {
    name: "code"
    fully_qualified_name: "werkzeug.exceptions.HTTPException.code"
    type_annotation {
      pretty_printed_name: "Union[builtins.int,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  attributes {
    name: "description"
    fully_qualified_name: "werkzeug.exceptions.HTTPException.description"
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  attributes {
    name: "response"
    fully_qualified_name: "werkzeug.exceptions.HTTPException.response"
    type_annotation {
      pretty_printed_name: "Union[werkzeug.sansio.response.Response,None]"
      kind: UNION
      args {
        pretty_printed_name: "werkzeug.sansio.response.Response"
        fully_qualified_name: "werkzeug.sansio.response.Response"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
}
classes {
  name: "BadRequest"
  fully_qualified_name: "werkzeug.exceptions.BadRequest"
  super_classes: "werkzeug.exceptions.HTTPException"
  attributes {
    name: "code"
    fully_qualified_name: "werkzeug.exceptions.BadRequest.code"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  attributes {
    name: "description"
    fully_qualified_name: "werkzeug.exceptions.BadRequest.description"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
}
classes {
  name: "BadRequestKeyError"
  fully_qualified_name: "werkzeug.exceptions.BadRequestKeyError"
  super_classes: "werkzeug.exceptions.BadRequest"
  super_classes: "builtins.KeyError"
  methods {
    name: "__init__"
    fully_qualified_name: "werkzeug.exceptions.BadRequestKeyError.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.exceptions.BadRequestKeyError"
        fully_qualified_name: "werkzeug.exceptions.BadRequestKeyError"
      }
    }
    parameters {
      name: "arg"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "args"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "kwargs"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
  }
  overloaded_methods {
    name: "description"
    fullname: "werkzeug.exceptions.BadRequestKeyError.description"
    definitions {
      name: "description"
      fully_qualified_name: "werkzeug.exceptions.BadRequestKeyError.description"
      return_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.exceptions.BadRequestKeyError"
          fully_qualified_name: "werkzeug.exceptions.BadRequestKeyError"
        }
      }
      has_decorators: true
      resolved_decorator_names: "property"
      is_overload: true
      is_property: true
    }
    definitions {
      name: "description"
      fully_qualified_name: "werkzeug.exceptions.BadRequestKeyError.description"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.exceptions.BadRequestKeyError"
          fully_qualified_name: "werkzeug.exceptions.BadRequestKeyError"
        }
      }
      parameters {
        name: "value"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      has_decorators: true
      resolved_decorator_names: "description.setter"
    }
  }
  attributes {
    name: "_description"
    fully_qualified_name: "werkzeug.exceptions.BadRequestKeyError._description"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  attributes {
    name: "show_exception"
    fully_qualified_name: "werkzeug.exceptions.BadRequestKeyError.show_exception"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
}
classes {
  name: "ClientDisconnected"
  fully_qualified_name: "werkzeug.exceptions.ClientDisconnected"
  super_classes: "werkzeug.exceptions.BadRequest"
}
classes {
  name: "SecurityError"
  fully_qualified_name: "werkzeug.exceptions.SecurityError"
  super_classes: "werkzeug.exceptions.BadRequest"
}
classes {
  name: "BadHost"
  fully_qualified_name: "werkzeug.exceptions.BadHost"
  super_classes: "werkzeug.exceptions.BadRequest"
}
classes {
  name: "Unauthorized"
  fully_qualified_name: "werkzeug.exceptions.Unauthorized"
  super_classes: "werkzeug.exceptions.HTTPException"
  methods {
    name: "__init__"
    fully_qualified_name: "werkzeug.exceptions.Unauthorized.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.exceptions.Unauthorized"
        fully_qualified_name: "werkzeug.exceptions.Unauthorized"
      }
    }
    parameters {
      name: "description"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "response"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[werkzeug.sansio.response.Response,None]"
        kind: UNION
        args {
          pretty_printed_name: "werkzeug.sansio.response.Response"
          fully_qualified_name: "werkzeug.sansio.response.Response"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "www_authenticate"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[None,werkzeug.datastructures.auth.WWWAuthenticate,typing.Iterable[werkzeug.datastructures.auth.WWWAuthenticate]]"
        kind: UNION
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
        args {
          pretty_printed_name: "werkzeug.datastructures.auth.WWWAuthenticate"
          fully_qualified_name: "werkzeug.datastructures.auth.WWWAuthenticate"
        }
        args {
          pretty_printed_name: "typing.Iterable[werkzeug.datastructures.auth.WWWAuthenticate]"
          args {
            pretty_printed_name: "werkzeug.datastructures.auth.WWWAuthenticate"
            fully_qualified_name: "werkzeug.datastructures.auth.WWWAuthenticate"
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
    }
  }
  methods {
    name: "get_headers"
    fully_qualified_name: "werkzeug.exceptions.Unauthorized.get_headers"
    return_annotation {
      pretty_printed_name: "builtins.list[Tuple[builtins.str,builtins.str]]"
      args {
        pretty_printed_name: "Tuple[builtins.str,builtins.str]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.exceptions.Unauthorized"
        fully_qualified_name: "werkzeug.exceptions.Unauthorized"
      }
    }
    parameters {
      name: "environ"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[TypeAlias[builtins.dict[builtins.str,Any]],None]"
        kind: UNION
        args {
          pretty_printed_name: "TypeAlias[builtins.dict[builtins.str,Any]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "builtins.dict[builtins.str,Any]"
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "Any"
              kind: ANY
            }
            fully_qualified_name: "builtins.dict"
          }
          fully_qualified_name: "_typeshed.wsgi.WSGIEnvironment"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "scope"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.dict[Any,Any],None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.dict[Any,Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "builtins.dict"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  attributes {
    name: "code"
    fully_qualified_name: "werkzeug.exceptions.Unauthorized.code"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  attributes {
    name: "description"
    fully_qualified_name: "werkzeug.exceptions.Unauthorized.description"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  attributes {
    name: "www_authenticate"
    fully_qualified_name: "werkzeug.exceptions.Unauthorized.www_authenticate"
    type_annotation {
      pretty_printed_name: "Union[None,typing.Iterable[werkzeug.datastructures.auth.WWWAuthenticate]]"
      kind: UNION
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
      args {
        pretty_printed_name: "typing.Iterable[werkzeug.datastructures.auth.WWWAuthenticate]"
        args {
          pretty_printed_name: "werkzeug.datastructures.auth.WWWAuthenticate"
          fully_qualified_name: "werkzeug.datastructures.auth.WWWAuthenticate"
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
  }
}
classes {
  name: "Forbidden"
  fully_qualified_name: "werkzeug.exceptions.Forbidden"
  super_classes: "werkzeug.exceptions.HTTPException"
  attributes {
    name: "code"
    fully_qualified_name: "werkzeug.exceptions.Forbidden.code"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  attributes {
    name: "description"
    fully_qualified_name: "werkzeug.exceptions.Forbidden.description"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
}
classes {
  name: "NotFound"
  fully_qualified_name: "werkzeug.exceptions.NotFound"
  super_classes: "werkzeug.exceptions.HTTPException"
  attributes {
    name: "code"
    fully_qualified_name: "werkzeug.exceptions.NotFound.code"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  attributes {
    name: "description"
    fully_qualified_name: "werkzeug.exceptions.NotFound.description"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
}
classes {
  name: "MethodNotAllowed"
  fully_qualified_name: "werkzeug.exceptions.MethodNotAllowed"
  super_classes: "werkzeug.exceptions.HTTPException"
  methods {
    name: "__init__"
    fully_qualified_name: "werkzeug.exceptions.MethodNotAllowed.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.exceptions.MethodNotAllowed"
        fully_qualified_name: "werkzeug.exceptions.MethodNotAllowed"
      }
    }
    parameters {
      name: "valid_methods"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.Iterable[builtins.str],None]"
        kind: UNION
        args {
          pretty_printed_name: "typing.Iterable[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "typing.Iterable"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "description"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "response"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[werkzeug.sansio.response.Response,None]"
        kind: UNION
        args {
          pretty_printed_name: "werkzeug.sansio.response.Response"
          fully_qualified_name: "werkzeug.sansio.response.Response"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "get_headers"
    fully_qualified_name: "werkzeug.exceptions.MethodNotAllowed.get_headers"
    return_annotation {
      pretty_printed_name: "builtins.list[Tuple[builtins.str,builtins.str]]"
      args {
        pretty_printed_name: "Tuple[builtins.str,builtins.str]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.exceptions.MethodNotAllowed"
        fully_qualified_name: "werkzeug.exceptions.MethodNotAllowed"
      }
    }
    parameters {
      name: "environ"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[TypeAlias[builtins.dict[builtins.str,Any]],None]"
        kind: UNION
        args {
          pretty_printed_name: "TypeAlias[builtins.dict[builtins.str,Any]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "builtins.dict[builtins.str,Any]"
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "Any"
              kind: ANY
            }
            fully_qualified_name: "builtins.dict"
          }
          fully_qualified_name: "_typeshed.wsgi.WSGIEnvironment"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "scope"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.dict[Any,Any],None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.dict[Any,Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "builtins.dict"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  attributes {
    name: "code"
    fully_qualified_name: "werkzeug.exceptions.MethodNotAllowed.code"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  attributes {
    name: "description"
    fully_qualified_name: "werkzeug.exceptions.MethodNotAllowed.description"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  attributes {
    name: "valid_methods"
    fully_qualified_name: "werkzeug.exceptions.MethodNotAllowed.valid_methods"
    type_annotation {
      pretty_printed_name: "Union[typing.Iterable[builtins.str],None]"
      kind: UNION
      args {
        pretty_printed_name: "typing.Iterable[builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "typing.Iterable"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
}
classes {
  name: "NotAcceptable"
  fully_qualified_name: "werkzeug.exceptions.NotAcceptable"
  super_classes: "werkzeug.exceptions.HTTPException"
  attributes {
    name: "code"
    fully_qualified_name: "werkzeug.exceptions.NotAcceptable.code"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  attributes {
    name: "description"
    fully_qualified_name: "werkzeug.exceptions.NotAcceptable.description"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
}
classes {
  name: "RequestTimeout"
  fully_qualified_name: "werkzeug.exceptions.RequestTimeout"
  super_classes: "werkzeug.exceptions.HTTPException"
  attributes {
    name: "code"
    fully_qualified_name: "werkzeug.exceptions.RequestTimeout.code"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  attributes {
    name: "description"
    fully_qualified_name: "werkzeug.exceptions.RequestTimeout.description"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
}
classes {
  name: "Conflict"
  fully_qualified_name: "werkzeug.exceptions.Conflict"
  super_classes: "werkzeug.exceptions.HTTPException"
  attributes {
    name: "code"
    fully_qualified_name: "werkzeug.exceptions.Conflict.code"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  attributes {
    name: "description"
    fully_qualified_name: "werkzeug.exceptions.Conflict.description"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
}
classes {
  name: "Gone"
  fully_qualified_name: "werkzeug.exceptions.Gone"
  super_classes: "werkzeug.exceptions.HTTPException"
  attributes {
    name: "code"
    fully_qualified_name: "werkzeug.exceptions.Gone.code"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  attributes {
    name: "description"
    fully_qualified_name: "werkzeug.exceptions.Gone.description"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
}
classes {
  name: "LengthRequired"
  fully_qualified_name: "werkzeug.exceptions.LengthRequired"
  super_classes: "werkzeug.exceptions.HTTPException"
  attributes {
    name: "code"
    fully_qualified_name: "werkzeug.exceptions.LengthRequired.code"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  attributes {
    name: "description"
    fully_qualified_name: "werkzeug.exceptions.LengthRequired.description"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
}
classes {
  name: "PreconditionFailed"
  fully_qualified_name: "werkzeug.exceptions.PreconditionFailed"
  super_classes: "werkzeug.exceptions.HTTPException"
  attributes {
    name: "code"
    fully_qualified_name: "werkzeug.exceptions.PreconditionFailed.code"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  attributes {
    name: "description"
    fully_qualified_name: "werkzeug.exceptions.PreconditionFailed.description"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
}
classes {
  name: "RequestEntityTooLarge"
  fully_qualified_name: "werkzeug.exceptions.RequestEntityTooLarge"
  super_classes: "werkzeug.exceptions.HTTPException"
  attributes {
    name: "code"
    fully_qualified_name: "werkzeug.exceptions.RequestEntityTooLarge.code"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  attributes {
    name: "description"
    fully_qualified_name: "werkzeug.exceptions.RequestEntityTooLarge.description"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
}
classes {
  name: "RequestURITooLarge"
  fully_qualified_name: "werkzeug.exceptions.RequestURITooLarge"
  super_classes: "werkzeug.exceptions.HTTPException"
  attributes {
    name: "code"
    fully_qualified_name: "werkzeug.exceptions.RequestURITooLarge.code"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  attributes {
    name: "description"
    fully_qualified_name: "werkzeug.exceptions.RequestURITooLarge.description"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
}
classes {
  name: "UnsupportedMediaType"
  fully_qualified_name: "werkzeug.exceptions.UnsupportedMediaType"
  super_classes: "werkzeug.exceptions.HTTPException"
  attributes {
    name: "code"
    fully_qualified_name: "werkzeug.exceptions.UnsupportedMediaType.code"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  attributes {
    name: "description"
    fully_qualified_name: "werkzeug.exceptions.UnsupportedMediaType.description"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
}
classes {
  name: "RequestedRangeNotSatisfiable"
  fully_qualified_name: "werkzeug.exceptions.RequestedRangeNotSatisfiable"
  super_classes: "werkzeug.exceptions.HTTPException"
  methods {
    name: "__init__"
    fully_qualified_name: "werkzeug.exceptions.RequestedRangeNotSatisfiable.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.exceptions.RequestedRangeNotSatisfiable"
        fully_qualified_name: "werkzeug.exceptions.RequestedRangeNotSatisfiable"
      }
    }
    parameters {
      name: "length"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "units"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "description"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "response"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[werkzeug.sansio.response.Response,None]"
        kind: UNION
        args {
          pretty_printed_name: "werkzeug.sansio.response.Response"
          fully_qualified_name: "werkzeug.sansio.response.Response"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "get_headers"
    fully_qualified_name: "werkzeug.exceptions.RequestedRangeNotSatisfiable.get_headers"
    return_annotation {
      pretty_printed_name: "builtins.list[Tuple[builtins.str,builtins.str]]"
      args {
        pretty_printed_name: "Tuple[builtins.str,builtins.str]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.exceptions.RequestedRangeNotSatisfiable"
        fully_qualified_name: "werkzeug.exceptions.RequestedRangeNotSatisfiable"
      }
    }
    parameters {
      name: "environ"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[TypeAlias[builtins.dict[builtins.str,Any]],None]"
        kind: UNION
        args {
          pretty_printed_name: "TypeAlias[builtins.dict[builtins.str,Any]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "builtins.dict[builtins.str,Any]"
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "Any"
              kind: ANY
            }
            fully_qualified_name: "builtins.dict"
          }
          fully_qualified_name: "_typeshed.wsgi.WSGIEnvironment"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "scope"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.dict[Any,Any],None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.dict[Any,Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "builtins.dict"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  attributes {
    name: "code"
    fully_qualified_name: "werkzeug.exceptions.RequestedRangeNotSatisfiable.code"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  attributes {
    name: "description"
    fully_qualified_name: "werkzeug.exceptions.RequestedRangeNotSatisfiable.description"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  attributes {
    name: "length"
    fully_qualified_name: "werkzeug.exceptions.RequestedRangeNotSatisfiable.length"
    type_annotation {
      pretty_printed_name: "Union[builtins.int,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  attributes {
    name: "units"
    fully_qualified_name: "werkzeug.exceptions.RequestedRangeNotSatisfiable.units"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
}
classes {
  name: "ExpectationFailed"
  fully_qualified_name: "werkzeug.exceptions.ExpectationFailed"
  super_classes: "werkzeug.exceptions.HTTPException"
  attributes {
    name: "code"
    fully_qualified_name: "werkzeug.exceptions.ExpectationFailed.code"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  attributes {
    name: "description"
    fully_qualified_name: "werkzeug.exceptions.ExpectationFailed.description"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
}
classes {
  name: "ImATeapot"
  fully_qualified_name: "werkzeug.exceptions.ImATeapot"
  super_classes: "werkzeug.exceptions.HTTPException"
  attributes {
    name: "code"
    fully_qualified_name: "werkzeug.exceptions.ImATeapot.code"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  attributes {
    name: "description"
    fully_qualified_name: "werkzeug.exceptions.ImATeapot.description"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
}
classes {
  name: "UnprocessableEntity"
  fully_qualified_name: "werkzeug.exceptions.UnprocessableEntity"
  super_classes: "werkzeug.exceptions.HTTPException"
  attributes {
    name: "code"
    fully_qualified_name: "werkzeug.exceptions.UnprocessableEntity.code"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  attributes {
    name: "description"
    fully_qualified_name: "werkzeug.exceptions.UnprocessableEntity.description"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
}
classes {
  name: "Locked"
  fully_qualified_name: "werkzeug.exceptions.Locked"
  super_classes: "werkzeug.exceptions.HTTPException"
  attributes {
    name: "code"
    fully_qualified_name: "werkzeug.exceptions.Locked.code"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  attributes {
    name: "description"
    fully_qualified_name: "werkzeug.exceptions.Locked.description"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
}
classes {
  name: "FailedDependency"
  fully_qualified_name: "werkzeug.exceptions.FailedDependency"
  super_classes: "werkzeug.exceptions.HTTPException"
  attributes {
    name: "code"
    fully_qualified_name: "werkzeug.exceptions.FailedDependency.code"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  attributes {
    name: "description"
    fully_qualified_name: "werkzeug.exceptions.FailedDependency.description"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
}
classes {
  name: "PreconditionRequired"
  fully_qualified_name: "werkzeug.exceptions.PreconditionRequired"
  super_classes: "werkzeug.exceptions.HTTPException"
  attributes {
    name: "code"
    fully_qualified_name: "werkzeug.exceptions.PreconditionRequired.code"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  attributes {
    name: "description"
    fully_qualified_name: "werkzeug.exceptions.PreconditionRequired.description"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
}
classes {
  name: "_RetryAfter"
  fully_qualified_name: "werkzeug.exceptions._RetryAfter"
  super_classes: "werkzeug.exceptions.HTTPException"
  methods {
    name: "__init__"
    fully_qualified_name: "werkzeug.exceptions._RetryAfter.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.exceptions._RetryAfter"
        fully_qualified_name: "werkzeug.exceptions._RetryAfter"
      }
    }
    parameters {
      name: "description"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "response"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[werkzeug.sansio.response.Response,None]"
        kind: UNION
        args {
          pretty_printed_name: "werkzeug.sansio.response.Response"
          fully_qualified_name: "werkzeug.sansio.response.Response"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "retry_after"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[datetime.datetime,builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "datetime.datetime"
          fully_qualified_name: "datetime.datetime"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "get_headers"
    fully_qualified_name: "werkzeug.exceptions._RetryAfter.get_headers"
    return_annotation {
      pretty_printed_name: "builtins.list[Tuple[builtins.str,builtins.str]]"
      args {
        pretty_printed_name: "Tuple[builtins.str,builtins.str]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.exceptions._RetryAfter"
        fully_qualified_name: "werkzeug.exceptions._RetryAfter"
      }
    }
    parameters {
      name: "environ"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[TypeAlias[builtins.dict[builtins.str,Any]],None]"
        kind: UNION
        args {
          pretty_printed_name: "TypeAlias[builtins.dict[builtins.str,Any]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "builtins.dict[builtins.str,Any]"
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "Any"
              kind: ANY
            }
            fully_qualified_name: "builtins.dict"
          }
          fully_qualified_name: "_typeshed.wsgi.WSGIEnvironment"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "scope"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.dict[Any,Any],None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.dict[Any,Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "builtins.dict"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  attributes {
    name: "retry_after"
    fully_qualified_name: "werkzeug.exceptions._RetryAfter.retry_after"
    type_annotation {
      pretty_printed_name: "Union[datetime.datetime,builtins.int,None]"
      kind: UNION
      args {
        pretty_printed_name: "datetime.datetime"
        fully_qualified_name: "datetime.datetime"
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
}
classes {
  name: "TooManyRequests"
  fully_qualified_name: "werkzeug.exceptions.TooManyRequests"
  super_classes: "werkzeug.exceptions._RetryAfter"
  attributes {
    name: "code"
    fully_qualified_name: "werkzeug.exceptions.TooManyRequests.code"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  attributes {
    name: "description"
    fully_qualified_name: "werkzeug.exceptions.TooManyRequests.description"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
}
classes {
  name: "RequestHeaderFieldsTooLarge"
  fully_qualified_name: "werkzeug.exceptions.RequestHeaderFieldsTooLarge"
  super_classes: "werkzeug.exceptions.HTTPException"
  attributes {
    name: "code"
    fully_qualified_name: "werkzeug.exceptions.RequestHeaderFieldsTooLarge.code"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  attributes {
    name: "description"
    fully_qualified_name: "werkzeug.exceptions.RequestHeaderFieldsTooLarge.description"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
}
classes {
  name: "UnavailableForLegalReasons"
  fully_qualified_name: "werkzeug.exceptions.UnavailableForLegalReasons"
  super_classes: "werkzeug.exceptions.HTTPException"
  attributes {
    name: "code"
    fully_qualified_name: "werkzeug.exceptions.UnavailableForLegalReasons.code"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  attributes {
    name: "description"
    fully_qualified_name: "werkzeug.exceptions.UnavailableForLegalReasons.description"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
}
classes {
  name: "InternalServerError"
  fully_qualified_name: "werkzeug.exceptions.InternalServerError"
  super_classes: "werkzeug.exceptions.HTTPException"
  methods {
    name: "__init__"
    fully_qualified_name: "werkzeug.exceptions.InternalServerError.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.exceptions.InternalServerError"
        fully_qualified_name: "werkzeug.exceptions.InternalServerError"
      }
    }
    parameters {
      name: "description"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "response"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[werkzeug.sansio.response.Response,None]"
        kind: UNION
        args {
          pretty_printed_name: "werkzeug.sansio.response.Response"
          fully_qualified_name: "werkzeug.sansio.response.Response"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "original_exception"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.BaseException,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.BaseException"
          fully_qualified_name: "builtins.BaseException"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  attributes {
    name: "code"
    fully_qualified_name: "werkzeug.exceptions.InternalServerError.code"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  attributes {
    name: "description"
    fully_qualified_name: "werkzeug.exceptions.InternalServerError.description"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  attributes {
    name: "original_exception"
    fully_qualified_name: "werkzeug.exceptions.InternalServerError.original_exception"
    type_annotation {
      pretty_printed_name: "Union[builtins.BaseException,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.BaseException"
        fully_qualified_name: "builtins.BaseException"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
}
classes {
  name: "NotImplemented"
  fully_qualified_name: "werkzeug.exceptions.NotImplemented"
  super_classes: "werkzeug.exceptions.HTTPException"
  attributes {
    name: "code"
    fully_qualified_name: "werkzeug.exceptions.NotImplemented.code"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  attributes {
    name: "description"
    fully_qualified_name: "werkzeug.exceptions.NotImplemented.description"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
}
classes {
  name: "BadGateway"
  fully_qualified_name: "werkzeug.exceptions.BadGateway"
  super_classes: "werkzeug.exceptions.HTTPException"
  attributes {
    name: "code"
    fully_qualified_name: "werkzeug.exceptions.BadGateway.code"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  attributes {
    name: "description"
    fully_qualified_name: "werkzeug.exceptions.BadGateway.description"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
}
classes {
  name: "ServiceUnavailable"
  fully_qualified_name: "werkzeug.exceptions.ServiceUnavailable"
  super_classes: "werkzeug.exceptions._RetryAfter"
  attributes {
    name: "code"
    fully_qualified_name: "werkzeug.exceptions.ServiceUnavailable.code"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  attributes {
    name: "description"
    fully_qualified_name: "werkzeug.exceptions.ServiceUnavailable.description"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
}
classes {
  name: "GatewayTimeout"
  fully_qualified_name: "werkzeug.exceptions.GatewayTimeout"
  super_classes: "werkzeug.exceptions.HTTPException"
  attributes {
    name: "code"
    fully_qualified_name: "werkzeug.exceptions.GatewayTimeout.code"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  attributes {
    name: "description"
    fully_qualified_name: "werkzeug.exceptions.GatewayTimeout.description"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
}
classes {
  name: "HTTPVersionNotSupported"
  fully_qualified_name: "werkzeug.exceptions.HTTPVersionNotSupported"
  super_classes: "werkzeug.exceptions.HTTPException"
  attributes {
    name: "code"
    fully_qualified_name: "werkzeug.exceptions.HTTPVersionNotSupported.code"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  attributes {
    name: "description"
    fully_qualified_name: "werkzeug.exceptions.HTTPVersionNotSupported.description"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
}
classes {
  name: "Aborter"
  fully_qualified_name: "werkzeug.exceptions.Aborter"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "werkzeug.exceptions.Aborter.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.exceptions.Aborter"
        fully_qualified_name: "werkzeug.exceptions.Aborter"
      }
    }
    parameters {
      name: "mapping"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.dict[builtins.int,Type[werkzeug.exceptions.HTTPException]],None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.dict[builtins.int,Type[werkzeug.exceptions.HTTPException]]"
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "Type[werkzeug.exceptions.HTTPException]"
            kind: TYPE
            args {
              pretty_printed_name: "werkzeug.exceptions.HTTPException"
              fully_qualified_name: "werkzeug.exceptions.HTTPException"
            }
          }
          fully_qualified_name: "builtins.dict"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "extra"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.dict[builtins.int,Type[werkzeug.exceptions.HTTPException]],None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.dict[builtins.int,Type[werkzeug.exceptions.HTTPException]]"
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "Type[werkzeug.exceptions.HTTPException]"
            kind: TYPE
            args {
              pretty_printed_name: "werkzeug.exceptions.HTTPException"
              fully_qualified_name: "werkzeug.exceptions.HTTPException"
            }
          }
          fully_qualified_name: "builtins.dict"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "__call__"
    fully_qualified_name: "werkzeug.exceptions.Aborter.__call__"
    return_annotation {
      pretty_printed_name: "NoReturn"
      kind: UNINHABITED
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.exceptions.Aborter"
        fully_qualified_name: "werkzeug.exceptions.Aborter"
      }
    }
    parameters {
      name: "code"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,werkzeug.sansio.response.Response]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "werkzeug.sansio.response.Response"
          fully_qualified_name: "werkzeug.sansio.response.Response"
        }
      }
    }
    parameters {
      name: "args"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "kwargs"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
  }
  attributes {
    name: "mapping"
    fully_qualified_name: "werkzeug.exceptions.Aborter.mapping"
    type_annotation {
      pretty_printed_name: "builtins.dict[builtins.int,Type[werkzeug.exceptions.HTTPException]]"
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "Type[werkzeug.exceptions.HTTPException]"
        kind: TYPE
        args {
          pretty_printed_name: "werkzeug.exceptions.HTTPException"
          fully_qualified_name: "werkzeug.exceptions.HTTPException"
        }
      }
      fully_qualified_name: "builtins.dict"
    }
  }
}
functions {
  name: "_find_exceptions"
  fully_qualified_name: "werkzeug.exceptions._find_exceptions"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
}
functions {
  name: "abort"
  fully_qualified_name: "werkzeug.exceptions.abort"
  return_annotation {
    pretty_printed_name: "NoReturn"
    kind: UNINHABITED
  }
  parameters {
    name: "status"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.int,werkzeug.sansio.response.Response]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "werkzeug.sansio.response.Response"
        fully_qualified_name: "werkzeug.sansio.response.Response"
      }
    }
  }
  parameters {
    name: "args"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  parameters {
    name: "kwargs"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
}
vars {
  name: "__annotations__"
  fully_qualified_name: "werkzeug.exceptions.__annotations__"
  type_annotation {
    pretty_printed_name: "builtins.dict[builtins.str,Any]"
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    args {
      pretty_printed_name: "Any"
      kind: ANY
    }
    fully_qualified_name: "builtins.dict"
  }
}
vars {
  name: "t"
  fully_qualified_name: "typing"
  is_imported_module: true
}
vars {
  name: "default_exceptions"
  fully_qualified_name: "werkzeug.exceptions.default_exceptions"
  type_annotation {
    pretty_printed_name: "builtins.dict[builtins.int,Type[werkzeug.exceptions.HTTPException]]"
    args {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    args {
      pretty_printed_name: "Type[werkzeug.exceptions.HTTPException]"
      kind: TYPE
      args {
        pretty_printed_name: "werkzeug.exceptions.HTTPException"
        fully_qualified_name: "werkzeug.exceptions.HTTPException"
      }
    }
    fully_qualified_name: "builtins.dict"
  }
}
vars {
  name: "_aborter"
  fully_qualified_name: "werkzeug.exceptions._aborter"
  type_annotation {
    pretty_printed_name: "werkzeug.exceptions.Aborter"
    fully_qualified_name: "werkzeug.exceptions.Aborter"
  }
}
