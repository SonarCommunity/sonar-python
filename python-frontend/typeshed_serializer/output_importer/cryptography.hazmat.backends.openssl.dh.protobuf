fully_qualified_name: "cryptography.hazmat.backends.openssl.dh"
classes {
  name: "_DHParameters"
  fully_qualified_name: "cryptography.hazmat.backends.openssl.dh._DHParameters"
  super_classes: "cryptography.hazmat.primitives.asymmetric.dh.DHParameters"
  methods {
    name: "__init__"
    fully_qualified_name: "cryptography.hazmat.backends.openssl.dh._DHParameters.__init__"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "backend"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "dh_cdata"
      kind: POSITIONAL_OR_KEYWORD
    }
  }
  methods {
    name: "parameter_numbers"
    fully_qualified_name: "cryptography.hazmat.backends.openssl.dh._DHParameters.parameter_numbers"
    return_annotation {
      pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dh.DHParameterNumbers"
      fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dh.DHParameterNumbers"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.backends.openssl.dh._DHParameters"
        fully_qualified_name: "cryptography.hazmat.backends.openssl.dh._DHParameters"
      }
    }
  }
  methods {
    name: "generate_private_key"
    fully_qualified_name: "cryptography.hazmat.backends.openssl.dh._DHParameters.generate_private_key"
    return_annotation {
      pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dh.DHPrivateKey"
      fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dh.DHPrivateKey"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.backends.openssl.dh._DHParameters"
        fully_qualified_name: "cryptography.hazmat.backends.openssl.dh._DHParameters"
      }
    }
  }
  methods {
    name: "parameter_bytes"
    fully_qualified_name: "cryptography.hazmat.backends.openssl.dh._DHParameters.parameter_bytes"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.backends.openssl.dh._DHParameters"
        fully_qualified_name: "cryptography.hazmat.backends.openssl.dh._DHParameters"
      }
    }
    parameters {
      name: "encoding"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives._serialization.Encoding"
        fully_qualified_name: "cryptography.hazmat.primitives._serialization.Encoding"
      }
    }
    parameters {
      name: "format"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives._serialization.ParameterFormat"
        fully_qualified_name: "cryptography.hazmat.primitives._serialization.ParameterFormat"
      }
    }
  }
  attributes {
    name: "_backend"
    fully_qualified_name: "cryptography.hazmat.backends.openssl.dh._DHParameters._backend"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  attributes {
    name: "_dh_cdata"
    fully_qualified_name: "cryptography.hazmat.backends.openssl.dh._DHParameters._dh_cdata"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
}
classes {
  name: "_DHPrivateKey"
  fully_qualified_name: "cryptography.hazmat.backends.openssl.dh._DHPrivateKey"
  super_classes: "cryptography.hazmat.primitives.asymmetric.dh.DHPrivateKey"
  methods {
    name: "__init__"
    fully_qualified_name: "cryptography.hazmat.backends.openssl.dh._DHPrivateKey.__init__"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "backend"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "dh_cdata"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "evp_pkey"
      kind: POSITIONAL_OR_KEYWORD
    }
  }
  methods {
    name: "key_size"
    fully_qualified_name: "cryptography.hazmat.backends.openssl.dh._DHPrivateKey.key_size"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.backends.openssl.dh._DHPrivateKey"
        fully_qualified_name: "cryptography.hazmat.backends.openssl.dh._DHPrivateKey"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "private_numbers"
    fully_qualified_name: "cryptography.hazmat.backends.openssl.dh._DHPrivateKey.private_numbers"
    return_annotation {
      pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dh.DHPrivateNumbers"
      fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dh.DHPrivateNumbers"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.backends.openssl.dh._DHPrivateKey"
        fully_qualified_name: "cryptography.hazmat.backends.openssl.dh._DHPrivateKey"
      }
    }
  }
  methods {
    name: "exchange"
    fully_qualified_name: "cryptography.hazmat.backends.openssl.dh._DHPrivateKey.exchange"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.backends.openssl.dh._DHPrivateKey"
        fully_qualified_name: "cryptography.hazmat.backends.openssl.dh._DHPrivateKey"
      }
    }
    parameters {
      name: "peer_public_key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dh.DHPublicKey"
        fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dh.DHPublicKey"
      }
    }
  }
  methods {
    name: "_exchange_assert"
    fully_qualified_name: "cryptography.hazmat.backends.openssl.dh._DHPrivateKey._exchange_assert"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "ok"
      kind: POSITIONAL_OR_KEYWORD
    }
  }
  methods {
    name: "public_key"
    fully_qualified_name: "cryptography.hazmat.backends.openssl.dh._DHPrivateKey.public_key"
    return_annotation {
      pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dh.DHPublicKey"
      fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dh.DHPublicKey"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.backends.openssl.dh._DHPrivateKey"
        fully_qualified_name: "cryptography.hazmat.backends.openssl.dh._DHPrivateKey"
      }
    }
  }
  methods {
    name: "parameters"
    fully_qualified_name: "cryptography.hazmat.backends.openssl.dh._DHPrivateKey.parameters"
    return_annotation {
      pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dh.DHParameters"
      fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dh.DHParameters"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.backends.openssl.dh._DHPrivateKey"
        fully_qualified_name: "cryptography.hazmat.backends.openssl.dh._DHPrivateKey"
      }
    }
  }
  methods {
    name: "private_bytes"
    fully_qualified_name: "cryptography.hazmat.backends.openssl.dh._DHPrivateKey.private_bytes"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.backends.openssl.dh._DHPrivateKey"
        fully_qualified_name: "cryptography.hazmat.backends.openssl.dh._DHPrivateKey"
      }
    }
    parameters {
      name: "encoding"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives._serialization.Encoding"
        fully_qualified_name: "cryptography.hazmat.primitives._serialization.Encoding"
      }
    }
    parameters {
      name: "format"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives._serialization.PrivateFormat"
        fully_qualified_name: "cryptography.hazmat.primitives._serialization.PrivateFormat"
      }
    }
    parameters {
      name: "encryption_algorithm"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives._serialization.KeySerializationEncryption"
        fully_qualified_name: "cryptography.hazmat.primitives._serialization.KeySerializationEncryption"
      }
    }
  }
  attributes {
    name: "_backend"
    fully_qualified_name: "cryptography.hazmat.backends.openssl.dh._DHPrivateKey._backend"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  attributes {
    name: "_dh_cdata"
    fully_qualified_name: "cryptography.hazmat.backends.openssl.dh._DHPrivateKey._dh_cdata"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  attributes {
    name: "_evp_pkey"
    fully_qualified_name: "cryptography.hazmat.backends.openssl.dh._DHPrivateKey._evp_pkey"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  attributes {
    name: "_key_size_bytes"
    fully_qualified_name: "cryptography.hazmat.backends.openssl.dh._DHPrivateKey._key_size_bytes"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
}
classes {
  name: "_DHPublicKey"
  fully_qualified_name: "cryptography.hazmat.backends.openssl.dh._DHPublicKey"
  super_classes: "cryptography.hazmat.primitives.asymmetric.dh.DHPublicKey"
  methods {
    name: "__init__"
    fully_qualified_name: "cryptography.hazmat.backends.openssl.dh._DHPublicKey.__init__"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "backend"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "dh_cdata"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "evp_pkey"
      kind: POSITIONAL_OR_KEYWORD
    }
  }
  methods {
    name: "key_size"
    fully_qualified_name: "cryptography.hazmat.backends.openssl.dh._DHPublicKey.key_size"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.backends.openssl.dh._DHPublicKey"
        fully_qualified_name: "cryptography.hazmat.backends.openssl.dh._DHPublicKey"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "public_numbers"
    fully_qualified_name: "cryptography.hazmat.backends.openssl.dh._DHPublicKey.public_numbers"
    return_annotation {
      pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dh.DHPublicNumbers"
      fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dh.DHPublicNumbers"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.backends.openssl.dh._DHPublicKey"
        fully_qualified_name: "cryptography.hazmat.backends.openssl.dh._DHPublicKey"
      }
    }
  }
  methods {
    name: "parameters"
    fully_qualified_name: "cryptography.hazmat.backends.openssl.dh._DHPublicKey.parameters"
    return_annotation {
      pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.dh.DHParameters"
      fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.dh.DHParameters"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.backends.openssl.dh._DHPublicKey"
        fully_qualified_name: "cryptography.hazmat.backends.openssl.dh._DHPublicKey"
      }
    }
  }
  methods {
    name: "public_bytes"
    fully_qualified_name: "cryptography.hazmat.backends.openssl.dh._DHPublicKey.public_bytes"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.backends.openssl.dh._DHPublicKey"
        fully_qualified_name: "cryptography.hazmat.backends.openssl.dh._DHPublicKey"
      }
    }
    parameters {
      name: "encoding"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives._serialization.Encoding"
        fully_qualified_name: "cryptography.hazmat.primitives._serialization.Encoding"
      }
    }
    parameters {
      name: "format"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives._serialization.PublicFormat"
        fully_qualified_name: "cryptography.hazmat.primitives._serialization.PublicFormat"
      }
    }
  }
  attributes {
    name: "_backend"
    fully_qualified_name: "cryptography.hazmat.backends.openssl.dh._DHPublicKey._backend"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  attributes {
    name: "_dh_cdata"
    fully_qualified_name: "cryptography.hazmat.backends.openssl.dh._DHPublicKey._dh_cdata"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  attributes {
    name: "_evp_pkey"
    fully_qualified_name: "cryptography.hazmat.backends.openssl.dh._DHPublicKey._evp_pkey"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  attributes {
    name: "_key_size_bits"
    fully_qualified_name: "cryptography.hazmat.backends.openssl.dh._DHPublicKey._key_size_bits"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
}
functions {
  name: "_dh_params_dup"
  fully_qualified_name: "cryptography.hazmat.backends.openssl.dh._dh_params_dup"
  parameters {
    name: "dh_cdata"
    kind: POSITIONAL_OR_KEYWORD
  }
  parameters {
    name: "backend"
    kind: POSITIONAL_OR_KEYWORD
  }
}
functions {
  name: "_dh_cdata_to_parameters"
  fully_qualified_name: "cryptography.hazmat.backends.openssl.dh._dh_cdata_to_parameters"
  parameters {
    name: "dh_cdata"
    kind: POSITIONAL_OR_KEYWORD
  }
  parameters {
    name: "backend"
    kind: POSITIONAL_OR_KEYWORD
  }
}
functions {
  name: "_get_dh_num_bits"
  fully_qualified_name: "cryptography.hazmat.backends.openssl.dh._get_dh_num_bits"
  return_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
  parameters {
    name: "backend"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  parameters {
    name: "dh_cdata"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
}
vars {
  name: "__annotations__"
  fully_qualified_name: "cryptography.hazmat.backends.openssl.dh.__annotations__"
  type_annotation {
    pretty_printed_name: "builtins.dict[builtins.str,Any]"
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    args {
      pretty_printed_name: "Any"
      kind: ANY
    }
    fully_qualified_name: "builtins.dict"
  }
}
