fully_qualified_name: "http.client"
classes {
  name: "HTTPMessage"
  fully_qualified_name: "http.client.HTTPMessage"
  super_classes: "email.message.Message"
  methods {
    name: "getallmatchingheaders"
    fully_qualified_name: "http.client.HTTPMessage.getallmatchingheaders"
    return_annotation {
      pretty_printed_name: "builtins.list[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "http.client.HTTPMessage"
        fully_qualified_name: "http.client.HTTPMessage"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
}
classes {
  name: "HTTPResponse"
  fully_qualified_name: "http.client.HTTPResponse"
  super_classes: "io.BufferedIOBase"
  super_classes: "typing.BinaryIO"
  methods {
    name: "__init__"
    fully_qualified_name: "http.client.HTTPResponse.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "http.client.HTTPResponse"
        fully_qualified_name: "http.client.HTTPResponse"
      }
    }
    parameters {
      name: "sock"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "socket.socket"
        fully_qualified_name: "socket.socket"
      }
    }
    parameters {
      name: "debuglevel"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "method"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "url"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "peek"
    fully_qualified_name: "http.client.HTTPResponse.peek"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "http.client.HTTPResponse"
        fully_qualified_name: "http.client.HTTPResponse"
      }
    }
    parameters {
      name: "n"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
  }
  methods {
    name: "read"
    fully_qualified_name: "http.client.HTTPResponse.read"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "http.client.HTTPResponse"
        fully_qualified_name: "http.client.HTTPResponse"
      }
    }
    parameters {
      name: "amt"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "read1"
    fully_qualified_name: "http.client.HTTPResponse.read1"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "http.client.HTTPResponse"
        fully_qualified_name: "http.client.HTTPResponse"
      }
    }
    parameters {
      name: "n"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
  }
  methods {
    name: "readinto"
    fully_qualified_name: "http.client.HTTPResponse.readinto"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "http.client.HTTPResponse"
        fully_qualified_name: "http.client.HTTPResponse"
      }
    }
    parameters {
      name: "b"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytearray"
            fully_qualified_name: "builtins.bytearray"
          }
          args {
            pretty_printed_name: "builtins.memoryview"
            fully_qualified_name: "builtins.memoryview"
          }
          args {
            pretty_printed_name: "array.array[Any]"
            args {
              pretty_printed_name: "Any"
              kind: ANY
            }
            fully_qualified_name: "array.array"
          }
          args {
            pretty_printed_name: "mmap.mmap"
            fully_qualified_name: "mmap.mmap"
          }
          args {
            pretty_printed_name: "ctypes._CData"
            fully_qualified_name: "ctypes._CData"
          }
          args {
            pretty_printed_name: "pickle.PickleBuffer"
            fully_qualified_name: "pickle.PickleBuffer"
          }
        }
        fully_qualified_name: "_typeshed.WriteableBuffer"
      }
    }
  }
  methods {
    name: "readline"
    fully_qualified_name: "http.client.HTTPResponse.readline"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "http.client.HTTPResponse"
        fully_qualified_name: "http.client.HTTPResponse"
      }
    }
    parameters {
      name: "limit"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
  }
  methods {
    name: "getheaders"
    fully_qualified_name: "http.client.HTTPResponse.getheaders"
    return_annotation {
      pretty_printed_name: "builtins.list[Tuple[builtins.str,builtins.str]]"
      args {
        pretty_printed_name: "Tuple[builtins.str,builtins.str]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "http.client.HTTPResponse"
        fully_qualified_name: "http.client.HTTPResponse"
      }
    }
  }
  methods {
    name: "isclosed"
    fully_qualified_name: "http.client.HTTPResponse.isclosed"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "http.client.HTTPResponse"
        fully_qualified_name: "http.client.HTTPResponse"
      }
    }
  }
  methods {
    name: "__iter__"
    fully_qualified_name: "http.client.HTTPResponse.__iter__"
    return_annotation {
      pretty_printed_name: "typing.Iterator[builtins.bytes]"
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "http.client.HTTPResponse"
        fully_qualified_name: "http.client.HTTPResponse"
      }
    }
  }
  methods {
    name: "__enter__"
    fully_qualified_name: "http.client.HTTPResponse.__enter__"
    return_annotation {
      pretty_printed_name: "http.client.HTTPResponse.Self"
      kind: TYPE_VAR
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "http.client.HTTPResponse.Self"
        kind: TYPE_VAR
      }
    }
  }
  methods {
    name: "__exit__"
    fully_qualified_name: "http.client.HTTPResponse.__exit__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "http.client.HTTPResponse"
        fully_qualified_name: "http.client.HTTPResponse"
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "Union[Type[builtins.BaseException],None]"
        kind: UNION
        args {
          pretty_printed_name: "Type[builtins.BaseException]"
          kind: TYPE
          args {
            pretty_printed_name: "builtins.BaseException"
            fully_qualified_name: "builtins.BaseException"
          }
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "Union[builtins.BaseException,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.BaseException"
          fully_qualified_name: "builtins.BaseException"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "Union[types.TracebackType,None]"
        kind: UNION
        args {
          pretty_printed_name: "types.TracebackType"
          fully_qualified_name: "types.TracebackType"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "info"
    fully_qualified_name: "http.client.HTTPResponse.info"
    return_annotation {
      pretty_printed_name: "email.message.Message"
      fully_qualified_name: "email.message.Message"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "http.client.HTTPResponse"
        fully_qualified_name: "http.client.HTTPResponse"
      }
    }
  }
  methods {
    name: "geturl"
    fully_qualified_name: "http.client.HTTPResponse.geturl"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "http.client.HTTPResponse"
        fully_qualified_name: "http.client.HTTPResponse"
      }
    }
  }
  methods {
    name: "getcode"
    fully_qualified_name: "http.client.HTTPResponse.getcode"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "http.client.HTTPResponse"
        fully_qualified_name: "http.client.HTTPResponse"
      }
    }
  }
  methods {
    name: "begin"
    fully_qualified_name: "http.client.HTTPResponse.begin"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "http.client.HTTPResponse"
        fully_qualified_name: "http.client.HTTPResponse"
      }
    }
  }
  overloaded_methods {
    name: "getheader"
    fullname: "http.client.HTTPResponse.getheader"
    definitions {
      name: "getheader"
      fully_qualified_name: "http.client.HTTPResponse.getheader"
      return_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "http.client.HTTPResponse"
          fully_qualified_name: "http.client.HTTPResponse"
        }
      }
      parameters {
        name: "name"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "getheader"
      fully_qualified_name: "http.client.HTTPResponse.getheader"
      return_annotation {
        pretty_printed_name: "Union[builtins.str,http.client._T]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "http.client._T"
          kind: TYPE_VAR
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "http.client.HTTPResponse"
          fully_qualified_name: "http.client.HTTPResponse"
        }
      }
      parameters {
        name: "name"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      parameters {
        name: "default"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "http.client._T"
          kind: TYPE_VAR
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
  }
  attributes {
    name: "msg"
    fully_qualified_name: "http.client.HTTPResponse.msg"
    type_annotation {
      pretty_printed_name: "http.client.HTTPMessage"
      fully_qualified_name: "http.client.HTTPMessage"
    }
  }
  attributes {
    name: "headers"
    fully_qualified_name: "http.client.HTTPResponse.headers"
    type_annotation {
      pretty_printed_name: "http.client.HTTPMessage"
      fully_qualified_name: "http.client.HTTPMessage"
    }
  }
  attributes {
    name: "version"
    fully_qualified_name: "http.client.HTTPResponse.version"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  attributes {
    name: "debuglevel"
    fully_qualified_name: "http.client.HTTPResponse.debuglevel"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  attributes {
    name: "fp"
    fully_qualified_name: "http.client.HTTPResponse.fp"
    type_annotation {
      pretty_printed_name: "io.BufferedReader"
      fully_qualified_name: "io.BufferedReader"
    }
  }
  attributes {
    name: "closed"
    fully_qualified_name: "http.client.HTTPResponse.closed"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
  attributes {
    name: "status"
    fully_qualified_name: "http.client.HTTPResponse.status"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  attributes {
    name: "reason"
    fully_qualified_name: "http.client.HTTPResponse.reason"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  attributes {
    name: "chunked"
    fully_qualified_name: "http.client.HTTPResponse.chunked"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
  attributes {
    name: "chunk_left"
    fully_qualified_name: "http.client.HTTPResponse.chunk_left"
    type_annotation {
      pretty_printed_name: "Union[builtins.int,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  attributes {
    name: "length"
    fully_qualified_name: "http.client.HTTPResponse.length"
    type_annotation {
      pretty_printed_name: "Union[builtins.int,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  attributes {
    name: "will_close"
    fully_qualified_name: "http.client.HTTPResponse.will_close"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
}
classes {
  name: "HTTPConnection"
  fully_qualified_name: "http.client.HTTPConnection"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "http.client.HTTPConnection.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "http.client.HTTPConnection"
        fully_qualified_name: "http.client.HTTPConnection"
      }
    }
    parameters {
      name: "host"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "port"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "timeout"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.float,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "source_address"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Tuple[builtins.str,builtins.int],None]"
        kind: UNION
        args {
          pretty_printed_name: "Tuple[builtins.str,builtins.int]"
          kind: TUPLE
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "blocksize"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
  }
  methods {
    name: "request"
    fully_qualified_name: "http.client.HTTPConnection.request"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "http.client.HTTPConnection"
        fully_qualified_name: "http.client.HTTPConnection"
      }
    }
    parameters {
      name: "method"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "url"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "body"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[TypeAlias[Union[_typeshed.SupportsRead[builtins.bytes],typing.Iterable[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]],TypeAlias[Unknown]]],builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "TypeAlias[Union[_typeshed.SupportsRead[builtins.bytes],typing.Iterable[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]],TypeAlias[Unknown]]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[_typeshed.SupportsRead[builtins.bytes],typing.Iterable[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]],TypeAlias[Unknown]]"
            kind: UNION
            args {
              pretty_printed_name: "_typeshed.SupportsRead[builtins.bytes]"
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              fully_qualified_name: "_typeshed.SupportsRead"
            }
            args {
              pretty_printed_name: "typing.Iterable[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]]"
              args {
                pretty_printed_name: "TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]"
                kind: TYPE_ALIAS
                args {
                  pretty_printed_name: "Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]"
                  kind: UNION
                  args {
                    pretty_printed_name: "builtins.bytes"
                    fully_qualified_name: "builtins.bytes"
                  }
                  args {
                    pretty_printed_name: "TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]"
                    kind: TYPE_ALIAS
                    args {
                      pretty_printed_name: "Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]"
                      kind: UNION
                      args {
                        pretty_printed_name: "builtins.bytearray"
                        fully_qualified_name: "builtins.bytearray"
                      }
                      args {
                        pretty_printed_name: "builtins.memoryview"
                        fully_qualified_name: "builtins.memoryview"
                      }
                      args {
                        pretty_printed_name: "array.array[Any]"
                        args {
                          pretty_printed_name: "Any"
                          kind: ANY
                        }
                        fully_qualified_name: "array.array"
                      }
                      args {
                        pretty_printed_name: "mmap.mmap"
                        fully_qualified_name: "mmap.mmap"
                      }
                      args {
                        pretty_printed_name: "ctypes._CData"
                        fully_qualified_name: "ctypes._CData"
                      }
                      args {
                        pretty_printed_name: "pickle.PickleBuffer"
                        fully_qualified_name: "pickle.PickleBuffer"
                      }
                    }
                    fully_qualified_name: "_typeshed.WriteableBuffer"
                  }
                }
                fully_qualified_name: "_typeshed.ReadableBuffer"
              }
              fully_qualified_name: "typing.Iterable"
            }
            args {
              pretty_printed_name: "TypeAlias[Unknown]"
              kind: TYPE_ALIAS
            }
          }
          fully_qualified_name: "http.client._DataType"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "headers"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Mapping[builtins.str,builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "typing.Mapping"
      }
    }
    parameters {
      name: "encode_chunked"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
  }
  methods {
    name: "getresponse"
    fully_qualified_name: "http.client.HTTPConnection.getresponse"
    return_annotation {
      pretty_printed_name: "http.client.HTTPResponse"
      fully_qualified_name: "http.client.HTTPResponse"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "http.client.HTTPConnection"
        fully_qualified_name: "http.client.HTTPConnection"
      }
    }
  }
  methods {
    name: "set_debuglevel"
    fully_qualified_name: "http.client.HTTPConnection.set_debuglevel"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "http.client.HTTPConnection"
        fully_qualified_name: "http.client.HTTPConnection"
      }
    }
    parameters {
      name: "level"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
  }
  methods {
    name: "set_tunnel"
    fully_qualified_name: "http.client.HTTPConnection.set_tunnel"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "http.client.HTTPConnection"
        fully_qualified_name: "http.client.HTTPConnection"
      }
    }
    parameters {
      name: "host"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "port"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "headers"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.Mapping[builtins.str,builtins.str],None]"
        kind: UNION
        args {
          pretty_printed_name: "typing.Mapping[builtins.str,builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "typing.Mapping"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "connect"
    fully_qualified_name: "http.client.HTTPConnection.connect"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "http.client.HTTPConnection"
        fully_qualified_name: "http.client.HTTPConnection"
      }
    }
  }
  methods {
    name: "close"
    fully_qualified_name: "http.client.HTTPConnection.close"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "http.client.HTTPConnection"
        fully_qualified_name: "http.client.HTTPConnection"
      }
    }
  }
  methods {
    name: "putrequest"
    fully_qualified_name: "http.client.HTTPConnection.putrequest"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "http.client.HTTPConnection"
        fully_qualified_name: "http.client.HTTPConnection"
      }
    }
    parameters {
      name: "method"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "url"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "skip_host"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    parameters {
      name: "skip_accept_encoding"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
  }
  methods {
    name: "putheader"
    fully_qualified_name: "http.client.HTTPConnection.putheader"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "http.client.HTTPConnection"
        fully_qualified_name: "http.client.HTTPConnection"
      }
    }
    parameters {
      name: "header"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "argument"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  methods {
    name: "endheaders"
    fully_qualified_name: "http.client.HTTPConnection.endheaders"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "http.client.HTTPConnection"
        fully_qualified_name: "http.client.HTTPConnection"
      }
    }
    parameters {
      name: "message_body"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[TypeAlias[Union[_typeshed.SupportsRead[builtins.bytes],typing.Iterable[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]],TypeAlias[Unknown]]],None]"
        kind: UNION
        args {
          pretty_printed_name: "TypeAlias[Union[_typeshed.SupportsRead[builtins.bytes],typing.Iterable[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]],TypeAlias[Unknown]]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[_typeshed.SupportsRead[builtins.bytes],typing.Iterable[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]],TypeAlias[Unknown]]"
            kind: UNION
            args {
              pretty_printed_name: "_typeshed.SupportsRead[builtins.bytes]"
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              fully_qualified_name: "_typeshed.SupportsRead"
            }
            args {
              pretty_printed_name: "typing.Iterable[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]]"
              args {
                pretty_printed_name: "TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]"
                kind: TYPE_ALIAS
                args {
                  pretty_printed_name: "Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]"
                  kind: UNION
                  args {
                    pretty_printed_name: "builtins.bytes"
                    fully_qualified_name: "builtins.bytes"
                  }
                  args {
                    pretty_printed_name: "TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]"
                    kind: TYPE_ALIAS
                    args {
                      pretty_printed_name: "Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]"
                      kind: UNION
                      args {
                        pretty_printed_name: "builtins.bytearray"
                        fully_qualified_name: "builtins.bytearray"
                      }
                      args {
                        pretty_printed_name: "builtins.memoryview"
                        fully_qualified_name: "builtins.memoryview"
                      }
                      args {
                        pretty_printed_name: "array.array[Any]"
                        args {
                          pretty_printed_name: "Any"
                          kind: ANY
                        }
                        fully_qualified_name: "array.array"
                      }
                      args {
                        pretty_printed_name: "mmap.mmap"
                        fully_qualified_name: "mmap.mmap"
                      }
                      args {
                        pretty_printed_name: "ctypes._CData"
                        fully_qualified_name: "ctypes._CData"
                      }
                      args {
                        pretty_printed_name: "pickle.PickleBuffer"
                        fully_qualified_name: "pickle.PickleBuffer"
                      }
                    }
                    fully_qualified_name: "_typeshed.WriteableBuffer"
                  }
                }
                fully_qualified_name: "_typeshed.ReadableBuffer"
              }
              fully_qualified_name: "typing.Iterable"
            }
            args {
              pretty_printed_name: "TypeAlias[Unknown]"
              kind: TYPE_ALIAS
            }
          }
          fully_qualified_name: "http.client._DataType"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "encode_chunked"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
  }
  methods {
    name: "send"
    fully_qualified_name: "http.client.HTTPConnection.send"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "http.client.HTTPConnection"
        fully_qualified_name: "http.client.HTTPConnection"
      }
    }
    parameters {
      name: "data"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[TypeAlias[Union[_typeshed.SupportsRead[builtins.bytes],typing.Iterable[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]],TypeAlias[Unknown]]],builtins.str]"
        kind: UNION
        args {
          pretty_printed_name: "TypeAlias[Union[_typeshed.SupportsRead[builtins.bytes],typing.Iterable[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]],TypeAlias[Unknown]]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[_typeshed.SupportsRead[builtins.bytes],typing.Iterable[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]],TypeAlias[Unknown]]"
            kind: UNION
            args {
              pretty_printed_name: "_typeshed.SupportsRead[builtins.bytes]"
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              fully_qualified_name: "_typeshed.SupportsRead"
            }
            args {
              pretty_printed_name: "typing.Iterable[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]]"
              args {
                pretty_printed_name: "TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]"
                kind: TYPE_ALIAS
                args {
                  pretty_printed_name: "Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]"
                  kind: UNION
                  args {
                    pretty_printed_name: "builtins.bytes"
                    fully_qualified_name: "builtins.bytes"
                  }
                  args {
                    pretty_printed_name: "TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]"
                    kind: TYPE_ALIAS
                    args {
                      pretty_printed_name: "Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]"
                      kind: UNION
                      args {
                        pretty_printed_name: "builtins.bytearray"
                        fully_qualified_name: "builtins.bytearray"
                      }
                      args {
                        pretty_printed_name: "builtins.memoryview"
                        fully_qualified_name: "builtins.memoryview"
                      }
                      args {
                        pretty_printed_name: "array.array[Any]"
                        args {
                          pretty_printed_name: "Any"
                          kind: ANY
                        }
                        fully_qualified_name: "array.array"
                      }
                      args {
                        pretty_printed_name: "mmap.mmap"
                        fully_qualified_name: "mmap.mmap"
                      }
                      args {
                        pretty_printed_name: "ctypes._CData"
                        fully_qualified_name: "ctypes._CData"
                      }
                      args {
                        pretty_printed_name: "pickle.PickleBuffer"
                        fully_qualified_name: "pickle.PickleBuffer"
                      }
                    }
                    fully_qualified_name: "_typeshed.WriteableBuffer"
                  }
                }
                fully_qualified_name: "_typeshed.ReadableBuffer"
              }
              fully_qualified_name: "typing.Iterable"
            }
            args {
              pretty_printed_name: "TypeAlias[Unknown]"
              kind: TYPE_ALIAS
            }
          }
          fully_qualified_name: "http.client._DataType"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
    }
  }
  attributes {
    name: "auto_open"
    fully_qualified_name: "http.client.HTTPConnection.auto_open"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  attributes {
    name: "debuglevel"
    fully_qualified_name: "http.client.HTTPConnection.debuglevel"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  attributes {
    name: "default_port"
    fully_qualified_name: "http.client.HTTPConnection.default_port"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  attributes {
    name: "response_class"
    fully_qualified_name: "http.client.HTTPConnection.response_class"
    type_annotation {
      pretty_printed_name: "Type[http.client.HTTPResponse]"
      kind: TYPE
      args {
        pretty_printed_name: "http.client.HTTPResponse"
        fully_qualified_name: "http.client.HTTPResponse"
      }
    }
  }
  attributes {
    name: "timeout"
    fully_qualified_name: "http.client.HTTPConnection.timeout"
    type_annotation {
      pretty_printed_name: "Union[builtins.float,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  attributes {
    name: "host"
    fully_qualified_name: "http.client.HTTPConnection.host"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  attributes {
    name: "port"
    fully_qualified_name: "http.client.HTTPConnection.port"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  attributes {
    name: "sock"
    fully_qualified_name: "http.client.HTTPConnection.sock"
    type_annotation {
      pretty_printed_name: "Union[socket.socket,Any]"
      kind: UNION
      args {
        pretty_printed_name: "socket.socket"
        fully_qualified_name: "socket.socket"
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
  }
}
classes {
  name: "HTTPSConnection"
  fully_qualified_name: "http.client.HTTPSConnection"
  super_classes: "http.client.HTTPConnection"
  methods {
    name: "__init__"
    fully_qualified_name: "http.client.HTTPSConnection.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "http.client.HTTPSConnection"
        fully_qualified_name: "http.client.HTTPSConnection"
      }
    }
    parameters {
      name: "host"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "port"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "key_file"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "cert_file"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "timeout"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.float,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "source_address"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Tuple[builtins.str,builtins.int],None]"
        kind: UNION
        args {
          pretty_printed_name: "Tuple[builtins.str,builtins.int]"
          kind: TUPLE
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "context"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[ssl.SSLContext,None]"
        kind: UNION
        args {
          pretty_printed_name: "ssl.SSLContext"
          fully_qualified_name: "ssl.SSLContext"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "check_hostname"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.bool,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "blocksize"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
  }
  attributes {
    name: "sock"
    fully_qualified_name: "http.client.HTTPSConnection.sock"
    type_annotation {
      pretty_printed_name: "Union[ssl.SSLSocket,Any]"
      kind: UNION
      args {
        pretty_printed_name: "ssl.SSLSocket"
        fully_qualified_name: "ssl.SSLSocket"
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
  }
}
classes {
  name: "HTTPException"
  fully_qualified_name: "http.client.HTTPException"
  super_classes: "builtins.Exception"
}
classes {
  name: "NotConnected"
  fully_qualified_name: "http.client.NotConnected"
  super_classes: "http.client.HTTPException"
}
classes {
  name: "InvalidURL"
  fully_qualified_name: "http.client.InvalidURL"
  super_classes: "http.client.HTTPException"
}
classes {
  name: "UnknownProtocol"
  fully_qualified_name: "http.client.UnknownProtocol"
  super_classes: "http.client.HTTPException"
  methods {
    name: "__init__"
    fully_qualified_name: "http.client.UnknownProtocol.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "http.client.UnknownProtocol"
        fully_qualified_name: "http.client.UnknownProtocol"
      }
    }
    parameters {
      name: "version"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
}
classes {
  name: "UnknownTransferEncoding"
  fully_qualified_name: "http.client.UnknownTransferEncoding"
  super_classes: "http.client.HTTPException"
}
classes {
  name: "UnimplementedFileMode"
  fully_qualified_name: "http.client.UnimplementedFileMode"
  super_classes: "http.client.HTTPException"
}
classes {
  name: "IncompleteRead"
  fully_qualified_name: "http.client.IncompleteRead"
  super_classes: "http.client.HTTPException"
  methods {
    name: "__init__"
    fully_qualified_name: "http.client.IncompleteRead.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "http.client.IncompleteRead"
        fully_qualified_name: "http.client.IncompleteRead"
      }
    }
    parameters {
      name: "partial"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    parameters {
      name: "expected"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  attributes {
    name: "partial"
    fully_qualified_name: "http.client.IncompleteRead.partial"
    type_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
  }
  attributes {
    name: "expected"
    fully_qualified_name: "http.client.IncompleteRead.expected"
    type_annotation {
      pretty_printed_name: "Union[builtins.int,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
}
classes {
  name: "ImproperConnectionState"
  fully_qualified_name: "http.client.ImproperConnectionState"
  super_classes: "http.client.HTTPException"
}
classes {
  name: "CannotSendRequest"
  fully_qualified_name: "http.client.CannotSendRequest"
  super_classes: "http.client.ImproperConnectionState"
}
classes {
  name: "CannotSendHeader"
  fully_qualified_name: "http.client.CannotSendHeader"
  super_classes: "http.client.ImproperConnectionState"
}
classes {
  name: "ResponseNotReady"
  fully_qualified_name: "http.client.ResponseNotReady"
  super_classes: "http.client.ImproperConnectionState"
}
classes {
  name: "BadStatusLine"
  fully_qualified_name: "http.client.BadStatusLine"
  super_classes: "http.client.HTTPException"
  methods {
    name: "__init__"
    fully_qualified_name: "http.client.BadStatusLine.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "http.client.BadStatusLine"
        fully_qualified_name: "http.client.BadStatusLine"
      }
    }
    parameters {
      name: "line"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
}
classes {
  name: "LineTooLong"
  fully_qualified_name: "http.client.LineTooLong"
  super_classes: "http.client.HTTPException"
  methods {
    name: "__init__"
    fully_qualified_name: "http.client.LineTooLong.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "http.client.LineTooLong"
        fully_qualified_name: "http.client.LineTooLong"
      }
    }
    parameters {
      name: "line_type"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
}
classes {
  name: "RemoteDisconnected"
  fully_qualified_name: "http.client.RemoteDisconnected"
  super_classes: "builtins.ConnectionResetError"
  super_classes: "http.client.BadStatusLine"
}
functions {
  name: "parse_headers"
  fully_qualified_name: "http.client.parse_headers"
  return_annotation {
    pretty_printed_name: "http.client.HTTPMessage"
    fully_qualified_name: "http.client.HTTPMessage"
  }
  parameters {
    name: "fp"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "io.BufferedIOBase"
      fully_qualified_name: "io.BufferedIOBase"
    }
  }
  parameters {
    name: "_class"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "CallableType[builtins.function]"
      kind: CALLABLE
      args {
        pretty_printed_name: "builtins.function"
        fully_qualified_name: "builtins.function"
      }
    }
  }
}
vars {
  name: "__annotations__"
  fully_qualified_name: "http.client.__annotations__"
  type_annotation {
    pretty_printed_name: "builtins.dict[builtins.str,Any]"
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    args {
      pretty_printed_name: "Any"
      kind: ANY
    }
    fully_qualified_name: "builtins.dict"
  }
}
vars {
  name: "email"
  fully_qualified_name: "email"
  is_imported_module: true
}
vars {
  name: "__all__"
  fully_qualified_name: "http.client.__all__"
  type_annotation {
    pretty_printed_name: "builtins.list[builtins.str]"
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    fully_qualified_name: "builtins.list"
  }
}
vars {
  name: "HTTP_PORT"
  fully_qualified_name: "http.client.HTTP_PORT"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "HTTPS_PORT"
  fully_qualified_name: "http.client.HTTPS_PORT"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "CONTINUE"
  fully_qualified_name: "http.client.CONTINUE"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "SWITCHING_PROTOCOLS"
  fully_qualified_name: "http.client.SWITCHING_PROTOCOLS"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "PROCESSING"
  fully_qualified_name: "http.client.PROCESSING"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "OK"
  fully_qualified_name: "http.client.OK"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "CREATED"
  fully_qualified_name: "http.client.CREATED"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "ACCEPTED"
  fully_qualified_name: "http.client.ACCEPTED"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "NON_AUTHORITATIVE_INFORMATION"
  fully_qualified_name: "http.client.NON_AUTHORITATIVE_INFORMATION"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "NO_CONTENT"
  fully_qualified_name: "http.client.NO_CONTENT"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "RESET_CONTENT"
  fully_qualified_name: "http.client.RESET_CONTENT"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "PARTIAL_CONTENT"
  fully_qualified_name: "http.client.PARTIAL_CONTENT"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "MULTI_STATUS"
  fully_qualified_name: "http.client.MULTI_STATUS"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "IM_USED"
  fully_qualified_name: "http.client.IM_USED"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "MULTIPLE_CHOICES"
  fully_qualified_name: "http.client.MULTIPLE_CHOICES"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "MOVED_PERMANENTLY"
  fully_qualified_name: "http.client.MOVED_PERMANENTLY"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "FOUND"
  fully_qualified_name: "http.client.FOUND"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "SEE_OTHER"
  fully_qualified_name: "http.client.SEE_OTHER"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "NOT_MODIFIED"
  fully_qualified_name: "http.client.NOT_MODIFIED"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "USE_PROXY"
  fully_qualified_name: "http.client.USE_PROXY"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "TEMPORARY_REDIRECT"
  fully_qualified_name: "http.client.TEMPORARY_REDIRECT"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "BAD_REQUEST"
  fully_qualified_name: "http.client.BAD_REQUEST"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "UNAUTHORIZED"
  fully_qualified_name: "http.client.UNAUTHORIZED"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "PAYMENT_REQUIRED"
  fully_qualified_name: "http.client.PAYMENT_REQUIRED"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "FORBIDDEN"
  fully_qualified_name: "http.client.FORBIDDEN"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "NOT_FOUND"
  fully_qualified_name: "http.client.NOT_FOUND"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "METHOD_NOT_ALLOWED"
  fully_qualified_name: "http.client.METHOD_NOT_ALLOWED"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "NOT_ACCEPTABLE"
  fully_qualified_name: "http.client.NOT_ACCEPTABLE"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "PROXY_AUTHENTICATION_REQUIRED"
  fully_qualified_name: "http.client.PROXY_AUTHENTICATION_REQUIRED"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "REQUEST_TIMEOUT"
  fully_qualified_name: "http.client.REQUEST_TIMEOUT"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "CONFLICT"
  fully_qualified_name: "http.client.CONFLICT"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "GONE"
  fully_qualified_name: "http.client.GONE"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "LENGTH_REQUIRED"
  fully_qualified_name: "http.client.LENGTH_REQUIRED"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "PRECONDITION_FAILED"
  fully_qualified_name: "http.client.PRECONDITION_FAILED"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "REQUEST_ENTITY_TOO_LARGE"
  fully_qualified_name: "http.client.REQUEST_ENTITY_TOO_LARGE"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "REQUEST_URI_TOO_LONG"
  fully_qualified_name: "http.client.REQUEST_URI_TOO_LONG"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "UNSUPPORTED_MEDIA_TYPE"
  fully_qualified_name: "http.client.UNSUPPORTED_MEDIA_TYPE"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "REQUESTED_RANGE_NOT_SATISFIABLE"
  fully_qualified_name: "http.client.REQUESTED_RANGE_NOT_SATISFIABLE"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "EXPECTATION_FAILED"
  fully_qualified_name: "http.client.EXPECTATION_FAILED"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "UNPROCESSABLE_ENTITY"
  fully_qualified_name: "http.client.UNPROCESSABLE_ENTITY"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "LOCKED"
  fully_qualified_name: "http.client.LOCKED"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "FAILED_DEPENDENCY"
  fully_qualified_name: "http.client.FAILED_DEPENDENCY"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "UPGRADE_REQUIRED"
  fully_qualified_name: "http.client.UPGRADE_REQUIRED"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "PRECONDITION_REQUIRED"
  fully_qualified_name: "http.client.PRECONDITION_REQUIRED"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "TOO_MANY_REQUESTS"
  fully_qualified_name: "http.client.TOO_MANY_REQUESTS"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "REQUEST_HEADER_FIELDS_TOO_LARGE"
  fully_qualified_name: "http.client.REQUEST_HEADER_FIELDS_TOO_LARGE"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "INTERNAL_SERVER_ERROR"
  fully_qualified_name: "http.client.INTERNAL_SERVER_ERROR"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "NOT_IMPLEMENTED"
  fully_qualified_name: "http.client.NOT_IMPLEMENTED"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "BAD_GATEWAY"
  fully_qualified_name: "http.client.BAD_GATEWAY"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "SERVICE_UNAVAILABLE"
  fully_qualified_name: "http.client.SERVICE_UNAVAILABLE"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "GATEWAY_TIMEOUT"
  fully_qualified_name: "http.client.GATEWAY_TIMEOUT"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "HTTP_VERSION_NOT_SUPPORTED"
  fully_qualified_name: "http.client.HTTP_VERSION_NOT_SUPPORTED"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "INSUFFICIENT_STORAGE"
  fully_qualified_name: "http.client.INSUFFICIENT_STORAGE"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "NOT_EXTENDED"
  fully_qualified_name: "http.client.NOT_EXTENDED"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "NETWORK_AUTHENTICATION_REQUIRED"
  fully_qualified_name: "http.client.NETWORK_AUTHENTICATION_REQUIRED"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "responses"
  fully_qualified_name: "http.client.responses"
  type_annotation {
    pretty_printed_name: "builtins.dict[builtins.int,builtins.str]"
    args {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    fully_qualified_name: "builtins.dict"
  }
}
