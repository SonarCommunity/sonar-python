fully_qualified_name: "urllib.request"
classes {
  name: "HTTPError"
  fully_qualified_name: "urllib.error.HTTPError"
  super_classes: "urllib.error.URLError"
  super_classes: "urllib.response.addinfourl"
  methods {
    name: "reason"
    fully_qualified_name: "urllib.error.HTTPError.reason"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.error.HTTPError"
        fully_qualified_name: "urllib.error.HTTPError"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "__init__"
    fully_qualified_name: "urllib.error.HTTPError.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.error.HTTPError"
        fully_qualified_name: "urllib.error.HTTPError"
      }
    }
    parameters {
      name: "url"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "code"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "msg"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "hdrs"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "email.message.Message"
        fully_qualified_name: "email.message.Message"
      }
    }
    parameters {
      name: "fp"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.IO[builtins.bytes],None]"
        kind: UNION
        args {
          pretty_printed_name: "typing.IO[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "typing.IO"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  overloaded_methods {
    name: "headers"
    fullname: "urllib.error.HTTPError.headers"
    definitions {
      name: "headers"
      fully_qualified_name: "urllib.error.HTTPError.headers"
      return_annotation {
        pretty_printed_name: "email.message.Message"
        fully_qualified_name: "email.message.Message"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "urllib.error.HTTPError"
          fully_qualified_name: "urllib.error.HTTPError"
        }
      }
      has_decorators: true
      resolved_decorator_names: "property"
      is_overload: true
      is_property: true
    }
    definitions {
      name: "headers"
      fully_qualified_name: "urllib.error.HTTPError.headers"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "urllib.error.HTTPError"
          fully_qualified_name: "urllib.error.HTTPError"
        }
      }
      parameters {
        name: "headers"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "email.message.Message"
          fully_qualified_name: "email.message.Message"
        }
      }
      has_decorators: true
      resolved_decorator_names: "headers.setter"
    }
  }
  attributes {
    name: "code"
    fully_qualified_name: "urllib.error.HTTPError.code"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
}
classes {
  name: "Request"
  fully_qualified_name: "urllib.request.Request"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "urllib.request.Request.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.Request"
        fully_qualified_name: "urllib.request.Request"
      }
    }
    parameters {
      name: "url"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "data"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],_typeshed.SupportsRead[builtins.bytes],typing.Iterable[builtins.bytes],None]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],_typeshed.SupportsRead[builtins.bytes],typing.Iterable[builtins.bytes],None]"
          kind: UNION
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              args {
                pretty_printed_name: "TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]"
                kind: TYPE_ALIAS
                args {
                  pretty_printed_name: "Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]"
                  kind: UNION
                  args {
                    pretty_printed_name: "builtins.bytearray"
                    fully_qualified_name: "builtins.bytearray"
                  }
                  args {
                    pretty_printed_name: "builtins.memoryview"
                    fully_qualified_name: "builtins.memoryview"
                  }
                  args {
                    pretty_printed_name: "array.array[Any]"
                    args {
                      pretty_printed_name: "Any"
                      kind: ANY
                    }
                    fully_qualified_name: "array.array"
                  }
                  args {
                    pretty_printed_name: "mmap.mmap"
                    fully_qualified_name: "mmap.mmap"
                  }
                  args {
                    pretty_printed_name: "ctypes._CData"
                    fully_qualified_name: "ctypes._CData"
                  }
                  args {
                    pretty_printed_name: "pickle.PickleBuffer"
                    fully_qualified_name: "pickle.PickleBuffer"
                  }
                }
                fully_qualified_name: "_typeshed.WriteableBuffer"
              }
            }
            fully_qualified_name: "_typeshed.ReadableBuffer"
          }
          args {
            pretty_printed_name: "_typeshed.SupportsRead[builtins.bytes]"
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            fully_qualified_name: "_typeshed.SupportsRead"
          }
          args {
            pretty_printed_name: "typing.Iterable[builtins.bytes]"
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            fully_qualified_name: "typing.Iterable"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        fully_qualified_name: "urllib.request._DataType"
      }
    }
    parameters {
      name: "headers"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.MutableMapping[builtins.str,builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "typing.MutableMapping"
      }
    }
    parameters {
      name: "origin_req_host"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "unverifiable"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    parameters {
      name: "method"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "get_method"
    fully_qualified_name: "urllib.request.Request.get_method"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.Request"
        fully_qualified_name: "urllib.request.Request"
      }
    }
  }
  methods {
    name: "add_header"
    fully_qualified_name: "urllib.request.Request.add_header"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.Request"
        fully_qualified_name: "urllib.request.Request"
      }
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "val"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  methods {
    name: "add_unredirected_header"
    fully_qualified_name: "urllib.request.Request.add_unredirected_header"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.Request"
        fully_qualified_name: "urllib.request.Request"
      }
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "val"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  methods {
    name: "has_header"
    fully_qualified_name: "urllib.request.Request.has_header"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.Request"
        fully_qualified_name: "urllib.request.Request"
      }
    }
    parameters {
      name: "header_name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  methods {
    name: "remove_header"
    fully_qualified_name: "urllib.request.Request.remove_header"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.Request"
        fully_qualified_name: "urllib.request.Request"
      }
    }
    parameters {
      name: "header_name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  methods {
    name: "get_full_url"
    fully_qualified_name: "urllib.request.Request.get_full_url"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.Request"
        fully_qualified_name: "urllib.request.Request"
      }
    }
  }
  methods {
    name: "set_proxy"
    fully_qualified_name: "urllib.request.Request.set_proxy"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.Request"
        fully_qualified_name: "urllib.request.Request"
      }
    }
    parameters {
      name: "host"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "type"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  methods {
    name: "header_items"
    fully_qualified_name: "urllib.request.Request.header_items"
    return_annotation {
      pretty_printed_name: "builtins.list[Tuple[builtins.str,builtins.str]]"
      args {
        pretty_printed_name: "Tuple[builtins.str,builtins.str]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.Request"
        fully_qualified_name: "urllib.request.Request"
      }
    }
  }
  methods {
    name: "has_proxy"
    fully_qualified_name: "urllib.request.Request.has_proxy"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.Request"
        fully_qualified_name: "urllib.request.Request"
      }
    }
  }
  overloaded_methods {
    name: "full_url"
    fullname: "urllib.request.Request.full_url"
    definitions {
      name: "full_url"
      fully_qualified_name: "urllib.request.Request.full_url"
      return_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "urllib.request.Request"
          fully_qualified_name: "urllib.request.Request"
        }
      }
      has_decorators: true
      resolved_decorator_names: "property"
      is_overload: true
      is_property: true
    }
    definitions {
      name: "full_url"
      fully_qualified_name: "urllib.request.Request.full_url"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "urllib.request.Request"
          fully_qualified_name: "urllib.request.Request"
        }
      }
      parameters {
        name: "value"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      has_decorators: true
      resolved_decorator_names: "full_url.setter"
    }
    definitions {
      name: "full_url"
      fully_qualified_name: "urllib.request.Request.full_url"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "urllib.request.Request"
          fully_qualified_name: "urllib.request.Request"
        }
      }
      has_decorators: true
      resolved_decorator_names: "full_url.deleter"
    }
  }
  overloaded_methods {
    name: "get_header"
    fullname: "urllib.request.Request.get_header"
    definitions {
      name: "get_header"
      fully_qualified_name: "urllib.request.Request.get_header"
      return_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "urllib.request.Request"
          fully_qualified_name: "urllib.request.Request"
        }
      }
      parameters {
        name: "header_name"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "get_header"
      fully_qualified_name: "urllib.request.Request.get_header"
      return_annotation {
        pretty_printed_name: "Union[builtins.str,urllib.request._T]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "urllib.request._T"
          kind: TYPE_VAR
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "urllib.request.Request"
          fully_qualified_name: "urllib.request.Request"
        }
      }
      parameters {
        name: "header_name"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      parameters {
        name: "default"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "urllib.request._T"
          kind: TYPE_VAR
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
  }
  attributes {
    name: "type"
    fully_qualified_name: "urllib.request.Request.type"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  attributes {
    name: "host"
    fully_qualified_name: "urllib.request.Request.host"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  attributes {
    name: "origin_req_host"
    fully_qualified_name: "urllib.request.Request.origin_req_host"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  attributes {
    name: "selector"
    fully_qualified_name: "urllib.request.Request.selector"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  attributes {
    name: "data"
    fully_qualified_name: "urllib.request.Request.data"
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],_typeshed.SupportsRead[builtins.bytes],typing.Iterable[builtins.bytes],None]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],_typeshed.SupportsRead[builtins.bytes],typing.Iterable[builtins.bytes],None]"
        kind: UNION
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]"
              kind: TYPE_ALIAS
              args {
                pretty_printed_name: "Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]"
                kind: UNION
                args {
                  pretty_printed_name: "builtins.bytearray"
                  fully_qualified_name: "builtins.bytearray"
                }
                args {
                  pretty_printed_name: "builtins.memoryview"
                  fully_qualified_name: "builtins.memoryview"
                }
                args {
                  pretty_printed_name: "array.array[Any]"
                  args {
                    pretty_printed_name: "Any"
                    kind: ANY
                  }
                  fully_qualified_name: "array.array"
                }
                args {
                  pretty_printed_name: "mmap.mmap"
                  fully_qualified_name: "mmap.mmap"
                }
                args {
                  pretty_printed_name: "ctypes._CData"
                  fully_qualified_name: "ctypes._CData"
                }
                args {
                  pretty_printed_name: "pickle.PickleBuffer"
                  fully_qualified_name: "pickle.PickleBuffer"
                }
              }
              fully_qualified_name: "_typeshed.WriteableBuffer"
            }
          }
          fully_qualified_name: "_typeshed.ReadableBuffer"
        }
        args {
          pretty_printed_name: "_typeshed.SupportsRead[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "_typeshed.SupportsRead"
        }
        args {
          pretty_printed_name: "typing.Iterable[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "typing.Iterable"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      fully_qualified_name: "urllib.request._DataType"
    }
  }
  attributes {
    name: "headers"
    fully_qualified_name: "urllib.request.Request.headers"
    type_annotation {
      pretty_printed_name: "typing.MutableMapping[builtins.str,builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "typing.MutableMapping"
    }
  }
  attributes {
    name: "unredirected_hdrs"
    fully_qualified_name: "urllib.request.Request.unredirected_hdrs"
    type_annotation {
      pretty_printed_name: "builtins.dict[builtins.str,builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "builtins.dict"
    }
  }
  attributes {
    name: "unverifiable"
    fully_qualified_name: "urllib.request.Request.unverifiable"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
  attributes {
    name: "method"
    fully_qualified_name: "urllib.request.Request.method"
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  attributes {
    name: "timeout"
    fully_qualified_name: "urllib.request.Request.timeout"
    type_annotation {
      pretty_printed_name: "Union[builtins.float,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
}
classes {
  name: "OpenerDirector"
  fully_qualified_name: "urllib.request.OpenerDirector"
  super_classes: "builtins.object"
  methods {
    name: "add_handler"
    fully_qualified_name: "urllib.request.OpenerDirector.add_handler"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.OpenerDirector"
        fully_qualified_name: "urllib.request.OpenerDirector"
      }
    }
    parameters {
      name: "handler"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.BaseHandler"
        fully_qualified_name: "urllib.request.BaseHandler"
      }
    }
  }
  methods {
    name: "open"
    fully_qualified_name: "urllib.request.OpenerDirector.open"
    return_annotation {
      pretty_printed_name: "TypeAlias[Any]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "urllib.request._UrlopenRet"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.OpenerDirector"
        fully_qualified_name: "urllib.request.OpenerDirector"
      }
    }
    parameters {
      name: "fullurl"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,urllib.request.Request]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "urllib.request.Request"
          fully_qualified_name: "urllib.request.Request"
        }
      }
    }
    parameters {
      name: "data"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],_typeshed.SupportsRead[builtins.bytes],typing.Iterable[builtins.bytes],None]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],_typeshed.SupportsRead[builtins.bytes],typing.Iterable[builtins.bytes],None]"
          kind: UNION
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              args {
                pretty_printed_name: "TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]"
                kind: TYPE_ALIAS
                args {
                  pretty_printed_name: "Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]"
                  kind: UNION
                  args {
                    pretty_printed_name: "builtins.bytearray"
                    fully_qualified_name: "builtins.bytearray"
                  }
                  args {
                    pretty_printed_name: "builtins.memoryview"
                    fully_qualified_name: "builtins.memoryview"
                  }
                  args {
                    pretty_printed_name: "array.array[Any]"
                    args {
                      pretty_printed_name: "Any"
                      kind: ANY
                    }
                    fully_qualified_name: "array.array"
                  }
                  args {
                    pretty_printed_name: "mmap.mmap"
                    fully_qualified_name: "mmap.mmap"
                  }
                  args {
                    pretty_printed_name: "ctypes._CData"
                    fully_qualified_name: "ctypes._CData"
                  }
                  args {
                    pretty_printed_name: "pickle.PickleBuffer"
                    fully_qualified_name: "pickle.PickleBuffer"
                  }
                }
                fully_qualified_name: "_typeshed.WriteableBuffer"
              }
            }
            fully_qualified_name: "_typeshed.ReadableBuffer"
          }
          args {
            pretty_printed_name: "_typeshed.SupportsRead[builtins.bytes]"
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            fully_qualified_name: "_typeshed.SupportsRead"
          }
          args {
            pretty_printed_name: "typing.Iterable[builtins.bytes]"
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            fully_qualified_name: "typing.Iterable"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        fully_qualified_name: "urllib.request._DataType"
      }
    }
    parameters {
      name: "timeout"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.float,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "error"
    fully_qualified_name: "urllib.request.OpenerDirector.error"
    return_annotation {
      pretty_printed_name: "TypeAlias[Any]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "urllib.request._UrlopenRet"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.OpenerDirector"
        fully_qualified_name: "urllib.request.OpenerDirector"
      }
    }
    parameters {
      name: "proto"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "args"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
  }
  methods {
    name: "close"
    fully_qualified_name: "urllib.request.OpenerDirector.close"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.OpenerDirector"
        fully_qualified_name: "urllib.request.OpenerDirector"
      }
    }
  }
  attributes {
    name: "addheaders"
    fully_qualified_name: "urllib.request.OpenerDirector.addheaders"
    type_annotation {
      pretty_printed_name: "builtins.list[Tuple[builtins.str,builtins.str]]"
      args {
        pretty_printed_name: "Tuple[builtins.str,builtins.str]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      fully_qualified_name: "builtins.list"
    }
  }
}
classes {
  name: "BaseHandler"
  fully_qualified_name: "urllib.request.BaseHandler"
  super_classes: "builtins.object"
  methods {
    name: "add_parent"
    fully_qualified_name: "urllib.request.BaseHandler.add_parent"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.BaseHandler"
        fully_qualified_name: "urllib.request.BaseHandler"
      }
    }
    parameters {
      name: "parent"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.OpenerDirector"
        fully_qualified_name: "urllib.request.OpenerDirector"
      }
    }
  }
  methods {
    name: "close"
    fully_qualified_name: "urllib.request.BaseHandler.close"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.BaseHandler"
        fully_qualified_name: "urllib.request.BaseHandler"
      }
    }
  }
  methods {
    name: "__lt__"
    fully_qualified_name: "urllib.request.BaseHandler.__lt__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "urllib.request.BaseHandler"
        fully_qualified_name: "urllib.request.BaseHandler"
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
  }
  attributes {
    name: "handler_order"
    fully_qualified_name: "urllib.request.BaseHandler.handler_order"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  attributes {
    name: "parent"
    fully_qualified_name: "urllib.request.BaseHandler.parent"
    type_annotation {
      pretty_printed_name: "urllib.request.OpenerDirector"
      fully_qualified_name: "urllib.request.OpenerDirector"
    }
  }
}
classes {
  name: "HTTPDefaultErrorHandler"
  fully_qualified_name: "urllib.request.HTTPDefaultErrorHandler"
  super_classes: "urllib.request.BaseHandler"
  methods {
    name: "http_error_default"
    fully_qualified_name: "urllib.request.HTTPDefaultErrorHandler.http_error_default"
    return_annotation {
      pretty_printed_name: "urllib.error.HTTPError"
      fully_qualified_name: "urllib.error.HTTPError"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.HTTPDefaultErrorHandler"
        fully_qualified_name: "urllib.request.HTTPDefaultErrorHandler"
      }
    }
    parameters {
      name: "req"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.Request"
        fully_qualified_name: "urllib.request.Request"
      }
    }
    parameters {
      name: "fp"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.IO[builtins.bytes]"
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        fully_qualified_name: "typing.IO"
      }
    }
    parameters {
      name: "code"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "msg"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "hdrs"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "http.client.HTTPMessage"
        fully_qualified_name: "http.client.HTTPMessage"
      }
    }
  }
}
classes {
  name: "HTTPRedirectHandler"
  fully_qualified_name: "urllib.request.HTTPRedirectHandler"
  super_classes: "urllib.request.BaseHandler"
  methods {
    name: "redirect_request"
    fully_qualified_name: "urllib.request.HTTPRedirectHandler.redirect_request"
    return_annotation {
      pretty_printed_name: "Union[urllib.request.Request,None]"
      kind: UNION
      args {
        pretty_printed_name: "urllib.request.Request"
        fully_qualified_name: "urllib.request.Request"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.HTTPRedirectHandler"
        fully_qualified_name: "urllib.request.HTTPRedirectHandler"
      }
    }
    parameters {
      name: "req"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.Request"
        fully_qualified_name: "urllib.request.Request"
      }
    }
    parameters {
      name: "fp"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.IO[builtins.bytes]"
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        fully_qualified_name: "typing.IO"
      }
    }
    parameters {
      name: "code"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "msg"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "headers"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "http.client.HTTPMessage"
        fully_qualified_name: "http.client.HTTPMessage"
      }
    }
    parameters {
      name: "newurl"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  methods {
    name: "http_error_301"
    fully_qualified_name: "urllib.request.HTTPRedirectHandler.http_error_301"
    return_annotation {
      pretty_printed_name: "Union[TypeAlias[Any],None]"
      kind: UNION
      args {
        pretty_printed_name: "TypeAlias[Any]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "urllib.request._UrlopenRet"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.HTTPRedirectHandler"
        fully_qualified_name: "urllib.request.HTTPRedirectHandler"
      }
    }
    parameters {
      name: "req"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.Request"
        fully_qualified_name: "urllib.request.Request"
      }
    }
    parameters {
      name: "fp"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.IO[builtins.bytes]"
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        fully_qualified_name: "typing.IO"
      }
    }
    parameters {
      name: "code"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "msg"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "headers"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "http.client.HTTPMessage"
        fully_qualified_name: "http.client.HTTPMessage"
      }
    }
  }
  methods {
    name: "http_error_302"
    fully_qualified_name: "urllib.request.HTTPRedirectHandler.http_error_302"
    return_annotation {
      pretty_printed_name: "Union[TypeAlias[Any],None]"
      kind: UNION
      args {
        pretty_printed_name: "TypeAlias[Any]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "urllib.request._UrlopenRet"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.HTTPRedirectHandler"
        fully_qualified_name: "urllib.request.HTTPRedirectHandler"
      }
    }
    parameters {
      name: "req"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.Request"
        fully_qualified_name: "urllib.request.Request"
      }
    }
    parameters {
      name: "fp"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.IO[builtins.bytes]"
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        fully_qualified_name: "typing.IO"
      }
    }
    parameters {
      name: "code"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "msg"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "headers"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "http.client.HTTPMessage"
        fully_qualified_name: "http.client.HTTPMessage"
      }
    }
  }
  methods {
    name: "http_error_303"
    fully_qualified_name: "urllib.request.HTTPRedirectHandler.http_error_303"
    return_annotation {
      pretty_printed_name: "Union[TypeAlias[Any],None]"
      kind: UNION
      args {
        pretty_printed_name: "TypeAlias[Any]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "urllib.request._UrlopenRet"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.HTTPRedirectHandler"
        fully_qualified_name: "urllib.request.HTTPRedirectHandler"
      }
    }
    parameters {
      name: "req"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.Request"
        fully_qualified_name: "urllib.request.Request"
      }
    }
    parameters {
      name: "fp"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.IO[builtins.bytes]"
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        fully_qualified_name: "typing.IO"
      }
    }
    parameters {
      name: "code"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "msg"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "headers"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "http.client.HTTPMessage"
        fully_qualified_name: "http.client.HTTPMessage"
      }
    }
  }
  methods {
    name: "http_error_307"
    fully_qualified_name: "urllib.request.HTTPRedirectHandler.http_error_307"
    return_annotation {
      pretty_printed_name: "Union[TypeAlias[Any],None]"
      kind: UNION
      args {
        pretty_printed_name: "TypeAlias[Any]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "urllib.request._UrlopenRet"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.HTTPRedirectHandler"
        fully_qualified_name: "urllib.request.HTTPRedirectHandler"
      }
    }
    parameters {
      name: "req"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.Request"
        fully_qualified_name: "urllib.request.Request"
      }
    }
    parameters {
      name: "fp"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.IO[builtins.bytes]"
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        fully_qualified_name: "typing.IO"
      }
    }
    parameters {
      name: "code"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "msg"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "headers"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "http.client.HTTPMessage"
        fully_qualified_name: "http.client.HTTPMessage"
      }
    }
  }
  attributes {
    name: "max_redirections"
    fully_qualified_name: "urllib.request.HTTPRedirectHandler.max_redirections"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  attributes {
    name: "max_repeats"
    fully_qualified_name: "urllib.request.HTTPRedirectHandler.max_repeats"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  attributes {
    name: "inf_msg"
    fully_qualified_name: "urllib.request.HTTPRedirectHandler.inf_msg"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
}
classes {
  name: "HTTPCookieProcessor"
  fully_qualified_name: "urllib.request.HTTPCookieProcessor"
  super_classes: "urllib.request.BaseHandler"
  methods {
    name: "__init__"
    fully_qualified_name: "urllib.request.HTTPCookieProcessor.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.HTTPCookieProcessor"
        fully_qualified_name: "urllib.request.HTTPCookieProcessor"
      }
    }
    parameters {
      name: "cookiejar"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[http.cookiejar.CookieJar,None]"
        kind: UNION
        args {
          pretty_printed_name: "http.cookiejar.CookieJar"
          fully_qualified_name: "http.cookiejar.CookieJar"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "http_request"
    fully_qualified_name: "urllib.request.HTTPCookieProcessor.http_request"
    return_annotation {
      pretty_printed_name: "urllib.request.Request"
      fully_qualified_name: "urllib.request.Request"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.HTTPCookieProcessor"
        fully_qualified_name: "urllib.request.HTTPCookieProcessor"
      }
    }
    parameters {
      name: "request"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.Request"
        fully_qualified_name: "urllib.request.Request"
      }
    }
  }
  methods {
    name: "http_response"
    fully_qualified_name: "urllib.request.HTTPCookieProcessor.http_response"
    return_annotation {
      pretty_printed_name: "http.client.HTTPResponse"
      fully_qualified_name: "http.client.HTTPResponse"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.HTTPCookieProcessor"
        fully_qualified_name: "urllib.request.HTTPCookieProcessor"
      }
    }
    parameters {
      name: "request"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.Request"
        fully_qualified_name: "urllib.request.Request"
      }
    }
    parameters {
      name: "response"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "http.client.HTTPResponse"
        fully_qualified_name: "http.client.HTTPResponse"
      }
    }
  }
  methods {
    name: "https_request"
    fully_qualified_name: "urllib.request.HTTPCookieProcessor.https_request"
    return_annotation {
      pretty_printed_name: "urllib.request.Request"
      fully_qualified_name: "urllib.request.Request"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.HTTPCookieProcessor"
        fully_qualified_name: "urllib.request.HTTPCookieProcessor"
      }
    }
    parameters {
      name: "request"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.Request"
        fully_qualified_name: "urllib.request.Request"
      }
    }
  }
  methods {
    name: "https_response"
    fully_qualified_name: "urllib.request.HTTPCookieProcessor.https_response"
    return_annotation {
      pretty_printed_name: "http.client.HTTPResponse"
      fully_qualified_name: "http.client.HTTPResponse"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.HTTPCookieProcessor"
        fully_qualified_name: "urllib.request.HTTPCookieProcessor"
      }
    }
    parameters {
      name: "request"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.Request"
        fully_qualified_name: "urllib.request.Request"
      }
    }
    parameters {
      name: "response"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "http.client.HTTPResponse"
        fully_qualified_name: "http.client.HTTPResponse"
      }
    }
  }
  attributes {
    name: "cookiejar"
    fully_qualified_name: "urllib.request.HTTPCookieProcessor.cookiejar"
    type_annotation {
      pretty_printed_name: "http.cookiejar.CookieJar"
      fully_qualified_name: "http.cookiejar.CookieJar"
    }
  }
}
classes {
  name: "ProxyHandler"
  fully_qualified_name: "urllib.request.ProxyHandler"
  super_classes: "urllib.request.BaseHandler"
  methods {
    name: "__init__"
    fully_qualified_name: "urllib.request.ProxyHandler.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.ProxyHandler"
        fully_qualified_name: "urllib.request.ProxyHandler"
      }
    }
    parameters {
      name: "proxies"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.dict[builtins.str,builtins.str],None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.dict[builtins.str,builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "builtins.dict"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "proxy_open"
    fully_qualified_name: "urllib.request.ProxyHandler.proxy_open"
    return_annotation {
      pretty_printed_name: "Union[TypeAlias[Any],None]"
      kind: UNION
      args {
        pretty_printed_name: "TypeAlias[Any]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "urllib.request._UrlopenRet"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.ProxyHandler"
        fully_qualified_name: "urllib.request.ProxyHandler"
      }
    }
    parameters {
      name: "req"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.Request"
        fully_qualified_name: "urllib.request.Request"
      }
    }
    parameters {
      name: "proxy"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "type"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
}
classes {
  name: "HTTPPasswordMgr"
  fully_qualified_name: "urllib.request.HTTPPasswordMgr"
  super_classes: "builtins.object"
  methods {
    name: "add_password"
    fully_qualified_name: "urllib.request.HTTPPasswordMgr.add_password"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.HTTPPasswordMgr"
        fully_qualified_name: "urllib.request.HTTPPasswordMgr"
      }
    }
    parameters {
      name: "realm"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "uri"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,typing.Sequence[builtins.str]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "typing.Sequence[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "typing.Sequence"
        }
      }
    }
    parameters {
      name: "user"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "passwd"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  methods {
    name: "find_user_password"
    fully_qualified_name: "urllib.request.HTTPPasswordMgr.find_user_password"
    return_annotation {
      pretty_printed_name: "Tuple[Union[builtins.str,None],Union[builtins.str,None]]"
      kind: TUPLE
      args {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      args {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.HTTPPasswordMgr"
        fully_qualified_name: "urllib.request.HTTPPasswordMgr"
      }
    }
    parameters {
      name: "realm"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "authuri"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  methods {
    name: "is_suburi"
    fully_qualified_name: "urllib.request.HTTPPasswordMgr.is_suburi"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.HTTPPasswordMgr"
        fully_qualified_name: "urllib.request.HTTPPasswordMgr"
      }
    }
    parameters {
      name: "base"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "test"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  methods {
    name: "reduce_uri"
    fully_qualified_name: "urllib.request.HTTPPasswordMgr.reduce_uri"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.HTTPPasswordMgr"
        fully_qualified_name: "urllib.request.HTTPPasswordMgr"
      }
    }
    parameters {
      name: "uri"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "default_port"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
  }
}
classes {
  name: "HTTPPasswordMgrWithDefaultRealm"
  fully_qualified_name: "urllib.request.HTTPPasswordMgrWithDefaultRealm"
  super_classes: "urllib.request.HTTPPasswordMgr"
  methods {
    name: "add_password"
    fully_qualified_name: "urllib.request.HTTPPasswordMgrWithDefaultRealm.add_password"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.HTTPPasswordMgrWithDefaultRealm"
        fully_qualified_name: "urllib.request.HTTPPasswordMgrWithDefaultRealm"
      }
    }
    parameters {
      name: "realm"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "uri"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,typing.Sequence[builtins.str]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "typing.Sequence[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "typing.Sequence"
        }
      }
    }
    parameters {
      name: "user"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "passwd"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  methods {
    name: "find_user_password"
    fully_qualified_name: "urllib.request.HTTPPasswordMgrWithDefaultRealm.find_user_password"
    return_annotation {
      pretty_printed_name: "Tuple[Union[builtins.str,None],Union[builtins.str,None]]"
      kind: TUPLE
      args {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      args {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.HTTPPasswordMgrWithDefaultRealm"
        fully_qualified_name: "urllib.request.HTTPPasswordMgrWithDefaultRealm"
      }
    }
    parameters {
      name: "realm"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "authuri"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
}
classes {
  name: "HTTPPasswordMgrWithPriorAuth"
  fully_qualified_name: "urllib.request.HTTPPasswordMgrWithPriorAuth"
  super_classes: "urllib.request.HTTPPasswordMgrWithDefaultRealm"
  methods {
    name: "add_password"
    fully_qualified_name: "urllib.request.HTTPPasswordMgrWithPriorAuth.add_password"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.HTTPPasswordMgrWithPriorAuth"
        fully_qualified_name: "urllib.request.HTTPPasswordMgrWithPriorAuth"
      }
    }
    parameters {
      name: "realm"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "uri"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,typing.Sequence[builtins.str]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "typing.Sequence[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "typing.Sequence"
        }
      }
    }
    parameters {
      name: "user"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "passwd"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "is_authenticated"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
  }
  methods {
    name: "update_authenticated"
    fully_qualified_name: "urllib.request.HTTPPasswordMgrWithPriorAuth.update_authenticated"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.HTTPPasswordMgrWithPriorAuth"
        fully_qualified_name: "urllib.request.HTTPPasswordMgrWithPriorAuth"
      }
    }
    parameters {
      name: "uri"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,typing.Sequence[builtins.str]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "typing.Sequence[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "typing.Sequence"
        }
      }
    }
    parameters {
      name: "is_authenticated"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
  }
  methods {
    name: "is_authenticated"
    fully_qualified_name: "urllib.request.HTTPPasswordMgrWithPriorAuth.is_authenticated"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.HTTPPasswordMgrWithPriorAuth"
        fully_qualified_name: "urllib.request.HTTPPasswordMgrWithPriorAuth"
      }
    }
    parameters {
      name: "authuri"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
}
classes {
  name: "AbstractBasicAuthHandler"
  fully_qualified_name: "urllib.request.AbstractBasicAuthHandler"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "urllib.request.AbstractBasicAuthHandler.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.AbstractBasicAuthHandler"
        fully_qualified_name: "urllib.request.AbstractBasicAuthHandler"
      }
    }
    parameters {
      name: "password_mgr"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[urllib.request.HTTPPasswordMgr,None]"
        kind: UNION
        args {
          pretty_printed_name: "urllib.request.HTTPPasswordMgr"
          fully_qualified_name: "urllib.request.HTTPPasswordMgr"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "http_error_auth_reqed"
    fully_qualified_name: "urllib.request.AbstractBasicAuthHandler.http_error_auth_reqed"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.AbstractBasicAuthHandler"
        fully_qualified_name: "urllib.request.AbstractBasicAuthHandler"
      }
    }
    parameters {
      name: "authreq"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "host"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "req"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.Request"
        fully_qualified_name: "urllib.request.Request"
      }
    }
    parameters {
      name: "headers"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "http.client.HTTPMessage"
        fully_qualified_name: "http.client.HTTPMessage"
      }
    }
  }
  methods {
    name: "http_request"
    fully_qualified_name: "urllib.request.AbstractBasicAuthHandler.http_request"
    return_annotation {
      pretty_printed_name: "urllib.request.Request"
      fully_qualified_name: "urllib.request.Request"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.AbstractBasicAuthHandler"
        fully_qualified_name: "urllib.request.AbstractBasicAuthHandler"
      }
    }
    parameters {
      name: "req"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.Request"
        fully_qualified_name: "urllib.request.Request"
      }
    }
  }
  methods {
    name: "http_response"
    fully_qualified_name: "urllib.request.AbstractBasicAuthHandler.http_response"
    return_annotation {
      pretty_printed_name: "http.client.HTTPResponse"
      fully_qualified_name: "http.client.HTTPResponse"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.AbstractBasicAuthHandler"
        fully_qualified_name: "urllib.request.AbstractBasicAuthHandler"
      }
    }
    parameters {
      name: "req"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.Request"
        fully_qualified_name: "urllib.request.Request"
      }
    }
    parameters {
      name: "response"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "http.client.HTTPResponse"
        fully_qualified_name: "http.client.HTTPResponse"
      }
    }
  }
  methods {
    name: "https_request"
    fully_qualified_name: "urllib.request.AbstractBasicAuthHandler.https_request"
    return_annotation {
      pretty_printed_name: "urllib.request.Request"
      fully_qualified_name: "urllib.request.Request"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.AbstractBasicAuthHandler"
        fully_qualified_name: "urllib.request.AbstractBasicAuthHandler"
      }
    }
    parameters {
      name: "req"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.Request"
        fully_qualified_name: "urllib.request.Request"
      }
    }
  }
  methods {
    name: "https_response"
    fully_qualified_name: "urllib.request.AbstractBasicAuthHandler.https_response"
    return_annotation {
      pretty_printed_name: "http.client.HTTPResponse"
      fully_qualified_name: "http.client.HTTPResponse"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.AbstractBasicAuthHandler"
        fully_qualified_name: "urllib.request.AbstractBasicAuthHandler"
      }
    }
    parameters {
      name: "req"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.Request"
        fully_qualified_name: "urllib.request.Request"
      }
    }
    parameters {
      name: "response"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "http.client.HTTPResponse"
        fully_qualified_name: "http.client.HTTPResponse"
      }
    }
  }
  methods {
    name: "retry_http_basic_auth"
    fully_qualified_name: "urllib.request.AbstractBasicAuthHandler.retry_http_basic_auth"
    return_annotation {
      pretty_printed_name: "Union[TypeAlias[Any],None]"
      kind: UNION
      args {
        pretty_printed_name: "TypeAlias[Any]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "urllib.request._UrlopenRet"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.AbstractBasicAuthHandler"
        fully_qualified_name: "urllib.request.AbstractBasicAuthHandler"
      }
    }
    parameters {
      name: "host"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "req"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.Request"
        fully_qualified_name: "urllib.request.Request"
      }
    }
    parameters {
      name: "realm"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  attributes {
    name: "rx"
    fully_qualified_name: "urllib.request.AbstractBasicAuthHandler.rx"
    type_annotation {
      pretty_printed_name: "re.Pattern[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "re.Pattern"
    }
  }
  attributes {
    name: "passwd"
    fully_qualified_name: "urllib.request.AbstractBasicAuthHandler.passwd"
    type_annotation {
      pretty_printed_name: "urllib.request.HTTPPasswordMgr"
      fully_qualified_name: "urllib.request.HTTPPasswordMgr"
    }
  }
  attributes {
    name: "add_password"
    fully_qualified_name: "urllib.request.AbstractBasicAuthHandler.add_password"
    type_annotation {
      pretty_printed_name: "CallableType[builtins.function]"
      kind: CALLABLE
      args {
        pretty_printed_name: "builtins.function"
        fully_qualified_name: "builtins.function"
      }
    }
  }
}
classes {
  name: "HTTPBasicAuthHandler"
  fully_qualified_name: "urllib.request.HTTPBasicAuthHandler"
  super_classes: "urllib.request.AbstractBasicAuthHandler"
  super_classes: "urllib.request.BaseHandler"
  methods {
    name: "http_error_401"
    fully_qualified_name: "urllib.request.HTTPBasicAuthHandler.http_error_401"
    return_annotation {
      pretty_printed_name: "Union[TypeAlias[Any],None]"
      kind: UNION
      args {
        pretty_printed_name: "TypeAlias[Any]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "urllib.request._UrlopenRet"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.HTTPBasicAuthHandler"
        fully_qualified_name: "urllib.request.HTTPBasicAuthHandler"
      }
    }
    parameters {
      name: "req"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.Request"
        fully_qualified_name: "urllib.request.Request"
      }
    }
    parameters {
      name: "fp"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.IO[builtins.bytes]"
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        fully_qualified_name: "typing.IO"
      }
    }
    parameters {
      name: "code"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "msg"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "headers"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "http.client.HTTPMessage"
        fully_qualified_name: "http.client.HTTPMessage"
      }
    }
  }
  attributes {
    name: "auth_header"
    fully_qualified_name: "urllib.request.HTTPBasicAuthHandler.auth_header"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
}
classes {
  name: "ProxyBasicAuthHandler"
  fully_qualified_name: "urllib.request.ProxyBasicAuthHandler"
  super_classes: "urllib.request.AbstractBasicAuthHandler"
  super_classes: "urllib.request.BaseHandler"
  methods {
    name: "http_error_407"
    fully_qualified_name: "urllib.request.ProxyBasicAuthHandler.http_error_407"
    return_annotation {
      pretty_printed_name: "Union[TypeAlias[Any],None]"
      kind: UNION
      args {
        pretty_printed_name: "TypeAlias[Any]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "urllib.request._UrlopenRet"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.ProxyBasicAuthHandler"
        fully_qualified_name: "urllib.request.ProxyBasicAuthHandler"
      }
    }
    parameters {
      name: "req"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.Request"
        fully_qualified_name: "urllib.request.Request"
      }
    }
    parameters {
      name: "fp"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.IO[builtins.bytes]"
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        fully_qualified_name: "typing.IO"
      }
    }
    parameters {
      name: "code"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "msg"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "headers"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "http.client.HTTPMessage"
        fully_qualified_name: "http.client.HTTPMessage"
      }
    }
  }
  attributes {
    name: "auth_header"
    fully_qualified_name: "urllib.request.ProxyBasicAuthHandler.auth_header"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
}
classes {
  name: "AbstractDigestAuthHandler"
  fully_qualified_name: "urllib.request.AbstractDigestAuthHandler"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "urllib.request.AbstractDigestAuthHandler.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.AbstractDigestAuthHandler"
        fully_qualified_name: "urllib.request.AbstractDigestAuthHandler"
      }
    }
    parameters {
      name: "passwd"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[urllib.request.HTTPPasswordMgr,None]"
        kind: UNION
        args {
          pretty_printed_name: "urllib.request.HTTPPasswordMgr"
          fully_qualified_name: "urllib.request.HTTPPasswordMgr"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "reset_retry_count"
    fully_qualified_name: "urllib.request.AbstractDigestAuthHandler.reset_retry_count"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.AbstractDigestAuthHandler"
        fully_qualified_name: "urllib.request.AbstractDigestAuthHandler"
      }
    }
  }
  methods {
    name: "http_error_auth_reqed"
    fully_qualified_name: "urllib.request.AbstractDigestAuthHandler.http_error_auth_reqed"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.AbstractDigestAuthHandler"
        fully_qualified_name: "urllib.request.AbstractDigestAuthHandler"
      }
    }
    parameters {
      name: "auth_header"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "host"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "req"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.Request"
        fully_qualified_name: "urllib.request.Request"
      }
    }
    parameters {
      name: "headers"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "http.client.HTTPMessage"
        fully_qualified_name: "http.client.HTTPMessage"
      }
    }
  }
  methods {
    name: "retry_http_digest_auth"
    fully_qualified_name: "urllib.request.AbstractDigestAuthHandler.retry_http_digest_auth"
    return_annotation {
      pretty_printed_name: "Union[TypeAlias[Any],None]"
      kind: UNION
      args {
        pretty_printed_name: "TypeAlias[Any]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "urllib.request._UrlopenRet"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.AbstractDigestAuthHandler"
        fully_qualified_name: "urllib.request.AbstractDigestAuthHandler"
      }
    }
    parameters {
      name: "req"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.Request"
        fully_qualified_name: "urllib.request.Request"
      }
    }
    parameters {
      name: "auth"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  methods {
    name: "get_cnonce"
    fully_qualified_name: "urllib.request.AbstractDigestAuthHandler.get_cnonce"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.AbstractDigestAuthHandler"
        fully_qualified_name: "urllib.request.AbstractDigestAuthHandler"
      }
    }
    parameters {
      name: "nonce"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  methods {
    name: "get_authorization"
    fully_qualified_name: "urllib.request.AbstractDigestAuthHandler.get_authorization"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.AbstractDigestAuthHandler"
        fully_qualified_name: "urllib.request.AbstractDigestAuthHandler"
      }
    }
    parameters {
      name: "req"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.Request"
        fully_qualified_name: "urllib.request.Request"
      }
    }
    parameters {
      name: "chal"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Mapping[builtins.str,builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "typing.Mapping"
      }
    }
  }
  methods {
    name: "get_algorithm_impls"
    fully_qualified_name: "urllib.request.AbstractDigestAuthHandler.get_algorithm_impls"
    return_annotation {
      pretty_printed_name: "Tuple[CallableType[builtins.function],CallableType[builtins.function]]"
      kind: TUPLE
      args {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
      args {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.AbstractDigestAuthHandler"
        fully_qualified_name: "urllib.request.AbstractDigestAuthHandler"
      }
    }
    parameters {
      name: "algorithm"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  methods {
    name: "get_entity_digest"
    fully_qualified_name: "urllib.request.AbstractDigestAuthHandler.get_entity_digest"
    return_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.AbstractDigestAuthHandler"
        fully_qualified_name: "urllib.request.AbstractDigestAuthHandler"
      }
    }
    parameters {
      name: "data"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],None]"
        kind: UNION
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]"
              kind: TYPE_ALIAS
              args {
                pretty_printed_name: "Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]"
                kind: UNION
                args {
                  pretty_printed_name: "builtins.bytearray"
                  fully_qualified_name: "builtins.bytearray"
                }
                args {
                  pretty_printed_name: "builtins.memoryview"
                  fully_qualified_name: "builtins.memoryview"
                }
                args {
                  pretty_printed_name: "array.array[Any]"
                  args {
                    pretty_printed_name: "Any"
                    kind: ANY
                  }
                  fully_qualified_name: "array.array"
                }
                args {
                  pretty_printed_name: "mmap.mmap"
                  fully_qualified_name: "mmap.mmap"
                }
                args {
                  pretty_printed_name: "ctypes._CData"
                  fully_qualified_name: "ctypes._CData"
                }
                args {
                  pretty_printed_name: "pickle.PickleBuffer"
                  fully_qualified_name: "pickle.PickleBuffer"
                }
              }
              fully_qualified_name: "_typeshed.WriteableBuffer"
            }
          }
          fully_qualified_name: "_typeshed.ReadableBuffer"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "chal"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Mapping[builtins.str,builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "typing.Mapping"
      }
    }
  }
}
classes {
  name: "HTTPDigestAuthHandler"
  fully_qualified_name: "urllib.request.HTTPDigestAuthHandler"
  super_classes: "urllib.request.BaseHandler"
  super_classes: "urllib.request.AbstractDigestAuthHandler"
  methods {
    name: "http_error_401"
    fully_qualified_name: "urllib.request.HTTPDigestAuthHandler.http_error_401"
    return_annotation {
      pretty_printed_name: "Union[TypeAlias[Any],None]"
      kind: UNION
      args {
        pretty_printed_name: "TypeAlias[Any]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "urllib.request._UrlopenRet"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.HTTPDigestAuthHandler"
        fully_qualified_name: "urllib.request.HTTPDigestAuthHandler"
      }
    }
    parameters {
      name: "req"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.Request"
        fully_qualified_name: "urllib.request.Request"
      }
    }
    parameters {
      name: "fp"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.IO[builtins.bytes]"
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        fully_qualified_name: "typing.IO"
      }
    }
    parameters {
      name: "code"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "msg"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "headers"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "http.client.HTTPMessage"
        fully_qualified_name: "http.client.HTTPMessage"
      }
    }
  }
  attributes {
    name: "auth_header"
    fully_qualified_name: "urllib.request.HTTPDigestAuthHandler.auth_header"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
}
classes {
  name: "ProxyDigestAuthHandler"
  fully_qualified_name: "urllib.request.ProxyDigestAuthHandler"
  super_classes: "urllib.request.BaseHandler"
  super_classes: "urllib.request.AbstractDigestAuthHandler"
  methods {
    name: "http_error_407"
    fully_qualified_name: "urllib.request.ProxyDigestAuthHandler.http_error_407"
    return_annotation {
      pretty_printed_name: "Union[TypeAlias[Any],None]"
      kind: UNION
      args {
        pretty_printed_name: "TypeAlias[Any]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "urllib.request._UrlopenRet"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.ProxyDigestAuthHandler"
        fully_qualified_name: "urllib.request.ProxyDigestAuthHandler"
      }
    }
    parameters {
      name: "req"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.Request"
        fully_qualified_name: "urllib.request.Request"
      }
    }
    parameters {
      name: "fp"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.IO[builtins.bytes]"
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        fully_qualified_name: "typing.IO"
      }
    }
    parameters {
      name: "code"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "msg"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "headers"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "http.client.HTTPMessage"
        fully_qualified_name: "http.client.HTTPMessage"
      }
    }
  }
  attributes {
    name: "auth_header"
    fully_qualified_name: "urllib.request.ProxyDigestAuthHandler.auth_header"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
}
classes {
  name: "_HTTPConnectionProtocol"
  fully_qualified_name: "urllib.request._HTTPConnectionProtocol"
  super_classes: "builtins.object"
  methods {
    name: "__call__"
    fully_qualified_name: "urllib.request._HTTPConnectionProtocol.__call__"
    return_annotation {
      pretty_printed_name: "http.client.HTTPConnection"
      fully_qualified_name: "http.client.HTTPConnection"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request._HTTPConnectionProtocol"
        fully_qualified_name: "urllib.request._HTTPConnectionProtocol"
      }
    }
    parameters {
      name: "host"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "port"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "timeout"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
    }
    parameters {
      name: "source_address"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Tuple[builtins.str,builtins.int],None]"
        kind: UNION
        args {
          pretty_printed_name: "Tuple[builtins.str,builtins.int]"
          kind: TUPLE
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "blocksize"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
  }
  is_protocol: true
}
classes {
  name: "AbstractHTTPHandler"
  fully_qualified_name: "urllib.request.AbstractHTTPHandler"
  super_classes: "urllib.request.BaseHandler"
  methods {
    name: "__init__"
    fully_qualified_name: "urllib.request.AbstractHTTPHandler.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.AbstractHTTPHandler"
        fully_qualified_name: "urllib.request.AbstractHTTPHandler"
      }
    }
    parameters {
      name: "debuglevel"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
  }
  methods {
    name: "set_http_debuglevel"
    fully_qualified_name: "urllib.request.AbstractHTTPHandler.set_http_debuglevel"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.AbstractHTTPHandler"
        fully_qualified_name: "urllib.request.AbstractHTTPHandler"
      }
    }
    parameters {
      name: "level"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
  }
  methods {
    name: "do_request_"
    fully_qualified_name: "urllib.request.AbstractHTTPHandler.do_request_"
    return_annotation {
      pretty_printed_name: "urllib.request.Request"
      fully_qualified_name: "urllib.request.Request"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.AbstractHTTPHandler"
        fully_qualified_name: "urllib.request.AbstractHTTPHandler"
      }
    }
    parameters {
      name: "request"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.Request"
        fully_qualified_name: "urllib.request.Request"
      }
    }
  }
  methods {
    name: "do_open"
    fully_qualified_name: "urllib.request.AbstractHTTPHandler.do_open"
    return_annotation {
      pretty_printed_name: "http.client.HTTPResponse"
      fully_qualified_name: "http.client.HTTPResponse"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.AbstractHTTPHandler"
        fully_qualified_name: "urllib.request.AbstractHTTPHandler"
      }
    }
    parameters {
      name: "http_class"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request._HTTPConnectionProtocol"
        fully_qualified_name: "urllib.request._HTTPConnectionProtocol"
      }
    }
    parameters {
      name: "req"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.Request"
        fully_qualified_name: "urllib.request.Request"
      }
    }
    parameters {
      name: "http_conn_args"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
  }
}
classes {
  name: "HTTPHandler"
  fully_qualified_name: "urllib.request.HTTPHandler"
  super_classes: "urllib.request.AbstractHTTPHandler"
  methods {
    name: "http_open"
    fully_qualified_name: "urllib.request.HTTPHandler.http_open"
    return_annotation {
      pretty_printed_name: "http.client.HTTPResponse"
      fully_qualified_name: "http.client.HTTPResponse"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.HTTPHandler"
        fully_qualified_name: "urllib.request.HTTPHandler"
      }
    }
    parameters {
      name: "req"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.Request"
        fully_qualified_name: "urllib.request.Request"
      }
    }
  }
  methods {
    name: "http_request"
    fully_qualified_name: "urllib.request.HTTPHandler.http_request"
    return_annotation {
      pretty_printed_name: "urllib.request.Request"
      fully_qualified_name: "urllib.request.Request"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.HTTPHandler"
        fully_qualified_name: "urllib.request.HTTPHandler"
      }
    }
    parameters {
      name: "request"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.Request"
        fully_qualified_name: "urllib.request.Request"
      }
    }
  }
}
classes {
  name: "HTTPSHandler"
  fully_qualified_name: "urllib.request.HTTPSHandler"
  super_classes: "urllib.request.AbstractHTTPHandler"
  methods {
    name: "__init__"
    fully_qualified_name: "urllib.request.HTTPSHandler.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.HTTPSHandler"
        fully_qualified_name: "urllib.request.HTTPSHandler"
      }
    }
    parameters {
      name: "debuglevel"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "context"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[ssl.SSLContext,None]"
        kind: UNION
        args {
          pretty_printed_name: "ssl.SSLContext"
          fully_qualified_name: "ssl.SSLContext"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "check_hostname"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.bool,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "https_open"
    fully_qualified_name: "urllib.request.HTTPSHandler.https_open"
    return_annotation {
      pretty_printed_name: "http.client.HTTPResponse"
      fully_qualified_name: "http.client.HTTPResponse"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.HTTPSHandler"
        fully_qualified_name: "urllib.request.HTTPSHandler"
      }
    }
    parameters {
      name: "req"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.Request"
        fully_qualified_name: "urllib.request.Request"
      }
    }
  }
  methods {
    name: "https_request"
    fully_qualified_name: "urllib.request.HTTPSHandler.https_request"
    return_annotation {
      pretty_printed_name: "urllib.request.Request"
      fully_qualified_name: "urllib.request.Request"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.HTTPSHandler"
        fully_qualified_name: "urllib.request.HTTPSHandler"
      }
    }
    parameters {
      name: "request"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.Request"
        fully_qualified_name: "urllib.request.Request"
      }
    }
  }
}
classes {
  name: "FileHandler"
  fully_qualified_name: "urllib.request.FileHandler"
  super_classes: "urllib.request.BaseHandler"
  methods {
    name: "file_open"
    fully_qualified_name: "urllib.request.FileHandler.file_open"
    return_annotation {
      pretty_printed_name: "urllib.response.addinfourl"
      fully_qualified_name: "urllib.response.addinfourl"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.FileHandler"
        fully_qualified_name: "urllib.request.FileHandler"
      }
    }
    parameters {
      name: "req"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.Request"
        fully_qualified_name: "urllib.request.Request"
      }
    }
  }
  methods {
    name: "get_names"
    fully_qualified_name: "urllib.request.FileHandler.get_names"
    return_annotation {
      pretty_printed_name: "builtins.tuple[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "builtins.tuple"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.FileHandler"
        fully_qualified_name: "urllib.request.FileHandler"
      }
    }
  }
  methods {
    name: "open_local_file"
    fully_qualified_name: "urllib.request.FileHandler.open_local_file"
    return_annotation {
      pretty_printed_name: "urllib.response.addinfourl"
      fully_qualified_name: "urllib.response.addinfourl"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.FileHandler"
        fully_qualified_name: "urllib.request.FileHandler"
      }
    }
    parameters {
      name: "req"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.Request"
        fully_qualified_name: "urllib.request.Request"
      }
    }
  }
  attributes {
    name: "names"
    fully_qualified_name: "urllib.request.FileHandler.names"
    type_annotation {
      pretty_printed_name: "Union[builtins.tuple[builtins.str],None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.tuple[builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "builtins.tuple"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
}
classes {
  name: "DataHandler"
  fully_qualified_name: "urllib.request.DataHandler"
  super_classes: "urllib.request.BaseHandler"
  methods {
    name: "data_open"
    fully_qualified_name: "urllib.request.DataHandler.data_open"
    return_annotation {
      pretty_printed_name: "urllib.response.addinfourl"
      fully_qualified_name: "urllib.response.addinfourl"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.DataHandler"
        fully_qualified_name: "urllib.request.DataHandler"
      }
    }
    parameters {
      name: "req"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.Request"
        fully_qualified_name: "urllib.request.Request"
      }
    }
  }
}
classes {
  name: "ftpwrapper"
  fully_qualified_name: "urllib.request.ftpwrapper"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "urllib.request.ftpwrapper.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.ftpwrapper"
        fully_qualified_name: "urllib.request.ftpwrapper"
      }
    }
    parameters {
      name: "user"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "passwd"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "host"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "port"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "dirs"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "timeout"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.float,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "persistent"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
  }
  methods {
    name: "close"
    fully_qualified_name: "urllib.request.ftpwrapper.close"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.ftpwrapper"
        fully_qualified_name: "urllib.request.ftpwrapper"
      }
    }
  }
  methods {
    name: "endtransfer"
    fully_qualified_name: "urllib.request.ftpwrapper.endtransfer"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.ftpwrapper"
        fully_qualified_name: "urllib.request.ftpwrapper"
      }
    }
  }
  methods {
    name: "file_close"
    fully_qualified_name: "urllib.request.ftpwrapper.file_close"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.ftpwrapper"
        fully_qualified_name: "urllib.request.ftpwrapper"
      }
    }
  }
  methods {
    name: "init"
    fully_qualified_name: "urllib.request.ftpwrapper.init"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.ftpwrapper"
        fully_qualified_name: "urllib.request.ftpwrapper"
      }
    }
  }
  methods {
    name: "real_close"
    fully_qualified_name: "urllib.request.ftpwrapper.real_close"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.ftpwrapper"
        fully_qualified_name: "urllib.request.ftpwrapper"
      }
    }
  }
  methods {
    name: "retrfile"
    fully_qualified_name: "urllib.request.ftpwrapper.retrfile"
    return_annotation {
      pretty_printed_name: "Tuple[urllib.response.addclosehook,builtins.int]"
      kind: TUPLE
      args {
        pretty_printed_name: "urllib.response.addclosehook"
        fully_qualified_name: "urllib.response.addclosehook"
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.ftpwrapper"
        fully_qualified_name: "urllib.request.ftpwrapper"
      }
    }
    parameters {
      name: "file"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "type"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
}
classes {
  name: "FTPHandler"
  fully_qualified_name: "urllib.request.FTPHandler"
  super_classes: "urllib.request.BaseHandler"
  methods {
    name: "ftp_open"
    fully_qualified_name: "urllib.request.FTPHandler.ftp_open"
    return_annotation {
      pretty_printed_name: "urllib.response.addinfourl"
      fully_qualified_name: "urllib.response.addinfourl"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.FTPHandler"
        fully_qualified_name: "urllib.request.FTPHandler"
      }
    }
    parameters {
      name: "req"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.Request"
        fully_qualified_name: "urllib.request.Request"
      }
    }
  }
  methods {
    name: "connect_ftp"
    fully_qualified_name: "urllib.request.FTPHandler.connect_ftp"
    return_annotation {
      pretty_printed_name: "urllib.request.ftpwrapper"
      fully_qualified_name: "urllib.request.ftpwrapper"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.FTPHandler"
        fully_qualified_name: "urllib.request.FTPHandler"
      }
    }
    parameters {
      name: "user"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "passwd"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "host"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "port"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "dirs"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "timeout"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
    }
  }
}
classes {
  name: "CacheFTPHandler"
  fully_qualified_name: "urllib.request.CacheFTPHandler"
  super_classes: "urllib.request.FTPHandler"
  methods {
    name: "setTimeout"
    fully_qualified_name: "urllib.request.CacheFTPHandler.setTimeout"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.CacheFTPHandler"
        fully_qualified_name: "urllib.request.CacheFTPHandler"
      }
    }
    parameters {
      name: "t"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
    }
  }
  methods {
    name: "setMaxConns"
    fully_qualified_name: "urllib.request.CacheFTPHandler.setMaxConns"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.CacheFTPHandler"
        fully_qualified_name: "urllib.request.CacheFTPHandler"
      }
    }
    parameters {
      name: "m"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
  }
  methods {
    name: "check_cache"
    fully_qualified_name: "urllib.request.CacheFTPHandler.check_cache"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.CacheFTPHandler"
        fully_qualified_name: "urllib.request.CacheFTPHandler"
      }
    }
  }
  methods {
    name: "clear_cache"
    fully_qualified_name: "urllib.request.CacheFTPHandler.clear_cache"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.CacheFTPHandler"
        fully_qualified_name: "urllib.request.CacheFTPHandler"
      }
    }
  }
}
classes {
  name: "UnknownHandler"
  fully_qualified_name: "urllib.request.UnknownHandler"
  super_classes: "urllib.request.BaseHandler"
  methods {
    name: "unknown_open"
    fully_qualified_name: "urllib.request.UnknownHandler.unknown_open"
    return_annotation {
      pretty_printed_name: "NoReturn"
      kind: UNINHABITED
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.UnknownHandler"
        fully_qualified_name: "urllib.request.UnknownHandler"
      }
    }
    parameters {
      name: "req"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.Request"
        fully_qualified_name: "urllib.request.Request"
      }
    }
  }
}
classes {
  name: "HTTPErrorProcessor"
  fully_qualified_name: "urllib.request.HTTPErrorProcessor"
  super_classes: "urllib.request.BaseHandler"
  methods {
    name: "http_response"
    fully_qualified_name: "urllib.request.HTTPErrorProcessor.http_response"
    return_annotation {
      pretty_printed_name: "TypeAlias[Any]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "urllib.request._UrlopenRet"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.HTTPErrorProcessor"
        fully_qualified_name: "urllib.request.HTTPErrorProcessor"
      }
    }
    parameters {
      name: "request"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.Request"
        fully_qualified_name: "urllib.request.Request"
      }
    }
    parameters {
      name: "response"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "http.client.HTTPResponse"
        fully_qualified_name: "http.client.HTTPResponse"
      }
    }
  }
  methods {
    name: "https_response"
    fully_qualified_name: "urllib.request.HTTPErrorProcessor.https_response"
    return_annotation {
      pretty_printed_name: "TypeAlias[Any]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "urllib.request._UrlopenRet"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.HTTPErrorProcessor"
        fully_qualified_name: "urllib.request.HTTPErrorProcessor"
      }
    }
    parameters {
      name: "request"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.Request"
        fully_qualified_name: "urllib.request.Request"
      }
    }
    parameters {
      name: "response"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "http.client.HTTPResponse"
        fully_qualified_name: "http.client.HTTPResponse"
      }
    }
  }
}
classes {
  name: "URLopener"
  fully_qualified_name: "urllib.request.URLopener"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "urllib.request.URLopener.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.URLopener"
        fully_qualified_name: "urllib.request.URLopener"
      }
    }
    parameters {
      name: "proxies"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.dict[builtins.str,builtins.str],None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.dict[builtins.str,builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "builtins.dict"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "x509"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  methods {
    name: "open"
    fully_qualified_name: "urllib.request.URLopener.open"
    return_annotation {
      pretty_printed_name: "TypeAlias[Any]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "urllib.request._UrlopenRet"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.URLopener"
        fully_qualified_name: "urllib.request.URLopener"
      }
    }
    parameters {
      name: "fullurl"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "data"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],None]"
        kind: UNION
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]"
              kind: TYPE_ALIAS
              args {
                pretty_printed_name: "Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]"
                kind: UNION
                args {
                  pretty_printed_name: "builtins.bytearray"
                  fully_qualified_name: "builtins.bytearray"
                }
                args {
                  pretty_printed_name: "builtins.memoryview"
                  fully_qualified_name: "builtins.memoryview"
                }
                args {
                  pretty_printed_name: "array.array[Any]"
                  args {
                    pretty_printed_name: "Any"
                    kind: ANY
                  }
                  fully_qualified_name: "array.array"
                }
                args {
                  pretty_printed_name: "mmap.mmap"
                  fully_qualified_name: "mmap.mmap"
                }
                args {
                  pretty_printed_name: "ctypes._CData"
                  fully_qualified_name: "ctypes._CData"
                }
                args {
                  pretty_printed_name: "pickle.PickleBuffer"
                  fully_qualified_name: "pickle.PickleBuffer"
                }
              }
              fully_qualified_name: "_typeshed.WriteableBuffer"
            }
          }
          fully_qualified_name: "_typeshed.ReadableBuffer"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "open_unknown"
    fully_qualified_name: "urllib.request.URLopener.open_unknown"
    return_annotation {
      pretty_printed_name: "TypeAlias[Any]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "urllib.request._UrlopenRet"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.URLopener"
        fully_qualified_name: "urllib.request.URLopener"
      }
    }
    parameters {
      name: "fullurl"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "data"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],None]"
        kind: UNION
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]"
              kind: TYPE_ALIAS
              args {
                pretty_printed_name: "Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]"
                kind: UNION
                args {
                  pretty_printed_name: "builtins.bytearray"
                  fully_qualified_name: "builtins.bytearray"
                }
                args {
                  pretty_printed_name: "builtins.memoryview"
                  fully_qualified_name: "builtins.memoryview"
                }
                args {
                  pretty_printed_name: "array.array[Any]"
                  args {
                    pretty_printed_name: "Any"
                    kind: ANY
                  }
                  fully_qualified_name: "array.array"
                }
                args {
                  pretty_printed_name: "mmap.mmap"
                  fully_qualified_name: "mmap.mmap"
                }
                args {
                  pretty_printed_name: "ctypes._CData"
                  fully_qualified_name: "ctypes._CData"
                }
                args {
                  pretty_printed_name: "pickle.PickleBuffer"
                  fully_qualified_name: "pickle.PickleBuffer"
                }
              }
              fully_qualified_name: "_typeshed.WriteableBuffer"
            }
          }
          fully_qualified_name: "_typeshed.ReadableBuffer"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "retrieve"
    fully_qualified_name: "urllib.request.URLopener.retrieve"
    return_annotation {
      pretty_printed_name: "Tuple[builtins.str,Union[email.message.Message,None]]"
      kind: TUPLE
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "Union[email.message.Message,None]"
        kind: UNION
        args {
          pretty_printed_name: "email.message.Message"
          fully_qualified_name: "email.message.Message"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.URLopener"
        fully_qualified_name: "urllib.request.URLopener"
      }
    }
    parameters {
      name: "url"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "filename"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "reporthook"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[CallableType[builtins.function],None]"
        kind: UNION
        args {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "data"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],None]"
        kind: UNION
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]"
              kind: TYPE_ALIAS
              args {
                pretty_printed_name: "Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]"
                kind: UNION
                args {
                  pretty_printed_name: "builtins.bytearray"
                  fully_qualified_name: "builtins.bytearray"
                }
                args {
                  pretty_printed_name: "builtins.memoryview"
                  fully_qualified_name: "builtins.memoryview"
                }
                args {
                  pretty_printed_name: "array.array[Any]"
                  args {
                    pretty_printed_name: "Any"
                    kind: ANY
                  }
                  fully_qualified_name: "array.array"
                }
                args {
                  pretty_printed_name: "mmap.mmap"
                  fully_qualified_name: "mmap.mmap"
                }
                args {
                  pretty_printed_name: "ctypes._CData"
                  fully_qualified_name: "ctypes._CData"
                }
                args {
                  pretty_printed_name: "pickle.PickleBuffer"
                  fully_qualified_name: "pickle.PickleBuffer"
                }
              }
              fully_qualified_name: "_typeshed.WriteableBuffer"
            }
          }
          fully_qualified_name: "_typeshed.ReadableBuffer"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "addheader"
    fully_qualified_name: "urllib.request.URLopener.addheader"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.URLopener"
        fully_qualified_name: "urllib.request.URLopener"
      }
    }
    parameters {
      name: "args"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Tuple[builtins.str,builtins.str]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
    }
  }
  methods {
    name: "cleanup"
    fully_qualified_name: "urllib.request.URLopener.cleanup"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.URLopener"
        fully_qualified_name: "urllib.request.URLopener"
      }
    }
  }
  methods {
    name: "close"
    fully_qualified_name: "urllib.request.URLopener.close"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.URLopener"
        fully_qualified_name: "urllib.request.URLopener"
      }
    }
  }
  methods {
    name: "http_error"
    fully_qualified_name: "urllib.request.URLopener.http_error"
    return_annotation {
      pretty_printed_name: "TypeAlias[Any]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "urllib.request._UrlopenRet"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.URLopener"
        fully_qualified_name: "urllib.request.URLopener"
      }
    }
    parameters {
      name: "url"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "fp"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.IO[builtins.bytes]"
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        fully_qualified_name: "typing.IO"
      }
    }
    parameters {
      name: "errcode"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "errmsg"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "headers"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "http.client.HTTPMessage"
        fully_qualified_name: "http.client.HTTPMessage"
      }
    }
    parameters {
      name: "data"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.bytes,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "http_error_default"
    fully_qualified_name: "urllib.request.URLopener.http_error_default"
    return_annotation {
      pretty_printed_name: "TypeAlias[Any]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "urllib.request._UrlopenRet"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.URLopener"
        fully_qualified_name: "urllib.request.URLopener"
      }
    }
    parameters {
      name: "url"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "fp"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.IO[builtins.bytes]"
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        fully_qualified_name: "typing.IO"
      }
    }
    parameters {
      name: "errcode"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "errmsg"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "headers"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "http.client.HTTPMessage"
        fully_qualified_name: "http.client.HTTPMessage"
      }
    }
  }
  methods {
    name: "open_data"
    fully_qualified_name: "urllib.request.URLopener.open_data"
    return_annotation {
      pretty_printed_name: "urllib.response.addinfourl"
      fully_qualified_name: "urllib.response.addinfourl"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.URLopener"
        fully_qualified_name: "urllib.request.URLopener"
      }
    }
    parameters {
      name: "url"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "data"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],None]"
        kind: UNION
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]"
              kind: TYPE_ALIAS
              args {
                pretty_printed_name: "Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]"
                kind: UNION
                args {
                  pretty_printed_name: "builtins.bytearray"
                  fully_qualified_name: "builtins.bytearray"
                }
                args {
                  pretty_printed_name: "builtins.memoryview"
                  fully_qualified_name: "builtins.memoryview"
                }
                args {
                  pretty_printed_name: "array.array[Any]"
                  args {
                    pretty_printed_name: "Any"
                    kind: ANY
                  }
                  fully_qualified_name: "array.array"
                }
                args {
                  pretty_printed_name: "mmap.mmap"
                  fully_qualified_name: "mmap.mmap"
                }
                args {
                  pretty_printed_name: "ctypes._CData"
                  fully_qualified_name: "ctypes._CData"
                }
                args {
                  pretty_printed_name: "pickle.PickleBuffer"
                  fully_qualified_name: "pickle.PickleBuffer"
                }
              }
              fully_qualified_name: "_typeshed.WriteableBuffer"
            }
          }
          fully_qualified_name: "_typeshed.ReadableBuffer"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "open_file"
    fully_qualified_name: "urllib.request.URLopener.open_file"
    return_annotation {
      pretty_printed_name: "urllib.response.addinfourl"
      fully_qualified_name: "urllib.response.addinfourl"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.URLopener"
        fully_qualified_name: "urllib.request.URLopener"
      }
    }
    parameters {
      name: "url"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  methods {
    name: "open_ftp"
    fully_qualified_name: "urllib.request.URLopener.open_ftp"
    return_annotation {
      pretty_printed_name: "urllib.response.addinfourl"
      fully_qualified_name: "urllib.response.addinfourl"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.URLopener"
        fully_qualified_name: "urllib.request.URLopener"
      }
    }
    parameters {
      name: "url"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  methods {
    name: "open_http"
    fully_qualified_name: "urllib.request.URLopener.open_http"
    return_annotation {
      pretty_printed_name: "TypeAlias[Any]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "urllib.request._UrlopenRet"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.URLopener"
        fully_qualified_name: "urllib.request.URLopener"
      }
    }
    parameters {
      name: "url"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "data"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],None]"
        kind: UNION
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]"
              kind: TYPE_ALIAS
              args {
                pretty_printed_name: "Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]"
                kind: UNION
                args {
                  pretty_printed_name: "builtins.bytearray"
                  fully_qualified_name: "builtins.bytearray"
                }
                args {
                  pretty_printed_name: "builtins.memoryview"
                  fully_qualified_name: "builtins.memoryview"
                }
                args {
                  pretty_printed_name: "array.array[Any]"
                  args {
                    pretty_printed_name: "Any"
                    kind: ANY
                  }
                  fully_qualified_name: "array.array"
                }
                args {
                  pretty_printed_name: "mmap.mmap"
                  fully_qualified_name: "mmap.mmap"
                }
                args {
                  pretty_printed_name: "ctypes._CData"
                  fully_qualified_name: "ctypes._CData"
                }
                args {
                  pretty_printed_name: "pickle.PickleBuffer"
                  fully_qualified_name: "pickle.PickleBuffer"
                }
              }
              fully_qualified_name: "_typeshed.WriteableBuffer"
            }
          }
          fully_qualified_name: "_typeshed.ReadableBuffer"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "open_https"
    fully_qualified_name: "urllib.request.URLopener.open_https"
    return_annotation {
      pretty_printed_name: "TypeAlias[Any]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "urllib.request._UrlopenRet"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.URLopener"
        fully_qualified_name: "urllib.request.URLopener"
      }
    }
    parameters {
      name: "url"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "data"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],None]"
        kind: UNION
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]"
              kind: TYPE_ALIAS
              args {
                pretty_printed_name: "Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]"
                kind: UNION
                args {
                  pretty_printed_name: "builtins.bytearray"
                  fully_qualified_name: "builtins.bytearray"
                }
                args {
                  pretty_printed_name: "builtins.memoryview"
                  fully_qualified_name: "builtins.memoryview"
                }
                args {
                  pretty_printed_name: "array.array[Any]"
                  args {
                    pretty_printed_name: "Any"
                    kind: ANY
                  }
                  fully_qualified_name: "array.array"
                }
                args {
                  pretty_printed_name: "mmap.mmap"
                  fully_qualified_name: "mmap.mmap"
                }
                args {
                  pretty_printed_name: "ctypes._CData"
                  fully_qualified_name: "ctypes._CData"
                }
                args {
                  pretty_printed_name: "pickle.PickleBuffer"
                  fully_qualified_name: "pickle.PickleBuffer"
                }
              }
              fully_qualified_name: "_typeshed.WriteableBuffer"
            }
          }
          fully_qualified_name: "_typeshed.ReadableBuffer"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "open_local_file"
    fully_qualified_name: "urllib.request.URLopener.open_local_file"
    return_annotation {
      pretty_printed_name: "urllib.response.addinfourl"
      fully_qualified_name: "urllib.response.addinfourl"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.URLopener"
        fully_qualified_name: "urllib.request.URLopener"
      }
    }
    parameters {
      name: "url"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  methods {
    name: "open_unknown_proxy"
    fully_qualified_name: "urllib.request.URLopener.open_unknown_proxy"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.URLopener"
        fully_qualified_name: "urllib.request.URLopener"
      }
    }
    parameters {
      name: "proxy"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "fullurl"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "data"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],None]"
        kind: UNION
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]"
              kind: TYPE_ALIAS
              args {
                pretty_printed_name: "Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]"
                kind: UNION
                args {
                  pretty_printed_name: "builtins.bytearray"
                  fully_qualified_name: "builtins.bytearray"
                }
                args {
                  pretty_printed_name: "builtins.memoryview"
                  fully_qualified_name: "builtins.memoryview"
                }
                args {
                  pretty_printed_name: "array.array[Any]"
                  args {
                    pretty_printed_name: "Any"
                    kind: ANY
                  }
                  fully_qualified_name: "array.array"
                }
                args {
                  pretty_printed_name: "mmap.mmap"
                  fully_qualified_name: "mmap.mmap"
                }
                args {
                  pretty_printed_name: "ctypes._CData"
                  fully_qualified_name: "ctypes._CData"
                }
                args {
                  pretty_printed_name: "pickle.PickleBuffer"
                  fully_qualified_name: "pickle.PickleBuffer"
                }
              }
              fully_qualified_name: "_typeshed.WriteableBuffer"
            }
          }
          fully_qualified_name: "_typeshed.ReadableBuffer"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  attributes {
    name: "version"
    fully_qualified_name: "urllib.request.URLopener.version"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
}
classes {
  name: "FancyURLopener"
  fully_qualified_name: "urllib.request.FancyURLopener"
  super_classes: "urllib.request.URLopener"
  methods {
    name: "prompt_user_passwd"
    fully_qualified_name: "urllib.request.FancyURLopener.prompt_user_passwd"
    return_annotation {
      pretty_printed_name: "Tuple[builtins.str,builtins.str]"
      kind: TUPLE
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.FancyURLopener"
        fully_qualified_name: "urllib.request.FancyURLopener"
      }
    }
    parameters {
      name: "host"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "realm"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  methods {
    name: "get_user_passwd"
    fully_qualified_name: "urllib.request.FancyURLopener.get_user_passwd"
    return_annotation {
      pretty_printed_name: "Tuple[builtins.str,builtins.str]"
      kind: TUPLE
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.FancyURLopener"
        fully_qualified_name: "urllib.request.FancyURLopener"
      }
    }
    parameters {
      name: "host"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "realm"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "clear_cache"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
  }
  methods {
    name: "http_error_301"
    fully_qualified_name: "urllib.request.FancyURLopener.http_error_301"
    return_annotation {
      pretty_printed_name: "Union[TypeAlias[Any],urllib.response.addinfourl,None]"
      kind: UNION
      args {
        pretty_printed_name: "TypeAlias[Any]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "urllib.request._UrlopenRet"
      }
      args {
        pretty_printed_name: "urllib.response.addinfourl"
        fully_qualified_name: "urllib.response.addinfourl"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.FancyURLopener"
        fully_qualified_name: "urllib.request.FancyURLopener"
      }
    }
    parameters {
      name: "url"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "fp"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.IO[builtins.bytes]"
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        fully_qualified_name: "typing.IO"
      }
    }
    parameters {
      name: "errcode"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "errmsg"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "headers"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "http.client.HTTPMessage"
        fully_qualified_name: "http.client.HTTPMessage"
      }
    }
    parameters {
      name: "data"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],None]"
        kind: UNION
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]"
              kind: TYPE_ALIAS
              args {
                pretty_printed_name: "Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]"
                kind: UNION
                args {
                  pretty_printed_name: "builtins.bytearray"
                  fully_qualified_name: "builtins.bytearray"
                }
                args {
                  pretty_printed_name: "builtins.memoryview"
                  fully_qualified_name: "builtins.memoryview"
                }
                args {
                  pretty_printed_name: "array.array[Any]"
                  args {
                    pretty_printed_name: "Any"
                    kind: ANY
                  }
                  fully_qualified_name: "array.array"
                }
                args {
                  pretty_printed_name: "mmap.mmap"
                  fully_qualified_name: "mmap.mmap"
                }
                args {
                  pretty_printed_name: "ctypes._CData"
                  fully_qualified_name: "ctypes._CData"
                }
                args {
                  pretty_printed_name: "pickle.PickleBuffer"
                  fully_qualified_name: "pickle.PickleBuffer"
                }
              }
              fully_qualified_name: "_typeshed.WriteableBuffer"
            }
          }
          fully_qualified_name: "_typeshed.ReadableBuffer"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "http_error_302"
    fully_qualified_name: "urllib.request.FancyURLopener.http_error_302"
    return_annotation {
      pretty_printed_name: "Union[TypeAlias[Any],urllib.response.addinfourl,None]"
      kind: UNION
      args {
        pretty_printed_name: "TypeAlias[Any]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "urllib.request._UrlopenRet"
      }
      args {
        pretty_printed_name: "urllib.response.addinfourl"
        fully_qualified_name: "urllib.response.addinfourl"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.FancyURLopener"
        fully_qualified_name: "urllib.request.FancyURLopener"
      }
    }
    parameters {
      name: "url"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "fp"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.IO[builtins.bytes]"
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        fully_qualified_name: "typing.IO"
      }
    }
    parameters {
      name: "errcode"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "errmsg"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "headers"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "http.client.HTTPMessage"
        fully_qualified_name: "http.client.HTTPMessage"
      }
    }
    parameters {
      name: "data"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],None]"
        kind: UNION
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]"
              kind: TYPE_ALIAS
              args {
                pretty_printed_name: "Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]"
                kind: UNION
                args {
                  pretty_printed_name: "builtins.bytearray"
                  fully_qualified_name: "builtins.bytearray"
                }
                args {
                  pretty_printed_name: "builtins.memoryview"
                  fully_qualified_name: "builtins.memoryview"
                }
                args {
                  pretty_printed_name: "array.array[Any]"
                  args {
                    pretty_printed_name: "Any"
                    kind: ANY
                  }
                  fully_qualified_name: "array.array"
                }
                args {
                  pretty_printed_name: "mmap.mmap"
                  fully_qualified_name: "mmap.mmap"
                }
                args {
                  pretty_printed_name: "ctypes._CData"
                  fully_qualified_name: "ctypes._CData"
                }
                args {
                  pretty_printed_name: "pickle.PickleBuffer"
                  fully_qualified_name: "pickle.PickleBuffer"
                }
              }
              fully_qualified_name: "_typeshed.WriteableBuffer"
            }
          }
          fully_qualified_name: "_typeshed.ReadableBuffer"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "http_error_303"
    fully_qualified_name: "urllib.request.FancyURLopener.http_error_303"
    return_annotation {
      pretty_printed_name: "Union[TypeAlias[Any],urllib.response.addinfourl,None]"
      kind: UNION
      args {
        pretty_printed_name: "TypeAlias[Any]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "urllib.request._UrlopenRet"
      }
      args {
        pretty_printed_name: "urllib.response.addinfourl"
        fully_qualified_name: "urllib.response.addinfourl"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.FancyURLopener"
        fully_qualified_name: "urllib.request.FancyURLopener"
      }
    }
    parameters {
      name: "url"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "fp"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.IO[builtins.bytes]"
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        fully_qualified_name: "typing.IO"
      }
    }
    parameters {
      name: "errcode"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "errmsg"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "headers"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "http.client.HTTPMessage"
        fully_qualified_name: "http.client.HTTPMessage"
      }
    }
    parameters {
      name: "data"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],None]"
        kind: UNION
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]"
              kind: TYPE_ALIAS
              args {
                pretty_printed_name: "Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]"
                kind: UNION
                args {
                  pretty_printed_name: "builtins.bytearray"
                  fully_qualified_name: "builtins.bytearray"
                }
                args {
                  pretty_printed_name: "builtins.memoryview"
                  fully_qualified_name: "builtins.memoryview"
                }
                args {
                  pretty_printed_name: "array.array[Any]"
                  args {
                    pretty_printed_name: "Any"
                    kind: ANY
                  }
                  fully_qualified_name: "array.array"
                }
                args {
                  pretty_printed_name: "mmap.mmap"
                  fully_qualified_name: "mmap.mmap"
                }
                args {
                  pretty_printed_name: "ctypes._CData"
                  fully_qualified_name: "ctypes._CData"
                }
                args {
                  pretty_printed_name: "pickle.PickleBuffer"
                  fully_qualified_name: "pickle.PickleBuffer"
                }
              }
              fully_qualified_name: "_typeshed.WriteableBuffer"
            }
          }
          fully_qualified_name: "_typeshed.ReadableBuffer"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "http_error_307"
    fully_qualified_name: "urllib.request.FancyURLopener.http_error_307"
    return_annotation {
      pretty_printed_name: "Union[TypeAlias[Any],urllib.response.addinfourl,None]"
      kind: UNION
      args {
        pretty_printed_name: "TypeAlias[Any]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "urllib.request._UrlopenRet"
      }
      args {
        pretty_printed_name: "urllib.response.addinfourl"
        fully_qualified_name: "urllib.response.addinfourl"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.FancyURLopener"
        fully_qualified_name: "urllib.request.FancyURLopener"
      }
    }
    parameters {
      name: "url"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "fp"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.IO[builtins.bytes]"
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        fully_qualified_name: "typing.IO"
      }
    }
    parameters {
      name: "errcode"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "errmsg"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "headers"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "http.client.HTTPMessage"
        fully_qualified_name: "http.client.HTTPMessage"
      }
    }
    parameters {
      name: "data"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],None]"
        kind: UNION
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]"
              kind: TYPE_ALIAS
              args {
                pretty_printed_name: "Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]"
                kind: UNION
                args {
                  pretty_printed_name: "builtins.bytearray"
                  fully_qualified_name: "builtins.bytearray"
                }
                args {
                  pretty_printed_name: "builtins.memoryview"
                  fully_qualified_name: "builtins.memoryview"
                }
                args {
                  pretty_printed_name: "array.array[Any]"
                  args {
                    pretty_printed_name: "Any"
                    kind: ANY
                  }
                  fully_qualified_name: "array.array"
                }
                args {
                  pretty_printed_name: "mmap.mmap"
                  fully_qualified_name: "mmap.mmap"
                }
                args {
                  pretty_printed_name: "ctypes._CData"
                  fully_qualified_name: "ctypes._CData"
                }
                args {
                  pretty_printed_name: "pickle.PickleBuffer"
                  fully_qualified_name: "pickle.PickleBuffer"
                }
              }
              fully_qualified_name: "_typeshed.WriteableBuffer"
            }
          }
          fully_qualified_name: "_typeshed.ReadableBuffer"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "http_error_401"
    fully_qualified_name: "urllib.request.FancyURLopener.http_error_401"
    return_annotation {
      pretty_printed_name: "Union[TypeAlias[Any],None]"
      kind: UNION
      args {
        pretty_printed_name: "TypeAlias[Any]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "urllib.request._UrlopenRet"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.FancyURLopener"
        fully_qualified_name: "urllib.request.FancyURLopener"
      }
    }
    parameters {
      name: "url"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "fp"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.IO[builtins.bytes]"
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        fully_qualified_name: "typing.IO"
      }
    }
    parameters {
      name: "errcode"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "errmsg"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "headers"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "http.client.HTTPMessage"
        fully_qualified_name: "http.client.HTTPMessage"
      }
    }
    parameters {
      name: "data"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],None]"
        kind: UNION
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]"
              kind: TYPE_ALIAS
              args {
                pretty_printed_name: "Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]"
                kind: UNION
                args {
                  pretty_printed_name: "builtins.bytearray"
                  fully_qualified_name: "builtins.bytearray"
                }
                args {
                  pretty_printed_name: "builtins.memoryview"
                  fully_qualified_name: "builtins.memoryview"
                }
                args {
                  pretty_printed_name: "array.array[Any]"
                  args {
                    pretty_printed_name: "Any"
                    kind: ANY
                  }
                  fully_qualified_name: "array.array"
                }
                args {
                  pretty_printed_name: "mmap.mmap"
                  fully_qualified_name: "mmap.mmap"
                }
                args {
                  pretty_printed_name: "ctypes._CData"
                  fully_qualified_name: "ctypes._CData"
                }
                args {
                  pretty_printed_name: "pickle.PickleBuffer"
                  fully_qualified_name: "pickle.PickleBuffer"
                }
              }
              fully_qualified_name: "_typeshed.WriteableBuffer"
            }
          }
          fully_qualified_name: "_typeshed.ReadableBuffer"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "retry"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
  }
  methods {
    name: "http_error_407"
    fully_qualified_name: "urllib.request.FancyURLopener.http_error_407"
    return_annotation {
      pretty_printed_name: "Union[TypeAlias[Any],None]"
      kind: UNION
      args {
        pretty_printed_name: "TypeAlias[Any]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "urllib.request._UrlopenRet"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.FancyURLopener"
        fully_qualified_name: "urllib.request.FancyURLopener"
      }
    }
    parameters {
      name: "url"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "fp"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.IO[builtins.bytes]"
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        fully_qualified_name: "typing.IO"
      }
    }
    parameters {
      name: "errcode"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "errmsg"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "headers"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "http.client.HTTPMessage"
        fully_qualified_name: "http.client.HTTPMessage"
      }
    }
    parameters {
      name: "data"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],None]"
        kind: UNION
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]"
              kind: TYPE_ALIAS
              args {
                pretty_printed_name: "Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]"
                kind: UNION
                args {
                  pretty_printed_name: "builtins.bytearray"
                  fully_qualified_name: "builtins.bytearray"
                }
                args {
                  pretty_printed_name: "builtins.memoryview"
                  fully_qualified_name: "builtins.memoryview"
                }
                args {
                  pretty_printed_name: "array.array[Any]"
                  args {
                    pretty_printed_name: "Any"
                    kind: ANY
                  }
                  fully_qualified_name: "array.array"
                }
                args {
                  pretty_printed_name: "mmap.mmap"
                  fully_qualified_name: "mmap.mmap"
                }
                args {
                  pretty_printed_name: "ctypes._CData"
                  fully_qualified_name: "ctypes._CData"
                }
                args {
                  pretty_printed_name: "pickle.PickleBuffer"
                  fully_qualified_name: "pickle.PickleBuffer"
                }
              }
              fully_qualified_name: "_typeshed.WriteableBuffer"
            }
          }
          fully_qualified_name: "_typeshed.ReadableBuffer"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "retry"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
  }
  methods {
    name: "http_error_default"
    fully_qualified_name: "urllib.request.FancyURLopener.http_error_default"
    return_annotation {
      pretty_printed_name: "urllib.response.addinfourl"
      fully_qualified_name: "urllib.response.addinfourl"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.FancyURLopener"
        fully_qualified_name: "urllib.request.FancyURLopener"
      }
    }
    parameters {
      name: "url"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "fp"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.IO[builtins.bytes]"
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        fully_qualified_name: "typing.IO"
      }
    }
    parameters {
      name: "errcode"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "errmsg"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "headers"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "http.client.HTTPMessage"
        fully_qualified_name: "http.client.HTTPMessage"
      }
    }
  }
  methods {
    name: "redirect_internal"
    fully_qualified_name: "urllib.request.FancyURLopener.redirect_internal"
    return_annotation {
      pretty_printed_name: "Union[TypeAlias[Any],None]"
      kind: UNION
      args {
        pretty_printed_name: "TypeAlias[Any]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "urllib.request._UrlopenRet"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.FancyURLopener"
        fully_qualified_name: "urllib.request.FancyURLopener"
      }
    }
    parameters {
      name: "url"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "fp"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.IO[builtins.bytes]"
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        fully_qualified_name: "typing.IO"
      }
    }
    parameters {
      name: "errcode"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "errmsg"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "headers"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "http.client.HTTPMessage"
        fully_qualified_name: "http.client.HTTPMessage"
      }
    }
    parameters {
      name: "data"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],None]"
        kind: UNION
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]"
              kind: TYPE_ALIAS
              args {
                pretty_printed_name: "Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]"
                kind: UNION
                args {
                  pretty_printed_name: "builtins.bytearray"
                  fully_qualified_name: "builtins.bytearray"
                }
                args {
                  pretty_printed_name: "builtins.memoryview"
                  fully_qualified_name: "builtins.memoryview"
                }
                args {
                  pretty_printed_name: "array.array[Any]"
                  args {
                    pretty_printed_name: "Any"
                    kind: ANY
                  }
                  fully_qualified_name: "array.array"
                }
                args {
                  pretty_printed_name: "mmap.mmap"
                  fully_qualified_name: "mmap.mmap"
                }
                args {
                  pretty_printed_name: "ctypes._CData"
                  fully_qualified_name: "ctypes._CData"
                }
                args {
                  pretty_printed_name: "pickle.PickleBuffer"
                  fully_qualified_name: "pickle.PickleBuffer"
                }
              }
              fully_qualified_name: "_typeshed.WriteableBuffer"
            }
          }
          fully_qualified_name: "_typeshed.ReadableBuffer"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "retry_http_basic_auth"
    fully_qualified_name: "urllib.request.FancyURLopener.retry_http_basic_auth"
    return_annotation {
      pretty_printed_name: "Union[TypeAlias[Any],None]"
      kind: UNION
      args {
        pretty_printed_name: "TypeAlias[Any]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "urllib.request._UrlopenRet"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.FancyURLopener"
        fully_qualified_name: "urllib.request.FancyURLopener"
      }
    }
    parameters {
      name: "url"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "realm"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "data"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],None]"
        kind: UNION
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]"
              kind: TYPE_ALIAS
              args {
                pretty_printed_name: "Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]"
                kind: UNION
                args {
                  pretty_printed_name: "builtins.bytearray"
                  fully_qualified_name: "builtins.bytearray"
                }
                args {
                  pretty_printed_name: "builtins.memoryview"
                  fully_qualified_name: "builtins.memoryview"
                }
                args {
                  pretty_printed_name: "array.array[Any]"
                  args {
                    pretty_printed_name: "Any"
                    kind: ANY
                  }
                  fully_qualified_name: "array.array"
                }
                args {
                  pretty_printed_name: "mmap.mmap"
                  fully_qualified_name: "mmap.mmap"
                }
                args {
                  pretty_printed_name: "ctypes._CData"
                  fully_qualified_name: "ctypes._CData"
                }
                args {
                  pretty_printed_name: "pickle.PickleBuffer"
                  fully_qualified_name: "pickle.PickleBuffer"
                }
              }
              fully_qualified_name: "_typeshed.WriteableBuffer"
            }
          }
          fully_qualified_name: "_typeshed.ReadableBuffer"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "retry_https_basic_auth"
    fully_qualified_name: "urllib.request.FancyURLopener.retry_https_basic_auth"
    return_annotation {
      pretty_printed_name: "Union[TypeAlias[Any],None]"
      kind: UNION
      args {
        pretty_printed_name: "TypeAlias[Any]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "urllib.request._UrlopenRet"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.FancyURLopener"
        fully_qualified_name: "urllib.request.FancyURLopener"
      }
    }
    parameters {
      name: "url"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "realm"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "data"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],None]"
        kind: UNION
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]"
              kind: TYPE_ALIAS
              args {
                pretty_printed_name: "Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]"
                kind: UNION
                args {
                  pretty_printed_name: "builtins.bytearray"
                  fully_qualified_name: "builtins.bytearray"
                }
                args {
                  pretty_printed_name: "builtins.memoryview"
                  fully_qualified_name: "builtins.memoryview"
                }
                args {
                  pretty_printed_name: "array.array[Any]"
                  args {
                    pretty_printed_name: "Any"
                    kind: ANY
                  }
                  fully_qualified_name: "array.array"
                }
                args {
                  pretty_printed_name: "mmap.mmap"
                  fully_qualified_name: "mmap.mmap"
                }
                args {
                  pretty_printed_name: "ctypes._CData"
                  fully_qualified_name: "ctypes._CData"
                }
                args {
                  pretty_printed_name: "pickle.PickleBuffer"
                  fully_qualified_name: "pickle.PickleBuffer"
                }
              }
              fully_qualified_name: "_typeshed.WriteableBuffer"
            }
          }
          fully_qualified_name: "_typeshed.ReadableBuffer"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "retry_proxy_http_basic_auth"
    fully_qualified_name: "urllib.request.FancyURLopener.retry_proxy_http_basic_auth"
    return_annotation {
      pretty_printed_name: "Union[TypeAlias[Any],None]"
      kind: UNION
      args {
        pretty_printed_name: "TypeAlias[Any]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "urllib.request._UrlopenRet"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.FancyURLopener"
        fully_qualified_name: "urllib.request.FancyURLopener"
      }
    }
    parameters {
      name: "url"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "realm"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "data"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],None]"
        kind: UNION
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]"
              kind: TYPE_ALIAS
              args {
                pretty_printed_name: "Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]"
                kind: UNION
                args {
                  pretty_printed_name: "builtins.bytearray"
                  fully_qualified_name: "builtins.bytearray"
                }
                args {
                  pretty_printed_name: "builtins.memoryview"
                  fully_qualified_name: "builtins.memoryview"
                }
                args {
                  pretty_printed_name: "array.array[Any]"
                  args {
                    pretty_printed_name: "Any"
                    kind: ANY
                  }
                  fully_qualified_name: "array.array"
                }
                args {
                  pretty_printed_name: "mmap.mmap"
                  fully_qualified_name: "mmap.mmap"
                }
                args {
                  pretty_printed_name: "ctypes._CData"
                  fully_qualified_name: "ctypes._CData"
                }
                args {
                  pretty_printed_name: "pickle.PickleBuffer"
                  fully_qualified_name: "pickle.PickleBuffer"
                }
              }
              fully_qualified_name: "_typeshed.WriteableBuffer"
            }
          }
          fully_qualified_name: "_typeshed.ReadableBuffer"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "retry_proxy_https_basic_auth"
    fully_qualified_name: "urllib.request.FancyURLopener.retry_proxy_https_basic_auth"
    return_annotation {
      pretty_printed_name: "Union[TypeAlias[Any],None]"
      kind: UNION
      args {
        pretty_printed_name: "TypeAlias[Any]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "urllib.request._UrlopenRet"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "urllib.request.FancyURLopener"
        fully_qualified_name: "urllib.request.FancyURLopener"
      }
    }
    parameters {
      name: "url"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "realm"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "data"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],None]"
        kind: UNION
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]"
              kind: TYPE_ALIAS
              args {
                pretty_printed_name: "Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]"
                kind: UNION
                args {
                  pretty_printed_name: "builtins.bytearray"
                  fully_qualified_name: "builtins.bytearray"
                }
                args {
                  pretty_printed_name: "builtins.memoryview"
                  fully_qualified_name: "builtins.memoryview"
                }
                args {
                  pretty_printed_name: "array.array[Any]"
                  args {
                    pretty_printed_name: "Any"
                    kind: ANY
                  }
                  fully_qualified_name: "array.array"
                }
                args {
                  pretty_printed_name: "mmap.mmap"
                  fully_qualified_name: "mmap.mmap"
                }
                args {
                  pretty_printed_name: "ctypes._CData"
                  fully_qualified_name: "ctypes._CData"
                }
                args {
                  pretty_printed_name: "pickle.PickleBuffer"
                  fully_qualified_name: "pickle.PickleBuffer"
                }
              }
              fully_qualified_name: "_typeshed.WriteableBuffer"
            }
          }
          fully_qualified_name: "_typeshed.ReadableBuffer"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
}
functions {
  name: "urlopen"
  fully_qualified_name: "urllib.request.urlopen"
  return_annotation {
    pretty_printed_name: "TypeAlias[Any]"
    kind: TYPE_ALIAS
    args {
      pretty_printed_name: "Any"
      kind: ANY
    }
    fully_qualified_name: "urllib.request._UrlopenRet"
  }
  parameters {
    name: "url"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,urllib.request.Request]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "urllib.request.Request"
        fully_qualified_name: "urllib.request.Request"
      }
    }
  }
  parameters {
    name: "data"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[TypeAlias[Union[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],_typeshed.SupportsRead[builtins.bytes],typing.Iterable[builtins.bytes],None]],None]"
      kind: UNION
      args {
        pretty_printed_name: "TypeAlias[Union[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],_typeshed.SupportsRead[builtins.bytes],typing.Iterable[builtins.bytes],None]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],_typeshed.SupportsRead[builtins.bytes],typing.Iterable[builtins.bytes],None]"
          kind: UNION
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              args {
                pretty_printed_name: "TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]"
                kind: TYPE_ALIAS
                args {
                  pretty_printed_name: "Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]"
                  kind: UNION
                  args {
                    pretty_printed_name: "builtins.bytearray"
                    fully_qualified_name: "builtins.bytearray"
                  }
                  args {
                    pretty_printed_name: "builtins.memoryview"
                    fully_qualified_name: "builtins.memoryview"
                  }
                  args {
                    pretty_printed_name: "array.array[Any]"
                    args {
                      pretty_printed_name: "Any"
                      kind: ANY
                    }
                    fully_qualified_name: "array.array"
                  }
                  args {
                    pretty_printed_name: "mmap.mmap"
                    fully_qualified_name: "mmap.mmap"
                  }
                  args {
                    pretty_printed_name: "ctypes._CData"
                    fully_qualified_name: "ctypes._CData"
                  }
                  args {
                    pretty_printed_name: "pickle.PickleBuffer"
                    fully_qualified_name: "pickle.PickleBuffer"
                  }
                }
                fully_qualified_name: "_typeshed.WriteableBuffer"
              }
            }
            fully_qualified_name: "_typeshed.ReadableBuffer"
          }
          args {
            pretty_printed_name: "_typeshed.SupportsRead[builtins.bytes]"
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            fully_qualified_name: "_typeshed.SupportsRead"
          }
          args {
            pretty_printed_name: "typing.Iterable[builtins.bytes]"
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            fully_qualified_name: "typing.Iterable"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        fully_qualified_name: "urllib.request._DataType"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  parameters {
    name: "timeout"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.float,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  parameters {
    name: "cafile"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  parameters {
    name: "capath"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  parameters {
    name: "cadefault"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
  parameters {
    name: "context"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[ssl.SSLContext,None]"
      kind: UNION
      args {
        pretty_printed_name: "ssl.SSLContext"
        fully_qualified_name: "ssl.SSLContext"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
}
functions {
  name: "install_opener"
  fully_qualified_name: "urllib.request.install_opener"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "opener"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "urllib.request.OpenerDirector"
      fully_qualified_name: "urllib.request.OpenerDirector"
    }
  }
}
functions {
  name: "build_opener"
  fully_qualified_name: "urllib.request.build_opener"
  return_annotation {
    pretty_printed_name: "urllib.request.OpenerDirector"
    fully_qualified_name: "urllib.request.OpenerDirector"
  }
  parameters {
    name: "handlers"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[urllib.request.BaseHandler,CallableType[builtins.function]]"
      kind: UNION
      args {
        pretty_printed_name: "urllib.request.BaseHandler"
        fully_qualified_name: "urllib.request.BaseHandler"
      }
      args {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
  }
}
functions {
  name: "url2pathname"
  fully_qualified_name: "urllib.request.url2pathname"
  return_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
  parameters {
    name: "pathname"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
}
functions {
  name: "pathname2url"
  fully_qualified_name: "urllib.request.pathname2url"
  return_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
  parameters {
    name: "pathname"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
}
functions {
  name: "getproxies"
  fully_qualified_name: "urllib.request.getproxies"
  return_annotation {
    pretty_printed_name: "builtins.dict[builtins.str,builtins.str]"
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    fully_qualified_name: "builtins.dict"
  }
}
functions {
  name: "parse_http_list"
  fully_qualified_name: "urllib.request.parse_http_list"
  return_annotation {
    pretty_printed_name: "builtins.list[builtins.str]"
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    fully_qualified_name: "builtins.list"
  }
  parameters {
    name: "s"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
}
functions {
  name: "parse_keqv_list"
  fully_qualified_name: "urllib.request.parse_keqv_list"
  return_annotation {
    pretty_printed_name: "builtins.dict[builtins.str,builtins.str]"
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    fully_qualified_name: "builtins.dict"
  }
  parameters {
    name: "l"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.list[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "builtins.list"
    }
  }
}
functions {
  name: "proxy_bypass"
  fully_qualified_name: "urllib.request.proxy_bypass"
  return_annotation {
    pretty_printed_name: "Any"
    kind: ANY
  }
  parameters {
    name: "host"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  parameters {
    name: "proxies"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[typing.Mapping[builtins.str,builtins.str],None]"
      kind: UNION
      args {
        pretty_printed_name: "typing.Mapping[builtins.str,builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "typing.Mapping"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
}
functions {
  name: "urlretrieve"
  fully_qualified_name: "urllib.request.urlretrieve"
  return_annotation {
    pretty_printed_name: "Tuple[builtins.str,http.client.HTTPMessage]"
    kind: TUPLE
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    args {
      pretty_printed_name: "http.client.HTTPMessage"
      fully_qualified_name: "http.client.HTTPMessage"
    }
  }
  parameters {
    name: "url"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  parameters {
    name: "filename"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],None]"
      kind: UNION
      args {
        pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "os.PathLike[builtins.str]"
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            fully_qualified_name: "os.PathLike"
          }
          args {
            pretty_printed_name: "os.PathLike[builtins.bytes]"
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            fully_qualified_name: "os.PathLike"
          }
        }
        fully_qualified_name: "_typeshed.StrOrBytesPath"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  parameters {
    name: "reporthook"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[CallableType[builtins.function],None]"
      kind: UNION
      args {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  parameters {
    name: "data"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],_typeshed.SupportsRead[builtins.bytes],typing.Iterable[builtins.bytes],None]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],_typeshed.SupportsRead[builtins.bytes],typing.Iterable[builtins.bytes],None]"
        kind: UNION
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]"
              kind: TYPE_ALIAS
              args {
                pretty_printed_name: "Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]"
                kind: UNION
                args {
                  pretty_printed_name: "builtins.bytearray"
                  fully_qualified_name: "builtins.bytearray"
                }
                args {
                  pretty_printed_name: "builtins.memoryview"
                  fully_qualified_name: "builtins.memoryview"
                }
                args {
                  pretty_printed_name: "array.array[Any]"
                  args {
                    pretty_printed_name: "Any"
                    kind: ANY
                  }
                  fully_qualified_name: "array.array"
                }
                args {
                  pretty_printed_name: "mmap.mmap"
                  fully_qualified_name: "mmap.mmap"
                }
                args {
                  pretty_printed_name: "ctypes._CData"
                  fully_qualified_name: "ctypes._CData"
                }
                args {
                  pretty_printed_name: "pickle.PickleBuffer"
                  fully_qualified_name: "pickle.PickleBuffer"
                }
              }
              fully_qualified_name: "_typeshed.WriteableBuffer"
            }
          }
          fully_qualified_name: "_typeshed.ReadableBuffer"
        }
        args {
          pretty_printed_name: "_typeshed.SupportsRead[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "_typeshed.SupportsRead"
        }
        args {
          pretty_printed_name: "typing.Iterable[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "typing.Iterable"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      fully_qualified_name: "urllib.request._DataType"
    }
  }
}
functions {
  name: "urlcleanup"
  fully_qualified_name: "urllib.request.urlcleanup"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
}
vars {
  name: "__annotations__"
  fully_qualified_name: "urllib.request.__annotations__"
  type_annotation {
    pretty_printed_name: "builtins.dict[builtins.str,Any]"
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    args {
      pretty_printed_name: "Any"
      kind: ANY
    }
    fully_qualified_name: "builtins.dict"
  }
}
vars {
  name: "__all__"
  fully_qualified_name: "urllib.request.__all__"
  type_annotation {
    pretty_printed_name: "builtins.list[builtins.str]"
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    fully_qualified_name: "builtins.list"
  }
}
