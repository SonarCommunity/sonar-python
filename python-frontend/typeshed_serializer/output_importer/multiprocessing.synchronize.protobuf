fully_qualified_name: "multiprocessing.synchronize"
classes {
  name: "Barrier"
  fully_qualified_name: "multiprocessing.synchronize.Barrier"
  super_classes: "threading.Barrier"
  methods {
    name: "__init__"
    fully_qualified_name: "multiprocessing.synchronize.Barrier.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "multiprocessing.synchronize.Barrier"
        fully_qualified_name: "multiprocessing.synchronize.Barrier"
      }
    }
    parameters {
      name: "parties"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "action"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[CallableType[builtins.function],None]"
        kind: UNION
        args {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "timeout"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.float,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "ctx"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "multiprocessing.context.BaseContext"
        fully_qualified_name: "multiprocessing.context.BaseContext"
      }
    }
  }
}
classes {
  name: "BoundedSemaphore"
  fully_qualified_name: "multiprocessing.synchronize.BoundedSemaphore"
  super_classes: "multiprocessing.synchronize.Semaphore"
  methods {
    name: "__init__"
    fully_qualified_name: "multiprocessing.synchronize.BoundedSemaphore.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "multiprocessing.synchronize.BoundedSemaphore"
        fully_qualified_name: "multiprocessing.synchronize.BoundedSemaphore"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "ctx"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "multiprocessing.context.BaseContext"
        fully_qualified_name: "multiprocessing.context.BaseContext"
      }
    }
  }
}
classes {
  name: "Condition"
  fully_qualified_name: "multiprocessing.synchronize.Condition"
  super_classes: "contextlib.AbstractContextManager"
  methods {
    name: "__init__"
    fully_qualified_name: "multiprocessing.synchronize.Condition.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "multiprocessing.synchronize.Condition"
        fully_qualified_name: "multiprocessing.synchronize.Condition"
      }
    }
    parameters {
      name: "lock"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[TypeAlias[Union[multiprocessing.synchronize.Lock,multiprocessing.synchronize.RLock]],None]"
        kind: UNION
        args {
          pretty_printed_name: "TypeAlias[Union[multiprocessing.synchronize.Lock,multiprocessing.synchronize.RLock]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[multiprocessing.synchronize.Lock,multiprocessing.synchronize.RLock]"
            kind: UNION
            args {
              pretty_printed_name: "multiprocessing.synchronize.Lock"
              fully_qualified_name: "multiprocessing.synchronize.Lock"
            }
            args {
              pretty_printed_name: "multiprocessing.synchronize.RLock"
              fully_qualified_name: "multiprocessing.synchronize.RLock"
            }
          }
          fully_qualified_name: "multiprocessing.synchronize._LockLike"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "ctx"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "multiprocessing.context.BaseContext"
        fully_qualified_name: "multiprocessing.context.BaseContext"
      }
    }
  }
  methods {
    name: "notify"
    fully_qualified_name: "multiprocessing.synchronize.Condition.notify"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "multiprocessing.synchronize.Condition"
        fully_qualified_name: "multiprocessing.synchronize.Condition"
      }
    }
    parameters {
      name: "n"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
  }
  methods {
    name: "notify_all"
    fully_qualified_name: "multiprocessing.synchronize.Condition.notify_all"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "multiprocessing.synchronize.Condition"
        fully_qualified_name: "multiprocessing.synchronize.Condition"
      }
    }
  }
  methods {
    name: "wait"
    fully_qualified_name: "multiprocessing.synchronize.Condition.wait"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "multiprocessing.synchronize.Condition"
        fully_qualified_name: "multiprocessing.synchronize.Condition"
      }
    }
    parameters {
      name: "timeout"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.float,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "wait_for"
    fully_qualified_name: "multiprocessing.synchronize.Condition.wait_for"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "multiprocessing.synchronize.Condition"
        fully_qualified_name: "multiprocessing.synchronize.Condition"
      }
    }
    parameters {
      name: "predicate"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    parameters {
      name: "timeout"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.float,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "acquire"
    fully_qualified_name: "multiprocessing.synchronize.Condition.acquire"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "multiprocessing.synchronize.Condition"
        fully_qualified_name: "multiprocessing.synchronize.Condition"
      }
    }
    parameters {
      name: "block"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    parameters {
      name: "timeout"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.float,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "release"
    fully_qualified_name: "multiprocessing.synchronize.Condition.release"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "multiprocessing.synchronize.Condition"
        fully_qualified_name: "multiprocessing.synchronize.Condition"
      }
    }
  }
  methods {
    name: "__exit__"
    fully_qualified_name: "multiprocessing.synchronize.Condition.__exit__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "multiprocessing.synchronize.Condition"
        fully_qualified_name: "multiprocessing.synchronize.Condition"
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "Union[Type[builtins.BaseException],None]"
        kind: UNION
        args {
          pretty_printed_name: "Type[builtins.BaseException]"
          kind: TYPE
          args {
            pretty_printed_name: "builtins.BaseException"
            fully_qualified_name: "builtins.BaseException"
          }
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "Union[builtins.BaseException,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.BaseException"
          fully_qualified_name: "builtins.BaseException"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "Union[types.TracebackType,None]"
        kind: UNION
        args {
          pretty_printed_name: "types.TracebackType"
          fully_qualified_name: "types.TracebackType"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
}
classes {
  name: "Event"
  fully_qualified_name: "multiprocessing.synchronize.Event"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "multiprocessing.synchronize.Event.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "multiprocessing.synchronize.Event"
        fully_qualified_name: "multiprocessing.synchronize.Event"
      }
    }
    parameters {
      name: "ctx"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "multiprocessing.context.BaseContext"
        fully_qualified_name: "multiprocessing.context.BaseContext"
      }
    }
  }
  methods {
    name: "is_set"
    fully_qualified_name: "multiprocessing.synchronize.Event.is_set"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "multiprocessing.synchronize.Event"
        fully_qualified_name: "multiprocessing.synchronize.Event"
      }
    }
  }
  methods {
    name: "set"
    fully_qualified_name: "multiprocessing.synchronize.Event.set"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "multiprocessing.synchronize.Event"
        fully_qualified_name: "multiprocessing.synchronize.Event"
      }
    }
  }
  methods {
    name: "clear"
    fully_qualified_name: "multiprocessing.synchronize.Event.clear"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "multiprocessing.synchronize.Event"
        fully_qualified_name: "multiprocessing.synchronize.Event"
      }
    }
  }
  methods {
    name: "wait"
    fully_qualified_name: "multiprocessing.synchronize.Event.wait"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "multiprocessing.synchronize.Event"
        fully_qualified_name: "multiprocessing.synchronize.Event"
      }
    }
    parameters {
      name: "timeout"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.float,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
}
classes {
  name: "Lock"
  fully_qualified_name: "multiprocessing.synchronize.Lock"
  super_classes: "multiprocessing.synchronize.SemLock"
  methods {
    name: "__init__"
    fully_qualified_name: "multiprocessing.synchronize.Lock.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "multiprocessing.synchronize.Lock"
        fully_qualified_name: "multiprocessing.synchronize.Lock"
      }
    }
    parameters {
      name: "ctx"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "multiprocessing.context.BaseContext"
        fully_qualified_name: "multiprocessing.context.BaseContext"
      }
    }
  }
}
classes {
  name: "RLock"
  fully_qualified_name: "multiprocessing.synchronize.RLock"
  super_classes: "multiprocessing.synchronize.SemLock"
  methods {
    name: "__init__"
    fully_qualified_name: "multiprocessing.synchronize.RLock.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "multiprocessing.synchronize.RLock"
        fully_qualified_name: "multiprocessing.synchronize.RLock"
      }
    }
    parameters {
      name: "ctx"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "multiprocessing.context.BaseContext"
        fully_qualified_name: "multiprocessing.context.BaseContext"
      }
    }
  }
}
classes {
  name: "Semaphore"
  fully_qualified_name: "multiprocessing.synchronize.Semaphore"
  super_classes: "multiprocessing.synchronize.SemLock"
  methods {
    name: "__init__"
    fully_qualified_name: "multiprocessing.synchronize.Semaphore.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "multiprocessing.synchronize.Semaphore"
        fully_qualified_name: "multiprocessing.synchronize.Semaphore"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "ctx"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "multiprocessing.context.BaseContext"
        fully_qualified_name: "multiprocessing.context.BaseContext"
      }
    }
  }
}
classes {
  name: "SemLock"
  fully_qualified_name: "multiprocessing.synchronize.SemLock"
  super_classes: "contextlib.AbstractContextManager"
  methods {
    name: "acquire"
    fully_qualified_name: "multiprocessing.synchronize.SemLock.acquire"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "multiprocessing.synchronize.SemLock"
        fully_qualified_name: "multiprocessing.synchronize.SemLock"
      }
    }
    parameters {
      name: "block"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    parameters {
      name: "timeout"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.float,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "release"
    fully_qualified_name: "multiprocessing.synchronize.SemLock.release"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "multiprocessing.synchronize.SemLock"
        fully_qualified_name: "multiprocessing.synchronize.SemLock"
      }
    }
  }
  methods {
    name: "__exit__"
    fully_qualified_name: "multiprocessing.synchronize.SemLock.__exit__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "multiprocessing.synchronize.SemLock"
        fully_qualified_name: "multiprocessing.synchronize.SemLock"
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "Union[Type[builtins.BaseException],None]"
        kind: UNION
        args {
          pretty_printed_name: "Type[builtins.BaseException]"
          kind: TYPE
          args {
            pretty_printed_name: "builtins.BaseException"
            fully_qualified_name: "builtins.BaseException"
          }
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "Union[builtins.BaseException,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.BaseException"
          fully_qualified_name: "builtins.BaseException"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "Union[types.TracebackType,None]"
        kind: UNION
        args {
          pretty_printed_name: "types.TracebackType"
          fully_qualified_name: "types.TracebackType"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
}
vars {
  name: "__annotations__"
  fully_qualified_name: "multiprocessing.synchronize.__annotations__"
  type_annotation {
    pretty_printed_name: "builtins.dict[builtins.str,Any]"
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    args {
      pretty_printed_name: "Any"
      kind: ANY
    }
    fully_qualified_name: "builtins.dict"
  }
}
vars {
  name: "__all__"
  fully_qualified_name: "multiprocessing.synchronize.__all__"
  type_annotation {
    pretty_printed_name: "builtins.list[builtins.str]"
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    fully_qualified_name: "builtins.list"
  }
}
