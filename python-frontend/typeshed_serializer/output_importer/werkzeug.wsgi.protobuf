fully_qualified_name: "werkzeug.wsgi"
classes {
  name: "ClosingIterator"
  fully_qualified_name: "werkzeug.wsgi.ClosingIterator"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "werkzeug.wsgi.ClosingIterator.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.wsgi.ClosingIterator"
        fully_qualified_name: "werkzeug.wsgi.ClosingIterator"
      }
    }
    parameters {
      name: "iterable"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[builtins.bytes]"
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    parameters {
      name: "callbacks"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[None,CallableType[builtins.function],typing.Iterable[CallableType[builtins.function]]]"
        kind: UNION
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
        args {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
        args {
          pretty_printed_name: "typing.Iterable[CallableType[builtins.function]]"
          args {
            pretty_printed_name: "CallableType[builtins.function]"
            kind: CALLABLE
            args {
              pretty_printed_name: "builtins.function"
              fully_qualified_name: "builtins.function"
            }
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
    }
  }
  methods {
    name: "__iter__"
    fully_qualified_name: "werkzeug.wsgi.ClosingIterator.__iter__"
    return_annotation {
      pretty_printed_name: "werkzeug.wsgi.ClosingIterator"
      fully_qualified_name: "werkzeug.wsgi.ClosingIterator"
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "werkzeug.wsgi.ClosingIterator"
        fully_qualified_name: "werkzeug.wsgi.ClosingIterator"
      }
    }
  }
  methods {
    name: "__next__"
    fully_qualified_name: "werkzeug.wsgi.ClosingIterator.__next__"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.wsgi.ClosingIterator"
        fully_qualified_name: "werkzeug.wsgi.ClosingIterator"
      }
    }
  }
  methods {
    name: "close"
    fully_qualified_name: "werkzeug.wsgi.ClosingIterator.close"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.wsgi.ClosingIterator"
        fully_qualified_name: "werkzeug.wsgi.ClosingIterator"
      }
    }
  }
  attributes {
    name: "_next"
    fully_qualified_name: "werkzeug.wsgi.ClosingIterator._next"
    type_annotation {
      pretty_printed_name: "CallableType[builtins.function]"
      kind: CALLABLE
      args {
        pretty_printed_name: "builtins.function"
        fully_qualified_name: "builtins.function"
      }
    }
  }
  attributes {
    name: "_callbacks"
    fully_qualified_name: "werkzeug.wsgi.ClosingIterator._callbacks"
    type_annotation {
      pretty_printed_name: "builtins.list[CallableType[builtins.function]]"
      args {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
      fully_qualified_name: "builtins.list"
    }
  }
}
classes {
  name: "FileWrapper"
  fully_qualified_name: "werkzeug.wsgi.FileWrapper"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "werkzeug.wsgi.FileWrapper.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.wsgi.FileWrapper"
        fully_qualified_name: "werkzeug.wsgi.FileWrapper"
      }
    }
    parameters {
      name: "file"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.IO[builtins.bytes]"
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        fully_qualified_name: "typing.IO"
      }
    }
    parameters {
      name: "buffer_size"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
  }
  methods {
    name: "close"
    fully_qualified_name: "werkzeug.wsgi.FileWrapper.close"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.wsgi.FileWrapper"
        fully_qualified_name: "werkzeug.wsgi.FileWrapper"
      }
    }
  }
  methods {
    name: "seekable"
    fully_qualified_name: "werkzeug.wsgi.FileWrapper.seekable"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.wsgi.FileWrapper"
        fully_qualified_name: "werkzeug.wsgi.FileWrapper"
      }
    }
  }
  methods {
    name: "seek"
    fully_qualified_name: "werkzeug.wsgi.FileWrapper.seek"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.wsgi.FileWrapper"
        fully_qualified_name: "werkzeug.wsgi.FileWrapper"
      }
    }
    parameters {
      name: "args"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
  }
  methods {
    name: "tell"
    fully_qualified_name: "werkzeug.wsgi.FileWrapper.tell"
    return_annotation {
      pretty_printed_name: "Union[builtins.int,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.wsgi.FileWrapper"
        fully_qualified_name: "werkzeug.wsgi.FileWrapper"
      }
    }
  }
  methods {
    name: "__iter__"
    fully_qualified_name: "werkzeug.wsgi.FileWrapper.__iter__"
    return_annotation {
      pretty_printed_name: "werkzeug.wsgi.FileWrapper"
      fully_qualified_name: "werkzeug.wsgi.FileWrapper"
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "werkzeug.wsgi.FileWrapper"
        fully_qualified_name: "werkzeug.wsgi.FileWrapper"
      }
    }
  }
  methods {
    name: "__next__"
    fully_qualified_name: "werkzeug.wsgi.FileWrapper.__next__"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.wsgi.FileWrapper"
        fully_qualified_name: "werkzeug.wsgi.FileWrapper"
      }
    }
  }
  attributes {
    name: "file"
    fully_qualified_name: "werkzeug.wsgi.FileWrapper.file"
    type_annotation {
      pretty_printed_name: "typing.IO[builtins.bytes]"
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
      fully_qualified_name: "typing.IO"
    }
  }
  attributes {
    name: "buffer_size"
    fully_qualified_name: "werkzeug.wsgi.FileWrapper.buffer_size"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
}
classes {
  name: "_RangeWrapper"
  fully_qualified_name: "werkzeug.wsgi._RangeWrapper"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "werkzeug.wsgi._RangeWrapper.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.wsgi._RangeWrapper"
        fully_qualified_name: "werkzeug.wsgi._RangeWrapper"
      }
    }
    parameters {
      name: "iterable"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.Iterable[builtins.bytes],typing.IO[builtins.bytes]]"
        kind: UNION
        args {
          pretty_printed_name: "typing.Iterable[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "typing.Iterable"
        }
        args {
          pretty_printed_name: "typing.IO[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "typing.IO"
        }
      }
    }
    parameters {
      name: "start_byte"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "byte_range"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "__iter__"
    fully_qualified_name: "werkzeug.wsgi._RangeWrapper.__iter__"
    return_annotation {
      pretty_printed_name: "werkzeug.wsgi._RangeWrapper"
      fully_qualified_name: "werkzeug.wsgi._RangeWrapper"
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "werkzeug.wsgi._RangeWrapper"
        fully_qualified_name: "werkzeug.wsgi._RangeWrapper"
      }
    }
  }
  methods {
    name: "_next_chunk"
    fully_qualified_name: "werkzeug.wsgi._RangeWrapper._next_chunk"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.wsgi._RangeWrapper"
        fully_qualified_name: "werkzeug.wsgi._RangeWrapper"
      }
    }
  }
  methods {
    name: "_first_iteration"
    fully_qualified_name: "werkzeug.wsgi._RangeWrapper._first_iteration"
    return_annotation {
      pretty_printed_name: "Tuple[Union[builtins.bytes,None],builtins.int]"
      kind: TUPLE
      args {
        pretty_printed_name: "Union[builtins.bytes,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.wsgi._RangeWrapper"
        fully_qualified_name: "werkzeug.wsgi._RangeWrapper"
      }
    }
  }
  methods {
    name: "_next"
    fully_qualified_name: "werkzeug.wsgi._RangeWrapper._next"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.wsgi._RangeWrapper"
        fully_qualified_name: "werkzeug.wsgi._RangeWrapper"
      }
    }
  }
  methods {
    name: "__next__"
    fully_qualified_name: "werkzeug.wsgi._RangeWrapper.__next__"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.wsgi._RangeWrapper"
        fully_qualified_name: "werkzeug.wsgi._RangeWrapper"
      }
    }
  }
  methods {
    name: "close"
    fully_qualified_name: "werkzeug.wsgi._RangeWrapper.close"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.wsgi._RangeWrapper"
        fully_qualified_name: "werkzeug.wsgi._RangeWrapper"
      }
    }
  }
  attributes {
    name: "iterable"
    fully_qualified_name: "werkzeug.wsgi._RangeWrapper.iterable"
    type_annotation {
      pretty_printed_name: "typing.Iterator[builtins.bytes]"
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
      fully_qualified_name: "typing.Iterator"
    }
  }
  attributes {
    name: "byte_range"
    fully_qualified_name: "werkzeug.wsgi._RangeWrapper.byte_range"
    type_annotation {
      pretty_printed_name: "Union[builtins.int,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  attributes {
    name: "start_byte"
    fully_qualified_name: "werkzeug.wsgi._RangeWrapper.start_byte"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  attributes {
    name: "end_byte"
    fully_qualified_name: "werkzeug.wsgi._RangeWrapper.end_byte"
    type_annotation {
      pretty_printed_name: "Union[builtins.int,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  attributes {
    name: "read_length"
    fully_qualified_name: "werkzeug.wsgi._RangeWrapper.read_length"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  attributes {
    name: "seekable"
    fully_qualified_name: "werkzeug.wsgi._RangeWrapper.seekable"
    type_annotation {
      pretty_printed_name: "Union[Literal[builtins.bool],Any]"
      kind: UNION
      args {
        pretty_printed_name: "Literal[builtins.bool]"
        kind: LITERAL
        args {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
  }
  attributes {
    name: "end_reached"
    fully_qualified_name: "werkzeug.wsgi._RangeWrapper.end_reached"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
}
classes {
  name: "LimitedStream"
  fully_qualified_name: "werkzeug.wsgi.LimitedStream"
  super_classes: "io.RawIOBase"
  methods {
    name: "__init__"
    fully_qualified_name: "werkzeug.wsgi.LimitedStream.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.wsgi.LimitedStream"
        fully_qualified_name: "werkzeug.wsgi.LimitedStream"
      }
    }
    parameters {
      name: "stream"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.IO[builtins.bytes]"
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        fully_qualified_name: "typing.IO"
      }
    }
    parameters {
      name: "limit"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "is_max"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
  }
  methods {
    name: "is_exhausted"
    fully_qualified_name: "werkzeug.wsgi.LimitedStream.is_exhausted"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.wsgi.LimitedStream"
        fully_qualified_name: "werkzeug.wsgi.LimitedStream"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "on_exhausted"
    fully_qualified_name: "werkzeug.wsgi.LimitedStream.on_exhausted"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.wsgi.LimitedStream"
        fully_qualified_name: "werkzeug.wsgi.LimitedStream"
      }
    }
  }
  methods {
    name: "on_disconnect"
    fully_qualified_name: "werkzeug.wsgi.LimitedStream.on_disconnect"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.wsgi.LimitedStream"
        fully_qualified_name: "werkzeug.wsgi.LimitedStream"
      }
    }
    parameters {
      name: "error"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.Exception,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.Exception"
          fully_qualified_name: "builtins.Exception"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "exhaust"
    fully_qualified_name: "werkzeug.wsgi.LimitedStream.exhaust"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.wsgi.LimitedStream"
        fully_qualified_name: "werkzeug.wsgi.LimitedStream"
      }
    }
  }
  methods {
    name: "readinto"
    fully_qualified_name: "werkzeug.wsgi.LimitedStream.readinto"
    return_annotation {
      pretty_printed_name: "Union[builtins.int,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.wsgi.LimitedStream"
        fully_qualified_name: "werkzeug.wsgi.LimitedStream"
      }
    }
    parameters {
      name: "b"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytearray"
        fully_qualified_name: "builtins.bytearray"
      }
    }
  }
  methods {
    name: "readall"
    fully_qualified_name: "werkzeug.wsgi.LimitedStream.readall"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.wsgi.LimitedStream"
        fully_qualified_name: "werkzeug.wsgi.LimitedStream"
      }
    }
  }
  methods {
    name: "tell"
    fully_qualified_name: "werkzeug.wsgi.LimitedStream.tell"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.wsgi.LimitedStream"
        fully_qualified_name: "werkzeug.wsgi.LimitedStream"
      }
    }
  }
  methods {
    name: "readable"
    fully_qualified_name: "werkzeug.wsgi.LimitedStream.readable"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.wsgi.LimitedStream"
        fully_qualified_name: "werkzeug.wsgi.LimitedStream"
      }
    }
  }
  attributes {
    name: "_stream"
    fully_qualified_name: "werkzeug.wsgi.LimitedStream._stream"
    type_annotation {
      pretty_printed_name: "typing.IO[builtins.bytes]"
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
      fully_qualified_name: "typing.IO"
    }
  }
  attributes {
    name: "_pos"
    fully_qualified_name: "werkzeug.wsgi.LimitedStream._pos"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  attributes {
    name: "limit"
    fully_qualified_name: "werkzeug.wsgi.LimitedStream.limit"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  attributes {
    name: "_limit_is_max"
    fully_qualified_name: "werkzeug.wsgi.LimitedStream._limit_is_max"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
}
functions {
  name: "responder"
  fully_qualified_name: "werkzeug.wsgi.responder"
  return_annotation {
    pretty_printed_name: "TypeAlias[CallableType[builtins.function]]"
    kind: TYPE_ALIAS
    args {
      pretty_printed_name: "CallableType[builtins.function]"
      kind: CALLABLE
      args {
        pretty_printed_name: "builtins.function"
        fully_qualified_name: "builtins.function"
      }
    }
    fully_qualified_name: "_typeshed.wsgi.WSGIApplication"
  }
  parameters {
    name: "f"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "CallableType[builtins.function]"
      kind: CALLABLE
      args {
        pretty_printed_name: "builtins.function"
        fully_qualified_name: "builtins.function"
      }
    }
  }
}
functions {
  name: "get_current_url"
  fully_qualified_name: "werkzeug.wsgi.get_current_url"
  return_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
  parameters {
    name: "environ"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[builtins.dict[builtins.str,Any]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "builtins.dict[builtins.str,Any]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "builtins.dict"
      }
      fully_qualified_name: "_typeshed.wsgi.WSGIEnvironment"
    }
  }
  parameters {
    name: "root_only"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
  parameters {
    name: "strip_querystring"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
  parameters {
    name: "host_only"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
  parameters {
    name: "trusted_hosts"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[typing.Iterable[builtins.str],None]"
      kind: UNION
      args {
        pretty_printed_name: "typing.Iterable[builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "typing.Iterable"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
}
functions {
  name: "_get_server"
  fully_qualified_name: "werkzeug.wsgi._get_server"
  return_annotation {
    pretty_printed_name: "Union[Tuple[builtins.str,Union[builtins.int,None]],None]"
    kind: UNION
    args {
      pretty_printed_name: "Tuple[builtins.str,Union[builtins.int,None]]"
      kind: TUPLE
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    args {
      pretty_printed_name: "None"
      kind: NONE
    }
  }
  parameters {
    name: "environ"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[builtins.dict[builtins.str,Any]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "builtins.dict[builtins.str,Any]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "builtins.dict"
      }
      fully_qualified_name: "_typeshed.wsgi.WSGIEnvironment"
    }
  }
}
functions {
  name: "get_host"
  fully_qualified_name: "werkzeug.wsgi.get_host"
  return_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
  parameters {
    name: "environ"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[builtins.dict[builtins.str,Any]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "builtins.dict[builtins.str,Any]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "builtins.dict"
      }
      fully_qualified_name: "_typeshed.wsgi.WSGIEnvironment"
    }
  }
  parameters {
    name: "trusted_hosts"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[typing.Iterable[builtins.str],None]"
      kind: UNION
      args {
        pretty_printed_name: "typing.Iterable[builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "typing.Iterable"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
}
functions {
  name: "get_content_length"
  fully_qualified_name: "werkzeug.wsgi.get_content_length"
  return_annotation {
    pretty_printed_name: "Union[builtins.int,None]"
    kind: UNION
    args {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    args {
      pretty_printed_name: "None"
      kind: NONE
    }
  }
  parameters {
    name: "environ"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[builtins.dict[builtins.str,Any]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "builtins.dict[builtins.str,Any]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "builtins.dict"
      }
      fully_qualified_name: "_typeshed.wsgi.WSGIEnvironment"
    }
  }
}
functions {
  name: "get_input_stream"
  fully_qualified_name: "werkzeug.wsgi.get_input_stream"
  return_annotation {
    pretty_printed_name: "typing.IO[builtins.bytes]"
    args {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    fully_qualified_name: "typing.IO"
  }
  parameters {
    name: "environ"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[builtins.dict[builtins.str,Any]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "builtins.dict[builtins.str,Any]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "builtins.dict"
      }
      fully_qualified_name: "_typeshed.wsgi.WSGIEnvironment"
    }
  }
  parameters {
    name: "safe_fallback"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
  parameters {
    name: "max_content_length"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.int,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
}
functions {
  name: "get_path_info"
  fully_qualified_name: "werkzeug.wsgi.get_path_info"
  return_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
  parameters {
    name: "environ"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[builtins.dict[builtins.str,Any]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "builtins.dict[builtins.str,Any]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "builtins.dict"
      }
      fully_qualified_name: "_typeshed.wsgi.WSGIEnvironment"
    }
  }
  parameters {
    name: "charset"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  parameters {
    name: "errors"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
}
functions {
  name: "wrap_file"
  fully_qualified_name: "werkzeug.wsgi.wrap_file"
  return_annotation {
    pretty_printed_name: "typing.Iterable[builtins.bytes]"
    args {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    fully_qualified_name: "typing.Iterable"
  }
  parameters {
    name: "environ"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[builtins.dict[builtins.str,Any]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "builtins.dict[builtins.str,Any]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "builtins.dict"
      }
      fully_qualified_name: "_typeshed.wsgi.WSGIEnvironment"
    }
  }
  parameters {
    name: "file"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "typing.IO[builtins.bytes]"
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
      fully_qualified_name: "typing.IO"
    }
  }
  parameters {
    name: "buffer_size"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
}
functions {
  name: "_make_chunk_iter"
  fully_qualified_name: "werkzeug.wsgi._make_chunk_iter"
  return_annotation {
    pretty_printed_name: "typing.Iterator[builtins.bytes]"
    args {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    fully_qualified_name: "typing.Iterator"
  }
  parameters {
    name: "stream"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[typing.Iterable[builtins.bytes],typing.IO[builtins.bytes]]"
      kind: UNION
      args {
        pretty_printed_name: "typing.Iterable[builtins.bytes]"
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        fully_qualified_name: "typing.Iterable"
      }
      args {
        pretty_printed_name: "typing.IO[builtins.bytes]"
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        fully_qualified_name: "typing.IO"
      }
    }
  }
  parameters {
    name: "limit"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.int,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  parameters {
    name: "buffer_size"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
}
functions {
  name: "make_line_iter"
  fully_qualified_name: "werkzeug.wsgi.make_line_iter"
  return_annotation {
    pretty_printed_name: "typing.Iterator[builtins.bytes]"
    args {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    fully_qualified_name: "typing.Iterator"
  }
  parameters {
    name: "stream"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[typing.Iterable[builtins.bytes],typing.IO[builtins.bytes]]"
      kind: UNION
      args {
        pretty_printed_name: "typing.Iterable[builtins.bytes]"
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        fully_qualified_name: "typing.Iterable"
      }
      args {
        pretty_printed_name: "typing.IO[builtins.bytes]"
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        fully_qualified_name: "typing.IO"
      }
    }
  }
  parameters {
    name: "limit"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.int,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  parameters {
    name: "buffer_size"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "cap_at_buffer"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
}
functions {
  name: "make_chunk_iter"
  fully_qualified_name: "werkzeug.wsgi.make_chunk_iter"
  return_annotation {
    pretty_printed_name: "typing.Iterator[builtins.bytes]"
    args {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    fully_qualified_name: "typing.Iterator"
  }
  parameters {
    name: "stream"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[typing.Iterable[builtins.bytes],typing.IO[builtins.bytes]]"
      kind: UNION
      args {
        pretty_printed_name: "typing.Iterable[builtins.bytes]"
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        fully_qualified_name: "typing.Iterable"
      }
      args {
        pretty_printed_name: "typing.IO[builtins.bytes]"
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        fully_qualified_name: "typing.IO"
      }
    }
  }
  parameters {
    name: "separator"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
  }
  parameters {
    name: "limit"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.int,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  parameters {
    name: "buffer_size"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "cap_at_buffer"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
}
vars {
  name: "__annotations__"
  fully_qualified_name: "werkzeug.wsgi.__annotations__"
  type_annotation {
    pretty_printed_name: "builtins.dict[builtins.str,Any]"
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    args {
      pretty_printed_name: "Any"
      kind: ANY
    }
    fully_qualified_name: "builtins.dict"
  }
}
vars {
  name: "t"
  fully_qualified_name: "typing"
  is_imported_module: true
}
vars {
  name: "_sansio_utils"
  fully_qualified_name: "werkzeug.sansio.utils"
  is_imported_module: true
}
