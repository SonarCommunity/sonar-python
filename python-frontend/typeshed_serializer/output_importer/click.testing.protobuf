fully_qualified_name: "click.testing"
classes {
  name: "EchoingStdin"
  fully_qualified_name: "click.testing.EchoingStdin"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "click.testing.EchoingStdin.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.testing.EchoingStdin"
        fully_qualified_name: "click.testing.EchoingStdin"
      }
    }
    parameters {
      name: "input"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.BinaryIO"
        fully_qualified_name: "typing.BinaryIO"
      }
    }
    parameters {
      name: "output"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.BinaryIO"
        fully_qualified_name: "typing.BinaryIO"
      }
    }
  }
  methods {
    name: "__getattr__"
    fully_qualified_name: "click.testing.EchoingStdin.__getattr__"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "click.testing.EchoingStdin"
        fully_qualified_name: "click.testing.EchoingStdin"
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  methods {
    name: "_echo"
    fully_qualified_name: "click.testing.EchoingStdin._echo"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.testing.EchoingStdin"
        fully_qualified_name: "click.testing.EchoingStdin"
      }
    }
    parameters {
      name: "rv"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
  }
  methods {
    name: "read"
    fully_qualified_name: "click.testing.EchoingStdin.read"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.testing.EchoingStdin"
        fully_qualified_name: "click.testing.EchoingStdin"
      }
    }
    parameters {
      name: "n"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
  }
  methods {
    name: "read1"
    fully_qualified_name: "click.testing.EchoingStdin.read1"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.testing.EchoingStdin"
        fully_qualified_name: "click.testing.EchoingStdin"
      }
    }
    parameters {
      name: "n"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
  }
  methods {
    name: "readline"
    fully_qualified_name: "click.testing.EchoingStdin.readline"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.testing.EchoingStdin"
        fully_qualified_name: "click.testing.EchoingStdin"
      }
    }
    parameters {
      name: "n"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
  }
  methods {
    name: "readlines"
    fully_qualified_name: "click.testing.EchoingStdin.readlines"
    return_annotation {
      pretty_printed_name: "builtins.list[builtins.bytes]"
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.testing.EchoingStdin"
        fully_qualified_name: "click.testing.EchoingStdin"
      }
    }
  }
  methods {
    name: "__iter__"
    fully_qualified_name: "click.testing.EchoingStdin.__iter__"
    return_annotation {
      pretty_printed_name: "typing.Iterator[builtins.bytes]"
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "click.testing.EchoingStdin"
        fully_qualified_name: "click.testing.EchoingStdin"
      }
    }
  }
  methods {
    name: "__repr__"
    fully_qualified_name: "click.testing.EchoingStdin.__repr__"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "click.testing.EchoingStdin"
        fully_qualified_name: "click.testing.EchoingStdin"
      }
    }
  }
  attributes {
    name: "_input"
    fully_qualified_name: "click.testing.EchoingStdin._input"
    type_annotation {
      pretty_printed_name: "typing.BinaryIO"
      fully_qualified_name: "typing.BinaryIO"
    }
  }
  attributes {
    name: "_output"
    fully_qualified_name: "click.testing.EchoingStdin._output"
    type_annotation {
      pretty_printed_name: "typing.BinaryIO"
      fully_qualified_name: "typing.BinaryIO"
    }
  }
  attributes {
    name: "_paused"
    fully_qualified_name: "click.testing.EchoingStdin._paused"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
}
classes {
  name: "_NamedTextIOWrapper"
  fully_qualified_name: "click.testing._NamedTextIOWrapper"
  super_classes: "io.TextIOWrapper"
  methods {
    name: "__init__"
    fully_qualified_name: "click.testing._NamedTextIOWrapper.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.testing._NamedTextIOWrapper"
        fully_qualified_name: "click.testing._NamedTextIOWrapper"
      }
    }
    parameters {
      name: "buffer"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.BinaryIO"
        fully_qualified_name: "typing.BinaryIO"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "mode"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "kwargs"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
  }
  methods {
    name: "name"
    fully_qualified_name: "click.testing._NamedTextIOWrapper.name"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.testing._NamedTextIOWrapper"
        fully_qualified_name: "click.testing._NamedTextIOWrapper"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "mode"
    fully_qualified_name: "click.testing._NamedTextIOWrapper.mode"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.testing._NamedTextIOWrapper"
        fully_qualified_name: "click.testing._NamedTextIOWrapper"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  attributes {
    name: "_name"
    fully_qualified_name: "click.testing._NamedTextIOWrapper._name"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  attributes {
    name: "_mode"
    fully_qualified_name: "click.testing._NamedTextIOWrapper._mode"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
}
classes {
  name: "Result"
  fully_qualified_name: "click.testing.Result"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "click.testing.Result.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.testing.Result"
        fully_qualified_name: "click.testing.Result"
      }
    }
    parameters {
      name: "runner"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.testing.CliRunner"
        fully_qualified_name: "click.testing.CliRunner"
      }
    }
    parameters {
      name: "stdout_bytes"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    parameters {
      name: "stderr_bytes"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.bytes,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "return_value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "exit_code"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "exception"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.BaseException,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.BaseException"
          fully_qualified_name: "builtins.BaseException"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "exc_info"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Tuple[Type[builtins.BaseException],builtins.BaseException,types.TracebackType],None]"
        kind: UNION
        args {
          pretty_printed_name: "Tuple[Type[builtins.BaseException],builtins.BaseException,types.TracebackType]"
          kind: TUPLE
          args {
            pretty_printed_name: "Type[builtins.BaseException]"
            kind: TYPE
            args {
              pretty_printed_name: "builtins.BaseException"
              fully_qualified_name: "builtins.BaseException"
            }
          }
          args {
            pretty_printed_name: "builtins.BaseException"
            fully_qualified_name: "builtins.BaseException"
          }
          args {
            pretty_printed_name: "types.TracebackType"
            fully_qualified_name: "types.TracebackType"
          }
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "output"
    fully_qualified_name: "click.testing.Result.output"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.testing.Result"
        fully_qualified_name: "click.testing.Result"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "stdout"
    fully_qualified_name: "click.testing.Result.stdout"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.testing.Result"
        fully_qualified_name: "click.testing.Result"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "stderr"
    fully_qualified_name: "click.testing.Result.stderr"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.testing.Result"
        fully_qualified_name: "click.testing.Result"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "__repr__"
    fully_qualified_name: "click.testing.Result.__repr__"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "click.testing.Result"
        fully_qualified_name: "click.testing.Result"
      }
    }
  }
  attributes {
    name: "runner"
    fully_qualified_name: "click.testing.Result.runner"
    type_annotation {
      pretty_printed_name: "click.testing.CliRunner"
      fully_qualified_name: "click.testing.CliRunner"
    }
  }
  attributes {
    name: "stdout_bytes"
    fully_qualified_name: "click.testing.Result.stdout_bytes"
    type_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
  }
  attributes {
    name: "stderr_bytes"
    fully_qualified_name: "click.testing.Result.stderr_bytes"
    type_annotation {
      pretty_printed_name: "Union[builtins.bytes,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  attributes {
    name: "return_value"
    fully_qualified_name: "click.testing.Result.return_value"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  attributes {
    name: "exit_code"
    fully_qualified_name: "click.testing.Result.exit_code"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  attributes {
    name: "exception"
    fully_qualified_name: "click.testing.Result.exception"
    type_annotation {
      pretty_printed_name: "Union[builtins.BaseException,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.BaseException"
        fully_qualified_name: "builtins.BaseException"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  attributes {
    name: "exc_info"
    fully_qualified_name: "click.testing.Result.exc_info"
    type_annotation {
      pretty_printed_name: "Union[Tuple[Type[builtins.BaseException],builtins.BaseException,types.TracebackType],None]"
      kind: UNION
      args {
        pretty_printed_name: "Tuple[Type[builtins.BaseException],builtins.BaseException,types.TracebackType]"
        kind: TUPLE
        args {
          pretty_printed_name: "Type[builtins.BaseException]"
          kind: TYPE
          args {
            pretty_printed_name: "builtins.BaseException"
            fully_qualified_name: "builtins.BaseException"
          }
        }
        args {
          pretty_printed_name: "builtins.BaseException"
          fully_qualified_name: "builtins.BaseException"
        }
        args {
          pretty_printed_name: "types.TracebackType"
          fully_qualified_name: "types.TracebackType"
        }
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
}
classes {
  name: "CliRunner"
  fully_qualified_name: "click.testing.CliRunner"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "click.testing.CliRunner.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.testing.CliRunner"
        fully_qualified_name: "click.testing.CliRunner"
      }
    }
    parameters {
      name: "charset"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "env"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.Mapping[builtins.str,Union[builtins.str,None]],None]"
        kind: UNION
        args {
          pretty_printed_name: "typing.Mapping[builtins.str,Union[builtins.str,None]]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "Union[builtins.str,None]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "None"
              kind: NONE
            }
          }
          fully_qualified_name: "typing.Mapping"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "echo_stdin"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    parameters {
      name: "mix_stderr"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
  }
  methods {
    name: "get_default_prog_name"
    fully_qualified_name: "click.testing.CliRunner.get_default_prog_name"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.testing.CliRunner"
        fully_qualified_name: "click.testing.CliRunner"
      }
    }
    parameters {
      name: "cli"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.core.BaseCommand"
        fully_qualified_name: "click.core.BaseCommand"
      }
    }
  }
  methods {
    name: "make_env"
    fully_qualified_name: "click.testing.CliRunner.make_env"
    return_annotation {
      pretty_printed_name: "typing.Mapping[builtins.str,Union[builtins.str,None]]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      fully_qualified_name: "typing.Mapping"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.testing.CliRunner"
        fully_qualified_name: "click.testing.CliRunner"
      }
    }
    parameters {
      name: "overrides"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.Mapping[builtins.str,Union[builtins.str,None]],None]"
        kind: UNION
        args {
          pretty_printed_name: "typing.Mapping[builtins.str,Union[builtins.str,None]]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "Union[builtins.str,None]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "None"
              kind: NONE
            }
          }
          fully_qualified_name: "typing.Mapping"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "isolation"
    fully_qualified_name: "click.testing.CliRunner.isolation"
    return_annotation {
      pretty_printed_name: "typing.Iterator[Tuple[io.BytesIO,Union[io.BytesIO,None]]]"
      args {
        pretty_printed_name: "Tuple[io.BytesIO,Union[io.BytesIO,None]]"
        kind: TUPLE
        args {
          pretty_printed_name: "io.BytesIO"
          fully_qualified_name: "io.BytesIO"
        }
        args {
          pretty_printed_name: "Union[io.BytesIO,None]"
          kind: UNION
          args {
            pretty_printed_name: "io.BytesIO"
            fully_qualified_name: "io.BytesIO"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.testing.CliRunner"
        fully_qualified_name: "click.testing.CliRunner"
      }
    }
    parameters {
      name: "input"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,builtins.bytes,typing.IO[Any],None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "typing.IO[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "typing.IO"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "env"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.Mapping[builtins.str,Union[builtins.str,None]],None]"
        kind: UNION
        args {
          pretty_printed_name: "typing.Mapping[builtins.str,Union[builtins.str,None]]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "Union[builtins.str,None]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "None"
              kind: NONE
            }
          }
          fully_qualified_name: "typing.Mapping"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "color"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    has_decorators: true
    resolved_decorator_names: "contextlib.contextmanager"
  }
  methods {
    name: "invoke"
    fully_qualified_name: "click.testing.CliRunner.invoke"
    return_annotation {
      pretty_printed_name: "click.testing.Result"
      fully_qualified_name: "click.testing.Result"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.testing.CliRunner"
        fully_qualified_name: "click.testing.CliRunner"
      }
    }
    parameters {
      name: "cli"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.core.BaseCommand"
        fully_qualified_name: "click.core.BaseCommand"
      }
    }
    parameters {
      name: "args"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,typing.Sequence[builtins.str],None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "typing.Sequence[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "typing.Sequence"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "input"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,builtins.bytes,typing.IO[Any],None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "typing.IO[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "typing.IO"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "env"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.Mapping[builtins.str,Union[builtins.str,None]],None]"
        kind: UNION
        args {
          pretty_printed_name: "typing.Mapping[builtins.str,Union[builtins.str,None]]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "Union[builtins.str,None]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "None"
              kind: NONE
            }
          }
          fully_qualified_name: "typing.Mapping"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "catch_exceptions"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    parameters {
      name: "color"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    parameters {
      name: "extra"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
  }
  methods {
    name: "isolated_filesystem"
    fully_qualified_name: "click.testing.CliRunner.isolated_filesystem"
    return_annotation {
      pretty_printed_name: "typing.Iterator[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.testing.CliRunner"
        fully_qualified_name: "click.testing.CliRunner"
      }
    }
    parameters {
      name: "temp_dir"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,os.PathLike[Any],None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "os.PathLike[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "os.PathLike"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "contextlib.contextmanager"
  }
  attributes {
    name: "charset"
    fully_qualified_name: "click.testing.CliRunner.charset"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  attributes {
    name: "env"
    fully_qualified_name: "click.testing.CliRunner.env"
    type_annotation {
      pretty_printed_name: "typing.Mapping[builtins.str,Union[builtins.str,None]]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      fully_qualified_name: "typing.Mapping"
    }
  }
  attributes {
    name: "echo_stdin"
    fully_qualified_name: "click.testing.CliRunner.echo_stdin"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
  attributes {
    name: "mix_stderr"
    fully_qualified_name: "click.testing.CliRunner.mix_stderr"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
}
functions {
  name: "make_input_stream"
  fully_qualified_name: "click.testing.make_input_stream"
  return_annotation {
    pretty_printed_name: "typing.BinaryIO"
    fully_qualified_name: "typing.BinaryIO"
  }
  parameters {
    name: "input"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,builtins.bytes,typing.IO[Any],None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
      args {
        pretty_printed_name: "typing.IO[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "typing.IO"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  parameters {
    name: "charset"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
}
vars {
  name: "__annotations__"
  fully_qualified_name: "click.testing.__annotations__"
  type_annotation {
    pretty_printed_name: "builtins.dict[builtins.str,Any]"
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    args {
      pretty_printed_name: "Any"
      kind: ANY
    }
    fully_qualified_name: "builtins.dict"
  }
}
vars {
  name: "t"
  fully_qualified_name: "typing"
  is_imported_module: true
}
