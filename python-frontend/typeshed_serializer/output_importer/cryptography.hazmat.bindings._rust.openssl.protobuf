fully_qualified_name: "cryptography.hazmat.bindings._rust.openssl"
classes {
  name: "OpenSSLError"
  fully_qualified_name: "cryptography.hazmat.bindings._rust.openssl.OpenSSLError"
  super_classes: "builtins.object"
  methods {
    name: "lib"
    fully_qualified_name: "cryptography.hazmat.bindings._rust.openssl.OpenSSLError.lib"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.bindings._rust.openssl.OpenSSLError"
        fully_qualified_name: "cryptography.hazmat.bindings._rust.openssl.OpenSSLError"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "reason"
    fully_qualified_name: "cryptography.hazmat.bindings._rust.openssl.OpenSSLError.reason"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.bindings._rust.openssl.OpenSSLError"
        fully_qualified_name: "cryptography.hazmat.bindings._rust.openssl.OpenSSLError"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "reason_text"
    fully_qualified_name: "cryptography.hazmat.bindings._rust.openssl.OpenSSLError.reason_text"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.bindings._rust.openssl.OpenSSLError"
        fully_qualified_name: "cryptography.hazmat.bindings._rust.openssl.OpenSSLError"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "_lib_reason_match"
    fully_qualified_name: "cryptography.hazmat.bindings._rust.openssl.OpenSSLError._lib_reason_match"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.bindings._rust.openssl.OpenSSLError"
        fully_qualified_name: "cryptography.hazmat.bindings._rust.openssl.OpenSSLError"
      }
    }
    parameters {
      name: "lib"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "reason"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
  }
}
functions {
  name: "openssl_version"
  fully_qualified_name: "cryptography.hazmat.bindings._rust.openssl.openssl_version"
  return_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
functions {
  name: "raise_openssl_error"
  fully_qualified_name: "cryptography.hazmat.bindings._rust.openssl.raise_openssl_error"
  return_annotation {
    pretty_printed_name: "NoReturn"
    kind: UNINHABITED
  }
}
functions {
  name: "capture_error_stack"
  fully_qualified_name: "cryptography.hazmat.bindings._rust.openssl.capture_error_stack"
  return_annotation {
    pretty_printed_name: "builtins.list[cryptography.hazmat.bindings._rust.openssl.OpenSSLError]"
    args {
      pretty_printed_name: "cryptography.hazmat.bindings._rust.openssl.OpenSSLError"
      fully_qualified_name: "cryptography.hazmat.bindings._rust.openssl.OpenSSLError"
    }
    fully_qualified_name: "builtins.list"
  }
}
vars {
  name: "x25519"
  fully_qualified_name: "cryptography.hazmat.bindings._rust.openssl.x25519"
  is_imported_module: true
}
vars {
  name: "__all__"
  fully_qualified_name: "cryptography.hazmat.bindings._rust.openssl.__all__"
  type_annotation {
    pretty_printed_name: "builtins.list[builtins.str]"
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    fully_qualified_name: "builtins.list"
  }
}
