fully_qualified_name: "werkzeug.http"
classes {
  name: "COEP"
  fully_qualified_name: "werkzeug.http.COEP"
  super_classes: "enum.Enum"
  is_enum: true
  attributes {
    name: "UNSAFE_NONE"
    fully_qualified_name: "werkzeug.http.COEP.UNSAFE_NONE"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  attributes {
    name: "REQUIRE_CORP"
    fully_qualified_name: "werkzeug.http.COEP.REQUIRE_CORP"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
}
classes {
  name: "COOP"
  fully_qualified_name: "werkzeug.http.COOP"
  super_classes: "enum.Enum"
  is_enum: true
  attributes {
    name: "UNSAFE_NONE"
    fully_qualified_name: "werkzeug.http.COOP.UNSAFE_NONE"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  attributes {
    name: "SAME_ORIGIN_ALLOW_POPUPS"
    fully_qualified_name: "werkzeug.http.COOP.SAME_ORIGIN_ALLOW_POPUPS"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  attributes {
    name: "SAME_ORIGIN"
    fully_qualified_name: "werkzeug.http.COOP.SAME_ORIGIN"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
}
functions {
  name: "_parse_list_header"
  fully_qualified_name: "urllib.request.parse_http_list"
  return_annotation {
    pretty_printed_name: "builtins.list[builtins.str]"
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    fully_qualified_name: "builtins.list"
  }
  parameters {
    name: "s"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
}
functions {
  name: "quote_header_value"
  fully_qualified_name: "werkzeug.http.quote_header_value"
  return_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
  parameters {
    name: "value"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  parameters {
    name: "extra_chars"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  parameters {
    name: "allow_token"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
}
functions {
  name: "unquote_header_value"
  fully_qualified_name: "werkzeug.http.unquote_header_value"
  return_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
  parameters {
    name: "value"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  parameters {
    name: "is_filename"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.bool,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
}
functions {
  name: "dump_options_header"
  fully_qualified_name: "werkzeug.http.dump_options_header"
  return_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
  parameters {
    name: "header"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  parameters {
    name: "options"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "typing.Mapping[builtins.str,Any]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "typing.Mapping"
    }
  }
}
functions {
  name: "dump_header"
  fully_qualified_name: "werkzeug.http.dump_header"
  return_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
  parameters {
    name: "iterable"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.dict[builtins.str,Any],typing.Iterable[Any]]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.dict[builtins.str,Any]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "builtins.dict"
      }
      args {
        pretty_printed_name: "typing.Iterable[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
  }
  parameters {
    name: "allow_token"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.bool,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
}
functions {
  name: "dump_csp_header"
  fully_qualified_name: "werkzeug.http.dump_csp_header"
  return_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
  parameters {
    name: "header"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
      fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
    }
  }
}
functions {
  name: "parse_list_header"
  fully_qualified_name: "werkzeug.http.parse_list_header"
  return_annotation {
    pretty_printed_name: "builtins.list[builtins.str]"
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    fully_qualified_name: "builtins.list"
  }
  parameters {
    name: "value"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
}
functions {
  name: "parse_dict_header"
  fully_qualified_name: "werkzeug.http.parse_dict_header"
  return_annotation {
    pretty_printed_name: "builtins.dict[builtins.str,builtins.str]"
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    fully_qualified_name: "builtins.dict"
  }
  parameters {
    name: "value"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  parameters {
    name: "cls"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Type[builtins.dict[Any,Any]],None]"
      kind: UNION
      args {
        pretty_printed_name: "Type[builtins.dict[Any,Any]]"
        kind: TYPE
        args {
          pretty_printed_name: "builtins.dict[Any,Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "builtins.dict"
        }
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
}
functions {
  name: "parse_options_header"
  fully_qualified_name: "werkzeug.http.parse_options_header"
  return_annotation {
    pretty_printed_name: "Tuple[builtins.str,builtins.dict[builtins.str,builtins.str]]"
    kind: TUPLE
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    args {
      pretty_printed_name: "builtins.dict[builtins.str,builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "builtins.dict"
    }
  }
  parameters {
    name: "value"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
}
functions {
  name: "parse_set_header"
  fully_qualified_name: "werkzeug.http.parse_set_header"
  return_annotation {
    pretty_printed_name: "werkzeug.datastructures.structures.HeaderSet"
    fully_qualified_name: "werkzeug.datastructures.structures.HeaderSet"
  }
  parameters {
    name: "value"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  parameters {
    name: "on_update"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[CallableType[builtins.function],None]"
      kind: UNION
      args {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
}
functions {
  name: "parse_authorization_header"
  fully_qualified_name: "werkzeug.http.parse_authorization_header"
  return_annotation {
    pretty_printed_name: "Union[werkzeug.datastructures.auth.Authorization,None]"
    kind: UNION
    args {
      pretty_printed_name: "werkzeug.datastructures.auth.Authorization"
      fully_qualified_name: "werkzeug.datastructures.auth.Authorization"
    }
    args {
      pretty_printed_name: "None"
      kind: NONE
    }
  }
  parameters {
    name: "value"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
}
functions {
  name: "parse_www_authenticate_header"
  fully_qualified_name: "werkzeug.http.parse_www_authenticate_header"
  return_annotation {
    pretty_printed_name: "werkzeug.datastructures.auth.WWWAuthenticate"
    fully_qualified_name: "werkzeug.datastructures.auth.WWWAuthenticate"
  }
  parameters {
    name: "value"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  parameters {
    name: "on_update"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[CallableType[builtins.function],None]"
      kind: UNION
      args {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
}
functions {
  name: "parse_if_range_header"
  fully_qualified_name: "werkzeug.http.parse_if_range_header"
  return_annotation {
    pretty_printed_name: "werkzeug.datastructures.range.IfRange"
    fully_qualified_name: "werkzeug.datastructures.range.IfRange"
  }
  parameters {
    name: "value"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
}
functions {
  name: "parse_range_header"
  fully_qualified_name: "werkzeug.http.parse_range_header"
  return_annotation {
    pretty_printed_name: "Union[werkzeug.datastructures.range.Range,None]"
    kind: UNION
    args {
      pretty_printed_name: "werkzeug.datastructures.range.Range"
      fully_qualified_name: "werkzeug.datastructures.range.Range"
    }
    args {
      pretty_printed_name: "None"
      kind: NONE
    }
  }
  parameters {
    name: "value"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  parameters {
    name: "make_inclusive"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
}
functions {
  name: "parse_content_range_header"
  fully_qualified_name: "werkzeug.http.parse_content_range_header"
  return_annotation {
    pretty_printed_name: "Union[werkzeug.datastructures.range.ContentRange,None]"
    kind: UNION
    args {
      pretty_printed_name: "werkzeug.datastructures.range.ContentRange"
      fully_qualified_name: "werkzeug.datastructures.range.ContentRange"
    }
    args {
      pretty_printed_name: "None"
      kind: NONE
    }
  }
  parameters {
    name: "value"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  parameters {
    name: "on_update"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[CallableType[builtins.function],None]"
      kind: UNION
      args {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
}
functions {
  name: "quote_etag"
  fully_qualified_name: "werkzeug.http.quote_etag"
  return_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
  parameters {
    name: "etag"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  parameters {
    name: "weak"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
}
functions {
  name: "unquote_etag"
  fully_qualified_name: "werkzeug.http.unquote_etag"
  return_annotation {
    pretty_printed_name: "Union[Tuple[builtins.str,builtins.bool],Tuple[None,None]]"
    kind: UNION
    args {
      pretty_printed_name: "Tuple[builtins.str,builtins.bool]"
      kind: TUPLE
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    args {
      pretty_printed_name: "Tuple[None,None]"
      kind: TUPLE
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  parameters {
    name: "etag"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
}
functions {
  name: "parse_etags"
  fully_qualified_name: "werkzeug.http.parse_etags"
  return_annotation {
    pretty_printed_name: "werkzeug.datastructures.etag.ETags"
    fully_qualified_name: "werkzeug.datastructures.etag.ETags"
  }
  parameters {
    name: "value"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
}
functions {
  name: "generate_etag"
  fully_qualified_name: "werkzeug.http.generate_etag"
  return_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
  parameters {
    name: "data"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
  }
}
functions {
  name: "parse_date"
  fully_qualified_name: "werkzeug.http.parse_date"
  return_annotation {
    pretty_printed_name: "Union[datetime.datetime,None]"
    kind: UNION
    args {
      pretty_printed_name: "datetime.datetime"
      fully_qualified_name: "datetime.datetime"
    }
    args {
      pretty_printed_name: "None"
      kind: NONE
    }
  }
  parameters {
    name: "value"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
}
functions {
  name: "http_date"
  fully_qualified_name: "werkzeug.http.http_date"
  return_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
  parameters {
    name: "timestamp"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[datetime.datetime,datetime.date,builtins.int,builtins.float,TypeAlias[Tuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]],None]"
      kind: UNION
      args {
        pretty_printed_name: "datetime.datetime"
        fully_qualified_name: "datetime.datetime"
      }
      args {
        pretty_printed_name: "datetime.date"
        fully_qualified_name: "datetime.date"
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
      args {
        pretty_printed_name: "TypeAlias[Tuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Tuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]"
          kind: TUPLE
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
        }
        fully_qualified_name: "time.struct_time"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
}
functions {
  name: "parse_age"
  fully_qualified_name: "werkzeug.http.parse_age"
  return_annotation {
    pretty_printed_name: "Union[datetime.timedelta,None]"
    kind: UNION
    args {
      pretty_printed_name: "datetime.timedelta"
      fully_qualified_name: "datetime.timedelta"
    }
    args {
      pretty_printed_name: "None"
      kind: NONE
    }
  }
  parameters {
    name: "value"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
}
functions {
  name: "dump_age"
  fully_qualified_name: "werkzeug.http.dump_age"
  return_annotation {
    pretty_printed_name: "Union[builtins.str,None]"
    kind: UNION
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    args {
      pretty_printed_name: "None"
      kind: NONE
    }
  }
  parameters {
    name: "age"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[datetime.timedelta,builtins.int,None]"
      kind: UNION
      args {
        pretty_printed_name: "datetime.timedelta"
        fully_qualified_name: "datetime.timedelta"
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
}
functions {
  name: "is_resource_modified"
  fully_qualified_name: "werkzeug.http.is_resource_modified"
  return_annotation {
    pretty_printed_name: "builtins.bool"
    fully_qualified_name: "builtins.bool"
  }
  parameters {
    name: "environ"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[builtins.dict[builtins.str,Any]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "builtins.dict[builtins.str,Any]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "builtins.dict"
      }
      fully_qualified_name: "_typeshed.wsgi.WSGIEnvironment"
    }
  }
  parameters {
    name: "etag"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  parameters {
    name: "data"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.bytes,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  parameters {
    name: "last_modified"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[datetime.datetime,builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "datetime.datetime"
        fully_qualified_name: "datetime.datetime"
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  parameters {
    name: "ignore_if_range"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
}
functions {
  name: "remove_entity_headers"
  fully_qualified_name: "werkzeug.http.remove_entity_headers"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "headers"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[werkzeug.datastructures.headers.Headers,builtins.list[Tuple[builtins.str,builtins.str]]]"
      kind: UNION
      args {
        pretty_printed_name: "werkzeug.datastructures.headers.Headers"
        fully_qualified_name: "werkzeug.datastructures.headers.Headers"
      }
      args {
        pretty_printed_name: "builtins.list[Tuple[builtins.str,builtins.str]]"
        args {
          pretty_printed_name: "Tuple[builtins.str,builtins.str]"
          kind: TUPLE
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        fully_qualified_name: "builtins.list"
      }
    }
  }
  parameters {
    name: "allowed"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "typing.Iterable[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "typing.Iterable"
    }
  }
}
functions {
  name: "remove_hop_by_hop_headers"
  fully_qualified_name: "werkzeug.http.remove_hop_by_hop_headers"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "headers"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[werkzeug.datastructures.headers.Headers,builtins.list[Tuple[builtins.str,builtins.str]]]"
      kind: UNION
      args {
        pretty_printed_name: "werkzeug.datastructures.headers.Headers"
        fully_qualified_name: "werkzeug.datastructures.headers.Headers"
      }
      args {
        pretty_printed_name: "builtins.list[Tuple[builtins.str,builtins.str]]"
        args {
          pretty_printed_name: "Tuple[builtins.str,builtins.str]"
          kind: TUPLE
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        fully_qualified_name: "builtins.list"
      }
    }
  }
}
functions {
  name: "is_entity_header"
  fully_qualified_name: "werkzeug.http.is_entity_header"
  return_annotation {
    pretty_printed_name: "builtins.bool"
    fully_qualified_name: "builtins.bool"
  }
  parameters {
    name: "header"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
}
functions {
  name: "is_hop_by_hop_header"
  fully_qualified_name: "werkzeug.http.is_hop_by_hop_header"
  return_annotation {
    pretty_printed_name: "builtins.bool"
    fully_qualified_name: "builtins.bool"
  }
  parameters {
    name: "header"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
}
functions {
  name: "parse_cookie"
  fully_qualified_name: "werkzeug.http.parse_cookie"
  return_annotation {
    pretty_printed_name: "werkzeug.datastructures.structures.MultiDict[builtins.str,builtins.str]"
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    fully_qualified_name: "werkzeug.datastructures.structures.MultiDict"
  }
  parameters {
    name: "header"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[TypeAlias[builtins.dict[builtins.str,Any]],builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "TypeAlias[builtins.dict[builtins.str,Any]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "builtins.dict[builtins.str,Any]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "builtins.dict"
        }
        fully_qualified_name: "_typeshed.wsgi.WSGIEnvironment"
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  parameters {
    name: "charset"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  parameters {
    name: "errors"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  parameters {
    name: "cls"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Type[werkzeug.datastructures.structures.MultiDict[Any,Any]],None]"
      kind: UNION
      args {
        pretty_printed_name: "Type[werkzeug.datastructures.structures.MultiDict[Any,Any]]"
        kind: TYPE
        args {
          pretty_printed_name: "werkzeug.datastructures.structures.MultiDict[Any,Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "werkzeug.datastructures.structures.MultiDict"
        }
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
}
functions {
  name: "dump_cookie"
  fully_qualified_name: "werkzeug.http.dump_cookie"
  return_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
  parameters {
    name: "key"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  parameters {
    name: "value"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  parameters {
    name: "max_age"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[datetime.timedelta,builtins.int,None]"
      kind: UNION
      args {
        pretty_printed_name: "datetime.timedelta"
        fully_qualified_name: "datetime.timedelta"
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  parameters {
    name: "expires"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,datetime.datetime,builtins.int,builtins.float,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "datetime.datetime"
        fully_qualified_name: "datetime.datetime"
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  parameters {
    name: "path"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  parameters {
    name: "domain"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  parameters {
    name: "secure"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
  parameters {
    name: "httponly"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
  parameters {
    name: "charset"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  parameters {
    name: "sync_expires"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
  parameters {
    name: "max_size"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "samesite"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
}
functions {
  name: "is_byte_range_valid"
  fully_qualified_name: "werkzeug.http.is_byte_range_valid"
  return_annotation {
    pretty_printed_name: "builtins.bool"
    fully_qualified_name: "builtins.bool"
  }
  parameters {
    name: "start"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.int,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  parameters {
    name: "stop"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.int,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  parameters {
    name: "length"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.int,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
}
overloaded_functions {
  name: "parse_accept_header"
  fullname: "werkzeug.http.parse_accept_header"
  definitions {
    name: "parse_accept_header"
    fully_qualified_name: "werkzeug.http.parse_accept_header"
    return_annotation {
      pretty_printed_name: "werkzeug.datastructures.accept.Accept"
      fully_qualified_name: "werkzeug.datastructures.accept.Accept"
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "t.overload"
    is_overload: true
  }
  definitions {
    name: "parse_accept_header"
    fully_qualified_name: "werkzeug.http.parse_accept_header"
    return_annotation {
      pretty_printed_name: "werkzeug.http._TAnyAccept"
      kind: TYPE_VAR
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[werkzeug.http._TAnyAccept]"
        kind: TYPE
        args {
          pretty_printed_name: "werkzeug.http._TAnyAccept"
          kind: TYPE_VAR
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "t.overload"
    is_overload: true
  }
}
overloaded_functions {
  name: "parse_cache_control_header"
  fullname: "werkzeug.http.parse_cache_control_header"
  definitions {
    name: "parse_cache_control_header"
    fully_qualified_name: "werkzeug.http.parse_cache_control_header"
    return_annotation {
      pretty_printed_name: "werkzeug.datastructures.cache_control.RequestCacheControl"
      fully_qualified_name: "werkzeug.datastructures.cache_control.RequestCacheControl"
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "on_update"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[CallableType[builtins.function],None]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[CallableType[builtins.function],None]"
          kind: UNION
          args {
            pretty_printed_name: "CallableType[builtins.function]"
            kind: CALLABLE
            args {
              pretty_printed_name: "builtins.function"
              fully_qualified_name: "builtins.function"
            }
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        fully_qualified_name: "werkzeug.http._t_cc_update"
      }
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_decorators: true
    resolved_decorator_names: "t.overload"
    is_overload: true
  }
  definitions {
    name: "parse_cache_control_header"
    fully_qualified_name: "werkzeug.http.parse_cache_control_header"
    return_annotation {
      pretty_printed_name: "werkzeug.http._TAnyCC"
      kind: TYPE_VAR
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "on_update"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[CallableType[builtins.function],None]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[CallableType[builtins.function],None]"
          kind: UNION
          args {
            pretty_printed_name: "CallableType[builtins.function]"
            kind: CALLABLE
            args {
              pretty_printed_name: "builtins.function"
              fully_qualified_name: "builtins.function"
            }
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        fully_qualified_name: "werkzeug.http._t_cc_update"
      }
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[werkzeug.http._TAnyCC]"
        kind: TYPE
        args {
          pretty_printed_name: "werkzeug.http._TAnyCC"
          kind: TYPE_VAR
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "t.overload"
    is_overload: true
  }
}
overloaded_functions {
  name: "parse_csp_header"
  fullname: "werkzeug.http.parse_csp_header"
  definitions {
    name: "parse_csp_header"
    fully_qualified_name: "werkzeug.http.parse_csp_header"
    return_annotation {
      pretty_printed_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
      fully_qualified_name: "werkzeug.datastructures.csp.ContentSecurityPolicy"
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "on_update"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[CallableType[builtins.function],None]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[CallableType[builtins.function],None]"
          kind: UNION
          args {
            pretty_printed_name: "CallableType[builtins.function]"
            kind: CALLABLE
            args {
              pretty_printed_name: "builtins.function"
              fully_qualified_name: "builtins.function"
            }
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        fully_qualified_name: "werkzeug.http._t_csp_update"
      }
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_decorators: true
    resolved_decorator_names: "t.overload"
    is_overload: true
  }
  definitions {
    name: "parse_csp_header"
    fully_qualified_name: "werkzeug.http.parse_csp_header"
    return_annotation {
      pretty_printed_name: "werkzeug.http._TAnyCSP"
      kind: TYPE_VAR
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "on_update"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[CallableType[builtins.function],None]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[CallableType[builtins.function],None]"
          kind: UNION
          args {
            pretty_printed_name: "CallableType[builtins.function]"
            kind: CALLABLE
            args {
              pretty_printed_name: "builtins.function"
              fully_qualified_name: "builtins.function"
            }
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
        fully_qualified_name: "werkzeug.http._t_csp_update"
      }
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[werkzeug.http._TAnyCSP]"
        kind: TYPE
        args {
          pretty_printed_name: "werkzeug.http._TAnyCSP"
          kind: TYPE_VAR
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "t.overload"
    is_overload: true
  }
}
vars {
  name: "__annotations__"
  fully_qualified_name: "werkzeug.http.__annotations__"
  type_annotation {
    pretty_printed_name: "builtins.dict[builtins.str,Any]"
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    args {
      pretty_printed_name: "Any"
      kind: ANY
    }
    fully_qualified_name: "builtins.dict"
  }
}
vars {
  name: "email"
  fully_qualified_name: "email"
  is_imported_module: true
}
vars {
  name: "t"
  fully_qualified_name: "typing"
  is_imported_module: true
}
vars {
  name: "_token_chars"
  fully_qualified_name: "werkzeug.http._token_chars"
  type_annotation {
    pretty_printed_name: "builtins.frozenset[builtins.str]"
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    fully_qualified_name: "builtins.frozenset"
  }
}
vars {
  name: "_etag_re"
  fully_qualified_name: "werkzeug.http._etag_re"
  type_annotation {
    pretty_printed_name: "re.Pattern[builtins.str]"
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    fully_qualified_name: "re.Pattern"
  }
}
vars {
  name: "_entity_headers"
  fully_qualified_name: "werkzeug.http._entity_headers"
  type_annotation {
    pretty_printed_name: "builtins.frozenset[builtins.str]"
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    fully_qualified_name: "builtins.frozenset"
  }
}
vars {
  name: "_hop_by_hop_headers"
  fully_qualified_name: "werkzeug.http._hop_by_hop_headers"
  type_annotation {
    pretty_printed_name: "builtins.frozenset[builtins.str]"
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    fully_qualified_name: "builtins.frozenset"
  }
}
vars {
  name: "HTTP_STATUS_CODES"
  fully_qualified_name: "werkzeug.http.HTTP_STATUS_CODES"
  type_annotation {
    pretty_printed_name: "builtins.dict[builtins.int,builtins.str]"
    args {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    fully_qualified_name: "builtins.dict"
  }
}
vars {
  name: "_parameter_re"
  fully_qualified_name: "werkzeug.http._parameter_re"
  type_annotation {
    pretty_printed_name: "re.Pattern[builtins.str]"
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    fully_qualified_name: "re.Pattern"
  }
}
vars {
  name: "_charset_value_re"
  fully_qualified_name: "werkzeug.http._charset_value_re"
  type_annotation {
    pretty_printed_name: "re.Pattern[builtins.str]"
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    fully_qualified_name: "re.Pattern"
  }
}
vars {
  name: "_continuation_re"
  fully_qualified_name: "werkzeug.http._continuation_re"
  type_annotation {
    pretty_printed_name: "re.Pattern[builtins.str]"
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    fully_qualified_name: "re.Pattern"
  }
}
vars {
  name: "_cookie_no_quote_re"
  fully_qualified_name: "werkzeug.http._cookie_no_quote_re"
  type_annotation {
    pretty_printed_name: "re.Pattern[builtins.str]"
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    fully_qualified_name: "re.Pattern"
  }
}
vars {
  name: "_cookie_slash_re"
  fully_qualified_name: "werkzeug.http._cookie_slash_re"
  type_annotation {
    pretty_printed_name: "re.Pattern[builtins.bytes]"
    args {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    fully_qualified_name: "re.Pattern"
  }
}
vars {
  name: "_cookie_slash_map"
  fully_qualified_name: "werkzeug.http._cookie_slash_map"
  type_annotation {
    pretty_printed_name: "builtins.dict[builtins.bytes,builtins.bytes]"
    args {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    args {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    fully_qualified_name: "builtins.dict"
  }
}
vars {
  name: "ds"
  fully_qualified_name: "werkzeug.datastructures"
  is_imported_module: true
}
vars {
  name: "_sansio_http"
  fully_qualified_name: "werkzeug.sansio.http"
  is_imported_module: true
}
