fully_qualified_name: "concurrent.futures"
classes {
  name: "BrokenExecutor"
  fully_qualified_name: "concurrent.futures._base.BrokenExecutor"
  super_classes: "builtins.RuntimeError"
}
classes {
  name: "CancelledError"
  fully_qualified_name: "concurrent.futures._base.CancelledError"
  super_classes: "concurrent.futures._base.Error"
}
classes {
  name: "Executor"
  fully_qualified_name: "concurrent.futures._base.Executor"
  super_classes: "builtins.object"
  methods {
    name: "submit"
    fully_qualified_name: "concurrent.futures._base.Executor.submit"
    return_annotation {
      pretty_printed_name: "concurrent.futures._base.Future[concurrent.futures._base._T]"
      args {
        pretty_printed_name: "concurrent.futures._base._T"
        kind: TYPE_VAR
      }
      fully_qualified_name: "concurrent.futures._base.Future"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "concurrent.futures._base.Executor"
        fully_qualified_name: "concurrent.futures._base.Executor"
      }
    }
    parameters {
      name: "fn"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    parameters {
      name: "args"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
      }
    }
    parameters {
      name: "kwargs"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
      }
    }
  }
  methods {
    name: "map"
    fully_qualified_name: "concurrent.futures._base.Executor.map"
    return_annotation {
      pretty_printed_name: "typing.Iterator[concurrent.futures._base._T]"
      args {
        pretty_printed_name: "concurrent.futures._base._T"
        kind: TYPE_VAR
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "concurrent.futures._base.Executor"
        fully_qualified_name: "concurrent.futures._base.Executor"
      }
    }
    parameters {
      name: "fn"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    parameters {
      name: "iterables"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    parameters {
      name: "timeout"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.float,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "chunksize"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
  }
  methods {
    name: "shutdown"
    fully_qualified_name: "concurrent.futures._base.Executor.shutdown"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "concurrent.futures._base.Executor"
        fully_qualified_name: "concurrent.futures._base.Executor"
      }
    }
    parameters {
      name: "wait"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
  }
  methods {
    name: "__enter__"
    fully_qualified_name: "concurrent.futures._base.Executor.__enter__"
    return_annotation {
      pretty_printed_name: "concurrent.futures._base.Executor.Self"
      kind: TYPE_VAR
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "concurrent.futures._base.Executor.Self"
        kind: TYPE_VAR
      }
    }
  }
  methods {
    name: "__exit__"
    fully_qualified_name: "concurrent.futures._base.Executor.__exit__"
    return_annotation {
      pretty_printed_name: "Union[builtins.bool,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "concurrent.futures._base.Executor"
        fully_qualified_name: "concurrent.futures._base.Executor"
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "Union[Type[builtins.BaseException],None]"
        kind: UNION
        args {
          pretty_printed_name: "Type[builtins.BaseException]"
          kind: TYPE
          args {
            pretty_printed_name: "builtins.BaseException"
            fully_qualified_name: "builtins.BaseException"
          }
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "Union[builtins.BaseException,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.BaseException"
          fully_qualified_name: "builtins.BaseException"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "Union[types.TracebackType,None]"
        kind: UNION
        args {
          pretty_printed_name: "types.TracebackType"
          fully_qualified_name: "types.TracebackType"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
}
classes {
  name: "Future"
  fully_qualified_name: "concurrent.futures._base.Future"
  super_classes: "builtins.object"
  methods {
    name: "cancel"
    fully_qualified_name: "concurrent.futures._base.Future.cancel"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "concurrent.futures._base.Future[concurrent.futures._base._T]"
        args {
          pretty_printed_name: "concurrent.futures._base._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "concurrent.futures._base.Future"
      }
    }
  }
  methods {
    name: "cancelled"
    fully_qualified_name: "concurrent.futures._base.Future.cancelled"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "concurrent.futures._base.Future[concurrent.futures._base._T]"
        args {
          pretty_printed_name: "concurrent.futures._base._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "concurrent.futures._base.Future"
      }
    }
  }
  methods {
    name: "running"
    fully_qualified_name: "concurrent.futures._base.Future.running"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "concurrent.futures._base.Future[concurrent.futures._base._T]"
        args {
          pretty_printed_name: "concurrent.futures._base._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "concurrent.futures._base.Future"
      }
    }
  }
  methods {
    name: "done"
    fully_qualified_name: "concurrent.futures._base.Future.done"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "concurrent.futures._base.Future[concurrent.futures._base._T]"
        args {
          pretty_printed_name: "concurrent.futures._base._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "concurrent.futures._base.Future"
      }
    }
  }
  methods {
    name: "add_done_callback"
    fully_qualified_name: "concurrent.futures._base.Future.add_done_callback"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "concurrent.futures._base.Future[concurrent.futures._base._T]"
        args {
          pretty_printed_name: "concurrent.futures._base._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "concurrent.futures._base.Future"
      }
    }
    parameters {
      name: "fn"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
  }
  methods {
    name: "result"
    fully_qualified_name: "concurrent.futures._base.Future.result"
    return_annotation {
      pretty_printed_name: "concurrent.futures._base._T"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "concurrent.futures._base.Future[concurrent.futures._base._T]"
        args {
          pretty_printed_name: "concurrent.futures._base._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "concurrent.futures._base.Future"
      }
    }
    parameters {
      name: "timeout"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.float,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "set_running_or_notify_cancel"
    fully_qualified_name: "concurrent.futures._base.Future.set_running_or_notify_cancel"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "concurrent.futures._base.Future[concurrent.futures._base._T]"
        args {
          pretty_printed_name: "concurrent.futures._base._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "concurrent.futures._base.Future"
      }
    }
  }
  methods {
    name: "set_result"
    fully_qualified_name: "concurrent.futures._base.Future.set_result"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "concurrent.futures._base.Future[concurrent.futures._base._T]"
        args {
          pretty_printed_name: "concurrent.futures._base._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "concurrent.futures._base.Future"
      }
    }
    parameters {
      name: "result"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "concurrent.futures._base._T"
        kind: TYPE_VAR
      }
    }
  }
  methods {
    name: "exception"
    fully_qualified_name: "concurrent.futures._base.Future.exception"
    return_annotation {
      pretty_printed_name: "Union[builtins.BaseException,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.BaseException"
        fully_qualified_name: "builtins.BaseException"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "concurrent.futures._base.Future[concurrent.futures._base._T]"
        args {
          pretty_printed_name: "concurrent.futures._base._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "concurrent.futures._base.Future"
      }
    }
    parameters {
      name: "timeout"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.float,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "set_exception"
    fully_qualified_name: "concurrent.futures._base.Future.set_exception"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "concurrent.futures._base.Future[concurrent.futures._base._T]"
        args {
          pretty_printed_name: "concurrent.futures._base._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "concurrent.futures._base.Future"
      }
    }
    parameters {
      name: "exception"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.BaseException,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.BaseException"
          fully_qualified_name: "builtins.BaseException"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  is_generic: true
}
classes {
  name: "TimeoutError"
  fully_qualified_name: "concurrent.futures._base.TimeoutError"
  super_classes: "concurrent.futures._base.Error"
}
classes {
  name: "ProcessPoolExecutor"
  fully_qualified_name: "concurrent.futures.process.ProcessPoolExecutor"
  super_classes: "concurrent.futures._base.Executor"
  methods {
    name: "__init__"
    fully_qualified_name: "concurrent.futures.process.ProcessPoolExecutor.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "concurrent.futures.process.ProcessPoolExecutor"
        fully_qualified_name: "concurrent.futures.process.ProcessPoolExecutor"
      }
    }
    parameters {
      name: "max_workers"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "mp_context"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[multiprocessing.context.BaseContext,None]"
        kind: UNION
        args {
          pretty_printed_name: "multiprocessing.context.BaseContext"
          fully_qualified_name: "multiprocessing.context.BaseContext"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "initializer"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[CallableType[builtins.function],None]"
        kind: UNION
        args {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "initargs"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.tuple[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "builtins.tuple"
      }
    }
  }
  methods {
    name: "_adjust_process_count"
    fully_qualified_name: "concurrent.futures.process.ProcessPoolExecutor._adjust_process_count"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "concurrent.futures.process.ProcessPoolExecutor"
        fully_qualified_name: "concurrent.futures.process.ProcessPoolExecutor"
      }
    }
  }
  attributes {
    name: "_mp_context"
    fully_qualified_name: "concurrent.futures.process.ProcessPoolExecutor._mp_context"
    type_annotation {
      pretty_printed_name: "Union[multiprocessing.context.BaseContext,None]"
      kind: UNION
      args {
        pretty_printed_name: "multiprocessing.context.BaseContext"
        fully_qualified_name: "multiprocessing.context.BaseContext"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  attributes {
    name: "_initializer"
    fully_qualified_name: "concurrent.futures.process.ProcessPoolExecutor._initializer"
    type_annotation {
      pretty_printed_name: "Union[CallableType[builtins.function],None]"
      kind: UNION
      args {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  attributes {
    name: "_initargs"
    fully_qualified_name: "concurrent.futures.process.ProcessPoolExecutor._initargs"
    type_annotation {
      pretty_printed_name: "builtins.tuple[Any]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "builtins.tuple"
    }
  }
  attributes {
    name: "_executor_manager_thread"
    fully_qualified_name: "concurrent.futures.process.ProcessPoolExecutor._executor_manager_thread"
    type_annotation {
      pretty_printed_name: "concurrent.futures.process._ThreadWakeup"
      fully_qualified_name: "concurrent.futures.process._ThreadWakeup"
    }
  }
  attributes {
    name: "_processes"
    fully_qualified_name: "concurrent.futures.process.ProcessPoolExecutor._processes"
    type_annotation {
      pretty_printed_name: "typing.MutableMapping[builtins.int,multiprocessing.context.Process]"
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "multiprocessing.context.Process"
        fully_qualified_name: "multiprocessing.context.Process"
      }
      fully_qualified_name: "typing.MutableMapping"
    }
  }
  attributes {
    name: "_shutdown_thread"
    fully_qualified_name: "concurrent.futures.process.ProcessPoolExecutor._shutdown_thread"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
  attributes {
    name: "_shutdown_lock"
    fully_qualified_name: "concurrent.futures.process.ProcessPoolExecutor._shutdown_lock"
    type_annotation {
      pretty_printed_name: "threading.Lock"
      fully_qualified_name: "threading.Lock"
    }
  }
  attributes {
    name: "_idle_worker_semaphore"
    fully_qualified_name: "concurrent.futures.process.ProcessPoolExecutor._idle_worker_semaphore"
    type_annotation {
      pretty_printed_name: "threading.Semaphore"
      fully_qualified_name: "threading.Semaphore"
    }
  }
  attributes {
    name: "_broken"
    fully_qualified_name: "concurrent.futures.process.ProcessPoolExecutor._broken"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
  attributes {
    name: "_queue_count"
    fully_qualified_name: "concurrent.futures.process.ProcessPoolExecutor._queue_count"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  attributes {
    name: "_pending_work_items"
    fully_qualified_name: "concurrent.futures.process.ProcessPoolExecutor._pending_work_items"
    type_annotation {
      pretty_printed_name: "builtins.dict[builtins.int,concurrent.futures.process._WorkItem[Any]]"
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "concurrent.futures.process._WorkItem[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "concurrent.futures.process._WorkItem"
      }
      fully_qualified_name: "builtins.dict"
    }
  }
  attributes {
    name: "_cancel_pending_futures"
    fully_qualified_name: "concurrent.futures.process.ProcessPoolExecutor._cancel_pending_futures"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
  attributes {
    name: "_executor_manager_thread_wakeup"
    fully_qualified_name: "concurrent.futures.process.ProcessPoolExecutor._executor_manager_thread_wakeup"
    type_annotation {
      pretty_printed_name: "concurrent.futures.process._ThreadWakeup"
      fully_qualified_name: "concurrent.futures.process._ThreadWakeup"
    }
  }
  attributes {
    name: "_result_queue"
    fully_qualified_name: "concurrent.futures.process.ProcessPoolExecutor._result_queue"
    type_annotation {
      pretty_printed_name: "multiprocessing.queues.SimpleQueue[Any]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "multiprocessing.queues.SimpleQueue"
    }
  }
  attributes {
    name: "_work_ids"
    fully_qualified_name: "concurrent.futures.process.ProcessPoolExecutor._work_ids"
    type_annotation {
      pretty_printed_name: "multiprocessing.queues.Queue[Any]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "multiprocessing.queues.Queue"
    }
  }
}
classes {
  name: "ThreadPoolExecutor"
  fully_qualified_name: "concurrent.futures.thread.ThreadPoolExecutor"
  super_classes: "concurrent.futures._base.Executor"
  methods {
    name: "__init__"
    fully_qualified_name: "concurrent.futures.thread.ThreadPoolExecutor.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "concurrent.futures.thread.ThreadPoolExecutor"
        fully_qualified_name: "concurrent.futures.thread.ThreadPoolExecutor"
      }
    }
    parameters {
      name: "max_workers"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "thread_name_prefix"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "initializer"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[CallableType[builtins.function],None]"
        kind: UNION
        args {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "initargs"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.tuple[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "builtins.tuple"
      }
    }
  }
  methods {
    name: "_adjust_thread_count"
    fully_qualified_name: "concurrent.futures.thread.ThreadPoolExecutor._adjust_thread_count"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "concurrent.futures.thread.ThreadPoolExecutor"
        fully_qualified_name: "concurrent.futures.thread.ThreadPoolExecutor"
      }
    }
  }
  methods {
    name: "_initializer_failed"
    fully_qualified_name: "concurrent.futures.thread.ThreadPoolExecutor._initializer_failed"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "concurrent.futures.thread.ThreadPoolExecutor"
        fully_qualified_name: "concurrent.futures.thread.ThreadPoolExecutor"
      }
    }
  }
  attributes {
    name: "_max_workers"
    fully_qualified_name: "concurrent.futures.thread.ThreadPoolExecutor._max_workers"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  attributes {
    name: "_idle_semaphore"
    fully_qualified_name: "concurrent.futures.thread.ThreadPoolExecutor._idle_semaphore"
    type_annotation {
      pretty_printed_name: "threading.Semaphore"
      fully_qualified_name: "threading.Semaphore"
    }
  }
  attributes {
    name: "_threads"
    fully_qualified_name: "concurrent.futures.thread.ThreadPoolExecutor._threads"
    type_annotation {
      pretty_printed_name: "typing.AbstractSet[threading.Thread]"
      args {
        pretty_printed_name: "threading.Thread"
        fully_qualified_name: "threading.Thread"
      }
      fully_qualified_name: "typing.AbstractSet"
    }
  }
  attributes {
    name: "_broken"
    fully_qualified_name: "concurrent.futures.thread.ThreadPoolExecutor._broken"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
  attributes {
    name: "_shutdown"
    fully_qualified_name: "concurrent.futures.thread.ThreadPoolExecutor._shutdown"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
  attributes {
    name: "_shutdown_lock"
    fully_qualified_name: "concurrent.futures.thread.ThreadPoolExecutor._shutdown_lock"
    type_annotation {
      pretty_printed_name: "threading.Lock"
      fully_qualified_name: "threading.Lock"
    }
  }
  attributes {
    name: "_thread_name_prefix"
    fully_qualified_name: "concurrent.futures.thread.ThreadPoolExecutor._thread_name_prefix"
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  attributes {
    name: "_initializer"
    fully_qualified_name: "concurrent.futures.thread.ThreadPoolExecutor._initializer"
    type_annotation {
      pretty_printed_name: "Union[CallableType[builtins.function],None]"
      kind: UNION
      args {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  attributes {
    name: "_initargs"
    fully_qualified_name: "concurrent.futures.thread.ThreadPoolExecutor._initargs"
    type_annotation {
      pretty_printed_name: "builtins.tuple[Any]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "builtins.tuple"
    }
  }
  attributes {
    name: "_work_queue"
    fully_qualified_name: "concurrent.futures.thread.ThreadPoolExecutor._work_queue"
    type_annotation {
      pretty_printed_name: "queue.SimpleQueue[concurrent.futures.thread._WorkItem[Any]]"
      args {
        pretty_printed_name: "concurrent.futures.thread._WorkItem[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "concurrent.futures.thread._WorkItem"
      }
      fully_qualified_name: "queue.SimpleQueue"
    }
  }
}
classes {
  name: "InvalidStateError"
  fully_qualified_name: "concurrent.futures._base.InvalidStateError"
  super_classes: "concurrent.futures._base.Error"
}
functions {
  name: "as_completed"
  fully_qualified_name: "concurrent.futures._base.as_completed"
  return_annotation {
    pretty_printed_name: "typing.Iterator[concurrent.futures._base.Future[concurrent.futures._base._T]]"
    args {
      pretty_printed_name: "concurrent.futures._base.Future[concurrent.futures._base._T]"
      args {
        pretty_printed_name: "concurrent.futures._base._T"
        kind: TYPE_VAR
      }
      fully_qualified_name: "concurrent.futures._base.Future"
    }
    fully_qualified_name: "typing.Iterator"
  }
  parameters {
    name: "fs"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "typing.Iterable[concurrent.futures._base.Future[concurrent.futures._base._T]]"
      args {
        pretty_printed_name: "concurrent.futures._base.Future[concurrent.futures._base._T]"
        args {
          pretty_printed_name: "concurrent.futures._base._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "concurrent.futures._base.Future"
      }
      fully_qualified_name: "typing.Iterable"
    }
  }
  parameters {
    name: "timeout"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.float,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
}
functions {
  name: "wait"
  fully_qualified_name: "concurrent.futures._base.wait"
  return_annotation {
    pretty_printed_name: "TypeAlias[Tuple[builtins.set[concurrent.futures._base.Future[concurrent.futures._base._T]],builtins.set[concurrent.futures._base.Future[concurrent.futures._base._T]]]]"
    kind: TYPE_ALIAS
    args {
      pretty_printed_name: "Tuple[builtins.set[concurrent.futures._base.Future[concurrent.futures._base._T]],builtins.set[concurrent.futures._base.Future[concurrent.futures._base._T]]]"
      kind: TUPLE
      args {
        pretty_printed_name: "builtins.set[concurrent.futures._base.Future[concurrent.futures._base._T]]"
        args {
          pretty_printed_name: "concurrent.futures._base.Future[concurrent.futures._base._T]"
          args {
            pretty_printed_name: "concurrent.futures._base._T"
            kind: TYPE_VAR
          }
          fully_qualified_name: "concurrent.futures._base.Future"
        }
        fully_qualified_name: "builtins.set"
      }
      args {
        pretty_printed_name: "builtins.set[concurrent.futures._base.Future[concurrent.futures._base._T]]"
        args {
          pretty_printed_name: "concurrent.futures._base.Future[concurrent.futures._base._T]"
          args {
            pretty_printed_name: "concurrent.futures._base._T"
            kind: TYPE_VAR
          }
          fully_qualified_name: "concurrent.futures._base.Future"
        }
        fully_qualified_name: "builtins.set"
      }
    }
    fully_qualified_name: "concurrent.futures._base.DoneAndNotDoneFutures"
  }
  parameters {
    name: "fs"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "typing.Iterable[concurrent.futures._base.Future[concurrent.futures._base._T]]"
      args {
        pretty_printed_name: "concurrent.futures._base.Future[concurrent.futures._base._T]"
        args {
          pretty_printed_name: "concurrent.futures._base._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "concurrent.futures._base.Future"
      }
      fully_qualified_name: "typing.Iterable"
    }
  }
  parameters {
    name: "timeout"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.float,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  parameters {
    name: "return_when"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
}
functions {
  name: "__dir__"
  fully_qualified_name: "concurrent.futures.__dir__"
  return_annotation {
    pretty_printed_name: "builtins.tuple[builtins.str]"
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    fully_qualified_name: "builtins.tuple"
  }
}
vars {
  name: "__path__"
  fully_qualified_name: "concurrent.futures.__path__"
  type_annotation {
    pretty_printed_name: "builtins.list[builtins.str]"
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    fully_qualified_name: "builtins.list"
  }
}
vars {
  name: "__annotations__"
  fully_qualified_name: "concurrent.futures.__annotations__"
  type_annotation {
    pretty_printed_name: "builtins.dict[builtins.str,Any]"
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    args {
      pretty_printed_name: "Any"
      kind: ANY
    }
    fully_qualified_name: "builtins.dict"
  }
}
vars {
  name: "ALL_COMPLETED"
  fully_qualified_name: "concurrent.futures._base.ALL_COMPLETED"
  type_annotation {
    pretty_printed_name: "Literal[builtins.str]"
    kind: LITERAL
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
}
vars {
  name: "FIRST_COMPLETED"
  fully_qualified_name: "concurrent.futures._base.FIRST_COMPLETED"
  type_annotation {
    pretty_printed_name: "Literal[builtins.str]"
    kind: LITERAL
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
}
vars {
  name: "FIRST_EXCEPTION"
  fully_qualified_name: "concurrent.futures._base.FIRST_EXCEPTION"
  type_annotation {
    pretty_printed_name: "Literal[builtins.str]"
    kind: LITERAL
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
}
vars {
  name: "__all__"
  fully_qualified_name: "concurrent.futures.__all__"
  type_annotation {
    pretty_printed_name: "Tuple[builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str]"
    kind: TUPLE
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
}
