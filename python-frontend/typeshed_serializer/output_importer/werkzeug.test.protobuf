fully_qualified_name: "werkzeug.test"
classes {
  name: "EnvironBuilder"
  fully_qualified_name: "werkzeug.test.EnvironBuilder"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "werkzeug.test.EnvironBuilder.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.test.EnvironBuilder"
        fully_qualified_name: "werkzeug.test.EnvironBuilder"
      }
    }
    parameters {
      name: "path"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "base_url"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "query_string"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.Mapping[builtins.str,builtins.str],builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "typing.Mapping[builtins.str,builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "typing.Mapping"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "method"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "input_stream"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.IO[builtins.bytes],None]"
        kind: UNION
        args {
          pretty_printed_name: "typing.IO[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "typing.IO"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "content_type"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "content_length"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "errors_stream"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.IO[builtins.str],None]"
        kind: UNION
        args {
          pretty_printed_name: "typing.IO[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "typing.IO"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "multithread"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    parameters {
      name: "multiprocess"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    parameters {
      name: "run_once"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    parameters {
      name: "headers"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[werkzeug.datastructures.headers.Headers,typing.Iterable[Tuple[builtins.str,builtins.str]],None]"
        kind: UNION
        args {
          pretty_printed_name: "werkzeug.datastructures.headers.Headers"
          fully_qualified_name: "werkzeug.datastructures.headers.Headers"
        }
        args {
          pretty_printed_name: "typing.Iterable[Tuple[builtins.str,builtins.str]]"
          args {
            pretty_printed_name: "Tuple[builtins.str,builtins.str]"
            kind: TUPLE
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          fully_qualified_name: "typing.Iterable"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "data"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[None,typing.IO[builtins.bytes],builtins.str,builtins.bytes,typing.Mapping[builtins.str,Any]]"
        kind: UNION
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
        args {
          pretty_printed_name: "typing.IO[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "typing.IO"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "typing.Mapping[builtins.str,Any]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "typing.Mapping"
        }
      }
    }
    parameters {
      name: "environ_base"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.Mapping[builtins.str,Any],None]"
        kind: UNION
        args {
          pretty_printed_name: "typing.Mapping[builtins.str,Any]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "typing.Mapping"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "environ_overrides"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.Mapping[builtins.str,Any],None]"
        kind: UNION
        args {
          pretty_printed_name: "typing.Mapping[builtins.str,Any]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "typing.Mapping"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "charset"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "mimetype"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "json"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.Mapping[builtins.str,Any],None]"
        kind: UNION
        args {
          pretty_printed_name: "typing.Mapping[builtins.str,Any]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "typing.Mapping"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "auth"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[werkzeug.datastructures.auth.Authorization,Tuple[builtins.str,builtins.str],None]"
        kind: UNION
        args {
          pretty_printed_name: "werkzeug.datastructures.auth.Authorization"
          fully_qualified_name: "werkzeug.datastructures.auth.Authorization"
        }
        args {
          pretty_printed_name: "Tuple[builtins.str,builtins.str]"
          kind: TUPLE
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "from_environ"
    fully_qualified_name: "werkzeug.test.EnvironBuilder.from_environ"
    return_annotation {
      pretty_printed_name: "werkzeug.test.EnvironBuilder"
      fully_qualified_name: "werkzeug.test.EnvironBuilder"
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[werkzeug.test.EnvironBuilder]"
        kind: TYPE
        args {
          pretty_printed_name: "werkzeug.test.EnvironBuilder"
          fully_qualified_name: "werkzeug.test.EnvironBuilder"
        }
      }
    }
    parameters {
      name: "environ"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[builtins.dict[builtins.str,Any]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "builtins.dict[builtins.str,Any]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "builtins.dict"
        }
        fully_qualified_name: "_typeshed.wsgi.WSGIEnvironment"
      }
    }
    parameters {
      name: "kwargs"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    has_decorators: true
    resolved_decorator_names: "classmethod"
    is_class_method: true
  }
  methods {
    name: "_add_file_from_data"
    fully_qualified_name: "werkzeug.test.EnvironBuilder._add_file_from_data"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.test.EnvironBuilder"
        fully_qualified_name: "werkzeug.test.EnvironBuilder"
      }
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.IO[builtins.bytes],Tuple[typing.IO[builtins.bytes],builtins.str],Tuple[typing.IO[builtins.bytes],builtins.str,builtins.str]]"
        kind: UNION
        args {
          pretty_printed_name: "typing.IO[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "typing.IO"
        }
        args {
          pretty_printed_name: "Tuple[typing.IO[builtins.bytes],builtins.str]"
          kind: TUPLE
          args {
            pretty_printed_name: "typing.IO[builtins.bytes]"
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            fully_qualified_name: "typing.IO"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        args {
          pretty_printed_name: "Tuple[typing.IO[builtins.bytes],builtins.str,builtins.str]"
          kind: TUPLE
          args {
            pretty_printed_name: "typing.IO[builtins.bytes]"
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            fully_qualified_name: "typing.IO"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
      }
    }
  }
  methods {
    name: "_make_base_url"
    fully_qualified_name: "werkzeug.test.EnvironBuilder._make_base_url"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "scheme"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "host"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "script_root"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    has_decorators: true
    resolved_decorator_names: "staticmethod"
    is_static: true
  }
  methods {
    name: "mimetype_params"
    fully_qualified_name: "werkzeug.test.EnvironBuilder.mimetype_params"
    return_annotation {
      pretty_printed_name: "typing.Mapping[builtins.str,builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "typing.Mapping"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.test.EnvironBuilder"
        fully_qualified_name: "werkzeug.test.EnvironBuilder"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "_get_form"
    fully_qualified_name: "werkzeug.test.EnvironBuilder._get_form"
    return_annotation {
      pretty_printed_name: "werkzeug.test._TAnyMultiDict"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.test.EnvironBuilder"
        fully_qualified_name: "werkzeug.test.EnvironBuilder"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "storage"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[werkzeug.test._TAnyMultiDict]"
        kind: TYPE
        args {
          pretty_printed_name: "werkzeug.test._TAnyMultiDict"
          kind: TYPE_VAR
        }
      }
    }
  }
  methods {
    name: "_set_form"
    fully_qualified_name: "werkzeug.test.EnvironBuilder._set_form"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.test.EnvironBuilder"
        fully_qualified_name: "werkzeug.test.EnvironBuilder"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.MultiDict[Any,Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "werkzeug.datastructures.structures.MultiDict"
      }
    }
  }
  methods {
    name: "server_name"
    fully_qualified_name: "werkzeug.test.EnvironBuilder.server_name"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.test.EnvironBuilder"
        fully_qualified_name: "werkzeug.test.EnvironBuilder"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "server_port"
    fully_qualified_name: "werkzeug.test.EnvironBuilder.server_port"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.test.EnvironBuilder"
        fully_qualified_name: "werkzeug.test.EnvironBuilder"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "__del__"
    fully_qualified_name: "werkzeug.test.EnvironBuilder.__del__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "werkzeug.test.EnvironBuilder"
        fully_qualified_name: "werkzeug.test.EnvironBuilder"
      }
    }
  }
  methods {
    name: "close"
    fully_qualified_name: "werkzeug.test.EnvironBuilder.close"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.test.EnvironBuilder"
        fully_qualified_name: "werkzeug.test.EnvironBuilder"
      }
    }
  }
  methods {
    name: "get_environ"
    fully_qualified_name: "werkzeug.test.EnvironBuilder.get_environ"
    return_annotation {
      pretty_printed_name: "TypeAlias[builtins.dict[builtins.str,Any]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "builtins.dict[builtins.str,Any]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "builtins.dict"
      }
      fully_qualified_name: "_typeshed.wsgi.WSGIEnvironment"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.test.EnvironBuilder"
        fully_qualified_name: "werkzeug.test.EnvironBuilder"
      }
    }
  }
  methods {
    name: "get_request"
    fully_qualified_name: "werkzeug.test.EnvironBuilder.get_request"
    return_annotation {
      pretty_printed_name: "werkzeug.wrappers.request.Request"
      fully_qualified_name: "werkzeug.wrappers.request.Request"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.test.EnvironBuilder"
        fully_qualified_name: "werkzeug.test.EnvironBuilder"
      }
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Type[werkzeug.wrappers.request.Request],None]"
        kind: UNION
        args {
          pretty_printed_name: "Type[werkzeug.wrappers.request.Request]"
          kind: TYPE
          args {
            pretty_printed_name: "werkzeug.wrappers.request.Request"
            fully_qualified_name: "werkzeug.wrappers.request.Request"
          }
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  overloaded_methods {
    name: "base_url"
    fullname: "werkzeug.test.EnvironBuilder.base_url"
    definitions {
      name: "base_url"
      fully_qualified_name: "werkzeug.test.EnvironBuilder.base_url"
      return_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.test.EnvironBuilder"
          fully_qualified_name: "werkzeug.test.EnvironBuilder"
        }
      }
      has_decorators: true
      resolved_decorator_names: "property"
      is_overload: true
      is_property: true
    }
    definitions {
      name: "base_url"
      fully_qualified_name: "werkzeug.test.EnvironBuilder.base_url"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.test.EnvironBuilder"
          fully_qualified_name: "werkzeug.test.EnvironBuilder"
        }
      }
      parameters {
        name: "value"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "base_url.setter"
    }
  }
  overloaded_methods {
    name: "content_type"
    fullname: "werkzeug.test.EnvironBuilder.content_type"
    definitions {
      name: "content_type"
      fully_qualified_name: "werkzeug.test.EnvironBuilder.content_type"
      return_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.test.EnvironBuilder"
          fully_qualified_name: "werkzeug.test.EnvironBuilder"
        }
      }
      has_decorators: true
      resolved_decorator_names: "property"
      is_overload: true
      is_property: true
    }
    definitions {
      name: "content_type"
      fully_qualified_name: "werkzeug.test.EnvironBuilder.content_type"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.test.EnvironBuilder"
          fully_qualified_name: "werkzeug.test.EnvironBuilder"
        }
      }
      parameters {
        name: "value"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "content_type.setter"
    }
  }
  overloaded_methods {
    name: "mimetype"
    fullname: "werkzeug.test.EnvironBuilder.mimetype"
    definitions {
      name: "mimetype"
      fully_qualified_name: "werkzeug.test.EnvironBuilder.mimetype"
      return_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.test.EnvironBuilder"
          fully_qualified_name: "werkzeug.test.EnvironBuilder"
        }
      }
      has_decorators: true
      resolved_decorator_names: "property"
      is_overload: true
      is_property: true
    }
    definitions {
      name: "mimetype"
      fully_qualified_name: "werkzeug.test.EnvironBuilder.mimetype"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.test.EnvironBuilder"
          fully_qualified_name: "werkzeug.test.EnvironBuilder"
        }
      }
      parameters {
        name: "value"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      has_decorators: true
      resolved_decorator_names: "mimetype.setter"
    }
  }
  overloaded_methods {
    name: "content_length"
    fullname: "werkzeug.test.EnvironBuilder.content_length"
    definitions {
      name: "content_length"
      fully_qualified_name: "werkzeug.test.EnvironBuilder.content_length"
      return_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.test.EnvironBuilder"
          fully_qualified_name: "werkzeug.test.EnvironBuilder"
        }
      }
      has_decorators: true
      resolved_decorator_names: "property"
      is_overload: true
      is_property: true
    }
    definitions {
      name: "content_length"
      fully_qualified_name: "werkzeug.test.EnvironBuilder.content_length"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.test.EnvironBuilder"
          fully_qualified_name: "werkzeug.test.EnvironBuilder"
        }
      }
      parameters {
        name: "value"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.int,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "content_length.setter"
    }
  }
  overloaded_methods {
    name: "form"
    fullname: "werkzeug.test.EnvironBuilder.form"
    definitions {
      name: "form"
      fully_qualified_name: "werkzeug.test.EnvironBuilder.form"
      return_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.MultiDict[Any,Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "werkzeug.datastructures.structures.MultiDict"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.test.EnvironBuilder"
          fully_qualified_name: "werkzeug.test.EnvironBuilder"
        }
      }
      has_decorators: true
      resolved_decorator_names: "property"
      is_overload: true
      is_property: true
    }
    definitions {
      name: "form"
      fully_qualified_name: "werkzeug.test.EnvironBuilder.form"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.test.EnvironBuilder"
          fully_qualified_name: "werkzeug.test.EnvironBuilder"
        }
      }
      parameters {
        name: "value"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.structures.MultiDict[Any,Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "werkzeug.datastructures.structures.MultiDict"
        }
      }
      has_decorators: true
      resolved_decorator_names: "form.setter"
    }
  }
  overloaded_methods {
    name: "files"
    fullname: "werkzeug.test.EnvironBuilder.files"
    definitions {
      name: "files"
      fully_qualified_name: "werkzeug.test.EnvironBuilder.files"
      return_annotation {
        pretty_printed_name: "werkzeug.datastructures.file_storage.FileMultiDict"
        fully_qualified_name: "werkzeug.datastructures.file_storage.FileMultiDict"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.test.EnvironBuilder"
          fully_qualified_name: "werkzeug.test.EnvironBuilder"
        }
      }
      has_decorators: true
      resolved_decorator_names: "property"
      is_overload: true
      is_property: true
    }
    definitions {
      name: "files"
      fully_qualified_name: "werkzeug.test.EnvironBuilder.files"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.test.EnvironBuilder"
          fully_qualified_name: "werkzeug.test.EnvironBuilder"
        }
      }
      parameters {
        name: "value"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.file_storage.FileMultiDict"
          fully_qualified_name: "werkzeug.datastructures.file_storage.FileMultiDict"
        }
      }
      has_decorators: true
      resolved_decorator_names: "files.setter"
    }
  }
  overloaded_methods {
    name: "input_stream"
    fullname: "werkzeug.test.EnvironBuilder.input_stream"
    definitions {
      name: "input_stream"
      fully_qualified_name: "werkzeug.test.EnvironBuilder.input_stream"
      return_annotation {
        pretty_printed_name: "Union[typing.IO[builtins.bytes],None]"
        kind: UNION
        args {
          pretty_printed_name: "typing.IO[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "typing.IO"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.test.EnvironBuilder"
          fully_qualified_name: "werkzeug.test.EnvironBuilder"
        }
      }
      has_decorators: true
      resolved_decorator_names: "property"
      is_overload: true
      is_property: true
    }
    definitions {
      name: "input_stream"
      fully_qualified_name: "werkzeug.test.EnvironBuilder.input_stream"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.test.EnvironBuilder"
          fully_qualified_name: "werkzeug.test.EnvironBuilder"
        }
      }
      parameters {
        name: "value"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[typing.IO[builtins.bytes],None]"
          kind: UNION
          args {
            pretty_printed_name: "typing.IO[builtins.bytes]"
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            fully_qualified_name: "typing.IO"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "input_stream.setter"
    }
  }
  overloaded_methods {
    name: "query_string"
    fullname: "werkzeug.test.EnvironBuilder.query_string"
    definitions {
      name: "query_string"
      fully_qualified_name: "werkzeug.test.EnvironBuilder.query_string"
      return_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.test.EnvironBuilder"
          fully_qualified_name: "werkzeug.test.EnvironBuilder"
        }
      }
      has_decorators: true
      resolved_decorator_names: "property"
      is_overload: true
      is_property: true
    }
    definitions {
      name: "query_string"
      fully_qualified_name: "werkzeug.test.EnvironBuilder.query_string"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.test.EnvironBuilder"
          fully_qualified_name: "werkzeug.test.EnvironBuilder"
        }
      }
      parameters {
        name: "value"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "query_string.setter"
    }
  }
  overloaded_methods {
    name: "args"
    fullname: "werkzeug.test.EnvironBuilder.args"
    definitions {
      name: "args"
      fully_qualified_name: "werkzeug.test.EnvironBuilder.args"
      return_annotation {
        pretty_printed_name: "werkzeug.datastructures.structures.MultiDict[Any,Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "werkzeug.datastructures.structures.MultiDict"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.test.EnvironBuilder"
          fully_qualified_name: "werkzeug.test.EnvironBuilder"
        }
      }
      has_decorators: true
      resolved_decorator_names: "property"
      is_overload: true
      is_property: true
    }
    definitions {
      name: "args"
      fully_qualified_name: "werkzeug.test.EnvironBuilder.args"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.test.EnvironBuilder"
          fully_qualified_name: "werkzeug.test.EnvironBuilder"
        }
      }
      parameters {
        name: "value"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[werkzeug.datastructures.structures.MultiDict[Any,Any],None]"
          kind: UNION
          args {
            pretty_printed_name: "werkzeug.datastructures.structures.MultiDict[Any,Any]"
            args {
              pretty_printed_name: "Any"
              kind: ANY
            }
            args {
              pretty_printed_name: "Any"
              kind: ANY
            }
            fully_qualified_name: "werkzeug.datastructures.structures.MultiDict"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "args.setter"
    }
  }
  attributes {
    name: "server_protocol"
    fully_qualified_name: "werkzeug.test.EnvironBuilder.server_protocol"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  attributes {
    name: "wsgi_version"
    fully_qualified_name: "werkzeug.test.EnvironBuilder.wsgi_version"
    type_annotation {
      pretty_printed_name: "Tuple[builtins.int,builtins.int]"
      kind: TUPLE
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
  }
  attributes {
    name: "request_class"
    fully_qualified_name: "werkzeug.test.EnvironBuilder.request_class"
    type_annotation {
      pretty_printed_name: "CallableType[builtins.type]"
      kind: CALLABLE
      args {
        pretty_printed_name: "builtins.type"
        fully_qualified_name: "builtins.type"
      }
    }
  }
  attributes {
    name: "json_dumps"
    fully_qualified_name: "werkzeug.test.EnvironBuilder.json_dumps"
    type_annotation {
      pretty_printed_name: "builtins.staticmethod[Unknown]"
      args {
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "builtins.staticmethod"
    }
  }
  attributes {
    name: "_args"
    fully_qualified_name: "werkzeug.test.EnvironBuilder._args"
    type_annotation {
      pretty_printed_name: "Union[werkzeug.datastructures.structures.MultiDict[Any,Any],None]"
      kind: UNION
      args {
        pretty_printed_name: "werkzeug.datastructures.structures.MultiDict[Any,Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "werkzeug.datastructures.structures.MultiDict"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  attributes {
    name: "_query_string"
    fully_qualified_name: "werkzeug.test.EnvironBuilder._query_string"
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  attributes {
    name: "_input_stream"
    fully_qualified_name: "werkzeug.test.EnvironBuilder._input_stream"
    type_annotation {
      pretty_printed_name: "Union[typing.IO[builtins.bytes],None]"
      kind: UNION
      args {
        pretty_printed_name: "typing.IO[builtins.bytes]"
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        fully_qualified_name: "typing.IO"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  attributes {
    name: "_form"
    fully_qualified_name: "werkzeug.test.EnvironBuilder._form"
    type_annotation {
      pretty_printed_name: "Union[werkzeug.datastructures.structures.MultiDict[Any,Any],None]"
      kind: UNION
      args {
        pretty_printed_name: "werkzeug.datastructures.structures.MultiDict[Any,Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "werkzeug.datastructures.structures.MultiDict"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  attributes {
    name: "_files"
    fully_qualified_name: "werkzeug.test.EnvironBuilder._files"
    type_annotation {
      pretty_printed_name: "Union[werkzeug.datastructures.file_storage.FileMultiDict,None]"
      kind: UNION
      args {
        pretty_printed_name: "werkzeug.datastructures.file_storage.FileMultiDict"
        fully_qualified_name: "werkzeug.datastructures.file_storage.FileMultiDict"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  attributes {
    name: "charset"
    fully_qualified_name: "werkzeug.test.EnvironBuilder.charset"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  attributes {
    name: "path"
    fully_qualified_name: "werkzeug.test.EnvironBuilder.path"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  attributes {
    name: "request_uri"
    fully_qualified_name: "werkzeug.test.EnvironBuilder.request_uri"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  attributes {
    name: "method"
    fully_qualified_name: "werkzeug.test.EnvironBuilder.method"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  attributes {
    name: "headers"
    fully_qualified_name: "werkzeug.test.EnvironBuilder.headers"
    type_annotation {
      pretty_printed_name: "werkzeug.datastructures.headers.Headers"
      fully_qualified_name: "werkzeug.datastructures.headers.Headers"
    }
  }
  attributes {
    name: "errors_stream"
    fully_qualified_name: "werkzeug.test.EnvironBuilder.errors_stream"
    type_annotation {
      pretty_printed_name: "typing.IO[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "typing.IO"
    }
  }
  attributes {
    name: "multithread"
    fully_qualified_name: "werkzeug.test.EnvironBuilder.multithread"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
  attributes {
    name: "multiprocess"
    fully_qualified_name: "werkzeug.test.EnvironBuilder.multiprocess"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
  attributes {
    name: "run_once"
    fully_qualified_name: "werkzeug.test.EnvironBuilder.run_once"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
  attributes {
    name: "environ_base"
    fully_qualified_name: "werkzeug.test.EnvironBuilder.environ_base"
    type_annotation {
      pretty_printed_name: "Union[typing.Mapping[builtins.str,Any],None]"
      kind: UNION
      args {
        pretty_printed_name: "typing.Mapping[builtins.str,Any]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "typing.Mapping"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  attributes {
    name: "environ_overrides"
    fully_qualified_name: "werkzeug.test.EnvironBuilder.environ_overrides"
    type_annotation {
      pretty_printed_name: "Union[typing.Mapping[builtins.str,Any],None]"
      kind: UNION
      args {
        pretty_printed_name: "typing.Mapping[builtins.str,Any]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "typing.Mapping"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  attributes {
    name: "closed"
    fully_qualified_name: "werkzeug.test.EnvironBuilder.closed"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
  attributes {
    name: "script_root"
    fully_qualified_name: "werkzeug.test.EnvironBuilder.script_root"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  attributes {
    name: "host"
    fully_qualified_name: "werkzeug.test.EnvironBuilder.host"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  attributes {
    name: "url_scheme"
    fully_qualified_name: "werkzeug.test.EnvironBuilder.url_scheme"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
}
classes {
  name: "ClientRedirectError"
  fully_qualified_name: "werkzeug.test.ClientRedirectError"
  super_classes: "builtins.Exception"
}
classes {
  name: "Client"
  fully_qualified_name: "werkzeug.test.Client"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "werkzeug.test.Client.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.test.Client"
        fully_qualified_name: "werkzeug.test.Client"
      }
    }
    parameters {
      name: "application"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[CallableType[builtins.function]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
        fully_qualified_name: "_typeshed.wsgi.WSGIApplication"
      }
    }
    parameters {
      name: "response_wrapper"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Type[werkzeug.wrappers.response.Response],None]"
        kind: UNION
        args {
          pretty_printed_name: "Type[werkzeug.wrappers.response.Response]"
          kind: TYPE
          args {
            pretty_printed_name: "werkzeug.wrappers.response.Response"
            fully_qualified_name: "werkzeug.wrappers.response.Response"
          }
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "use_cookies"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    parameters {
      name: "allow_subdomain_redirects"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
  }
  methods {
    name: "cookie_jar"
    fully_qualified_name: "werkzeug.test.Client.cookie_jar"
    return_annotation {
      pretty_printed_name: "Union[typing.Iterable[werkzeug.test.Cookie],None]"
      kind: UNION
      args {
        pretty_printed_name: "typing.Iterable[werkzeug.test.Cookie]"
        args {
          pretty_printed_name: "werkzeug.test.Cookie"
          fully_qualified_name: "werkzeug.test.Cookie"
        }
        fully_qualified_name: "typing.Iterable"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.test.Client"
        fully_qualified_name: "werkzeug.test.Client"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "get_cookie"
    fully_qualified_name: "werkzeug.test.Client.get_cookie"
    return_annotation {
      pretty_printed_name: "Union[werkzeug.test.Cookie,None]"
      kind: UNION
      args {
        pretty_printed_name: "werkzeug.test.Cookie"
        fully_qualified_name: "werkzeug.test.Cookie"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.test.Client"
        fully_qualified_name: "werkzeug.test.Client"
      }
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "domain"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "path"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  methods {
    name: "set_cookie"
    fully_qualified_name: "werkzeug.test.Client.set_cookie"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.test.Client"
        fully_qualified_name: "werkzeug.test.Client"
      }
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "args"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "domain"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "origin_only"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    parameters {
      name: "path"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "kwargs"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
  }
  methods {
    name: "delete_cookie"
    fully_qualified_name: "werkzeug.test.Client.delete_cookie"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.test.Client"
        fully_qualified_name: "werkzeug.test.Client"
      }
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "args"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "domain"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "path"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "kwargs"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
  }
  methods {
    name: "_add_cookies_to_wsgi"
    fully_qualified_name: "werkzeug.test.Client._add_cookies_to_wsgi"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.test.Client"
        fully_qualified_name: "werkzeug.test.Client"
      }
    }
    parameters {
      name: "environ"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[builtins.dict[builtins.str,Any]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "builtins.dict[builtins.str,Any]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "builtins.dict"
        }
        fully_qualified_name: "_typeshed.wsgi.WSGIEnvironment"
      }
    }
  }
  methods {
    name: "_update_cookies_from_response"
    fully_qualified_name: "werkzeug.test.Client._update_cookies_from_response"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.test.Client"
        fully_qualified_name: "werkzeug.test.Client"
      }
    }
    parameters {
      name: "server_name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "path"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "headers"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.list[builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "builtins.list"
      }
    }
  }
  methods {
    name: "run_wsgi_app"
    fully_qualified_name: "werkzeug.test.Client.run_wsgi_app"
    return_annotation {
      pretty_printed_name: "Tuple[typing.Iterable[builtins.bytes],builtins.str,werkzeug.datastructures.headers.Headers]"
      kind: TUPLE
      args {
        pretty_printed_name: "typing.Iterable[builtins.bytes]"
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        fully_qualified_name: "typing.Iterable"
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "werkzeug.datastructures.headers.Headers"
        fully_qualified_name: "werkzeug.datastructures.headers.Headers"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.test.Client"
        fully_qualified_name: "werkzeug.test.Client"
      }
    }
    parameters {
      name: "environ"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[builtins.dict[builtins.str,Any]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "builtins.dict[builtins.str,Any]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "builtins.dict"
        }
        fully_qualified_name: "_typeshed.wsgi.WSGIEnvironment"
      }
    }
    parameters {
      name: "buffered"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
  }
  methods {
    name: "resolve_redirect"
    fully_qualified_name: "werkzeug.test.Client.resolve_redirect"
    return_annotation {
      pretty_printed_name: "werkzeug.test.TestResponse"
      fully_qualified_name: "werkzeug.test.TestResponse"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.test.Client"
        fully_qualified_name: "werkzeug.test.Client"
      }
    }
    parameters {
      name: "response"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.test.TestResponse"
        fully_qualified_name: "werkzeug.test.TestResponse"
      }
    }
    parameters {
      name: "buffered"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
  }
  methods {
    name: "open"
    fully_qualified_name: "werkzeug.test.Client.open"
    return_annotation {
      pretty_printed_name: "werkzeug.test.TestResponse"
      fully_qualified_name: "werkzeug.test.TestResponse"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.test.Client"
        fully_qualified_name: "werkzeug.test.Client"
      }
    }
    parameters {
      name: "args"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "buffered"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    parameters {
      name: "follow_redirects"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    parameters {
      name: "kwargs"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
  }
  methods {
    name: "get"
    fully_qualified_name: "werkzeug.test.Client.get"
    return_annotation {
      pretty_printed_name: "werkzeug.test.TestResponse"
      fully_qualified_name: "werkzeug.test.TestResponse"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.test.Client"
        fully_qualified_name: "werkzeug.test.Client"
      }
    }
    parameters {
      name: "args"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "kw"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
  }
  methods {
    name: "post"
    fully_qualified_name: "werkzeug.test.Client.post"
    return_annotation {
      pretty_printed_name: "werkzeug.test.TestResponse"
      fully_qualified_name: "werkzeug.test.TestResponse"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.test.Client"
        fully_qualified_name: "werkzeug.test.Client"
      }
    }
    parameters {
      name: "args"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "kw"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
  }
  methods {
    name: "put"
    fully_qualified_name: "werkzeug.test.Client.put"
    return_annotation {
      pretty_printed_name: "werkzeug.test.TestResponse"
      fully_qualified_name: "werkzeug.test.TestResponse"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.test.Client"
        fully_qualified_name: "werkzeug.test.Client"
      }
    }
    parameters {
      name: "args"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "kw"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
  }
  methods {
    name: "delete"
    fully_qualified_name: "werkzeug.test.Client.delete"
    return_annotation {
      pretty_printed_name: "werkzeug.test.TestResponse"
      fully_qualified_name: "werkzeug.test.TestResponse"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.test.Client"
        fully_qualified_name: "werkzeug.test.Client"
      }
    }
    parameters {
      name: "args"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "kw"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
  }
  methods {
    name: "patch"
    fully_qualified_name: "werkzeug.test.Client.patch"
    return_annotation {
      pretty_printed_name: "werkzeug.test.TestResponse"
      fully_qualified_name: "werkzeug.test.TestResponse"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.test.Client"
        fully_qualified_name: "werkzeug.test.Client"
      }
    }
    parameters {
      name: "args"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "kw"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
  }
  methods {
    name: "options"
    fully_qualified_name: "werkzeug.test.Client.options"
    return_annotation {
      pretty_printed_name: "werkzeug.test.TestResponse"
      fully_qualified_name: "werkzeug.test.TestResponse"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.test.Client"
        fully_qualified_name: "werkzeug.test.Client"
      }
    }
    parameters {
      name: "args"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "kw"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
  }
  methods {
    name: "head"
    fully_qualified_name: "werkzeug.test.Client.head"
    return_annotation {
      pretty_printed_name: "werkzeug.test.TestResponse"
      fully_qualified_name: "werkzeug.test.TestResponse"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.test.Client"
        fully_qualified_name: "werkzeug.test.Client"
      }
    }
    parameters {
      name: "args"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "kw"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
  }
  methods {
    name: "trace"
    fully_qualified_name: "werkzeug.test.Client.trace"
    return_annotation {
      pretty_printed_name: "werkzeug.test.TestResponse"
      fully_qualified_name: "werkzeug.test.TestResponse"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.test.Client"
        fully_qualified_name: "werkzeug.test.Client"
      }
    }
    parameters {
      name: "args"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "kw"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
  }
  methods {
    name: "__repr__"
    fully_qualified_name: "werkzeug.test.Client.__repr__"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "werkzeug.test.Client"
        fully_qualified_name: "werkzeug.test.Client"
      }
    }
  }
  attributes {
    name: "application"
    fully_qualified_name: "werkzeug.test.Client.application"
    type_annotation {
      pretty_printed_name: "CallableType[builtins.function]"
      kind: CALLABLE
      args {
        pretty_printed_name: "builtins.function"
        fully_qualified_name: "builtins.function"
      }
    }
  }
  attributes {
    name: "response_wrapper"
    fully_qualified_name: "werkzeug.test.Client.response_wrapper"
    type_annotation {
      pretty_printed_name: "Type[werkzeug.test.TestResponse]"
      kind: TYPE
      args {
        pretty_printed_name: "werkzeug.test.TestResponse"
        fully_qualified_name: "werkzeug.test.TestResponse"
      }
    }
  }
  attributes {
    name: "_cookies"
    fully_qualified_name: "werkzeug.test.Client._cookies"
    type_annotation {
      pretty_printed_name: "Union[builtins.dict[Tuple[builtins.str,builtins.str,builtins.str],werkzeug.test.Cookie],None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.dict[Tuple[builtins.str,builtins.str,builtins.str],werkzeug.test.Cookie]"
        args {
          pretty_printed_name: "Tuple[builtins.str,builtins.str,builtins.str]"
          kind: TUPLE
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
        args {
          pretty_printed_name: "werkzeug.test.Cookie"
          fully_qualified_name: "werkzeug.test.Cookie"
        }
        fully_qualified_name: "builtins.dict"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  attributes {
    name: "allow_subdomain_redirects"
    fully_qualified_name: "werkzeug.test.Client.allow_subdomain_redirects"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
}
classes {
  name: "TestResponse"
  fully_qualified_name: "werkzeug.test.TestResponse"
  super_classes: "werkzeug.wrappers.response.Response"
  methods {
    name: "__init__"
    fully_qualified_name: "werkzeug.test.TestResponse.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.test.TestResponse"
        fully_qualified_name: "werkzeug.test.TestResponse"
      }
    }
    parameters {
      name: "response"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[builtins.bytes]"
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
    parameters {
      name: "status"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "headers"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.headers.Headers"
        fully_qualified_name: "werkzeug.datastructures.headers.Headers"
      }
    }
    parameters {
      name: "request"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.wrappers.request.Request"
        fully_qualified_name: "werkzeug.wrappers.request.Request"
      }
    }
    parameters {
      name: "history"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Tuple[werkzeug.test.TestResponse]"
        kind: TUPLE
        args {
          pretty_printed_name: "werkzeug.test.TestResponse"
          fully_qualified_name: "werkzeug.test.TestResponse"
        }
      }
    }
    parameters {
      name: "kwargs"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
  }
  methods {
    name: "text"
    fully_qualified_name: "werkzeug.test.TestResponse.text"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.test.TestResponse"
        fully_qualified_name: "werkzeug.test.TestResponse"
      }
    }
    has_decorators: true
    resolved_decorator_names: "cached_property"
  }
  attributes {
    name: "default_mimetype"
    fully_qualified_name: "werkzeug.test.TestResponse.default_mimetype"
    type_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
  }
  attributes {
    name: "request"
    fully_qualified_name: "werkzeug.test.TestResponse.request"
    type_annotation {
      pretty_printed_name: "werkzeug.wrappers.request.Request"
      fully_qualified_name: "werkzeug.wrappers.request.Request"
    }
  }
  attributes {
    name: "history"
    fully_qualified_name: "werkzeug.test.TestResponse.history"
    type_annotation {
      pretty_printed_name: "builtins.tuple[werkzeug.test.TestResponse]"
      args {
        pretty_printed_name: "werkzeug.test.TestResponse"
        fully_qualified_name: "werkzeug.test.TestResponse"
      }
      fully_qualified_name: "builtins.tuple"
    }
  }
  attributes {
    name: "__test__"
    fully_qualified_name: "werkzeug.test.TestResponse.__test__"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
  attributes {
    name: "_compat_tuple"
    fully_qualified_name: "werkzeug.test.TestResponse._compat_tuple"
    type_annotation {
      pretty_printed_name: "Tuple[typing.Iterable[builtins.bytes],builtins.str,werkzeug.datastructures.headers.Headers]"
      kind: TUPLE
      args {
        pretty_printed_name: "typing.Iterable[builtins.bytes]"
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        fully_qualified_name: "typing.Iterable"
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "werkzeug.datastructures.headers.Headers"
        fully_qualified_name: "werkzeug.datastructures.headers.Headers"
      }
    }
  }
}
classes {
  name: "Cookie"
  fully_qualified_name: "werkzeug.test.Cookie"
  super_classes: "builtins.object"
  methods {
    name: "_matches_request"
    fully_qualified_name: "werkzeug.test.Cookie._matches_request"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.test.Cookie"
        fully_qualified_name: "werkzeug.test.Cookie"
      }
    }
    parameters {
      name: "server_name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "path"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  methods {
    name: "_to_request_header"
    fully_qualified_name: "werkzeug.test.Cookie._to_request_header"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.test.Cookie"
        fully_qualified_name: "werkzeug.test.Cookie"
      }
    }
  }
  methods {
    name: "_from_response_header"
    fully_qualified_name: "werkzeug.test.Cookie._from_response_header"
    return_annotation {
      pretty_printed_name: "werkzeug.test.Cookie.Self"
      kind: TYPE_VAR
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[werkzeug.test.Cookie.Self]"
        kind: TYPE
        args {
          pretty_printed_name: "werkzeug.test.Cookie.Self"
          kind: TYPE_VAR
        }
      }
    }
    parameters {
      name: "server_name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "path"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "header"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    has_decorators: true
    resolved_decorator_names: "classmethod"
    is_class_method: true
  }
  methods {
    name: "_storage_key"
    fully_qualified_name: "werkzeug.test.Cookie._storage_key"
    return_annotation {
      pretty_printed_name: "Tuple[builtins.str,builtins.str,builtins.str]"
      kind: TUPLE
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.test.Cookie"
        fully_qualified_name: "werkzeug.test.Cookie"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "_should_delete"
    fully_qualified_name: "werkzeug.test.Cookie._should_delete"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.test.Cookie"
        fully_qualified_name: "werkzeug.test.Cookie"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "__init__"
    fully_qualified_name: "werkzeug.test.Cookie.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.test.Cookie"
        fully_qualified_name: "werkzeug.test.Cookie"
      }
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "decoded_key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "decoded_value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "expires"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[datetime.datetime,None]"
        kind: UNION
        args {
          pretty_printed_name: "datetime.datetime"
          fully_qualified_name: "datetime.datetime"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "max_age"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "domain"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "origin_only"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    parameters {
      name: "path"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "secure"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.bool,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "http_only"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.bool,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "same_site"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  has_decorators: true
  attributes {
    name: "key"
    fully_qualified_name: "werkzeug.test.Cookie.key"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  attributes {
    name: "value"
    fully_qualified_name: "werkzeug.test.Cookie.value"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  attributes {
    name: "decoded_key"
    fully_qualified_name: "werkzeug.test.Cookie.decoded_key"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  attributes {
    name: "decoded_value"
    fully_qualified_name: "werkzeug.test.Cookie.decoded_value"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  attributes {
    name: "expires"
    fully_qualified_name: "werkzeug.test.Cookie.expires"
    type_annotation {
      pretty_printed_name: "Union[datetime.datetime,None]"
      kind: UNION
      args {
        pretty_printed_name: "datetime.datetime"
        fully_qualified_name: "datetime.datetime"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  attributes {
    name: "max_age"
    fully_qualified_name: "werkzeug.test.Cookie.max_age"
    type_annotation {
      pretty_printed_name: "Union[builtins.int,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  attributes {
    name: "domain"
    fully_qualified_name: "werkzeug.test.Cookie.domain"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  attributes {
    name: "origin_only"
    fully_qualified_name: "werkzeug.test.Cookie.origin_only"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
  attributes {
    name: "path"
    fully_qualified_name: "werkzeug.test.Cookie.path"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  attributes {
    name: "secure"
    fully_qualified_name: "werkzeug.test.Cookie.secure"
    type_annotation {
      pretty_printed_name: "Union[builtins.bool,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  attributes {
    name: "http_only"
    fully_qualified_name: "werkzeug.test.Cookie.http_only"
    type_annotation {
      pretty_printed_name: "Union[builtins.bool,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  attributes {
    name: "same_site"
    fully_qualified_name: "werkzeug.test.Cookie.same_site"
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  attributes {
    name: "__dataclass_fields__"
    fully_qualified_name: "werkzeug.test.Cookie.__dataclass_fields__"
    type_annotation {
      pretty_printed_name: "builtins.dict[builtins.str,dataclasses.Field[Any]]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "dataclasses.Field[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "dataclasses.Field"
      }
      fully_qualified_name: "builtins.dict"
    }
  }
}
functions {
  name: "stream_encode_multipart"
  fully_qualified_name: "werkzeug.test.stream_encode_multipart"
  return_annotation {
    pretty_printed_name: "Tuple[typing.IO[builtins.bytes],builtins.int,builtins.str]"
    kind: TUPLE
    args {
      pretty_printed_name: "typing.IO[builtins.bytes]"
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
      fully_qualified_name: "typing.IO"
    }
    args {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  parameters {
    name: "data"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "typing.Mapping[builtins.str,Any]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "typing.Mapping"
    }
  }
  parameters {
    name: "use_tempfile"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
  parameters {
    name: "threshold"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "boundary"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  parameters {
    name: "charset"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
}
functions {
  name: "encode_multipart"
  fully_qualified_name: "werkzeug.test.encode_multipart"
  return_annotation {
    pretty_printed_name: "Tuple[builtins.str,builtins.bytes]"
    kind: TUPLE
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    args {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
  }
  parameters {
    name: "values"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "typing.Mapping[builtins.str,Any]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "typing.Mapping"
    }
  }
  parameters {
    name: "boundary"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  parameters {
    name: "charset"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
}
functions {
  name: "_iter_data"
  fully_qualified_name: "werkzeug.test._iter_data"
  return_annotation {
    pretty_printed_name: "typing.Iterator[Tuple[builtins.str,Any]]"
    args {
      pretty_printed_name: "Tuple[builtins.str,Any]"
      kind: TUPLE
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    fully_qualified_name: "typing.Iterator"
  }
  parameters {
    name: "data"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "typing.Mapping[builtins.str,Any]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "typing.Mapping"
    }
  }
}
functions {
  name: "create_environ"
  fully_qualified_name: "werkzeug.test.create_environ"
  return_annotation {
    pretty_printed_name: "TypeAlias[builtins.dict[builtins.str,Any]]"
    kind: TYPE_ALIAS
    args {
      pretty_printed_name: "builtins.dict[builtins.str,Any]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "builtins.dict"
    }
    fully_qualified_name: "_typeshed.wsgi.WSGIEnvironment"
  }
  parameters {
    name: "args"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  parameters {
    name: "kwargs"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
}
functions {
  name: "run_wsgi_app"
  fully_qualified_name: "werkzeug.test.run_wsgi_app"
  return_annotation {
    pretty_printed_name: "Tuple[typing.Iterable[builtins.bytes],builtins.str,werkzeug.datastructures.headers.Headers]"
    kind: TUPLE
    args {
      pretty_printed_name: "typing.Iterable[builtins.bytes]"
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
      fully_qualified_name: "typing.Iterable"
    }
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    args {
      pretty_printed_name: "werkzeug.datastructures.headers.Headers"
      fully_qualified_name: "werkzeug.datastructures.headers.Headers"
    }
  }
  parameters {
    name: "app"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[CallableType[builtins.function]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
      fully_qualified_name: "_typeshed.wsgi.WSGIApplication"
    }
  }
  parameters {
    name: "environ"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[builtins.dict[builtins.str,Any]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "builtins.dict[builtins.str,Any]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "builtins.dict"
      }
      fully_qualified_name: "_typeshed.wsgi.WSGIEnvironment"
    }
  }
  parameters {
    name: "buffered"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
}
vars {
  name: "__annotations__"
  fully_qualified_name: "werkzeug.test.__annotations__"
  type_annotation {
    pretty_printed_name: "builtins.dict[builtins.str,Any]"
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    args {
      pretty_printed_name: "Any"
      kind: ANY
    }
    fully_qualified_name: "builtins.dict"
  }
}
vars {
  name: "t"
  fully_qualified_name: "typing"
  is_imported_module: true
}
vars {
  name: "te"
  fully_qualified_name: "typing_extensions"
  is_imported_module: true
}
