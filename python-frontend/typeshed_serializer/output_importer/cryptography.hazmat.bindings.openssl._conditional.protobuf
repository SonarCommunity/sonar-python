fully_qualified_name: "cryptography.hazmat.bindings.openssl._conditional"
functions {
  name: "cryptography_has_ec2m"
  fully_qualified_name: "cryptography.hazmat.bindings.openssl._conditional.cryptography_has_ec2m"
}
functions {
  name: "cryptography_has_rsa_oaep_md"
  fully_qualified_name: "cryptography.hazmat.bindings.openssl._conditional.cryptography_has_rsa_oaep_md"
}
functions {
  name: "cryptography_has_rsa_oaep_label"
  fully_qualified_name: "cryptography.hazmat.bindings.openssl._conditional.cryptography_has_rsa_oaep_label"
}
functions {
  name: "cryptography_has_ssl3_method"
  fully_qualified_name: "cryptography.hazmat.bindings.openssl._conditional.cryptography_has_ssl3_method"
}
functions {
  name: "cryptography_has_110_verification_params"
  fully_qualified_name: "cryptography.hazmat.bindings.openssl._conditional.cryptography_has_110_verification_params"
}
functions {
  name: "cryptography_has_set_cert_cb"
  fully_qualified_name: "cryptography.hazmat.bindings.openssl._conditional.cryptography_has_set_cert_cb"
}
functions {
  name: "cryptography_has_ssl_st"
  fully_qualified_name: "cryptography.hazmat.bindings.openssl._conditional.cryptography_has_ssl_st"
}
functions {
  name: "cryptography_has_tls_st"
  fully_qualified_name: "cryptography.hazmat.bindings.openssl._conditional.cryptography_has_tls_st"
}
functions {
  name: "cryptography_has_scrypt"
  fully_qualified_name: "cryptography.hazmat.bindings.openssl._conditional.cryptography_has_scrypt"
}
functions {
  name: "cryptography_has_evp_pkey_dhx"
  fully_qualified_name: "cryptography.hazmat.bindings.openssl._conditional.cryptography_has_evp_pkey_dhx"
}
functions {
  name: "cryptography_has_mem_functions"
  fully_qualified_name: "cryptography.hazmat.bindings.openssl._conditional.cryptography_has_mem_functions"
}
functions {
  name: "cryptography_has_x509_store_ctx_get_issuer"
  fully_qualified_name: "cryptography.hazmat.bindings.openssl._conditional.cryptography_has_x509_store_ctx_get_issuer"
}
functions {
  name: "cryptography_has_ed448"
  fully_qualified_name: "cryptography.hazmat.bindings.openssl._conditional.cryptography_has_ed448"
}
functions {
  name: "cryptography_has_ed25519"
  fully_qualified_name: "cryptography.hazmat.bindings.openssl._conditional.cryptography_has_ed25519"
}
functions {
  name: "cryptography_has_poly1305"
  fully_qualified_name: "cryptography.hazmat.bindings.openssl._conditional.cryptography_has_poly1305"
}
functions {
  name: "cryptography_has_oneshot_evp_digest_sign_verify"
  fully_qualified_name: "cryptography.hazmat.bindings.openssl._conditional.cryptography_has_oneshot_evp_digest_sign_verify"
}
functions {
  name: "cryptography_has_evp_digestfinal_xof"
  fully_qualified_name: "cryptography.hazmat.bindings.openssl._conditional.cryptography_has_evp_digestfinal_xof"
}
functions {
  name: "cryptography_has_evp_pkey_get_set_tls_encodedpoint"
  fully_qualified_name: "cryptography.hazmat.bindings.openssl._conditional.cryptography_has_evp_pkey_get_set_tls_encodedpoint"
}
functions {
  name: "cryptography_has_fips"
  fully_qualified_name: "cryptography.hazmat.bindings.openssl._conditional.cryptography_has_fips"
}
functions {
  name: "cryptography_has_psk"
  fully_qualified_name: "cryptography.hazmat.bindings.openssl._conditional.cryptography_has_psk"
}
functions {
  name: "cryptography_has_custom_ext"
  fully_qualified_name: "cryptography.hazmat.bindings.openssl._conditional.cryptography_has_custom_ext"
}
functions {
  name: "cryptography_has_openssl_cleanup"
  fully_qualified_name: "cryptography.hazmat.bindings.openssl._conditional.cryptography_has_openssl_cleanup"
}
functions {
  name: "cryptography_has_tlsv13"
  fully_qualified_name: "cryptography.hazmat.bindings.openssl._conditional.cryptography_has_tlsv13"
}
functions {
  name: "cryptography_has_tlsv13_functions"
  fully_qualified_name: "cryptography.hazmat.bindings.openssl._conditional.cryptography_has_tlsv13_functions"
}
functions {
  name: "cryptography_has_keylog"
  fully_qualified_name: "cryptography.hazmat.bindings.openssl._conditional.cryptography_has_keylog"
}
functions {
  name: "cryptography_has_raw_key"
  fully_qualified_name: "cryptography.hazmat.bindings.openssl._conditional.cryptography_has_raw_key"
}
functions {
  name: "cryptography_has_engine"
  fully_qualified_name: "cryptography.hazmat.bindings.openssl._conditional.cryptography_has_engine"
}
functions {
  name: "cryptography_has_verified_chain"
  fully_qualified_name: "cryptography.hazmat.bindings.openssl._conditional.cryptography_has_verified_chain"
}
functions {
  name: "cryptography_has_srtp"
  fully_qualified_name: "cryptography.hazmat.bindings.openssl._conditional.cryptography_has_srtp"
}
functions {
  name: "cryptography_has_get_proto_version"
  fully_qualified_name: "cryptography.hazmat.bindings.openssl._conditional.cryptography_has_get_proto_version"
}
functions {
  name: "cryptography_has_providers"
  fully_qualified_name: "cryptography.hazmat.bindings.openssl._conditional.cryptography_has_providers"
}
functions {
  name: "cryptography_has_op_no_renegotiation"
  fully_qualified_name: "cryptography.hazmat.bindings.openssl._conditional.cryptography_has_op_no_renegotiation"
}
functions {
  name: "cryptography_has_dtls_get_data_mtu"
  fully_qualified_name: "cryptography.hazmat.bindings.openssl._conditional.cryptography_has_dtls_get_data_mtu"
}
functions {
  name: "cryptography_has_300_fips"
  fully_qualified_name: "cryptography.hazmat.bindings.openssl._conditional.cryptography_has_300_fips"
}
functions {
  name: "cryptography_has_ssl_cookie"
  fully_qualified_name: "cryptography.hazmat.bindings.openssl._conditional.cryptography_has_ssl_cookie"
}
functions {
  name: "cryptography_has_pkcs7_funcs"
  fully_qualified_name: "cryptography.hazmat.bindings.openssl._conditional.cryptography_has_pkcs7_funcs"
}
functions {
  name: "cryptography_has_bn_flags"
  fully_qualified_name: "cryptography.hazmat.bindings.openssl._conditional.cryptography_has_bn_flags"
}
functions {
  name: "cryptography_has_evp_pkey_dh"
  fully_qualified_name: "cryptography.hazmat.bindings.openssl._conditional.cryptography_has_evp_pkey_dh"
}
vars {
  name: "__annotations__"
  fully_qualified_name: "cryptography.hazmat.bindings.openssl._conditional.__annotations__"
  type_annotation {
    pretty_printed_name: "builtins.dict[builtins.str,Any]"
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    args {
      pretty_printed_name: "Any"
      kind: ANY
    }
    fully_qualified_name: "builtins.dict"
  }
}
vars {
  name: "CONDITIONAL_NAMES"
  fully_qualified_name: "cryptography.hazmat.bindings.openssl._conditional.CONDITIONAL_NAMES"
  type_annotation {
    pretty_printed_name: "builtins.dict[builtins.str,CallableType[builtins.function]]"
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    args {
      pretty_printed_name: "CallableType[builtins.function]"
      kind: CALLABLE
      args {
        pretty_printed_name: "builtins.function"
        fully_qualified_name: "builtins.function"
      }
    }
    fully_qualified_name: "builtins.dict"
  }
}
