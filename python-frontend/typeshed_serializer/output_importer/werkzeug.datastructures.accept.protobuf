fully_qualified_name: "werkzeug.datastructures.accept"
classes {
  name: "Accept"
  fully_qualified_name: "werkzeug.datastructures.accept.Accept"
  super_classes: "werkzeug.datastructures.structures.ImmutableList"
  methods {
    name: "__init__"
    fully_qualified_name: "werkzeug.datastructures.accept.Accept.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.accept.Accept"
        fully_qualified_name: "werkzeug.datastructures.accept.Accept"
      }
    }
    parameters {
      name: "values"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[werkzeug.datastructures.accept.Accept,typing.Iterable[Tuple[builtins.str,builtins.float]],None]"
        kind: UNION
        args {
          pretty_printed_name: "werkzeug.datastructures.accept.Accept"
          fully_qualified_name: "werkzeug.datastructures.accept.Accept"
        }
        args {
          pretty_printed_name: "typing.Iterable[Tuple[builtins.str,builtins.float]]"
          args {
            pretty_printed_name: "Tuple[builtins.str,builtins.float]"
            kind: TUPLE
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.float"
              fully_qualified_name: "builtins.float"
            }
          }
          fully_qualified_name: "typing.Iterable"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "_specificity"
    fully_qualified_name: "werkzeug.datastructures.accept.Accept._specificity"
    return_annotation {
      pretty_printed_name: "builtins.tuple[builtins.bool]"
      args {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      fully_qualified_name: "builtins.tuple"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.accept.Accept"
        fully_qualified_name: "werkzeug.datastructures.accept.Accept"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  methods {
    name: "_value_matches"
    fully_qualified_name: "werkzeug.datastructures.accept.Accept._value_matches"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.accept.Accept"
        fully_qualified_name: "werkzeug.datastructures.accept.Accept"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "item"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  methods {
    name: "quality"
    fully_qualified_name: "werkzeug.datastructures.accept.Accept.quality"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.accept.Accept"
        fully_qualified_name: "werkzeug.datastructures.accept.Accept"
      }
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  methods {
    name: "__contains__"
    fully_qualified_name: "werkzeug.datastructures.accept.Accept.__contains__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.accept.Accept"
        fully_qualified_name: "werkzeug.datastructures.accept.Accept"
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  methods {
    name: "index"
    fully_qualified_name: "werkzeug.datastructures.accept.Accept.index"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.accept.Accept"
        fully_qualified_name: "werkzeug.datastructures.accept.Accept"
      }
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  methods {
    name: "find"
    fully_qualified_name: "werkzeug.datastructures.accept.Accept.find"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.accept.Accept"
        fully_qualified_name: "werkzeug.datastructures.accept.Accept"
      }
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  methods {
    name: "values"
    fully_qualified_name: "werkzeug.datastructures.accept.Accept.values"
    return_annotation {
      pretty_printed_name: "typing.Iterator[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.accept.Accept"
        fully_qualified_name: "werkzeug.datastructures.accept.Accept"
      }
    }
  }
  methods {
    name: "to_header"
    fully_qualified_name: "werkzeug.datastructures.accept.Accept.to_header"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.accept.Accept"
        fully_qualified_name: "werkzeug.datastructures.accept.Accept"
      }
    }
  }
  methods {
    name: "_best_single_match"
    fully_qualified_name: "werkzeug.datastructures.accept.Accept._best_single_match"
    return_annotation {
      pretty_printed_name: "Union[Tuple[builtins.str,builtins.int],None]"
      kind: UNION
      args {
        pretty_printed_name: "Tuple[builtins.str,builtins.int]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.accept.Accept"
        fully_qualified_name: "werkzeug.datastructures.accept.Accept"
      }
    }
    parameters {
      name: "match"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  methods {
    name: "best"
    fully_qualified_name: "werkzeug.datastructures.accept.Accept.best"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.accept.Accept"
        fully_qualified_name: "werkzeug.datastructures.accept.Accept"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  overloaded_methods {
    name: "__getitem__"
    fullname: "werkzeug.datastructures.accept.Accept.__getitem__"
    definitions {
      name: "__getitem__"
      fully_qualified_name: "werkzeug.datastructures.accept.Accept.__getitem__"
      return_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.accept.Accept"
          fully_qualified_name: "werkzeug.datastructures.accept.Accept"
        }
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__getitem__"
      fully_qualified_name: "werkzeug.datastructures.accept.Accept.__getitem__"
      return_annotation {
        pretty_printed_name: "Tuple[builtins.str,builtins.int]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.accept.Accept"
          fully_qualified_name: "werkzeug.datastructures.accept.Accept"
        }
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__getitem__"
      fully_qualified_name: "werkzeug.datastructures.accept.Accept.__getitem__"
      return_annotation {
        pretty_printed_name: "typing.Iterable[Tuple[builtins.str,builtins.int]]"
        args {
          pretty_printed_name: "Tuple[builtins.str,builtins.int]"
          kind: TUPLE
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
        }
        fully_qualified_name: "typing.Iterable"
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.accept.Accept"
          fully_qualified_name: "werkzeug.datastructures.accept.Accept"
        }
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "builtins.slice"
          fully_qualified_name: "builtins.slice"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
  }
  overloaded_methods {
    name: "best_match"
    fullname: "werkzeug.datastructures.accept.Accept.best_match"
    definitions {
      name: "best_match"
      fully_qualified_name: "werkzeug.datastructures.accept.Accept.best_match"
      return_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.accept.Accept"
          fully_qualified_name: "werkzeug.datastructures.accept.Accept"
        }
      }
      parameters {
        name: "matches"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "default"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "best_match"
      fully_qualified_name: "werkzeug.datastructures.accept.Accept.best_match"
      return_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.datastructures.accept.Accept"
          fully_qualified_name: "werkzeug.datastructures.accept.Accept"
        }
      }
      parameters {
        name: "matches"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      parameters {
        name: "default"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
  }
  attributes {
    name: "provided"
    fully_qualified_name: "werkzeug.datastructures.accept.Accept.provided"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
}
classes {
  name: "MIMEAccept"
  fully_qualified_name: "werkzeug.datastructures.accept.MIMEAccept"
  super_classes: "werkzeug.datastructures.accept.Accept"
  methods {
    name: "_specificity"
    fully_qualified_name: "werkzeug.datastructures.accept.MIMEAccept._specificity"
    return_annotation {
      pretty_printed_name: "builtins.tuple[builtins.bool]"
      args {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      fully_qualified_name: "builtins.tuple"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.accept.MIMEAccept"
        fully_qualified_name: "werkzeug.datastructures.accept.MIMEAccept"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  methods {
    name: "_value_matches"
    fully_qualified_name: "werkzeug.datastructures.accept.MIMEAccept._value_matches"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.accept.MIMEAccept"
        fully_qualified_name: "werkzeug.datastructures.accept.MIMEAccept"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "item"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  methods {
    name: "accept_html"
    fully_qualified_name: "werkzeug.datastructures.accept.MIMEAccept.accept_html"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.accept.MIMEAccept"
        fully_qualified_name: "werkzeug.datastructures.accept.MIMEAccept"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "accept_xhtml"
    fully_qualified_name: "werkzeug.datastructures.accept.MIMEAccept.accept_xhtml"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.accept.MIMEAccept"
        fully_qualified_name: "werkzeug.datastructures.accept.MIMEAccept"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "accept_json"
    fully_qualified_name: "werkzeug.datastructures.accept.MIMEAccept.accept_json"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.accept.MIMEAccept"
        fully_qualified_name: "werkzeug.datastructures.accept.MIMEAccept"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
}
classes {
  name: "LanguageAccept"
  fully_qualified_name: "werkzeug.datastructures.accept.LanguageAccept"
  super_classes: "werkzeug.datastructures.accept.Accept"
  methods {
    name: "_value_matches"
    fully_qualified_name: "werkzeug.datastructures.accept.LanguageAccept._value_matches"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.accept.LanguageAccept"
        fully_qualified_name: "werkzeug.datastructures.accept.LanguageAccept"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "item"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
}
classes {
  name: "CharsetAccept"
  fully_qualified_name: "werkzeug.datastructures.accept.CharsetAccept"
  super_classes: "werkzeug.datastructures.accept.Accept"
  methods {
    name: "_value_matches"
    fully_qualified_name: "werkzeug.datastructures.accept.CharsetAccept._value_matches"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.accept.CharsetAccept"
        fully_qualified_name: "werkzeug.datastructures.accept.CharsetAccept"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "item"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
}
functions {
  name: "_normalize_mime"
  fully_qualified_name: "werkzeug.datastructures.accept._normalize_mime"
  return_annotation {
    pretty_printed_name: "builtins.list[builtins.str]"
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    fully_qualified_name: "builtins.list"
  }
  parameters {
    name: "value"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
}
functions {
  name: "_normalize_lang"
  fully_qualified_name: "werkzeug.datastructures.accept._normalize_lang"
  return_annotation {
    pretty_printed_name: "builtins.list[builtins.str]"
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    fully_qualified_name: "builtins.list"
  }
  parameters {
    name: "value"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
}
vars {
  name: "__annotations__"
  fully_qualified_name: "werkzeug.datastructures.accept.__annotations__"
  type_annotation {
    pretty_printed_name: "builtins.dict[builtins.str,Any]"
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    args {
      pretty_printed_name: "Any"
      kind: ANY
    }
    fully_qualified_name: "builtins.dict"
  }
}
