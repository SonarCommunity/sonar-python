fully_qualified_name: "click.parser"
classes {
  name: "CoreArgument"
  fully_qualified_name: "click.core.Argument"
  super_classes: "click.core.Parameter"
  methods {
    name: "__init__"
    fully_qualified_name: "click.core.Argument.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.core.Argument"
        fully_qualified_name: "click.core.Argument"
      }
    }
    parameters {
      name: "param_decls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Sequence[builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "typing.Sequence"
      }
    }
    parameters {
      name: "required"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.bool,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "attrs"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
  }
  methods {
    name: "human_readable_name"
    fully_qualified_name: "click.core.Argument.human_readable_name"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.core.Argument"
        fully_qualified_name: "click.core.Argument"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "make_metavar"
    fully_qualified_name: "click.core.Argument.make_metavar"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.core.Argument"
        fully_qualified_name: "click.core.Argument"
      }
    }
  }
  methods {
    name: "_parse_decls"
    fully_qualified_name: "click.core.Argument._parse_decls"
    return_annotation {
      pretty_printed_name: "Tuple[Union[builtins.str,None],builtins.list[builtins.str],builtins.list[builtins.str]]"
      kind: TUPLE
      args {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      args {
        pretty_printed_name: "builtins.list[builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "builtins.list"
      }
      args {
        pretty_printed_name: "builtins.list[builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "builtins.list"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.core.Argument"
        fully_qualified_name: "click.core.Argument"
      }
    }
    parameters {
      name: "decls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Sequence[builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "typing.Sequence"
      }
    }
    parameters {
      name: "expose_value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
  }
  methods {
    name: "get_usage_pieces"
    fully_qualified_name: "click.core.Argument.get_usage_pieces"
    return_annotation {
      pretty_printed_name: "builtins.list[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.core.Argument"
        fully_qualified_name: "click.core.Argument"
      }
    }
    parameters {
      name: "ctx"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.core.Context"
        fully_qualified_name: "click.core.Context"
      }
    }
  }
  methods {
    name: "get_error_hint"
    fully_qualified_name: "click.core.Argument.get_error_hint"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.core.Argument"
        fully_qualified_name: "click.core.Argument"
      }
    }
    parameters {
      name: "ctx"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.core.Context"
        fully_qualified_name: "click.core.Context"
      }
    }
  }
  methods {
    name: "add_to_parser"
    fully_qualified_name: "click.core.Argument.add_to_parser"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.core.Argument"
        fully_qualified_name: "click.core.Argument"
      }
    }
    parameters {
      name: "parser"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.parser.OptionParser"
        fully_qualified_name: "click.parser.OptionParser"
      }
    }
    parameters {
      name: "ctx"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.core.Context"
        fully_qualified_name: "click.core.Context"
      }
    }
  }
  attributes {
    name: "param_type_name"
    fully_qualified_name: "click.core.Argument.param_type_name"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
}
classes {
  name: "CoreOption"
  fully_qualified_name: "click.core.Option"
  super_classes: "click.core.Parameter"
  methods {
    name: "__init__"
    fully_qualified_name: "click.core.Option.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.core.Option"
        fully_qualified_name: "click.core.Option"
      }
    }
    parameters {
      name: "param_decls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.Sequence[builtins.str],None]"
        kind: UNION
        args {
          pretty_printed_name: "typing.Sequence[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "typing.Sequence"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "show_default"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.bool,builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "prompt"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.bool,builtins.str]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
    }
    parameters {
      name: "confirmation_prompt"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.bool,builtins.str]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
    }
    parameters {
      name: "prompt_required"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    parameters {
      name: "hide_input"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    parameters {
      name: "is_flag"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.bool,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "flag_value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "multiple"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    parameters {
      name: "count"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    parameters {
      name: "allow_from_autoenv"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    parameters {
      name: "type"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[click.types.ParamType,Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "click.types.ParamType"
          fully_qualified_name: "click.types.ParamType"
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "help"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "hidden"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    parameters {
      name: "show_choices"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    parameters {
      name: "show_envvar"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    parameters {
      name: "attrs"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
  }
  methods {
    name: "to_info_dict"
    fully_qualified_name: "click.core.Option.to_info_dict"
    return_annotation {
      pretty_printed_name: "builtins.dict[builtins.str,Any]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "builtins.dict"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.core.Option"
        fully_qualified_name: "click.core.Option"
      }
    }
  }
  methods {
    name: "_parse_decls"
    fully_qualified_name: "click.core.Option._parse_decls"
    return_annotation {
      pretty_printed_name: "Tuple[Union[builtins.str,None],builtins.list[builtins.str],builtins.list[builtins.str]]"
      kind: TUPLE
      args {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      args {
        pretty_printed_name: "builtins.list[builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "builtins.list"
      }
      args {
        pretty_printed_name: "builtins.list[builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "builtins.list"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.core.Option"
        fully_qualified_name: "click.core.Option"
      }
    }
    parameters {
      name: "decls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Sequence[builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "typing.Sequence"
      }
    }
    parameters {
      name: "expose_value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
  }
  methods {
    name: "add_to_parser"
    fully_qualified_name: "click.core.Option.add_to_parser"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.core.Option"
        fully_qualified_name: "click.core.Option"
      }
    }
    parameters {
      name: "parser"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.parser.OptionParser"
        fully_qualified_name: "click.parser.OptionParser"
      }
    }
    parameters {
      name: "ctx"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.core.Context"
        fully_qualified_name: "click.core.Context"
      }
    }
  }
  methods {
    name: "get_help_record"
    fully_qualified_name: "click.core.Option.get_help_record"
    return_annotation {
      pretty_printed_name: "Union[Tuple[builtins.str,builtins.str],None]"
      kind: UNION
      args {
        pretty_printed_name: "Tuple[builtins.str,builtins.str]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.core.Option"
        fully_qualified_name: "click.core.Option"
      }
    }
    parameters {
      name: "ctx"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.core.Context"
        fully_qualified_name: "click.core.Context"
      }
    }
  }
  methods {
    name: "prompt_for_value"
    fully_qualified_name: "click.core.Option.prompt_for_value"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.core.Option"
        fully_qualified_name: "click.core.Option"
      }
    }
    parameters {
      name: "ctx"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.core.Context"
        fully_qualified_name: "click.core.Context"
      }
    }
  }
  methods {
    name: "resolve_envvar_value"
    fully_qualified_name: "click.core.Option.resolve_envvar_value"
    return_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.core.Option"
        fully_qualified_name: "click.core.Option"
      }
    }
    parameters {
      name: "ctx"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.core.Context"
        fully_qualified_name: "click.core.Context"
      }
    }
  }
  methods {
    name: "value_from_envvar"
    fully_qualified_name: "click.core.Option.value_from_envvar"
    return_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.core.Option"
        fully_qualified_name: "click.core.Option"
      }
    }
    parameters {
      name: "ctx"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.core.Context"
        fully_qualified_name: "click.core.Context"
      }
    }
  }
  methods {
    name: "consume_value"
    fully_qualified_name: "click.core.Option.consume_value"
    return_annotation {
      pretty_printed_name: "Tuple[Any,click.core.ParameterSource]"
      kind: TUPLE
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "click.core.ParameterSource"
        fully_qualified_name: "click.core.ParameterSource"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.core.Option"
        fully_qualified_name: "click.core.Option"
      }
    }
    parameters {
      name: "ctx"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.core.Context"
        fully_qualified_name: "click.core.Context"
      }
    }
    parameters {
      name: "opts"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Mapping[builtins.str,click.core.Parameter]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "click.core.Parameter"
          fully_qualified_name: "click.core.Parameter"
        }
        fully_qualified_name: "typing.Mapping"
      }
    }
  }
  overloaded_methods {
    name: "get_default"
    fullname: "click.core.Option.get_default"
    definitions {
      name: "get_default"
      fully_qualified_name: "click.core.Option.get_default"
      return_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "click.core.Option"
          fully_qualified_name: "click.core.Option"
        }
      }
      parameters {
        name: "ctx"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "click.core.Context"
          fully_qualified_name: "click.core.Context"
        }
      }
      parameters {
        name: "call"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Literal[builtins.bool]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.bool"
            fully_qualified_name: "builtins.bool"
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "t.overload"
      is_overload: true
    }
    definitions {
      name: "get_default"
      fully_qualified_name: "click.core.Option.get_default"
      return_annotation {
        pretty_printed_name: "Union[Any,CallableType[builtins.function],None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "click.core.Option"
          fully_qualified_name: "click.core.Option"
        }
      }
      parameters {
        name: "ctx"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "click.core.Context"
          fully_qualified_name: "click.core.Context"
        }
      }
      parameters {
        name: "call"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
      }
      has_decorators: true
      resolved_decorator_names: "t.overload"
      is_overload: true
    }
  }
  attributes {
    name: "param_type_name"
    fully_qualified_name: "click.core.Option.param_type_name"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  attributes {
    name: "prompt"
    fully_qualified_name: "click.core.Option.prompt"
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  attributes {
    name: "confirmation_prompt"
    fully_qualified_name: "click.core.Option.confirmation_prompt"
    type_annotation {
      pretty_printed_name: "Union[builtins.bool,builtins.str]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  attributes {
    name: "prompt_required"
    fully_qualified_name: "click.core.Option.prompt_required"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
  attributes {
    name: "hide_input"
    fully_qualified_name: "click.core.Option.hide_input"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
  attributes {
    name: "hidden"
    fully_qualified_name: "click.core.Option.hidden"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
  attributes {
    name: "_flag_needs_value"
    fully_qualified_name: "click.core.Option._flag_needs_value"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
  attributes {
    name: "default"
    fully_qualified_name: "click.core.Option.default"
    type_annotation {
      pretty_printed_name: "Union[Any,CallableType[builtins.function]]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
  }
  attributes {
    name: "is_flag"
    fully_qualified_name: "click.core.Option.is_flag"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
  attributes {
    name: "is_bool_flag"
    fully_qualified_name: "click.core.Option.is_bool_flag"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
  attributes {
    name: "flag_value"
    fully_qualified_name: "click.core.Option.flag_value"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  attributes {
    name: "count"
    fully_qualified_name: "click.core.Option.count"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
  attributes {
    name: "allow_from_autoenv"
    fully_qualified_name: "click.core.Option.allow_from_autoenv"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
  attributes {
    name: "help"
    fully_qualified_name: "click.core.Option.help"
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  attributes {
    name: "show_default"
    fully_qualified_name: "click.core.Option.show_default"
    type_annotation {
      pretty_printed_name: "Union[builtins.bool,builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  attributes {
    name: "show_choices"
    fully_qualified_name: "click.core.Option.show_choices"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
  attributes {
    name: "show_envvar"
    fully_qualified_name: "click.core.Option.show_envvar"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
}
classes {
  name: "CoreParameter"
  fully_qualified_name: "click.core.Parameter"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "click.core.Parameter.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.core.Parameter"
        fully_qualified_name: "click.core.Parameter"
      }
    }
    parameters {
      name: "param_decls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.Sequence[builtins.str],None]"
        kind: UNION
        args {
          pretty_printed_name: "typing.Sequence[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "typing.Sequence"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "type"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[click.types.ParamType,Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "click.types.ParamType"
          fully_qualified_name: "click.types.ParamType"
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "required"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    parameters {
      name: "default"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,CallableType[builtins.function],None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "callback"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[CallableType[builtins.function],None]"
        kind: UNION
        args {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "nargs"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "multiple"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    parameters {
      name: "metavar"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "expose_value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    parameters {
      name: "is_eager"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    parameters {
      name: "envvar"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,typing.Sequence[builtins.str],None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "typing.Sequence[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "typing.Sequence"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "shell_complete"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[CallableType[builtins.function],None]"
        kind: UNION
        args {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "to_info_dict"
    fully_qualified_name: "click.core.Parameter.to_info_dict"
    return_annotation {
      pretty_printed_name: "builtins.dict[builtins.str,Any]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "builtins.dict"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.core.Parameter"
        fully_qualified_name: "click.core.Parameter"
      }
    }
  }
  methods {
    name: "__repr__"
    fully_qualified_name: "click.core.Parameter.__repr__"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "click.core.Parameter"
        fully_qualified_name: "click.core.Parameter"
      }
    }
  }
  methods {
    name: "_parse_decls"
    fully_qualified_name: "click.core.Parameter._parse_decls"
    return_annotation {
      pretty_printed_name: "Tuple[Union[builtins.str,None],builtins.list[builtins.str],builtins.list[builtins.str]]"
      kind: TUPLE
      args {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      args {
        pretty_printed_name: "builtins.list[builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "builtins.list"
      }
      args {
        pretty_printed_name: "builtins.list[builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "builtins.list"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.core.Parameter"
        fully_qualified_name: "click.core.Parameter"
      }
    }
    parameters {
      name: "decls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Sequence[builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "typing.Sequence"
      }
    }
    parameters {
      name: "expose_value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
  }
  methods {
    name: "human_readable_name"
    fully_qualified_name: "click.core.Parameter.human_readable_name"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.core.Parameter"
        fully_qualified_name: "click.core.Parameter"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "make_metavar"
    fully_qualified_name: "click.core.Parameter.make_metavar"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.core.Parameter"
        fully_qualified_name: "click.core.Parameter"
      }
    }
  }
  methods {
    name: "add_to_parser"
    fully_qualified_name: "click.core.Parameter.add_to_parser"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.core.Parameter"
        fully_qualified_name: "click.core.Parameter"
      }
    }
    parameters {
      name: "parser"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.parser.OptionParser"
        fully_qualified_name: "click.parser.OptionParser"
      }
    }
    parameters {
      name: "ctx"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.core.Context"
        fully_qualified_name: "click.core.Context"
      }
    }
  }
  methods {
    name: "consume_value"
    fully_qualified_name: "click.core.Parameter.consume_value"
    return_annotation {
      pretty_printed_name: "Tuple[Any,click.core.ParameterSource]"
      kind: TUPLE
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "click.core.ParameterSource"
        fully_qualified_name: "click.core.ParameterSource"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.core.Parameter"
        fully_qualified_name: "click.core.Parameter"
      }
    }
    parameters {
      name: "ctx"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.core.Context"
        fully_qualified_name: "click.core.Context"
      }
    }
    parameters {
      name: "opts"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Mapping[builtins.str,Any]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "typing.Mapping"
      }
    }
  }
  methods {
    name: "type_cast_value"
    fully_qualified_name: "click.core.Parameter.type_cast_value"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.core.Parameter"
        fully_qualified_name: "click.core.Parameter"
      }
    }
    parameters {
      name: "ctx"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.core.Context"
        fully_qualified_name: "click.core.Context"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
  }
  methods {
    name: "value_is_missing"
    fully_qualified_name: "click.core.Parameter.value_is_missing"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.core.Parameter"
        fully_qualified_name: "click.core.Parameter"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
  }
  methods {
    name: "process_value"
    fully_qualified_name: "click.core.Parameter.process_value"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.core.Parameter"
        fully_qualified_name: "click.core.Parameter"
      }
    }
    parameters {
      name: "ctx"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.core.Context"
        fully_qualified_name: "click.core.Context"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
  }
  methods {
    name: "resolve_envvar_value"
    fully_qualified_name: "click.core.Parameter.resolve_envvar_value"
    return_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.core.Parameter"
        fully_qualified_name: "click.core.Parameter"
      }
    }
    parameters {
      name: "ctx"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.core.Context"
        fully_qualified_name: "click.core.Context"
      }
    }
  }
  methods {
    name: "value_from_envvar"
    fully_qualified_name: "click.core.Parameter.value_from_envvar"
    return_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.core.Parameter"
        fully_qualified_name: "click.core.Parameter"
      }
    }
    parameters {
      name: "ctx"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.core.Context"
        fully_qualified_name: "click.core.Context"
      }
    }
  }
  methods {
    name: "handle_parse_result"
    fully_qualified_name: "click.core.Parameter.handle_parse_result"
    return_annotation {
      pretty_printed_name: "Tuple[Any,builtins.list[builtins.str]]"
      kind: TUPLE
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "builtins.list[builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "builtins.list"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.core.Parameter"
        fully_qualified_name: "click.core.Parameter"
      }
    }
    parameters {
      name: "ctx"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.core.Context"
        fully_qualified_name: "click.core.Context"
      }
    }
    parameters {
      name: "opts"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Mapping[builtins.str,Any]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "typing.Mapping"
      }
    }
    parameters {
      name: "args"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.list[builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "builtins.list"
      }
    }
  }
  methods {
    name: "get_help_record"
    fully_qualified_name: "click.core.Parameter.get_help_record"
    return_annotation {
      pretty_printed_name: "Union[Tuple[builtins.str,builtins.str],None]"
      kind: UNION
      args {
        pretty_printed_name: "Tuple[builtins.str,builtins.str]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.core.Parameter"
        fully_qualified_name: "click.core.Parameter"
      }
    }
    parameters {
      name: "ctx"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.core.Context"
        fully_qualified_name: "click.core.Context"
      }
    }
  }
  methods {
    name: "get_usage_pieces"
    fully_qualified_name: "click.core.Parameter.get_usage_pieces"
    return_annotation {
      pretty_printed_name: "builtins.list[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.core.Parameter"
        fully_qualified_name: "click.core.Parameter"
      }
    }
    parameters {
      name: "ctx"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.core.Context"
        fully_qualified_name: "click.core.Context"
      }
    }
  }
  methods {
    name: "get_error_hint"
    fully_qualified_name: "click.core.Parameter.get_error_hint"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.core.Parameter"
        fully_qualified_name: "click.core.Parameter"
      }
    }
    parameters {
      name: "ctx"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.core.Context"
        fully_qualified_name: "click.core.Context"
      }
    }
  }
  methods {
    name: "shell_complete"
    fully_qualified_name: "click.core.Parameter.shell_complete"
    return_annotation {
      pretty_printed_name: "builtins.list[click.shell_completion.CompletionItem]"
      args {
        pretty_printed_name: "click.shell_completion.CompletionItem"
        fully_qualified_name: "click.shell_completion.CompletionItem"
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.core.Parameter"
        fully_qualified_name: "click.core.Parameter"
      }
    }
    parameters {
      name: "ctx"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.core.Context"
        fully_qualified_name: "click.core.Context"
      }
    }
    parameters {
      name: "incomplete"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  overloaded_methods {
    name: "get_default"
    fullname: "click.core.Parameter.get_default"
    definitions {
      name: "get_default"
      fully_qualified_name: "click.core.Parameter.get_default"
      return_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "click.core.Parameter"
          fully_qualified_name: "click.core.Parameter"
        }
      }
      parameters {
        name: "ctx"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "click.core.Context"
          fully_qualified_name: "click.core.Context"
        }
      }
      parameters {
        name: "call"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Literal[builtins.bool]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.bool"
            fully_qualified_name: "builtins.bool"
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "t.overload"
      is_overload: true
    }
    definitions {
      name: "get_default"
      fully_qualified_name: "click.core.Parameter.get_default"
      return_annotation {
        pretty_printed_name: "Union[Any,CallableType[builtins.function],None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "click.core.Parameter"
          fully_qualified_name: "click.core.Parameter"
        }
      }
      parameters {
        name: "ctx"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "click.core.Context"
          fully_qualified_name: "click.core.Context"
        }
      }
      parameters {
        name: "call"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
      }
      has_decorators: true
      resolved_decorator_names: "t.overload"
      is_overload: true
    }
  }
  attributes {
    name: "param_type_name"
    fully_qualified_name: "click.core.Parameter.param_type_name"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  attributes {
    name: "name"
    fully_qualified_name: "click.core.Parameter.name"
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  attributes {
    name: "opts"
    fully_qualified_name: "click.core.Parameter.opts"
    type_annotation {
      pretty_printed_name: "builtins.list[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "builtins.list"
    }
  }
  attributes {
    name: "secondary_opts"
    fully_qualified_name: "click.core.Parameter.secondary_opts"
    type_annotation {
      pretty_printed_name: "builtins.list[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "builtins.list"
    }
  }
  attributes {
    name: "type"
    fully_qualified_name: "click.core.Parameter.type"
    type_annotation {
      pretty_printed_name: "click.types.ParamType"
      fully_qualified_name: "click.types.ParamType"
    }
  }
  attributes {
    name: "required"
    fully_qualified_name: "click.core.Parameter.required"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
  attributes {
    name: "callback"
    fully_qualified_name: "click.core.Parameter.callback"
    type_annotation {
      pretty_printed_name: "Union[CallableType[builtins.function],None]"
      kind: UNION
      args {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  attributes {
    name: "nargs"
    fully_qualified_name: "click.core.Parameter.nargs"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  attributes {
    name: "multiple"
    fully_qualified_name: "click.core.Parameter.multiple"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
  attributes {
    name: "expose_value"
    fully_qualified_name: "click.core.Parameter.expose_value"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
  attributes {
    name: "default"
    fully_qualified_name: "click.core.Parameter.default"
    type_annotation {
      pretty_printed_name: "Union[Any,CallableType[builtins.function],None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  attributes {
    name: "is_eager"
    fully_qualified_name: "click.core.Parameter.is_eager"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
  attributes {
    name: "metavar"
    fully_qualified_name: "click.core.Parameter.metavar"
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  attributes {
    name: "envvar"
    fully_qualified_name: "click.core.Parameter.envvar"
    type_annotation {
      pretty_printed_name: "Union[builtins.str,typing.Sequence[builtins.str],None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "typing.Sequence[builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "typing.Sequence"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  attributes {
    name: "_custom_shell_complete"
    fully_qualified_name: "click.core.Parameter._custom_shell_complete"
    type_annotation {
      pretty_printed_name: "Union[CallableType[builtins.function],None]"
      kind: UNION
      args {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
}
classes {
  name: "Option"
  fully_qualified_name: "click.parser.Option"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "click.parser.Option.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.parser.Option"
        fully_qualified_name: "click.parser.Option"
      }
    }
    parameters {
      name: "obj"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.core.Option"
        fully_qualified_name: "click.core.Option"
      }
    }
    parameters {
      name: "opts"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Sequence[builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "typing.Sequence"
      }
    }
    parameters {
      name: "dest"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "action"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "nargs"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "const"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "takes_value"
    fully_qualified_name: "click.parser.Option.takes_value"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.parser.Option"
        fully_qualified_name: "click.parser.Option"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "process"
    fully_qualified_name: "click.parser.Option.process"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.parser.Option"
        fully_qualified_name: "click.parser.Option"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "state"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.parser.ParsingState"
        fully_qualified_name: "click.parser.ParsingState"
      }
    }
  }
  attributes {
    name: "_short_opts"
    fully_qualified_name: "click.parser.Option._short_opts"
    type_annotation {
      pretty_printed_name: "builtins.list[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "builtins.list"
    }
  }
  attributes {
    name: "_long_opts"
    fully_qualified_name: "click.parser.Option._long_opts"
    type_annotation {
      pretty_printed_name: "builtins.list[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "builtins.list"
    }
  }
  attributes {
    name: "prefixes"
    fully_qualified_name: "click.parser.Option.prefixes"
    type_annotation {
      pretty_printed_name: "builtins.set[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "builtins.set"
    }
  }
  attributes {
    name: "dest"
    fully_qualified_name: "click.parser.Option.dest"
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  attributes {
    name: "action"
    fully_qualified_name: "click.parser.Option.action"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  attributes {
    name: "nargs"
    fully_qualified_name: "click.parser.Option.nargs"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  attributes {
    name: "const"
    fully_qualified_name: "click.parser.Option.const"
    type_annotation {
      pretty_printed_name: "Union[Any,None]"
      kind: UNION
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  attributes {
    name: "obj"
    fully_qualified_name: "click.parser.Option.obj"
    type_annotation {
      pretty_printed_name: "click.core.Option"
      fully_qualified_name: "click.core.Option"
    }
  }
}
classes {
  name: "Argument"
  fully_qualified_name: "click.parser.Argument"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "click.parser.Argument.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.parser.Argument"
        fully_qualified_name: "click.parser.Argument"
      }
    }
    parameters {
      name: "obj"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.core.Argument"
        fully_qualified_name: "click.core.Argument"
      }
    }
    parameters {
      name: "dest"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "nargs"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
  }
  methods {
    name: "process"
    fully_qualified_name: "click.parser.Argument.process"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.parser.Argument"
        fully_qualified_name: "click.parser.Argument"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None,typing.Sequence[Union[builtins.str,None]]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
        args {
          pretty_printed_name: "typing.Sequence[Union[builtins.str,None]]"
          args {
            pretty_printed_name: "Union[builtins.str,None]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "None"
              kind: NONE
            }
          }
          fully_qualified_name: "typing.Sequence"
        }
      }
    }
    parameters {
      name: "state"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.parser.ParsingState"
        fully_qualified_name: "click.parser.ParsingState"
      }
    }
  }
  attributes {
    name: "dest"
    fully_qualified_name: "click.parser.Argument.dest"
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  attributes {
    name: "nargs"
    fully_qualified_name: "click.parser.Argument.nargs"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  attributes {
    name: "obj"
    fully_qualified_name: "click.parser.Argument.obj"
    type_annotation {
      pretty_printed_name: "click.core.Argument"
      fully_qualified_name: "click.core.Argument"
    }
  }
}
classes {
  name: "ParsingState"
  fully_qualified_name: "click.parser.ParsingState"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "click.parser.ParsingState.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.parser.ParsingState"
        fully_qualified_name: "click.parser.ParsingState"
      }
    }
    parameters {
      name: "rargs"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.list[builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "builtins.list"
      }
    }
  }
  attributes {
    name: "opts"
    fully_qualified_name: "click.parser.ParsingState.opts"
    type_annotation {
      pretty_printed_name: "builtins.dict[builtins.str,Any]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "builtins.dict"
    }
  }
  attributes {
    name: "largs"
    fully_qualified_name: "click.parser.ParsingState.largs"
    type_annotation {
      pretty_printed_name: "builtins.list[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "builtins.list"
    }
  }
  attributes {
    name: "rargs"
    fully_qualified_name: "click.parser.ParsingState.rargs"
    type_annotation {
      pretty_printed_name: "builtins.list[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "builtins.list"
    }
  }
  attributes {
    name: "order"
    fully_qualified_name: "click.parser.ParsingState.order"
    type_annotation {
      pretty_printed_name: "builtins.list[click.core.Parameter]"
      args {
        pretty_printed_name: "click.core.Parameter"
        fully_qualified_name: "click.core.Parameter"
      }
      fully_qualified_name: "builtins.list"
    }
  }
}
classes {
  name: "OptionParser"
  fully_qualified_name: "click.parser.OptionParser"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "click.parser.OptionParser.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.parser.OptionParser"
        fully_qualified_name: "click.parser.OptionParser"
      }
    }
    parameters {
      name: "ctx"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[click.core.Context,None]"
        kind: UNION
        args {
          pretty_printed_name: "click.core.Context"
          fully_qualified_name: "click.core.Context"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "add_option"
    fully_qualified_name: "click.parser.OptionParser.add_option"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.parser.OptionParser"
        fully_qualified_name: "click.parser.OptionParser"
      }
    }
    parameters {
      name: "obj"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.core.Option"
        fully_qualified_name: "click.core.Option"
      }
    }
    parameters {
      name: "opts"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Sequence[builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "typing.Sequence"
      }
    }
    parameters {
      name: "dest"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "action"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "nargs"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "const"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Any,None]"
        kind: UNION
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "add_argument"
    fully_qualified_name: "click.parser.OptionParser.add_argument"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.parser.OptionParser"
        fully_qualified_name: "click.parser.OptionParser"
      }
    }
    parameters {
      name: "obj"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.core.Argument"
        fully_qualified_name: "click.core.Argument"
      }
    }
    parameters {
      name: "dest"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "nargs"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
  }
  methods {
    name: "parse_args"
    fully_qualified_name: "click.parser.OptionParser.parse_args"
    return_annotation {
      pretty_printed_name: "Tuple[builtins.dict[builtins.str,Any],builtins.list[builtins.str],builtins.list[click.core.Parameter]]"
      kind: TUPLE
      args {
        pretty_printed_name: "builtins.dict[builtins.str,Any]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "builtins.dict"
      }
      args {
        pretty_printed_name: "builtins.list[builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "builtins.list"
      }
      args {
        pretty_printed_name: "builtins.list[click.core.Parameter]"
        args {
          pretty_printed_name: "click.core.Parameter"
          fully_qualified_name: "click.core.Parameter"
        }
        fully_qualified_name: "builtins.list"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.parser.OptionParser"
        fully_qualified_name: "click.parser.OptionParser"
      }
    }
    parameters {
      name: "args"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.list[builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "builtins.list"
      }
    }
  }
  methods {
    name: "_process_args_for_args"
    fully_qualified_name: "click.parser.OptionParser._process_args_for_args"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.parser.OptionParser"
        fully_qualified_name: "click.parser.OptionParser"
      }
    }
    parameters {
      name: "state"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.parser.ParsingState"
        fully_qualified_name: "click.parser.ParsingState"
      }
    }
  }
  methods {
    name: "_process_args_for_options"
    fully_qualified_name: "click.parser.OptionParser._process_args_for_options"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.parser.OptionParser"
        fully_qualified_name: "click.parser.OptionParser"
      }
    }
    parameters {
      name: "state"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.parser.ParsingState"
        fully_qualified_name: "click.parser.ParsingState"
      }
    }
  }
  methods {
    name: "_match_long_opt"
    fully_qualified_name: "click.parser.OptionParser._match_long_opt"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.parser.OptionParser"
        fully_qualified_name: "click.parser.OptionParser"
      }
    }
    parameters {
      name: "opt"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "explicit_value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "state"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.parser.ParsingState"
        fully_qualified_name: "click.parser.ParsingState"
      }
    }
  }
  methods {
    name: "_match_short_opt"
    fully_qualified_name: "click.parser.OptionParser._match_short_opt"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.parser.OptionParser"
        fully_qualified_name: "click.parser.OptionParser"
      }
    }
    parameters {
      name: "arg"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "state"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.parser.ParsingState"
        fully_qualified_name: "click.parser.ParsingState"
      }
    }
  }
  methods {
    name: "_get_value_from_state"
    fully_qualified_name: "click.parser.OptionParser._get_value_from_state"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.parser.OptionParser"
        fully_qualified_name: "click.parser.OptionParser"
      }
    }
    parameters {
      name: "option_name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "option"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.parser.Option"
        fully_qualified_name: "click.parser.Option"
      }
    }
    parameters {
      name: "state"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.parser.ParsingState"
        fully_qualified_name: "click.parser.ParsingState"
      }
    }
  }
  methods {
    name: "_process_opts"
    fully_qualified_name: "click.parser.OptionParser._process_opts"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.parser.OptionParser"
        fully_qualified_name: "click.parser.OptionParser"
      }
    }
    parameters {
      name: "arg"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "state"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "click.parser.ParsingState"
        fully_qualified_name: "click.parser.ParsingState"
      }
    }
  }
  attributes {
    name: "ctx"
    fully_qualified_name: "click.parser.OptionParser.ctx"
    type_annotation {
      pretty_printed_name: "Union[click.core.Context,None]"
      kind: UNION
      args {
        pretty_printed_name: "click.core.Context"
        fully_qualified_name: "click.core.Context"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  attributes {
    name: "allow_interspersed_args"
    fully_qualified_name: "click.parser.OptionParser.allow_interspersed_args"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
  attributes {
    name: "ignore_unknown_options"
    fully_qualified_name: "click.parser.OptionParser.ignore_unknown_options"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
  attributes {
    name: "_short_opt"
    fully_qualified_name: "click.parser.OptionParser._short_opt"
    type_annotation {
      pretty_printed_name: "builtins.dict[builtins.str,click.parser.Option]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "click.parser.Option"
        fully_qualified_name: "click.parser.Option"
      }
      fully_qualified_name: "builtins.dict"
    }
  }
  attributes {
    name: "_long_opt"
    fully_qualified_name: "click.parser.OptionParser._long_opt"
    type_annotation {
      pretty_printed_name: "builtins.dict[builtins.str,click.parser.Option]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "click.parser.Option"
        fully_qualified_name: "click.parser.Option"
      }
      fully_qualified_name: "builtins.dict"
    }
  }
  attributes {
    name: "_opt_prefixes"
    fully_qualified_name: "click.parser.OptionParser._opt_prefixes"
    type_annotation {
      pretty_printed_name: "builtins.set[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "builtins.set"
    }
  }
  attributes {
    name: "_args"
    fully_qualified_name: "click.parser.OptionParser._args"
    type_annotation {
      pretty_printed_name: "builtins.list[click.parser.Argument]"
      args {
        pretty_printed_name: "click.parser.Argument"
        fully_qualified_name: "click.parser.Argument"
      }
      fully_qualified_name: "builtins.list"
    }
  }
}
functions {
  name: "_"
  fully_qualified_name: "gettext.gettext"
  return_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
  parameters {
    name: "message"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
}
functions {
  name: "_unpack_args"
  fully_qualified_name: "click.parser._unpack_args"
  return_annotation {
    pretty_printed_name: "Tuple[typing.Sequence[Union[builtins.str,typing.Sequence[Union[builtins.str,None]],None]],builtins.list[builtins.str]]"
    kind: TUPLE
    args {
      pretty_printed_name: "typing.Sequence[Union[builtins.str,typing.Sequence[Union[builtins.str,None]],None]]"
      args {
        pretty_printed_name: "Union[builtins.str,typing.Sequence[Union[builtins.str,None]],None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "typing.Sequence[Union[builtins.str,None]]"
          args {
            pretty_printed_name: "Union[builtins.str,None]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "None"
              kind: NONE
            }
          }
          fully_qualified_name: "typing.Sequence"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      fully_qualified_name: "typing.Sequence"
    }
    args {
      pretty_printed_name: "builtins.list[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "builtins.list"
    }
  }
  parameters {
    name: "args"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "typing.Sequence[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "typing.Sequence"
    }
  }
  parameters {
    name: "nargs_spec"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "typing.Sequence[builtins.int]"
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      fully_qualified_name: "typing.Sequence"
    }
  }
}
functions {
  name: "split_opt"
  fully_qualified_name: "click.parser.split_opt"
  return_annotation {
    pretty_printed_name: "Tuple[builtins.str,builtins.str]"
    kind: TUPLE
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  parameters {
    name: "opt"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
}
functions {
  name: "normalize_opt"
  fully_qualified_name: "click.parser.normalize_opt"
  return_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
  parameters {
    name: "opt"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  parameters {
    name: "ctx"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[click.core.Context,None]"
      kind: UNION
      args {
        pretty_printed_name: "click.core.Context"
        fully_qualified_name: "click.core.Context"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
}
functions {
  name: "split_arg_string"
  fully_qualified_name: "click.parser.split_arg_string"
  return_annotation {
    pretty_printed_name: "builtins.list[builtins.str]"
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    fully_qualified_name: "builtins.list"
  }
  parameters {
    name: "string"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
}
vars {
  name: "__annotations__"
  fully_qualified_name: "click.parser.__annotations__"
  type_annotation {
    pretty_printed_name: "builtins.dict[builtins.str,Any]"
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    args {
      pretty_printed_name: "Any"
      kind: ANY
    }
    fully_qualified_name: "builtins.dict"
  }
}
vars {
  name: "t"
  fully_qualified_name: "typing"
  is_imported_module: true
}
vars {
  name: "te"
  fully_qualified_name: "typing_extensions"
  is_imported_module: true
}
vars {
  name: "_flag_needs_value"
  fully_qualified_name: "click.parser._flag_needs_value"
  type_annotation {
    pretty_printed_name: "builtins.object"
    fully_qualified_name: "builtins.object"
  }
}
