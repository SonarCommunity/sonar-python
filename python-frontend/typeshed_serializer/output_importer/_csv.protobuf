fully_qualified_name: "_csv"
classes {
  name: "Error"
  fully_qualified_name: "_csv.Error"
  super_classes: "builtins.Exception"
}
classes {
  name: "Dialect"
  fully_qualified_name: "_csv.Dialect"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "_csv.Dialect.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_csv.Dialect"
        fully_qualified_name: "_csv.Dialect"
      }
    }
  }
  attributes {
    name: "delimiter"
    fully_qualified_name: "_csv.Dialect.delimiter"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  attributes {
    name: "quotechar"
    fully_qualified_name: "_csv.Dialect.quotechar"
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  attributes {
    name: "escapechar"
    fully_qualified_name: "_csv.Dialect.escapechar"
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  attributes {
    name: "doublequote"
    fully_qualified_name: "_csv.Dialect.doublequote"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
  attributes {
    name: "skipinitialspace"
    fully_qualified_name: "_csv.Dialect.skipinitialspace"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
  attributes {
    name: "lineterminator"
    fully_qualified_name: "_csv.Dialect.lineterminator"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  attributes {
    name: "quoting"
    fully_qualified_name: "_csv.Dialect.quoting"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  attributes {
    name: "strict"
    fully_qualified_name: "_csv.Dialect.strict"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
}
classes {
  name: "_reader"
  fully_qualified_name: "_csv._reader"
  super_classes: "typing.Iterator"
  methods {
    name: "dialect"
    fully_qualified_name: "_csv._reader.dialect"
    return_annotation {
      pretty_printed_name: "_csv.Dialect"
      fully_qualified_name: "_csv.Dialect"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_csv._reader"
        fully_qualified_name: "_csv._reader"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "__next__"
    fully_qualified_name: "_csv._reader.__next__"
    return_annotation {
      pretty_printed_name: "builtins.list[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_csv._reader"
        fully_qualified_name: "_csv._reader"
      }
    }
  }
  attributes {
    name: "line_num"
    fully_qualified_name: "_csv._reader.line_num"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
}
classes {
  name: "_writer"
  fully_qualified_name: "_csv._writer"
  super_classes: "builtins.object"
  methods {
    name: "dialect"
    fully_qualified_name: "_csv._writer.dialect"
    return_annotation {
      pretty_printed_name: "_csv.Dialect"
      fully_qualified_name: "_csv.Dialect"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_csv._writer"
        fully_qualified_name: "_csv._writer"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "writerow"
    fully_qualified_name: "_csv._writer.writerow"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_csv._writer"
        fully_qualified_name: "_csv._writer"
      }
    }
    parameters {
      name: "row"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
  }
  methods {
    name: "writerows"
    fully_qualified_name: "_csv._writer.writerows"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_csv._writer"
        fully_qualified_name: "_csv._writer"
      }
    }
    parameters {
      name: "rows"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[typing.Iterable[Any]]"
        args {
          pretty_printed_name: "typing.Iterable[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "typing.Iterable"
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
  }
}
functions {
  name: "writer"
  fully_qualified_name: "_csv.writer"
  return_annotation {
    pretty_printed_name: "_csv._writer"
    fully_qualified_name: "_csv._writer"
  }
  parameters {
    name: "csvfile"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "_typeshed.SupportsWrite[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "_typeshed.SupportsWrite"
    }
  }
  parameters {
    name: "dialect"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,_csv.Dialect,Type[_csv.Dialect]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,_csv.Dialect,Type[_csv.Dialect]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "_csv.Dialect"
          fully_qualified_name: "_csv.Dialect"
        }
        args {
          pretty_printed_name: "Type[_csv.Dialect]"
          kind: TYPE
          args {
            pretty_printed_name: "_csv.Dialect"
            fully_qualified_name: "_csv.Dialect"
          }
        }
      }
      fully_qualified_name: "_csv._DialectLike"
    }
  }
  parameters {
    name: "delimiter"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  parameters {
    name: "quotechar"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  parameters {
    name: "escapechar"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  parameters {
    name: "doublequote"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
  parameters {
    name: "skipinitialspace"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
  parameters {
    name: "lineterminator"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  parameters {
    name: "quoting"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "strict"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
}
functions {
  name: "reader"
  fully_qualified_name: "_csv.reader"
  return_annotation {
    pretty_printed_name: "_csv._reader"
    fully_qualified_name: "_csv._reader"
  }
  parameters {
    name: "csvfile"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "typing.Iterable[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "typing.Iterable"
    }
  }
  parameters {
    name: "dialect"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,_csv.Dialect,Type[_csv.Dialect]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,_csv.Dialect,Type[_csv.Dialect]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "_csv.Dialect"
          fully_qualified_name: "_csv.Dialect"
        }
        args {
          pretty_printed_name: "Type[_csv.Dialect]"
          kind: TYPE
          args {
            pretty_printed_name: "_csv.Dialect"
            fully_qualified_name: "_csv.Dialect"
          }
        }
      }
      fully_qualified_name: "_csv._DialectLike"
    }
  }
  parameters {
    name: "delimiter"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  parameters {
    name: "quotechar"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  parameters {
    name: "escapechar"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  parameters {
    name: "doublequote"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
  parameters {
    name: "skipinitialspace"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
  parameters {
    name: "lineterminator"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  parameters {
    name: "quoting"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "strict"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
}
functions {
  name: "register_dialect"
  fully_qualified_name: "_csv.register_dialect"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "name"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  parameters {
    name: "dialect"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Type[_csv.Dialect]"
      kind: TYPE
      args {
        pretty_printed_name: "_csv.Dialect"
        fully_qualified_name: "_csv.Dialect"
      }
    }
  }
  parameters {
    name: "delimiter"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  parameters {
    name: "quotechar"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  parameters {
    name: "escapechar"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  parameters {
    name: "doublequote"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
  parameters {
    name: "skipinitialspace"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
  parameters {
    name: "lineterminator"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  parameters {
    name: "quoting"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "strict"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
}
functions {
  name: "unregister_dialect"
  fully_qualified_name: "_csv.unregister_dialect"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "name"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
}
functions {
  name: "get_dialect"
  fully_qualified_name: "_csv.get_dialect"
  return_annotation {
    pretty_printed_name: "_csv.Dialect"
    fully_qualified_name: "_csv.Dialect"
  }
  parameters {
    name: "name"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
}
functions {
  name: "list_dialects"
  fully_qualified_name: "_csv.list_dialects"
  return_annotation {
    pretty_printed_name: "builtins.list[builtins.str]"
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    fully_qualified_name: "builtins.list"
  }
}
functions {
  name: "field_size_limit"
  fully_qualified_name: "_csv.field_size_limit"
  return_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
  parameters {
    name: "new_limit"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
}
vars {
  name: "__annotations__"
  fully_qualified_name: "_csv.__annotations__"
  type_annotation {
    pretty_printed_name: "builtins.dict[builtins.str,Any]"
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    args {
      pretty_printed_name: "Any"
      kind: ANY
    }
    fully_qualified_name: "builtins.dict"
  }
}
vars {
  name: "__version__"
  fully_qualified_name: "_csv.__version__"
  type_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
}
vars {
  name: "QUOTE_ALL"
  fully_qualified_name: "_csv.QUOTE_ALL"
  type_annotation {
    pretty_printed_name: "Literal[builtins.int]"
    kind: LITERAL
    args {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
}
vars {
  name: "QUOTE_MINIMAL"
  fully_qualified_name: "_csv.QUOTE_MINIMAL"
  type_annotation {
    pretty_printed_name: "Literal[builtins.int]"
    kind: LITERAL
    args {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
}
vars {
  name: "QUOTE_NONE"
  fully_qualified_name: "_csv.QUOTE_NONE"
  type_annotation {
    pretty_printed_name: "Literal[builtins.int]"
    kind: LITERAL
    args {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
}
vars {
  name: "QUOTE_NONNUMERIC"
  fully_qualified_name: "_csv.QUOTE_NONNUMERIC"
  type_annotation {
    pretty_printed_name: "Literal[builtins.int]"
    kind: LITERAL
    args {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
}
