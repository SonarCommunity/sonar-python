fully_qualified_name: "fractions"
classes {
  name: "Fraction"
  fully_qualified_name: "fractions.Fraction"
  super_classes: "numbers.Rational"
  methods {
    name: "from_float"
    fully_qualified_name: "fractions.Fraction.from_float"
    return_annotation {
      pretty_printed_name: "fractions.Fraction.Self"
      kind: TYPE_VAR
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[fractions.Fraction.Self]"
        kind: TYPE
        args {
          pretty_printed_name: "fractions.Fraction.Self"
          kind: TYPE_VAR
        }
      }
    }
    parameters {
      name: "f"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
    }
    has_decorators: true
    resolved_decorator_names: "classmethod"
    is_class_method: true
  }
  methods {
    name: "from_decimal"
    fully_qualified_name: "fractions.Fraction.from_decimal"
    return_annotation {
      pretty_printed_name: "fractions.Fraction.Self"
      kind: TYPE_VAR
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[fractions.Fraction.Self]"
        kind: TYPE
        args {
          pretty_printed_name: "fractions.Fraction.Self"
          kind: TYPE_VAR
        }
      }
    }
    parameters {
      name: "dec"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_decimal.Decimal"
        fully_qualified_name: "_decimal.Decimal"
      }
    }
    has_decorators: true
    resolved_decorator_names: "classmethod"
    is_class_method: true
  }
  methods {
    name: "limit_denominator"
    fully_qualified_name: "fractions.Fraction.limit_denominator"
    return_annotation {
      pretty_printed_name: "fractions.Fraction"
      fully_qualified_name: "fractions.Fraction"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "fractions.Fraction"
        fully_qualified_name: "fractions.Fraction"
      }
    }
    parameters {
      name: "max_denominator"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
  }
  methods {
    name: "as_integer_ratio"
    fully_qualified_name: "fractions.Fraction.as_integer_ratio"
    return_annotation {
      pretty_printed_name: "Tuple[builtins.int,builtins.int]"
      kind: TUPLE
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "fractions.Fraction"
        fully_qualified_name: "fractions.Fraction"
      }
    }
  }
  methods {
    name: "numerator"
    fully_qualified_name: "fractions.Fraction.numerator"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "a"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "fractions.Fraction"
        fully_qualified_name: "fractions.Fraction"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "denominator"
    fully_qualified_name: "fractions.Fraction.denominator"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "a"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "fractions.Fraction"
        fully_qualified_name: "fractions.Fraction"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "__pos__"
    fully_qualified_name: "fractions.Fraction.__pos__"
    return_annotation {
      pretty_printed_name: "fractions.Fraction"
      fully_qualified_name: "fractions.Fraction"
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "fractions.Fraction"
        fully_qualified_name: "fractions.Fraction"
      }
    }
  }
  methods {
    name: "__neg__"
    fully_qualified_name: "fractions.Fraction.__neg__"
    return_annotation {
      pretty_printed_name: "fractions.Fraction"
      fully_qualified_name: "fractions.Fraction"
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "fractions.Fraction"
        fully_qualified_name: "fractions.Fraction"
      }
    }
  }
  methods {
    name: "__abs__"
    fully_qualified_name: "fractions.Fraction.__abs__"
    return_annotation {
      pretty_printed_name: "fractions.Fraction"
      fully_qualified_name: "fractions.Fraction"
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "fractions.Fraction"
        fully_qualified_name: "fractions.Fraction"
      }
    }
  }
  methods {
    name: "__trunc__"
    fully_qualified_name: "fractions.Fraction.__trunc__"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "a"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "fractions.Fraction"
        fully_qualified_name: "fractions.Fraction"
      }
    }
  }
  methods {
    name: "__floor__"
    fully_qualified_name: "fractions.Fraction.__floor__"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "a"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "fractions.Fraction"
        fully_qualified_name: "fractions.Fraction"
      }
    }
  }
  methods {
    name: "__ceil__"
    fully_qualified_name: "fractions.Fraction.__ceil__"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "a"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "fractions.Fraction"
        fully_qualified_name: "fractions.Fraction"
      }
    }
  }
  methods {
    name: "__hash__"
    fully_qualified_name: "fractions.Fraction.__hash__"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "fractions.Fraction"
        fully_qualified_name: "fractions.Fraction"
      }
    }
  }
  methods {
    name: "__eq__"
    fully_qualified_name: "fractions.Fraction.__eq__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "fractions.Fraction"
        fully_qualified_name: "fractions.Fraction"
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
  }
  methods {
    name: "__lt__"
    fully_qualified_name: "fractions.Fraction.__lt__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "fractions.Fraction"
        fully_qualified_name: "fractions.Fraction"
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.int,builtins.float,_decimal.Decimal,numbers.Real]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.int,builtins.float,_decimal.Decimal,numbers.Real]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "_decimal.Decimal"
            fully_qualified_name: "_decimal.Decimal"
          }
          args {
            pretty_printed_name: "numbers.Real"
            fully_qualified_name: "numbers.Real"
          }
        }
        fully_qualified_name: "fractions._ComparableNum"
      }
    }
  }
  methods {
    name: "__gt__"
    fully_qualified_name: "fractions.Fraction.__gt__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "fractions.Fraction"
        fully_qualified_name: "fractions.Fraction"
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.int,builtins.float,_decimal.Decimal,numbers.Real]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.int,builtins.float,_decimal.Decimal,numbers.Real]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "_decimal.Decimal"
            fully_qualified_name: "_decimal.Decimal"
          }
          args {
            pretty_printed_name: "numbers.Real"
            fully_qualified_name: "numbers.Real"
          }
        }
        fully_qualified_name: "fractions._ComparableNum"
      }
    }
  }
  methods {
    name: "__le__"
    fully_qualified_name: "fractions.Fraction.__le__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "fractions.Fraction"
        fully_qualified_name: "fractions.Fraction"
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.int,builtins.float,_decimal.Decimal,numbers.Real]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.int,builtins.float,_decimal.Decimal,numbers.Real]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "_decimal.Decimal"
            fully_qualified_name: "_decimal.Decimal"
          }
          args {
            pretty_printed_name: "numbers.Real"
            fully_qualified_name: "numbers.Real"
          }
        }
        fully_qualified_name: "fractions._ComparableNum"
      }
    }
  }
  methods {
    name: "__ge__"
    fully_qualified_name: "fractions.Fraction.__ge__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "fractions.Fraction"
        fully_qualified_name: "fractions.Fraction"
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.int,builtins.float,_decimal.Decimal,numbers.Real]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.int,builtins.float,_decimal.Decimal,numbers.Real]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "_decimal.Decimal"
            fully_qualified_name: "_decimal.Decimal"
          }
          args {
            pretty_printed_name: "numbers.Real"
            fully_qualified_name: "numbers.Real"
          }
        }
        fully_qualified_name: "fractions._ComparableNum"
      }
    }
  }
  methods {
    name: "__bool__"
    fully_qualified_name: "fractions.Fraction.__bool__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "a"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "fractions.Fraction"
        fully_qualified_name: "fractions.Fraction"
      }
    }
  }
  methods {
    name: "__copy__"
    fully_qualified_name: "fractions.Fraction.__copy__"
    return_annotation {
      pretty_printed_name: "fractions.Fraction.Self"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "fractions.Fraction.Self"
        kind: TYPE_VAR
      }
    }
  }
  methods {
    name: "__deepcopy__"
    fully_qualified_name: "fractions.Fraction.__deepcopy__"
    return_annotation {
      pretty_printed_name: "fractions.Fraction.Self"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "fractions.Fraction.Self"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "memo"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
  }
  methods {
    name: "real"
    fully_qualified_name: "fractions.Fraction.real"
    return_annotation {
      pretty_printed_name: "fractions.Fraction"
      fully_qualified_name: "fractions.Fraction"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "fractions.Fraction"
        fully_qualified_name: "fractions.Fraction"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "imag"
    fully_qualified_name: "fractions.Fraction.imag"
    return_annotation {
      pretty_printed_name: "Literal[builtins.int]"
      kind: LITERAL
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "fractions.Fraction"
        fully_qualified_name: "fractions.Fraction"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "conjugate"
    fully_qualified_name: "fractions.Fraction.conjugate"
    return_annotation {
      pretty_printed_name: "fractions.Fraction"
      fully_qualified_name: "fractions.Fraction"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "fractions.Fraction"
        fully_qualified_name: "fractions.Fraction"
      }
    }
  }
  overloaded_methods {
    name: "__new__"
    fullname: "fractions.Fraction.__new__"
    definitions {
      name: "__new__"
      fully_qualified_name: "fractions.Fraction.__new__"
      return_annotation {
        pretty_printed_name: "fractions.Fraction.Self"
        kind: TYPE_VAR
      }
      parameters {
        name: "cls"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Type[fractions.Fraction.Self]"
          kind: TYPE
          args {
            pretty_printed_name: "fractions.Fraction.Self"
            kind: TYPE_VAR
          }
        }
      }
      parameters {
        name: "numerator"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.int,numbers.Rational]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "numbers.Rational"
            fully_qualified_name: "numbers.Rational"
          }
        }
      }
      parameters {
        name: "denominator"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.int,numbers.Rational,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "numbers.Rational"
            fully_qualified_name: "numbers.Rational"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      parameters {
        name: "_normalize"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__new__"
      fully_qualified_name: "fractions.Fraction.__new__"
      return_annotation {
        pretty_printed_name: "fractions.Fraction.Self"
        kind: TYPE_VAR
      }
      parameters {
        name: "cls"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Type[fractions.Fraction.Self]"
          kind: TYPE
          args {
            pretty_printed_name: "fractions.Fraction.Self"
            kind: TYPE_VAR
          }
        }
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "Union[builtins.float,_decimal.Decimal,builtins.str]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "_decimal.Decimal"
            fully_qualified_name: "_decimal.Decimal"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
        }
      }
      parameters {
        name: "_normalize"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
  }
  overloaded_methods {
    name: "__add__"
    fullname: "fractions.Fraction.__add__"
    definitions {
      name: "__add__"
      fully_qualified_name: "fractions.Fraction.__add__"
      return_annotation {
        pretty_printed_name: "fractions.Fraction"
        fully_qualified_name: "fractions.Fraction"
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "fractions.Fraction"
          fully_qualified_name: "fractions.Fraction"
        }
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "Union[builtins.int,fractions.Fraction]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "fractions.Fraction"
            fully_qualified_name: "fractions.Fraction"
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__add__"
      fully_qualified_name: "fractions.Fraction.__add__"
      return_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "fractions.Fraction"
          fully_qualified_name: "fractions.Fraction"
        }
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__add__"
      fully_qualified_name: "fractions.Fraction.__add__"
      return_annotation {
        pretty_printed_name: "builtins.complex"
        fully_qualified_name: "builtins.complex"
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "fractions.Fraction"
          fully_qualified_name: "fractions.Fraction"
        }
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "builtins.complex"
          fully_qualified_name: "builtins.complex"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
  }
  overloaded_methods {
    name: "__radd__"
    fullname: "fractions.Fraction.__radd__"
    definitions {
      name: "__radd__"
      fully_qualified_name: "fractions.Fraction.__radd__"
      return_annotation {
        pretty_printed_name: "fractions.Fraction"
        fully_qualified_name: "fractions.Fraction"
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "fractions.Fraction"
          fully_qualified_name: "fractions.Fraction"
        }
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "Union[builtins.int,fractions.Fraction]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "fractions.Fraction"
            fully_qualified_name: "fractions.Fraction"
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__radd__"
      fully_qualified_name: "fractions.Fraction.__radd__"
      return_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "fractions.Fraction"
          fully_qualified_name: "fractions.Fraction"
        }
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__radd__"
      fully_qualified_name: "fractions.Fraction.__radd__"
      return_annotation {
        pretty_printed_name: "builtins.complex"
        fully_qualified_name: "builtins.complex"
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "fractions.Fraction"
          fully_qualified_name: "fractions.Fraction"
        }
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "builtins.complex"
          fully_qualified_name: "builtins.complex"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
  }
  overloaded_methods {
    name: "__sub__"
    fullname: "fractions.Fraction.__sub__"
    definitions {
      name: "__sub__"
      fully_qualified_name: "fractions.Fraction.__sub__"
      return_annotation {
        pretty_printed_name: "fractions.Fraction"
        fully_qualified_name: "fractions.Fraction"
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "fractions.Fraction"
          fully_qualified_name: "fractions.Fraction"
        }
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "Union[builtins.int,fractions.Fraction]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "fractions.Fraction"
            fully_qualified_name: "fractions.Fraction"
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__sub__"
      fully_qualified_name: "fractions.Fraction.__sub__"
      return_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "fractions.Fraction"
          fully_qualified_name: "fractions.Fraction"
        }
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__sub__"
      fully_qualified_name: "fractions.Fraction.__sub__"
      return_annotation {
        pretty_printed_name: "builtins.complex"
        fully_qualified_name: "builtins.complex"
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "fractions.Fraction"
          fully_qualified_name: "fractions.Fraction"
        }
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "builtins.complex"
          fully_qualified_name: "builtins.complex"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
  }
  overloaded_methods {
    name: "__rsub__"
    fullname: "fractions.Fraction.__rsub__"
    definitions {
      name: "__rsub__"
      fully_qualified_name: "fractions.Fraction.__rsub__"
      return_annotation {
        pretty_printed_name: "fractions.Fraction"
        fully_qualified_name: "fractions.Fraction"
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "fractions.Fraction"
          fully_qualified_name: "fractions.Fraction"
        }
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "Union[builtins.int,fractions.Fraction]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "fractions.Fraction"
            fully_qualified_name: "fractions.Fraction"
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__rsub__"
      fully_qualified_name: "fractions.Fraction.__rsub__"
      return_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "fractions.Fraction"
          fully_qualified_name: "fractions.Fraction"
        }
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__rsub__"
      fully_qualified_name: "fractions.Fraction.__rsub__"
      return_annotation {
        pretty_printed_name: "builtins.complex"
        fully_qualified_name: "builtins.complex"
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "fractions.Fraction"
          fully_qualified_name: "fractions.Fraction"
        }
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "builtins.complex"
          fully_qualified_name: "builtins.complex"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
  }
  overloaded_methods {
    name: "__mul__"
    fullname: "fractions.Fraction.__mul__"
    definitions {
      name: "__mul__"
      fully_qualified_name: "fractions.Fraction.__mul__"
      return_annotation {
        pretty_printed_name: "fractions.Fraction"
        fully_qualified_name: "fractions.Fraction"
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "fractions.Fraction"
          fully_qualified_name: "fractions.Fraction"
        }
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "Union[builtins.int,fractions.Fraction]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "fractions.Fraction"
            fully_qualified_name: "fractions.Fraction"
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__mul__"
      fully_qualified_name: "fractions.Fraction.__mul__"
      return_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "fractions.Fraction"
          fully_qualified_name: "fractions.Fraction"
        }
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__mul__"
      fully_qualified_name: "fractions.Fraction.__mul__"
      return_annotation {
        pretty_printed_name: "builtins.complex"
        fully_qualified_name: "builtins.complex"
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "fractions.Fraction"
          fully_qualified_name: "fractions.Fraction"
        }
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "builtins.complex"
          fully_qualified_name: "builtins.complex"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
  }
  overloaded_methods {
    name: "__rmul__"
    fullname: "fractions.Fraction.__rmul__"
    definitions {
      name: "__rmul__"
      fully_qualified_name: "fractions.Fraction.__rmul__"
      return_annotation {
        pretty_printed_name: "fractions.Fraction"
        fully_qualified_name: "fractions.Fraction"
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "fractions.Fraction"
          fully_qualified_name: "fractions.Fraction"
        }
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "Union[builtins.int,fractions.Fraction]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "fractions.Fraction"
            fully_qualified_name: "fractions.Fraction"
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__rmul__"
      fully_qualified_name: "fractions.Fraction.__rmul__"
      return_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "fractions.Fraction"
          fully_qualified_name: "fractions.Fraction"
        }
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__rmul__"
      fully_qualified_name: "fractions.Fraction.__rmul__"
      return_annotation {
        pretty_printed_name: "builtins.complex"
        fully_qualified_name: "builtins.complex"
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "fractions.Fraction"
          fully_qualified_name: "fractions.Fraction"
        }
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "builtins.complex"
          fully_qualified_name: "builtins.complex"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
  }
  overloaded_methods {
    name: "__truediv__"
    fullname: "fractions.Fraction.__truediv__"
    definitions {
      name: "__truediv__"
      fully_qualified_name: "fractions.Fraction.__truediv__"
      return_annotation {
        pretty_printed_name: "fractions.Fraction"
        fully_qualified_name: "fractions.Fraction"
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "fractions.Fraction"
          fully_qualified_name: "fractions.Fraction"
        }
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "Union[builtins.int,fractions.Fraction]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "fractions.Fraction"
            fully_qualified_name: "fractions.Fraction"
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__truediv__"
      fully_qualified_name: "fractions.Fraction.__truediv__"
      return_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "fractions.Fraction"
          fully_qualified_name: "fractions.Fraction"
        }
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__truediv__"
      fully_qualified_name: "fractions.Fraction.__truediv__"
      return_annotation {
        pretty_printed_name: "builtins.complex"
        fully_qualified_name: "builtins.complex"
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "fractions.Fraction"
          fully_qualified_name: "fractions.Fraction"
        }
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "builtins.complex"
          fully_qualified_name: "builtins.complex"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
  }
  overloaded_methods {
    name: "__rtruediv__"
    fullname: "fractions.Fraction.__rtruediv__"
    definitions {
      name: "__rtruediv__"
      fully_qualified_name: "fractions.Fraction.__rtruediv__"
      return_annotation {
        pretty_printed_name: "fractions.Fraction"
        fully_qualified_name: "fractions.Fraction"
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "fractions.Fraction"
          fully_qualified_name: "fractions.Fraction"
        }
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "Union[builtins.int,fractions.Fraction]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "fractions.Fraction"
            fully_qualified_name: "fractions.Fraction"
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__rtruediv__"
      fully_qualified_name: "fractions.Fraction.__rtruediv__"
      return_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "fractions.Fraction"
          fully_qualified_name: "fractions.Fraction"
        }
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__rtruediv__"
      fully_qualified_name: "fractions.Fraction.__rtruediv__"
      return_annotation {
        pretty_printed_name: "builtins.complex"
        fully_qualified_name: "builtins.complex"
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "fractions.Fraction"
          fully_qualified_name: "fractions.Fraction"
        }
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "builtins.complex"
          fully_qualified_name: "builtins.complex"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
  }
  overloaded_methods {
    name: "__floordiv__"
    fullname: "fractions.Fraction.__floordiv__"
    definitions {
      name: "__floordiv__"
      fully_qualified_name: "fractions.Fraction.__floordiv__"
      return_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "fractions.Fraction"
          fully_qualified_name: "fractions.Fraction"
        }
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "Union[builtins.int,fractions.Fraction]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "fractions.Fraction"
            fully_qualified_name: "fractions.Fraction"
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__floordiv__"
      fully_qualified_name: "fractions.Fraction.__floordiv__"
      return_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "fractions.Fraction"
          fully_qualified_name: "fractions.Fraction"
        }
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
  }
  overloaded_methods {
    name: "__rfloordiv__"
    fullname: "fractions.Fraction.__rfloordiv__"
    definitions {
      name: "__rfloordiv__"
      fully_qualified_name: "fractions.Fraction.__rfloordiv__"
      return_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "fractions.Fraction"
          fully_qualified_name: "fractions.Fraction"
        }
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "Union[builtins.int,fractions.Fraction]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "fractions.Fraction"
            fully_qualified_name: "fractions.Fraction"
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__rfloordiv__"
      fully_qualified_name: "fractions.Fraction.__rfloordiv__"
      return_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "fractions.Fraction"
          fully_qualified_name: "fractions.Fraction"
        }
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
  }
  overloaded_methods {
    name: "__mod__"
    fullname: "fractions.Fraction.__mod__"
    definitions {
      name: "__mod__"
      fully_qualified_name: "fractions.Fraction.__mod__"
      return_annotation {
        pretty_printed_name: "fractions.Fraction"
        fully_qualified_name: "fractions.Fraction"
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "fractions.Fraction"
          fully_qualified_name: "fractions.Fraction"
        }
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "Union[builtins.int,fractions.Fraction]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "fractions.Fraction"
            fully_qualified_name: "fractions.Fraction"
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__mod__"
      fully_qualified_name: "fractions.Fraction.__mod__"
      return_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "fractions.Fraction"
          fully_qualified_name: "fractions.Fraction"
        }
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
  }
  overloaded_methods {
    name: "__rmod__"
    fullname: "fractions.Fraction.__rmod__"
    definitions {
      name: "__rmod__"
      fully_qualified_name: "fractions.Fraction.__rmod__"
      return_annotation {
        pretty_printed_name: "fractions.Fraction"
        fully_qualified_name: "fractions.Fraction"
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "fractions.Fraction"
          fully_qualified_name: "fractions.Fraction"
        }
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "Union[builtins.int,fractions.Fraction]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "fractions.Fraction"
            fully_qualified_name: "fractions.Fraction"
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__rmod__"
      fully_qualified_name: "fractions.Fraction.__rmod__"
      return_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "fractions.Fraction"
          fully_qualified_name: "fractions.Fraction"
        }
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
  }
  overloaded_methods {
    name: "__divmod__"
    fullname: "fractions.Fraction.__divmod__"
    definitions {
      name: "__divmod__"
      fully_qualified_name: "fractions.Fraction.__divmod__"
      return_annotation {
        pretty_printed_name: "Tuple[builtins.int,fractions.Fraction]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "fractions.Fraction"
          fully_qualified_name: "fractions.Fraction"
        }
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "fractions.Fraction"
          fully_qualified_name: "fractions.Fraction"
        }
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "Union[builtins.int,fractions.Fraction]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "fractions.Fraction"
            fully_qualified_name: "fractions.Fraction"
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__divmod__"
      fully_qualified_name: "fractions.Fraction.__divmod__"
      return_annotation {
        pretty_printed_name: "Tuple[builtins.float,fractions.Fraction]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        args {
          pretty_printed_name: "fractions.Fraction"
          fully_qualified_name: "fractions.Fraction"
        }
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "fractions.Fraction"
          fully_qualified_name: "fractions.Fraction"
        }
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
  }
  overloaded_methods {
    name: "__rdivmod__"
    fullname: "fractions.Fraction.__rdivmod__"
    definitions {
      name: "__rdivmod__"
      fully_qualified_name: "fractions.Fraction.__rdivmod__"
      return_annotation {
        pretty_printed_name: "Tuple[builtins.int,fractions.Fraction]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "fractions.Fraction"
          fully_qualified_name: "fractions.Fraction"
        }
      }
      parameters {
        name: "a"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "fractions.Fraction"
          fully_qualified_name: "fractions.Fraction"
        }
      }
      parameters {
        name: "b"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.int,fractions.Fraction]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "fractions.Fraction"
            fully_qualified_name: "fractions.Fraction"
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__rdivmod__"
      fully_qualified_name: "fractions.Fraction.__rdivmod__"
      return_annotation {
        pretty_printed_name: "Tuple[builtins.float,fractions.Fraction]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        args {
          pretty_printed_name: "fractions.Fraction"
          fully_qualified_name: "fractions.Fraction"
        }
      }
      parameters {
        name: "a"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "fractions.Fraction"
          fully_qualified_name: "fractions.Fraction"
        }
      }
      parameters {
        name: "b"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
  }
  overloaded_methods {
    name: "__pow__"
    fullname: "fractions.Fraction.__pow__"
    definitions {
      name: "__pow__"
      fully_qualified_name: "fractions.Fraction.__pow__"
      return_annotation {
        pretty_printed_name: "fractions.Fraction"
        fully_qualified_name: "fractions.Fraction"
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "fractions.Fraction"
          fully_qualified_name: "fractions.Fraction"
        }
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__pow__"
      fully_qualified_name: "fractions.Fraction.__pow__"
      return_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "fractions.Fraction"
          fully_qualified_name: "fractions.Fraction"
        }
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "Union[builtins.float,fractions.Fraction]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "fractions.Fraction"
            fully_qualified_name: "fractions.Fraction"
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__pow__"
      fully_qualified_name: "fractions.Fraction.__pow__"
      return_annotation {
        pretty_printed_name: "builtins.complex"
        fully_qualified_name: "builtins.complex"
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "fractions.Fraction"
          fully_qualified_name: "fractions.Fraction"
        }
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "builtins.complex"
          fully_qualified_name: "builtins.complex"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
  }
  overloaded_methods {
    name: "__rpow__"
    fullname: "fractions.Fraction.__rpow__"
    definitions {
      name: "__rpow__"
      fully_qualified_name: "fractions.Fraction.__rpow__"
      return_annotation {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "fractions.Fraction"
          fully_qualified_name: "fractions.Fraction"
        }
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "Union[builtins.float,fractions.Fraction]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.float"
            fully_qualified_name: "builtins.float"
          }
          args {
            pretty_printed_name: "fractions.Fraction"
            fully_qualified_name: "fractions.Fraction"
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__rpow__"
      fully_qualified_name: "fractions.Fraction.__rpow__"
      return_annotation {
        pretty_printed_name: "builtins.complex"
        fully_qualified_name: "builtins.complex"
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "fractions.Fraction"
          fully_qualified_name: "fractions.Fraction"
        }
      }
      parameters {
        name: "__"
        type_annotation {
          pretty_printed_name: "builtins.complex"
          fully_qualified_name: "builtins.complex"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
  }
  overloaded_methods {
    name: "__round__"
    fullname: "fractions.Fraction.__round__"
    definitions {
      name: "__round__"
      fully_qualified_name: "fractions.Fraction.__round__"
      return_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "fractions.Fraction"
          fully_qualified_name: "fractions.Fraction"
        }
      }
      parameters {
        name: "ndigits"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__round__"
      fully_qualified_name: "fractions.Fraction.__round__"
      return_annotation {
        pretty_printed_name: "fractions.Fraction"
        fully_qualified_name: "fractions.Fraction"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "fractions.Fraction"
          fully_qualified_name: "fractions.Fraction"
        }
      }
      parameters {
        name: "ndigits"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
  }
}
overloaded_functions {
  name: "gcd"
  fullname: "fractions.gcd"
  definitions {
    name: "gcd"
    fully_qualified_name: "fractions.gcd"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "a"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "b"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "gcd"
    fully_qualified_name: "fractions.gcd"
    return_annotation {
      pretty_printed_name: "numbers.Integral"
      fully_qualified_name: "numbers.Integral"
    }
    parameters {
      name: "a"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "numbers.Integral"
        fully_qualified_name: "numbers.Integral"
      }
    }
    parameters {
      name: "b"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "gcd"
    fully_qualified_name: "fractions.gcd"
    return_annotation {
      pretty_printed_name: "numbers.Integral"
      fully_qualified_name: "numbers.Integral"
    }
    parameters {
      name: "a"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "b"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "numbers.Integral"
        fully_qualified_name: "numbers.Integral"
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "gcd"
    fully_qualified_name: "fractions.gcd"
    return_annotation {
      pretty_printed_name: "numbers.Integral"
      fully_qualified_name: "numbers.Integral"
    }
    parameters {
      name: "a"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "numbers.Integral"
        fully_qualified_name: "numbers.Integral"
      }
    }
    parameters {
      name: "b"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "numbers.Integral"
        fully_qualified_name: "numbers.Integral"
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
}
vars {
  name: "__annotations__"
  fully_qualified_name: "fractions.__annotations__"
  type_annotation {
    pretty_printed_name: "builtins.dict[builtins.str,Any]"
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    args {
      pretty_printed_name: "Any"
      kind: ANY
    }
    fully_qualified_name: "builtins.dict"
  }
}
vars {
  name: "__all__"
  fully_qualified_name: "fractions.__all__"
  type_annotation {
    pretty_printed_name: "builtins.list[builtins.str]"
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    fully_qualified_name: "builtins.list"
  }
}
