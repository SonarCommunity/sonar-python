fully_qualified_name: "os"
classes {
  name: "_TextIOWrapper"
  fully_qualified_name: "io.TextIOWrapper"
  super_classes: "io.TextIOBase"
  super_classes: "typing.TextIO"
  methods {
    name: "__init__"
    fully_qualified_name: "io.TextIOWrapper.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "io.TextIOWrapper"
        fully_qualified_name: "io.TextIOWrapper"
      }
    }
    parameters {
      name: "buffer"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.IO[builtins.bytes]"
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        fully_qualified_name: "typing.IO"
      }
    }
    parameters {
      name: "encoding"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "errors"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "newline"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "line_buffering"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    parameters {
      name: "write_through"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
  }
  methods {
    name: "buffer"
    fully_qualified_name: "io.TextIOWrapper.buffer"
    return_annotation {
      pretty_printed_name: "typing.BinaryIO"
      fully_qualified_name: "typing.BinaryIO"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "io.TextIOWrapper"
        fully_qualified_name: "io.TextIOWrapper"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "closed"
    fully_qualified_name: "io.TextIOWrapper.closed"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "io.TextIOWrapper"
        fully_qualified_name: "io.TextIOWrapper"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "line_buffering"
    fully_qualified_name: "io.TextIOWrapper.line_buffering"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "io.TextIOWrapper"
        fully_qualified_name: "io.TextIOWrapper"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "write_through"
    fully_qualified_name: "io.TextIOWrapper.write_through"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "io.TextIOWrapper"
        fully_qualified_name: "io.TextIOWrapper"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "reconfigure"
    fully_qualified_name: "io.TextIOWrapper.reconfigure"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "io.TextIOWrapper"
        fully_qualified_name: "io.TextIOWrapper"
      }
    }
    parameters {
      name: "encoding"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "errors"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "newline"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "line_buffering"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.bool,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "write_through"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.bool,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "__enter__"
    fully_qualified_name: "io.TextIOWrapper.__enter__"
    return_annotation {
      pretty_printed_name: "io.TextIOWrapper.Self"
      kind: TYPE_VAR
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "io.TextIOWrapper.Self"
        kind: TYPE_VAR
      }
    }
  }
  methods {
    name: "__iter__"
    fully_qualified_name: "io.TextIOWrapper.__iter__"
    return_annotation {
      pretty_printed_name: "typing.Iterator[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "io.TextIOWrapper"
        fully_qualified_name: "io.TextIOWrapper"
      }
    }
  }
  methods {
    name: "__next__"
    fully_qualified_name: "io.TextIOWrapper.__next__"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "io.TextIOWrapper"
        fully_qualified_name: "io.TextIOWrapper"
      }
    }
  }
  methods {
    name: "writelines"
    fully_qualified_name: "io.TextIOWrapper.writelines"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "io.TextIOWrapper"
        fully_qualified_name: "io.TextIOWrapper"
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "typing.Iterable[builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
  }
  methods {
    name: "readline"
    fully_qualified_name: "io.TextIOWrapper.readline"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "io.TextIOWrapper"
        fully_qualified_name: "io.TextIOWrapper"
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
  }
  methods {
    name: "readlines"
    fully_qualified_name: "io.TextIOWrapper.readlines"
    return_annotation {
      pretty_printed_name: "builtins.list[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "io.TextIOWrapper"
        fully_qualified_name: "io.TextIOWrapper"
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
  }
  methods {
    name: "seek"
    fully_qualified_name: "io.TextIOWrapper.seek"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "io.TextIOWrapper"
        fully_qualified_name: "io.TextIOWrapper"
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
  }
}
classes {
  name: "_Environ"
  fully_qualified_name: "os._Environ"
  super_classes: "typing.MutableMapping"
  methods {
    name: "__init__"
    fully_qualified_name: "os._Environ.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "os._Environ[typing.AnyStr]"
        args {
          pretty_printed_name: "typing.AnyStr"
          kind: TYPE_VAR
        }
        fully_qualified_name: "os._Environ"
      }
    }
    parameters {
      name: "data"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.MutableMapping[typing.AnyStr,typing.AnyStr]"
        args {
          pretty_printed_name: "typing.AnyStr"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "typing.AnyStr"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.MutableMapping"
      }
    }
    parameters {
      name: "encodekey"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[CallableType[builtins.function]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
        fully_qualified_name: "os._EnvironCodeFunc"
      }
    }
    parameters {
      name: "decodekey"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[CallableType[builtins.function]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
        fully_qualified_name: "os._EnvironCodeFunc"
      }
    }
    parameters {
      name: "encodevalue"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[CallableType[builtins.function]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
        fully_qualified_name: "os._EnvironCodeFunc"
      }
    }
    parameters {
      name: "decodevalue"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[CallableType[builtins.function]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
        fully_qualified_name: "os._EnvironCodeFunc"
      }
    }
    parameters {
      name: "putenv"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    parameters {
      name: "unsetenv"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
  }
  methods {
    name: "setdefault"
    fully_qualified_name: "os._Environ.setdefault"
    return_annotation {
      pretty_printed_name: "typing.AnyStr"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "os._Environ[typing.AnyStr]"
        args {
          pretty_printed_name: "typing.AnyStr"
          kind: TYPE_VAR
        }
        fully_qualified_name: "os._Environ"
      }
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.AnyStr"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.AnyStr"
        kind: TYPE_VAR
      }
    }
  }
  methods {
    name: "copy"
    fully_qualified_name: "os._Environ.copy"
    return_annotation {
      pretty_printed_name: "builtins.dict[typing.AnyStr,typing.AnyStr]"
      args {
        pretty_printed_name: "typing.AnyStr"
        kind: TYPE_VAR
      }
      args {
        pretty_printed_name: "typing.AnyStr"
        kind: TYPE_VAR
      }
      fully_qualified_name: "builtins.dict"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "os._Environ[typing.AnyStr]"
        args {
          pretty_printed_name: "typing.AnyStr"
          kind: TYPE_VAR
        }
        fully_qualified_name: "os._Environ"
      }
    }
  }
  methods {
    name: "__delitem__"
    fully_qualified_name: "os._Environ.__delitem__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "os._Environ[typing.AnyStr]"
        args {
          pretty_printed_name: "typing.AnyStr"
          kind: TYPE_VAR
        }
        fully_qualified_name: "os._Environ"
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "typing.AnyStr"
        kind: TYPE_VAR
      }
    }
  }
  methods {
    name: "__getitem__"
    fully_qualified_name: "os._Environ.__getitem__"
    return_annotation {
      pretty_printed_name: "typing.AnyStr"
      kind: TYPE_VAR
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "os._Environ[typing.AnyStr]"
        args {
          pretty_printed_name: "typing.AnyStr"
          kind: TYPE_VAR
        }
        fully_qualified_name: "os._Environ"
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "typing.AnyStr"
        kind: TYPE_VAR
      }
    }
  }
  methods {
    name: "__setitem__"
    fully_qualified_name: "os._Environ.__setitem__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "os._Environ[typing.AnyStr]"
        args {
          pretty_printed_name: "typing.AnyStr"
          kind: TYPE_VAR
        }
        fully_qualified_name: "os._Environ"
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "typing.AnyStr"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "typing.AnyStr"
        kind: TYPE_VAR
      }
    }
  }
  methods {
    name: "__iter__"
    fully_qualified_name: "os._Environ.__iter__"
    return_annotation {
      pretty_printed_name: "typing.Iterator[typing.AnyStr]"
      args {
        pretty_printed_name: "typing.AnyStr"
        kind: TYPE_VAR
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "os._Environ[typing.AnyStr]"
        args {
          pretty_printed_name: "typing.AnyStr"
          kind: TYPE_VAR
        }
        fully_qualified_name: "os._Environ"
      }
    }
  }
  methods {
    name: "__len__"
    fully_qualified_name: "os._Environ.__len__"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "os._Environ[typing.AnyStr]"
        args {
          pretty_printed_name: "typing.AnyStr"
          kind: TYPE_VAR
        }
        fully_qualified_name: "os._Environ"
      }
    }
  }
  is_generic: true
  attributes {
    name: "encodekey"
    fully_qualified_name: "os._Environ.encodekey"
    type_annotation {
      pretty_printed_name: "TypeAlias[CallableType[builtins.function]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
      fully_qualified_name: "os._EnvironCodeFunc"
    }
  }
  attributes {
    name: "decodekey"
    fully_qualified_name: "os._Environ.decodekey"
    type_annotation {
      pretty_printed_name: "TypeAlias[CallableType[builtins.function]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
      fully_qualified_name: "os._EnvironCodeFunc"
    }
  }
  attributes {
    name: "encodevalue"
    fully_qualified_name: "os._Environ.encodevalue"
    type_annotation {
      pretty_printed_name: "TypeAlias[CallableType[builtins.function]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
      fully_qualified_name: "os._EnvironCodeFunc"
    }
  }
  attributes {
    name: "decodevalue"
    fully_qualified_name: "os._Environ.decodevalue"
    type_annotation {
      pretty_printed_name: "TypeAlias[CallableType[builtins.function]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
      fully_qualified_name: "os._EnvironCodeFunc"
    }
  }
  attributes {
    name: "putenv"
    fully_qualified_name: "os._Environ.putenv"
    type_annotation {
      pretty_printed_name: "CallableType[builtins.function]"
      kind: CALLABLE
      args {
        pretty_printed_name: "builtins.function"
        fully_qualified_name: "builtins.function"
      }
    }
  }
  attributes {
    name: "unsetenv"
    fully_qualified_name: "os._Environ.unsetenv"
    type_annotation {
      pretty_printed_name: "CallableType[builtins.function]"
      kind: CALLABLE
      args {
        pretty_printed_name: "builtins.function"
        fully_qualified_name: "builtins.function"
      }
    }
  }
}
classes {
  name: "stat_result"
  fully_qualified_name: "os.stat_result"
  super_classes: "_typeshed.structseq"
  super_classes: "builtins.tuple"
  methods {
    name: "st_mode"
    fully_qualified_name: "os.stat_result.st_mode"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Tuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.float,builtins.float,builtins.float]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "st_ino"
    fully_qualified_name: "os.stat_result.st_ino"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Tuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.float,builtins.float,builtins.float]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "st_dev"
    fully_qualified_name: "os.stat_result.st_dev"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Tuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.float,builtins.float,builtins.float]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "st_nlink"
    fully_qualified_name: "os.stat_result.st_nlink"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Tuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.float,builtins.float,builtins.float]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "st_uid"
    fully_qualified_name: "os.stat_result.st_uid"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Tuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.float,builtins.float,builtins.float]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "st_gid"
    fully_qualified_name: "os.stat_result.st_gid"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Tuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.float,builtins.float,builtins.float]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "st_size"
    fully_qualified_name: "os.stat_result.st_size"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Tuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.float,builtins.float,builtins.float]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "st_atime"
    fully_qualified_name: "os.stat_result.st_atime"
    return_annotation {
      pretty_printed_name: "builtins.float"
      fully_qualified_name: "builtins.float"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Tuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.float,builtins.float,builtins.float]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "st_mtime"
    fully_qualified_name: "os.stat_result.st_mtime"
    return_annotation {
      pretty_printed_name: "builtins.float"
      fully_qualified_name: "builtins.float"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Tuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.float,builtins.float,builtins.float]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "st_ctime"
    fully_qualified_name: "os.stat_result.st_ctime"
    return_annotation {
      pretty_printed_name: "builtins.float"
      fully_qualified_name: "builtins.float"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Tuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.float,builtins.float,builtins.float]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "st_atime_ns"
    fully_qualified_name: "os.stat_result.st_atime_ns"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Tuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.float,builtins.float,builtins.float]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "st_mtime_ns"
    fully_qualified_name: "os.stat_result.st_mtime_ns"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Tuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.float,builtins.float,builtins.float]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "st_ctime_ns"
    fully_qualified_name: "os.stat_result.st_ctime_ns"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Tuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.float,builtins.float,builtins.float]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "st_blocks"
    fully_qualified_name: "os.stat_result.st_blocks"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Tuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.float,builtins.float,builtins.float]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "st_blksize"
    fully_qualified_name: "os.stat_result.st_blksize"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Tuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.float,builtins.float,builtins.float]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "st_rdev"
    fully_qualified_name: "os.stat_result.st_rdev"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Tuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.float,builtins.float,builtins.float]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  has_decorators: true
}
classes {
  name: "PathLike"
  fully_qualified_name: "os.PathLike"
  super_classes: "builtins.object"
  methods {
    name: "__fspath__"
    fully_qualified_name: "os.PathLike.__fspath__"
    return_annotation {
      pretty_printed_name: "_typeshed.AnyStr_co"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "os.PathLike[_typeshed.AnyStr_co]"
        args {
          pretty_printed_name: "_typeshed.AnyStr_co"
          kind: TYPE_VAR
        }
        fully_qualified_name: "os.PathLike"
      }
    }
    has_decorators: true
    resolved_decorator_names: "abstractmethod"
  }
  has_decorators: true
  is_generic: true
  is_protocol: true
}
classes {
  name: "DirEntry"
  fully_qualified_name: "os.DirEntry"
  super_classes: "builtins.object"
  methods {
    name: "name"
    fully_qualified_name: "os.DirEntry.name"
    return_annotation {
      pretty_printed_name: "typing.AnyStr"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "os.DirEntry[typing.AnyStr]"
        args {
          pretty_printed_name: "typing.AnyStr"
          kind: TYPE_VAR
        }
        fully_qualified_name: "os.DirEntry"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "path"
    fully_qualified_name: "os.DirEntry.path"
    return_annotation {
      pretty_printed_name: "typing.AnyStr"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "os.DirEntry[typing.AnyStr]"
        args {
          pretty_printed_name: "typing.AnyStr"
          kind: TYPE_VAR
        }
        fully_qualified_name: "os.DirEntry"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "inode"
    fully_qualified_name: "os.DirEntry.inode"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "os.DirEntry[typing.AnyStr]"
        args {
          pretty_printed_name: "typing.AnyStr"
          kind: TYPE_VAR
        }
        fully_qualified_name: "os.DirEntry"
      }
    }
  }
  methods {
    name: "is_dir"
    fully_qualified_name: "os.DirEntry.is_dir"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "os.DirEntry[typing.AnyStr]"
        args {
          pretty_printed_name: "typing.AnyStr"
          kind: TYPE_VAR
        }
        fully_qualified_name: "os.DirEntry"
      }
    }
    parameters {
      name: "follow_symlinks"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
  }
  methods {
    name: "is_file"
    fully_qualified_name: "os.DirEntry.is_file"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "os.DirEntry[typing.AnyStr]"
        args {
          pretty_printed_name: "typing.AnyStr"
          kind: TYPE_VAR
        }
        fully_qualified_name: "os.DirEntry"
      }
    }
    parameters {
      name: "follow_symlinks"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
  }
  methods {
    name: "is_symlink"
    fully_qualified_name: "os.DirEntry.is_symlink"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "os.DirEntry[typing.AnyStr]"
        args {
          pretty_printed_name: "typing.AnyStr"
          kind: TYPE_VAR
        }
        fully_qualified_name: "os.DirEntry"
      }
    }
  }
  methods {
    name: "stat"
    fully_qualified_name: "os.DirEntry.stat"
    return_annotation {
      pretty_printed_name: "TypeAlias[Tuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.float,builtins.float,builtins.float]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Tuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.float,builtins.float,builtins.float]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
      }
      fully_qualified_name: "os.stat_result"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "os.DirEntry[typing.AnyStr]"
        args {
          pretty_printed_name: "typing.AnyStr"
          kind: TYPE_VAR
        }
        fully_qualified_name: "os.DirEntry"
      }
    }
    parameters {
      name: "follow_symlinks"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
  }
  methods {
    name: "__fspath__"
    fully_qualified_name: "os.DirEntry.__fspath__"
    return_annotation {
      pretty_printed_name: "typing.AnyStr"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "os.DirEntry[typing.AnyStr]"
        args {
          pretty_printed_name: "typing.AnyStr"
          kind: TYPE_VAR
        }
        fully_qualified_name: "os.DirEntry"
      }
    }
  }
  has_decorators: true
  is_generic: true
}
classes {
  name: "statvfs_result"
  fully_qualified_name: "os.statvfs_result"
  super_classes: "_typeshed.structseq"
  super_classes: "builtins.tuple"
  methods {
    name: "f_bsize"
    fully_qualified_name: "os.statvfs_result.f_bsize"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Tuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "f_frsize"
    fully_qualified_name: "os.statvfs_result.f_frsize"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Tuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "f_blocks"
    fully_qualified_name: "os.statvfs_result.f_blocks"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Tuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "f_bfree"
    fully_qualified_name: "os.statvfs_result.f_bfree"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Tuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "f_bavail"
    fully_qualified_name: "os.statvfs_result.f_bavail"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Tuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "f_files"
    fully_qualified_name: "os.statvfs_result.f_files"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Tuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "f_ffree"
    fully_qualified_name: "os.statvfs_result.f_ffree"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Tuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "f_favail"
    fully_qualified_name: "os.statvfs_result.f_favail"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Tuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "f_flag"
    fully_qualified_name: "os.statvfs_result.f_flag"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Tuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "f_namemax"
    fully_qualified_name: "os.statvfs_result.f_namemax"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Tuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "f_fsid"
    fully_qualified_name: "os.statvfs_result.f_fsid"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Tuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  has_decorators: true
}
classes {
  name: "uname_result"
  fully_qualified_name: "os.uname_result"
  super_classes: "_typeshed.structseq"
  super_classes: "builtins.tuple"
  methods {
    name: "sysname"
    fully_qualified_name: "os.uname_result.sysname"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Tuple[builtins.str,builtins.str,builtins.str,builtins.str,builtins.str]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "nodename"
    fully_qualified_name: "os.uname_result.nodename"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Tuple[builtins.str,builtins.str,builtins.str,builtins.str,builtins.str]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "release"
    fully_qualified_name: "os.uname_result.release"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Tuple[builtins.str,builtins.str,builtins.str,builtins.str,builtins.str]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "version"
    fully_qualified_name: "os.uname_result.version"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Tuple[builtins.str,builtins.str,builtins.str,builtins.str,builtins.str]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "machine"
    fully_qualified_name: "os.uname_result.machine"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Tuple[builtins.str,builtins.str,builtins.str,builtins.str,builtins.str]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  has_decorators: true
}
classes {
  name: "terminal_size"
  fully_qualified_name: "os.terminal_size"
  super_classes: "_typeshed.structseq"
  super_classes: "builtins.tuple"
  methods {
    name: "columns"
    fully_qualified_name: "os.terminal_size.columns"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Tuple[builtins.int,builtins.int]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "lines"
    fully_qualified_name: "os.terminal_size.lines"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Tuple[builtins.int,builtins.int]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  has_decorators: true
}
classes {
  name: "_ScandirIterator"
  fully_qualified_name: "os._ScandirIterator"
  super_classes: "typing.Iterator"
  super_classes: "contextlib.AbstractContextManager"
  methods {
    name: "__next__"
    fully_qualified_name: "os._ScandirIterator.__next__"
    return_annotation {
      pretty_printed_name: "os.DirEntry[typing.AnyStr]"
      args {
        pretty_printed_name: "typing.AnyStr"
        kind: TYPE_VAR
      }
      fully_qualified_name: "os.DirEntry"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "os._ScandirIterator[typing.AnyStr]"
        args {
          pretty_printed_name: "typing.AnyStr"
          kind: TYPE_VAR
        }
        fully_qualified_name: "os._ScandirIterator"
      }
    }
  }
  methods {
    name: "__exit__"
    fully_qualified_name: "os._ScandirIterator.__exit__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "os._ScandirIterator[typing.AnyStr]"
        args {
          pretty_printed_name: "typing.AnyStr"
          kind: TYPE_VAR
        }
        fully_qualified_name: "os._ScandirIterator"
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
  }
  methods {
    name: "close"
    fully_qualified_name: "os._ScandirIterator.close"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "os._ScandirIterator[typing.AnyStr]"
        args {
          pretty_printed_name: "typing.AnyStr"
          kind: TYPE_VAR
        }
        fully_qualified_name: "os._ScandirIterator"
      }
    }
  }
  is_generic: true
}
classes {
  name: "_wrap_close"
  fully_qualified_name: "os._wrap_close"
  super_classes: "io.TextIOWrapper"
  methods {
    name: "__init__"
    fully_qualified_name: "os._wrap_close.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "os._wrap_close"
        fully_qualified_name: "os._wrap_close"
      }
    }
    parameters {
      name: "stream"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "io.TextIOWrapper"
        fully_qualified_name: "io.TextIOWrapper"
      }
    }
    parameters {
      name: "proc"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "subprocess.Popen[builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "subprocess.Popen"
      }
    }
  }
  methods {
    name: "close"
    fully_qualified_name: "os._wrap_close.close"
    return_annotation {
      pretty_printed_name: "Union[builtins.int,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "os._wrap_close"
        fully_qualified_name: "os._wrap_close"
      }
    }
  }
}
classes {
  name: "times_result"
  fully_qualified_name: "os.times_result"
  super_classes: "_typeshed.structseq"
  super_classes: "builtins.tuple"
  methods {
    name: "user"
    fully_qualified_name: "os.times_result.user"
    return_annotation {
      pretty_printed_name: "builtins.float"
      fully_qualified_name: "builtins.float"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Tuple[builtins.float,builtins.float,builtins.float,builtins.float,builtins.float]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "system"
    fully_qualified_name: "os.times_result.system"
    return_annotation {
      pretty_printed_name: "builtins.float"
      fully_qualified_name: "builtins.float"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Tuple[builtins.float,builtins.float,builtins.float,builtins.float,builtins.float]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "children_user"
    fully_qualified_name: "os.times_result.children_user"
    return_annotation {
      pretty_printed_name: "builtins.float"
      fully_qualified_name: "builtins.float"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Tuple[builtins.float,builtins.float,builtins.float,builtins.float,builtins.float]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "children_system"
    fully_qualified_name: "os.times_result.children_system"
    return_annotation {
      pretty_printed_name: "builtins.float"
      fully_qualified_name: "builtins.float"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Tuple[builtins.float,builtins.float,builtins.float,builtins.float,builtins.float]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "elapsed"
    fully_qualified_name: "os.times_result.elapsed"
    return_annotation {
      pretty_printed_name: "builtins.float"
      fully_qualified_name: "builtins.float"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Tuple[builtins.float,builtins.float,builtins.float,builtins.float,builtins.float]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  has_decorators: true
}
classes {
  name: "waitid_result"
  fully_qualified_name: "os.waitid_result"
  super_classes: "_typeshed.structseq"
  super_classes: "builtins.tuple"
  methods {
    name: "si_pid"
    fully_qualified_name: "os.waitid_result.si_pid"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Tuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "si_uid"
    fully_qualified_name: "os.waitid_result.si_uid"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Tuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "si_signo"
    fully_qualified_name: "os.waitid_result.si_signo"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Tuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "si_status"
    fully_qualified_name: "os.waitid_result.si_status"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Tuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "si_code"
    fully_qualified_name: "os.waitid_result.si_code"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Tuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  has_decorators: true
}
classes {
  name: "sched_param"
  fully_qualified_name: "os.sched_param"
  super_classes: "_typeshed.structseq"
  super_classes: "builtins.tuple"
  methods {
    name: "__new__"
    fully_qualified_name: "os.sched_param.__new__"
    return_annotation {
      pretty_printed_name: "Tuple[builtins.int]"
      kind: TUPLE
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[os.sched_param.Self]"
        kind: TYPE
        args {
          pretty_printed_name: "os.sched_param.Self"
          kind: TYPE_VAR
        }
      }
    }
    parameters {
      name: "sched_priority"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
  }
  methods {
    name: "sched_priority"
    fully_qualified_name: "os.sched_param.sched_priority"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Tuple[builtins.int]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  has_decorators: true
}
functions {
  name: "fsencode"
  fully_qualified_name: "os.fsencode"
  return_annotation {
    pretty_printed_name: "builtins.bytes"
    fully_qualified_name: "builtins.bytes"
  }
  parameters {
    name: "filename"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "os.PathLike"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "os.PathLike"
        }
      }
      fully_qualified_name: "_typeshed.StrOrBytesPath"
    }
  }
}
functions {
  name: "fsdecode"
  fully_qualified_name: "os.fsdecode"
  return_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
  parameters {
    name: "filename"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "os.PathLike"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "os.PathLike"
        }
      }
      fully_qualified_name: "_typeshed.StrOrBytesPath"
    }
  }
}
functions {
  name: "get_exec_path"
  fully_qualified_name: "os.get_exec_path"
  return_annotation {
    pretty_printed_name: "builtins.list[builtins.str]"
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    fully_qualified_name: "builtins.list"
  }
  parameters {
    name: "env"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[typing.Mapping[builtins.str,builtins.str],None]"
      kind: UNION
      args {
        pretty_printed_name: "typing.Mapping[builtins.str,builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "typing.Mapping"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
}
functions {
  name: "getlogin"
  fully_qualified_name: "os.getlogin"
  return_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
}
functions {
  name: "getpid"
  fully_qualified_name: "os.getpid"
  return_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
functions {
  name: "getppid"
  fully_qualified_name: "os.getppid"
  return_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
functions {
  name: "strerror"
  fully_qualified_name: "os.strerror"
  return_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
}
functions {
  name: "umask"
  fully_qualified_name: "os.umask"
  return_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
}
functions {
  name: "ctermid"
  fully_qualified_name: "os.ctermid"
  return_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
}
functions {
  name: "getegid"
  fully_qualified_name: "os.getegid"
  return_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
functions {
  name: "geteuid"
  fully_qualified_name: "os.geteuid"
  return_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
functions {
  name: "getgid"
  fully_qualified_name: "os.getgid"
  return_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
functions {
  name: "getgrouplist"
  fully_qualified_name: "os.getgrouplist"
  return_annotation {
    pretty_printed_name: "builtins.list[builtins.int]"
    args {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    fully_qualified_name: "builtins.list"
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
}
functions {
  name: "getgroups"
  fully_qualified_name: "os.getgroups"
  return_annotation {
    pretty_printed_name: "builtins.list[builtins.int]"
    args {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    fully_qualified_name: "builtins.list"
  }
}
functions {
  name: "initgroups"
  fully_qualified_name: "os.initgroups"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
}
functions {
  name: "getpgid"
  fully_qualified_name: "os.getpgid"
  return_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
  parameters {
    name: "pid"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
}
functions {
  name: "getpgrp"
  fully_qualified_name: "os.getpgrp"
  return_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
functions {
  name: "getpriority"
  fully_qualified_name: "os.getpriority"
  return_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
  parameters {
    name: "which"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "who"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
}
functions {
  name: "setpriority"
  fully_qualified_name: "os.setpriority"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "which"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "who"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "priority"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
}
functions {
  name: "getresuid"
  fully_qualified_name: "os.getresuid"
  return_annotation {
    pretty_printed_name: "Tuple[builtins.int,builtins.int,builtins.int]"
    kind: TUPLE
    args {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    args {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    args {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
}
functions {
  name: "getresgid"
  fully_qualified_name: "os.getresgid"
  return_annotation {
    pretty_printed_name: "Tuple[builtins.int,builtins.int,builtins.int]"
    kind: TUPLE
    args {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    args {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    args {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
}
functions {
  name: "getuid"
  fully_qualified_name: "os.getuid"
  return_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
functions {
  name: "setegid"
  fully_qualified_name: "os.setegid"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
}
functions {
  name: "seteuid"
  fully_qualified_name: "os.seteuid"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
}
functions {
  name: "setgid"
  fully_qualified_name: "os.setgid"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
}
functions {
  name: "setgroups"
  fully_qualified_name: "os.setgroups"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "typing.Sequence[builtins.int]"
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      fully_qualified_name: "typing.Sequence"
    }
  }
}
functions {
  name: "setpgrp"
  fully_qualified_name: "os.setpgrp"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
}
functions {
  name: "setpgid"
  fully_qualified_name: "os.setpgid"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
}
functions {
  name: "setregid"
  fully_qualified_name: "os.setregid"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
}
functions {
  name: "setresgid"
  fully_qualified_name: "os.setresgid"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "rgid"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "egid"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "sgid"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
}
functions {
  name: "setresuid"
  fully_qualified_name: "os.setresuid"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "ruid"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "euid"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "suid"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
}
functions {
  name: "setreuid"
  fully_qualified_name: "os.setreuid"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
}
functions {
  name: "getsid"
  fully_qualified_name: "os.getsid"
  return_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
}
functions {
  name: "setsid"
  fully_qualified_name: "os.setsid"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
}
functions {
  name: "setuid"
  fully_qualified_name: "os.setuid"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
}
functions {
  name: "uname"
  fully_qualified_name: "os.uname"
  return_annotation {
    pretty_printed_name: "TypeAlias[Tuple[builtins.str,builtins.str,builtins.str,builtins.str,builtins.str]]"
    kind: TYPE_ALIAS
    args {
      pretty_printed_name: "Tuple[builtins.str,builtins.str,builtins.str,builtins.str,builtins.str]"
      kind: TUPLE
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    fully_qualified_name: "os.uname_result"
  }
}
functions {
  name: "putenv"
  fully_qualified_name: "os.putenv"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "os.PathLike"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "os.PathLike"
        }
      }
      fully_qualified_name: "_typeshed.StrOrBytesPath"
    }
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "os.PathLike"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "os.PathLike"
        }
      }
      fully_qualified_name: "_typeshed.StrOrBytesPath"
    }
  }
}
functions {
  name: "unsetenv"
  fully_qualified_name: "os.unsetenv"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "os.PathLike"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "os.PathLike"
        }
      }
      fully_qualified_name: "_typeshed.StrOrBytesPath"
    }
  }
}
functions {
  name: "close"
  fully_qualified_name: "os.close"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "fd"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
}
functions {
  name: "closerange"
  fully_qualified_name: "os.closerange"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
}
functions {
  name: "device_encoding"
  fully_qualified_name: "os.device_encoding"
  return_annotation {
    pretty_printed_name: "Union[builtins.str,None]"
    kind: UNION
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    args {
      pretty_printed_name: "None"
      kind: NONE
    }
  }
  parameters {
    name: "fd"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
}
functions {
  name: "dup"
  fully_qualified_name: "os.dup"
  return_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
}
functions {
  name: "dup2"
  fully_qualified_name: "os.dup2"
  return_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
  parameters {
    name: "fd"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "fd2"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "inheritable"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
}
functions {
  name: "fstat"
  fully_qualified_name: "os.fstat"
  return_annotation {
    pretty_printed_name: "TypeAlias[Tuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.float,builtins.float,builtins.float]]"
    kind: TYPE_ALIAS
    args {
      pretty_printed_name: "Tuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.float,builtins.float,builtins.float]"
      kind: TUPLE
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
      args {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
      args {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
    }
    fully_qualified_name: "os.stat_result"
  }
  parameters {
    name: "fd"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
}
functions {
  name: "ftruncate"
  fully_qualified_name: "os.ftruncate"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
}
functions {
  name: "fsync"
  fully_qualified_name: "os.fsync"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "fd"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.int,_typeshed.HasFileno]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.int,_typeshed.HasFileno]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "_typeshed.HasFileno"
          fully_qualified_name: "_typeshed.HasFileno"
        }
      }
      fully_qualified_name: "_typeshed.FileDescriptorLike"
    }
  }
}
functions {
  name: "isatty"
  fully_qualified_name: "os.isatty"
  return_annotation {
    pretty_printed_name: "builtins.bool"
    fully_qualified_name: "builtins.bool"
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
}
functions {
  name: "lseek"
  fully_qualified_name: "os.lseek"
  return_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
}
functions {
  name: "open"
  fully_qualified_name: "os.open"
  return_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
  parameters {
    name: "path"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "os.PathLike"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "os.PathLike"
        }
      }
      fully_qualified_name: "_typeshed.StrOrBytesPath"
    }
  }
  parameters {
    name: "flags"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "mode"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "dir_fd"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.int,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
}
functions {
  name: "pipe"
  fully_qualified_name: "os.pipe"
  return_annotation {
    pretty_printed_name: "Tuple[builtins.int,builtins.int]"
    kind: TUPLE
    args {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    args {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
}
functions {
  name: "read"
  fully_qualified_name: "os.read"
  return_annotation {
    pretty_printed_name: "builtins.bytes"
    fully_qualified_name: "builtins.bytes"
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
}
functions {
  name: "fchmod"
  fully_qualified_name: "os.fchmod"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "fd"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "mode"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
}
functions {
  name: "fchown"
  fully_qualified_name: "os.fchown"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "fd"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "uid"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "gid"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
}
functions {
  name: "fpathconf"
  fully_qualified_name: "os.fpathconf"
  return_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "Union[builtins.str,builtins.int]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
  }
}
functions {
  name: "fstatvfs"
  fully_qualified_name: "os.fstatvfs"
  return_annotation {
    pretty_printed_name: "TypeAlias[Tuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]]"
    kind: TYPE_ALIAS
    args {
      pretty_printed_name: "Tuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]"
      kind: TUPLE
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    fully_qualified_name: "os.statvfs_result"
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
}
functions {
  name: "get_blocking"
  fully_qualified_name: "os.get_blocking"
  return_annotation {
    pretty_printed_name: "builtins.bool"
    fully_qualified_name: "builtins.bool"
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
}
functions {
  name: "set_blocking"
  fully_qualified_name: "os.set_blocking"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
}
functions {
  name: "lockf"
  fully_qualified_name: "os.lockf"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
}
functions {
  name: "openpty"
  fully_qualified_name: "os.openpty"
  return_annotation {
    pretty_printed_name: "Tuple[builtins.int,builtins.int]"
    kind: TUPLE
    args {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    args {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
}
functions {
  name: "fdatasync"
  fully_qualified_name: "os.fdatasync"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "fd"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.int,_typeshed.HasFileno]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.int,_typeshed.HasFileno]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "_typeshed.HasFileno"
          fully_qualified_name: "_typeshed.HasFileno"
        }
      }
      fully_qualified_name: "_typeshed.FileDescriptorLike"
    }
  }
}
functions {
  name: "pipe2"
  fully_qualified_name: "os.pipe2"
  return_annotation {
    pretty_printed_name: "Tuple[builtins.int,builtins.int]"
    kind: TUPLE
    args {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    args {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
}
functions {
  name: "posix_fallocate"
  fully_qualified_name: "os.posix_fallocate"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
}
functions {
  name: "posix_fadvise"
  fully_qualified_name: "os.posix_fadvise"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
}
functions {
  name: "pread"
  fully_qualified_name: "os.pread"
  return_annotation {
    pretty_printed_name: "builtins.bytes"
    fully_qualified_name: "builtins.bytes"
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
}
functions {
  name: "pwrite"
  fully_qualified_name: "os.pwrite"
  return_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytearray"
              fully_qualified_name: "builtins.bytearray"
            }
            args {
              pretty_printed_name: "builtins.memoryview"
              fully_qualified_name: "builtins.memoryview"
            }
            args {
              pretty_printed_name: "array.array[Any]"
              args {
                pretty_printed_name: "Any"
                kind: ANY
              }
              fully_qualified_name: "array.array"
            }
            args {
              pretty_printed_name: "mmap.mmap"
              fully_qualified_name: "mmap.mmap"
            }
            args {
              pretty_printed_name: "ctypes._CData"
              fully_qualified_name: "ctypes._CData"
            }
            args {
              pretty_printed_name: "pickle.PickleBuffer"
              fully_qualified_name: "pickle.PickleBuffer"
            }
          }
          fully_qualified_name: "_typeshed.WriteableBuffer"
        }
      }
      fully_qualified_name: "_typeshed.ReadableBuffer"
    }
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
}
functions {
  name: "preadv"
  fully_qualified_name: "os.preadv"
  return_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "_typeshed.SupportsLenAndGetItem[TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]"
      args {
        pretty_printed_name: "TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytearray"
            fully_qualified_name: "builtins.bytearray"
          }
          args {
            pretty_printed_name: "builtins.memoryview"
            fully_qualified_name: "builtins.memoryview"
          }
          args {
            pretty_printed_name: "array.array[Any]"
            args {
              pretty_printed_name: "Any"
              kind: ANY
            }
            fully_qualified_name: "array.array"
          }
          args {
            pretty_printed_name: "mmap.mmap"
            fully_qualified_name: "mmap.mmap"
          }
          args {
            pretty_printed_name: "ctypes._CData"
            fully_qualified_name: "ctypes._CData"
          }
          args {
            pretty_printed_name: "pickle.PickleBuffer"
            fully_qualified_name: "pickle.PickleBuffer"
          }
        }
        fully_qualified_name: "_typeshed.WriteableBuffer"
      }
      fully_qualified_name: "_typeshed.SupportsLenAndGetItem"
    }
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
}
functions {
  name: "pwritev"
  fully_qualified_name: "os.pwritev"
  return_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "_typeshed.SupportsLenAndGetItem[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]]"
      args {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.bytearray"
                fully_qualified_name: "builtins.bytearray"
              }
              args {
                pretty_printed_name: "builtins.memoryview"
                fully_qualified_name: "builtins.memoryview"
              }
              args {
                pretty_printed_name: "array.array[Any]"
                args {
                  pretty_printed_name: "Any"
                  kind: ANY
                }
                fully_qualified_name: "array.array"
              }
              args {
                pretty_printed_name: "mmap.mmap"
                fully_qualified_name: "mmap.mmap"
              }
              args {
                pretty_printed_name: "ctypes._CData"
                fully_qualified_name: "ctypes._CData"
              }
              args {
                pretty_printed_name: "pickle.PickleBuffer"
                fully_qualified_name: "pickle.PickleBuffer"
              }
            }
            fully_qualified_name: "_typeshed.WriteableBuffer"
          }
        }
        fully_qualified_name: "_typeshed.ReadableBuffer"
      }
      fully_qualified_name: "_typeshed.SupportsLenAndGetItem"
    }
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
}
functions {
  name: "readv"
  fully_qualified_name: "os.readv"
  return_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "_typeshed.SupportsLenAndGetItem[TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]"
      args {
        pretty_printed_name: "TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytearray"
            fully_qualified_name: "builtins.bytearray"
          }
          args {
            pretty_printed_name: "builtins.memoryview"
            fully_qualified_name: "builtins.memoryview"
          }
          args {
            pretty_printed_name: "array.array[Any]"
            args {
              pretty_printed_name: "Any"
              kind: ANY
            }
            fully_qualified_name: "array.array"
          }
          args {
            pretty_printed_name: "mmap.mmap"
            fully_qualified_name: "mmap.mmap"
          }
          args {
            pretty_printed_name: "ctypes._CData"
            fully_qualified_name: "ctypes._CData"
          }
          args {
            pretty_printed_name: "pickle.PickleBuffer"
            fully_qualified_name: "pickle.PickleBuffer"
          }
        }
        fully_qualified_name: "_typeshed.WriteableBuffer"
      }
      fully_qualified_name: "_typeshed.SupportsLenAndGetItem"
    }
  }
}
functions {
  name: "writev"
  fully_qualified_name: "os.writev"
  return_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "_typeshed.SupportsLenAndGetItem[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]]"
      args {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.bytearray"
                fully_qualified_name: "builtins.bytearray"
              }
              args {
                pretty_printed_name: "builtins.memoryview"
                fully_qualified_name: "builtins.memoryview"
              }
              args {
                pretty_printed_name: "array.array[Any]"
                args {
                  pretty_printed_name: "Any"
                  kind: ANY
                }
                fully_qualified_name: "array.array"
              }
              args {
                pretty_printed_name: "mmap.mmap"
                fully_qualified_name: "mmap.mmap"
              }
              args {
                pretty_printed_name: "ctypes._CData"
                fully_qualified_name: "ctypes._CData"
              }
              args {
                pretty_printed_name: "pickle.PickleBuffer"
                fully_qualified_name: "pickle.PickleBuffer"
              }
            }
            fully_qualified_name: "_typeshed.WriteableBuffer"
          }
        }
        fully_qualified_name: "_typeshed.ReadableBuffer"
      }
      fully_qualified_name: "_typeshed.SupportsLenAndGetItem"
    }
  }
}
functions {
  name: "get_terminal_size"
  fully_qualified_name: "os.get_terminal_size"
  return_annotation {
    pretty_printed_name: "TypeAlias[Tuple[builtins.int,builtins.int]]"
    kind: TYPE_ALIAS
    args {
      pretty_printed_name: "Tuple[builtins.int,builtins.int]"
      kind: TUPLE
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    fully_qualified_name: "os.terminal_size"
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
}
functions {
  name: "get_inheritable"
  fully_qualified_name: "os.get_inheritable"
  return_annotation {
    pretty_printed_name: "builtins.bool"
    fully_qualified_name: "builtins.bool"
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
}
functions {
  name: "set_inheritable"
  fully_qualified_name: "os.set_inheritable"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
}
functions {
  name: "tcgetpgrp"
  fully_qualified_name: "os.tcgetpgrp"
  return_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
}
functions {
  name: "tcsetpgrp"
  fully_qualified_name: "os.tcsetpgrp"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
}
functions {
  name: "ttyname"
  fully_qualified_name: "os.ttyname"
  return_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
}
functions {
  name: "write"
  fully_qualified_name: "os.write"
  return_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytearray"
              fully_qualified_name: "builtins.bytearray"
            }
            args {
              pretty_printed_name: "builtins.memoryview"
              fully_qualified_name: "builtins.memoryview"
            }
            args {
              pretty_printed_name: "array.array[Any]"
              args {
                pretty_printed_name: "Any"
                kind: ANY
              }
              fully_qualified_name: "array.array"
            }
            args {
              pretty_printed_name: "mmap.mmap"
              fully_qualified_name: "mmap.mmap"
            }
            args {
              pretty_printed_name: "ctypes._CData"
              fully_qualified_name: "ctypes._CData"
            }
            args {
              pretty_printed_name: "pickle.PickleBuffer"
              fully_qualified_name: "pickle.PickleBuffer"
            }
          }
          fully_qualified_name: "_typeshed.WriteableBuffer"
        }
      }
      fully_qualified_name: "_typeshed.ReadableBuffer"
    }
  }
}
functions {
  name: "access"
  fully_qualified_name: "os.access"
  return_annotation {
    pretty_printed_name: "builtins.bool"
    fully_qualified_name: "builtins.bool"
  }
  parameters {
    name: "path"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.int,TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.int,TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "os.PathLike[builtins.str]"
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              fully_qualified_name: "os.PathLike"
            }
            args {
              pretty_printed_name: "os.PathLike[builtins.bytes]"
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              fully_qualified_name: "os.PathLike"
            }
          }
          fully_qualified_name: "_typeshed.StrOrBytesPath"
        }
      }
      fully_qualified_name: "_typeshed.FileDescriptorOrPath"
    }
  }
  parameters {
    name: "mode"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "dir_fd"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.int,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  parameters {
    name: "effective_ids"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
  parameters {
    name: "follow_symlinks"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
}
functions {
  name: "chdir"
  fully_qualified_name: "os.chdir"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "path"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.int,TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.int,TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "os.PathLike[builtins.str]"
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              fully_qualified_name: "os.PathLike"
            }
            args {
              pretty_printed_name: "os.PathLike[builtins.bytes]"
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              fully_qualified_name: "os.PathLike"
            }
          }
          fully_qualified_name: "_typeshed.StrOrBytesPath"
        }
      }
      fully_qualified_name: "_typeshed.FileDescriptorOrPath"
    }
  }
}
functions {
  name: "fchdir"
  fully_qualified_name: "os.fchdir"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "fd"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.int,_typeshed.HasFileno]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.int,_typeshed.HasFileno]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "_typeshed.HasFileno"
          fully_qualified_name: "_typeshed.HasFileno"
        }
      }
      fully_qualified_name: "_typeshed.FileDescriptorLike"
    }
  }
}
functions {
  name: "getcwd"
  fully_qualified_name: "os.getcwd"
  return_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
}
functions {
  name: "getcwdb"
  fully_qualified_name: "os.getcwdb"
  return_annotation {
    pretty_printed_name: "builtins.bytes"
    fully_qualified_name: "builtins.bytes"
  }
}
functions {
  name: "chmod"
  fully_qualified_name: "os.chmod"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "path"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.int,TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.int,TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "os.PathLike[builtins.str]"
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              fully_qualified_name: "os.PathLike"
            }
            args {
              pretty_printed_name: "os.PathLike[builtins.bytes]"
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              fully_qualified_name: "os.PathLike"
            }
          }
          fully_qualified_name: "_typeshed.StrOrBytesPath"
        }
      }
      fully_qualified_name: "_typeshed.FileDescriptorOrPath"
    }
  }
  parameters {
    name: "mode"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "dir_fd"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.int,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  parameters {
    name: "follow_symlinks"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
}
functions {
  name: "chroot"
  fully_qualified_name: "os.chroot"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "path"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "os.PathLike"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "os.PathLike"
        }
      }
      fully_qualified_name: "_typeshed.StrOrBytesPath"
    }
  }
}
functions {
  name: "chown"
  fully_qualified_name: "os.chown"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "path"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.int,TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.int,TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "os.PathLike[builtins.str]"
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              fully_qualified_name: "os.PathLike"
            }
            args {
              pretty_printed_name: "os.PathLike[builtins.bytes]"
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              fully_qualified_name: "os.PathLike"
            }
          }
          fully_qualified_name: "_typeshed.StrOrBytesPath"
        }
      }
      fully_qualified_name: "_typeshed.FileDescriptorOrPath"
    }
  }
  parameters {
    name: "uid"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "gid"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "dir_fd"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.int,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  parameters {
    name: "follow_symlinks"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
}
functions {
  name: "lchown"
  fully_qualified_name: "os.lchown"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "path"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "os.PathLike"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "os.PathLike"
        }
      }
      fully_qualified_name: "_typeshed.StrOrBytesPath"
    }
  }
  parameters {
    name: "uid"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "gid"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
}
functions {
  name: "link"
  fully_qualified_name: "os.link"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "src"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "os.PathLike"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "os.PathLike"
        }
      }
      fully_qualified_name: "_typeshed.StrOrBytesPath"
    }
  }
  parameters {
    name: "dst"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "os.PathLike"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "os.PathLike"
        }
      }
      fully_qualified_name: "_typeshed.StrOrBytesPath"
    }
  }
  parameters {
    name: "src_dir_fd"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.int,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  parameters {
    name: "dst_dir_fd"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.int,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  parameters {
    name: "follow_symlinks"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
}
functions {
  name: "lstat"
  fully_qualified_name: "os.lstat"
  return_annotation {
    pretty_printed_name: "TypeAlias[Tuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.float,builtins.float,builtins.float]]"
    kind: TYPE_ALIAS
    args {
      pretty_printed_name: "Tuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.float,builtins.float,builtins.float]"
      kind: TUPLE
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
      args {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
      args {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
    }
    fully_qualified_name: "os.stat_result"
  }
  parameters {
    name: "path"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "os.PathLike"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "os.PathLike"
        }
      }
      fully_qualified_name: "_typeshed.StrOrBytesPath"
    }
  }
  parameters {
    name: "dir_fd"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.int,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
}
functions {
  name: "mkdir"
  fully_qualified_name: "os.mkdir"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "path"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "os.PathLike"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "os.PathLike"
        }
      }
      fully_qualified_name: "_typeshed.StrOrBytesPath"
    }
  }
  parameters {
    name: "mode"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "dir_fd"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.int,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
}
functions {
  name: "mkfifo"
  fully_qualified_name: "os.mkfifo"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "path"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "os.PathLike"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "os.PathLike"
        }
      }
      fully_qualified_name: "_typeshed.StrOrBytesPath"
    }
  }
  parameters {
    name: "mode"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "dir_fd"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.int,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
}
functions {
  name: "makedirs"
  fully_qualified_name: "os.makedirs"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "name"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "os.PathLike"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "os.PathLike"
        }
      }
      fully_qualified_name: "_typeshed.StrOrBytesPath"
    }
  }
  parameters {
    name: "mode"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "exist_ok"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
}
functions {
  name: "mknod"
  fully_qualified_name: "os.mknod"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "path"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "os.PathLike"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "os.PathLike"
        }
      }
      fully_qualified_name: "_typeshed.StrOrBytesPath"
    }
  }
  parameters {
    name: "mode"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "device"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "dir_fd"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.int,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
}
functions {
  name: "major"
  fully_qualified_name: "os.major"
  return_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
}
functions {
  name: "minor"
  fully_qualified_name: "os.minor"
  return_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
}
functions {
  name: "makedev"
  fully_qualified_name: "os.makedev"
  return_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
}
functions {
  name: "pathconf"
  fully_qualified_name: "os.pathconf"
  return_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
  parameters {
    name: "path"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.int,TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.int,TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "os.PathLike[builtins.str]"
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              fully_qualified_name: "os.PathLike"
            }
            args {
              pretty_printed_name: "os.PathLike[builtins.bytes]"
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              fully_qualified_name: "os.PathLike"
            }
          }
          fully_qualified_name: "_typeshed.StrOrBytesPath"
        }
      }
      fully_qualified_name: "_typeshed.FileDescriptorOrPath"
    }
  }
  parameters {
    name: "name"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,builtins.int]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
  }
}
functions {
  name: "readlink"
  fully_qualified_name: "os.readlink"
  return_annotation {
    pretty_printed_name: "typing.AnyStr"
    kind: TYPE_VAR
  }
  parameters {
    name: "path"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[typing.AnyStr,os.PathLike[typing.AnyStr]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[typing.AnyStr,os.PathLike[typing.AnyStr]]"
        kind: UNION
        args {
          pretty_printed_name: "typing.AnyStr"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "os.PathLike[typing.AnyStr]"
          args {
            pretty_printed_name: "typing.AnyStr"
            kind: TYPE_VAR
          }
          fully_qualified_name: "os.PathLike"
        }
      }
      fully_qualified_name: "_typeshed.GenericPath"
    }
  }
  parameters {
    name: "dir_fd"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.int,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
}
functions {
  name: "remove"
  fully_qualified_name: "os.remove"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "path"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "os.PathLike"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "os.PathLike"
        }
      }
      fully_qualified_name: "_typeshed.StrOrBytesPath"
    }
  }
  parameters {
    name: "dir_fd"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.int,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
}
functions {
  name: "removedirs"
  fully_qualified_name: "os.removedirs"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "name"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "os.PathLike"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "os.PathLike"
        }
      }
      fully_qualified_name: "_typeshed.StrOrBytesPath"
    }
  }
}
functions {
  name: "rename"
  fully_qualified_name: "os.rename"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "src"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "os.PathLike"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "os.PathLike"
        }
      }
      fully_qualified_name: "_typeshed.StrOrBytesPath"
    }
  }
  parameters {
    name: "dst"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "os.PathLike"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "os.PathLike"
        }
      }
      fully_qualified_name: "_typeshed.StrOrBytesPath"
    }
  }
  parameters {
    name: "src_dir_fd"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.int,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  parameters {
    name: "dst_dir_fd"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.int,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
}
functions {
  name: "renames"
  fully_qualified_name: "os.renames"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "old"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "os.PathLike"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "os.PathLike"
        }
      }
      fully_qualified_name: "_typeshed.StrOrBytesPath"
    }
  }
  parameters {
    name: "new"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "os.PathLike"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "os.PathLike"
        }
      }
      fully_qualified_name: "_typeshed.StrOrBytesPath"
    }
  }
}
functions {
  name: "replace"
  fully_qualified_name: "os.replace"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "src"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "os.PathLike"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "os.PathLike"
        }
      }
      fully_qualified_name: "_typeshed.StrOrBytesPath"
    }
  }
  parameters {
    name: "dst"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "os.PathLike"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "os.PathLike"
        }
      }
      fully_qualified_name: "_typeshed.StrOrBytesPath"
    }
  }
  parameters {
    name: "src_dir_fd"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.int,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  parameters {
    name: "dst_dir_fd"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.int,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
}
functions {
  name: "rmdir"
  fully_qualified_name: "os.rmdir"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "path"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "os.PathLike"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "os.PathLike"
        }
      }
      fully_qualified_name: "_typeshed.StrOrBytesPath"
    }
  }
  parameters {
    name: "dir_fd"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.int,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
}
functions {
  name: "stat"
  fully_qualified_name: "os.stat"
  return_annotation {
    pretty_printed_name: "TypeAlias[Tuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.float,builtins.float,builtins.float]]"
    kind: TYPE_ALIAS
    args {
      pretty_printed_name: "Tuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.float,builtins.float,builtins.float]"
      kind: TUPLE
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
      args {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
      args {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
    }
    fully_qualified_name: "os.stat_result"
  }
  parameters {
    name: "path"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.int,TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.int,TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "os.PathLike[builtins.str]"
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              fully_qualified_name: "os.PathLike"
            }
            args {
              pretty_printed_name: "os.PathLike[builtins.bytes]"
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              fully_qualified_name: "os.PathLike"
            }
          }
          fully_qualified_name: "_typeshed.StrOrBytesPath"
        }
      }
      fully_qualified_name: "_typeshed.FileDescriptorOrPath"
    }
  }
  parameters {
    name: "dir_fd"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.int,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  parameters {
    name: "follow_symlinks"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
}
functions {
  name: "statvfs"
  fully_qualified_name: "os.statvfs"
  return_annotation {
    pretty_printed_name: "TypeAlias[Tuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]]"
    kind: TYPE_ALIAS
    args {
      pretty_printed_name: "Tuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]"
      kind: TUPLE
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    fully_qualified_name: "os.statvfs_result"
  }
  parameters {
    name: "path"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.int,TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.int,TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "os.PathLike[builtins.str]"
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              fully_qualified_name: "os.PathLike"
            }
            args {
              pretty_printed_name: "os.PathLike[builtins.bytes]"
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              fully_qualified_name: "os.PathLike"
            }
          }
          fully_qualified_name: "_typeshed.StrOrBytesPath"
        }
      }
      fully_qualified_name: "_typeshed.FileDescriptorOrPath"
    }
  }
}
functions {
  name: "symlink"
  fully_qualified_name: "os.symlink"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "src"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "os.PathLike"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "os.PathLike"
        }
      }
      fully_qualified_name: "_typeshed.StrOrBytesPath"
    }
  }
  parameters {
    name: "dst"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "os.PathLike"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "os.PathLike"
        }
      }
      fully_qualified_name: "_typeshed.StrOrBytesPath"
    }
  }
  parameters {
    name: "target_is_directory"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
  parameters {
    name: "dir_fd"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.int,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
}
functions {
  name: "sync"
  fully_qualified_name: "os.sync"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
}
functions {
  name: "truncate"
  fully_qualified_name: "os.truncate"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "path"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.int,TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.int,TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "os.PathLike[builtins.str]"
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              fully_qualified_name: "os.PathLike"
            }
            args {
              pretty_printed_name: "os.PathLike[builtins.bytes]"
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              fully_qualified_name: "os.PathLike"
            }
          }
          fully_qualified_name: "_typeshed.StrOrBytesPath"
        }
      }
      fully_qualified_name: "_typeshed.FileDescriptorOrPath"
    }
  }
  parameters {
    name: "length"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
}
functions {
  name: "unlink"
  fully_qualified_name: "os.unlink"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "path"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "os.PathLike"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "os.PathLike"
        }
      }
      fully_qualified_name: "_typeshed.StrOrBytesPath"
    }
  }
  parameters {
    name: "dir_fd"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.int,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
}
functions {
  name: "utime"
  fully_qualified_name: "os.utime"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "path"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.int,TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.int,TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "os.PathLike[builtins.str]"
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              fully_qualified_name: "os.PathLike"
            }
            args {
              pretty_printed_name: "os.PathLike[builtins.bytes]"
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              fully_qualified_name: "os.PathLike"
            }
          }
          fully_qualified_name: "_typeshed.StrOrBytesPath"
        }
      }
      fully_qualified_name: "_typeshed.FileDescriptorOrPath"
    }
  }
  parameters {
    name: "times"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Tuple[builtins.int,builtins.int],Tuple[builtins.float,builtins.float],None]"
      kind: UNION
      args {
        pretty_printed_name: "Tuple[builtins.int,builtins.int]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
      args {
        pretty_printed_name: "Tuple[builtins.float,builtins.float]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
        args {
          pretty_printed_name: "builtins.float"
          fully_qualified_name: "builtins.float"
        }
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  parameters {
    name: "ns"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Tuple[builtins.int,builtins.int]"
      kind: TUPLE
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
  }
  parameters {
    name: "dir_fd"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.int,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  parameters {
    name: "follow_symlinks"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
}
functions {
  name: "walk"
  fully_qualified_name: "os.walk"
  return_annotation {
    pretty_printed_name: "typing.Iterator[Tuple[typing.AnyStr,builtins.list[typing.AnyStr],builtins.list[typing.AnyStr]]]"
    args {
      pretty_printed_name: "Tuple[typing.AnyStr,builtins.list[typing.AnyStr],builtins.list[typing.AnyStr]]"
      kind: TUPLE
      args {
        pretty_printed_name: "typing.AnyStr"
        kind: TYPE_VAR
      }
      args {
        pretty_printed_name: "builtins.list[typing.AnyStr]"
        args {
          pretty_printed_name: "typing.AnyStr"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.list"
      }
      args {
        pretty_printed_name: "builtins.list[typing.AnyStr]"
        args {
          pretty_printed_name: "typing.AnyStr"
          kind: TYPE_VAR
        }
        fully_qualified_name: "builtins.list"
      }
    }
    fully_qualified_name: "typing.Iterator"
  }
  parameters {
    name: "top"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[typing.AnyStr,os.PathLike[typing.AnyStr]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[typing.AnyStr,os.PathLike[typing.AnyStr]]"
        kind: UNION
        args {
          pretty_printed_name: "typing.AnyStr"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "os.PathLike[typing.AnyStr]"
          args {
            pretty_printed_name: "typing.AnyStr"
            kind: TYPE_VAR
          }
          fully_qualified_name: "os.PathLike"
        }
      }
      fully_qualified_name: "_typeshed.GenericPath"
    }
  }
  parameters {
    name: "topdown"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
  parameters {
    name: "onerror"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[TypeAlias[CallableType[builtins.function]],None]"
      kind: UNION
      args {
        pretty_printed_name: "TypeAlias[CallableType[builtins.function]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
        fully_qualified_name: "os._OnError"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  parameters {
    name: "followlinks"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
}
functions {
  name: "getxattr"
  fully_qualified_name: "os.getxattr"
  return_annotation {
    pretty_printed_name: "builtins.bytes"
    fully_qualified_name: "builtins.bytes"
  }
  parameters {
    name: "path"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.int,TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.int,TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "os.PathLike[builtins.str]"
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              fully_qualified_name: "os.PathLike"
            }
            args {
              pretty_printed_name: "os.PathLike[builtins.bytes]"
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              fully_qualified_name: "os.PathLike"
            }
          }
          fully_qualified_name: "_typeshed.StrOrBytesPath"
        }
      }
      fully_qualified_name: "_typeshed.FileDescriptorOrPath"
    }
  }
  parameters {
    name: "attribute"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "os.PathLike"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "os.PathLike"
        }
      }
      fully_qualified_name: "_typeshed.StrOrBytesPath"
    }
  }
  parameters {
    name: "follow_symlinks"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
}
functions {
  name: "listxattr"
  fully_qualified_name: "os.listxattr"
  return_annotation {
    pretty_printed_name: "builtins.list[builtins.str]"
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    fully_qualified_name: "builtins.list"
  }
  parameters {
    name: "path"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[TypeAlias[Union[builtins.int,TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]],None]"
      kind: UNION
      args {
        pretty_printed_name: "TypeAlias[Union[builtins.int,TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.int,TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              args {
                pretty_printed_name: "os.PathLike[builtins.str]"
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
                fully_qualified_name: "os.PathLike"
              }
              args {
                pretty_printed_name: "os.PathLike[builtins.bytes]"
                args {
                  pretty_printed_name: "builtins.bytes"
                  fully_qualified_name: "builtins.bytes"
                }
                fully_qualified_name: "os.PathLike"
              }
            }
            fully_qualified_name: "_typeshed.StrOrBytesPath"
          }
        }
        fully_qualified_name: "_typeshed.FileDescriptorOrPath"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  parameters {
    name: "follow_symlinks"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
}
functions {
  name: "removexattr"
  fully_qualified_name: "os.removexattr"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "path"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.int,TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.int,TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "os.PathLike[builtins.str]"
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              fully_qualified_name: "os.PathLike"
            }
            args {
              pretty_printed_name: "os.PathLike[builtins.bytes]"
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              fully_qualified_name: "os.PathLike"
            }
          }
          fully_qualified_name: "_typeshed.StrOrBytesPath"
        }
      }
      fully_qualified_name: "_typeshed.FileDescriptorOrPath"
    }
  }
  parameters {
    name: "attribute"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "os.PathLike"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "os.PathLike"
        }
      }
      fully_qualified_name: "_typeshed.StrOrBytesPath"
    }
  }
  parameters {
    name: "follow_symlinks"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
}
functions {
  name: "setxattr"
  fully_qualified_name: "os.setxattr"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "path"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.int,TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.int,TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "os.PathLike[builtins.str]"
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              fully_qualified_name: "os.PathLike"
            }
            args {
              pretty_printed_name: "os.PathLike[builtins.bytes]"
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              fully_qualified_name: "os.PathLike"
            }
          }
          fully_qualified_name: "_typeshed.StrOrBytesPath"
        }
      }
      fully_qualified_name: "_typeshed.FileDescriptorOrPath"
    }
  }
  parameters {
    name: "attribute"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "os.PathLike"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "os.PathLike"
        }
      }
      fully_qualified_name: "_typeshed.StrOrBytesPath"
    }
  }
  parameters {
    name: "value"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytearray"
              fully_qualified_name: "builtins.bytearray"
            }
            args {
              pretty_printed_name: "builtins.memoryview"
              fully_qualified_name: "builtins.memoryview"
            }
            args {
              pretty_printed_name: "array.array[Any]"
              args {
                pretty_printed_name: "Any"
                kind: ANY
              }
              fully_qualified_name: "array.array"
            }
            args {
              pretty_printed_name: "mmap.mmap"
              fully_qualified_name: "mmap.mmap"
            }
            args {
              pretty_printed_name: "ctypes._CData"
              fully_qualified_name: "ctypes._CData"
            }
            args {
              pretty_printed_name: "pickle.PickleBuffer"
              fully_qualified_name: "pickle.PickleBuffer"
            }
          }
          fully_qualified_name: "_typeshed.WriteableBuffer"
        }
      }
      fully_qualified_name: "_typeshed.ReadableBuffer"
    }
  }
  parameters {
    name: "flags"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "follow_symlinks"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
}
functions {
  name: "abort"
  fully_qualified_name: "os.abort"
  return_annotation {
    pretty_printed_name: "NoReturn"
    kind: UNINHABITED
  }
}
functions {
  name: "execl"
  fully_qualified_name: "os.execl"
  return_annotation {
    pretty_printed_name: "NoReturn"
    kind: UNINHABITED
  }
  parameters {
    name: "file"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "os.PathLike"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "os.PathLike"
        }
      }
      fully_qualified_name: "_typeshed.StrOrBytesPath"
    }
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "os.PathLike"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "os.PathLike"
        }
      }
      fully_qualified_name: "_typeshed.StrOrBytesPath"
    }
  }
  parameters {
    name: "args"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "os.PathLike"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "os.PathLike"
        }
      }
      fully_qualified_name: "_typeshed.StrOrBytesPath"
    }
  }
}
functions {
  name: "execlp"
  fully_qualified_name: "os.execlp"
  return_annotation {
    pretty_printed_name: "NoReturn"
    kind: UNINHABITED
  }
  parameters {
    name: "file"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "os.PathLike"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "os.PathLike"
        }
      }
      fully_qualified_name: "_typeshed.StrOrBytesPath"
    }
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "os.PathLike"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "os.PathLike"
        }
      }
      fully_qualified_name: "_typeshed.StrOrBytesPath"
    }
  }
  parameters {
    name: "args"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "os.PathLike"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "os.PathLike"
        }
      }
      fully_qualified_name: "_typeshed.StrOrBytesPath"
    }
  }
}
functions {
  name: "execle"
  fully_qualified_name: "os.execle"
  return_annotation {
    pretty_printed_name: "NoReturn"
    kind: UNINHABITED
  }
  parameters {
    name: "file"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "os.PathLike"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "os.PathLike"
        }
      }
      fully_qualified_name: "_typeshed.StrOrBytesPath"
    }
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "os.PathLike"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "os.PathLike"
        }
      }
      fully_qualified_name: "_typeshed.StrOrBytesPath"
    }
  }
  parameters {
    name: "args"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
}
functions {
  name: "execlpe"
  fully_qualified_name: "os.execlpe"
  return_annotation {
    pretty_printed_name: "NoReturn"
    kind: UNINHABITED
  }
  parameters {
    name: "file"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "os.PathLike"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "os.PathLike"
        }
      }
      fully_qualified_name: "_typeshed.StrOrBytesPath"
    }
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "os.PathLike"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "os.PathLike"
        }
      }
      fully_qualified_name: "_typeshed.StrOrBytesPath"
    }
  }
  parameters {
    name: "args"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
}
functions {
  name: "execv"
  fully_qualified_name: "os.execv"
  return_annotation {
    pretty_printed_name: "NoReturn"
    kind: UNINHABITED
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "os.PathLike"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "os.PathLike"
        }
      }
      fully_qualified_name: "_typeshed.StrOrBytesPath"
    }
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.tuple[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]],builtins.list[builtins.bytes],builtins.list[builtins.str],builtins.list[os.PathLike[Any]],builtins.list[Union[builtins.bytes,builtins.str]],builtins.list[Union[builtins.bytes,os.PathLike[Any]]],builtins.list[Union[builtins.str,os.PathLike[Any]]],builtins.list[Union[builtins.bytes,builtins.str,os.PathLike[Any]]]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.tuple[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]],builtins.list[builtins.bytes],builtins.list[builtins.str],builtins.list[os.PathLike[Any]],builtins.list[Union[builtins.bytes,builtins.str]],builtins.list[Union[builtins.bytes,os.PathLike[Any]]],builtins.list[Union[builtins.str,os.PathLike[Any]]],builtins.list[Union[builtins.bytes,builtins.str,os.PathLike[Any]]]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.tuple[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]"
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              args {
                pretty_printed_name: "os.PathLike[builtins.str]"
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
                fully_qualified_name: "os.PathLike"
              }
              args {
                pretty_printed_name: "os.PathLike[builtins.bytes]"
                args {
                  pretty_printed_name: "builtins.bytes"
                  fully_qualified_name: "builtins.bytes"
                }
                fully_qualified_name: "os.PathLike"
              }
            }
            fully_qualified_name: "_typeshed.StrOrBytesPath"
          }
          fully_qualified_name: "builtins.tuple"
        }
        args {
          pretty_printed_name: "builtins.list[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "builtins.list"
        }
        args {
          pretty_printed_name: "builtins.list[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "builtins.list"
        }
        args {
          pretty_printed_name: "builtins.list[os.PathLike[Any]]"
          args {
            pretty_printed_name: "os.PathLike[Any]"
            args {
              pretty_printed_name: "Any"
              kind: ANY
            }
            fully_qualified_name: "os.PathLike"
          }
          fully_qualified_name: "builtins.list"
        }
        args {
          pretty_printed_name: "builtins.list[Union[builtins.bytes,builtins.str]]"
          args {
            pretty_printed_name: "Union[builtins.bytes,builtins.str]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          fully_qualified_name: "builtins.list"
        }
        args {
          pretty_printed_name: "builtins.list[Union[builtins.bytes,os.PathLike[Any]]]"
          args {
            pretty_printed_name: "Union[builtins.bytes,os.PathLike[Any]]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "os.PathLike[Any]"
              args {
                pretty_printed_name: "Any"
                kind: ANY
              }
              fully_qualified_name: "os.PathLike"
            }
          }
          fully_qualified_name: "builtins.list"
        }
        args {
          pretty_printed_name: "builtins.list[Union[builtins.str,os.PathLike[Any]]]"
          args {
            pretty_printed_name: "Union[builtins.str,os.PathLike[Any]]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "os.PathLike[Any]"
              args {
                pretty_printed_name: "Any"
                kind: ANY
              }
              fully_qualified_name: "os.PathLike"
            }
          }
          fully_qualified_name: "builtins.list"
        }
        args {
          pretty_printed_name: "builtins.list[Union[builtins.bytes,builtins.str,os.PathLike[Any]]]"
          args {
            pretty_printed_name: "Union[builtins.bytes,builtins.str,os.PathLike[Any]]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "os.PathLike[Any]"
              args {
                pretty_printed_name: "Any"
                kind: ANY
              }
              fully_qualified_name: "os.PathLike"
            }
          }
          fully_qualified_name: "builtins.list"
        }
      }
      fully_qualified_name: "os._ExecVArgs"
    }
  }
}
functions {
  name: "execve"
  fully_qualified_name: "os.execve"
  return_annotation {
    pretty_printed_name: "NoReturn"
    kind: UNINHABITED
  }
  parameters {
    name: "path"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.int,TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.int,TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "os.PathLike[builtins.str]"
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              fully_qualified_name: "os.PathLike"
            }
            args {
              pretty_printed_name: "os.PathLike[builtins.bytes]"
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              fully_qualified_name: "os.PathLike"
            }
          }
          fully_qualified_name: "_typeshed.StrOrBytesPath"
        }
      }
      fully_qualified_name: "_typeshed.FileDescriptorOrPath"
    }
  }
  parameters {
    name: "argv"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.tuple[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]],builtins.list[builtins.bytes],builtins.list[builtins.str],builtins.list[os.PathLike[Any]],builtins.list[Union[builtins.bytes,builtins.str]],builtins.list[Union[builtins.bytes,os.PathLike[Any]]],builtins.list[Union[builtins.str,os.PathLike[Any]]],builtins.list[Union[builtins.bytes,builtins.str,os.PathLike[Any]]]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.tuple[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]],builtins.list[builtins.bytes],builtins.list[builtins.str],builtins.list[os.PathLike[Any]],builtins.list[Union[builtins.bytes,builtins.str]],builtins.list[Union[builtins.bytes,os.PathLike[Any]]],builtins.list[Union[builtins.str,os.PathLike[Any]]],builtins.list[Union[builtins.bytes,builtins.str,os.PathLike[Any]]]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.tuple[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]"
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              args {
                pretty_printed_name: "os.PathLike[builtins.str]"
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
                fully_qualified_name: "os.PathLike"
              }
              args {
                pretty_printed_name: "os.PathLike[builtins.bytes]"
                args {
                  pretty_printed_name: "builtins.bytes"
                  fully_qualified_name: "builtins.bytes"
                }
                fully_qualified_name: "os.PathLike"
              }
            }
            fully_qualified_name: "_typeshed.StrOrBytesPath"
          }
          fully_qualified_name: "builtins.tuple"
        }
        args {
          pretty_printed_name: "builtins.list[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "builtins.list"
        }
        args {
          pretty_printed_name: "builtins.list[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "builtins.list"
        }
        args {
          pretty_printed_name: "builtins.list[os.PathLike[Any]]"
          args {
            pretty_printed_name: "os.PathLike[Any]"
            args {
              pretty_printed_name: "Any"
              kind: ANY
            }
            fully_qualified_name: "os.PathLike"
          }
          fully_qualified_name: "builtins.list"
        }
        args {
          pretty_printed_name: "builtins.list[Union[builtins.bytes,builtins.str]]"
          args {
            pretty_printed_name: "Union[builtins.bytes,builtins.str]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          fully_qualified_name: "builtins.list"
        }
        args {
          pretty_printed_name: "builtins.list[Union[builtins.bytes,os.PathLike[Any]]]"
          args {
            pretty_printed_name: "Union[builtins.bytes,os.PathLike[Any]]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "os.PathLike[Any]"
              args {
                pretty_printed_name: "Any"
                kind: ANY
              }
              fully_qualified_name: "os.PathLike"
            }
          }
          fully_qualified_name: "builtins.list"
        }
        args {
          pretty_printed_name: "builtins.list[Union[builtins.str,os.PathLike[Any]]]"
          args {
            pretty_printed_name: "Union[builtins.str,os.PathLike[Any]]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "os.PathLike[Any]"
              args {
                pretty_printed_name: "Any"
                kind: ANY
              }
              fully_qualified_name: "os.PathLike"
            }
          }
          fully_qualified_name: "builtins.list"
        }
        args {
          pretty_printed_name: "builtins.list[Union[builtins.bytes,builtins.str,os.PathLike[Any]]]"
          args {
            pretty_printed_name: "Union[builtins.bytes,builtins.str,os.PathLike[Any]]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "os.PathLike[Any]"
              args {
                pretty_printed_name: "Any"
                kind: ANY
              }
              fully_qualified_name: "os.PathLike"
            }
          }
          fully_qualified_name: "builtins.list"
        }
      }
      fully_qualified_name: "os._ExecVArgs"
    }
  }
  parameters {
    name: "env"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[typing.Mapping[builtins.bytes,Union[builtins.bytes,builtins.str]],typing.Mapping[builtins.str,Union[builtins.bytes,builtins.str]]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[typing.Mapping[builtins.bytes,Union[builtins.bytes,builtins.str]],typing.Mapping[builtins.str,Union[builtins.bytes,builtins.str]]]"
        kind: UNION
        args {
          pretty_printed_name: "typing.Mapping[builtins.bytes,Union[builtins.bytes,builtins.str]]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "Union[builtins.bytes,builtins.str]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          fully_qualified_name: "typing.Mapping"
        }
        args {
          pretty_printed_name: "typing.Mapping[builtins.str,Union[builtins.bytes,builtins.str]]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "Union[builtins.bytes,builtins.str]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          fully_qualified_name: "typing.Mapping"
        }
      }
      fully_qualified_name: "os._ExecEnv"
    }
  }
}
functions {
  name: "execvp"
  fully_qualified_name: "os.execvp"
  return_annotation {
    pretty_printed_name: "NoReturn"
    kind: UNINHABITED
  }
  parameters {
    name: "file"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "os.PathLike"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "os.PathLike"
        }
      }
      fully_qualified_name: "_typeshed.StrOrBytesPath"
    }
  }
  parameters {
    name: "args"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.tuple[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]],builtins.list[builtins.bytes],builtins.list[builtins.str],builtins.list[os.PathLike[Any]],builtins.list[Union[builtins.bytes,builtins.str]],builtins.list[Union[builtins.bytes,os.PathLike[Any]]],builtins.list[Union[builtins.str,os.PathLike[Any]]],builtins.list[Union[builtins.bytes,builtins.str,os.PathLike[Any]]]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.tuple[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]],builtins.list[builtins.bytes],builtins.list[builtins.str],builtins.list[os.PathLike[Any]],builtins.list[Union[builtins.bytes,builtins.str]],builtins.list[Union[builtins.bytes,os.PathLike[Any]]],builtins.list[Union[builtins.str,os.PathLike[Any]]],builtins.list[Union[builtins.bytes,builtins.str,os.PathLike[Any]]]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.tuple[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]"
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              args {
                pretty_printed_name: "os.PathLike[builtins.str]"
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
                fully_qualified_name: "os.PathLike"
              }
              args {
                pretty_printed_name: "os.PathLike[builtins.bytes]"
                args {
                  pretty_printed_name: "builtins.bytes"
                  fully_qualified_name: "builtins.bytes"
                }
                fully_qualified_name: "os.PathLike"
              }
            }
            fully_qualified_name: "_typeshed.StrOrBytesPath"
          }
          fully_qualified_name: "builtins.tuple"
        }
        args {
          pretty_printed_name: "builtins.list[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "builtins.list"
        }
        args {
          pretty_printed_name: "builtins.list[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "builtins.list"
        }
        args {
          pretty_printed_name: "builtins.list[os.PathLike[Any]]"
          args {
            pretty_printed_name: "os.PathLike[Any]"
            args {
              pretty_printed_name: "Any"
              kind: ANY
            }
            fully_qualified_name: "os.PathLike"
          }
          fully_qualified_name: "builtins.list"
        }
        args {
          pretty_printed_name: "builtins.list[Union[builtins.bytes,builtins.str]]"
          args {
            pretty_printed_name: "Union[builtins.bytes,builtins.str]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          fully_qualified_name: "builtins.list"
        }
        args {
          pretty_printed_name: "builtins.list[Union[builtins.bytes,os.PathLike[Any]]]"
          args {
            pretty_printed_name: "Union[builtins.bytes,os.PathLike[Any]]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "os.PathLike[Any]"
              args {
                pretty_printed_name: "Any"
                kind: ANY
              }
              fully_qualified_name: "os.PathLike"
            }
          }
          fully_qualified_name: "builtins.list"
        }
        args {
          pretty_printed_name: "builtins.list[Union[builtins.str,os.PathLike[Any]]]"
          args {
            pretty_printed_name: "Union[builtins.str,os.PathLike[Any]]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "os.PathLike[Any]"
              args {
                pretty_printed_name: "Any"
                kind: ANY
              }
              fully_qualified_name: "os.PathLike"
            }
          }
          fully_qualified_name: "builtins.list"
        }
        args {
          pretty_printed_name: "builtins.list[Union[builtins.bytes,builtins.str,os.PathLike[Any]]]"
          args {
            pretty_printed_name: "Union[builtins.bytes,builtins.str,os.PathLike[Any]]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "os.PathLike[Any]"
              args {
                pretty_printed_name: "Any"
                kind: ANY
              }
              fully_qualified_name: "os.PathLike"
            }
          }
          fully_qualified_name: "builtins.list"
        }
      }
      fully_qualified_name: "os._ExecVArgs"
    }
  }
}
functions {
  name: "execvpe"
  fully_qualified_name: "os.execvpe"
  return_annotation {
    pretty_printed_name: "NoReturn"
    kind: UNINHABITED
  }
  parameters {
    name: "file"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "os.PathLike"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "os.PathLike"
        }
      }
      fully_qualified_name: "_typeshed.StrOrBytesPath"
    }
  }
  parameters {
    name: "args"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.tuple[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]],builtins.list[builtins.bytes],builtins.list[builtins.str],builtins.list[os.PathLike[Any]],builtins.list[Union[builtins.bytes,builtins.str]],builtins.list[Union[builtins.bytes,os.PathLike[Any]]],builtins.list[Union[builtins.str,os.PathLike[Any]]],builtins.list[Union[builtins.bytes,builtins.str,os.PathLike[Any]]]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.tuple[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]],builtins.list[builtins.bytes],builtins.list[builtins.str],builtins.list[os.PathLike[Any]],builtins.list[Union[builtins.bytes,builtins.str]],builtins.list[Union[builtins.bytes,os.PathLike[Any]]],builtins.list[Union[builtins.str,os.PathLike[Any]]],builtins.list[Union[builtins.bytes,builtins.str,os.PathLike[Any]]]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.tuple[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]"
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              args {
                pretty_printed_name: "os.PathLike[builtins.str]"
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
                fully_qualified_name: "os.PathLike"
              }
              args {
                pretty_printed_name: "os.PathLike[builtins.bytes]"
                args {
                  pretty_printed_name: "builtins.bytes"
                  fully_qualified_name: "builtins.bytes"
                }
                fully_qualified_name: "os.PathLike"
              }
            }
            fully_qualified_name: "_typeshed.StrOrBytesPath"
          }
          fully_qualified_name: "builtins.tuple"
        }
        args {
          pretty_printed_name: "builtins.list[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "builtins.list"
        }
        args {
          pretty_printed_name: "builtins.list[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "builtins.list"
        }
        args {
          pretty_printed_name: "builtins.list[os.PathLike[Any]]"
          args {
            pretty_printed_name: "os.PathLike[Any]"
            args {
              pretty_printed_name: "Any"
              kind: ANY
            }
            fully_qualified_name: "os.PathLike"
          }
          fully_qualified_name: "builtins.list"
        }
        args {
          pretty_printed_name: "builtins.list[Union[builtins.bytes,builtins.str]]"
          args {
            pretty_printed_name: "Union[builtins.bytes,builtins.str]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          fully_qualified_name: "builtins.list"
        }
        args {
          pretty_printed_name: "builtins.list[Union[builtins.bytes,os.PathLike[Any]]]"
          args {
            pretty_printed_name: "Union[builtins.bytes,os.PathLike[Any]]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "os.PathLike[Any]"
              args {
                pretty_printed_name: "Any"
                kind: ANY
              }
              fully_qualified_name: "os.PathLike"
            }
          }
          fully_qualified_name: "builtins.list"
        }
        args {
          pretty_printed_name: "builtins.list[Union[builtins.str,os.PathLike[Any]]]"
          args {
            pretty_printed_name: "Union[builtins.str,os.PathLike[Any]]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "os.PathLike[Any]"
              args {
                pretty_printed_name: "Any"
                kind: ANY
              }
              fully_qualified_name: "os.PathLike"
            }
          }
          fully_qualified_name: "builtins.list"
        }
        args {
          pretty_printed_name: "builtins.list[Union[builtins.bytes,builtins.str,os.PathLike[Any]]]"
          args {
            pretty_printed_name: "Union[builtins.bytes,builtins.str,os.PathLike[Any]]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "os.PathLike[Any]"
              args {
                pretty_printed_name: "Any"
                kind: ANY
              }
              fully_qualified_name: "os.PathLike"
            }
          }
          fully_qualified_name: "builtins.list"
        }
      }
      fully_qualified_name: "os._ExecVArgs"
    }
  }
  parameters {
    name: "env"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[typing.Mapping[builtins.bytes,Union[builtins.bytes,builtins.str]],typing.Mapping[builtins.str,Union[builtins.bytes,builtins.str]]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[typing.Mapping[builtins.bytes,Union[builtins.bytes,builtins.str]],typing.Mapping[builtins.str,Union[builtins.bytes,builtins.str]]]"
        kind: UNION
        args {
          pretty_printed_name: "typing.Mapping[builtins.bytes,Union[builtins.bytes,builtins.str]]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "Union[builtins.bytes,builtins.str]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          fully_qualified_name: "typing.Mapping"
        }
        args {
          pretty_printed_name: "typing.Mapping[builtins.str,Union[builtins.bytes,builtins.str]]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "Union[builtins.bytes,builtins.str]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          fully_qualified_name: "typing.Mapping"
        }
      }
      fully_qualified_name: "os._ExecEnv"
    }
  }
}
functions {
  name: "_exit"
  fully_qualified_name: "os._exit"
  return_annotation {
    pretty_printed_name: "NoReturn"
    kind: UNINHABITED
  }
  parameters {
    name: "status"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
}
functions {
  name: "kill"
  fully_qualified_name: "os.kill"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
}
functions {
  name: "fork"
  fully_qualified_name: "os.fork"
  return_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
functions {
  name: "forkpty"
  fully_qualified_name: "os.forkpty"
  return_annotation {
    pretty_printed_name: "Tuple[builtins.int,builtins.int]"
    kind: TUPLE
    args {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    args {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
}
functions {
  name: "killpg"
  fully_qualified_name: "os.killpg"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
}
functions {
  name: "nice"
  fully_qualified_name: "os.nice"
  return_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
}
functions {
  name: "plock"
  fully_qualified_name: "os.plock"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
}
functions {
  name: "popen"
  fully_qualified_name: "os.popen"
  return_annotation {
    pretty_printed_name: "os._wrap_close"
    fully_qualified_name: "os._wrap_close"
  }
  parameters {
    name: "cmd"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  parameters {
    name: "mode"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  parameters {
    name: "buffering"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
}
functions {
  name: "spawnl"
  fully_qualified_name: "os.spawnl"
  return_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
  parameters {
    name: "mode"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "file"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "os.PathLike"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "os.PathLike"
        }
      }
      fully_qualified_name: "_typeshed.StrOrBytesPath"
    }
  }
  parameters {
    name: "arg0"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "os.PathLike"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "os.PathLike"
        }
      }
      fully_qualified_name: "_typeshed.StrOrBytesPath"
    }
  }
  parameters {
    name: "args"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "os.PathLike"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "os.PathLike"
        }
      }
      fully_qualified_name: "_typeshed.StrOrBytesPath"
    }
  }
}
functions {
  name: "spawnle"
  fully_qualified_name: "os.spawnle"
  return_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
  parameters {
    name: "mode"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "file"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "os.PathLike"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "os.PathLike"
        }
      }
      fully_qualified_name: "_typeshed.StrOrBytesPath"
    }
  }
  parameters {
    name: "arg0"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "os.PathLike"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "os.PathLike"
        }
      }
      fully_qualified_name: "_typeshed.StrOrBytesPath"
    }
  }
  parameters {
    name: "args"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
}
functions {
  name: "spawnv"
  fully_qualified_name: "os.spawnv"
  return_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
  parameters {
    name: "mode"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "file"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "os.PathLike"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "os.PathLike"
        }
      }
      fully_qualified_name: "_typeshed.StrOrBytesPath"
    }
  }
  parameters {
    name: "args"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.tuple[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]],builtins.list[builtins.bytes],builtins.list[builtins.str],builtins.list[os.PathLike[Any]],builtins.list[Union[builtins.bytes,builtins.str]],builtins.list[Union[builtins.bytes,os.PathLike[Any]]],builtins.list[Union[builtins.str,os.PathLike[Any]]],builtins.list[Union[builtins.bytes,builtins.str,os.PathLike[Any]]]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.tuple[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]],builtins.list[builtins.bytes],builtins.list[builtins.str],builtins.list[os.PathLike[Any]],builtins.list[Union[builtins.bytes,builtins.str]],builtins.list[Union[builtins.bytes,os.PathLike[Any]]],builtins.list[Union[builtins.str,os.PathLike[Any]]],builtins.list[Union[builtins.bytes,builtins.str,os.PathLike[Any]]]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.tuple[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]"
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              args {
                pretty_printed_name: "os.PathLike[builtins.str]"
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
                fully_qualified_name: "os.PathLike"
              }
              args {
                pretty_printed_name: "os.PathLike[builtins.bytes]"
                args {
                  pretty_printed_name: "builtins.bytes"
                  fully_qualified_name: "builtins.bytes"
                }
                fully_qualified_name: "os.PathLike"
              }
            }
            fully_qualified_name: "_typeshed.StrOrBytesPath"
          }
          fully_qualified_name: "builtins.tuple"
        }
        args {
          pretty_printed_name: "builtins.list[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "builtins.list"
        }
        args {
          pretty_printed_name: "builtins.list[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "builtins.list"
        }
        args {
          pretty_printed_name: "builtins.list[os.PathLike[Any]]"
          args {
            pretty_printed_name: "os.PathLike[Any]"
            args {
              pretty_printed_name: "Any"
              kind: ANY
            }
            fully_qualified_name: "os.PathLike"
          }
          fully_qualified_name: "builtins.list"
        }
        args {
          pretty_printed_name: "builtins.list[Union[builtins.bytes,builtins.str]]"
          args {
            pretty_printed_name: "Union[builtins.bytes,builtins.str]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          fully_qualified_name: "builtins.list"
        }
        args {
          pretty_printed_name: "builtins.list[Union[builtins.bytes,os.PathLike[Any]]]"
          args {
            pretty_printed_name: "Union[builtins.bytes,os.PathLike[Any]]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "os.PathLike[Any]"
              args {
                pretty_printed_name: "Any"
                kind: ANY
              }
              fully_qualified_name: "os.PathLike"
            }
          }
          fully_qualified_name: "builtins.list"
        }
        args {
          pretty_printed_name: "builtins.list[Union[builtins.str,os.PathLike[Any]]]"
          args {
            pretty_printed_name: "Union[builtins.str,os.PathLike[Any]]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "os.PathLike[Any]"
              args {
                pretty_printed_name: "Any"
                kind: ANY
              }
              fully_qualified_name: "os.PathLike"
            }
          }
          fully_qualified_name: "builtins.list"
        }
        args {
          pretty_printed_name: "builtins.list[Union[builtins.bytes,builtins.str,os.PathLike[Any]]]"
          args {
            pretty_printed_name: "Union[builtins.bytes,builtins.str,os.PathLike[Any]]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "os.PathLike[Any]"
              args {
                pretty_printed_name: "Any"
                kind: ANY
              }
              fully_qualified_name: "os.PathLike"
            }
          }
          fully_qualified_name: "builtins.list"
        }
      }
      fully_qualified_name: "os._ExecVArgs"
    }
  }
}
functions {
  name: "spawnve"
  fully_qualified_name: "os.spawnve"
  return_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
  parameters {
    name: "mode"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "file"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "os.PathLike"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "os.PathLike"
        }
      }
      fully_qualified_name: "_typeshed.StrOrBytesPath"
    }
  }
  parameters {
    name: "args"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.tuple[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]],builtins.list[builtins.bytes],builtins.list[builtins.str],builtins.list[os.PathLike[Any]],builtins.list[Union[builtins.bytes,builtins.str]],builtins.list[Union[builtins.bytes,os.PathLike[Any]]],builtins.list[Union[builtins.str,os.PathLike[Any]]],builtins.list[Union[builtins.bytes,builtins.str,os.PathLike[Any]]]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.tuple[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]],builtins.list[builtins.bytes],builtins.list[builtins.str],builtins.list[os.PathLike[Any]],builtins.list[Union[builtins.bytes,builtins.str]],builtins.list[Union[builtins.bytes,os.PathLike[Any]]],builtins.list[Union[builtins.str,os.PathLike[Any]]],builtins.list[Union[builtins.bytes,builtins.str,os.PathLike[Any]]]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.tuple[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]"
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              args {
                pretty_printed_name: "os.PathLike[builtins.str]"
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
                fully_qualified_name: "os.PathLike"
              }
              args {
                pretty_printed_name: "os.PathLike[builtins.bytes]"
                args {
                  pretty_printed_name: "builtins.bytes"
                  fully_qualified_name: "builtins.bytes"
                }
                fully_qualified_name: "os.PathLike"
              }
            }
            fully_qualified_name: "_typeshed.StrOrBytesPath"
          }
          fully_qualified_name: "builtins.tuple"
        }
        args {
          pretty_printed_name: "builtins.list[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "builtins.list"
        }
        args {
          pretty_printed_name: "builtins.list[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "builtins.list"
        }
        args {
          pretty_printed_name: "builtins.list[os.PathLike[Any]]"
          args {
            pretty_printed_name: "os.PathLike[Any]"
            args {
              pretty_printed_name: "Any"
              kind: ANY
            }
            fully_qualified_name: "os.PathLike"
          }
          fully_qualified_name: "builtins.list"
        }
        args {
          pretty_printed_name: "builtins.list[Union[builtins.bytes,builtins.str]]"
          args {
            pretty_printed_name: "Union[builtins.bytes,builtins.str]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          fully_qualified_name: "builtins.list"
        }
        args {
          pretty_printed_name: "builtins.list[Union[builtins.bytes,os.PathLike[Any]]]"
          args {
            pretty_printed_name: "Union[builtins.bytes,os.PathLike[Any]]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "os.PathLike[Any]"
              args {
                pretty_printed_name: "Any"
                kind: ANY
              }
              fully_qualified_name: "os.PathLike"
            }
          }
          fully_qualified_name: "builtins.list"
        }
        args {
          pretty_printed_name: "builtins.list[Union[builtins.str,os.PathLike[Any]]]"
          args {
            pretty_printed_name: "Union[builtins.str,os.PathLike[Any]]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "os.PathLike[Any]"
              args {
                pretty_printed_name: "Any"
                kind: ANY
              }
              fully_qualified_name: "os.PathLike"
            }
          }
          fully_qualified_name: "builtins.list"
        }
        args {
          pretty_printed_name: "builtins.list[Union[builtins.bytes,builtins.str,os.PathLike[Any]]]"
          args {
            pretty_printed_name: "Union[builtins.bytes,builtins.str,os.PathLike[Any]]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "os.PathLike[Any]"
              args {
                pretty_printed_name: "Any"
                kind: ANY
              }
              fully_qualified_name: "os.PathLike"
            }
          }
          fully_qualified_name: "builtins.list"
        }
      }
      fully_qualified_name: "os._ExecVArgs"
    }
  }
  parameters {
    name: "env"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[typing.Mapping[builtins.bytes,Union[builtins.bytes,builtins.str]],typing.Mapping[builtins.str,Union[builtins.bytes,builtins.str]]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[typing.Mapping[builtins.bytes,Union[builtins.bytes,builtins.str]],typing.Mapping[builtins.str,Union[builtins.bytes,builtins.str]]]"
        kind: UNION
        args {
          pretty_printed_name: "typing.Mapping[builtins.bytes,Union[builtins.bytes,builtins.str]]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "Union[builtins.bytes,builtins.str]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          fully_qualified_name: "typing.Mapping"
        }
        args {
          pretty_printed_name: "typing.Mapping[builtins.str,Union[builtins.bytes,builtins.str]]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "Union[builtins.bytes,builtins.str]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          fully_qualified_name: "typing.Mapping"
        }
      }
      fully_qualified_name: "os._ExecEnv"
    }
  }
}
functions {
  name: "system"
  fully_qualified_name: "os.system"
  return_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
  parameters {
    name: "command"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "os.PathLike"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "os.PathLike"
        }
      }
      fully_qualified_name: "_typeshed.StrOrBytesPath"
    }
  }
}
functions {
  name: "times"
  fully_qualified_name: "os.times"
  return_annotation {
    pretty_printed_name: "TypeAlias[Tuple[builtins.float,builtins.float,builtins.float,builtins.float,builtins.float]]"
    kind: TYPE_ALIAS
    args {
      pretty_printed_name: "Tuple[builtins.float,builtins.float,builtins.float,builtins.float,builtins.float]"
      kind: TUPLE
      args {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
      args {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
      args {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
      args {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
      args {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
    }
    fully_qualified_name: "os.times_result"
  }
}
functions {
  name: "waitpid"
  fully_qualified_name: "os.waitpid"
  return_annotation {
    pretty_printed_name: "Tuple[builtins.int,builtins.int]"
    kind: TUPLE
    args {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    args {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
}
functions {
  name: "spawnlp"
  fully_qualified_name: "os.spawnlp"
  return_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
  parameters {
    name: "mode"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "file"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "os.PathLike"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "os.PathLike"
        }
      }
      fully_qualified_name: "_typeshed.StrOrBytesPath"
    }
  }
  parameters {
    name: "arg0"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "os.PathLike"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "os.PathLike"
        }
      }
      fully_qualified_name: "_typeshed.StrOrBytesPath"
    }
  }
  parameters {
    name: "args"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "os.PathLike"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "os.PathLike"
        }
      }
      fully_qualified_name: "_typeshed.StrOrBytesPath"
    }
  }
}
functions {
  name: "spawnlpe"
  fully_qualified_name: "os.spawnlpe"
  return_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
  parameters {
    name: "mode"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "file"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "os.PathLike"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "os.PathLike"
        }
      }
      fully_qualified_name: "_typeshed.StrOrBytesPath"
    }
  }
  parameters {
    name: "arg0"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "os.PathLike"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "os.PathLike"
        }
      }
      fully_qualified_name: "_typeshed.StrOrBytesPath"
    }
  }
  parameters {
    name: "args"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
}
functions {
  name: "spawnvp"
  fully_qualified_name: "os.spawnvp"
  return_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
  parameters {
    name: "mode"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "file"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "os.PathLike"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "os.PathLike"
        }
      }
      fully_qualified_name: "_typeshed.StrOrBytesPath"
    }
  }
  parameters {
    name: "args"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.tuple[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]],builtins.list[builtins.bytes],builtins.list[builtins.str],builtins.list[os.PathLike[Any]],builtins.list[Union[builtins.bytes,builtins.str]],builtins.list[Union[builtins.bytes,os.PathLike[Any]]],builtins.list[Union[builtins.str,os.PathLike[Any]]],builtins.list[Union[builtins.bytes,builtins.str,os.PathLike[Any]]]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.tuple[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]],builtins.list[builtins.bytes],builtins.list[builtins.str],builtins.list[os.PathLike[Any]],builtins.list[Union[builtins.bytes,builtins.str]],builtins.list[Union[builtins.bytes,os.PathLike[Any]]],builtins.list[Union[builtins.str,os.PathLike[Any]]],builtins.list[Union[builtins.bytes,builtins.str,os.PathLike[Any]]]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.tuple[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]"
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              args {
                pretty_printed_name: "os.PathLike[builtins.str]"
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
                fully_qualified_name: "os.PathLike"
              }
              args {
                pretty_printed_name: "os.PathLike[builtins.bytes]"
                args {
                  pretty_printed_name: "builtins.bytes"
                  fully_qualified_name: "builtins.bytes"
                }
                fully_qualified_name: "os.PathLike"
              }
            }
            fully_qualified_name: "_typeshed.StrOrBytesPath"
          }
          fully_qualified_name: "builtins.tuple"
        }
        args {
          pretty_printed_name: "builtins.list[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "builtins.list"
        }
        args {
          pretty_printed_name: "builtins.list[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "builtins.list"
        }
        args {
          pretty_printed_name: "builtins.list[os.PathLike[Any]]"
          args {
            pretty_printed_name: "os.PathLike[Any]"
            args {
              pretty_printed_name: "Any"
              kind: ANY
            }
            fully_qualified_name: "os.PathLike"
          }
          fully_qualified_name: "builtins.list"
        }
        args {
          pretty_printed_name: "builtins.list[Union[builtins.bytes,builtins.str]]"
          args {
            pretty_printed_name: "Union[builtins.bytes,builtins.str]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          fully_qualified_name: "builtins.list"
        }
        args {
          pretty_printed_name: "builtins.list[Union[builtins.bytes,os.PathLike[Any]]]"
          args {
            pretty_printed_name: "Union[builtins.bytes,os.PathLike[Any]]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "os.PathLike[Any]"
              args {
                pretty_printed_name: "Any"
                kind: ANY
              }
              fully_qualified_name: "os.PathLike"
            }
          }
          fully_qualified_name: "builtins.list"
        }
        args {
          pretty_printed_name: "builtins.list[Union[builtins.str,os.PathLike[Any]]]"
          args {
            pretty_printed_name: "Union[builtins.str,os.PathLike[Any]]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "os.PathLike[Any]"
              args {
                pretty_printed_name: "Any"
                kind: ANY
              }
              fully_qualified_name: "os.PathLike"
            }
          }
          fully_qualified_name: "builtins.list"
        }
        args {
          pretty_printed_name: "builtins.list[Union[builtins.bytes,builtins.str,os.PathLike[Any]]]"
          args {
            pretty_printed_name: "Union[builtins.bytes,builtins.str,os.PathLike[Any]]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "os.PathLike[Any]"
              args {
                pretty_printed_name: "Any"
                kind: ANY
              }
              fully_qualified_name: "os.PathLike"
            }
          }
          fully_qualified_name: "builtins.list"
        }
      }
      fully_qualified_name: "os._ExecVArgs"
    }
  }
}
functions {
  name: "spawnvpe"
  fully_qualified_name: "os.spawnvpe"
  return_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
  parameters {
    name: "mode"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "file"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "os.PathLike"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "os.PathLike"
        }
      }
      fully_qualified_name: "_typeshed.StrOrBytesPath"
    }
  }
  parameters {
    name: "args"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.tuple[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]],builtins.list[builtins.bytes],builtins.list[builtins.str],builtins.list[os.PathLike[Any]],builtins.list[Union[builtins.bytes,builtins.str]],builtins.list[Union[builtins.bytes,os.PathLike[Any]]],builtins.list[Union[builtins.str,os.PathLike[Any]]],builtins.list[Union[builtins.bytes,builtins.str,os.PathLike[Any]]]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.tuple[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]],builtins.list[builtins.bytes],builtins.list[builtins.str],builtins.list[os.PathLike[Any]],builtins.list[Union[builtins.bytes,builtins.str]],builtins.list[Union[builtins.bytes,os.PathLike[Any]]],builtins.list[Union[builtins.str,os.PathLike[Any]]],builtins.list[Union[builtins.bytes,builtins.str,os.PathLike[Any]]]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.tuple[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]"
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              args {
                pretty_printed_name: "os.PathLike[builtins.str]"
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
                fully_qualified_name: "os.PathLike"
              }
              args {
                pretty_printed_name: "os.PathLike[builtins.bytes]"
                args {
                  pretty_printed_name: "builtins.bytes"
                  fully_qualified_name: "builtins.bytes"
                }
                fully_qualified_name: "os.PathLike"
              }
            }
            fully_qualified_name: "_typeshed.StrOrBytesPath"
          }
          fully_qualified_name: "builtins.tuple"
        }
        args {
          pretty_printed_name: "builtins.list[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "builtins.list"
        }
        args {
          pretty_printed_name: "builtins.list[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "builtins.list"
        }
        args {
          pretty_printed_name: "builtins.list[os.PathLike[Any]]"
          args {
            pretty_printed_name: "os.PathLike[Any]"
            args {
              pretty_printed_name: "Any"
              kind: ANY
            }
            fully_qualified_name: "os.PathLike"
          }
          fully_qualified_name: "builtins.list"
        }
        args {
          pretty_printed_name: "builtins.list[Union[builtins.bytes,builtins.str]]"
          args {
            pretty_printed_name: "Union[builtins.bytes,builtins.str]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          fully_qualified_name: "builtins.list"
        }
        args {
          pretty_printed_name: "builtins.list[Union[builtins.bytes,os.PathLike[Any]]]"
          args {
            pretty_printed_name: "Union[builtins.bytes,os.PathLike[Any]]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "os.PathLike[Any]"
              args {
                pretty_printed_name: "Any"
                kind: ANY
              }
              fully_qualified_name: "os.PathLike"
            }
          }
          fully_qualified_name: "builtins.list"
        }
        args {
          pretty_printed_name: "builtins.list[Union[builtins.str,os.PathLike[Any]]]"
          args {
            pretty_printed_name: "Union[builtins.str,os.PathLike[Any]]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "os.PathLike[Any]"
              args {
                pretty_printed_name: "Any"
                kind: ANY
              }
              fully_qualified_name: "os.PathLike"
            }
          }
          fully_qualified_name: "builtins.list"
        }
        args {
          pretty_printed_name: "builtins.list[Union[builtins.bytes,builtins.str,os.PathLike[Any]]]"
          args {
            pretty_printed_name: "Union[builtins.bytes,builtins.str,os.PathLike[Any]]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "os.PathLike[Any]"
              args {
                pretty_printed_name: "Any"
                kind: ANY
              }
              fully_qualified_name: "os.PathLike"
            }
          }
          fully_qualified_name: "builtins.list"
        }
      }
      fully_qualified_name: "os._ExecVArgs"
    }
  }
  parameters {
    name: "env"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[typing.Mapping[builtins.bytes,Union[builtins.bytes,builtins.str]],typing.Mapping[builtins.str,Union[builtins.bytes,builtins.str]]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[typing.Mapping[builtins.bytes,Union[builtins.bytes,builtins.str]],typing.Mapping[builtins.str,Union[builtins.bytes,builtins.str]]]"
        kind: UNION
        args {
          pretty_printed_name: "typing.Mapping[builtins.bytes,Union[builtins.bytes,builtins.str]]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "Union[builtins.bytes,builtins.str]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          fully_qualified_name: "typing.Mapping"
        }
        args {
          pretty_printed_name: "typing.Mapping[builtins.str,Union[builtins.bytes,builtins.str]]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "Union[builtins.bytes,builtins.str]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          fully_qualified_name: "typing.Mapping"
        }
      }
      fully_qualified_name: "os._ExecEnv"
    }
  }
}
functions {
  name: "wait"
  fully_qualified_name: "os.wait"
  return_annotation {
    pretty_printed_name: "Tuple[builtins.int,builtins.int]"
    kind: TUPLE
    args {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    args {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
}
functions {
  name: "waitid"
  fully_qualified_name: "os.waitid"
  return_annotation {
    pretty_printed_name: "TypeAlias[Tuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]]"
    kind: TYPE_ALIAS
    args {
      pretty_printed_name: "Tuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]"
      kind: TUPLE
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    fully_qualified_name: "os.waitid_result"
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
}
functions {
  name: "wait3"
  fully_qualified_name: "os.wait3"
  return_annotation {
    pretty_printed_name: "Tuple[builtins.int,builtins.int,Any]"
    kind: TUPLE
    args {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    args {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    args {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  parameters {
    name: "options"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
}
functions {
  name: "wait4"
  fully_qualified_name: "os.wait4"
  return_annotation {
    pretty_printed_name: "Tuple[builtins.int,builtins.int,Any]"
    kind: TUPLE
    args {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    args {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    args {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  parameters {
    name: "pid"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "options"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
}
functions {
  name: "WCOREDUMP"
  fully_qualified_name: "os.WCOREDUMP"
  return_annotation {
    pretty_printed_name: "builtins.bool"
    fully_qualified_name: "builtins.bool"
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
}
functions {
  name: "WIFCONTINUED"
  fully_qualified_name: "os.WIFCONTINUED"
  return_annotation {
    pretty_printed_name: "builtins.bool"
    fully_qualified_name: "builtins.bool"
  }
  parameters {
    name: "status"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
}
functions {
  name: "WIFSTOPPED"
  fully_qualified_name: "os.WIFSTOPPED"
  return_annotation {
    pretty_printed_name: "builtins.bool"
    fully_qualified_name: "builtins.bool"
  }
  parameters {
    name: "status"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
}
functions {
  name: "WIFSIGNALED"
  fully_qualified_name: "os.WIFSIGNALED"
  return_annotation {
    pretty_printed_name: "builtins.bool"
    fully_qualified_name: "builtins.bool"
  }
  parameters {
    name: "status"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
}
functions {
  name: "WIFEXITED"
  fully_qualified_name: "os.WIFEXITED"
  return_annotation {
    pretty_printed_name: "builtins.bool"
    fully_qualified_name: "builtins.bool"
  }
  parameters {
    name: "status"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
}
functions {
  name: "WEXITSTATUS"
  fully_qualified_name: "os.WEXITSTATUS"
  return_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
  parameters {
    name: "status"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
}
functions {
  name: "WSTOPSIG"
  fully_qualified_name: "os.WSTOPSIG"
  return_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
  parameters {
    name: "status"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
}
functions {
  name: "WTERMSIG"
  fully_qualified_name: "os.WTERMSIG"
  return_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
  parameters {
    name: "status"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
}
functions {
  name: "posix_spawn"
  fully_qualified_name: "os.posix_spawn"
  return_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
  parameters {
    name: "path"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "os.PathLike"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "os.PathLike"
        }
      }
      fully_qualified_name: "_typeshed.StrOrBytesPath"
    }
  }
  parameters {
    name: "argv"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.tuple[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]],builtins.list[builtins.bytes],builtins.list[builtins.str],builtins.list[os.PathLike[Any]],builtins.list[Union[builtins.bytes,builtins.str]],builtins.list[Union[builtins.bytes,os.PathLike[Any]]],builtins.list[Union[builtins.str,os.PathLike[Any]]],builtins.list[Union[builtins.bytes,builtins.str,os.PathLike[Any]]]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.tuple[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]],builtins.list[builtins.bytes],builtins.list[builtins.str],builtins.list[os.PathLike[Any]],builtins.list[Union[builtins.bytes,builtins.str]],builtins.list[Union[builtins.bytes,os.PathLike[Any]]],builtins.list[Union[builtins.str,os.PathLike[Any]]],builtins.list[Union[builtins.bytes,builtins.str,os.PathLike[Any]]]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.tuple[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]"
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              args {
                pretty_printed_name: "os.PathLike[builtins.str]"
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
                fully_qualified_name: "os.PathLike"
              }
              args {
                pretty_printed_name: "os.PathLike[builtins.bytes]"
                args {
                  pretty_printed_name: "builtins.bytes"
                  fully_qualified_name: "builtins.bytes"
                }
                fully_qualified_name: "os.PathLike"
              }
            }
            fully_qualified_name: "_typeshed.StrOrBytesPath"
          }
          fully_qualified_name: "builtins.tuple"
        }
        args {
          pretty_printed_name: "builtins.list[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "builtins.list"
        }
        args {
          pretty_printed_name: "builtins.list[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "builtins.list"
        }
        args {
          pretty_printed_name: "builtins.list[os.PathLike[Any]]"
          args {
            pretty_printed_name: "os.PathLike[Any]"
            args {
              pretty_printed_name: "Any"
              kind: ANY
            }
            fully_qualified_name: "os.PathLike"
          }
          fully_qualified_name: "builtins.list"
        }
        args {
          pretty_printed_name: "builtins.list[Union[builtins.bytes,builtins.str]]"
          args {
            pretty_printed_name: "Union[builtins.bytes,builtins.str]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          fully_qualified_name: "builtins.list"
        }
        args {
          pretty_printed_name: "builtins.list[Union[builtins.bytes,os.PathLike[Any]]]"
          args {
            pretty_printed_name: "Union[builtins.bytes,os.PathLike[Any]]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "os.PathLike[Any]"
              args {
                pretty_printed_name: "Any"
                kind: ANY
              }
              fully_qualified_name: "os.PathLike"
            }
          }
          fully_qualified_name: "builtins.list"
        }
        args {
          pretty_printed_name: "builtins.list[Union[builtins.str,os.PathLike[Any]]]"
          args {
            pretty_printed_name: "Union[builtins.str,os.PathLike[Any]]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "os.PathLike[Any]"
              args {
                pretty_printed_name: "Any"
                kind: ANY
              }
              fully_qualified_name: "os.PathLike"
            }
          }
          fully_qualified_name: "builtins.list"
        }
        args {
          pretty_printed_name: "builtins.list[Union[builtins.bytes,builtins.str,os.PathLike[Any]]]"
          args {
            pretty_printed_name: "Union[builtins.bytes,builtins.str,os.PathLike[Any]]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "os.PathLike[Any]"
              args {
                pretty_printed_name: "Any"
                kind: ANY
              }
              fully_qualified_name: "os.PathLike"
            }
          }
          fully_qualified_name: "builtins.list"
        }
      }
      fully_qualified_name: "os._ExecVArgs"
    }
  }
  parameters {
    name: "env"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[typing.Mapping[builtins.bytes,Union[builtins.bytes,builtins.str]],typing.Mapping[builtins.str,Union[builtins.bytes,builtins.str]]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[typing.Mapping[builtins.bytes,Union[builtins.bytes,builtins.str]],typing.Mapping[builtins.str,Union[builtins.bytes,builtins.str]]]"
        kind: UNION
        args {
          pretty_printed_name: "typing.Mapping[builtins.bytes,Union[builtins.bytes,builtins.str]]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "Union[builtins.bytes,builtins.str]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          fully_qualified_name: "typing.Mapping"
        }
        args {
          pretty_printed_name: "typing.Mapping[builtins.str,Union[builtins.bytes,builtins.str]]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "Union[builtins.bytes,builtins.str]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          fully_qualified_name: "typing.Mapping"
        }
      }
      fully_qualified_name: "os._ExecEnv"
    }
  }
  parameters {
    name: "file_actions"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[typing.Sequence[builtins.tuple[Any]],None]"
      kind: UNION
      args {
        pretty_printed_name: "typing.Sequence[builtins.tuple[Any]]"
        args {
          pretty_printed_name: "builtins.tuple[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "builtins.tuple"
        }
        fully_qualified_name: "typing.Sequence"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  parameters {
    name: "setpgroup"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.int,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  parameters {
    name: "resetids"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
  parameters {
    name: "setsid"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
  parameters {
    name: "setsigmask"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "typing.Iterable[builtins.int]"
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      fully_qualified_name: "typing.Iterable"
    }
  }
  parameters {
    name: "setsigdef"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "typing.Iterable[builtins.int]"
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      fully_qualified_name: "typing.Iterable"
    }
  }
  parameters {
    name: "scheduler"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Tuple[Any,TypeAlias[Tuple[builtins.int]]],None]"
      kind: UNION
      args {
        pretty_printed_name: "Tuple[Any,TypeAlias[Tuple[builtins.int]]]"
        kind: TUPLE
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "TypeAlias[Tuple[builtins.int]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Tuple[builtins.int]"
            kind: TUPLE
            args {
              pretty_printed_name: "builtins.int"
              fully_qualified_name: "builtins.int"
            }
          }
          fully_qualified_name: "os.sched_param"
        }
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
}
functions {
  name: "posix_spawnp"
  fully_qualified_name: "os.posix_spawnp"
  return_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
  parameters {
    name: "path"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "os.PathLike"
        }
        args {
          pretty_printed_name: "os.PathLike[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "os.PathLike"
        }
      }
      fully_qualified_name: "_typeshed.StrOrBytesPath"
    }
  }
  parameters {
    name: "argv"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[builtins.tuple[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]],builtins.list[builtins.bytes],builtins.list[builtins.str],builtins.list[os.PathLike[Any]],builtins.list[Union[builtins.bytes,builtins.str]],builtins.list[Union[builtins.bytes,os.PathLike[Any]]],builtins.list[Union[builtins.str,os.PathLike[Any]]],builtins.list[Union[builtins.bytes,builtins.str,os.PathLike[Any]]]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[builtins.tuple[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]],builtins.list[builtins.bytes],builtins.list[builtins.str],builtins.list[os.PathLike[Any]],builtins.list[Union[builtins.bytes,builtins.str]],builtins.list[Union[builtins.bytes,os.PathLike[Any]]],builtins.list[Union[builtins.str,os.PathLike[Any]]],builtins.list[Union[builtins.bytes,builtins.str,os.PathLike[Any]]]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.tuple[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]"
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              args {
                pretty_printed_name: "os.PathLike[builtins.str]"
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
                fully_qualified_name: "os.PathLike"
              }
              args {
                pretty_printed_name: "os.PathLike[builtins.bytes]"
                args {
                  pretty_printed_name: "builtins.bytes"
                  fully_qualified_name: "builtins.bytes"
                }
                fully_qualified_name: "os.PathLike"
              }
            }
            fully_qualified_name: "_typeshed.StrOrBytesPath"
          }
          fully_qualified_name: "builtins.tuple"
        }
        args {
          pretty_printed_name: "builtins.list[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "builtins.list"
        }
        args {
          pretty_printed_name: "builtins.list[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "builtins.list"
        }
        args {
          pretty_printed_name: "builtins.list[os.PathLike[Any]]"
          args {
            pretty_printed_name: "os.PathLike[Any]"
            args {
              pretty_printed_name: "Any"
              kind: ANY
            }
            fully_qualified_name: "os.PathLike"
          }
          fully_qualified_name: "builtins.list"
        }
        args {
          pretty_printed_name: "builtins.list[Union[builtins.bytes,builtins.str]]"
          args {
            pretty_printed_name: "Union[builtins.bytes,builtins.str]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          fully_qualified_name: "builtins.list"
        }
        args {
          pretty_printed_name: "builtins.list[Union[builtins.bytes,os.PathLike[Any]]]"
          args {
            pretty_printed_name: "Union[builtins.bytes,os.PathLike[Any]]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "os.PathLike[Any]"
              args {
                pretty_printed_name: "Any"
                kind: ANY
              }
              fully_qualified_name: "os.PathLike"
            }
          }
          fully_qualified_name: "builtins.list"
        }
        args {
          pretty_printed_name: "builtins.list[Union[builtins.str,os.PathLike[Any]]]"
          args {
            pretty_printed_name: "Union[builtins.str,os.PathLike[Any]]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "os.PathLike[Any]"
              args {
                pretty_printed_name: "Any"
                kind: ANY
              }
              fully_qualified_name: "os.PathLike"
            }
          }
          fully_qualified_name: "builtins.list"
        }
        args {
          pretty_printed_name: "builtins.list[Union[builtins.bytes,builtins.str,os.PathLike[Any]]]"
          args {
            pretty_printed_name: "Union[builtins.bytes,builtins.str,os.PathLike[Any]]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "os.PathLike[Any]"
              args {
                pretty_printed_name: "Any"
                kind: ANY
              }
              fully_qualified_name: "os.PathLike"
            }
          }
          fully_qualified_name: "builtins.list"
        }
      }
      fully_qualified_name: "os._ExecVArgs"
    }
  }
  parameters {
    name: "env"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[typing.Mapping[builtins.bytes,Union[builtins.bytes,builtins.str]],typing.Mapping[builtins.str,Union[builtins.bytes,builtins.str]]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[typing.Mapping[builtins.bytes,Union[builtins.bytes,builtins.str]],typing.Mapping[builtins.str,Union[builtins.bytes,builtins.str]]]"
        kind: UNION
        args {
          pretty_printed_name: "typing.Mapping[builtins.bytes,Union[builtins.bytes,builtins.str]]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "Union[builtins.bytes,builtins.str]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          fully_qualified_name: "typing.Mapping"
        }
        args {
          pretty_printed_name: "typing.Mapping[builtins.str,Union[builtins.bytes,builtins.str]]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "Union[builtins.bytes,builtins.str]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          fully_qualified_name: "typing.Mapping"
        }
      }
      fully_qualified_name: "os._ExecEnv"
    }
  }
  parameters {
    name: "file_actions"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[typing.Sequence[builtins.tuple[Any]],None]"
      kind: UNION
      args {
        pretty_printed_name: "typing.Sequence[builtins.tuple[Any]]"
        args {
          pretty_printed_name: "builtins.tuple[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "builtins.tuple"
        }
        fully_qualified_name: "typing.Sequence"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  parameters {
    name: "setpgroup"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.int,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  parameters {
    name: "resetids"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
  parameters {
    name: "setsid"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
  parameters {
    name: "setsigmask"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "typing.Iterable[builtins.int]"
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      fully_qualified_name: "typing.Iterable"
    }
  }
  parameters {
    name: "setsigdef"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "typing.Iterable[builtins.int]"
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      fully_qualified_name: "typing.Iterable"
    }
  }
  parameters {
    name: "scheduler"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Tuple[Any,TypeAlias[Tuple[builtins.int]]],None]"
      kind: UNION
      args {
        pretty_printed_name: "Tuple[Any,TypeAlias[Tuple[builtins.int]]]"
        kind: TUPLE
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "TypeAlias[Tuple[builtins.int]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Tuple[builtins.int]"
            kind: TUPLE
            args {
              pretty_printed_name: "builtins.int"
              fully_qualified_name: "builtins.int"
            }
          }
          fully_qualified_name: "os.sched_param"
        }
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
}
functions {
  name: "sched_get_priority_min"
  fully_qualified_name: "os.sched_get_priority_min"
  return_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
  parameters {
    name: "policy"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
}
functions {
  name: "sched_get_priority_max"
  fully_qualified_name: "os.sched_get_priority_max"
  return_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
  parameters {
    name: "policy"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
}
functions {
  name: "sched_yield"
  fully_qualified_name: "os.sched_yield"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
}
functions {
  name: "sched_setscheduler"
  fully_qualified_name: "os.sched_setscheduler"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "TypeAlias[Tuple[builtins.int]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Tuple[builtins.int]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
      fully_qualified_name: "os.sched_param"
    }
  }
}
functions {
  name: "sched_getscheduler"
  fully_qualified_name: "os.sched_getscheduler"
  return_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
}
functions {
  name: "sched_rr_get_interval"
  fully_qualified_name: "os.sched_rr_get_interval"
  return_annotation {
    pretty_printed_name: "builtins.float"
    fully_qualified_name: "builtins.float"
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
}
functions {
  name: "sched_setparam"
  fully_qualified_name: "os.sched_setparam"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "TypeAlias[Tuple[builtins.int]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Tuple[builtins.int]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
      fully_qualified_name: "os.sched_param"
    }
  }
}
functions {
  name: "sched_getparam"
  fully_qualified_name: "os.sched_getparam"
  return_annotation {
    pretty_printed_name: "TypeAlias[Tuple[builtins.int]]"
    kind: TYPE_ALIAS
    args {
      pretty_printed_name: "Tuple[builtins.int]"
      kind: TUPLE
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    fully_qualified_name: "os.sched_param"
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
}
functions {
  name: "sched_setaffinity"
  fully_qualified_name: "os.sched_setaffinity"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "typing.Iterable[builtins.int]"
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      fully_qualified_name: "typing.Iterable"
    }
  }
}
functions {
  name: "sched_getaffinity"
  fully_qualified_name: "os.sched_getaffinity"
  return_annotation {
    pretty_printed_name: "builtins.set[builtins.int]"
    args {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    fully_qualified_name: "builtins.set"
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
}
functions {
  name: "cpu_count"
  fully_qualified_name: "os.cpu_count"
  return_annotation {
    pretty_printed_name: "Union[builtins.int,None]"
    kind: UNION
    args {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    args {
      pretty_printed_name: "None"
      kind: NONE
    }
  }
}
functions {
  name: "confstr"
  fully_qualified_name: "os.confstr"
  return_annotation {
    pretty_printed_name: "Union[builtins.str,None]"
    kind: UNION
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    args {
      pretty_printed_name: "None"
      kind: NONE
    }
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "Union[builtins.str,builtins.int]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
  }
}
functions {
  name: "getloadavg"
  fully_qualified_name: "os.getloadavg"
  return_annotation {
    pretty_printed_name: "Tuple[builtins.float,builtins.float,builtins.float]"
    kind: TUPLE
    args {
      pretty_printed_name: "builtins.float"
      fully_qualified_name: "builtins.float"
    }
    args {
      pretty_printed_name: "builtins.float"
      fully_qualified_name: "builtins.float"
    }
    args {
      pretty_printed_name: "builtins.float"
      fully_qualified_name: "builtins.float"
    }
  }
}
functions {
  name: "sysconf"
  fully_qualified_name: "os.sysconf"
  return_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "Union[builtins.str,builtins.int]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
  }
}
functions {
  name: "getrandom"
  fully_qualified_name: "os.getrandom"
  return_annotation {
    pretty_printed_name: "builtins.bytes"
    fully_qualified_name: "builtins.bytes"
  }
  parameters {
    name: "size"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "flags"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
}
functions {
  name: "urandom"
  fully_qualified_name: "os.urandom"
  return_annotation {
    pretty_printed_name: "builtins.bytes"
    fully_qualified_name: "builtins.bytes"
  }
  parameters {
    name: "__"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
}
functions {
  name: "register_at_fork"
  fully_qualified_name: "os.register_at_fork"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "before"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[CallableType[builtins.function],None]"
      kind: UNION
      args {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  parameters {
    name: "after_in_parent"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[CallableType[builtins.function],None]"
      kind: UNION
      args {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  parameters {
    name: "after_in_child"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[CallableType[builtins.function],None]"
      kind: UNION
      args {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
}
functions {
  name: "memfd_create"
  fully_qualified_name: "os.memfd_create"
  return_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
  parameters {
    name: "name"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  parameters {
    name: "flags"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
}
functions {
  name: "copy_file_range"
  fully_qualified_name: "os.copy_file_range"
  return_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
  parameters {
    name: "src"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "dst"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "count"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "offset_src"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.int,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  parameters {
    name: "offset_dst"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.int,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
}
overloaded_functions {
  name: "listdir"
  fullname: "os.listdir"
  definitions {
    name: "listdir"
    fully_qualified_name: "os.listdir"
    return_annotation {
      pretty_printed_name: "builtins.list[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "path"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]],None]"
        kind: UNION
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,os.PathLike[builtins.str]]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "os.PathLike[builtins.str]"
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              fully_qualified_name: "os.PathLike"
            }
          }
          fully_qualified_name: "_typeshed.StrPath"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "listdir"
    fully_qualified_name: "os.listdir"
    return_annotation {
      pretty_printed_name: "builtins.list[builtins.bytes]"
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "path"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,os.PathLike[builtins.bytes]]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,os.PathLike[builtins.bytes]]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "os.PathLike[builtins.bytes]"
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            fully_qualified_name: "os.PathLike"
          }
        }
        fully_qualified_name: "_typeshed.BytesPath"
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "listdir"
    fully_qualified_name: "os.listdir"
    return_annotation {
      pretty_printed_name: "builtins.list[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "path"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
}
overloaded_functions {
  name: "fspath"
  fullname: "os.fspath"
  definitions {
    name: "fspath"
    fully_qualified_name: "os.fspath"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "path"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "fspath"
    fully_qualified_name: "os.fspath"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "path"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "fspath"
    fully_qualified_name: "os.fspath"
    return_annotation {
      pretty_printed_name: "typing.AnyStr"
      kind: TYPE_VAR
    }
    parameters {
      name: "path"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "os.PathLike[typing.AnyStr]"
        args {
          pretty_printed_name: "typing.AnyStr"
          kind: TYPE_VAR
        }
        fully_qualified_name: "os.PathLike"
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
}
overloaded_functions {
  name: "getenv"
  fullname: "os.getenv"
  definitions {
    name: "getenv"
    fully_qualified_name: "os.getenv"
    return_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "getenv"
    fully_qualified_name: "os.getenv"
    return_annotation {
      pretty_printed_name: "Union[builtins.str,os._T]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "os._T"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "default"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "os._T"
        kind: TYPE_VAR
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
}
overloaded_functions {
  name: "getenvb"
  fullname: "os.getenvb"
  definitions {
    name: "getenvb"
    fully_qualified_name: "os.getenvb"
    return_annotation {
      pretty_printed_name: "Union[builtins.bytes,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "getenvb"
    fully_qualified_name: "os.getenvb"
    return_annotation {
      pretty_printed_name: "Union[builtins.bytes,os._T]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
      args {
        pretty_printed_name: "os._T"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    parameters {
      name: "default"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "os._T"
        kind: TYPE_VAR
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
}
overloaded_functions {
  name: "fdopen"
  fullname: "os.fdopen"
  definitions {
    name: "fdopen"
    fully_qualified_name: "os.fdopen"
    return_annotation {
      pretty_printed_name: "io.TextIOWrapper"
      fully_qualified_name: "io.TextIOWrapper"
    }
    parameters {
      name: "fd"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "mode"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]]"
          kind: UNION
          args {
            pretty_printed_name: "TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]"
              kind: UNION
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
            }
            fully_qualified_name: "_typeshed.OpenTextModeUpdating"
          }
          args {
            pretty_printed_name: "TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]"
              kind: UNION
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
            }
            fully_qualified_name: "_typeshed.OpenTextModeWriting"
          }
          args {
            pretty_printed_name: "TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]"
              kind: UNION
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
            }
            fully_qualified_name: "_typeshed.OpenTextModeReading"
          }
        }
        fully_qualified_name: "_typeshed.OpenTextMode"
      }
    }
    parameters {
      name: "buffering"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "encoding"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "errors"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "newline"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "closefd"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    parameters {
      name: "opener"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[TypeAlias[CallableType[builtins.function]],None]"
        kind: UNION
        args {
          pretty_printed_name: "TypeAlias[CallableType[builtins.function]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "CallableType[builtins.function]"
            kind: CALLABLE
            args {
              pretty_printed_name: "builtins.function"
              fully_qualified_name: "builtins.function"
            }
          }
          fully_qualified_name: "os._Opener"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "fdopen"
    fully_qualified_name: "os.fdopen"
    return_annotation {
      pretty_printed_name: "io.FileIO"
      fully_qualified_name: "io.FileIO"
    }
    parameters {
      name: "fd"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "mode"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]]"
          kind: UNION
          args {
            pretty_printed_name: "TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]"
              kind: UNION
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
            }
            fully_qualified_name: "_typeshed.OpenBinaryModeUpdating"
          }
          args {
            pretty_printed_name: "TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]"
              kind: UNION
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
            }
            fully_qualified_name: "_typeshed.OpenBinaryModeReading"
          }
          args {
            pretty_printed_name: "TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]"
              kind: UNION
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
            }
            fully_qualified_name: "_typeshed.OpenBinaryModeWriting"
          }
        }
        fully_qualified_name: "_typeshed.OpenBinaryMode"
      }
    }
    parameters {
      name: "buffering"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Literal[builtins.int]"
        kind: LITERAL
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
    }
    parameters {
      name: "encoding"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "errors"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "newline"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "closefd"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    parameters {
      name: "opener"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[TypeAlias[CallableType[builtins.function]],None]"
        kind: UNION
        args {
          pretty_printed_name: "TypeAlias[CallableType[builtins.function]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "CallableType[builtins.function]"
            kind: CALLABLE
            args {
              pretty_printed_name: "builtins.function"
              fully_qualified_name: "builtins.function"
            }
          }
          fully_qualified_name: "os._Opener"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "fdopen"
    fully_qualified_name: "os.fdopen"
    return_annotation {
      pretty_printed_name: "io.BufferedRandom"
      fully_qualified_name: "io.BufferedRandom"
    }
    parameters {
      name: "fd"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "mode"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]"
          kind: UNION
          args {
            pretty_printed_name: "Literal[builtins.str]"
            kind: LITERAL
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          args {
            pretty_printed_name: "Literal[builtins.str]"
            kind: LITERAL
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          args {
            pretty_printed_name: "Literal[builtins.str]"
            kind: LITERAL
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          args {
            pretty_printed_name: "Literal[builtins.str]"
            kind: LITERAL
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          args {
            pretty_printed_name: "Literal[builtins.str]"
            kind: LITERAL
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          args {
            pretty_printed_name: "Literal[builtins.str]"
            kind: LITERAL
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          args {
            pretty_printed_name: "Literal[builtins.str]"
            kind: LITERAL
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          args {
            pretty_printed_name: "Literal[builtins.str]"
            kind: LITERAL
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          args {
            pretty_printed_name: "Literal[builtins.str]"
            kind: LITERAL
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          args {
            pretty_printed_name: "Literal[builtins.str]"
            kind: LITERAL
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          args {
            pretty_printed_name: "Literal[builtins.str]"
            kind: LITERAL
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          args {
            pretty_printed_name: "Literal[builtins.str]"
            kind: LITERAL
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          args {
            pretty_printed_name: "Literal[builtins.str]"
            kind: LITERAL
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          args {
            pretty_printed_name: "Literal[builtins.str]"
            kind: LITERAL
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          args {
            pretty_printed_name: "Literal[builtins.str]"
            kind: LITERAL
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          args {
            pretty_printed_name: "Literal[builtins.str]"
            kind: LITERAL
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          args {
            pretty_printed_name: "Literal[builtins.str]"
            kind: LITERAL
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          args {
            pretty_printed_name: "Literal[builtins.str]"
            kind: LITERAL
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          args {
            pretty_printed_name: "Literal[builtins.str]"
            kind: LITERAL
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          args {
            pretty_printed_name: "Literal[builtins.str]"
            kind: LITERAL
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          args {
            pretty_printed_name: "Literal[builtins.str]"
            kind: LITERAL
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          args {
            pretty_printed_name: "Literal[builtins.str]"
            kind: LITERAL
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          args {
            pretty_printed_name: "Literal[builtins.str]"
            kind: LITERAL
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          args {
            pretty_printed_name: "Literal[builtins.str]"
            kind: LITERAL
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
        }
        fully_qualified_name: "_typeshed.OpenBinaryModeUpdating"
      }
    }
    parameters {
      name: "buffering"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Literal[builtins.int],Literal[builtins.int]]"
        kind: UNION
        args {
          pretty_printed_name: "Literal[builtins.int]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
        }
        args {
          pretty_printed_name: "Literal[builtins.int]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
        }
      }
    }
    parameters {
      name: "encoding"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "errors"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "newline"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "closefd"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    parameters {
      name: "opener"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[TypeAlias[CallableType[builtins.function]],None]"
        kind: UNION
        args {
          pretty_printed_name: "TypeAlias[CallableType[builtins.function]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "CallableType[builtins.function]"
            kind: CALLABLE
            args {
              pretty_printed_name: "builtins.function"
              fully_qualified_name: "builtins.function"
            }
          }
          fully_qualified_name: "os._Opener"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "fdopen"
    fully_qualified_name: "os.fdopen"
    return_annotation {
      pretty_printed_name: "io.BufferedWriter"
      fully_qualified_name: "io.BufferedWriter"
    }
    parameters {
      name: "fd"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "mode"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]"
          kind: UNION
          args {
            pretty_printed_name: "Literal[builtins.str]"
            kind: LITERAL
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          args {
            pretty_printed_name: "Literal[builtins.str]"
            kind: LITERAL
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          args {
            pretty_printed_name: "Literal[builtins.str]"
            kind: LITERAL
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          args {
            pretty_printed_name: "Literal[builtins.str]"
            kind: LITERAL
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          args {
            pretty_printed_name: "Literal[builtins.str]"
            kind: LITERAL
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          args {
            pretty_printed_name: "Literal[builtins.str]"
            kind: LITERAL
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
        }
        fully_qualified_name: "_typeshed.OpenBinaryModeWriting"
      }
    }
    parameters {
      name: "buffering"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Literal[builtins.int],Literal[builtins.int]]"
        kind: UNION
        args {
          pretty_printed_name: "Literal[builtins.int]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
        }
        args {
          pretty_printed_name: "Literal[builtins.int]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
        }
      }
    }
    parameters {
      name: "encoding"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "errors"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "newline"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "closefd"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    parameters {
      name: "opener"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[TypeAlias[CallableType[builtins.function]],None]"
        kind: UNION
        args {
          pretty_printed_name: "TypeAlias[CallableType[builtins.function]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "CallableType[builtins.function]"
            kind: CALLABLE
            args {
              pretty_printed_name: "builtins.function"
              fully_qualified_name: "builtins.function"
            }
          }
          fully_qualified_name: "os._Opener"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "fdopen"
    fully_qualified_name: "os.fdopen"
    return_annotation {
      pretty_printed_name: "io.BufferedReader"
      fully_qualified_name: "io.BufferedReader"
    }
    parameters {
      name: "fd"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "mode"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]"
          kind: UNION
          args {
            pretty_printed_name: "Literal[builtins.str]"
            kind: LITERAL
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          args {
            pretty_printed_name: "Literal[builtins.str]"
            kind: LITERAL
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          args {
            pretty_printed_name: "Literal[builtins.str]"
            kind: LITERAL
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          args {
            pretty_printed_name: "Literal[builtins.str]"
            kind: LITERAL
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          args {
            pretty_printed_name: "Literal[builtins.str]"
            kind: LITERAL
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          args {
            pretty_printed_name: "Literal[builtins.str]"
            kind: LITERAL
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          args {
            pretty_printed_name: "Literal[builtins.str]"
            kind: LITERAL
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          args {
            pretty_printed_name: "Literal[builtins.str]"
            kind: LITERAL
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
        }
        fully_qualified_name: "_typeshed.OpenBinaryModeReading"
      }
    }
    parameters {
      name: "buffering"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Literal[builtins.int],Literal[builtins.int]]"
        kind: UNION
        args {
          pretty_printed_name: "Literal[builtins.int]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
        }
        args {
          pretty_printed_name: "Literal[builtins.int]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
        }
      }
    }
    parameters {
      name: "encoding"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "errors"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "newline"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "closefd"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    parameters {
      name: "opener"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[TypeAlias[CallableType[builtins.function]],None]"
        kind: UNION
        args {
          pretty_printed_name: "TypeAlias[CallableType[builtins.function]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "CallableType[builtins.function]"
            kind: CALLABLE
            args {
              pretty_printed_name: "builtins.function"
              fully_qualified_name: "builtins.function"
            }
          }
          fully_qualified_name: "os._Opener"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "fdopen"
    fully_qualified_name: "os.fdopen"
    return_annotation {
      pretty_printed_name: "typing.BinaryIO"
      fully_qualified_name: "typing.BinaryIO"
    }
    parameters {
      name: "fd"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "mode"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]]"
          kind: UNION
          args {
            pretty_printed_name: "TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]"
              kind: UNION
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
            }
            fully_qualified_name: "_typeshed.OpenBinaryModeUpdating"
          }
          args {
            pretty_printed_name: "TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]"
              kind: UNION
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
            }
            fully_qualified_name: "_typeshed.OpenBinaryModeReading"
          }
          args {
            pretty_printed_name: "TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]"
              kind: UNION
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
              args {
                pretty_printed_name: "Literal[builtins.str]"
                kind: LITERAL
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
              }
            }
            fully_qualified_name: "_typeshed.OpenBinaryModeWriting"
          }
        }
        fully_qualified_name: "_typeshed.OpenBinaryMode"
      }
    }
    parameters {
      name: "buffering"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "encoding"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "errors"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "newline"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "closefd"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    parameters {
      name: "opener"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[TypeAlias[CallableType[builtins.function]],None]"
        kind: UNION
        args {
          pretty_printed_name: "TypeAlias[CallableType[builtins.function]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "CallableType[builtins.function]"
            kind: CALLABLE
            args {
              pretty_printed_name: "builtins.function"
              fully_qualified_name: "builtins.function"
            }
          }
          fully_qualified_name: "os._Opener"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "fdopen"
    fully_qualified_name: "os.fdopen"
    return_annotation {
      pretty_printed_name: "typing.IO[Any]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "typing.IO"
    }
    parameters {
      name: "fd"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "mode"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "buffering"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "encoding"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "errors"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "newline"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "closefd"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    parameters {
      name: "opener"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[TypeAlias[CallableType[builtins.function]],None]"
        kind: UNION
        args {
          pretty_printed_name: "TypeAlias[CallableType[builtins.function]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "CallableType[builtins.function]"
            kind: CALLABLE
            args {
              pretty_printed_name: "builtins.function"
              fully_qualified_name: "builtins.function"
            }
          }
          fully_qualified_name: "os._Opener"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
}
overloaded_functions {
  name: "sendfile"
  fullname: "os.sendfile"
  definitions {
    name: "sendfile"
    fully_qualified_name: "os.sendfile"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "out_fd"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "in_fd"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "offset"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "count"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "sendfile"
    fully_qualified_name: "os.sendfile"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "out_fd"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "in_fd"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "offset"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "count"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "headers"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Sequence[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]]"
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]"
              kind: TYPE_ALIAS
              args {
                pretty_printed_name: "Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]"
                kind: UNION
                args {
                  pretty_printed_name: "builtins.bytearray"
                  fully_qualified_name: "builtins.bytearray"
                }
                args {
                  pretty_printed_name: "builtins.memoryview"
                  fully_qualified_name: "builtins.memoryview"
                }
                args {
                  pretty_printed_name: "array.array[Any]"
                  args {
                    pretty_printed_name: "Any"
                    kind: ANY
                  }
                  fully_qualified_name: "array.array"
                }
                args {
                  pretty_printed_name: "mmap.mmap"
                  fully_qualified_name: "mmap.mmap"
                }
                args {
                  pretty_printed_name: "ctypes._CData"
                  fully_qualified_name: "ctypes._CData"
                }
                args {
                  pretty_printed_name: "pickle.PickleBuffer"
                  fully_qualified_name: "pickle.PickleBuffer"
                }
              }
              fully_qualified_name: "_typeshed.WriteableBuffer"
            }
          }
          fully_qualified_name: "_typeshed.ReadableBuffer"
        }
        fully_qualified_name: "typing.Sequence"
      }
    }
    parameters {
      name: "trailers"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Sequence[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]]"
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]"
              kind: TYPE_ALIAS
              args {
                pretty_printed_name: "Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]"
                kind: UNION
                args {
                  pretty_printed_name: "builtins.bytearray"
                  fully_qualified_name: "builtins.bytearray"
                }
                args {
                  pretty_printed_name: "builtins.memoryview"
                  fully_qualified_name: "builtins.memoryview"
                }
                args {
                  pretty_printed_name: "array.array[Any]"
                  args {
                    pretty_printed_name: "Any"
                    kind: ANY
                  }
                  fully_qualified_name: "array.array"
                }
                args {
                  pretty_printed_name: "mmap.mmap"
                  fully_qualified_name: "mmap.mmap"
                }
                args {
                  pretty_printed_name: "ctypes._CData"
                  fully_qualified_name: "ctypes._CData"
                }
                args {
                  pretty_printed_name: "pickle.PickleBuffer"
                  fully_qualified_name: "pickle.PickleBuffer"
                }
              }
              fully_qualified_name: "_typeshed.WriteableBuffer"
            }
          }
          fully_qualified_name: "_typeshed.ReadableBuffer"
        }
        fully_qualified_name: "typing.Sequence"
      }
    }
    parameters {
      name: "flags"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
}
overloaded_functions {
  name: "scandir"
  fullname: "os.scandir"
  definitions {
    name: "scandir"
    fully_qualified_name: "os.scandir"
    return_annotation {
      pretty_printed_name: "os._ScandirIterator[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "os._ScandirIterator"
    }
    parameters {
      name: "path"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "scandir"
    fully_qualified_name: "os.scandir"
    return_annotation {
      pretty_printed_name: "os._ScandirIterator[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "os._ScandirIterator"
    }
    parameters {
      name: "path"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "scandir"
    fully_qualified_name: "os.scandir"
    return_annotation {
      pretty_printed_name: "os._ScandirIterator[typing.AnyStr]"
      args {
        pretty_printed_name: "typing.AnyStr"
        kind: TYPE_VAR
      }
      fully_qualified_name: "os._ScandirIterator"
    }
    parameters {
      name: "path"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[typing.AnyStr,os.PathLike[typing.AnyStr]]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[typing.AnyStr,os.PathLike[typing.AnyStr]]"
          kind: UNION
          args {
            pretty_printed_name: "typing.AnyStr"
            kind: TYPE_VAR
          }
          args {
            pretty_printed_name: "os.PathLike[typing.AnyStr]"
            args {
              pretty_printed_name: "typing.AnyStr"
              kind: TYPE_VAR
            }
            fully_qualified_name: "os.PathLike"
          }
        }
        fully_qualified_name: "_typeshed.GenericPath"
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
}
overloaded_functions {
  name: "fwalk"
  fullname: "os.fwalk"
  definitions {
    name: "fwalk"
    fully_qualified_name: "os.fwalk"
    return_annotation {
      pretty_printed_name: "typing.Iterator[Tuple[builtins.str,builtins.list[builtins.str],builtins.list[builtins.str],builtins.int]]"
      args {
        pretty_printed_name: "Tuple[builtins.str,builtins.list[builtins.str],builtins.list[builtins.str],builtins.int]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.list[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "builtins.list"
        }
        args {
          pretty_printed_name: "builtins.list[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "builtins.list"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "top"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,os.PathLike[builtins.str]]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "os.PathLike[builtins.str]"
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            fully_qualified_name: "os.PathLike"
          }
        }
        fully_qualified_name: "_typeshed.StrPath"
      }
    }
    parameters {
      name: "topdown"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    parameters {
      name: "onerror"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[TypeAlias[CallableType[builtins.function]],None]"
        kind: UNION
        args {
          pretty_printed_name: "TypeAlias[CallableType[builtins.function]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "CallableType[builtins.function]"
            kind: CALLABLE
            args {
              pretty_printed_name: "builtins.function"
              fully_qualified_name: "builtins.function"
            }
          }
          fully_qualified_name: "os._OnError"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "follow_symlinks"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    parameters {
      name: "dir_fd"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "fwalk"
    fully_qualified_name: "os.fwalk"
    return_annotation {
      pretty_printed_name: "typing.Iterator[Tuple[builtins.bytes,builtins.list[builtins.bytes],builtins.list[builtins.bytes],builtins.int]]"
      args {
        pretty_printed_name: "Tuple[builtins.bytes,builtins.list[builtins.bytes],builtins.list[builtins.bytes],builtins.int]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "builtins.list[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "builtins.list"
        }
        args {
          pretty_printed_name: "builtins.list[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "builtins.list"
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "top"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[builtins.bytes,os.PathLike[builtins.bytes]]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.bytes,os.PathLike[builtins.bytes]]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "os.PathLike[builtins.bytes]"
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            fully_qualified_name: "os.PathLike"
          }
        }
        fully_qualified_name: "_typeshed.BytesPath"
      }
    }
    parameters {
      name: "topdown"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    parameters {
      name: "onerror"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[TypeAlias[CallableType[builtins.function]],None]"
        kind: UNION
        args {
          pretty_printed_name: "TypeAlias[CallableType[builtins.function]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "CallableType[builtins.function]"
            kind: CALLABLE
            args {
              pretty_printed_name: "builtins.function"
              fully_qualified_name: "builtins.function"
            }
          }
          fully_qualified_name: "os._OnError"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "follow_symlinks"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    parameters {
      name: "dir_fd"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
}
vars {
  name: "__path__"
  fully_qualified_name: "os.__path__"
  type_annotation {
    pretty_printed_name: "builtins.list[builtins.str]"
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    fully_qualified_name: "builtins.list"
  }
}
vars {
  name: "__annotations__"
  fully_qualified_name: "os.__annotations__"
  type_annotation {
    pretty_printed_name: "builtins.dict[builtins.str,Any]"
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    args {
      pretty_printed_name: "Any"
      kind: ANY
    }
    fully_qualified_name: "builtins.dict"
  }
}
vars {
  name: "_path"
  fully_qualified_name: "os.path"
  is_imported_module: true
}
vars {
  name: "path"
  fully_qualified_name: "os.path"
  is_imported_module: true
}
vars {
  name: "supports_bytes_environ"
  fully_qualified_name: "os.supports_bytes_environ"
  type_annotation {
    pretty_printed_name: "builtins.bool"
    fully_qualified_name: "builtins.bool"
  }
}
vars {
  name: "supports_dir_fd"
  fully_qualified_name: "os.supports_dir_fd"
  type_annotation {
    pretty_printed_name: "builtins.set[CallableType[builtins.function]]"
    args {
      pretty_printed_name: "CallableType[builtins.function]"
      kind: CALLABLE
      args {
        pretty_printed_name: "builtins.function"
        fully_qualified_name: "builtins.function"
      }
    }
    fully_qualified_name: "builtins.set"
  }
}
vars {
  name: "supports_fd"
  fully_qualified_name: "os.supports_fd"
  type_annotation {
    pretty_printed_name: "builtins.set[CallableType[builtins.function]]"
    args {
      pretty_printed_name: "CallableType[builtins.function]"
      kind: CALLABLE
      args {
        pretty_printed_name: "builtins.function"
        fully_qualified_name: "builtins.function"
      }
    }
    fully_qualified_name: "builtins.set"
  }
}
vars {
  name: "supports_effective_ids"
  fully_qualified_name: "os.supports_effective_ids"
  type_annotation {
    pretty_printed_name: "builtins.set[CallableType[builtins.function]]"
    args {
      pretty_printed_name: "CallableType[builtins.function]"
      kind: CALLABLE
      args {
        pretty_printed_name: "builtins.function"
        fully_qualified_name: "builtins.function"
      }
    }
    fully_qualified_name: "builtins.set"
  }
}
vars {
  name: "supports_follow_symlinks"
  fully_qualified_name: "os.supports_follow_symlinks"
  type_annotation {
    pretty_printed_name: "builtins.set[CallableType[builtins.function]]"
    args {
      pretty_printed_name: "CallableType[builtins.function]"
      kind: CALLABLE
      args {
        pretty_printed_name: "builtins.function"
        fully_qualified_name: "builtins.function"
      }
    }
    fully_qualified_name: "builtins.set"
  }
}
vars {
  name: "PRIO_PROCESS"
  fully_qualified_name: "os.PRIO_PROCESS"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "PRIO_PGRP"
  fully_qualified_name: "os.PRIO_PGRP"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "PRIO_USER"
  fully_qualified_name: "os.PRIO_USER"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "F_LOCK"
  fully_qualified_name: "os.F_LOCK"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "F_TLOCK"
  fully_qualified_name: "os.F_TLOCK"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "F_ULOCK"
  fully_qualified_name: "os.F_ULOCK"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "F_TEST"
  fully_qualified_name: "os.F_TEST"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "POSIX_FADV_NORMAL"
  fully_qualified_name: "os.POSIX_FADV_NORMAL"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "POSIX_FADV_SEQUENTIAL"
  fully_qualified_name: "os.POSIX_FADV_SEQUENTIAL"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "POSIX_FADV_RANDOM"
  fully_qualified_name: "os.POSIX_FADV_RANDOM"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "POSIX_FADV_NOREUSE"
  fully_qualified_name: "os.POSIX_FADV_NOREUSE"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "POSIX_FADV_WILLNEED"
  fully_qualified_name: "os.POSIX_FADV_WILLNEED"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "POSIX_FADV_DONTNEED"
  fully_qualified_name: "os.POSIX_FADV_DONTNEED"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "SF_NODISKIO"
  fully_qualified_name: "os.SF_NODISKIO"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "SF_MNOWAIT"
  fully_qualified_name: "os.SF_MNOWAIT"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "SF_SYNC"
  fully_qualified_name: "os.SF_SYNC"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "XATTR_SIZE_MAX"
  fully_qualified_name: "os.XATTR_SIZE_MAX"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "XATTR_CREATE"
  fully_qualified_name: "os.XATTR_CREATE"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "XATTR_REPLACE"
  fully_qualified_name: "os.XATTR_REPLACE"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "P_PID"
  fully_qualified_name: "os.P_PID"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "P_PGID"
  fully_qualified_name: "os.P_PGID"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "P_ALL"
  fully_qualified_name: "os.P_ALL"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "WEXITED"
  fully_qualified_name: "os.WEXITED"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "WSTOPPED"
  fully_qualified_name: "os.WSTOPPED"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "WNOWAIT"
  fully_qualified_name: "os.WNOWAIT"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "CLD_EXITED"
  fully_qualified_name: "os.CLD_EXITED"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "CLD_DUMPED"
  fully_qualified_name: "os.CLD_DUMPED"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "CLD_TRAPPED"
  fully_qualified_name: "os.CLD_TRAPPED"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "CLD_CONTINUED"
  fully_qualified_name: "os.CLD_CONTINUED"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "SCHED_OTHER"
  fully_qualified_name: "os.SCHED_OTHER"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "SCHED_BATCH"
  fully_qualified_name: "os.SCHED_BATCH"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "SCHED_IDLE"
  fully_qualified_name: "os.SCHED_IDLE"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "SCHED_SPORADIC"
  fully_qualified_name: "os.SCHED_SPORADIC"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "SCHED_FIFO"
  fully_qualified_name: "os.SCHED_FIFO"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "SCHED_RR"
  fully_qualified_name: "os.SCHED_RR"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "SCHED_RESET_ON_FORK"
  fully_qualified_name: "os.SCHED_RESET_ON_FORK"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "RTLD_LAZY"
  fully_qualified_name: "os.RTLD_LAZY"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "RTLD_NOW"
  fully_qualified_name: "os.RTLD_NOW"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "RTLD_GLOBAL"
  fully_qualified_name: "os.RTLD_GLOBAL"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "RTLD_LOCAL"
  fully_qualified_name: "os.RTLD_LOCAL"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "RTLD_NODELETE"
  fully_qualified_name: "os.RTLD_NODELETE"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "RTLD_NOLOAD"
  fully_qualified_name: "os.RTLD_NOLOAD"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "RTLD_DEEPBIND"
  fully_qualified_name: "os.RTLD_DEEPBIND"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "GRND_NONBLOCK"
  fully_qualified_name: "os.GRND_NONBLOCK"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "GRND_RANDOM"
  fully_qualified_name: "os.GRND_RANDOM"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "SEEK_SET"
  fully_qualified_name: "os.SEEK_SET"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "SEEK_CUR"
  fully_qualified_name: "os.SEEK_CUR"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "SEEK_END"
  fully_qualified_name: "os.SEEK_END"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "SEEK_DATA"
  fully_qualified_name: "os.SEEK_DATA"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "SEEK_HOLE"
  fully_qualified_name: "os.SEEK_HOLE"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "O_RDONLY"
  fully_qualified_name: "os.O_RDONLY"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "O_WRONLY"
  fully_qualified_name: "os.O_WRONLY"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "O_RDWR"
  fully_qualified_name: "os.O_RDWR"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "O_APPEND"
  fully_qualified_name: "os.O_APPEND"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "O_CREAT"
  fully_qualified_name: "os.O_CREAT"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "O_EXCL"
  fully_qualified_name: "os.O_EXCL"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "O_TRUNC"
  fully_qualified_name: "os.O_TRUNC"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "O_DSYNC"
  fully_qualified_name: "os.O_DSYNC"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "O_RSYNC"
  fully_qualified_name: "os.O_RSYNC"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "O_SYNC"
  fully_qualified_name: "os.O_SYNC"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "O_NDELAY"
  fully_qualified_name: "os.O_NDELAY"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "O_NONBLOCK"
  fully_qualified_name: "os.O_NONBLOCK"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "O_NOCTTY"
  fully_qualified_name: "os.O_NOCTTY"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "O_CLOEXEC"
  fully_qualified_name: "os.O_CLOEXEC"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "O_SHLOCK"
  fully_qualified_name: "os.O_SHLOCK"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "O_EXLOCK"
  fully_qualified_name: "os.O_EXLOCK"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "O_BINARY"
  fully_qualified_name: "os.O_BINARY"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "O_NOINHERIT"
  fully_qualified_name: "os.O_NOINHERIT"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "O_SHORT_LIVED"
  fully_qualified_name: "os.O_SHORT_LIVED"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "O_TEMPORARY"
  fully_qualified_name: "os.O_TEMPORARY"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "O_RANDOM"
  fully_qualified_name: "os.O_RANDOM"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "O_SEQUENTIAL"
  fully_qualified_name: "os.O_SEQUENTIAL"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "O_TEXT"
  fully_qualified_name: "os.O_TEXT"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "O_ASYNC"
  fully_qualified_name: "os.O_ASYNC"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "O_DIRECT"
  fully_qualified_name: "os.O_DIRECT"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "O_DIRECTORY"
  fully_qualified_name: "os.O_DIRECTORY"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "O_NOFOLLOW"
  fully_qualified_name: "os.O_NOFOLLOW"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "O_NOATIME"
  fully_qualified_name: "os.O_NOATIME"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "O_PATH"
  fully_qualified_name: "os.O_PATH"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "O_TMPFILE"
  fully_qualified_name: "os.O_TMPFILE"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "O_LARGEFILE"
  fully_qualified_name: "os.O_LARGEFILE"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "O_ACCMODE"
  fully_qualified_name: "os.O_ACCMODE"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "ST_APPEND"
  fully_qualified_name: "os.ST_APPEND"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "ST_MANDLOCK"
  fully_qualified_name: "os.ST_MANDLOCK"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "ST_NOATIME"
  fully_qualified_name: "os.ST_NOATIME"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "ST_NODEV"
  fully_qualified_name: "os.ST_NODEV"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "ST_NODIRATIME"
  fully_qualified_name: "os.ST_NODIRATIME"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "ST_NOEXEC"
  fully_qualified_name: "os.ST_NOEXEC"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "ST_RELATIME"
  fully_qualified_name: "os.ST_RELATIME"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "ST_SYNCHRONOUS"
  fully_qualified_name: "os.ST_SYNCHRONOUS"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "ST_WRITE"
  fully_qualified_name: "os.ST_WRITE"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "NGROUPS_MAX"
  fully_qualified_name: "os.NGROUPS_MAX"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "ST_NOSUID"
  fully_qualified_name: "os.ST_NOSUID"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "ST_RDONLY"
  fully_qualified_name: "os.ST_RDONLY"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "curdir"
  fully_qualified_name: "os.curdir"
  type_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
}
vars {
  name: "pardir"
  fully_qualified_name: "os.pardir"
  type_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
}
vars {
  name: "sep"
  fully_qualified_name: "os.sep"
  type_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
}
vars {
  name: "altsep"
  fully_qualified_name: "os.altsep"
  type_annotation {
    pretty_printed_name: "Union[builtins.str,None]"
    kind: UNION
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    args {
      pretty_printed_name: "None"
      kind: NONE
    }
  }
}
vars {
  name: "extsep"
  fully_qualified_name: "os.extsep"
  type_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
}
vars {
  name: "pathsep"
  fully_qualified_name: "os.pathsep"
  type_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
}
vars {
  name: "defpath"
  fully_qualified_name: "os.defpath"
  type_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
}
vars {
  name: "linesep"
  fully_qualified_name: "os.linesep"
  type_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
}
vars {
  name: "devnull"
  fully_qualified_name: "os.devnull"
  type_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
}
vars {
  name: "name"
  fully_qualified_name: "os.name"
  type_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
}
vars {
  name: "F_OK"
  fully_qualified_name: "os.F_OK"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "R_OK"
  fully_qualified_name: "os.R_OK"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "W_OK"
  fully_qualified_name: "os.W_OK"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "X_OK"
  fully_qualified_name: "os.X_OK"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "environ"
  fully_qualified_name: "os.environ"
  type_annotation {
    pretty_printed_name: "os._Environ[builtins.str]"
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    fully_qualified_name: "os._Environ"
  }
}
vars {
  name: "environb"
  fully_qualified_name: "os.environb"
  type_annotation {
    pretty_printed_name: "os._Environ[builtins.bytes]"
    args {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    fully_qualified_name: "os._Environ"
  }
}
vars {
  name: "confstr_names"
  fully_qualified_name: "os.confstr_names"
  type_annotation {
    pretty_printed_name: "builtins.dict[builtins.str,builtins.int]"
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    args {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    fully_qualified_name: "builtins.dict"
  }
}
vars {
  name: "pathconf_names"
  fully_qualified_name: "os.pathconf_names"
  type_annotation {
    pretty_printed_name: "builtins.dict[builtins.str,builtins.int]"
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    args {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    fully_qualified_name: "builtins.dict"
  }
}
vars {
  name: "sysconf_names"
  fully_qualified_name: "os.sysconf_names"
  type_annotation {
    pretty_printed_name: "builtins.dict[builtins.str,builtins.int]"
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    args {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    fully_qualified_name: "builtins.dict"
  }
}
vars {
  name: "EX_OK"
  fully_qualified_name: "os.EX_OK"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "EX_USAGE"
  fully_qualified_name: "os.EX_USAGE"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "EX_DATAERR"
  fully_qualified_name: "os.EX_DATAERR"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "EX_NOINPUT"
  fully_qualified_name: "os.EX_NOINPUT"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "EX_NOUSER"
  fully_qualified_name: "os.EX_NOUSER"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "EX_NOHOST"
  fully_qualified_name: "os.EX_NOHOST"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "EX_UNAVAILABLE"
  fully_qualified_name: "os.EX_UNAVAILABLE"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "EX_SOFTWARE"
  fully_qualified_name: "os.EX_SOFTWARE"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "EX_OSERR"
  fully_qualified_name: "os.EX_OSERR"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "EX_OSFILE"
  fully_qualified_name: "os.EX_OSFILE"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "EX_CANTCREAT"
  fully_qualified_name: "os.EX_CANTCREAT"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "EX_IOERR"
  fully_qualified_name: "os.EX_IOERR"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "EX_TEMPFAIL"
  fully_qualified_name: "os.EX_TEMPFAIL"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "EX_PROTOCOL"
  fully_qualified_name: "os.EX_PROTOCOL"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "EX_NOPERM"
  fully_qualified_name: "os.EX_NOPERM"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "EX_CONFIG"
  fully_qualified_name: "os.EX_CONFIG"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "EX_NOTFOUND"
  fully_qualified_name: "os.EX_NOTFOUND"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "P_NOWAIT"
  fully_qualified_name: "os.P_NOWAIT"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "P_NOWAITO"
  fully_qualified_name: "os.P_NOWAITO"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "P_WAIT"
  fully_qualified_name: "os.P_WAIT"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "WNOHANG"
  fully_qualified_name: "os.WNOHANG"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "WCONTINUED"
  fully_qualified_name: "os.WCONTINUED"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "WUNTRACED"
  fully_qualified_name: "os.WUNTRACED"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "TMP_MAX"
  fully_qualified_name: "os.TMP_MAX"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "RWF_DSYNC"
  fully_qualified_name: "os.RWF_DSYNC"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "RWF_SYNC"
  fully_qualified_name: "os.RWF_SYNC"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "RWF_HIPRI"
  fully_qualified_name: "os.RWF_HIPRI"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "RWF_NOWAIT"
  fully_qualified_name: "os.RWF_NOWAIT"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "POSIX_SPAWN_OPEN"
  fully_qualified_name: "os.POSIX_SPAWN_OPEN"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "POSIX_SPAWN_CLOSE"
  fully_qualified_name: "os.POSIX_SPAWN_CLOSE"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "POSIX_SPAWN_DUP2"
  fully_qualified_name: "os.POSIX_SPAWN_DUP2"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "MFD_CLOEXEC"
  fully_qualified_name: "os.MFD_CLOEXEC"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "MFD_ALLOW_SEALING"
  fully_qualified_name: "os.MFD_ALLOW_SEALING"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "MFD_HUGETLB"
  fully_qualified_name: "os.MFD_HUGETLB"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "MFD_HUGE_SHIFT"
  fully_qualified_name: "os.MFD_HUGE_SHIFT"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "MFD_HUGE_MASK"
  fully_qualified_name: "os.MFD_HUGE_MASK"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "MFD_HUGE_64KB"
  fully_qualified_name: "os.MFD_HUGE_64KB"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "MFD_HUGE_512KB"
  fully_qualified_name: "os.MFD_HUGE_512KB"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "MFD_HUGE_1MB"
  fully_qualified_name: "os.MFD_HUGE_1MB"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "MFD_HUGE_2MB"
  fully_qualified_name: "os.MFD_HUGE_2MB"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "MFD_HUGE_8MB"
  fully_qualified_name: "os.MFD_HUGE_8MB"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "MFD_HUGE_16MB"
  fully_qualified_name: "os.MFD_HUGE_16MB"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "MFD_HUGE_32MB"
  fully_qualified_name: "os.MFD_HUGE_32MB"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "MFD_HUGE_256MB"
  fully_qualified_name: "os.MFD_HUGE_256MB"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "MFD_HUGE_512MB"
  fully_qualified_name: "os.MFD_HUGE_512MB"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "MFD_HUGE_1GB"
  fully_qualified_name: "os.MFD_HUGE_1GB"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "MFD_HUGE_2GB"
  fully_qualified_name: "os.MFD_HUGE_2GB"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "MFD_HUGE_16GB"
  fully_qualified_name: "os.MFD_HUGE_16GB"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
