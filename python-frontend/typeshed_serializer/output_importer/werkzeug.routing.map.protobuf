fully_qualified_name: "werkzeug.routing.map"
classes {
  name: "Map"
  fully_qualified_name: "werkzeug.routing.map.Map"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "werkzeug.routing.map.Map.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.routing.map.Map"
        fully_qualified_name: "werkzeug.routing.map.Map"
      }
    }
    parameters {
      name: "rules"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.Iterable[werkzeug.routing.rules.RuleFactory],None]"
        kind: UNION
        args {
          pretty_printed_name: "typing.Iterable[werkzeug.routing.rules.RuleFactory]"
          args {
            pretty_printed_name: "werkzeug.routing.rules.RuleFactory"
            fully_qualified_name: "werkzeug.routing.rules.RuleFactory"
          }
          fully_qualified_name: "typing.Iterable"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "default_subdomain"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "charset"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "strict_slashes"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    parameters {
      name: "merge_slashes"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    parameters {
      name: "redirect_defaults"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    parameters {
      name: "converters"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.Mapping[builtins.str,Type[werkzeug.routing.converters.BaseConverter]],None]"
        kind: UNION
        args {
          pretty_printed_name: "typing.Mapping[builtins.str,Type[werkzeug.routing.converters.BaseConverter]]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "Type[werkzeug.routing.converters.BaseConverter]"
            kind: TYPE
            args {
              pretty_printed_name: "werkzeug.routing.converters.BaseConverter"
              fully_qualified_name: "werkzeug.routing.converters.BaseConverter"
            }
          }
          fully_qualified_name: "typing.Mapping"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "sort_parameters"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    parameters {
      name: "sort_key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[CallableType[builtins.function],None]"
        kind: UNION
        args {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "encoding_errors"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "host_matching"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
  }
  methods {
    name: "is_endpoint_expecting"
    fully_qualified_name: "werkzeug.routing.map.Map.is_endpoint_expecting"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.routing.map.Map"
        fully_qualified_name: "werkzeug.routing.map.Map"
      }
    }
    parameters {
      name: "endpoint"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "arguments"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  methods {
    name: "_rules"
    fully_qualified_name: "werkzeug.routing.map.Map._rules"
    return_annotation {
      pretty_printed_name: "builtins.list[werkzeug.routing.rules.Rule]"
      args {
        pretty_printed_name: "werkzeug.routing.rules.Rule"
        fully_qualified_name: "werkzeug.routing.rules.Rule"
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.routing.map.Map"
        fully_qualified_name: "werkzeug.routing.map.Map"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "iter_rules"
    fully_qualified_name: "werkzeug.routing.map.Map.iter_rules"
    return_annotation {
      pretty_printed_name: "typing.Iterator[werkzeug.routing.rules.Rule]"
      args {
        pretty_printed_name: "werkzeug.routing.rules.Rule"
        fully_qualified_name: "werkzeug.routing.rules.Rule"
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.routing.map.Map"
        fully_qualified_name: "werkzeug.routing.map.Map"
      }
    }
    parameters {
      name: "endpoint"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "add"
    fully_qualified_name: "werkzeug.routing.map.Map.add"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.routing.map.Map"
        fully_qualified_name: "werkzeug.routing.map.Map"
      }
    }
    parameters {
      name: "rulefactory"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.routing.rules.RuleFactory"
        fully_qualified_name: "werkzeug.routing.rules.RuleFactory"
      }
    }
  }
  methods {
    name: "bind"
    fully_qualified_name: "werkzeug.routing.map.Map.bind"
    return_annotation {
      pretty_printed_name: "werkzeug.routing.map.MapAdapter"
      fully_qualified_name: "werkzeug.routing.map.MapAdapter"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.routing.map.Map"
        fully_qualified_name: "werkzeug.routing.map.Map"
      }
    }
    parameters {
      name: "server_name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "script_name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "subdomain"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "url_scheme"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "default_method"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "path_info"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "query_args"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.Mapping[builtins.str,Any],builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "typing.Mapping[builtins.str,Any]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "typing.Mapping"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "bind_to_environ"
    fully_qualified_name: "werkzeug.routing.map.Map.bind_to_environ"
    return_annotation {
      pretty_printed_name: "werkzeug.routing.map.MapAdapter"
      fully_qualified_name: "werkzeug.routing.map.MapAdapter"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.routing.map.Map"
        fully_qualified_name: "werkzeug.routing.map.Map"
      }
    }
    parameters {
      name: "environ"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[TypeAlias[builtins.dict[builtins.str,Any]],werkzeug.wrappers.request.Request]"
        kind: UNION
        args {
          pretty_printed_name: "TypeAlias[builtins.dict[builtins.str,Any]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "builtins.dict[builtins.str,Any]"
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "Any"
              kind: ANY
            }
            fully_qualified_name: "builtins.dict"
          }
          fully_qualified_name: "_typeshed.wsgi.WSGIEnvironment"
        }
        args {
          pretty_printed_name: "werkzeug.wrappers.request.Request"
          fully_qualified_name: "werkzeug.wrappers.request.Request"
        }
      }
    }
    parameters {
      name: "server_name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "subdomain"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "update"
    fully_qualified_name: "werkzeug.routing.map.Map.update"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.routing.map.Map"
        fully_qualified_name: "werkzeug.routing.map.Map"
      }
    }
  }
  methods {
    name: "__repr__"
    fully_qualified_name: "werkzeug.routing.map.Map.__repr__"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "werkzeug.routing.map.Map"
        fully_qualified_name: "werkzeug.routing.map.Map"
      }
    }
  }
  attributes {
    name: "default_converters"
    fully_qualified_name: "werkzeug.routing.map.Map.default_converters"
    type_annotation {
      pretty_printed_name: "werkzeug.datastructures.structures.ImmutableDict[builtins.str,Type[werkzeug.routing.converters.BaseConverter]]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "Type[werkzeug.routing.converters.BaseConverter]"
        kind: TYPE
        args {
          pretty_printed_name: "werkzeug.routing.converters.BaseConverter"
          fully_qualified_name: "werkzeug.routing.converters.BaseConverter"
        }
      }
      fully_qualified_name: "werkzeug.datastructures.structures.ImmutableDict"
    }
  }
  attributes {
    name: "lock_class"
    fully_qualified_name: "werkzeug.routing.map.Map.lock_class"
    type_annotation {
      pretty_printed_name: "CallableType[builtins.type]"
      kind: CALLABLE
      args {
        pretty_printed_name: "builtins.type"
        fully_qualified_name: "builtins.type"
      }
    }
  }
  attributes {
    name: "_matcher"
    fully_qualified_name: "werkzeug.routing.map.Map._matcher"
    type_annotation {
      pretty_printed_name: "werkzeug.routing.matcher.StateMachineMatcher"
      fully_qualified_name: "werkzeug.routing.matcher.StateMachineMatcher"
    }
  }
  attributes {
    name: "_rules_by_endpoint"
    fully_qualified_name: "werkzeug.routing.map.Map._rules_by_endpoint"
    type_annotation {
      pretty_printed_name: "builtins.dict[builtins.str,builtins.list[werkzeug.routing.rules.Rule]]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.list[werkzeug.routing.rules.Rule]"
        args {
          pretty_printed_name: "werkzeug.routing.rules.Rule"
          fully_qualified_name: "werkzeug.routing.rules.Rule"
        }
        fully_qualified_name: "builtins.list"
      }
      fully_qualified_name: "builtins.dict"
    }
  }
  attributes {
    name: "_remap"
    fully_qualified_name: "werkzeug.routing.map.Map._remap"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
  attributes {
    name: "_remap_lock"
    fully_qualified_name: "werkzeug.routing.map.Map._remap_lock"
    type_annotation {
      pretty_printed_name: "threading.Lock"
      fully_qualified_name: "threading.Lock"
    }
  }
  attributes {
    name: "default_subdomain"
    fully_qualified_name: "werkzeug.routing.map.Map.default_subdomain"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  attributes {
    name: "charset"
    fully_qualified_name: "werkzeug.routing.map.Map.charset"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  attributes {
    name: "encoding_errors"
    fully_qualified_name: "werkzeug.routing.map.Map.encoding_errors"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  attributes {
    name: "strict_slashes"
    fully_qualified_name: "werkzeug.routing.map.Map.strict_slashes"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
  attributes {
    name: "merge_slashes"
    fully_qualified_name: "werkzeug.routing.map.Map.merge_slashes"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
  attributes {
    name: "redirect_defaults"
    fully_qualified_name: "werkzeug.routing.map.Map.redirect_defaults"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
  attributes {
    name: "host_matching"
    fully_qualified_name: "werkzeug.routing.map.Map.host_matching"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
  attributes {
    name: "converters"
    fully_qualified_name: "werkzeug.routing.map.Map.converters"
    type_annotation {
      pretty_printed_name: "builtins.dict[builtins.str,Type[werkzeug.routing.converters.BaseConverter]]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "Type[werkzeug.routing.converters.BaseConverter]"
        kind: TYPE
        args {
          pretty_printed_name: "werkzeug.routing.converters.BaseConverter"
          fully_qualified_name: "werkzeug.routing.converters.BaseConverter"
        }
      }
      fully_qualified_name: "builtins.dict"
    }
  }
  attributes {
    name: "sort_parameters"
    fully_qualified_name: "werkzeug.routing.map.Map.sort_parameters"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
  attributes {
    name: "sort_key"
    fully_qualified_name: "werkzeug.routing.map.Map.sort_key"
    type_annotation {
      pretty_printed_name: "Union[CallableType[builtins.function],None]"
      kind: UNION
      args {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
}
classes {
  name: "MapAdapter"
  fully_qualified_name: "werkzeug.routing.map.MapAdapter"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "werkzeug.routing.map.MapAdapter.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.routing.map.MapAdapter"
        fully_qualified_name: "werkzeug.routing.map.MapAdapter"
      }
    }
    parameters {
      name: "map"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.routing.map.Map"
        fully_qualified_name: "werkzeug.routing.map.Map"
      }
    }
    parameters {
      name: "server_name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "script_name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "subdomain"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "url_scheme"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "path_info"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "default_method"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "query_args"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.Mapping[builtins.str,Any],builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "typing.Mapping[builtins.str,Any]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "typing.Mapping"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "dispatch"
    fully_qualified_name: "werkzeug.routing.map.MapAdapter.dispatch"
    return_annotation {
      pretty_printed_name: "TypeAlias[CallableType[builtins.function]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
      fully_qualified_name: "_typeshed.wsgi.WSGIApplication"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.routing.map.MapAdapter"
        fully_qualified_name: "werkzeug.routing.map.MapAdapter"
      }
    }
    parameters {
      name: "view_func"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    parameters {
      name: "path_info"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "method"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "catch_http_exceptions"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
  }
  methods {
    name: "test"
    fully_qualified_name: "werkzeug.routing.map.MapAdapter.test"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.routing.map.MapAdapter"
        fully_qualified_name: "werkzeug.routing.map.MapAdapter"
      }
    }
    parameters {
      name: "path_info"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "method"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "allowed_methods"
    fully_qualified_name: "werkzeug.routing.map.MapAdapter.allowed_methods"
    return_annotation {
      pretty_printed_name: "typing.Iterable[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "typing.Iterable"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.routing.map.MapAdapter"
        fully_qualified_name: "werkzeug.routing.map.MapAdapter"
      }
    }
    parameters {
      name: "path_info"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "get_host"
    fully_qualified_name: "werkzeug.routing.map.MapAdapter.get_host"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.routing.map.MapAdapter"
        fully_qualified_name: "werkzeug.routing.map.MapAdapter"
      }
    }
    parameters {
      name: "domain_part"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "get_default_redirect"
    fully_qualified_name: "werkzeug.routing.map.MapAdapter.get_default_redirect"
    return_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.routing.map.MapAdapter"
        fully_qualified_name: "werkzeug.routing.map.MapAdapter"
      }
    }
    parameters {
      name: "rule"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.routing.rules.Rule"
        fully_qualified_name: "werkzeug.routing.rules.Rule"
      }
    }
    parameters {
      name: "method"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "values"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.MutableMapping[builtins.str,Any]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "typing.MutableMapping"
      }
    }
    parameters {
      name: "query_args"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.Mapping[builtins.str,Any],builtins.str]"
        kind: UNION
        args {
          pretty_printed_name: "typing.Mapping[builtins.str,Any]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "typing.Mapping"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
    }
  }
  methods {
    name: "encode_query_args"
    fully_qualified_name: "werkzeug.routing.map.MapAdapter.encode_query_args"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.routing.map.MapAdapter"
        fully_qualified_name: "werkzeug.routing.map.MapAdapter"
      }
    }
    parameters {
      name: "query_args"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.Mapping[builtins.str,Any],builtins.str]"
        kind: UNION
        args {
          pretty_printed_name: "typing.Mapping[builtins.str,Any]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "typing.Mapping"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
    }
  }
  methods {
    name: "make_redirect_url"
    fully_qualified_name: "werkzeug.routing.map.MapAdapter.make_redirect_url"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.routing.map.MapAdapter"
        fully_qualified_name: "werkzeug.routing.map.MapAdapter"
      }
    }
    parameters {
      name: "path_info"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "query_args"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.Mapping[builtins.str,Any],builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "typing.Mapping[builtins.str,Any]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "typing.Mapping"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "domain_part"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "make_alias_redirect_url"
    fully_qualified_name: "werkzeug.routing.map.MapAdapter.make_alias_redirect_url"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.routing.map.MapAdapter"
        fully_qualified_name: "werkzeug.routing.map.MapAdapter"
      }
    }
    parameters {
      name: "path"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "endpoint"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "values"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Mapping[builtins.str,Any]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "typing.Mapping"
      }
    }
    parameters {
      name: "method"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "query_args"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.Mapping[builtins.str,Any],builtins.str]"
        kind: UNION
        args {
          pretty_printed_name: "typing.Mapping[builtins.str,Any]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "typing.Mapping"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
    }
  }
  methods {
    name: "_partial_build"
    fully_qualified_name: "werkzeug.routing.map.MapAdapter._partial_build"
    return_annotation {
      pretty_printed_name: "Union[Tuple[builtins.str,builtins.str,builtins.bool],None]"
      kind: UNION
      args {
        pretty_printed_name: "Tuple[builtins.str,builtins.str,builtins.bool]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.routing.map.MapAdapter"
        fully_qualified_name: "werkzeug.routing.map.MapAdapter"
      }
    }
    parameters {
      name: "endpoint"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "values"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Mapping[builtins.str,Any]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "typing.Mapping"
      }
    }
    parameters {
      name: "method"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "append_unknown"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
  }
  methods {
    name: "build"
    fully_qualified_name: "werkzeug.routing.map.MapAdapter.build"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.routing.map.MapAdapter"
        fully_qualified_name: "werkzeug.routing.map.MapAdapter"
      }
    }
    parameters {
      name: "endpoint"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "values"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.Mapping[builtins.str,Any],None]"
        kind: UNION
        args {
          pretty_printed_name: "typing.Mapping[builtins.str,Any]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "typing.Mapping"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "method"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "force_external"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    parameters {
      name: "append_unknown"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    parameters {
      name: "url_scheme"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  overloaded_methods {
    name: "match"
    fullname: "werkzeug.routing.map.MapAdapter.match"
    definitions {
      name: "match"
      fully_qualified_name: "werkzeug.routing.map.MapAdapter.match"
      return_annotation {
        pretty_printed_name: "Tuple[builtins.str,typing.Mapping[builtins.str,Any]]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "typing.Mapping[builtins.str,Any]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "typing.Mapping"
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.routing.map.MapAdapter"
          fully_qualified_name: "werkzeug.routing.map.MapAdapter"
        }
      }
      parameters {
        name: "path_info"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      parameters {
        name: "method"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      parameters {
        name: "return_rule"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Literal[builtins.bool]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.bool"
            fully_qualified_name: "builtins.bool"
          }
        }
      }
      parameters {
        name: "query_args"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[typing.Mapping[builtins.str,Any],builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "typing.Mapping[builtins.str,Any]"
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "Any"
              kind: ANY
            }
            fully_qualified_name: "typing.Mapping"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      parameters {
        name: "websocket"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.bool,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bool"
            fully_qualified_name: "builtins.bool"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "t.overload"
      is_overload: true
    }
    definitions {
      name: "match"
      fully_qualified_name: "werkzeug.routing.map.MapAdapter.match"
      return_annotation {
        pretty_printed_name: "Tuple[werkzeug.routing.rules.Rule,typing.Mapping[builtins.str,Any]]"
        kind: TUPLE
        args {
          pretty_printed_name: "werkzeug.routing.rules.Rule"
          fully_qualified_name: "werkzeug.routing.rules.Rule"
        }
        args {
          pretty_printed_name: "typing.Mapping[builtins.str,Any]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "typing.Mapping"
        }
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "werkzeug.routing.map.MapAdapter"
          fully_qualified_name: "werkzeug.routing.map.MapAdapter"
        }
      }
      parameters {
        name: "path_info"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      parameters {
        name: "method"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      parameters {
        name: "return_rule"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Literal[builtins.bool]"
          kind: LITERAL
          args {
            pretty_printed_name: "builtins.bool"
            fully_qualified_name: "builtins.bool"
          }
        }
      }
      parameters {
        name: "query_args"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[typing.Mapping[builtins.str,Any],builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "typing.Mapping[builtins.str,Any]"
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "Any"
              kind: ANY
            }
            fully_qualified_name: "typing.Mapping"
          }
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      parameters {
        name: "websocket"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.bool,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bool"
            fully_qualified_name: "builtins.bool"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "t.overload"
      is_overload: true
    }
  }
  attributes {
    name: "map"
    fully_qualified_name: "werkzeug.routing.map.MapAdapter.map"
    type_annotation {
      pretty_printed_name: "werkzeug.routing.map.Map"
      fully_qualified_name: "werkzeug.routing.map.Map"
    }
  }
  attributes {
    name: "server_name"
    fully_qualified_name: "werkzeug.routing.map.MapAdapter.server_name"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  attributes {
    name: "script_name"
    fully_qualified_name: "werkzeug.routing.map.MapAdapter.script_name"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  attributes {
    name: "subdomain"
    fully_qualified_name: "werkzeug.routing.map.MapAdapter.subdomain"
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  attributes {
    name: "url_scheme"
    fully_qualified_name: "werkzeug.routing.map.MapAdapter.url_scheme"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  attributes {
    name: "path_info"
    fully_qualified_name: "werkzeug.routing.map.MapAdapter.path_info"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  attributes {
    name: "default_method"
    fully_qualified_name: "werkzeug.routing.map.MapAdapter.default_method"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  attributes {
    name: "query_args"
    fully_qualified_name: "werkzeug.routing.map.MapAdapter.query_args"
    type_annotation {
      pretty_printed_name: "Union[typing.Mapping[builtins.str,Any],builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "typing.Mapping[builtins.str,Any]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "typing.Mapping"
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  attributes {
    name: "websocket"
    fully_qualified_name: "werkzeug.routing.map.MapAdapter.websocket"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
}
vars {
  name: "__annotations__"
  fully_qualified_name: "werkzeug.routing.map.__annotations__"
  type_annotation {
    pretty_printed_name: "builtins.dict[builtins.str,Any]"
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    args {
      pretty_printed_name: "Any"
      kind: ANY
    }
    fully_qualified_name: "builtins.dict"
  }
}
vars {
  name: "t"
  fully_qualified_name: "typing"
  is_imported_module: true
}
