fully_qualified_name: "tempfile"
classes {
  name: "_TemporaryFileWrapper"
  fully_qualified_name: "tempfile._TemporaryFileWrapper"
  super_classes: "typing.IO"
  methods {
    name: "__init__"
    fully_qualified_name: "tempfile._TemporaryFileWrapper.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "tempfile._TemporaryFileWrapper[typing.AnyStr]"
        args {
          pretty_printed_name: "typing.AnyStr"
          kind: TYPE_VAR
        }
        fully_qualified_name: "tempfile._TemporaryFileWrapper"
      }
    }
    parameters {
      name: "file"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.IO[typing.AnyStr]"
        args {
          pretty_printed_name: "typing.AnyStr"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.IO"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "delete"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
  }
  methods {
    name: "__enter__"
    fully_qualified_name: "tempfile._TemporaryFileWrapper.__enter__"
    return_annotation {
      pretty_printed_name: "tempfile._TemporaryFileWrapper.Self"
      kind: TYPE_VAR
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "tempfile._TemporaryFileWrapper.Self"
        kind: TYPE_VAR
      }
    }
  }
  methods {
    name: "__exit__"
    fully_qualified_name: "tempfile._TemporaryFileWrapper.__exit__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "tempfile._TemporaryFileWrapper[typing.AnyStr]"
        args {
          pretty_printed_name: "typing.AnyStr"
          kind: TYPE_VAR
        }
        fully_qualified_name: "tempfile._TemporaryFileWrapper"
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "Union[Type[builtins.BaseException],None]"
        kind: UNION
        args {
          pretty_printed_name: "Type[builtins.BaseException]"
          kind: TYPE
          args {
            pretty_printed_name: "builtins.BaseException"
            fully_qualified_name: "builtins.BaseException"
          }
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "Union[builtins.BaseException,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.BaseException"
          fully_qualified_name: "builtins.BaseException"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "Union[types.TracebackType,None]"
        kind: UNION
        args {
          pretty_printed_name: "types.TracebackType"
          fully_qualified_name: "types.TracebackType"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "__getattr__"
    fully_qualified_name: "tempfile._TemporaryFileWrapper.__getattr__"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "tempfile._TemporaryFileWrapper[typing.AnyStr]"
        args {
          pretty_printed_name: "typing.AnyStr"
          kind: TYPE_VAR
        }
        fully_qualified_name: "tempfile._TemporaryFileWrapper"
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  methods {
    name: "close"
    fully_qualified_name: "tempfile._TemporaryFileWrapper.close"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "tempfile._TemporaryFileWrapper[typing.AnyStr]"
        args {
          pretty_printed_name: "typing.AnyStr"
          kind: TYPE_VAR
        }
        fully_qualified_name: "tempfile._TemporaryFileWrapper"
      }
    }
  }
  methods {
    name: "__iter__"
    fully_qualified_name: "tempfile._TemporaryFileWrapper.__iter__"
    return_annotation {
      pretty_printed_name: "typing.Iterator[typing.AnyStr]"
      args {
        pretty_printed_name: "typing.AnyStr"
        kind: TYPE_VAR
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "tempfile._TemporaryFileWrapper[typing.AnyStr]"
        args {
          pretty_printed_name: "typing.AnyStr"
          kind: TYPE_VAR
        }
        fully_qualified_name: "tempfile._TemporaryFileWrapper"
      }
    }
  }
  methods {
    name: "__next__"
    fully_qualified_name: "tempfile._TemporaryFileWrapper.__next__"
    return_annotation {
      pretty_printed_name: "typing.AnyStr"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "tempfile._TemporaryFileWrapper[typing.AnyStr]"
        args {
          pretty_printed_name: "typing.AnyStr"
          kind: TYPE_VAR
        }
        fully_qualified_name: "tempfile._TemporaryFileWrapper"
      }
    }
  }
  methods {
    name: "fileno"
    fully_qualified_name: "tempfile._TemporaryFileWrapper.fileno"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "tempfile._TemporaryFileWrapper[typing.AnyStr]"
        args {
          pretty_printed_name: "typing.AnyStr"
          kind: TYPE_VAR
        }
        fully_qualified_name: "tempfile._TemporaryFileWrapper"
      }
    }
  }
  methods {
    name: "flush"
    fully_qualified_name: "tempfile._TemporaryFileWrapper.flush"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "tempfile._TemporaryFileWrapper[typing.AnyStr]"
        args {
          pretty_printed_name: "typing.AnyStr"
          kind: TYPE_VAR
        }
        fully_qualified_name: "tempfile._TemporaryFileWrapper"
      }
    }
  }
  methods {
    name: "isatty"
    fully_qualified_name: "tempfile._TemporaryFileWrapper.isatty"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "tempfile._TemporaryFileWrapper[typing.AnyStr]"
        args {
          pretty_printed_name: "typing.AnyStr"
          kind: TYPE_VAR
        }
        fully_qualified_name: "tempfile._TemporaryFileWrapper"
      }
    }
  }
  methods {
    name: "read"
    fully_qualified_name: "tempfile._TemporaryFileWrapper.read"
    return_annotation {
      pretty_printed_name: "typing.AnyStr"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "tempfile._TemporaryFileWrapper[typing.AnyStr]"
        args {
          pretty_printed_name: "typing.AnyStr"
          kind: TYPE_VAR
        }
        fully_qualified_name: "tempfile._TemporaryFileWrapper"
      }
    }
    parameters {
      name: "n"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
  }
  methods {
    name: "readable"
    fully_qualified_name: "tempfile._TemporaryFileWrapper.readable"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "tempfile._TemporaryFileWrapper[typing.AnyStr]"
        args {
          pretty_printed_name: "typing.AnyStr"
          kind: TYPE_VAR
        }
        fully_qualified_name: "tempfile._TemporaryFileWrapper"
      }
    }
  }
  methods {
    name: "readline"
    fully_qualified_name: "tempfile._TemporaryFileWrapper.readline"
    return_annotation {
      pretty_printed_name: "typing.AnyStr"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "tempfile._TemporaryFileWrapper[typing.AnyStr]"
        args {
          pretty_printed_name: "typing.AnyStr"
          kind: TYPE_VAR
        }
        fully_qualified_name: "tempfile._TemporaryFileWrapper"
      }
    }
    parameters {
      name: "limit"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
  }
  methods {
    name: "readlines"
    fully_qualified_name: "tempfile._TemporaryFileWrapper.readlines"
    return_annotation {
      pretty_printed_name: "builtins.list[typing.AnyStr]"
      args {
        pretty_printed_name: "typing.AnyStr"
        kind: TYPE_VAR
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "tempfile._TemporaryFileWrapper[typing.AnyStr]"
        args {
          pretty_printed_name: "typing.AnyStr"
          kind: TYPE_VAR
        }
        fully_qualified_name: "tempfile._TemporaryFileWrapper"
      }
    }
    parameters {
      name: "hint"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
  }
  methods {
    name: "seek"
    fully_qualified_name: "tempfile._TemporaryFileWrapper.seek"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "tempfile._TemporaryFileWrapper[typing.AnyStr]"
        args {
          pretty_printed_name: "typing.AnyStr"
          kind: TYPE_VAR
        }
        fully_qualified_name: "tempfile._TemporaryFileWrapper"
      }
    }
    parameters {
      name: "offset"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "whence"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
  }
  methods {
    name: "seekable"
    fully_qualified_name: "tempfile._TemporaryFileWrapper.seekable"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "tempfile._TemporaryFileWrapper[typing.AnyStr]"
        args {
          pretty_printed_name: "typing.AnyStr"
          kind: TYPE_VAR
        }
        fully_qualified_name: "tempfile._TemporaryFileWrapper"
      }
    }
  }
  methods {
    name: "tell"
    fully_qualified_name: "tempfile._TemporaryFileWrapper.tell"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "tempfile._TemporaryFileWrapper[typing.AnyStr]"
        args {
          pretty_printed_name: "typing.AnyStr"
          kind: TYPE_VAR
        }
        fully_qualified_name: "tempfile._TemporaryFileWrapper"
      }
    }
  }
  methods {
    name: "truncate"
    fully_qualified_name: "tempfile._TemporaryFileWrapper.truncate"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "tempfile._TemporaryFileWrapper[typing.AnyStr]"
        args {
          pretty_printed_name: "typing.AnyStr"
          kind: TYPE_VAR
        }
        fully_qualified_name: "tempfile._TemporaryFileWrapper"
      }
    }
    parameters {
      name: "size"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "writable"
    fully_qualified_name: "tempfile._TemporaryFileWrapper.writable"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "tempfile._TemporaryFileWrapper[typing.AnyStr]"
        args {
          pretty_printed_name: "typing.AnyStr"
          kind: TYPE_VAR
        }
        fully_qualified_name: "tempfile._TemporaryFileWrapper"
      }
    }
  }
  overloaded_methods {
    name: "write"
    fullname: "tempfile._TemporaryFileWrapper.write"
    definitions {
      name: "write"
      fully_qualified_name: "tempfile._TemporaryFileWrapper.write"
      return_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "tempfile._TemporaryFileWrapper[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "tempfile._TemporaryFileWrapper"
        }
      }
      parameters {
        name: "s"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "write"
      fully_qualified_name: "tempfile._TemporaryFileWrapper.write"
      return_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "tempfile._TemporaryFileWrapper[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "tempfile._TemporaryFileWrapper"
        }
      }
      parameters {
        name: "s"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]"
              kind: TYPE_ALIAS
              args {
                pretty_printed_name: "Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]"
                kind: UNION
                args {
                  pretty_printed_name: "builtins.bytearray"
                  fully_qualified_name: "builtins.bytearray"
                }
                args {
                  pretty_printed_name: "builtins.memoryview"
                  fully_qualified_name: "builtins.memoryview"
                }
                args {
                  pretty_printed_name: "array.array[Any]"
                  args {
                    pretty_printed_name: "Any"
                    kind: ANY
                  }
                  fully_qualified_name: "array.array"
                }
                args {
                  pretty_printed_name: "mmap.mmap"
                  fully_qualified_name: "mmap.mmap"
                }
                args {
                  pretty_printed_name: "ctypes._CData"
                  fully_qualified_name: "ctypes._CData"
                }
                args {
                  pretty_printed_name: "pickle.PickleBuffer"
                  fully_qualified_name: "pickle.PickleBuffer"
                }
              }
              fully_qualified_name: "_typeshed.WriteableBuffer"
            }
          }
          fully_qualified_name: "_typeshed.ReadableBuffer"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "write"
      fully_qualified_name: "tempfile._TemporaryFileWrapper.write"
      return_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "tempfile._TemporaryFileWrapper[typing.AnyStr]"
          args {
            pretty_printed_name: "typing.AnyStr"
            kind: TYPE_VAR
          }
          fully_qualified_name: "tempfile._TemporaryFileWrapper"
        }
      }
      parameters {
        name: "s"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "typing.AnyStr"
          kind: TYPE_VAR
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
  }
  overloaded_methods {
    name: "writelines"
    fullname: "tempfile._TemporaryFileWrapper.writelines"
    definitions {
      name: "writelines"
      fully_qualified_name: "tempfile._TemporaryFileWrapper.writelines"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "tempfile._TemporaryFileWrapper[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "tempfile._TemporaryFileWrapper"
        }
      }
      parameters {
        name: "lines"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "writelines"
      fully_qualified_name: "tempfile._TemporaryFileWrapper.writelines"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "tempfile._TemporaryFileWrapper[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "tempfile._TemporaryFileWrapper"
        }
      }
      parameters {
        name: "lines"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "typing.Iterable[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]]"
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              args {
                pretty_printed_name: "TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]"
                kind: TYPE_ALIAS
                args {
                  pretty_printed_name: "Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]"
                  kind: UNION
                  args {
                    pretty_printed_name: "builtins.bytearray"
                    fully_qualified_name: "builtins.bytearray"
                  }
                  args {
                    pretty_printed_name: "builtins.memoryview"
                    fully_qualified_name: "builtins.memoryview"
                  }
                  args {
                    pretty_printed_name: "array.array[Any]"
                    args {
                      pretty_printed_name: "Any"
                      kind: ANY
                    }
                    fully_qualified_name: "array.array"
                  }
                  args {
                    pretty_printed_name: "mmap.mmap"
                    fully_qualified_name: "mmap.mmap"
                  }
                  args {
                    pretty_printed_name: "ctypes._CData"
                    fully_qualified_name: "ctypes._CData"
                  }
                  args {
                    pretty_printed_name: "pickle.PickleBuffer"
                    fully_qualified_name: "pickle.PickleBuffer"
                  }
                }
                fully_qualified_name: "_typeshed.WriteableBuffer"
              }
            }
            fully_qualified_name: "_typeshed.ReadableBuffer"
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "writelines"
      fully_qualified_name: "tempfile._TemporaryFileWrapper.writelines"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "tempfile._TemporaryFileWrapper[typing.AnyStr]"
          args {
            pretty_printed_name: "typing.AnyStr"
            kind: TYPE_VAR
          }
          fully_qualified_name: "tempfile._TemporaryFileWrapper"
        }
      }
      parameters {
        name: "lines"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "typing.Iterable[typing.AnyStr]"
          args {
            pretty_printed_name: "typing.AnyStr"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
  }
  is_generic: true
  attributes {
    name: "file"
    fully_qualified_name: "tempfile._TemporaryFileWrapper.file"
    type_annotation {
      pretty_printed_name: "typing.IO[typing.AnyStr]"
      args {
        pretty_printed_name: "typing.AnyStr"
        kind: TYPE_VAR
      }
      fully_qualified_name: "typing.IO"
    }
  }
  attributes {
    name: "name"
    fully_qualified_name: "tempfile._TemporaryFileWrapper.name"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  attributes {
    name: "delete"
    fully_qualified_name: "tempfile._TemporaryFileWrapper.delete"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
}
classes {
  name: "SpooledTemporaryFile"
  fully_qualified_name: "tempfile.SpooledTemporaryFile"
  super_classes: "typing.IO"
  super_classes: "builtins.object"
  methods {
    name: "encoding"
    fully_qualified_name: "tempfile.SpooledTemporaryFile.encoding"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "tempfile.SpooledTemporaryFile[typing.AnyStr]"
        args {
          pretty_printed_name: "typing.AnyStr"
          kind: TYPE_VAR
        }
        fully_qualified_name: "tempfile.SpooledTemporaryFile"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "newlines"
    fully_qualified_name: "tempfile.SpooledTemporaryFile.newlines"
    return_annotation {
      pretty_printed_name: "Union[builtins.str,builtins.tuple[builtins.str],None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.tuple[builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "builtins.tuple"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "tempfile.SpooledTemporaryFile[typing.AnyStr]"
        args {
          pretty_printed_name: "typing.AnyStr"
          kind: TYPE_VAR
        }
        fully_qualified_name: "tempfile.SpooledTemporaryFile"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "errors"
    fully_qualified_name: "tempfile.SpooledTemporaryFile.errors"
    return_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "tempfile.SpooledTemporaryFile[typing.AnyStr]"
        args {
          pretty_printed_name: "typing.AnyStr"
          kind: TYPE_VAR
        }
        fully_qualified_name: "tempfile.SpooledTemporaryFile"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "rollover"
    fully_qualified_name: "tempfile.SpooledTemporaryFile.rollover"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "tempfile.SpooledTemporaryFile[typing.AnyStr]"
        args {
          pretty_printed_name: "typing.AnyStr"
          kind: TYPE_VAR
        }
        fully_qualified_name: "tempfile.SpooledTemporaryFile"
      }
    }
  }
  methods {
    name: "__enter__"
    fully_qualified_name: "tempfile.SpooledTemporaryFile.__enter__"
    return_annotation {
      pretty_printed_name: "tempfile.SpooledTemporaryFile.Self"
      kind: TYPE_VAR
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "tempfile.SpooledTemporaryFile.Self"
        kind: TYPE_VAR
      }
    }
  }
  methods {
    name: "__exit__"
    fully_qualified_name: "tempfile.SpooledTemporaryFile.__exit__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "tempfile.SpooledTemporaryFile[typing.AnyStr]"
        args {
          pretty_printed_name: "typing.AnyStr"
          kind: TYPE_VAR
        }
        fully_qualified_name: "tempfile.SpooledTemporaryFile"
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "Union[Type[builtins.BaseException],None]"
        kind: UNION
        args {
          pretty_printed_name: "Type[builtins.BaseException]"
          kind: TYPE
          args {
            pretty_printed_name: "builtins.BaseException"
            fully_qualified_name: "builtins.BaseException"
          }
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "Union[builtins.BaseException,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.BaseException"
          fully_qualified_name: "builtins.BaseException"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "Union[types.TracebackType,None]"
        kind: UNION
        args {
          pretty_printed_name: "types.TracebackType"
          fully_qualified_name: "types.TracebackType"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "close"
    fully_qualified_name: "tempfile.SpooledTemporaryFile.close"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "tempfile.SpooledTemporaryFile[typing.AnyStr]"
        args {
          pretty_printed_name: "typing.AnyStr"
          kind: TYPE_VAR
        }
        fully_qualified_name: "tempfile.SpooledTemporaryFile"
      }
    }
  }
  methods {
    name: "fileno"
    fully_qualified_name: "tempfile.SpooledTemporaryFile.fileno"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "tempfile.SpooledTemporaryFile[typing.AnyStr]"
        args {
          pretty_printed_name: "typing.AnyStr"
          kind: TYPE_VAR
        }
        fully_qualified_name: "tempfile.SpooledTemporaryFile"
      }
    }
  }
  methods {
    name: "flush"
    fully_qualified_name: "tempfile.SpooledTemporaryFile.flush"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "tempfile.SpooledTemporaryFile[typing.AnyStr]"
        args {
          pretty_printed_name: "typing.AnyStr"
          kind: TYPE_VAR
        }
        fully_qualified_name: "tempfile.SpooledTemporaryFile"
      }
    }
  }
  methods {
    name: "isatty"
    fully_qualified_name: "tempfile.SpooledTemporaryFile.isatty"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "tempfile.SpooledTemporaryFile[typing.AnyStr]"
        args {
          pretty_printed_name: "typing.AnyStr"
          kind: TYPE_VAR
        }
        fully_qualified_name: "tempfile.SpooledTemporaryFile"
      }
    }
  }
  methods {
    name: "read"
    fully_qualified_name: "tempfile.SpooledTemporaryFile.read"
    return_annotation {
      pretty_printed_name: "typing.AnyStr"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "tempfile.SpooledTemporaryFile[typing.AnyStr]"
        args {
          pretty_printed_name: "typing.AnyStr"
          kind: TYPE_VAR
        }
        fully_qualified_name: "tempfile.SpooledTemporaryFile"
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
  }
  methods {
    name: "readline"
    fully_qualified_name: "tempfile.SpooledTemporaryFile.readline"
    return_annotation {
      pretty_printed_name: "typing.AnyStr"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "tempfile.SpooledTemporaryFile[typing.AnyStr]"
        args {
          pretty_printed_name: "typing.AnyStr"
          kind: TYPE_VAR
        }
        fully_qualified_name: "tempfile.SpooledTemporaryFile"
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "readlines"
    fully_qualified_name: "tempfile.SpooledTemporaryFile.readlines"
    return_annotation {
      pretty_printed_name: "builtins.list[typing.AnyStr]"
      args {
        pretty_printed_name: "typing.AnyStr"
        kind: TYPE_VAR
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "tempfile.SpooledTemporaryFile[typing.AnyStr]"
        args {
          pretty_printed_name: "typing.AnyStr"
          kind: TYPE_VAR
        }
        fully_qualified_name: "tempfile.SpooledTemporaryFile"
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
  }
  methods {
    name: "seek"
    fully_qualified_name: "tempfile.SpooledTemporaryFile.seek"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "tempfile.SpooledTemporaryFile[typing.AnyStr]"
        args {
          pretty_printed_name: "typing.AnyStr"
          kind: TYPE_VAR
        }
        fully_qualified_name: "tempfile.SpooledTemporaryFile"
      }
    }
    parameters {
      name: "offset"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "whence"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
  }
  methods {
    name: "tell"
    fully_qualified_name: "tempfile.SpooledTemporaryFile.tell"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "tempfile.SpooledTemporaryFile[typing.AnyStr]"
        args {
          pretty_printed_name: "typing.AnyStr"
          kind: TYPE_VAR
        }
        fully_qualified_name: "tempfile.SpooledTemporaryFile"
      }
    }
  }
  methods {
    name: "truncate"
    fully_qualified_name: "tempfile.SpooledTemporaryFile.truncate"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "tempfile.SpooledTemporaryFile[typing.AnyStr]"
        args {
          pretty_printed_name: "typing.AnyStr"
          kind: TYPE_VAR
        }
        fully_qualified_name: "tempfile.SpooledTemporaryFile"
      }
    }
    parameters {
      name: "size"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "__iter__"
    fully_qualified_name: "tempfile.SpooledTemporaryFile.__iter__"
    return_annotation {
      pretty_printed_name: "typing.Iterator[typing.AnyStr]"
      args {
        pretty_printed_name: "typing.AnyStr"
        kind: TYPE_VAR
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "tempfile.SpooledTemporaryFile[typing.AnyStr]"
        args {
          pretty_printed_name: "typing.AnyStr"
          kind: TYPE_VAR
        }
        fully_qualified_name: "tempfile.SpooledTemporaryFile"
      }
    }
  }
  methods {
    name: "readable"
    fully_qualified_name: "tempfile.SpooledTemporaryFile.readable"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "tempfile.SpooledTemporaryFile[typing.AnyStr]"
        args {
          pretty_printed_name: "typing.AnyStr"
          kind: TYPE_VAR
        }
        fully_qualified_name: "tempfile.SpooledTemporaryFile"
      }
    }
  }
  methods {
    name: "seekable"
    fully_qualified_name: "tempfile.SpooledTemporaryFile.seekable"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "tempfile.SpooledTemporaryFile[typing.AnyStr]"
        args {
          pretty_printed_name: "typing.AnyStr"
          kind: TYPE_VAR
        }
        fully_qualified_name: "tempfile.SpooledTemporaryFile"
      }
    }
  }
  methods {
    name: "writable"
    fully_qualified_name: "tempfile.SpooledTemporaryFile.writable"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "tempfile.SpooledTemporaryFile[typing.AnyStr]"
        args {
          pretty_printed_name: "typing.AnyStr"
          kind: TYPE_VAR
        }
        fully_qualified_name: "tempfile.SpooledTemporaryFile"
      }
    }
  }
  methods {
    name: "__next__"
    fully_qualified_name: "tempfile.SpooledTemporaryFile.__next__"
    return_annotation {
      pretty_printed_name: "typing.AnyStr"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "tempfile.SpooledTemporaryFile[typing.AnyStr]"
        args {
          pretty_printed_name: "typing.AnyStr"
          kind: TYPE_VAR
        }
        fully_qualified_name: "tempfile.SpooledTemporaryFile"
      }
    }
  }
  overloaded_methods {
    name: "__init__"
    fullname: "tempfile.SpooledTemporaryFile.__init__"
    definitions {
      name: "__init__"
      fully_qualified_name: "tempfile.SpooledTemporaryFile.__init__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "tempfile.SpooledTemporaryFile[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "tempfile.SpooledTemporaryFile"
        }
      }
      parameters {
        name: "max_size"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
      parameters {
        name: "mode"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]"
            kind: UNION
            args {
              pretty_printed_name: "Literal[builtins.str]"
              kind: LITERAL
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
            }
            args {
              pretty_printed_name: "Literal[builtins.str]"
              kind: LITERAL
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
            }
            args {
              pretty_printed_name: "Literal[builtins.str]"
              kind: LITERAL
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
            }
            args {
              pretty_printed_name: "Literal[builtins.str]"
              kind: LITERAL
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
            }
            args {
              pretty_printed_name: "Literal[builtins.str]"
              kind: LITERAL
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
            }
            args {
              pretty_printed_name: "Literal[builtins.str]"
              kind: LITERAL
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
            }
            args {
              pretty_printed_name: "Literal[builtins.str]"
              kind: LITERAL
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
            }
            args {
              pretty_printed_name: "Literal[builtins.str]"
              kind: LITERAL
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
            }
          }
          fully_qualified_name: "tempfile._BytesMode"
        }
      }
      parameters {
        name: "buffering"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
      parameters {
        name: "encoding"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      parameters {
        name: "newline"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      parameters {
        name: "suffix"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      parameters {
        name: "prefix"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      parameters {
        name: "dir"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      parameters {
        name: "errors"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__init__"
      fully_qualified_name: "tempfile.SpooledTemporaryFile.__init__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "tempfile.SpooledTemporaryFile[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "tempfile.SpooledTemporaryFile"
        }
      }
      parameters {
        name: "max_size"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
      parameters {
        name: "mode"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]"
            kind: UNION
            args {
              pretty_printed_name: "Literal[builtins.str]"
              kind: LITERAL
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
            }
            args {
              pretty_printed_name: "Literal[builtins.str]"
              kind: LITERAL
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
            }
            args {
              pretty_printed_name: "Literal[builtins.str]"
              kind: LITERAL
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
            }
            args {
              pretty_printed_name: "Literal[builtins.str]"
              kind: LITERAL
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
            }
            args {
              pretty_printed_name: "Literal[builtins.str]"
              kind: LITERAL
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
            }
            args {
              pretty_printed_name: "Literal[builtins.str]"
              kind: LITERAL
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
            }
            args {
              pretty_printed_name: "Literal[builtins.str]"
              kind: LITERAL
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
            }
            args {
              pretty_printed_name: "Literal[builtins.str]"
              kind: LITERAL
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
            }
            args {
              pretty_printed_name: "Literal[builtins.str]"
              kind: LITERAL
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
            }
            args {
              pretty_printed_name: "Literal[builtins.str]"
              kind: LITERAL
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
            }
            args {
              pretty_printed_name: "Literal[builtins.str]"
              kind: LITERAL
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
            }
            args {
              pretty_printed_name: "Literal[builtins.str]"
              kind: LITERAL
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
            }
            args {
              pretty_printed_name: "Literal[builtins.str]"
              kind: LITERAL
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
            }
            args {
              pretty_printed_name: "Literal[builtins.str]"
              kind: LITERAL
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
            }
            args {
              pretty_printed_name: "Literal[builtins.str]"
              kind: LITERAL
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
            }
            args {
              pretty_printed_name: "Literal[builtins.str]"
              kind: LITERAL
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
            }
          }
          fully_qualified_name: "tempfile._StrMode"
        }
      }
      parameters {
        name: "buffering"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
      parameters {
        name: "encoding"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      parameters {
        name: "newline"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      parameters {
        name: "suffix"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      parameters {
        name: "prefix"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      parameters {
        name: "dir"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      parameters {
        name: "errors"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__init__"
      fully_qualified_name: "tempfile.SpooledTemporaryFile.__init__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "tempfile.SpooledTemporaryFile[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "tempfile.SpooledTemporaryFile"
        }
      }
      parameters {
        name: "max_size"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
      parameters {
        name: "mode"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]"
            kind: UNION
            args {
              pretty_printed_name: "Literal[builtins.str]"
              kind: LITERAL
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
            }
            args {
              pretty_printed_name: "Literal[builtins.str]"
              kind: LITERAL
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
            }
            args {
              pretty_printed_name: "Literal[builtins.str]"
              kind: LITERAL
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
            }
            args {
              pretty_printed_name: "Literal[builtins.str]"
              kind: LITERAL
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
            }
            args {
              pretty_printed_name: "Literal[builtins.str]"
              kind: LITERAL
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
            }
            args {
              pretty_printed_name: "Literal[builtins.str]"
              kind: LITERAL
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
            }
            args {
              pretty_printed_name: "Literal[builtins.str]"
              kind: LITERAL
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
            }
            args {
              pretty_printed_name: "Literal[builtins.str]"
              kind: LITERAL
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
            }
            args {
              pretty_printed_name: "Literal[builtins.str]"
              kind: LITERAL
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
            }
            args {
              pretty_printed_name: "Literal[builtins.str]"
              kind: LITERAL
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
            }
            args {
              pretty_printed_name: "Literal[builtins.str]"
              kind: LITERAL
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
            }
            args {
              pretty_printed_name: "Literal[builtins.str]"
              kind: LITERAL
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
            }
            args {
              pretty_printed_name: "Literal[builtins.str]"
              kind: LITERAL
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
            }
            args {
              pretty_printed_name: "Literal[builtins.str]"
              kind: LITERAL
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
            }
            args {
              pretty_printed_name: "Literal[builtins.str]"
              kind: LITERAL
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
            }
            args {
              pretty_printed_name: "Literal[builtins.str]"
              kind: LITERAL
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
            }
          }
          fully_qualified_name: "tempfile._StrMode"
        }
      }
      parameters {
        name: "buffering"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
      parameters {
        name: "encoding"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      parameters {
        name: "newline"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      parameters {
        name: "suffix"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      parameters {
        name: "prefix"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      parameters {
        name: "dir"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      parameters {
        name: "errors"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__init__"
      fully_qualified_name: "tempfile.SpooledTemporaryFile.__init__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "tempfile.SpooledTemporaryFile[typing.AnyStr]"
          args {
            pretty_printed_name: "typing.AnyStr"
            kind: TYPE_VAR
          }
          fully_qualified_name: "tempfile.SpooledTemporaryFile"
        }
      }
      parameters {
        name: "max_size"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
      parameters {
        name: "mode"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      parameters {
        name: "buffering"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
      parameters {
        name: "encoding"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      parameters {
        name: "newline"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      parameters {
        name: "suffix"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      parameters {
        name: "prefix"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      parameters {
        name: "dir"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      parameters {
        name: "errors"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__init__"
      fully_qualified_name: "tempfile.SpooledTemporaryFile.__init__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "tempfile.SpooledTemporaryFile[typing.AnyStr]"
          args {
            pretty_printed_name: "typing.AnyStr"
            kind: TYPE_VAR
          }
          fully_qualified_name: "tempfile.SpooledTemporaryFile"
        }
      }
      parameters {
        name: "max_size"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
      parameters {
        name: "mode"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      parameters {
        name: "buffering"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
      parameters {
        name: "encoding"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      parameters {
        name: "newline"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      parameters {
        name: "suffix"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      parameters {
        name: "prefix"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      parameters {
        name: "dir"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      parameters {
        name: "errors"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
  }
  overloaded_methods {
    name: "write"
    fullname: "tempfile.SpooledTemporaryFile.write"
    definitions {
      name: "write"
      fully_qualified_name: "tempfile.SpooledTemporaryFile.write"
      return_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "tempfile.SpooledTemporaryFile[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "tempfile.SpooledTemporaryFile"
        }
      }
      parameters {
        name: "s"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "write"
      fully_qualified_name: "tempfile.SpooledTemporaryFile.write"
      return_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "tempfile.SpooledTemporaryFile[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "tempfile.SpooledTemporaryFile"
        }
      }
      parameters {
        name: "s"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]"
              kind: TYPE_ALIAS
              args {
                pretty_printed_name: "Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]"
                kind: UNION
                args {
                  pretty_printed_name: "builtins.bytearray"
                  fully_qualified_name: "builtins.bytearray"
                }
                args {
                  pretty_printed_name: "builtins.memoryview"
                  fully_qualified_name: "builtins.memoryview"
                }
                args {
                  pretty_printed_name: "array.array[Any]"
                  args {
                    pretty_printed_name: "Any"
                    kind: ANY
                  }
                  fully_qualified_name: "array.array"
                }
                args {
                  pretty_printed_name: "mmap.mmap"
                  fully_qualified_name: "mmap.mmap"
                }
                args {
                  pretty_printed_name: "ctypes._CData"
                  fully_qualified_name: "ctypes._CData"
                }
                args {
                  pretty_printed_name: "pickle.PickleBuffer"
                  fully_qualified_name: "pickle.PickleBuffer"
                }
              }
              fully_qualified_name: "_typeshed.WriteableBuffer"
            }
          }
          fully_qualified_name: "_typeshed.ReadableBuffer"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "write"
      fully_qualified_name: "tempfile.SpooledTemporaryFile.write"
      return_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "tempfile.SpooledTemporaryFile[typing.AnyStr]"
          args {
            pretty_printed_name: "typing.AnyStr"
            kind: TYPE_VAR
          }
          fully_qualified_name: "tempfile.SpooledTemporaryFile"
        }
      }
      parameters {
        name: "s"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "typing.AnyStr"
          kind: TYPE_VAR
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
  }
  overloaded_methods {
    name: "writelines"
    fullname: "tempfile.SpooledTemporaryFile.writelines"
    definitions {
      name: "writelines"
      fully_qualified_name: "tempfile.SpooledTemporaryFile.writelines"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "tempfile.SpooledTemporaryFile[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "tempfile.SpooledTemporaryFile"
        }
      }
      parameters {
        name: "iterable"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "typing.Iterable[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "writelines"
      fully_qualified_name: "tempfile.SpooledTemporaryFile.writelines"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "tempfile.SpooledTemporaryFile[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "tempfile.SpooledTemporaryFile"
        }
      }
      parameters {
        name: "iterable"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "typing.Iterable[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]]"
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              args {
                pretty_printed_name: "TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]"
                kind: TYPE_ALIAS
                args {
                  pretty_printed_name: "Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]"
                  kind: UNION
                  args {
                    pretty_printed_name: "builtins.bytearray"
                    fully_qualified_name: "builtins.bytearray"
                  }
                  args {
                    pretty_printed_name: "builtins.memoryview"
                    fully_qualified_name: "builtins.memoryview"
                  }
                  args {
                    pretty_printed_name: "array.array[Any]"
                    args {
                      pretty_printed_name: "Any"
                      kind: ANY
                    }
                    fully_qualified_name: "array.array"
                  }
                  args {
                    pretty_printed_name: "mmap.mmap"
                    fully_qualified_name: "mmap.mmap"
                  }
                  args {
                    pretty_printed_name: "ctypes._CData"
                    fully_qualified_name: "ctypes._CData"
                  }
                  args {
                    pretty_printed_name: "pickle.PickleBuffer"
                    fully_qualified_name: "pickle.PickleBuffer"
                  }
                }
                fully_qualified_name: "_typeshed.WriteableBuffer"
              }
            }
            fully_qualified_name: "_typeshed.ReadableBuffer"
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "writelines"
      fully_qualified_name: "tempfile.SpooledTemporaryFile.writelines"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "tempfile.SpooledTemporaryFile[typing.AnyStr]"
          args {
            pretty_printed_name: "typing.AnyStr"
            kind: TYPE_VAR
          }
          fully_qualified_name: "tempfile.SpooledTemporaryFile"
        }
      }
      parameters {
        name: "iterable"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "typing.Iterable[typing.AnyStr]"
          args {
            pretty_printed_name: "typing.AnyStr"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
  }
  is_generic: true
}
classes {
  name: "TemporaryDirectory"
  fully_qualified_name: "tempfile.TemporaryDirectory"
  super_classes: "builtins.object"
  methods {
    name: "cleanup"
    fully_qualified_name: "tempfile.TemporaryDirectory.cleanup"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "tempfile.TemporaryDirectory[typing.AnyStr]"
        args {
          pretty_printed_name: "typing.AnyStr"
          kind: TYPE_VAR
        }
        fully_qualified_name: "tempfile.TemporaryDirectory"
      }
    }
  }
  methods {
    name: "__enter__"
    fully_qualified_name: "tempfile.TemporaryDirectory.__enter__"
    return_annotation {
      pretty_printed_name: "typing.AnyStr"
      kind: TYPE_VAR
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "tempfile.TemporaryDirectory[typing.AnyStr]"
        args {
          pretty_printed_name: "typing.AnyStr"
          kind: TYPE_VAR
        }
        fully_qualified_name: "tempfile.TemporaryDirectory"
      }
    }
  }
  methods {
    name: "__exit__"
    fully_qualified_name: "tempfile.TemporaryDirectory.__exit__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "tempfile.TemporaryDirectory[typing.AnyStr]"
        args {
          pretty_printed_name: "typing.AnyStr"
          kind: TYPE_VAR
        }
        fully_qualified_name: "tempfile.TemporaryDirectory"
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "Union[Type[builtins.BaseException],None]"
        kind: UNION
        args {
          pretty_printed_name: "Type[builtins.BaseException]"
          kind: TYPE
          args {
            pretty_printed_name: "builtins.BaseException"
            fully_qualified_name: "builtins.BaseException"
          }
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "Union[builtins.BaseException,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.BaseException"
          fully_qualified_name: "builtins.BaseException"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "Union[types.TracebackType,None]"
        kind: UNION
        args {
          pretty_printed_name: "types.TracebackType"
          fully_qualified_name: "types.TracebackType"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  overloaded_methods {
    name: "__init__"
    fullname: "tempfile.TemporaryDirectory.__init__"
    definitions {
      name: "__init__"
      fully_qualified_name: "tempfile.TemporaryDirectory.__init__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "tempfile.TemporaryDirectory[builtins.str]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          fully_qualified_name: "tempfile.TemporaryDirectory"
        }
      }
      parameters {
        name: "suffix"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      parameters {
        name: "prefix"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.str,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      parameters {
        name: "dir"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]],None]"
          kind: UNION
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.str,os.PathLike[builtins.str]]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "os.PathLike[builtins.str]"
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
                fully_qualified_name: "os.PathLike"
              }
            }
            fully_qualified_name: "_typeshed.StrPath"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__init__"
      fully_qualified_name: "tempfile.TemporaryDirectory.__init__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "tempfile.TemporaryDirectory[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "tempfile.TemporaryDirectory"
        }
      }
      parameters {
        name: "suffix"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.bytes,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      parameters {
        name: "prefix"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[builtins.bytes,None]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      parameters {
        name: "dir"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "Union[TypeAlias[Union[builtins.bytes,os.PathLike[builtins.bytes]]],None]"
          kind: UNION
          args {
            pretty_printed_name: "TypeAlias[Union[builtins.bytes,os.PathLike[builtins.bytes]]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[builtins.bytes,os.PathLike[builtins.bytes]]"
              kind: UNION
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              args {
                pretty_printed_name: "os.PathLike[builtins.bytes]"
                args {
                  pretty_printed_name: "builtins.bytes"
                  fully_qualified_name: "builtins.bytes"
                }
                fully_qualified_name: "os.PathLike"
              }
            }
            fully_qualified_name: "_typeshed.BytesPath"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
  }
  is_generic: true
  attributes {
    name: "name"
    fully_qualified_name: "tempfile.TemporaryDirectory.name"
    type_annotation {
      pretty_printed_name: "typing.AnyStr"
      kind: TYPE_VAR
    }
  }
}
functions {
  name: "mktemp"
  fully_qualified_name: "tempfile.mktemp"
  return_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
  parameters {
    name: "suffix"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  parameters {
    name: "prefix"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  parameters {
    name: "dir"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]],None]"
      kind: UNION
      args {
        pretty_printed_name: "TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[builtins.str,os.PathLike[builtins.str]]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "os.PathLike[builtins.str]"
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            fully_qualified_name: "os.PathLike"
          }
        }
        fully_qualified_name: "_typeshed.StrPath"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
}
functions {
  name: "gettempdirb"
  fully_qualified_name: "tempfile.gettempdirb"
  return_annotation {
    pretty_printed_name: "builtins.bytes"
    fully_qualified_name: "builtins.bytes"
  }
}
functions {
  name: "gettempprefixb"
  fully_qualified_name: "tempfile.gettempprefixb"
  return_annotation {
    pretty_printed_name: "builtins.bytes"
    fully_qualified_name: "builtins.bytes"
  }
}
functions {
  name: "gettempdir"
  fully_qualified_name: "tempfile.gettempdir"
  return_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
}
functions {
  name: "gettempprefix"
  fully_qualified_name: "tempfile.gettempprefix"
  return_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
}
overloaded_functions {
  name: "NamedTemporaryFile"
  fullname: "tempfile.NamedTemporaryFile"
  definitions {
    name: "NamedTemporaryFile"
    fully_qualified_name: "tempfile.NamedTemporaryFile"
    return_annotation {
      pretty_printed_name: "tempfile._TemporaryFileWrapper[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "tempfile._TemporaryFileWrapper"
    }
    parameters {
      name: "mode"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]"
          kind: UNION
          args {
            pretty_printed_name: "Literal[builtins.str]"
            kind: LITERAL
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          args {
            pretty_printed_name: "Literal[builtins.str]"
            kind: LITERAL
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          args {
            pretty_printed_name: "Literal[builtins.str]"
            kind: LITERAL
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          args {
            pretty_printed_name: "Literal[builtins.str]"
            kind: LITERAL
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          args {
            pretty_printed_name: "Literal[builtins.str]"
            kind: LITERAL
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          args {
            pretty_printed_name: "Literal[builtins.str]"
            kind: LITERAL
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          args {
            pretty_printed_name: "Literal[builtins.str]"
            kind: LITERAL
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          args {
            pretty_printed_name: "Literal[builtins.str]"
            kind: LITERAL
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          args {
            pretty_printed_name: "Literal[builtins.str]"
            kind: LITERAL
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          args {
            pretty_printed_name: "Literal[builtins.str]"
            kind: LITERAL
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          args {
            pretty_printed_name: "Literal[builtins.str]"
            kind: LITERAL
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          args {
            pretty_printed_name: "Literal[builtins.str]"
            kind: LITERAL
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          args {
            pretty_printed_name: "Literal[builtins.str]"
            kind: LITERAL
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          args {
            pretty_printed_name: "Literal[builtins.str]"
            kind: LITERAL
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          args {
            pretty_printed_name: "Literal[builtins.str]"
            kind: LITERAL
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          args {
            pretty_printed_name: "Literal[builtins.str]"
            kind: LITERAL
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
        }
        fully_qualified_name: "tempfile._StrMode"
      }
    }
    parameters {
      name: "buffering"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "encoding"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "newline"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "suffix"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.AnyStr,None]"
        kind: UNION
        args {
          pretty_printed_name: "typing.AnyStr"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "prefix"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.AnyStr,None]"
        kind: UNION
        args {
          pretty_printed_name: "typing.AnyStr"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "dir"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[TypeAlias[Union[typing.AnyStr,os.PathLike[typing.AnyStr]]],None]"
        kind: UNION
        args {
          pretty_printed_name: "TypeAlias[Union[typing.AnyStr,os.PathLike[typing.AnyStr]]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[typing.AnyStr,os.PathLike[typing.AnyStr]]"
            kind: UNION
            args {
              pretty_printed_name: "typing.AnyStr"
              kind: TYPE_VAR
            }
            args {
              pretty_printed_name: "os.PathLike[typing.AnyStr]"
              args {
                pretty_printed_name: "typing.AnyStr"
                kind: TYPE_VAR
              }
              fully_qualified_name: "os.PathLike"
            }
          }
          fully_qualified_name: "_typeshed.GenericPath"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "delete"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    parameters {
      name: "errors"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "NamedTemporaryFile"
    fully_qualified_name: "tempfile.NamedTemporaryFile"
    return_annotation {
      pretty_printed_name: "tempfile._TemporaryFileWrapper[builtins.bytes]"
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
      fully_qualified_name: "tempfile._TemporaryFileWrapper"
    }
    parameters {
      name: "mode"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]"
          kind: UNION
          args {
            pretty_printed_name: "Literal[builtins.str]"
            kind: LITERAL
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          args {
            pretty_printed_name: "Literal[builtins.str]"
            kind: LITERAL
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          args {
            pretty_printed_name: "Literal[builtins.str]"
            kind: LITERAL
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          args {
            pretty_printed_name: "Literal[builtins.str]"
            kind: LITERAL
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          args {
            pretty_printed_name: "Literal[builtins.str]"
            kind: LITERAL
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          args {
            pretty_printed_name: "Literal[builtins.str]"
            kind: LITERAL
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          args {
            pretty_printed_name: "Literal[builtins.str]"
            kind: LITERAL
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          args {
            pretty_printed_name: "Literal[builtins.str]"
            kind: LITERAL
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
        }
        fully_qualified_name: "tempfile._BytesMode"
      }
    }
    parameters {
      name: "buffering"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "encoding"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "newline"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "suffix"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.AnyStr,None]"
        kind: UNION
        args {
          pretty_printed_name: "typing.AnyStr"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "prefix"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.AnyStr,None]"
        kind: UNION
        args {
          pretty_printed_name: "typing.AnyStr"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "dir"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[TypeAlias[Union[typing.AnyStr,os.PathLike[typing.AnyStr]]],None]"
        kind: UNION
        args {
          pretty_printed_name: "TypeAlias[Union[typing.AnyStr,os.PathLike[typing.AnyStr]]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[typing.AnyStr,os.PathLike[typing.AnyStr]]"
            kind: UNION
            args {
              pretty_printed_name: "typing.AnyStr"
              kind: TYPE_VAR
            }
            args {
              pretty_printed_name: "os.PathLike[typing.AnyStr]"
              args {
                pretty_printed_name: "typing.AnyStr"
                kind: TYPE_VAR
              }
              fully_qualified_name: "os.PathLike"
            }
          }
          fully_qualified_name: "_typeshed.GenericPath"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "delete"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    parameters {
      name: "errors"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "NamedTemporaryFile"
    fully_qualified_name: "tempfile.NamedTemporaryFile"
    return_annotation {
      pretty_printed_name: "tempfile._TemporaryFileWrapper[Any]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "tempfile._TemporaryFileWrapper"
    }
    parameters {
      name: "mode"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "buffering"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "encoding"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "newline"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "suffix"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.AnyStr,None]"
        kind: UNION
        args {
          pretty_printed_name: "typing.AnyStr"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "prefix"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.AnyStr,None]"
        kind: UNION
        args {
          pretty_printed_name: "typing.AnyStr"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "dir"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[TypeAlias[Union[typing.AnyStr,os.PathLike[typing.AnyStr]]],None]"
        kind: UNION
        args {
          pretty_printed_name: "TypeAlias[Union[typing.AnyStr,os.PathLike[typing.AnyStr]]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[typing.AnyStr,os.PathLike[typing.AnyStr]]"
            kind: UNION
            args {
              pretty_printed_name: "typing.AnyStr"
              kind: TYPE_VAR
            }
            args {
              pretty_printed_name: "os.PathLike[typing.AnyStr]"
              args {
                pretty_printed_name: "typing.AnyStr"
                kind: TYPE_VAR
              }
              fully_qualified_name: "os.PathLike"
            }
          }
          fully_qualified_name: "_typeshed.GenericPath"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "delete"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    parameters {
      name: "errors"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
}
overloaded_functions {
  name: "TemporaryFile"
  fullname: "tempfile.TemporaryFile"
  definitions {
    name: "TemporaryFile"
    fully_qualified_name: "tempfile.TemporaryFile"
    return_annotation {
      pretty_printed_name: "typing.IO[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "typing.IO"
    }
    parameters {
      name: "mode"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]"
          kind: UNION
          args {
            pretty_printed_name: "Literal[builtins.str]"
            kind: LITERAL
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          args {
            pretty_printed_name: "Literal[builtins.str]"
            kind: LITERAL
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          args {
            pretty_printed_name: "Literal[builtins.str]"
            kind: LITERAL
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          args {
            pretty_printed_name: "Literal[builtins.str]"
            kind: LITERAL
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          args {
            pretty_printed_name: "Literal[builtins.str]"
            kind: LITERAL
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          args {
            pretty_printed_name: "Literal[builtins.str]"
            kind: LITERAL
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          args {
            pretty_printed_name: "Literal[builtins.str]"
            kind: LITERAL
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          args {
            pretty_printed_name: "Literal[builtins.str]"
            kind: LITERAL
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          args {
            pretty_printed_name: "Literal[builtins.str]"
            kind: LITERAL
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          args {
            pretty_printed_name: "Literal[builtins.str]"
            kind: LITERAL
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          args {
            pretty_printed_name: "Literal[builtins.str]"
            kind: LITERAL
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          args {
            pretty_printed_name: "Literal[builtins.str]"
            kind: LITERAL
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          args {
            pretty_printed_name: "Literal[builtins.str]"
            kind: LITERAL
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          args {
            pretty_printed_name: "Literal[builtins.str]"
            kind: LITERAL
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          args {
            pretty_printed_name: "Literal[builtins.str]"
            kind: LITERAL
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          args {
            pretty_printed_name: "Literal[builtins.str]"
            kind: LITERAL
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
        }
        fully_qualified_name: "tempfile._StrMode"
      }
    }
    parameters {
      name: "buffering"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "encoding"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "newline"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "suffix"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.AnyStr,None]"
        kind: UNION
        args {
          pretty_printed_name: "typing.AnyStr"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "prefix"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.AnyStr,None]"
        kind: UNION
        args {
          pretty_printed_name: "typing.AnyStr"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "dir"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[TypeAlias[Union[typing.AnyStr,os.PathLike[typing.AnyStr]]],None]"
        kind: UNION
        args {
          pretty_printed_name: "TypeAlias[Union[typing.AnyStr,os.PathLike[typing.AnyStr]]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[typing.AnyStr,os.PathLike[typing.AnyStr]]"
            kind: UNION
            args {
              pretty_printed_name: "typing.AnyStr"
              kind: TYPE_VAR
            }
            args {
              pretty_printed_name: "os.PathLike[typing.AnyStr]"
              args {
                pretty_printed_name: "typing.AnyStr"
                kind: TYPE_VAR
              }
              fully_qualified_name: "os.PathLike"
            }
          }
          fully_qualified_name: "_typeshed.GenericPath"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "errors"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "TemporaryFile"
    fully_qualified_name: "tempfile.TemporaryFile"
    return_annotation {
      pretty_printed_name: "typing.IO[builtins.bytes]"
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
      fully_qualified_name: "typing.IO"
    }
    parameters {
      name: "mode"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]"
          kind: UNION
          args {
            pretty_printed_name: "Literal[builtins.str]"
            kind: LITERAL
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          args {
            pretty_printed_name: "Literal[builtins.str]"
            kind: LITERAL
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          args {
            pretty_printed_name: "Literal[builtins.str]"
            kind: LITERAL
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          args {
            pretty_printed_name: "Literal[builtins.str]"
            kind: LITERAL
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          args {
            pretty_printed_name: "Literal[builtins.str]"
            kind: LITERAL
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          args {
            pretty_printed_name: "Literal[builtins.str]"
            kind: LITERAL
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          args {
            pretty_printed_name: "Literal[builtins.str]"
            kind: LITERAL
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
          args {
            pretty_printed_name: "Literal[builtins.str]"
            kind: LITERAL
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
          }
        }
        fully_qualified_name: "tempfile._BytesMode"
      }
    }
    parameters {
      name: "buffering"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "encoding"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "newline"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "suffix"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.AnyStr,None]"
        kind: UNION
        args {
          pretty_printed_name: "typing.AnyStr"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "prefix"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.AnyStr,None]"
        kind: UNION
        args {
          pretty_printed_name: "typing.AnyStr"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "dir"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[TypeAlias[Union[typing.AnyStr,os.PathLike[typing.AnyStr]]],None]"
        kind: UNION
        args {
          pretty_printed_name: "TypeAlias[Union[typing.AnyStr,os.PathLike[typing.AnyStr]]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[typing.AnyStr,os.PathLike[typing.AnyStr]]"
            kind: UNION
            args {
              pretty_printed_name: "typing.AnyStr"
              kind: TYPE_VAR
            }
            args {
              pretty_printed_name: "os.PathLike[typing.AnyStr]"
              args {
                pretty_printed_name: "typing.AnyStr"
                kind: TYPE_VAR
              }
              fully_qualified_name: "os.PathLike"
            }
          }
          fully_qualified_name: "_typeshed.GenericPath"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "errors"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "TemporaryFile"
    fully_qualified_name: "tempfile.TemporaryFile"
    return_annotation {
      pretty_printed_name: "typing.IO[Any]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "typing.IO"
    }
    parameters {
      name: "mode"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "buffering"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    parameters {
      name: "encoding"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "newline"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "suffix"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.AnyStr,None]"
        kind: UNION
        args {
          pretty_printed_name: "typing.AnyStr"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "prefix"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.AnyStr,None]"
        kind: UNION
        args {
          pretty_printed_name: "typing.AnyStr"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "dir"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[TypeAlias[Union[typing.AnyStr,os.PathLike[typing.AnyStr]]],None]"
        kind: UNION
        args {
          pretty_printed_name: "TypeAlias[Union[typing.AnyStr,os.PathLike[typing.AnyStr]]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[typing.AnyStr,os.PathLike[typing.AnyStr]]"
            kind: UNION
            args {
              pretty_printed_name: "typing.AnyStr"
              kind: TYPE_VAR
            }
            args {
              pretty_printed_name: "os.PathLike[typing.AnyStr]"
              args {
                pretty_printed_name: "typing.AnyStr"
                kind: TYPE_VAR
              }
              fully_qualified_name: "os.PathLike"
            }
          }
          fully_qualified_name: "_typeshed.GenericPath"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "errors"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
}
overloaded_functions {
  name: "mkstemp"
  fullname: "tempfile.mkstemp"
  definitions {
    name: "mkstemp"
    fully_qualified_name: "tempfile.mkstemp"
    return_annotation {
      pretty_printed_name: "Tuple[builtins.int,builtins.str]"
      kind: TUPLE
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "suffix"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "prefix"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "dir"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]],None]"
        kind: UNION
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,os.PathLike[builtins.str]]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "os.PathLike[builtins.str]"
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              fully_qualified_name: "os.PathLike"
            }
          }
          fully_qualified_name: "_typeshed.StrPath"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "text"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "mkstemp"
    fully_qualified_name: "tempfile.mkstemp"
    return_annotation {
      pretty_printed_name: "Tuple[builtins.int,builtins.bytes]"
      kind: TUPLE
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    parameters {
      name: "suffix"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.bytes,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "prefix"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.bytes,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "dir"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[TypeAlias[Union[builtins.bytes,os.PathLike[builtins.bytes]]],None]"
        kind: UNION
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.bytes,os.PathLike[builtins.bytes]]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.bytes,os.PathLike[builtins.bytes]]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "os.PathLike[builtins.bytes]"
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              fully_qualified_name: "os.PathLike"
            }
          }
          fully_qualified_name: "_typeshed.BytesPath"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "text"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
}
overloaded_functions {
  name: "mkdtemp"
  fullname: "tempfile.mkdtemp"
  definitions {
    name: "mkdtemp"
    fully_qualified_name: "tempfile.mkdtemp"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "suffix"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "prefix"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "dir"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]],None]"
        kind: UNION
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.str,os.PathLike[builtins.str]]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "os.PathLike[builtins.str]"
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              fully_qualified_name: "os.PathLike"
            }
          }
          fully_qualified_name: "_typeshed.StrPath"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
  definitions {
    name: "mkdtemp"
    fully_qualified_name: "tempfile.mkdtemp"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "suffix"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.bytes,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "prefix"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.bytes,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "dir"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[TypeAlias[Union[builtins.bytes,os.PathLike[builtins.bytes]]],None]"
        kind: UNION
        args {
          pretty_printed_name: "TypeAlias[Union[builtins.bytes,os.PathLike[builtins.bytes]]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[builtins.bytes,os.PathLike[builtins.bytes]]"
            kind: UNION
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "os.PathLike[builtins.bytes]"
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              fully_qualified_name: "os.PathLike"
            }
          }
          fully_qualified_name: "_typeshed.BytesPath"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "overload"
    is_overload: true
  }
}
vars {
  name: "__annotations__"
  fully_qualified_name: "tempfile.__annotations__"
  type_annotation {
    pretty_printed_name: "builtins.dict[builtins.str,Any]"
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    args {
      pretty_printed_name: "Any"
      kind: ANY
    }
    fully_qualified_name: "builtins.dict"
  }
}
vars {
  name: "__all__"
  fully_qualified_name: "tempfile.__all__"
  type_annotation {
    pretty_printed_name: "builtins.list[builtins.str]"
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    fully_qualified_name: "builtins.list"
  }
}
vars {
  name: "TMP_MAX"
  fully_qualified_name: "tempfile.TMP_MAX"
  type_annotation {
    pretty_printed_name: "builtins.int"
    fully_qualified_name: "builtins.int"
  }
}
vars {
  name: "tempdir"
  fully_qualified_name: "tempfile.tempdir"
  type_annotation {
    pretty_printed_name: "Union[builtins.str,None]"
    kind: UNION
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    args {
      pretty_printed_name: "None"
      kind: NONE
    }
  }
}
vars {
  name: "template"
  fully_qualified_name: "tempfile.template"
  type_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
}
