fully_qualified_name: "_weakrefset"
classes {
  name: "WeakSet"
  fully_qualified_name: "_weakrefset.WeakSet"
  super_classes: "typing.MutableSet"
  methods {
    name: "add"
    fully_qualified_name: "_weakrefset.WeakSet.add"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_weakrefset.WeakSet[_weakrefset._T]"
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_weakrefset.WeakSet"
      }
    }
    parameters {
      name: "item"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_weakrefset._T"
        kind: TYPE_VAR
      }
    }
  }
  methods {
    name: "discard"
    fully_qualified_name: "_weakrefset.WeakSet.discard"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_weakrefset.WeakSet[_weakrefset._T]"
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_weakrefset.WeakSet"
      }
    }
    parameters {
      name: "item"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_weakrefset._T"
        kind: TYPE_VAR
      }
    }
  }
  methods {
    name: "copy"
    fully_qualified_name: "_weakrefset.WeakSet.copy"
    return_annotation {
      pretty_printed_name: "_weakrefset.WeakSet.Self"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_weakrefset.WeakSet.Self"
        kind: TYPE_VAR
      }
    }
  }
  methods {
    name: "remove"
    fully_qualified_name: "_weakrefset.WeakSet.remove"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_weakrefset.WeakSet[_weakrefset._T]"
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_weakrefset.WeakSet"
      }
    }
    parameters {
      name: "item"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_weakrefset._T"
        kind: TYPE_VAR
      }
    }
  }
  methods {
    name: "update"
    fully_qualified_name: "_weakrefset.WeakSet.update"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_weakrefset.WeakSet[_weakrefset._T]"
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_weakrefset.WeakSet"
      }
    }
    parameters {
      name: "other"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[_weakrefset._T]"
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
  }
  methods {
    name: "__contains__"
    fully_qualified_name: "_weakrefset.WeakSet.__contains__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "_weakrefset.WeakSet[_weakrefset._T]"
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_weakrefset.WeakSet"
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
  }
  methods {
    name: "__len__"
    fully_qualified_name: "_weakrefset.WeakSet.__len__"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "_weakrefset.WeakSet[_weakrefset._T]"
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_weakrefset.WeakSet"
      }
    }
  }
  methods {
    name: "__iter__"
    fully_qualified_name: "_weakrefset.WeakSet.__iter__"
    return_annotation {
      pretty_printed_name: "typing.Iterator[_weakrefset._T]"
      args {
        pretty_printed_name: "_weakrefset._T"
        kind: TYPE_VAR
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "_weakrefset.WeakSet[_weakrefset._T]"
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_weakrefset.WeakSet"
      }
    }
  }
  methods {
    name: "__ior__"
    fully_qualified_name: "_weakrefset.WeakSet.__ior__"
    return_annotation {
      pretty_printed_name: "_weakrefset.WeakSet.Self"
      kind: TYPE_VAR
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "_weakrefset.WeakSet.Self"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "typing.Iterable[_weakrefset._T]"
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
  }
  methods {
    name: "difference"
    fully_qualified_name: "_weakrefset.WeakSet.difference"
    return_annotation {
      pretty_printed_name: "_weakrefset.WeakSet.Self"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_weakrefset.WeakSet.Self"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "other"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[_weakrefset._T]"
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
  }
  methods {
    name: "__sub__"
    fully_qualified_name: "_weakrefset.WeakSet.__sub__"
    return_annotation {
      pretty_printed_name: "_weakrefset.WeakSet.Self"
      kind: TYPE_VAR
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "_weakrefset.WeakSet.Self"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "typing.Iterable[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
  }
  methods {
    name: "difference_update"
    fully_qualified_name: "_weakrefset.WeakSet.difference_update"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_weakrefset.WeakSet[_weakrefset._T]"
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_weakrefset.WeakSet"
      }
    }
    parameters {
      name: "other"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
  }
  methods {
    name: "__isub__"
    fully_qualified_name: "_weakrefset.WeakSet.__isub__"
    return_annotation {
      pretty_printed_name: "_weakrefset.WeakSet.Self"
      kind: TYPE_VAR
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "_weakrefset.WeakSet.Self"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "typing.Iterable[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
  }
  methods {
    name: "intersection"
    fully_qualified_name: "_weakrefset.WeakSet.intersection"
    return_annotation {
      pretty_printed_name: "_weakrefset.WeakSet.Self"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_weakrefset.WeakSet.Self"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "other"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[_weakrefset._T]"
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
  }
  methods {
    name: "__and__"
    fully_qualified_name: "_weakrefset.WeakSet.__and__"
    return_annotation {
      pretty_printed_name: "_weakrefset.WeakSet.Self"
      kind: TYPE_VAR
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "_weakrefset.WeakSet.Self"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "typing.Iterable[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
  }
  methods {
    name: "intersection_update"
    fully_qualified_name: "_weakrefset.WeakSet.intersection_update"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_weakrefset.WeakSet[_weakrefset._T]"
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_weakrefset.WeakSet"
      }
    }
    parameters {
      name: "other"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
  }
  methods {
    name: "__iand__"
    fully_qualified_name: "_weakrefset.WeakSet.__iand__"
    return_annotation {
      pretty_printed_name: "_weakrefset.WeakSet.Self"
      kind: TYPE_VAR
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "_weakrefset.WeakSet.Self"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "typing.Iterable[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
  }
  methods {
    name: "issubset"
    fully_qualified_name: "_weakrefset.WeakSet.issubset"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_weakrefset.WeakSet[_weakrefset._T]"
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_weakrefset.WeakSet"
      }
    }
    parameters {
      name: "other"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[_weakrefset._T]"
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
  }
  methods {
    name: "__le__"
    fully_qualified_name: "_weakrefset.WeakSet.__le__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "_weakrefset.WeakSet[_weakrefset._T]"
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_weakrefset.WeakSet"
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "typing.Iterable[_weakrefset._T]"
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
  }
  methods {
    name: "__lt__"
    fully_qualified_name: "_weakrefset.WeakSet.__lt__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "_weakrefset.WeakSet[_weakrefset._T]"
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_weakrefset.WeakSet"
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "typing.Iterable[_weakrefset._T]"
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
  }
  methods {
    name: "issuperset"
    fully_qualified_name: "_weakrefset.WeakSet.issuperset"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_weakrefset.WeakSet[_weakrefset._T]"
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_weakrefset.WeakSet"
      }
    }
    parameters {
      name: "other"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[_weakrefset._T]"
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
  }
  methods {
    name: "__ge__"
    fully_qualified_name: "_weakrefset.WeakSet.__ge__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "_weakrefset.WeakSet[_weakrefset._T]"
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_weakrefset.WeakSet"
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "typing.Iterable[_weakrefset._T]"
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
  }
  methods {
    name: "__gt__"
    fully_qualified_name: "_weakrefset.WeakSet.__gt__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "_weakrefset.WeakSet[_weakrefset._T]"
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_weakrefset.WeakSet"
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "typing.Iterable[_weakrefset._T]"
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
  }
  methods {
    name: "__eq__"
    fully_qualified_name: "_weakrefset.WeakSet.__eq__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "_weakrefset.WeakSet[_weakrefset._T]"
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_weakrefset.WeakSet"
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
  }
  methods {
    name: "symmetric_difference"
    fully_qualified_name: "_weakrefset.WeakSet.symmetric_difference"
    return_annotation {
      pretty_printed_name: "_weakrefset.WeakSet[Union[_weakrefset._S,_weakrefset._T]]"
      args {
        pretty_printed_name: "Union[_weakrefset._S,_weakrefset._T]"
        kind: UNION
        args {
          pretty_printed_name: "_weakrefset._S"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
      }
      fully_qualified_name: "_weakrefset.WeakSet"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_weakrefset.WeakSet[_weakrefset._T]"
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_weakrefset.WeakSet"
      }
    }
    parameters {
      name: "other"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[_weakrefset._S]"
        args {
          pretty_printed_name: "_weakrefset._S"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
  }
  methods {
    name: "__xor__"
    fully_qualified_name: "_weakrefset.WeakSet.__xor__"
    return_annotation {
      pretty_printed_name: "_weakrefset.WeakSet[Union[_weakrefset._S,_weakrefset._T]]"
      args {
        pretty_printed_name: "Union[_weakrefset._S,_weakrefset._T]"
        kind: UNION
        args {
          pretty_printed_name: "_weakrefset._S"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
      }
      fully_qualified_name: "_weakrefset.WeakSet"
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "_weakrefset.WeakSet[_weakrefset._T]"
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_weakrefset.WeakSet"
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "typing.Iterable[_weakrefset._S]"
        args {
          pretty_printed_name: "_weakrefset._S"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
  }
  methods {
    name: "symmetric_difference_update"
    fully_qualified_name: "_weakrefset.WeakSet.symmetric_difference_update"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_weakrefset.WeakSet[_weakrefset._T]"
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_weakrefset.WeakSet"
      }
    }
    parameters {
      name: "other"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[_weakrefset._T]"
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
  }
  methods {
    name: "__ixor__"
    fully_qualified_name: "_weakrefset.WeakSet.__ixor__"
    return_annotation {
      pretty_printed_name: "_weakrefset.WeakSet.Self"
      kind: TYPE_VAR
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "_weakrefset.WeakSet.Self"
        kind: TYPE_VAR
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "typing.Iterable[_weakrefset._T]"
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
  }
  methods {
    name: "union"
    fully_qualified_name: "_weakrefset.WeakSet.union"
    return_annotation {
      pretty_printed_name: "_weakrefset.WeakSet[Union[_weakrefset._S,_weakrefset._T]]"
      args {
        pretty_printed_name: "Union[_weakrefset._S,_weakrefset._T]"
        kind: UNION
        args {
          pretty_printed_name: "_weakrefset._S"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
      }
      fully_qualified_name: "_weakrefset.WeakSet"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_weakrefset.WeakSet[_weakrefset._T]"
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_weakrefset.WeakSet"
      }
    }
    parameters {
      name: "other"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[_weakrefset._S]"
        args {
          pretty_printed_name: "_weakrefset._S"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
  }
  methods {
    name: "__or__"
    fully_qualified_name: "_weakrefset.WeakSet.__or__"
    return_annotation {
      pretty_printed_name: "_weakrefset.WeakSet[Union[_weakrefset._S,_weakrefset._T]]"
      args {
        pretty_printed_name: "Union[_weakrefset._S,_weakrefset._T]"
        kind: UNION
        args {
          pretty_printed_name: "_weakrefset._S"
          kind: TYPE_VAR
        }
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
      }
      fully_qualified_name: "_weakrefset.WeakSet"
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "_weakrefset.WeakSet[_weakrefset._T]"
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_weakrefset.WeakSet"
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "typing.Iterable[_weakrefset._S]"
        args {
          pretty_printed_name: "_weakrefset._S"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
  }
  methods {
    name: "isdisjoint"
    fully_qualified_name: "_weakrefset.WeakSet.isdisjoint"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "_weakrefset.WeakSet[_weakrefset._T]"
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "_weakrefset.WeakSet"
      }
    }
    parameters {
      name: "other"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "typing.Iterable[_weakrefset._T]"
        args {
          pretty_printed_name: "_weakrefset._T"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterable"
      }
    }
  }
  overloaded_methods {
    name: "__init__"
    fullname: "_weakrefset.WeakSet.__init__"
    definitions {
      name: "__init__"
      fully_qualified_name: "_weakrefset.WeakSet.__init__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "_weakrefset.WeakSet[_weakrefset._T]"
          args {
            pretty_printed_name: "_weakrefset._T"
            kind: TYPE_VAR
          }
          fully_qualified_name: "_weakrefset.WeakSet"
        }
      }
      parameters {
        name: "data"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
    definitions {
      name: "__init__"
      fully_qualified_name: "_weakrefset.WeakSet.__init__"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "_weakrefset.WeakSet[_weakrefset._T]"
          args {
            pretty_printed_name: "_weakrefset._T"
            kind: TYPE_VAR
          }
          fully_qualified_name: "_weakrefset.WeakSet"
        }
      }
      parameters {
        name: "data"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "typing.Iterable[_weakrefset._T]"
          args {
            pretty_printed_name: "_weakrefset._T"
            kind: TYPE_VAR
          }
          fully_qualified_name: "typing.Iterable"
        }
      }
      has_decorators: true
      resolved_decorator_names: "overload"
      is_overload: true
    }
  }
  is_generic: true
}
vars {
  name: "__annotations__"
  fully_qualified_name: "_weakrefset.__annotations__"
  type_annotation {
    pretty_printed_name: "builtins.dict[builtins.str,Any]"
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    args {
      pretty_printed_name: "Any"
      kind: ANY
    }
    fully_qualified_name: "builtins.dict"
  }
}
vars {
  name: "__all__"
  fully_qualified_name: "_weakrefset.__all__"
  type_annotation {
    pretty_printed_name: "builtins.list[builtins.str]"
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    fully_qualified_name: "builtins.list"
  }
}
