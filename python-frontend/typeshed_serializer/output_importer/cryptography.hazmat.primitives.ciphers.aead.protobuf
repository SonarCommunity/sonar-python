fully_qualified_name: "cryptography.hazmat.primitives.ciphers.aead"
classes {
  name: "ChaCha20Poly1305"
  fully_qualified_name: "cryptography.hazmat.primitives.ciphers.aead.ChaCha20Poly1305"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "cryptography.hazmat.primitives.ciphers.aead.ChaCha20Poly1305.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives.ciphers.aead.ChaCha20Poly1305"
        fully_qualified_name: "cryptography.hazmat.primitives.ciphers.aead.ChaCha20Poly1305"
      }
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
  }
  methods {
    name: "generate_key"
    fully_qualified_name: "cryptography.hazmat.primitives.ciphers.aead.ChaCha20Poly1305.generate_key"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[cryptography.hazmat.primitives.ciphers.aead.ChaCha20Poly1305]"
        kind: TYPE
        args {
          pretty_printed_name: "cryptography.hazmat.primitives.ciphers.aead.ChaCha20Poly1305"
          fully_qualified_name: "cryptography.hazmat.primitives.ciphers.aead.ChaCha20Poly1305"
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "classmethod"
    is_class_method: true
  }
  methods {
    name: "encrypt"
    fully_qualified_name: "cryptography.hazmat.primitives.ciphers.aead.ChaCha20Poly1305.encrypt"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives.ciphers.aead.ChaCha20Poly1305"
        fully_qualified_name: "cryptography.hazmat.primitives.ciphers.aead.ChaCha20Poly1305"
      }
    }
    parameters {
      name: "nonce"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    parameters {
      name: "data"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    parameters {
      name: "associated_data"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.bytes,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "decrypt"
    fully_qualified_name: "cryptography.hazmat.primitives.ciphers.aead.ChaCha20Poly1305.decrypt"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives.ciphers.aead.ChaCha20Poly1305"
        fully_qualified_name: "cryptography.hazmat.primitives.ciphers.aead.ChaCha20Poly1305"
      }
    }
    parameters {
      name: "nonce"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    parameters {
      name: "data"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    parameters {
      name: "associated_data"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.bytes,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "_check_params"
    fully_qualified_name: "cryptography.hazmat.primitives.ciphers.aead.ChaCha20Poly1305._check_params"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives.ciphers.aead.ChaCha20Poly1305"
        fully_qualified_name: "cryptography.hazmat.primitives.ciphers.aead.ChaCha20Poly1305"
      }
    }
    parameters {
      name: "nonce"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    parameters {
      name: "data"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    parameters {
      name: "associated_data"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
  }
  attributes {
    name: "_MAX_SIZE"
    fully_qualified_name: "cryptography.hazmat.primitives.ciphers.aead.ChaCha20Poly1305._MAX_SIZE"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  attributes {
    name: "_key"
    fully_qualified_name: "cryptography.hazmat.primitives.ciphers.aead.ChaCha20Poly1305._key"
    type_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
  }
}
classes {
  name: "AESCCM"
  fully_qualified_name: "cryptography.hazmat.primitives.ciphers.aead.AESCCM"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "cryptography.hazmat.primitives.ciphers.aead.AESCCM.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives.ciphers.aead.AESCCM"
        fully_qualified_name: "cryptography.hazmat.primitives.ciphers.aead.AESCCM"
      }
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    parameters {
      name: "tag_length"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
  }
  methods {
    name: "generate_key"
    fully_qualified_name: "cryptography.hazmat.primitives.ciphers.aead.AESCCM.generate_key"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[cryptography.hazmat.primitives.ciphers.aead.AESCCM]"
        kind: TYPE
        args {
          pretty_printed_name: "cryptography.hazmat.primitives.ciphers.aead.AESCCM"
          fully_qualified_name: "cryptography.hazmat.primitives.ciphers.aead.AESCCM"
        }
      }
    }
    parameters {
      name: "bit_length"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    has_decorators: true
    resolved_decorator_names: "classmethod"
    is_class_method: true
  }
  methods {
    name: "encrypt"
    fully_qualified_name: "cryptography.hazmat.primitives.ciphers.aead.AESCCM.encrypt"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives.ciphers.aead.AESCCM"
        fully_qualified_name: "cryptography.hazmat.primitives.ciphers.aead.AESCCM"
      }
    }
    parameters {
      name: "nonce"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    parameters {
      name: "data"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    parameters {
      name: "associated_data"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.bytes,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "decrypt"
    fully_qualified_name: "cryptography.hazmat.primitives.ciphers.aead.AESCCM.decrypt"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives.ciphers.aead.AESCCM"
        fully_qualified_name: "cryptography.hazmat.primitives.ciphers.aead.AESCCM"
      }
    }
    parameters {
      name: "nonce"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    parameters {
      name: "data"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    parameters {
      name: "associated_data"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.bytes,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "_validate_lengths"
    fully_qualified_name: "cryptography.hazmat.primitives.ciphers.aead.AESCCM._validate_lengths"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives.ciphers.aead.AESCCM"
        fully_qualified_name: "cryptography.hazmat.primitives.ciphers.aead.AESCCM"
      }
    }
    parameters {
      name: "nonce"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    parameters {
      name: "data_len"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
  }
  methods {
    name: "_check_params"
    fully_qualified_name: "cryptography.hazmat.primitives.ciphers.aead.AESCCM._check_params"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives.ciphers.aead.AESCCM"
        fully_qualified_name: "cryptography.hazmat.primitives.ciphers.aead.AESCCM"
      }
    }
    parameters {
      name: "nonce"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    parameters {
      name: "data"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    parameters {
      name: "associated_data"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
  }
  attributes {
    name: "_MAX_SIZE"
    fully_qualified_name: "cryptography.hazmat.primitives.ciphers.aead.AESCCM._MAX_SIZE"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  attributes {
    name: "_key"
    fully_qualified_name: "cryptography.hazmat.primitives.ciphers.aead.AESCCM._key"
    type_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
  }
  attributes {
    name: "_tag_length"
    fully_qualified_name: "cryptography.hazmat.primitives.ciphers.aead.AESCCM._tag_length"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
}
classes {
  name: "AESGCM"
  fully_qualified_name: "cryptography.hazmat.primitives.ciphers.aead.AESGCM"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "cryptography.hazmat.primitives.ciphers.aead.AESGCM.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives.ciphers.aead.AESGCM"
        fully_qualified_name: "cryptography.hazmat.primitives.ciphers.aead.AESGCM"
      }
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
  }
  methods {
    name: "generate_key"
    fully_qualified_name: "cryptography.hazmat.primitives.ciphers.aead.AESGCM.generate_key"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[cryptography.hazmat.primitives.ciphers.aead.AESGCM]"
        kind: TYPE
        args {
          pretty_printed_name: "cryptography.hazmat.primitives.ciphers.aead.AESGCM"
          fully_qualified_name: "cryptography.hazmat.primitives.ciphers.aead.AESGCM"
        }
      }
    }
    parameters {
      name: "bit_length"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    has_decorators: true
    resolved_decorator_names: "classmethod"
    is_class_method: true
  }
  methods {
    name: "encrypt"
    fully_qualified_name: "cryptography.hazmat.primitives.ciphers.aead.AESGCM.encrypt"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives.ciphers.aead.AESGCM"
        fully_qualified_name: "cryptography.hazmat.primitives.ciphers.aead.AESGCM"
      }
    }
    parameters {
      name: "nonce"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    parameters {
      name: "data"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    parameters {
      name: "associated_data"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.bytes,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "decrypt"
    fully_qualified_name: "cryptography.hazmat.primitives.ciphers.aead.AESGCM.decrypt"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives.ciphers.aead.AESGCM"
        fully_qualified_name: "cryptography.hazmat.primitives.ciphers.aead.AESGCM"
      }
    }
    parameters {
      name: "nonce"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    parameters {
      name: "data"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    parameters {
      name: "associated_data"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.bytes,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "_check_params"
    fully_qualified_name: "cryptography.hazmat.primitives.ciphers.aead.AESGCM._check_params"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives.ciphers.aead.AESGCM"
        fully_qualified_name: "cryptography.hazmat.primitives.ciphers.aead.AESGCM"
      }
    }
    parameters {
      name: "nonce"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    parameters {
      name: "data"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    parameters {
      name: "associated_data"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
  }
  attributes {
    name: "_MAX_SIZE"
    fully_qualified_name: "cryptography.hazmat.primitives.ciphers.aead.AESGCM._MAX_SIZE"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  attributes {
    name: "_key"
    fully_qualified_name: "cryptography.hazmat.primitives.ciphers.aead.AESGCM._key"
    type_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
  }
}
classes {
  name: "AESOCB3"
  fully_qualified_name: "cryptography.hazmat.primitives.ciphers.aead.AESOCB3"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "cryptography.hazmat.primitives.ciphers.aead.AESOCB3.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives.ciphers.aead.AESOCB3"
        fully_qualified_name: "cryptography.hazmat.primitives.ciphers.aead.AESOCB3"
      }
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
  }
  methods {
    name: "generate_key"
    fully_qualified_name: "cryptography.hazmat.primitives.ciphers.aead.AESOCB3.generate_key"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "cls"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Type[cryptography.hazmat.primitives.ciphers.aead.AESOCB3]"
        kind: TYPE
        args {
          pretty_printed_name: "cryptography.hazmat.primitives.ciphers.aead.AESOCB3"
          fully_qualified_name: "cryptography.hazmat.primitives.ciphers.aead.AESOCB3"
        }
      }
    }
    parameters {
      name: "bit_length"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
    has_decorators: true
    resolved_decorator_names: "classmethod"
    is_class_method: true
  }
  methods {
    name: "encrypt"
    fully_qualified_name: "cryptography.hazmat.primitives.ciphers.aead.AESOCB3.encrypt"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives.ciphers.aead.AESOCB3"
        fully_qualified_name: "cryptography.hazmat.primitives.ciphers.aead.AESOCB3"
      }
    }
    parameters {
      name: "nonce"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    parameters {
      name: "data"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    parameters {
      name: "associated_data"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.bytes,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "decrypt"
    fully_qualified_name: "cryptography.hazmat.primitives.ciphers.aead.AESOCB3.decrypt"
    return_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives.ciphers.aead.AESOCB3"
        fully_qualified_name: "cryptography.hazmat.primitives.ciphers.aead.AESOCB3"
      }
    }
    parameters {
      name: "nonce"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    parameters {
      name: "data"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    parameters {
      name: "associated_data"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.bytes,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bytes"
          fully_qualified_name: "builtins.bytes"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "_check_params"
    fully_qualified_name: "cryptography.hazmat.primitives.ciphers.aead.AESOCB3._check_params"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives.ciphers.aead.AESOCB3"
        fully_qualified_name: "cryptography.hazmat.primitives.ciphers.aead.AESOCB3"
      }
    }
    parameters {
      name: "nonce"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    parameters {
      name: "data"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
    parameters {
      name: "associated_data"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
    }
  }
  attributes {
    name: "_MAX_SIZE"
    fully_qualified_name: "cryptography.hazmat.primitives.ciphers.aead.AESOCB3._MAX_SIZE"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  attributes {
    name: "_key"
    fully_qualified_name: "cryptography.hazmat.primitives.ciphers.aead.AESOCB3._key"
    type_annotation {
      pretty_printed_name: "builtins.bytes"
      fully_qualified_name: "builtins.bytes"
    }
  }
}
vars {
  name: "__annotations__"
  fully_qualified_name: "cryptography.hazmat.primitives.ciphers.aead.__annotations__"
  type_annotation {
    pretty_printed_name: "builtins.dict[builtins.str,Any]"
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    args {
      pretty_printed_name: "Any"
      kind: ANY
    }
    fully_qualified_name: "builtins.dict"
  }
}
