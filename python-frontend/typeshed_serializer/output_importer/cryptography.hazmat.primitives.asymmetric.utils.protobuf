fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.utils"
classes {
  name: "Prehashed"
  fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.utils.Prehashed"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.utils.Prehashed.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives.asymmetric.utils.Prehashed"
        fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.utils.Prehashed"
      }
    }
    parameters {
      name: "algorithm"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "cryptography.hazmat.primitives.hashes.HashAlgorithm"
        fully_qualified_name: "cryptography.hazmat.primitives.hashes.HashAlgorithm"
      }
    }
  }
  attributes {
    name: "digest_size"
    fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.utils.Prehashed.digest_size"
    type_annotation {
      pretty_printed_name: "builtins.property"
      fully_qualified_name: "builtins.property"
    }
  }
  attributes {
    name: "_algorithm"
    fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.utils.Prehashed._algorithm"
    type_annotation {
      pretty_printed_name: "cryptography.hazmat.primitives.hashes.HashAlgorithm"
      fully_qualified_name: "cryptography.hazmat.primitives.hashes.HashAlgorithm"
    }
  }
  attributes {
    name: "_digest_size"
    fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.utils.Prehashed._digest_size"
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
}
vars {
  name: "__annotations__"
  fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.utils.__annotations__"
  type_annotation {
    pretty_printed_name: "builtins.dict[builtins.str,Any]"
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    args {
      pretty_printed_name: "Any"
      kind: ANY
    }
    fully_qualified_name: "builtins.dict"
  }
}
vars {
  name: "decode_dss_signature"
  fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.utils.decode_dss_signature"
  type_annotation {
    pretty_printed_name: "CallableType[builtins.function]"
    kind: CALLABLE
    args {
      pretty_printed_name: "builtins.function"
      fully_qualified_name: "builtins.function"
    }
  }
}
vars {
  name: "encode_dss_signature"
  fully_qualified_name: "cryptography.hazmat.primitives.asymmetric.utils.encode_dss_signature"
  type_annotation {
    pretty_printed_name: "CallableType[builtins.function]"
    kind: CALLABLE
    args {
      pretty_printed_name: "builtins.function"
      fully_qualified_name: "builtins.function"
    }
  }
}
