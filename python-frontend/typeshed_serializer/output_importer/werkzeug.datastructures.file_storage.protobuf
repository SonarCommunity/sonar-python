fully_qualified_name: "werkzeug.datastructures.file_storage"
classes {
  name: "FileStorage"
  fully_qualified_name: "werkzeug.datastructures.file_storage.FileStorage"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "werkzeug.datastructures.file_storage.FileStorage.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.file_storage.FileStorage"
        fully_qualified_name: "werkzeug.datastructures.file_storage.FileStorage"
      }
    }
    parameters {
      name: "stream"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.IO[builtins.bytes],None]"
        kind: UNION
        args {
          pretty_printed_name: "typing.IO[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "typing.IO"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "filename"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,os.PathLike[Any],None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "os.PathLike[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "os.PathLike"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "content_type"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "content_length"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "headers"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[werkzeug.datastructures.headers.Headers,None]"
        kind: UNION
        args {
          pretty_printed_name: "werkzeug.datastructures.headers.Headers"
          fully_qualified_name: "werkzeug.datastructures.headers.Headers"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "_parse_content_type"
    fully_qualified_name: "werkzeug.datastructures.file_storage.FileStorage._parse_content_type"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.file_storage.FileStorage"
        fully_qualified_name: "werkzeug.datastructures.file_storage.FileStorage"
      }
    }
  }
  methods {
    name: "content_type"
    fully_qualified_name: "werkzeug.datastructures.file_storage.FileStorage.content_type"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.file_storage.FileStorage"
        fully_qualified_name: "werkzeug.datastructures.file_storage.FileStorage"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "content_length"
    fully_qualified_name: "werkzeug.datastructures.file_storage.FileStorage.content_length"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.file_storage.FileStorage"
        fully_qualified_name: "werkzeug.datastructures.file_storage.FileStorage"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "mimetype"
    fully_qualified_name: "werkzeug.datastructures.file_storage.FileStorage.mimetype"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.file_storage.FileStorage"
        fully_qualified_name: "werkzeug.datastructures.file_storage.FileStorage"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "mimetype_params"
    fully_qualified_name: "werkzeug.datastructures.file_storage.FileStorage.mimetype_params"
    return_annotation {
      pretty_printed_name: "builtins.dict[builtins.str,builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "builtins.dict"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.file_storage.FileStorage"
        fully_qualified_name: "werkzeug.datastructures.file_storage.FileStorage"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "save"
    fully_qualified_name: "werkzeug.datastructures.file_storage.FileStorage.save"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.file_storage.FileStorage"
        fully_qualified_name: "werkzeug.datastructures.file_storage.FileStorage"
      }
    }
    parameters {
      name: "dst"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,os.PathLike[Any],typing.IO[builtins.bytes]]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "os.PathLike[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "os.PathLike"
        }
        args {
          pretty_printed_name: "typing.IO[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "typing.IO"
        }
      }
    }
    parameters {
      name: "buffer_size"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
  }
  methods {
    name: "close"
    fully_qualified_name: "werkzeug.datastructures.file_storage.FileStorage.close"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.file_storage.FileStorage"
        fully_qualified_name: "werkzeug.datastructures.file_storage.FileStorage"
      }
    }
  }
  methods {
    name: "__bool__"
    fully_qualified_name: "werkzeug.datastructures.file_storage.FileStorage.__bool__"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.file_storage.FileStorage"
        fully_qualified_name: "werkzeug.datastructures.file_storage.FileStorage"
      }
    }
  }
  methods {
    name: "__getattr__"
    fully_qualified_name: "werkzeug.datastructures.file_storage.FileStorage.__getattr__"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.file_storage.FileStorage"
        fully_qualified_name: "werkzeug.datastructures.file_storage.FileStorage"
      }
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  methods {
    name: "__iter__"
    fully_qualified_name: "werkzeug.datastructures.file_storage.FileStorage.__iter__"
    return_annotation {
      pretty_printed_name: "typing.Iterator[builtins.bytes]"
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
      fully_qualified_name: "typing.Iterator"
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.file_storage.FileStorage"
        fully_qualified_name: "werkzeug.datastructures.file_storage.FileStorage"
      }
    }
  }
  methods {
    name: "__repr__"
    fully_qualified_name: "werkzeug.datastructures.file_storage.FileStorage.__repr__"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.file_storage.FileStorage"
        fully_qualified_name: "werkzeug.datastructures.file_storage.FileStorage"
      }
    }
  }
  attributes {
    name: "name"
    fully_qualified_name: "werkzeug.datastructures.file_storage.FileStorage.name"
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  attributes {
    name: "stream"
    fully_qualified_name: "werkzeug.datastructures.file_storage.FileStorage.stream"
    type_annotation {
      pretty_printed_name: "typing.IO[builtins.bytes]"
      args {
        pretty_printed_name: "builtins.bytes"
        fully_qualified_name: "builtins.bytes"
      }
      fully_qualified_name: "typing.IO"
    }
  }
  attributes {
    name: "filename"
    fully_qualified_name: "werkzeug.datastructures.file_storage.FileStorage.filename"
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  attributes {
    name: "headers"
    fully_qualified_name: "werkzeug.datastructures.file_storage.FileStorage.headers"
    type_annotation {
      pretty_printed_name: "werkzeug.datastructures.headers.Headers"
      fully_qualified_name: "werkzeug.datastructures.headers.Headers"
    }
  }
  attributes {
    name: "_parsed_content_type"
    fully_qualified_name: "werkzeug.datastructures.file_storage.FileStorage._parsed_content_type"
    type_annotation {
      pretty_printed_name: "Tuple[builtins.str,builtins.dict[builtins.str,builtins.str]]"
      kind: TUPLE
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "builtins.dict[builtins.str,builtins.str]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        fully_qualified_name: "builtins.dict"
      }
    }
  }
}
classes {
  name: "FileMultiDict"
  fully_qualified_name: "werkzeug.datastructures.file_storage.FileMultiDict"
  super_classes: "werkzeug.datastructures.structures.MultiDict"
  methods {
    name: "add_file"
    fully_qualified_name: "werkzeug.datastructures.file_storage.FileMultiDict.add_file"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.datastructures.file_storage.FileMultiDict"
        fully_qualified_name: "werkzeug.datastructures.file_storage.FileMultiDict"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "file"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[werkzeug.datastructures.file_storage.FileStorage,builtins.str,typing.IO[builtins.bytes]]"
        kind: UNION
        args {
          pretty_printed_name: "werkzeug.datastructures.file_storage.FileStorage"
          fully_qualified_name: "werkzeug.datastructures.file_storage.FileStorage"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "typing.IO[builtins.bytes]"
          args {
            pretty_printed_name: "builtins.bytes"
            fully_qualified_name: "builtins.bytes"
          }
          fully_qualified_name: "typing.IO"
        }
      }
    }
    parameters {
      name: "filename"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "content_type"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
}
vars {
  name: "__annotations__"
  fully_qualified_name: "werkzeug.datastructures.file_storage.__annotations__"
  type_annotation {
    pretty_printed_name: "builtins.dict[builtins.str,Any]"
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    args {
      pretty_printed_name: "Any"
      kind: ANY
    }
    fully_qualified_name: "builtins.dict"
  }
}
