fully_qualified_name: "copyreg"
functions {
  name: "pickle"
  fully_qualified_name: "copyreg.pickle"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "ob_type"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Type[copyreg._T]"
      kind: TYPE
      args {
        pretty_printed_name: "copyreg._T"
        kind: TYPE_VAR
      }
    }
  }
  parameters {
    name: "pickle_function"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "CallableType[builtins.function]"
      kind: CALLABLE
      args {
        pretty_printed_name: "builtins.function"
        fully_qualified_name: "builtins.function"
      }
    }
  }
  parameters {
    name: "constructor_ob"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[CallableType[builtins.function],None]"
      kind: UNION
      args {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
}
functions {
  name: "constructor"
  fully_qualified_name: "copyreg.constructor"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "object"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "CallableType[builtins.function]"
      kind: CALLABLE
      args {
        pretty_printed_name: "builtins.function"
        fully_qualified_name: "builtins.function"
      }
    }
  }
}
functions {
  name: "add_extension"
  fully_qualified_name: "copyreg.add_extension"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "module"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "typing.Hashable"
      fully_qualified_name: "typing.Hashable"
    }
  }
  parameters {
    name: "name"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "typing.Hashable"
      fully_qualified_name: "typing.Hashable"
    }
  }
  parameters {
    name: "code"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "typing.SupportsInt"
      fully_qualified_name: "typing.SupportsInt"
    }
  }
}
functions {
  name: "remove_extension"
  fully_qualified_name: "copyreg.remove_extension"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "module"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "typing.Hashable"
      fully_qualified_name: "typing.Hashable"
    }
  }
  parameters {
    name: "name"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "typing.Hashable"
      fully_qualified_name: "typing.Hashable"
    }
  }
  parameters {
    name: "code"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
}
functions {
  name: "clear_extension_cache"
  fully_qualified_name: "copyreg.clear_extension_cache"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
}
vars {
  name: "__annotations__"
  fully_qualified_name: "copyreg.__annotations__"
  type_annotation {
    pretty_printed_name: "builtins.dict[builtins.str,Any]"
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    args {
      pretty_printed_name: "Any"
      kind: ANY
    }
    fully_qualified_name: "builtins.dict"
  }
}
vars {
  name: "__all__"
  fully_qualified_name: "copyreg.__all__"
  type_annotation {
    pretty_printed_name: "builtins.list[builtins.str]"
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    fully_qualified_name: "builtins.list"
  }
}
vars {
  name: "dispatch_table"
  fully_qualified_name: "copyreg.dispatch_table"
  type_annotation {
    pretty_printed_name: "TypeAlias[builtins.dict[builtins.type,CallableType[builtins.function]]]"
    kind: TYPE_ALIAS
    args {
      pretty_printed_name: "builtins.dict[builtins.type,CallableType[builtins.function]]"
      args {
        pretty_printed_name: "builtins.type"
        fully_qualified_name: "builtins.type"
      }
      args {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
      fully_qualified_name: "builtins.dict"
    }
    fully_qualified_name: "copyreg._DispatchTableType"
  }
}
