fully_qualified_name: "flask"
classes {
  name: "Flask"
  fully_qualified_name: "flask.app.Flask"
  super_classes: "flask.scaffold.Scaffold"
  methods {
    name: "__init__"
    fully_qualified_name: "flask.app.Flask.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    parameters {
      name: "import_name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "static_url_path"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "static_folder"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,os.PathLike[Any],None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "os.PathLike[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "os.PathLike"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "static_host"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "host_matching"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    parameters {
      name: "subdomain_matching"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    parameters {
      name: "template_folder"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,os.PathLike[Any],None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "os.PathLike[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "os.PathLike"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "instance_path"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "instance_relative_config"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    parameters {
      name: "root_path"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "_check_setup_finished"
    fully_qualified_name: "flask.app.Flask._check_setup_finished"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    parameters {
      name: "f_name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  methods {
    name: "name"
    fully_qualified_name: "flask.app.Flask.name"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    has_decorators: true
    resolved_decorator_names: "cached_property"
  }
  methods {
    name: "logger"
    fully_qualified_name: "flask.app.Flask.logger"
    return_annotation {
      pretty_printed_name: "logging.Logger"
      fully_qualified_name: "logging.Logger"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    has_decorators: true
    resolved_decorator_names: "cached_property"
  }
  methods {
    name: "jinja_env"
    fully_qualified_name: "flask.app.Flask.jinja_env"
    return_annotation {
      pretty_printed_name: "flask.templating.Environment"
      fully_qualified_name: "flask.templating.Environment"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    has_decorators: true
    resolved_decorator_names: "cached_property"
  }
  methods {
    name: "got_first_request"
    fully_qualified_name: "flask.app.Flask.got_first_request"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "make_config"
    fully_qualified_name: "flask.app.Flask.make_config"
    return_annotation {
      pretty_printed_name: "flask.config.Config"
      fully_qualified_name: "flask.config.Config"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    parameters {
      name: "instance_relative"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
  }
  methods {
    name: "make_aborter"
    fully_qualified_name: "flask.app.Flask.make_aborter"
    return_annotation {
      pretty_printed_name: "werkzeug.exceptions.Aborter"
      fully_qualified_name: "werkzeug.exceptions.Aborter"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
  }
  methods {
    name: "auto_find_instance_path"
    fully_qualified_name: "flask.app.Flask.auto_find_instance_path"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
  }
  methods {
    name: "open_instance_resource"
    fully_qualified_name: "flask.app.Flask.open_instance_resource"
    return_annotation {
      pretty_printed_name: "typing.IO[typing.AnyStr]"
      args {
        pretty_printed_name: "typing.AnyStr"
        kind: TYPE_VAR
      }
      fully_qualified_name: "typing.IO"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    parameters {
      name: "resource"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "mode"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  methods {
    name: "create_jinja_environment"
    fully_qualified_name: "flask.app.Flask.create_jinja_environment"
    return_annotation {
      pretty_printed_name: "flask.templating.Environment"
      fully_qualified_name: "flask.templating.Environment"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
  }
  methods {
    name: "create_global_jinja_loader"
    fully_qualified_name: "flask.app.Flask.create_global_jinja_loader"
    return_annotation {
      pretty_printed_name: "flask.templating.DispatchingJinjaLoader"
      fully_qualified_name: "flask.templating.DispatchingJinjaLoader"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
  }
  methods {
    name: "select_jinja_autoescape"
    fully_qualified_name: "flask.app.Flask.select_jinja_autoescape"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    parameters {
      name: "filename"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  methods {
    name: "update_template_context"
    fully_qualified_name: "flask.app.Flask.update_template_context"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    parameters {
      name: "context"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.dict[Any,Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "builtins.dict"
      }
    }
  }
  methods {
    name: "make_shell_context"
    fully_qualified_name: "flask.app.Flask.make_shell_context"
    return_annotation {
      pretty_printed_name: "builtins.dict[Any,Any]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "builtins.dict"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
  }
  methods {
    name: "run"
    fully_qualified_name: "flask.app.Flask.run"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    parameters {
      name: "host"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "port"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.int,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "debug"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.bool,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "load_dotenv"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    parameters {
      name: "options"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
  }
  methods {
    name: "test_client"
    fully_qualified_name: "flask.app.Flask.test_client"
    return_annotation {
      pretty_printed_name: "flask.testing.FlaskClient"
      fully_qualified_name: "flask.testing.FlaskClient"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    parameters {
      name: "use_cookies"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    parameters {
      name: "kwargs"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
  }
  methods {
    name: "test_cli_runner"
    fully_qualified_name: "flask.app.Flask.test_cli_runner"
    return_annotation {
      pretty_printed_name: "flask.testing.FlaskCliRunner"
      fully_qualified_name: "flask.testing.FlaskCliRunner"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    parameters {
      name: "kwargs"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
  }
  methods {
    name: "register_blueprint"
    fully_qualified_name: "flask.app.Flask.register_blueprint"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    parameters {
      name: "blueprint"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.blueprints.Blueprint"
        fully_qualified_name: "flask.blueprints.Blueprint"
      }
    }
    parameters {
      name: "options"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    has_decorators: true
    resolved_decorator_names: "setupmethod"
  }
  methods {
    name: "iter_blueprints"
    fully_qualified_name: "flask.app.Flask.iter_blueprints"
    return_annotation {
      pretty_printed_name: "typing.ValuesView[flask.blueprints.Blueprint]"
      args {
        pretty_printed_name: "flask.blueprints.Blueprint"
        fully_qualified_name: "flask.blueprints.Blueprint"
      }
      fully_qualified_name: "typing.ValuesView"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
  }
  methods {
    name: "add_url_rule"
    fully_qualified_name: "flask.app.Flask.add_url_rule"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    parameters {
      name: "rule"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "endpoint"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "view_func"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[TypeAlias[Union[CallableType[builtins.function],CallableType[builtins.function]]],None]"
        kind: UNION
        args {
          pretty_printed_name: "TypeAlias[Union[CallableType[builtins.function],CallableType[builtins.function]]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[CallableType[builtins.function],CallableType[builtins.function]]"
            kind: UNION
            args {
              pretty_printed_name: "CallableType[builtins.function]"
              kind: CALLABLE
              args {
                pretty_printed_name: "builtins.function"
                fully_qualified_name: "builtins.function"
              }
            }
            args {
              pretty_printed_name: "CallableType[builtins.function]"
              kind: CALLABLE
              args {
                pretty_printed_name: "builtins.function"
                fully_qualified_name: "builtins.function"
              }
            }
          }
          fully_qualified_name: "flask.typing.RouteCallable"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "provide_automatic_options"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.bool,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "options"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    has_decorators: true
    resolved_decorator_names: "setupmethod"
  }
  methods {
    name: "template_filter"
    fully_qualified_name: "flask.app.Flask.template_filter"
    return_annotation {
      pretty_printed_name: "CallableType[builtins.function]"
      kind: CALLABLE
      args {
        pretty_printed_name: "builtins.function"
        fully_qualified_name: "builtins.function"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "setupmethod"
  }
  methods {
    name: "add_template_filter"
    fully_qualified_name: "flask.app.Flask.add_template_filter"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    parameters {
      name: "f"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[CallableType[builtins.function]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
        fully_qualified_name: "flask.typing.TemplateFilterCallable"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "setupmethod"
  }
  methods {
    name: "template_test"
    fully_qualified_name: "flask.app.Flask.template_test"
    return_annotation {
      pretty_printed_name: "CallableType[builtins.function]"
      kind: CALLABLE
      args {
        pretty_printed_name: "builtins.function"
        fully_qualified_name: "builtins.function"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "setupmethod"
  }
  methods {
    name: "add_template_test"
    fully_qualified_name: "flask.app.Flask.add_template_test"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    parameters {
      name: "f"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[CallableType[builtins.function]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
        fully_qualified_name: "flask.typing.TemplateTestCallable"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "setupmethod"
  }
  methods {
    name: "template_global"
    fully_qualified_name: "flask.app.Flask.template_global"
    return_annotation {
      pretty_printed_name: "CallableType[builtins.function]"
      kind: CALLABLE
      args {
        pretty_printed_name: "builtins.function"
        fully_qualified_name: "builtins.function"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "setupmethod"
  }
  methods {
    name: "add_template_global"
    fully_qualified_name: "flask.app.Flask.add_template_global"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    parameters {
      name: "f"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[CallableType[builtins.function]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
        fully_qualified_name: "flask.typing.TemplateGlobalCallable"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "setupmethod"
  }
  methods {
    name: "teardown_appcontext"
    fully_qualified_name: "flask.app.Flask.teardown_appcontext"
    return_annotation {
      pretty_printed_name: "flask.app.T_teardown"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    parameters {
      name: "f"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.T_teardown"
        kind: TYPE_VAR
      }
    }
    has_decorators: true
    resolved_decorator_names: "setupmethod"
  }
  methods {
    name: "shell_context_processor"
    fully_qualified_name: "flask.app.Flask.shell_context_processor"
    return_annotation {
      pretty_printed_name: "flask.app.T_shell_context_processor"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    parameters {
      name: "f"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.T_shell_context_processor"
        kind: TYPE_VAR
      }
    }
    has_decorators: true
    resolved_decorator_names: "setupmethod"
  }
  methods {
    name: "_find_error_handler"
    fully_qualified_name: "flask.app.Flask._find_error_handler"
    return_annotation {
      pretty_printed_name: "Union[TypeAlias[CallableType[builtins.function]],None]"
      kind: UNION
      args {
        pretty_printed_name: "TypeAlias[CallableType[builtins.function]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
        fully_qualified_name: "flask.typing.ErrorHandlerCallable"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    parameters {
      name: "e"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.Exception"
        fully_qualified_name: "builtins.Exception"
      }
    }
  }
  methods {
    name: "handle_http_exception"
    fully_qualified_name: "flask.app.Flask.handle_http_exception"
    return_annotation {
      pretty_printed_name: "Union[werkzeug.exceptions.HTTPException,TypeAlias[Union[TypeAlias[Union[werkzeug.wrappers.response.Response,builtins.str,builtins.bytes,builtins.list[Any],typing.Mapping[builtins.str,Any],typing.Iterator[builtins.str],typing.Iterator[builtins.bytes]]],Tuple[TypeAlias[Unknown],TypeAlias[Union[werkzeug.datastructures.headers.Headers,typing.Mapping[builtins.str,TypeAlias[Union[builtins.str,builtins.list[builtins.str],builtins.tuple[builtins.str]]]],typing.Sequence[Tuple[builtins.str,TypeAlias[Unknown]]]]]],Tuple[TypeAlias[Unknown],builtins.int],Tuple[TypeAlias[Unknown],builtins.int,TypeAlias[Unknown]],TypeAlias[CallableType[builtins.function]]]]]"
      kind: UNION
      args {
        pretty_printed_name: "werkzeug.exceptions.HTTPException"
        fully_qualified_name: "werkzeug.exceptions.HTTPException"
      }
      args {
        pretty_printed_name: "TypeAlias[Union[TypeAlias[Union[werkzeug.wrappers.response.Response,builtins.str,builtins.bytes,builtins.list[Any],typing.Mapping[builtins.str,Any],typing.Iterator[builtins.str],typing.Iterator[builtins.bytes]]],Tuple[TypeAlias[Unknown],TypeAlias[Union[werkzeug.datastructures.headers.Headers,typing.Mapping[builtins.str,TypeAlias[Union[builtins.str,builtins.list[builtins.str],builtins.tuple[builtins.str]]]],typing.Sequence[Tuple[builtins.str,TypeAlias[Unknown]]]]]],Tuple[TypeAlias[Unknown],builtins.int],Tuple[TypeAlias[Unknown],builtins.int,TypeAlias[Unknown]],TypeAlias[CallableType[builtins.function]]]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[TypeAlias[Union[werkzeug.wrappers.response.Response,builtins.str,builtins.bytes,builtins.list[Any],typing.Mapping[builtins.str,Any],typing.Iterator[builtins.str],typing.Iterator[builtins.bytes]]],Tuple[TypeAlias[Unknown],TypeAlias[Union[werkzeug.datastructures.headers.Headers,typing.Mapping[builtins.str,TypeAlias[Union[builtins.str,builtins.list[builtins.str],builtins.tuple[builtins.str]]]],typing.Sequence[Tuple[builtins.str,TypeAlias[Unknown]]]]]],Tuple[TypeAlias[Unknown],builtins.int],Tuple[TypeAlias[Unknown],builtins.int,TypeAlias[Unknown]],TypeAlias[CallableType[builtins.function]]]"
          kind: UNION
          args {
            pretty_printed_name: "TypeAlias[Union[werkzeug.wrappers.response.Response,builtins.str,builtins.bytes,builtins.list[Any],typing.Mapping[builtins.str,Any],typing.Iterator[builtins.str],typing.Iterator[builtins.bytes]]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[werkzeug.wrappers.response.Response,builtins.str,builtins.bytes,builtins.list[Any],typing.Mapping[builtins.str,Any],typing.Iterator[builtins.str],typing.Iterator[builtins.bytes]]"
              kind: UNION
              args {
                pretty_printed_name: "werkzeug.wrappers.response.Response"
                fully_qualified_name: "werkzeug.wrappers.response.Response"
              }
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              args {
                pretty_printed_name: "builtins.list[Any]"
                args {
                  pretty_printed_name: "Any"
                  kind: ANY
                }
                fully_qualified_name: "builtins.list"
              }
              args {
                pretty_printed_name: "typing.Mapping[builtins.str,Any]"
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
                args {
                  pretty_printed_name: "Any"
                  kind: ANY
                }
                fully_qualified_name: "typing.Mapping"
              }
              args {
                pretty_printed_name: "typing.Iterator[builtins.str]"
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
                fully_qualified_name: "typing.Iterator"
              }
              args {
                pretty_printed_name: "typing.Iterator[builtins.bytes]"
                args {
                  pretty_printed_name: "builtins.bytes"
                  fully_qualified_name: "builtins.bytes"
                }
                fully_qualified_name: "typing.Iterator"
              }
            }
            fully_qualified_name: "flask.typing.ResponseValue"
          }
          args {
            pretty_printed_name: "Tuple[TypeAlias[Unknown],TypeAlias[Union[werkzeug.datastructures.headers.Headers,typing.Mapping[builtins.str,TypeAlias[Union[builtins.str,builtins.list[builtins.str],builtins.tuple[builtins.str]]]],typing.Sequence[Tuple[builtins.str,TypeAlias[Unknown]]]]]]"
            kind: TUPLE
            args {
              pretty_printed_name: "TypeAlias[Unknown]"
              kind: TYPE_ALIAS
            }
            args {
              pretty_printed_name: "TypeAlias[Union[werkzeug.datastructures.headers.Headers,typing.Mapping[builtins.str,TypeAlias[Union[builtins.str,builtins.list[builtins.str],builtins.tuple[builtins.str]]]],typing.Sequence[Tuple[builtins.str,TypeAlias[Unknown]]]]]"
              kind: TYPE_ALIAS
              args {
                pretty_printed_name: "Union[werkzeug.datastructures.headers.Headers,typing.Mapping[builtins.str,TypeAlias[Union[builtins.str,builtins.list[builtins.str],builtins.tuple[builtins.str]]]],typing.Sequence[Tuple[builtins.str,TypeAlias[Unknown]]]]"
                kind: UNION
                args {
                  pretty_printed_name: "werkzeug.datastructures.headers.Headers"
                  fully_qualified_name: "werkzeug.datastructures.headers.Headers"
                }
                args {
                  pretty_printed_name: "typing.Mapping[builtins.str,TypeAlias[Union[builtins.str,builtins.list[builtins.str],builtins.tuple[builtins.str]]]]"
                  args {
                    pretty_printed_name: "builtins.str"
                    fully_qualified_name: "builtins.str"
                  }
                  args {
                    pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.list[builtins.str],builtins.tuple[builtins.str]]]"
                    kind: TYPE_ALIAS
                    args {
                      pretty_printed_name: "Union[builtins.str,builtins.list[builtins.str],builtins.tuple[builtins.str]]"
                      kind: UNION
                      args {
                        pretty_printed_name: "builtins.str"
                        fully_qualified_name: "builtins.str"
                      }
                      args {
                        pretty_printed_name: "builtins.list[builtins.str]"
                        args {
                          pretty_printed_name: "builtins.str"
                          fully_qualified_name: "builtins.str"
                        }
                        fully_qualified_name: "builtins.list"
                      }
                      args {
                        pretty_printed_name: "builtins.tuple[builtins.str]"
                        args {
                          pretty_printed_name: "builtins.str"
                          fully_qualified_name: "builtins.str"
                        }
                        fully_qualified_name: "builtins.tuple"
                      }
                    }
                    fully_qualified_name: "flask.typing.HeaderValue"
                  }
                  fully_qualified_name: "typing.Mapping"
                }
                args {
                  pretty_printed_name: "typing.Sequence[Tuple[builtins.str,TypeAlias[Unknown]]]"
                  args {
                    pretty_printed_name: "Tuple[builtins.str,TypeAlias[Unknown]]"
                    kind: TUPLE
                    args {
                      pretty_printed_name: "builtins.str"
                      fully_qualified_name: "builtins.str"
                    }
                    args {
                      pretty_printed_name: "TypeAlias[Unknown]"
                      kind: TYPE_ALIAS
                    }
                  }
                  fully_qualified_name: "typing.Sequence"
                }
              }
              fully_qualified_name: "flask.typing.HeadersValue"
            }
          }
          args {
            pretty_printed_name: "Tuple[TypeAlias[Unknown],builtins.int]"
            kind: TUPLE
            args {
              pretty_printed_name: "TypeAlias[Unknown]"
              kind: TYPE_ALIAS
            }
            args {
              pretty_printed_name: "builtins.int"
              fully_qualified_name: "builtins.int"
            }
          }
          args {
            pretty_printed_name: "Tuple[TypeAlias[Unknown],builtins.int,TypeAlias[Unknown]]"
            kind: TUPLE
            args {
              pretty_printed_name: "TypeAlias[Unknown]"
              kind: TYPE_ALIAS
            }
            args {
              pretty_printed_name: "builtins.int"
              fully_qualified_name: "builtins.int"
            }
            args {
              pretty_printed_name: "TypeAlias[Unknown]"
              kind: TYPE_ALIAS
            }
          }
          args {
            pretty_printed_name: "TypeAlias[CallableType[builtins.function]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "CallableType[builtins.function]"
              kind: CALLABLE
              args {
                pretty_printed_name: "builtins.function"
                fully_qualified_name: "builtins.function"
              }
            }
            fully_qualified_name: "_typeshed.wsgi.WSGIApplication"
          }
        }
        fully_qualified_name: "flask.typing.ResponseReturnValue"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    parameters {
      name: "e"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.exceptions.HTTPException"
        fully_qualified_name: "werkzeug.exceptions.HTTPException"
      }
    }
  }
  methods {
    name: "trap_http_exception"
    fully_qualified_name: "flask.app.Flask.trap_http_exception"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    parameters {
      name: "e"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.Exception"
        fully_qualified_name: "builtins.Exception"
      }
    }
  }
  methods {
    name: "handle_user_exception"
    fully_qualified_name: "flask.app.Flask.handle_user_exception"
    return_annotation {
      pretty_printed_name: "Union[werkzeug.exceptions.HTTPException,TypeAlias[Union[TypeAlias[Union[werkzeug.wrappers.response.Response,builtins.str,builtins.bytes,builtins.list[Any],typing.Mapping[builtins.str,Any],typing.Iterator[builtins.str],typing.Iterator[builtins.bytes]]],Tuple[TypeAlias[Unknown],TypeAlias[Union[werkzeug.datastructures.headers.Headers,typing.Mapping[builtins.str,TypeAlias[Union[builtins.str,builtins.list[builtins.str],builtins.tuple[builtins.str]]]],typing.Sequence[Tuple[builtins.str,TypeAlias[Unknown]]]]]],Tuple[TypeAlias[Unknown],builtins.int],Tuple[TypeAlias[Unknown],builtins.int,TypeAlias[Unknown]],TypeAlias[CallableType[builtins.function]]]]]"
      kind: UNION
      args {
        pretty_printed_name: "werkzeug.exceptions.HTTPException"
        fully_qualified_name: "werkzeug.exceptions.HTTPException"
      }
      args {
        pretty_printed_name: "TypeAlias[Union[TypeAlias[Union[werkzeug.wrappers.response.Response,builtins.str,builtins.bytes,builtins.list[Any],typing.Mapping[builtins.str,Any],typing.Iterator[builtins.str],typing.Iterator[builtins.bytes]]],Tuple[TypeAlias[Unknown],TypeAlias[Union[werkzeug.datastructures.headers.Headers,typing.Mapping[builtins.str,TypeAlias[Union[builtins.str,builtins.list[builtins.str],builtins.tuple[builtins.str]]]],typing.Sequence[Tuple[builtins.str,TypeAlias[Unknown]]]]]],Tuple[TypeAlias[Unknown],builtins.int],Tuple[TypeAlias[Unknown],builtins.int,TypeAlias[Unknown]],TypeAlias[CallableType[builtins.function]]]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[TypeAlias[Union[werkzeug.wrappers.response.Response,builtins.str,builtins.bytes,builtins.list[Any],typing.Mapping[builtins.str,Any],typing.Iterator[builtins.str],typing.Iterator[builtins.bytes]]],Tuple[TypeAlias[Unknown],TypeAlias[Union[werkzeug.datastructures.headers.Headers,typing.Mapping[builtins.str,TypeAlias[Union[builtins.str,builtins.list[builtins.str],builtins.tuple[builtins.str]]]],typing.Sequence[Tuple[builtins.str,TypeAlias[Unknown]]]]]],Tuple[TypeAlias[Unknown],builtins.int],Tuple[TypeAlias[Unknown],builtins.int,TypeAlias[Unknown]],TypeAlias[CallableType[builtins.function]]]"
          kind: UNION
          args {
            pretty_printed_name: "TypeAlias[Union[werkzeug.wrappers.response.Response,builtins.str,builtins.bytes,builtins.list[Any],typing.Mapping[builtins.str,Any],typing.Iterator[builtins.str],typing.Iterator[builtins.bytes]]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[werkzeug.wrappers.response.Response,builtins.str,builtins.bytes,builtins.list[Any],typing.Mapping[builtins.str,Any],typing.Iterator[builtins.str],typing.Iterator[builtins.bytes]]"
              kind: UNION
              args {
                pretty_printed_name: "werkzeug.wrappers.response.Response"
                fully_qualified_name: "werkzeug.wrappers.response.Response"
              }
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              args {
                pretty_printed_name: "builtins.list[Any]"
                args {
                  pretty_printed_name: "Any"
                  kind: ANY
                }
                fully_qualified_name: "builtins.list"
              }
              args {
                pretty_printed_name: "typing.Mapping[builtins.str,Any]"
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
                args {
                  pretty_printed_name: "Any"
                  kind: ANY
                }
                fully_qualified_name: "typing.Mapping"
              }
              args {
                pretty_printed_name: "typing.Iterator[builtins.str]"
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
                fully_qualified_name: "typing.Iterator"
              }
              args {
                pretty_printed_name: "typing.Iterator[builtins.bytes]"
                args {
                  pretty_printed_name: "builtins.bytes"
                  fully_qualified_name: "builtins.bytes"
                }
                fully_qualified_name: "typing.Iterator"
              }
            }
            fully_qualified_name: "flask.typing.ResponseValue"
          }
          args {
            pretty_printed_name: "Tuple[TypeAlias[Unknown],TypeAlias[Union[werkzeug.datastructures.headers.Headers,typing.Mapping[builtins.str,TypeAlias[Union[builtins.str,builtins.list[builtins.str],builtins.tuple[builtins.str]]]],typing.Sequence[Tuple[builtins.str,TypeAlias[Unknown]]]]]]"
            kind: TUPLE
            args {
              pretty_printed_name: "TypeAlias[Unknown]"
              kind: TYPE_ALIAS
            }
            args {
              pretty_printed_name: "TypeAlias[Union[werkzeug.datastructures.headers.Headers,typing.Mapping[builtins.str,TypeAlias[Union[builtins.str,builtins.list[builtins.str],builtins.tuple[builtins.str]]]],typing.Sequence[Tuple[builtins.str,TypeAlias[Unknown]]]]]"
              kind: TYPE_ALIAS
              args {
                pretty_printed_name: "Union[werkzeug.datastructures.headers.Headers,typing.Mapping[builtins.str,TypeAlias[Union[builtins.str,builtins.list[builtins.str],builtins.tuple[builtins.str]]]],typing.Sequence[Tuple[builtins.str,TypeAlias[Unknown]]]]"
                kind: UNION
                args {
                  pretty_printed_name: "werkzeug.datastructures.headers.Headers"
                  fully_qualified_name: "werkzeug.datastructures.headers.Headers"
                }
                args {
                  pretty_printed_name: "typing.Mapping[builtins.str,TypeAlias[Union[builtins.str,builtins.list[builtins.str],builtins.tuple[builtins.str]]]]"
                  args {
                    pretty_printed_name: "builtins.str"
                    fully_qualified_name: "builtins.str"
                  }
                  args {
                    pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.list[builtins.str],builtins.tuple[builtins.str]]]"
                    kind: TYPE_ALIAS
                    args {
                      pretty_printed_name: "Union[builtins.str,builtins.list[builtins.str],builtins.tuple[builtins.str]]"
                      kind: UNION
                      args {
                        pretty_printed_name: "builtins.str"
                        fully_qualified_name: "builtins.str"
                      }
                      args {
                        pretty_printed_name: "builtins.list[builtins.str]"
                        args {
                          pretty_printed_name: "builtins.str"
                          fully_qualified_name: "builtins.str"
                        }
                        fully_qualified_name: "builtins.list"
                      }
                      args {
                        pretty_printed_name: "builtins.tuple[builtins.str]"
                        args {
                          pretty_printed_name: "builtins.str"
                          fully_qualified_name: "builtins.str"
                        }
                        fully_qualified_name: "builtins.tuple"
                      }
                    }
                    fully_qualified_name: "flask.typing.HeaderValue"
                  }
                  fully_qualified_name: "typing.Mapping"
                }
                args {
                  pretty_printed_name: "typing.Sequence[Tuple[builtins.str,TypeAlias[Unknown]]]"
                  args {
                    pretty_printed_name: "Tuple[builtins.str,TypeAlias[Unknown]]"
                    kind: TUPLE
                    args {
                      pretty_printed_name: "builtins.str"
                      fully_qualified_name: "builtins.str"
                    }
                    args {
                      pretty_printed_name: "TypeAlias[Unknown]"
                      kind: TYPE_ALIAS
                    }
                  }
                  fully_qualified_name: "typing.Sequence"
                }
              }
              fully_qualified_name: "flask.typing.HeadersValue"
            }
          }
          args {
            pretty_printed_name: "Tuple[TypeAlias[Unknown],builtins.int]"
            kind: TUPLE
            args {
              pretty_printed_name: "TypeAlias[Unknown]"
              kind: TYPE_ALIAS
            }
            args {
              pretty_printed_name: "builtins.int"
              fully_qualified_name: "builtins.int"
            }
          }
          args {
            pretty_printed_name: "Tuple[TypeAlias[Unknown],builtins.int,TypeAlias[Unknown]]"
            kind: TUPLE
            args {
              pretty_printed_name: "TypeAlias[Unknown]"
              kind: TYPE_ALIAS
            }
            args {
              pretty_printed_name: "builtins.int"
              fully_qualified_name: "builtins.int"
            }
            args {
              pretty_printed_name: "TypeAlias[Unknown]"
              kind: TYPE_ALIAS
            }
          }
          args {
            pretty_printed_name: "TypeAlias[CallableType[builtins.function]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "CallableType[builtins.function]"
              kind: CALLABLE
              args {
                pretty_printed_name: "builtins.function"
                fully_qualified_name: "builtins.function"
              }
            }
            fully_qualified_name: "_typeshed.wsgi.WSGIApplication"
          }
        }
        fully_qualified_name: "flask.typing.ResponseReturnValue"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    parameters {
      name: "e"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.Exception"
        fully_qualified_name: "builtins.Exception"
      }
    }
  }
  methods {
    name: "handle_exception"
    fully_qualified_name: "flask.app.Flask.handle_exception"
    return_annotation {
      pretty_printed_name: "flask.wrappers.Response"
      fully_qualified_name: "flask.wrappers.Response"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    parameters {
      name: "e"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.Exception"
        fully_qualified_name: "builtins.Exception"
      }
    }
  }
  methods {
    name: "log_exception"
    fully_qualified_name: "flask.app.Flask.log_exception"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    parameters {
      name: "exc_info"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Tuple[builtins.type,builtins.BaseException,types.TracebackType],Tuple[None,None,None]]"
        kind: UNION
        args {
          pretty_printed_name: "Tuple[builtins.type,builtins.BaseException,types.TracebackType]"
          kind: TUPLE
          args {
            pretty_printed_name: "builtins.type"
            fully_qualified_name: "builtins.type"
          }
          args {
            pretty_printed_name: "builtins.BaseException"
            fully_qualified_name: "builtins.BaseException"
          }
          args {
            pretty_printed_name: "types.TracebackType"
            fully_qualified_name: "types.TracebackType"
          }
        }
        args {
          pretty_printed_name: "Tuple[None,None,None]"
          kind: TUPLE
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
    }
  }
  methods {
    name: "raise_routing_exception"
    fully_qualified_name: "flask.app.Flask.raise_routing_exception"
    return_annotation {
      pretty_printed_name: "NoReturn"
      kind: UNINHABITED
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    parameters {
      name: "request"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.wrappers.Request"
        fully_qualified_name: "flask.wrappers.Request"
      }
    }
  }
  methods {
    name: "dispatch_request"
    fully_qualified_name: "flask.app.Flask.dispatch_request"
    return_annotation {
      pretty_printed_name: "TypeAlias[Union[TypeAlias[Union[werkzeug.wrappers.response.Response,builtins.str,builtins.bytes,builtins.list[Any],typing.Mapping[builtins.str,Any],typing.Iterator[builtins.str],typing.Iterator[builtins.bytes]]],Tuple[TypeAlias[Unknown],TypeAlias[Union[werkzeug.datastructures.headers.Headers,typing.Mapping[builtins.str,TypeAlias[Union[builtins.str,builtins.list[builtins.str],builtins.tuple[builtins.str]]]],typing.Sequence[Tuple[builtins.str,TypeAlias[Unknown]]]]]],Tuple[TypeAlias[Unknown],builtins.int],Tuple[TypeAlias[Unknown],builtins.int,TypeAlias[Unknown]],TypeAlias[CallableType[builtins.function]]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[TypeAlias[Union[werkzeug.wrappers.response.Response,builtins.str,builtins.bytes,builtins.list[Any],typing.Mapping[builtins.str,Any],typing.Iterator[builtins.str],typing.Iterator[builtins.bytes]]],Tuple[TypeAlias[Unknown],TypeAlias[Union[werkzeug.datastructures.headers.Headers,typing.Mapping[builtins.str,TypeAlias[Union[builtins.str,builtins.list[builtins.str],builtins.tuple[builtins.str]]]],typing.Sequence[Tuple[builtins.str,TypeAlias[Unknown]]]]]],Tuple[TypeAlias[Unknown],builtins.int],Tuple[TypeAlias[Unknown],builtins.int,TypeAlias[Unknown]],TypeAlias[CallableType[builtins.function]]]"
        kind: UNION
        args {
          pretty_printed_name: "TypeAlias[Union[werkzeug.wrappers.response.Response,builtins.str,builtins.bytes,builtins.list[Any],typing.Mapping[builtins.str,Any],typing.Iterator[builtins.str],typing.Iterator[builtins.bytes]]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[werkzeug.wrappers.response.Response,builtins.str,builtins.bytes,builtins.list[Any],typing.Mapping[builtins.str,Any],typing.Iterator[builtins.str],typing.Iterator[builtins.bytes]]"
            kind: UNION
            args {
              pretty_printed_name: "werkzeug.wrappers.response.Response"
              fully_qualified_name: "werkzeug.wrappers.response.Response"
            }
            args {
              pretty_printed_name: "builtins.str"
              fully_qualified_name: "builtins.str"
            }
            args {
              pretty_printed_name: "builtins.bytes"
              fully_qualified_name: "builtins.bytes"
            }
            args {
              pretty_printed_name: "builtins.list[Any]"
              args {
                pretty_printed_name: "Any"
                kind: ANY
              }
              fully_qualified_name: "builtins.list"
            }
            args {
              pretty_printed_name: "typing.Mapping[builtins.str,Any]"
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "Any"
                kind: ANY
              }
              fully_qualified_name: "typing.Mapping"
            }
            args {
              pretty_printed_name: "typing.Iterator[builtins.str]"
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              fully_qualified_name: "typing.Iterator"
            }
            args {
              pretty_printed_name: "typing.Iterator[builtins.bytes]"
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              fully_qualified_name: "typing.Iterator"
            }
          }
          fully_qualified_name: "flask.typing.ResponseValue"
        }
        args {
          pretty_printed_name: "Tuple[TypeAlias[Unknown],TypeAlias[Union[werkzeug.datastructures.headers.Headers,typing.Mapping[builtins.str,TypeAlias[Union[builtins.str,builtins.list[builtins.str],builtins.tuple[builtins.str]]]],typing.Sequence[Tuple[builtins.str,TypeAlias[Unknown]]]]]]"
          kind: TUPLE
          args {
            pretty_printed_name: "TypeAlias[Unknown]"
            kind: TYPE_ALIAS
          }
          args {
            pretty_printed_name: "TypeAlias[Union[werkzeug.datastructures.headers.Headers,typing.Mapping[builtins.str,TypeAlias[Union[builtins.str,builtins.list[builtins.str],builtins.tuple[builtins.str]]]],typing.Sequence[Tuple[builtins.str,TypeAlias[Unknown]]]]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[werkzeug.datastructures.headers.Headers,typing.Mapping[builtins.str,TypeAlias[Union[builtins.str,builtins.list[builtins.str],builtins.tuple[builtins.str]]]],typing.Sequence[Tuple[builtins.str,TypeAlias[Unknown]]]]"
              kind: UNION
              args {
                pretty_printed_name: "werkzeug.datastructures.headers.Headers"
                fully_qualified_name: "werkzeug.datastructures.headers.Headers"
              }
              args {
                pretty_printed_name: "typing.Mapping[builtins.str,TypeAlias[Union[builtins.str,builtins.list[builtins.str],builtins.tuple[builtins.str]]]]"
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
                args {
                  pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.list[builtins.str],builtins.tuple[builtins.str]]]"
                  kind: TYPE_ALIAS
                  args {
                    pretty_printed_name: "Union[builtins.str,builtins.list[builtins.str],builtins.tuple[builtins.str]]"
                    kind: UNION
                    args {
                      pretty_printed_name: "builtins.str"
                      fully_qualified_name: "builtins.str"
                    }
                    args {
                      pretty_printed_name: "builtins.list[builtins.str]"
                      args {
                        pretty_printed_name: "builtins.str"
                        fully_qualified_name: "builtins.str"
                      }
                      fully_qualified_name: "builtins.list"
                    }
                    args {
                      pretty_printed_name: "builtins.tuple[builtins.str]"
                      args {
                        pretty_printed_name: "builtins.str"
                        fully_qualified_name: "builtins.str"
                      }
                      fully_qualified_name: "builtins.tuple"
                    }
                  }
                  fully_qualified_name: "flask.typing.HeaderValue"
                }
                fully_qualified_name: "typing.Mapping"
              }
              args {
                pretty_printed_name: "typing.Sequence[Tuple[builtins.str,TypeAlias[Unknown]]]"
                args {
                  pretty_printed_name: "Tuple[builtins.str,TypeAlias[Unknown]]"
                  kind: TUPLE
                  args {
                    pretty_printed_name: "builtins.str"
                    fully_qualified_name: "builtins.str"
                  }
                  args {
                    pretty_printed_name: "TypeAlias[Unknown]"
                    kind: TYPE_ALIAS
                  }
                }
                fully_qualified_name: "typing.Sequence"
              }
            }
            fully_qualified_name: "flask.typing.HeadersValue"
          }
        }
        args {
          pretty_printed_name: "Tuple[TypeAlias[Unknown],builtins.int]"
          kind: TUPLE
          args {
            pretty_printed_name: "TypeAlias[Unknown]"
            kind: TYPE_ALIAS
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
        }
        args {
          pretty_printed_name: "Tuple[TypeAlias[Unknown],builtins.int,TypeAlias[Unknown]]"
          kind: TUPLE
          args {
            pretty_printed_name: "TypeAlias[Unknown]"
            kind: TYPE_ALIAS
          }
          args {
            pretty_printed_name: "builtins.int"
            fully_qualified_name: "builtins.int"
          }
          args {
            pretty_printed_name: "TypeAlias[Unknown]"
            kind: TYPE_ALIAS
          }
        }
        args {
          pretty_printed_name: "TypeAlias[CallableType[builtins.function]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "CallableType[builtins.function]"
            kind: CALLABLE
            args {
              pretty_printed_name: "builtins.function"
              fully_qualified_name: "builtins.function"
            }
          }
          fully_qualified_name: "_typeshed.wsgi.WSGIApplication"
        }
      }
      fully_qualified_name: "flask.typing.ResponseReturnValue"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
  }
  methods {
    name: "full_dispatch_request"
    fully_qualified_name: "flask.app.Flask.full_dispatch_request"
    return_annotation {
      pretty_printed_name: "flask.wrappers.Response"
      fully_qualified_name: "flask.wrappers.Response"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
  }
  methods {
    name: "finalize_request"
    fully_qualified_name: "flask.app.Flask.finalize_request"
    return_annotation {
      pretty_printed_name: "flask.wrappers.Response"
      fully_qualified_name: "flask.wrappers.Response"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    parameters {
      name: "rv"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[TypeAlias[Union[TypeAlias[Union[werkzeug.wrappers.response.Response,builtins.str,builtins.bytes,builtins.list[Any],typing.Mapping[builtins.str,Any],typing.Iterator[builtins.str],typing.Iterator[builtins.bytes]]],Tuple[TypeAlias[Unknown],TypeAlias[Union[werkzeug.datastructures.headers.Headers,typing.Mapping[builtins.str,TypeAlias[Union[builtins.str,builtins.list[builtins.str],builtins.tuple[builtins.str]]]],typing.Sequence[Tuple[builtins.str,TypeAlias[Unknown]]]]]],Tuple[TypeAlias[Unknown],builtins.int],Tuple[TypeAlias[Unknown],builtins.int,TypeAlias[Unknown]],TypeAlias[CallableType[builtins.function]]]],werkzeug.exceptions.HTTPException]"
        kind: UNION
        args {
          pretty_printed_name: "TypeAlias[Union[TypeAlias[Union[werkzeug.wrappers.response.Response,builtins.str,builtins.bytes,builtins.list[Any],typing.Mapping[builtins.str,Any],typing.Iterator[builtins.str],typing.Iterator[builtins.bytes]]],Tuple[TypeAlias[Unknown],TypeAlias[Union[werkzeug.datastructures.headers.Headers,typing.Mapping[builtins.str,TypeAlias[Union[builtins.str,builtins.list[builtins.str],builtins.tuple[builtins.str]]]],typing.Sequence[Tuple[builtins.str,TypeAlias[Unknown]]]]]],Tuple[TypeAlias[Unknown],builtins.int],Tuple[TypeAlias[Unknown],builtins.int,TypeAlias[Unknown]],TypeAlias[CallableType[builtins.function]]]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[TypeAlias[Union[werkzeug.wrappers.response.Response,builtins.str,builtins.bytes,builtins.list[Any],typing.Mapping[builtins.str,Any],typing.Iterator[builtins.str],typing.Iterator[builtins.bytes]]],Tuple[TypeAlias[Unknown],TypeAlias[Union[werkzeug.datastructures.headers.Headers,typing.Mapping[builtins.str,TypeAlias[Union[builtins.str,builtins.list[builtins.str],builtins.tuple[builtins.str]]]],typing.Sequence[Tuple[builtins.str,TypeAlias[Unknown]]]]]],Tuple[TypeAlias[Unknown],builtins.int],Tuple[TypeAlias[Unknown],builtins.int,TypeAlias[Unknown]],TypeAlias[CallableType[builtins.function]]]"
            kind: UNION
            args {
              pretty_printed_name: "TypeAlias[Union[werkzeug.wrappers.response.Response,builtins.str,builtins.bytes,builtins.list[Any],typing.Mapping[builtins.str,Any],typing.Iterator[builtins.str],typing.Iterator[builtins.bytes]]]"
              kind: TYPE_ALIAS
              args {
                pretty_printed_name: "Union[werkzeug.wrappers.response.Response,builtins.str,builtins.bytes,builtins.list[Any],typing.Mapping[builtins.str,Any],typing.Iterator[builtins.str],typing.Iterator[builtins.bytes]]"
                kind: UNION
                args {
                  pretty_printed_name: "werkzeug.wrappers.response.Response"
                  fully_qualified_name: "werkzeug.wrappers.response.Response"
                }
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
                args {
                  pretty_printed_name: "builtins.bytes"
                  fully_qualified_name: "builtins.bytes"
                }
                args {
                  pretty_printed_name: "builtins.list[Any]"
                  args {
                    pretty_printed_name: "Any"
                    kind: ANY
                  }
                  fully_qualified_name: "builtins.list"
                }
                args {
                  pretty_printed_name: "typing.Mapping[builtins.str,Any]"
                  args {
                    pretty_printed_name: "builtins.str"
                    fully_qualified_name: "builtins.str"
                  }
                  args {
                    pretty_printed_name: "Any"
                    kind: ANY
                  }
                  fully_qualified_name: "typing.Mapping"
                }
                args {
                  pretty_printed_name: "typing.Iterator[builtins.str]"
                  args {
                    pretty_printed_name: "builtins.str"
                    fully_qualified_name: "builtins.str"
                  }
                  fully_qualified_name: "typing.Iterator"
                }
                args {
                  pretty_printed_name: "typing.Iterator[builtins.bytes]"
                  args {
                    pretty_printed_name: "builtins.bytes"
                    fully_qualified_name: "builtins.bytes"
                  }
                  fully_qualified_name: "typing.Iterator"
                }
              }
              fully_qualified_name: "flask.typing.ResponseValue"
            }
            args {
              pretty_printed_name: "Tuple[TypeAlias[Unknown],TypeAlias[Union[werkzeug.datastructures.headers.Headers,typing.Mapping[builtins.str,TypeAlias[Union[builtins.str,builtins.list[builtins.str],builtins.tuple[builtins.str]]]],typing.Sequence[Tuple[builtins.str,TypeAlias[Unknown]]]]]]"
              kind: TUPLE
              args {
                pretty_printed_name: "TypeAlias[Unknown]"
                kind: TYPE_ALIAS
              }
              args {
                pretty_printed_name: "TypeAlias[Union[werkzeug.datastructures.headers.Headers,typing.Mapping[builtins.str,TypeAlias[Union[builtins.str,builtins.list[builtins.str],builtins.tuple[builtins.str]]]],typing.Sequence[Tuple[builtins.str,TypeAlias[Unknown]]]]]"
                kind: TYPE_ALIAS
                args {
                  pretty_printed_name: "Union[werkzeug.datastructures.headers.Headers,typing.Mapping[builtins.str,TypeAlias[Union[builtins.str,builtins.list[builtins.str],builtins.tuple[builtins.str]]]],typing.Sequence[Tuple[builtins.str,TypeAlias[Unknown]]]]"
                  kind: UNION
                  args {
                    pretty_printed_name: "werkzeug.datastructures.headers.Headers"
                    fully_qualified_name: "werkzeug.datastructures.headers.Headers"
                  }
                  args {
                    pretty_printed_name: "typing.Mapping[builtins.str,TypeAlias[Union[builtins.str,builtins.list[builtins.str],builtins.tuple[builtins.str]]]]"
                    args {
                      pretty_printed_name: "builtins.str"
                      fully_qualified_name: "builtins.str"
                    }
                    args {
                      pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.list[builtins.str],builtins.tuple[builtins.str]]]"
                      kind: TYPE_ALIAS
                      args {
                        pretty_printed_name: "Union[builtins.str,builtins.list[builtins.str],builtins.tuple[builtins.str]]"
                        kind: UNION
                        args {
                          pretty_printed_name: "builtins.str"
                          fully_qualified_name: "builtins.str"
                        }
                        args {
                          pretty_printed_name: "builtins.list[builtins.str]"
                          args {
                            pretty_printed_name: "builtins.str"
                            fully_qualified_name: "builtins.str"
                          }
                          fully_qualified_name: "builtins.list"
                        }
                        args {
                          pretty_printed_name: "builtins.tuple[builtins.str]"
                          args {
                            pretty_printed_name: "builtins.str"
                            fully_qualified_name: "builtins.str"
                          }
                          fully_qualified_name: "builtins.tuple"
                        }
                      }
                      fully_qualified_name: "flask.typing.HeaderValue"
                    }
                    fully_qualified_name: "typing.Mapping"
                  }
                  args {
                    pretty_printed_name: "typing.Sequence[Tuple[builtins.str,TypeAlias[Unknown]]]"
                    args {
                      pretty_printed_name: "Tuple[builtins.str,TypeAlias[Unknown]]"
                      kind: TUPLE
                      args {
                        pretty_printed_name: "builtins.str"
                        fully_qualified_name: "builtins.str"
                      }
                      args {
                        pretty_printed_name: "TypeAlias[Unknown]"
                        kind: TYPE_ALIAS
                      }
                    }
                    fully_qualified_name: "typing.Sequence"
                  }
                }
                fully_qualified_name: "flask.typing.HeadersValue"
              }
            }
            args {
              pretty_printed_name: "Tuple[TypeAlias[Unknown],builtins.int]"
              kind: TUPLE
              args {
                pretty_printed_name: "TypeAlias[Unknown]"
                kind: TYPE_ALIAS
              }
              args {
                pretty_printed_name: "builtins.int"
                fully_qualified_name: "builtins.int"
              }
            }
            args {
              pretty_printed_name: "Tuple[TypeAlias[Unknown],builtins.int,TypeAlias[Unknown]]"
              kind: TUPLE
              args {
                pretty_printed_name: "TypeAlias[Unknown]"
                kind: TYPE_ALIAS
              }
              args {
                pretty_printed_name: "builtins.int"
                fully_qualified_name: "builtins.int"
              }
              args {
                pretty_printed_name: "TypeAlias[Unknown]"
                kind: TYPE_ALIAS
              }
            }
            args {
              pretty_printed_name: "TypeAlias[CallableType[builtins.function]]"
              kind: TYPE_ALIAS
              args {
                pretty_printed_name: "CallableType[builtins.function]"
                kind: CALLABLE
                args {
                  pretty_printed_name: "builtins.function"
                  fully_qualified_name: "builtins.function"
                }
              }
              fully_qualified_name: "_typeshed.wsgi.WSGIApplication"
            }
          }
          fully_qualified_name: "flask.typing.ResponseReturnValue"
        }
        args {
          pretty_printed_name: "werkzeug.exceptions.HTTPException"
          fully_qualified_name: "werkzeug.exceptions.HTTPException"
        }
      }
    }
    parameters {
      name: "from_error_handler"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
  }
  methods {
    name: "make_default_options_response"
    fully_qualified_name: "flask.app.Flask.make_default_options_response"
    return_annotation {
      pretty_printed_name: "flask.wrappers.Response"
      fully_qualified_name: "flask.wrappers.Response"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
  }
  methods {
    name: "should_ignore_error"
    fully_qualified_name: "flask.app.Flask.should_ignore_error"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    parameters {
      name: "error"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.BaseException,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.BaseException"
          fully_qualified_name: "builtins.BaseException"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "ensure_sync"
    fully_qualified_name: "flask.app.Flask.ensure_sync"
    return_annotation {
      pretty_printed_name: "CallableType[builtins.function]"
      kind: CALLABLE
      args {
        pretty_printed_name: "builtins.function"
        fully_qualified_name: "builtins.function"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    parameters {
      name: "func"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
  }
  methods {
    name: "async_to_sync"
    fully_qualified_name: "flask.app.Flask.async_to_sync"
    return_annotation {
      pretty_printed_name: "CallableType[builtins.function]"
      kind: CALLABLE
      args {
        pretty_printed_name: "builtins.function"
        fully_qualified_name: "builtins.function"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    parameters {
      name: "func"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
  }
  methods {
    name: "url_for"
    fully_qualified_name: "flask.app.Flask.url_for"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    parameters {
      name: "endpoint"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "_anchor"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "_method"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "_scheme"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "_external"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.bool,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "values"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
  }
  methods {
    name: "redirect"
    fully_qualified_name: "flask.app.Flask.redirect"
    return_annotation {
      pretty_printed_name: "werkzeug.wrappers.response.Response"
      fully_qualified_name: "werkzeug.wrappers.response.Response"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    parameters {
      name: "location"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "code"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
    }
  }
  methods {
    name: "make_response"
    fully_qualified_name: "flask.app.Flask.make_response"
    return_annotation {
      pretty_printed_name: "flask.wrappers.Response"
      fully_qualified_name: "flask.wrappers.Response"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    parameters {
      name: "rv"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[Union[TypeAlias[Union[werkzeug.wrappers.response.Response,builtins.str,builtins.bytes,builtins.list[Any],typing.Mapping[builtins.str,Any],typing.Iterator[builtins.str],typing.Iterator[builtins.bytes]]],Tuple[TypeAlias[Unknown],TypeAlias[Union[werkzeug.datastructures.headers.Headers,typing.Mapping[builtins.str,TypeAlias[Union[builtins.str,builtins.list[builtins.str],builtins.tuple[builtins.str]]]],typing.Sequence[Tuple[builtins.str,TypeAlias[Unknown]]]]]],Tuple[TypeAlias[Unknown],builtins.int],Tuple[TypeAlias[Unknown],builtins.int,TypeAlias[Unknown]],TypeAlias[CallableType[builtins.function]]]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[TypeAlias[Union[werkzeug.wrappers.response.Response,builtins.str,builtins.bytes,builtins.list[Any],typing.Mapping[builtins.str,Any],typing.Iterator[builtins.str],typing.Iterator[builtins.bytes]]],Tuple[TypeAlias[Unknown],TypeAlias[Union[werkzeug.datastructures.headers.Headers,typing.Mapping[builtins.str,TypeAlias[Union[builtins.str,builtins.list[builtins.str],builtins.tuple[builtins.str]]]],typing.Sequence[Tuple[builtins.str,TypeAlias[Unknown]]]]]],Tuple[TypeAlias[Unknown],builtins.int],Tuple[TypeAlias[Unknown],builtins.int,TypeAlias[Unknown]],TypeAlias[CallableType[builtins.function]]]"
          kind: UNION
          args {
            pretty_printed_name: "TypeAlias[Union[werkzeug.wrappers.response.Response,builtins.str,builtins.bytes,builtins.list[Any],typing.Mapping[builtins.str,Any],typing.Iterator[builtins.str],typing.Iterator[builtins.bytes]]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[werkzeug.wrappers.response.Response,builtins.str,builtins.bytes,builtins.list[Any],typing.Mapping[builtins.str,Any],typing.Iterator[builtins.str],typing.Iterator[builtins.bytes]]"
              kind: UNION
              args {
                pretty_printed_name: "werkzeug.wrappers.response.Response"
                fully_qualified_name: "werkzeug.wrappers.response.Response"
              }
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              args {
                pretty_printed_name: "builtins.list[Any]"
                args {
                  pretty_printed_name: "Any"
                  kind: ANY
                }
                fully_qualified_name: "builtins.list"
              }
              args {
                pretty_printed_name: "typing.Mapping[builtins.str,Any]"
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
                args {
                  pretty_printed_name: "Any"
                  kind: ANY
                }
                fully_qualified_name: "typing.Mapping"
              }
              args {
                pretty_printed_name: "typing.Iterator[builtins.str]"
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
                fully_qualified_name: "typing.Iterator"
              }
              args {
                pretty_printed_name: "typing.Iterator[builtins.bytes]"
                args {
                  pretty_printed_name: "builtins.bytes"
                  fully_qualified_name: "builtins.bytes"
                }
                fully_qualified_name: "typing.Iterator"
              }
            }
            fully_qualified_name: "flask.typing.ResponseValue"
          }
          args {
            pretty_printed_name: "Tuple[TypeAlias[Unknown],TypeAlias[Union[werkzeug.datastructures.headers.Headers,typing.Mapping[builtins.str,TypeAlias[Union[builtins.str,builtins.list[builtins.str],builtins.tuple[builtins.str]]]],typing.Sequence[Tuple[builtins.str,TypeAlias[Unknown]]]]]]"
            kind: TUPLE
            args {
              pretty_printed_name: "TypeAlias[Unknown]"
              kind: TYPE_ALIAS
            }
            args {
              pretty_printed_name: "TypeAlias[Union[werkzeug.datastructures.headers.Headers,typing.Mapping[builtins.str,TypeAlias[Union[builtins.str,builtins.list[builtins.str],builtins.tuple[builtins.str]]]],typing.Sequence[Tuple[builtins.str,TypeAlias[Unknown]]]]]"
              kind: TYPE_ALIAS
              args {
                pretty_printed_name: "Union[werkzeug.datastructures.headers.Headers,typing.Mapping[builtins.str,TypeAlias[Union[builtins.str,builtins.list[builtins.str],builtins.tuple[builtins.str]]]],typing.Sequence[Tuple[builtins.str,TypeAlias[Unknown]]]]"
                kind: UNION
                args {
                  pretty_printed_name: "werkzeug.datastructures.headers.Headers"
                  fully_qualified_name: "werkzeug.datastructures.headers.Headers"
                }
                args {
                  pretty_printed_name: "typing.Mapping[builtins.str,TypeAlias[Union[builtins.str,builtins.list[builtins.str],builtins.tuple[builtins.str]]]]"
                  args {
                    pretty_printed_name: "builtins.str"
                    fully_qualified_name: "builtins.str"
                  }
                  args {
                    pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.list[builtins.str],builtins.tuple[builtins.str]]]"
                    kind: TYPE_ALIAS
                    args {
                      pretty_printed_name: "Union[builtins.str,builtins.list[builtins.str],builtins.tuple[builtins.str]]"
                      kind: UNION
                      args {
                        pretty_printed_name: "builtins.str"
                        fully_qualified_name: "builtins.str"
                      }
                      args {
                        pretty_printed_name: "builtins.list[builtins.str]"
                        args {
                          pretty_printed_name: "builtins.str"
                          fully_qualified_name: "builtins.str"
                        }
                        fully_qualified_name: "builtins.list"
                      }
                      args {
                        pretty_printed_name: "builtins.tuple[builtins.str]"
                        args {
                          pretty_printed_name: "builtins.str"
                          fully_qualified_name: "builtins.str"
                        }
                        fully_qualified_name: "builtins.tuple"
                      }
                    }
                    fully_qualified_name: "flask.typing.HeaderValue"
                  }
                  fully_qualified_name: "typing.Mapping"
                }
                args {
                  pretty_printed_name: "typing.Sequence[Tuple[builtins.str,TypeAlias[Unknown]]]"
                  args {
                    pretty_printed_name: "Tuple[builtins.str,TypeAlias[Unknown]]"
                    kind: TUPLE
                    args {
                      pretty_printed_name: "builtins.str"
                      fully_qualified_name: "builtins.str"
                    }
                    args {
                      pretty_printed_name: "TypeAlias[Unknown]"
                      kind: TYPE_ALIAS
                    }
                  }
                  fully_qualified_name: "typing.Sequence"
                }
              }
              fully_qualified_name: "flask.typing.HeadersValue"
            }
          }
          args {
            pretty_printed_name: "Tuple[TypeAlias[Unknown],builtins.int]"
            kind: TUPLE
            args {
              pretty_printed_name: "TypeAlias[Unknown]"
              kind: TYPE_ALIAS
            }
            args {
              pretty_printed_name: "builtins.int"
              fully_qualified_name: "builtins.int"
            }
          }
          args {
            pretty_printed_name: "Tuple[TypeAlias[Unknown],builtins.int,TypeAlias[Unknown]]"
            kind: TUPLE
            args {
              pretty_printed_name: "TypeAlias[Unknown]"
              kind: TYPE_ALIAS
            }
            args {
              pretty_printed_name: "builtins.int"
              fully_qualified_name: "builtins.int"
            }
            args {
              pretty_printed_name: "TypeAlias[Unknown]"
              kind: TYPE_ALIAS
            }
          }
          args {
            pretty_printed_name: "TypeAlias[CallableType[builtins.function]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "CallableType[builtins.function]"
              kind: CALLABLE
              args {
                pretty_printed_name: "builtins.function"
                fully_qualified_name: "builtins.function"
              }
            }
            fully_qualified_name: "_typeshed.wsgi.WSGIApplication"
          }
        }
        fully_qualified_name: "flask.typing.ResponseReturnValue"
      }
    }
  }
  methods {
    name: "create_url_adapter"
    fully_qualified_name: "flask.app.Flask.create_url_adapter"
    return_annotation {
      pretty_printed_name: "Union[werkzeug.routing.map.MapAdapter,None]"
      kind: UNION
      args {
        pretty_printed_name: "werkzeug.routing.map.MapAdapter"
        fully_qualified_name: "werkzeug.routing.map.MapAdapter"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    parameters {
      name: "request"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[flask.wrappers.Request,None]"
        kind: UNION
        args {
          pretty_printed_name: "flask.wrappers.Request"
          fully_qualified_name: "flask.wrappers.Request"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "inject_url_defaults"
    fully_qualified_name: "flask.app.Flask.inject_url_defaults"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    parameters {
      name: "endpoint"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "values"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.dict[Any,Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "builtins.dict"
      }
    }
  }
  methods {
    name: "handle_url_build_error"
    fully_qualified_name: "flask.app.Flask.handle_url_build_error"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    parameters {
      name: "error"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "werkzeug.routing.exceptions.BuildError"
        fully_qualified_name: "werkzeug.routing.exceptions.BuildError"
      }
    }
    parameters {
      name: "endpoint"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "values"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.dict[builtins.str,Any]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "builtins.dict"
      }
    }
  }
  methods {
    name: "preprocess_request"
    fully_qualified_name: "flask.app.Flask.preprocess_request"
    return_annotation {
      pretty_printed_name: "Union[TypeAlias[Union[TypeAlias[Union[werkzeug.wrappers.response.Response,builtins.str,builtins.bytes,builtins.list[Any],typing.Mapping[builtins.str,Any],typing.Iterator[builtins.str],typing.Iterator[builtins.bytes]]],Tuple[TypeAlias[Unknown],TypeAlias[Union[werkzeug.datastructures.headers.Headers,typing.Mapping[builtins.str,TypeAlias[Union[builtins.str,builtins.list[builtins.str],builtins.tuple[builtins.str]]]],typing.Sequence[Tuple[builtins.str,TypeAlias[Unknown]]]]]],Tuple[TypeAlias[Unknown],builtins.int],Tuple[TypeAlias[Unknown],builtins.int,TypeAlias[Unknown]],TypeAlias[CallableType[builtins.function]]]],None]"
      kind: UNION
      args {
        pretty_printed_name: "TypeAlias[Union[TypeAlias[Union[werkzeug.wrappers.response.Response,builtins.str,builtins.bytes,builtins.list[Any],typing.Mapping[builtins.str,Any],typing.Iterator[builtins.str],typing.Iterator[builtins.bytes]]],Tuple[TypeAlias[Unknown],TypeAlias[Union[werkzeug.datastructures.headers.Headers,typing.Mapping[builtins.str,TypeAlias[Union[builtins.str,builtins.list[builtins.str],builtins.tuple[builtins.str]]]],typing.Sequence[Tuple[builtins.str,TypeAlias[Unknown]]]]]],Tuple[TypeAlias[Unknown],builtins.int],Tuple[TypeAlias[Unknown],builtins.int,TypeAlias[Unknown]],TypeAlias[CallableType[builtins.function]]]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[TypeAlias[Union[werkzeug.wrappers.response.Response,builtins.str,builtins.bytes,builtins.list[Any],typing.Mapping[builtins.str,Any],typing.Iterator[builtins.str],typing.Iterator[builtins.bytes]]],Tuple[TypeAlias[Unknown],TypeAlias[Union[werkzeug.datastructures.headers.Headers,typing.Mapping[builtins.str,TypeAlias[Union[builtins.str,builtins.list[builtins.str],builtins.tuple[builtins.str]]]],typing.Sequence[Tuple[builtins.str,TypeAlias[Unknown]]]]]],Tuple[TypeAlias[Unknown],builtins.int],Tuple[TypeAlias[Unknown],builtins.int,TypeAlias[Unknown]],TypeAlias[CallableType[builtins.function]]]"
          kind: UNION
          args {
            pretty_printed_name: "TypeAlias[Union[werkzeug.wrappers.response.Response,builtins.str,builtins.bytes,builtins.list[Any],typing.Mapping[builtins.str,Any],typing.Iterator[builtins.str],typing.Iterator[builtins.bytes]]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "Union[werkzeug.wrappers.response.Response,builtins.str,builtins.bytes,builtins.list[Any],typing.Mapping[builtins.str,Any],typing.Iterator[builtins.str],typing.Iterator[builtins.bytes]]"
              kind: UNION
              args {
                pretty_printed_name: "werkzeug.wrappers.response.Response"
                fully_qualified_name: "werkzeug.wrappers.response.Response"
              }
              args {
                pretty_printed_name: "builtins.str"
                fully_qualified_name: "builtins.str"
              }
              args {
                pretty_printed_name: "builtins.bytes"
                fully_qualified_name: "builtins.bytes"
              }
              args {
                pretty_printed_name: "builtins.list[Any]"
                args {
                  pretty_printed_name: "Any"
                  kind: ANY
                }
                fully_qualified_name: "builtins.list"
              }
              args {
                pretty_printed_name: "typing.Mapping[builtins.str,Any]"
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
                args {
                  pretty_printed_name: "Any"
                  kind: ANY
                }
                fully_qualified_name: "typing.Mapping"
              }
              args {
                pretty_printed_name: "typing.Iterator[builtins.str]"
                args {
                  pretty_printed_name: "builtins.str"
                  fully_qualified_name: "builtins.str"
                }
                fully_qualified_name: "typing.Iterator"
              }
              args {
                pretty_printed_name: "typing.Iterator[builtins.bytes]"
                args {
                  pretty_printed_name: "builtins.bytes"
                  fully_qualified_name: "builtins.bytes"
                }
                fully_qualified_name: "typing.Iterator"
              }
            }
            fully_qualified_name: "flask.typing.ResponseValue"
          }
          args {
            pretty_printed_name: "Tuple[TypeAlias[Unknown],TypeAlias[Union[werkzeug.datastructures.headers.Headers,typing.Mapping[builtins.str,TypeAlias[Union[builtins.str,builtins.list[builtins.str],builtins.tuple[builtins.str]]]],typing.Sequence[Tuple[builtins.str,TypeAlias[Unknown]]]]]]"
            kind: TUPLE
            args {
              pretty_printed_name: "TypeAlias[Unknown]"
              kind: TYPE_ALIAS
            }
            args {
              pretty_printed_name: "TypeAlias[Union[werkzeug.datastructures.headers.Headers,typing.Mapping[builtins.str,TypeAlias[Union[builtins.str,builtins.list[builtins.str],builtins.tuple[builtins.str]]]],typing.Sequence[Tuple[builtins.str,TypeAlias[Unknown]]]]]"
              kind: TYPE_ALIAS
              args {
                pretty_printed_name: "Union[werkzeug.datastructures.headers.Headers,typing.Mapping[builtins.str,TypeAlias[Union[builtins.str,builtins.list[builtins.str],builtins.tuple[builtins.str]]]],typing.Sequence[Tuple[builtins.str,TypeAlias[Unknown]]]]"
                kind: UNION
                args {
                  pretty_printed_name: "werkzeug.datastructures.headers.Headers"
                  fully_qualified_name: "werkzeug.datastructures.headers.Headers"
                }
                args {
                  pretty_printed_name: "typing.Mapping[builtins.str,TypeAlias[Union[builtins.str,builtins.list[builtins.str],builtins.tuple[builtins.str]]]]"
                  args {
                    pretty_printed_name: "builtins.str"
                    fully_qualified_name: "builtins.str"
                  }
                  args {
                    pretty_printed_name: "TypeAlias[Union[builtins.str,builtins.list[builtins.str],builtins.tuple[builtins.str]]]"
                    kind: TYPE_ALIAS
                    args {
                      pretty_printed_name: "Union[builtins.str,builtins.list[builtins.str],builtins.tuple[builtins.str]]"
                      kind: UNION
                      args {
                        pretty_printed_name: "builtins.str"
                        fully_qualified_name: "builtins.str"
                      }
                      args {
                        pretty_printed_name: "builtins.list[builtins.str]"
                        args {
                          pretty_printed_name: "builtins.str"
                          fully_qualified_name: "builtins.str"
                        }
                        fully_qualified_name: "builtins.list"
                      }
                      args {
                        pretty_printed_name: "builtins.tuple[builtins.str]"
                        args {
                          pretty_printed_name: "builtins.str"
                          fully_qualified_name: "builtins.str"
                        }
                        fully_qualified_name: "builtins.tuple"
                      }
                    }
                    fully_qualified_name: "flask.typing.HeaderValue"
                  }
                  fully_qualified_name: "typing.Mapping"
                }
                args {
                  pretty_printed_name: "typing.Sequence[Tuple[builtins.str,TypeAlias[Unknown]]]"
                  args {
                    pretty_printed_name: "Tuple[builtins.str,TypeAlias[Unknown]]"
                    kind: TUPLE
                    args {
                      pretty_printed_name: "builtins.str"
                      fully_qualified_name: "builtins.str"
                    }
                    args {
                      pretty_printed_name: "TypeAlias[Unknown]"
                      kind: TYPE_ALIAS
                    }
                  }
                  fully_qualified_name: "typing.Sequence"
                }
              }
              fully_qualified_name: "flask.typing.HeadersValue"
            }
          }
          args {
            pretty_printed_name: "Tuple[TypeAlias[Unknown],builtins.int]"
            kind: TUPLE
            args {
              pretty_printed_name: "TypeAlias[Unknown]"
              kind: TYPE_ALIAS
            }
            args {
              pretty_printed_name: "builtins.int"
              fully_qualified_name: "builtins.int"
            }
          }
          args {
            pretty_printed_name: "Tuple[TypeAlias[Unknown],builtins.int,TypeAlias[Unknown]]"
            kind: TUPLE
            args {
              pretty_printed_name: "TypeAlias[Unknown]"
              kind: TYPE_ALIAS
            }
            args {
              pretty_printed_name: "builtins.int"
              fully_qualified_name: "builtins.int"
            }
            args {
              pretty_printed_name: "TypeAlias[Unknown]"
              kind: TYPE_ALIAS
            }
          }
          args {
            pretty_printed_name: "TypeAlias[CallableType[builtins.function]]"
            kind: TYPE_ALIAS
            args {
              pretty_printed_name: "CallableType[builtins.function]"
              kind: CALLABLE
              args {
                pretty_printed_name: "builtins.function"
                fully_qualified_name: "builtins.function"
              }
            }
            fully_qualified_name: "_typeshed.wsgi.WSGIApplication"
          }
        }
        fully_qualified_name: "flask.typing.ResponseReturnValue"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
  }
  methods {
    name: "process_response"
    fully_qualified_name: "flask.app.Flask.process_response"
    return_annotation {
      pretty_printed_name: "flask.wrappers.Response"
      fully_qualified_name: "flask.wrappers.Response"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    parameters {
      name: "response"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.wrappers.Response"
        fully_qualified_name: "flask.wrappers.Response"
      }
    }
  }
  methods {
    name: "do_teardown_request"
    fully_qualified_name: "flask.app.Flask.do_teardown_request"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    parameters {
      name: "exc"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.BaseException,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.BaseException"
          fully_qualified_name: "builtins.BaseException"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "do_teardown_appcontext"
    fully_qualified_name: "flask.app.Flask.do_teardown_appcontext"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    parameters {
      name: "exc"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.BaseException,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.BaseException"
          fully_qualified_name: "builtins.BaseException"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "app_context"
    fully_qualified_name: "flask.app.Flask.app_context"
    return_annotation {
      pretty_printed_name: "flask.ctx.AppContext"
      fully_qualified_name: "flask.ctx.AppContext"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
  }
  methods {
    name: "request_context"
    fully_qualified_name: "flask.app.Flask.request_context"
    return_annotation {
      pretty_printed_name: "flask.ctx.RequestContext"
      fully_qualified_name: "flask.ctx.RequestContext"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    parameters {
      name: "environ"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.dict[Any,Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "builtins.dict"
      }
    }
  }
  methods {
    name: "test_request_context"
    fully_qualified_name: "flask.app.Flask.test_request_context"
    return_annotation {
      pretty_printed_name: "flask.ctx.RequestContext"
      fully_qualified_name: "flask.ctx.RequestContext"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    parameters {
      name: "args"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "kwargs"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
  }
  methods {
    name: "wsgi_app"
    fully_qualified_name: "flask.app.Flask.wsgi_app"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    parameters {
      name: "environ"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.dict[Any,Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "builtins.dict"
      }
    }
    parameters {
      name: "start_response"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
  }
  methods {
    name: "__call__"
    fully_qualified_name: "flask.app.Flask.__call__"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    parameters {
      name: "environ"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.dict[Any,Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "builtins.dict"
      }
    }
    parameters {
      name: "start_response"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
  }
  overloaded_methods {
    name: "debug"
    fullname: "flask.app.Flask.debug"
    definitions {
      name: "debug"
      fully_qualified_name: "flask.app.Flask.debug"
      return_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "flask.app.Flask"
          fully_qualified_name: "flask.app.Flask"
        }
      }
      has_decorators: true
      resolved_decorator_names: "property"
      is_overload: true
      is_property: true
    }
    definitions {
      name: "debug"
      fully_qualified_name: "flask.app.Flask.debug"
      return_annotation {
        pretty_printed_name: "None"
        kind: NONE
      }
      parameters {
        name: "self"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "flask.app.Flask"
          fully_qualified_name: "flask.app.Flask"
        }
      }
      parameters {
        name: "value"
        kind: POSITIONAL_OR_KEYWORD
        type_annotation {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
      }
      has_decorators: true
      resolved_decorator_names: "debug.setter"
    }
  }
  attributes {
    name: "request_class"
    fully_qualified_name: "flask.app.Flask.request_class"
    type_annotation {
      pretty_printed_name: "CallableType[builtins.type]"
      kind: CALLABLE
      args {
        pretty_printed_name: "builtins.type"
        fully_qualified_name: "builtins.type"
      }
    }
  }
  attributes {
    name: "response_class"
    fully_qualified_name: "flask.app.Flask.response_class"
    type_annotation {
      pretty_printed_name: "CallableType[builtins.type]"
      kind: CALLABLE
      args {
        pretty_printed_name: "builtins.type"
        fully_qualified_name: "builtins.type"
      }
    }
  }
  attributes {
    name: "aborter_class"
    fully_qualified_name: "flask.app.Flask.aborter_class"
    type_annotation {
      pretty_printed_name: "CallableType[builtins.type]"
      kind: CALLABLE
      args {
        pretty_printed_name: "builtins.type"
        fully_qualified_name: "builtins.type"
      }
    }
  }
  attributes {
    name: "jinja_environment"
    fully_qualified_name: "flask.app.Flask.jinja_environment"
    type_annotation {
      pretty_printed_name: "CallableType[builtins.type]"
      kind: CALLABLE
      args {
        pretty_printed_name: "builtins.type"
        fully_qualified_name: "builtins.type"
      }
    }
  }
  attributes {
    name: "app_ctx_globals_class"
    fully_qualified_name: "flask.app.Flask.app_ctx_globals_class"
    type_annotation {
      pretty_printed_name: "CallableType[builtins.type]"
      kind: CALLABLE
      args {
        pretty_printed_name: "builtins.type"
        fully_qualified_name: "builtins.type"
      }
    }
  }
  attributes {
    name: "config_class"
    fully_qualified_name: "flask.app.Flask.config_class"
    type_annotation {
      pretty_printed_name: "CallableType[abc.ABCMeta]"
      kind: CALLABLE
      args {
        pretty_printed_name: "abc.ABCMeta"
        fully_qualified_name: "abc.ABCMeta"
      }
    }
  }
  attributes {
    name: "testing"
    fully_qualified_name: "flask.app.Flask.testing"
    type_annotation {
      pretty_printed_name: "flask.config.ConfigAttribute"
      fully_qualified_name: "flask.config.ConfigAttribute"
    }
  }
  attributes {
    name: "secret_key"
    fully_qualified_name: "flask.app.Flask.secret_key"
    type_annotation {
      pretty_printed_name: "flask.config.ConfigAttribute"
      fully_qualified_name: "flask.config.ConfigAttribute"
    }
  }
  attributes {
    name: "permanent_session_lifetime"
    fully_qualified_name: "flask.app.Flask.permanent_session_lifetime"
    type_annotation {
      pretty_printed_name: "flask.config.ConfigAttribute"
      fully_qualified_name: "flask.config.ConfigAttribute"
    }
  }
  attributes {
    name: "json_provider_class"
    fully_qualified_name: "flask.app.Flask.json_provider_class"
    type_annotation {
      pretty_printed_name: "Type[flask.json.provider.JSONProvider]"
      kind: TYPE
      args {
        pretty_printed_name: "flask.json.provider.JSONProvider"
        fully_qualified_name: "flask.json.provider.JSONProvider"
      }
    }
  }
  attributes {
    name: "jinja_options"
    fully_qualified_name: "flask.app.Flask.jinja_options"
    type_annotation {
      pretty_printed_name: "builtins.dict[Any,Any]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "builtins.dict"
    }
  }
  attributes {
    name: "default_config"
    fully_qualified_name: "flask.app.Flask.default_config"
    type_annotation {
      pretty_printed_name: "werkzeug.datastructures.structures.ImmutableDict[builtins.str,Union[builtins.int,builtins.str,datetime.timedelta,builtins.bool,None]]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "Union[builtins.int,builtins.str,datetime.timedelta,builtins.bool,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "datetime.timedelta"
          fully_qualified_name: "datetime.timedelta"
        }
        args {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      fully_qualified_name: "werkzeug.datastructures.structures.ImmutableDict"
    }
  }
  attributes {
    name: "url_rule_class"
    fully_qualified_name: "flask.app.Flask.url_rule_class"
    type_annotation {
      pretty_printed_name: "CallableType[builtins.type]"
      kind: CALLABLE
      args {
        pretty_printed_name: "builtins.type"
        fully_qualified_name: "builtins.type"
      }
    }
  }
  attributes {
    name: "url_map_class"
    fully_qualified_name: "flask.app.Flask.url_map_class"
    type_annotation {
      pretty_printed_name: "CallableType[builtins.type]"
      kind: CALLABLE
      args {
        pretty_printed_name: "builtins.type"
        fully_qualified_name: "builtins.type"
      }
    }
  }
  attributes {
    name: "test_client_class"
    fully_qualified_name: "flask.app.Flask.test_client_class"
    type_annotation {
      pretty_printed_name: "Union[Type[flask.testing.FlaskClient],None]"
      kind: UNION
      args {
        pretty_printed_name: "Type[flask.testing.FlaskClient]"
        kind: TYPE
        args {
          pretty_printed_name: "flask.testing.FlaskClient"
          fully_qualified_name: "flask.testing.FlaskClient"
        }
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  attributes {
    name: "test_cli_runner_class"
    fully_qualified_name: "flask.app.Flask.test_cli_runner_class"
    type_annotation {
      pretty_printed_name: "Union[Type[flask.testing.FlaskCliRunner],None]"
      kind: UNION
      args {
        pretty_printed_name: "Type[flask.testing.FlaskCliRunner]"
        kind: TYPE
        args {
          pretty_printed_name: "flask.testing.FlaskCliRunner"
          fully_qualified_name: "flask.testing.FlaskCliRunner"
        }
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  attributes {
    name: "session_interface"
    fully_qualified_name: "flask.app.Flask.session_interface"
    type_annotation {
      pretty_printed_name: "flask.sessions.SessionInterface"
      fully_qualified_name: "flask.sessions.SessionInterface"
    }
  }
  attributes {
    name: "instance_path"
    fully_qualified_name: "flask.app.Flask.instance_path"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  attributes {
    name: "config"
    fully_qualified_name: "flask.app.Flask.config"
    type_annotation {
      pretty_printed_name: "flask.config.Config"
      fully_qualified_name: "flask.config.Config"
    }
  }
  attributes {
    name: "aborter"
    fully_qualified_name: "flask.app.Flask.aborter"
    type_annotation {
      pretty_printed_name: "werkzeug.exceptions.Aborter"
      fully_qualified_name: "werkzeug.exceptions.Aborter"
    }
  }
  attributes {
    name: "json"
    fully_qualified_name: "flask.app.Flask.json"
    type_annotation {
      pretty_printed_name: "flask.json.provider.JSONProvider"
      fully_qualified_name: "flask.json.provider.JSONProvider"
    }
  }
  attributes {
    name: "url_build_error_handlers"
    fully_qualified_name: "flask.app.Flask.url_build_error_handlers"
    type_annotation {
      pretty_printed_name: "builtins.list[CallableType[builtins.function]]"
      args {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
      fully_qualified_name: "builtins.list"
    }
  }
  attributes {
    name: "teardown_appcontext_funcs"
    fully_qualified_name: "flask.app.Flask.teardown_appcontext_funcs"
    type_annotation {
      pretty_printed_name: "builtins.list[TypeAlias[Union[CallableType[builtins.function],CallableType[builtins.function]]]]"
      args {
        pretty_printed_name: "TypeAlias[Union[CallableType[builtins.function],CallableType[builtins.function]]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "Union[CallableType[builtins.function],CallableType[builtins.function]]"
          kind: UNION
          args {
            pretty_printed_name: "CallableType[builtins.function]"
            kind: CALLABLE
            args {
              pretty_printed_name: "builtins.function"
              fully_qualified_name: "builtins.function"
            }
          }
          args {
            pretty_printed_name: "CallableType[builtins.function]"
            kind: CALLABLE
            args {
              pretty_printed_name: "builtins.function"
              fully_qualified_name: "builtins.function"
            }
          }
        }
        fully_qualified_name: "flask.typing.TeardownCallable"
      }
      fully_qualified_name: "builtins.list"
    }
  }
  attributes {
    name: "shell_context_processors"
    fully_qualified_name: "flask.app.Flask.shell_context_processors"
    type_annotation {
      pretty_printed_name: "builtins.list[TypeAlias[CallableType[builtins.function]]]"
      args {
        pretty_printed_name: "TypeAlias[CallableType[builtins.function]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
        fully_qualified_name: "flask.typing.ShellContextProcessorCallable"
      }
      fully_qualified_name: "builtins.list"
    }
  }
  attributes {
    name: "blueprints"
    fully_qualified_name: "flask.app.Flask.blueprints"
    type_annotation {
      pretty_printed_name: "builtins.dict[builtins.str,flask.blueprints.Blueprint]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "flask.blueprints.Blueprint"
        fully_qualified_name: "flask.blueprints.Blueprint"
      }
      fully_qualified_name: "builtins.dict"
    }
  }
  attributes {
    name: "extensions"
    fully_qualified_name: "flask.app.Flask.extensions"
    type_annotation {
      pretty_printed_name: "builtins.dict[Any,Any]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "builtins.dict"
    }
  }
  attributes {
    name: "url_map"
    fully_qualified_name: "flask.app.Flask.url_map"
    type_annotation {
      pretty_printed_name: "werkzeug.routing.map.Map"
      fully_qualified_name: "werkzeug.routing.map.Map"
    }
  }
  attributes {
    name: "subdomain_matching"
    fully_qualified_name: "flask.app.Flask.subdomain_matching"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
  attributes {
    name: "_got_first_request"
    fully_qualified_name: "flask.app.Flask._got_first_request"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
}
classes {
  name: "Request"
  fully_qualified_name: "flask.wrappers.Request"
  super_classes: "werkzeug.wrappers.request.Request"
  methods {
    name: "max_content_length"
    fully_qualified_name: "flask.wrappers.Request.max_content_length"
    return_annotation {
      pretty_printed_name: "Union[builtins.int,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.wrappers.Request"
        fully_qualified_name: "flask.wrappers.Request"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "endpoint"
    fully_qualified_name: "flask.wrappers.Request.endpoint"
    return_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.wrappers.Request"
        fully_qualified_name: "flask.wrappers.Request"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "blueprint"
    fully_qualified_name: "flask.wrappers.Request.blueprint"
    return_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.wrappers.Request"
        fully_qualified_name: "flask.wrappers.Request"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "blueprints"
    fully_qualified_name: "flask.wrappers.Request.blueprints"
    return_annotation {
      pretty_printed_name: "builtins.list[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "builtins.list"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.wrappers.Request"
        fully_qualified_name: "flask.wrappers.Request"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  methods {
    name: "_load_form_data"
    fully_qualified_name: "flask.wrappers.Request._load_form_data"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.wrappers.Request"
        fully_qualified_name: "flask.wrappers.Request"
      }
    }
  }
  methods {
    name: "on_json_loading_failed"
    fully_qualified_name: "flask.wrappers.Request.on_json_loading_failed"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.wrappers.Request"
        fully_qualified_name: "flask.wrappers.Request"
      }
    }
    parameters {
      name: "e"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.ValueError,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.ValueError"
          fully_qualified_name: "builtins.ValueError"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  attributes {
    name: "json_module"
    fully_qualified_name: "flask.wrappers.Request.json_module"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  attributes {
    name: "url_rule"
    fully_qualified_name: "flask.wrappers.Request.url_rule"
    type_annotation {
      pretty_printed_name: "Union[werkzeug.routing.rules.Rule,None]"
      kind: UNION
      args {
        pretty_printed_name: "werkzeug.routing.rules.Rule"
        fully_qualified_name: "werkzeug.routing.rules.Rule"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  attributes {
    name: "view_args"
    fully_qualified_name: "flask.wrappers.Request.view_args"
    type_annotation {
      pretty_printed_name: "Union[builtins.dict[builtins.str,Any],None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.dict[builtins.str,Any]"
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "builtins.dict"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  attributes {
    name: "routing_exception"
    fully_qualified_name: "flask.wrappers.Request.routing_exception"
    type_annotation {
      pretty_printed_name: "Union[builtins.Exception,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.Exception"
        fully_qualified_name: "builtins.Exception"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
}
classes {
  name: "Response"
  fully_qualified_name: "flask.wrappers.Response"
  super_classes: "werkzeug.wrappers.response.Response"
  methods {
    name: "max_cookie_size"
    fully_qualified_name: "flask.wrappers.Response.max_cookie_size"
    return_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.wrappers.Response"
        fully_qualified_name: "flask.wrappers.Response"
      }
    }
    has_decorators: true
    resolved_decorator_names: "property"
    is_property: true
  }
  attributes {
    name: "default_mimetype"
    fully_qualified_name: "flask.wrappers.Response.default_mimetype"
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  attributes {
    name: "autocorrect_location_header"
    fully_qualified_name: "flask.wrappers.Response.autocorrect_location_header"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
}
classes {
  name: "Blueprint"
  fully_qualified_name: "flask.blueprints.Blueprint"
  super_classes: "flask.scaffold.Scaffold"
  methods {
    name: "__init__"
    fully_qualified_name: "flask.blueprints.Blueprint.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.blueprints.Blueprint"
        fully_qualified_name: "flask.blueprints.Blueprint"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "import_name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "static_folder"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,os.PathLike[Any],None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "os.PathLike[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "os.PathLike"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "static_url_path"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "template_folder"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,os.PathLike[Any],None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "os.PathLike[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "os.PathLike"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "url_prefix"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "subdomain"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "url_defaults"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.dict[Any,Any],None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.dict[Any,Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "builtins.dict"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "root_path"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "cli_group"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "_check_setup_finished"
    fully_qualified_name: "flask.blueprints.Blueprint._check_setup_finished"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.blueprints.Blueprint"
        fully_qualified_name: "flask.blueprints.Blueprint"
      }
    }
    parameters {
      name: "f_name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  methods {
    name: "record"
    fully_qualified_name: "flask.blueprints.Blueprint.record"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.blueprints.Blueprint"
        fully_qualified_name: "flask.blueprints.Blueprint"
      }
    }
    parameters {
      name: "func"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "setupmethod"
  }
  methods {
    name: "record_once"
    fully_qualified_name: "flask.blueprints.Blueprint.record_once"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.blueprints.Blueprint"
        fully_qualified_name: "flask.blueprints.Blueprint"
      }
    }
    parameters {
      name: "func"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "setupmethod"
  }
  methods {
    name: "make_setup_state"
    fully_qualified_name: "flask.blueprints.Blueprint.make_setup_state"
    return_annotation {
      pretty_printed_name: "flask.blueprints.BlueprintSetupState"
      fully_qualified_name: "flask.blueprints.BlueprintSetupState"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.blueprints.Blueprint"
        fully_qualified_name: "flask.blueprints.Blueprint"
      }
    }
    parameters {
      name: "app"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    parameters {
      name: "options"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.dict[Any,Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "builtins.dict"
      }
    }
    parameters {
      name: "first_registration"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
  }
  methods {
    name: "register_blueprint"
    fully_qualified_name: "flask.blueprints.Blueprint.register_blueprint"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.blueprints.Blueprint"
        fully_qualified_name: "flask.blueprints.Blueprint"
      }
    }
    parameters {
      name: "blueprint"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.blueprints.Blueprint"
        fully_qualified_name: "flask.blueprints.Blueprint"
      }
    }
    parameters {
      name: "options"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    has_decorators: true
    resolved_decorator_names: "setupmethod"
  }
  methods {
    name: "register"
    fully_qualified_name: "flask.blueprints.Blueprint.register"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.blueprints.Blueprint"
        fully_qualified_name: "flask.blueprints.Blueprint"
      }
    }
    parameters {
      name: "app"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.app.Flask"
        fully_qualified_name: "flask.app.Flask"
      }
    }
    parameters {
      name: "options"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.dict[Any,Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "builtins.dict"
      }
    }
  }
  methods {
    name: "add_url_rule"
    fully_qualified_name: "flask.blueprints.Blueprint.add_url_rule"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.blueprints.Blueprint"
        fully_qualified_name: "flask.blueprints.Blueprint"
      }
    }
    parameters {
      name: "rule"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "endpoint"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "view_func"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[TypeAlias[Union[CallableType[builtins.function],CallableType[builtins.function]]],None]"
        kind: UNION
        args {
          pretty_printed_name: "TypeAlias[Union[CallableType[builtins.function],CallableType[builtins.function]]]"
          kind: TYPE_ALIAS
          args {
            pretty_printed_name: "Union[CallableType[builtins.function],CallableType[builtins.function]]"
            kind: UNION
            args {
              pretty_printed_name: "CallableType[builtins.function]"
              kind: CALLABLE
              args {
                pretty_printed_name: "builtins.function"
                fully_qualified_name: "builtins.function"
              }
            }
            args {
              pretty_printed_name: "CallableType[builtins.function]"
              kind: CALLABLE
              args {
                pretty_printed_name: "builtins.function"
                fully_qualified_name: "builtins.function"
              }
            }
          }
          fully_qualified_name: "flask.typing.RouteCallable"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "provide_automatic_options"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.bool,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.bool"
          fully_qualified_name: "builtins.bool"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "options"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    has_decorators: true
    resolved_decorator_names: "setupmethod"
  }
  methods {
    name: "app_template_filter"
    fully_qualified_name: "flask.blueprints.Blueprint.app_template_filter"
    return_annotation {
      pretty_printed_name: "CallableType[builtins.function]"
      kind: CALLABLE
      args {
        pretty_printed_name: "builtins.function"
        fully_qualified_name: "builtins.function"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.blueprints.Blueprint"
        fully_qualified_name: "flask.blueprints.Blueprint"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "setupmethod"
  }
  methods {
    name: "add_app_template_filter"
    fully_qualified_name: "flask.blueprints.Blueprint.add_app_template_filter"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.blueprints.Blueprint"
        fully_qualified_name: "flask.blueprints.Blueprint"
      }
    }
    parameters {
      name: "f"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[CallableType[builtins.function]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
        fully_qualified_name: "flask.typing.TemplateFilterCallable"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "setupmethod"
  }
  methods {
    name: "app_template_test"
    fully_qualified_name: "flask.blueprints.Blueprint.app_template_test"
    return_annotation {
      pretty_printed_name: "CallableType[builtins.function]"
      kind: CALLABLE
      args {
        pretty_printed_name: "builtins.function"
        fully_qualified_name: "builtins.function"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.blueprints.Blueprint"
        fully_qualified_name: "flask.blueprints.Blueprint"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "setupmethod"
  }
  methods {
    name: "add_app_template_test"
    fully_qualified_name: "flask.blueprints.Blueprint.add_app_template_test"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.blueprints.Blueprint"
        fully_qualified_name: "flask.blueprints.Blueprint"
      }
    }
    parameters {
      name: "f"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[CallableType[builtins.function]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
        fully_qualified_name: "flask.typing.TemplateTestCallable"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "setupmethod"
  }
  methods {
    name: "app_template_global"
    fully_qualified_name: "flask.blueprints.Blueprint.app_template_global"
    return_annotation {
      pretty_printed_name: "CallableType[builtins.function]"
      kind: CALLABLE
      args {
        pretty_printed_name: "builtins.function"
        fully_qualified_name: "builtins.function"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.blueprints.Blueprint"
        fully_qualified_name: "flask.blueprints.Blueprint"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "setupmethod"
  }
  methods {
    name: "add_app_template_global"
    fully_qualified_name: "flask.blueprints.Blueprint.add_app_template_global"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.blueprints.Blueprint"
        fully_qualified_name: "flask.blueprints.Blueprint"
      }
    }
    parameters {
      name: "f"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "TypeAlias[CallableType[builtins.function]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
        fully_qualified_name: "flask.typing.TemplateGlobalCallable"
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "setupmethod"
  }
  methods {
    name: "before_app_request"
    fully_qualified_name: "flask.blueprints.Blueprint.before_app_request"
    return_annotation {
      pretty_printed_name: "flask.blueprints.T_before_request"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.blueprints.Blueprint"
        fully_qualified_name: "flask.blueprints.Blueprint"
      }
    }
    parameters {
      name: "f"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.blueprints.T_before_request"
        kind: TYPE_VAR
      }
    }
    has_decorators: true
    resolved_decorator_names: "setupmethod"
  }
  methods {
    name: "after_app_request"
    fully_qualified_name: "flask.blueprints.Blueprint.after_app_request"
    return_annotation {
      pretty_printed_name: "flask.blueprints.T_after_request"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.blueprints.Blueprint"
        fully_qualified_name: "flask.blueprints.Blueprint"
      }
    }
    parameters {
      name: "f"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.blueprints.T_after_request"
        kind: TYPE_VAR
      }
    }
    has_decorators: true
    resolved_decorator_names: "setupmethod"
  }
  methods {
    name: "teardown_app_request"
    fully_qualified_name: "flask.blueprints.Blueprint.teardown_app_request"
    return_annotation {
      pretty_printed_name: "flask.blueprints.T_teardown"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.blueprints.Blueprint"
        fully_qualified_name: "flask.blueprints.Blueprint"
      }
    }
    parameters {
      name: "f"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.blueprints.T_teardown"
        kind: TYPE_VAR
      }
    }
    has_decorators: true
    resolved_decorator_names: "setupmethod"
  }
  methods {
    name: "app_context_processor"
    fully_qualified_name: "flask.blueprints.Blueprint.app_context_processor"
    return_annotation {
      pretty_printed_name: "flask.blueprints.T_template_context_processor"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.blueprints.Blueprint"
        fully_qualified_name: "flask.blueprints.Blueprint"
      }
    }
    parameters {
      name: "f"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.blueprints.T_template_context_processor"
        kind: TYPE_VAR
      }
    }
    has_decorators: true
    resolved_decorator_names: "setupmethod"
  }
  methods {
    name: "app_errorhandler"
    fully_qualified_name: "flask.blueprints.Blueprint.app_errorhandler"
    return_annotation {
      pretty_printed_name: "CallableType[builtins.function]"
      kind: CALLABLE
      args {
        pretty_printed_name: "builtins.function"
        fully_qualified_name: "builtins.function"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.blueprints.Blueprint"
        fully_qualified_name: "flask.blueprints.Blueprint"
      }
    }
    parameters {
      name: "code"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[Type[builtins.Exception],builtins.int]"
        kind: UNION
        args {
          pretty_printed_name: "Type[builtins.Exception]"
          kind: TYPE
          args {
            pretty_printed_name: "builtins.Exception"
            fully_qualified_name: "builtins.Exception"
          }
        }
        args {
          pretty_printed_name: "builtins.int"
          fully_qualified_name: "builtins.int"
        }
      }
    }
    has_decorators: true
    resolved_decorator_names: "setupmethod"
  }
  methods {
    name: "app_url_value_preprocessor"
    fully_qualified_name: "flask.blueprints.Blueprint.app_url_value_preprocessor"
    return_annotation {
      pretty_printed_name: "flask.blueprints.T_url_value_preprocessor"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.blueprints.Blueprint"
        fully_qualified_name: "flask.blueprints.Blueprint"
      }
    }
    parameters {
      name: "f"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.blueprints.T_url_value_preprocessor"
        kind: TYPE_VAR
      }
    }
    has_decorators: true
    resolved_decorator_names: "setupmethod"
  }
  methods {
    name: "app_url_defaults"
    fully_qualified_name: "flask.blueprints.Blueprint.app_url_defaults"
    return_annotation {
      pretty_printed_name: "flask.blueprints.T_url_defaults"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.blueprints.Blueprint"
        fully_qualified_name: "flask.blueprints.Blueprint"
      }
    }
    parameters {
      name: "f"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.blueprints.T_url_defaults"
        kind: TYPE_VAR
      }
    }
    has_decorators: true
    resolved_decorator_names: "setupmethod"
  }
  attributes {
    name: "_got_registered_once"
    fully_qualified_name: "flask.blueprints.Blueprint._got_registered_once"
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
  attributes {
    name: "url_prefix"
    fully_qualified_name: "flask.blueprints.Blueprint.url_prefix"
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  attributes {
    name: "subdomain"
    fully_qualified_name: "flask.blueprints.Blueprint.subdomain"
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  attributes {
    name: "deferred_functions"
    fully_qualified_name: "flask.blueprints.Blueprint.deferred_functions"
    type_annotation {
      pretty_printed_name: "builtins.list[TypeAlias[CallableType[builtins.function]]]"
      args {
        pretty_printed_name: "TypeAlias[CallableType[builtins.function]]"
        kind: TYPE_ALIAS
        args {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
        fully_qualified_name: "flask.blueprints.DeferredSetupFunction"
      }
      fully_qualified_name: "builtins.list"
    }
  }
  attributes {
    name: "url_values_defaults"
    fully_qualified_name: "flask.blueprints.Blueprint.url_values_defaults"
    type_annotation {
      pretty_printed_name: "builtins.dict[Any,Any]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "builtins.dict"
    }
  }
  attributes {
    name: "cli_group"
    fully_qualified_name: "flask.blueprints.Blueprint.cli_group"
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  attributes {
    name: "_blueprints"
    fully_qualified_name: "flask.blueprints.Blueprint._blueprints"
    type_annotation {
      pretty_printed_name: "builtins.list[Tuple[flask.blueprints.Blueprint,builtins.dict[Any,Any]]]"
      args {
        pretty_printed_name: "Tuple[flask.blueprints.Blueprint,builtins.dict[Any,Any]]"
        kind: TUPLE
        args {
          pretty_printed_name: "flask.blueprints.Blueprint"
          fully_qualified_name: "flask.blueprints.Blueprint"
        }
        args {
          pretty_printed_name: "builtins.dict[Any,Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "builtins.dict"
        }
      }
      fully_qualified_name: "builtins.list"
    }
  }
}
classes {
  name: "Config"
  fully_qualified_name: "flask.config.Config"
  super_classes: "builtins.dict"
  methods {
    name: "__init__"
    fully_qualified_name: "flask.config.Config.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.config.Config"
        fully_qualified_name: "flask.config.Config"
      }
    }
    parameters {
      name: "root_path"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "defaults"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.dict[Any,Any],None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.dict[Any,Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "builtins.dict"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
  }
  methods {
    name: "from_envvar"
    fully_qualified_name: "flask.config.Config.from_envvar"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.config.Config"
        fully_qualified_name: "flask.config.Config"
      }
    }
    parameters {
      name: "variable_name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "silent"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
  }
  methods {
    name: "from_prefixed_env"
    fully_qualified_name: "flask.config.Config.from_prefixed_env"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.config.Config"
        fully_qualified_name: "flask.config.Config"
      }
    }
    parameters {
      name: "prefix"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "loads"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
  }
  methods {
    name: "from_pyfile"
    fully_qualified_name: "flask.config.Config.from_pyfile"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.config.Config"
        fully_qualified_name: "flask.config.Config"
      }
    }
    parameters {
      name: "filename"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "silent"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
  }
  methods {
    name: "from_object"
    fully_qualified_name: "flask.config.Config.from_object"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.config.Config"
        fully_qualified_name: "flask.config.Config"
      }
    }
    parameters {
      name: "obj"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.object,builtins.str]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.object"
          fully_qualified_name: "builtins.object"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
    }
  }
  methods {
    name: "from_file"
    fully_qualified_name: "flask.config.Config.from_file"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.config.Config"
        fully_qualified_name: "flask.config.Config"
      }
    }
    parameters {
      name: "filename"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "load"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    parameters {
      name: "silent"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    parameters {
      name: "text"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
  }
  methods {
    name: "from_mapping"
    fully_qualified_name: "flask.config.Config.from_mapping"
    return_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.config.Config"
        fully_qualified_name: "flask.config.Config"
      }
    }
    parameters {
      name: "mapping"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[typing.Mapping[builtins.str,Any],None]"
        kind: UNION
        args {
          pretty_printed_name: "typing.Mapping[builtins.str,Any]"
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          fully_qualified_name: "typing.Mapping"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "kwargs"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
  }
  methods {
    name: "get_namespace"
    fully_qualified_name: "flask.config.Config.get_namespace"
    return_annotation {
      pretty_printed_name: "builtins.dict[builtins.str,Any]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      fully_qualified_name: "builtins.dict"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.config.Config"
        fully_qualified_name: "flask.config.Config"
      }
    }
    parameters {
      name: "namespace"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    parameters {
      name: "lowercase"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
    parameters {
      name: "trim_namespace"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
    }
  }
  methods {
    name: "__repr__"
    fully_qualified_name: "flask.config.Config.__repr__"
    return_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    parameters {
      name: "__"
      type_annotation {
        pretty_printed_name: "flask.config.Config"
        fully_qualified_name: "flask.config.Config"
      }
    }
  }
  attributes {
    name: "root_path"
    fully_qualified_name: "flask.config.Config.root_path"
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
}
functions {
  name: "after_this_request"
  fully_qualified_name: "flask.ctx.after_this_request"
  return_annotation {
    pretty_printed_name: "TypeAlias[Union[CallableType[builtins.function],CallableType[builtins.function]]]"
    kind: TYPE_ALIAS
    args {
      pretty_printed_name: "Union[CallableType[builtins.function],CallableType[builtins.function]]"
      kind: UNION
      args {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
      args {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    fully_qualified_name: "flask.typing.AfterRequestCallable"
  }
  parameters {
    name: "f"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "TypeAlias[Union[CallableType[builtins.function],CallableType[builtins.function]]]"
      kind: TYPE_ALIAS
      args {
        pretty_printed_name: "Union[CallableType[builtins.function],CallableType[builtins.function]]"
        kind: UNION
        args {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
        args {
          pretty_printed_name: "CallableType[builtins.function]"
          kind: CALLABLE
          args {
            pretty_printed_name: "builtins.function"
            fully_qualified_name: "builtins.function"
          }
        }
      }
      fully_qualified_name: "flask.typing.AfterRequestCallable"
    }
  }
}
functions {
  name: "copy_current_request_context"
  fully_qualified_name: "flask.ctx.copy_current_request_context"
  return_annotation {
    pretty_printed_name: "CallableType[builtins.function]"
    kind: CALLABLE
    args {
      pretty_printed_name: "builtins.function"
      fully_qualified_name: "builtins.function"
    }
  }
  parameters {
    name: "f"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "CallableType[builtins.function]"
      kind: CALLABLE
      args {
        pretty_printed_name: "builtins.function"
        fully_qualified_name: "builtins.function"
      }
    }
  }
}
functions {
  name: "has_app_context"
  fully_qualified_name: "flask.ctx.has_app_context"
  return_annotation {
    pretty_printed_name: "builtins.bool"
    fully_qualified_name: "builtins.bool"
  }
}
functions {
  name: "has_request_context"
  fully_qualified_name: "flask.ctx.has_request_context"
  return_annotation {
    pretty_printed_name: "builtins.bool"
    fully_qualified_name: "builtins.bool"
  }
}
functions {
  name: "abort"
  fully_qualified_name: "flask.helpers.abort"
  return_annotation {
    pretty_printed_name: "NoReturn"
    kind: UNINHABITED
  }
  parameters {
    name: "code"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.int,werkzeug.wrappers.response.Response]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "werkzeug.wrappers.response.Response"
        fully_qualified_name: "werkzeug.wrappers.response.Response"
      }
    }
  }
  parameters {
    name: "args"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  parameters {
    name: "kwargs"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
}
functions {
  name: "flash"
  fully_qualified_name: "flask.helpers.flash"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "message"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  parameters {
    name: "category"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
}
functions {
  name: "get_flashed_messages"
  fully_qualified_name: "flask.helpers.get_flashed_messages"
  return_annotation {
    pretty_printed_name: "Union[builtins.list[builtins.str],builtins.list[Tuple[builtins.str,builtins.str]]]"
    kind: UNION
    args {
      pretty_printed_name: "builtins.list[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "builtins.list"
    }
    args {
      pretty_printed_name: "builtins.list[Tuple[builtins.str,builtins.str]]"
      args {
        pretty_printed_name: "Tuple[builtins.str,builtins.str]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      fully_qualified_name: "builtins.list"
    }
  }
  parameters {
    name: "with_categories"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
  parameters {
    name: "category_filter"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "typing.Iterable[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "typing.Iterable"
    }
  }
}
functions {
  name: "get_template_attribute"
  fully_qualified_name: "flask.helpers.get_template_attribute"
  return_annotation {
    pretty_printed_name: "Any"
    kind: ANY
  }
  parameters {
    name: "template_name"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  parameters {
    name: "attribute"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
}
functions {
  name: "make_response"
  fully_qualified_name: "flask.helpers.make_response"
  return_annotation {
    pretty_printed_name: "flask.wrappers.Response"
    fully_qualified_name: "flask.wrappers.Response"
  }
  parameters {
    name: "args"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
}
functions {
  name: "redirect"
  fully_qualified_name: "flask.helpers.redirect"
  return_annotation {
    pretty_printed_name: "werkzeug.wrappers.response.Response"
    fully_qualified_name: "werkzeug.wrappers.response.Response"
  }
  parameters {
    name: "location"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  parameters {
    name: "code"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
  }
  parameters {
    name: "Response"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Type[werkzeug.wrappers.response.Response],None]"
      kind: UNION
      args {
        pretty_printed_name: "Type[werkzeug.wrappers.response.Response]"
        kind: TYPE
        args {
          pretty_printed_name: "werkzeug.wrappers.response.Response"
          fully_qualified_name: "werkzeug.wrappers.response.Response"
        }
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
}
functions {
  name: "send_file"
  fully_qualified_name: "flask.helpers.send_file"
  return_annotation {
    pretty_printed_name: "flask.wrappers.Response"
    fully_qualified_name: "flask.wrappers.Response"
  }
  parameters {
    name: "path_or_file"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[os.PathLike[Any],builtins.str,typing.BinaryIO]"
      kind: UNION
      args {
        pretty_printed_name: "os.PathLike[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "os.PathLike"
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "typing.BinaryIO"
        fully_qualified_name: "typing.BinaryIO"
      }
    }
  }
  parameters {
    name: "mimetype"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  parameters {
    name: "as_attachment"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
  parameters {
    name: "download_name"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  parameters {
    name: "conditional"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
  }
  parameters {
    name: "etag"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.bool,builtins.str]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  parameters {
    name: "last_modified"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[datetime.datetime,builtins.int,builtins.float,None]"
      kind: UNION
      args {
        pretty_printed_name: "datetime.datetime"
        fully_qualified_name: "datetime.datetime"
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  parameters {
    name: "max_age"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[None,builtins.int,CallableType[builtins.function]]"
      kind: UNION
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
  }
}
functions {
  name: "send_from_directory"
  fully_qualified_name: "flask.helpers.send_from_directory"
  return_annotation {
    pretty_printed_name: "flask.wrappers.Response"
    fully_qualified_name: "flask.wrappers.Response"
  }
  parameters {
    name: "directory"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[os.PathLike[Any],builtins.str]"
      kind: UNION
      args {
        pretty_printed_name: "os.PathLike[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "os.PathLike"
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  parameters {
    name: "path"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[os.PathLike[Any],builtins.str]"
      kind: UNION
      args {
        pretty_printed_name: "os.PathLike[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "os.PathLike"
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  parameters {
    name: "kwargs"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
}
functions {
  name: "stream_with_context"
  fully_qualified_name: "flask.helpers.stream_with_context"
  return_annotation {
    pretty_printed_name: "typing.Iterator[typing.AnyStr]"
    args {
      pretty_printed_name: "typing.AnyStr"
      kind: TYPE_VAR
    }
    fully_qualified_name: "typing.Iterator"
  }
  parameters {
    name: "generator_or_function"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[typing.Iterator[typing.AnyStr],CallableType[builtins.function]]"
      kind: UNION
      args {
        pretty_printed_name: "typing.Iterator[typing.AnyStr]"
        args {
          pretty_printed_name: "typing.AnyStr"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterator"
      }
      args {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
  }
}
functions {
  name: "url_for"
  fully_qualified_name: "flask.helpers.url_for"
  return_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
  parameters {
    name: "endpoint"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  parameters {
    name: "_anchor"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  parameters {
    name: "_method"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  parameters {
    name: "_scheme"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  parameters {
    name: "_external"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.bool,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  parameters {
    name: "values"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
}
functions {
  name: "jsonify"
  fully_qualified_name: "flask.json.jsonify"
  return_annotation {
    pretty_printed_name: "flask.wrappers.Response"
    fully_qualified_name: "flask.wrappers.Response"
  }
  parameters {
    name: "args"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  parameters {
    name: "kwargs"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
}
functions {
  name: "render_template"
  fully_qualified_name: "flask.templating.render_template"
  return_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
  parameters {
    name: "template_name_or_list"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,jinja2.environment.Template,builtins.list[Union[builtins.str,jinja2.environment.Template]]]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "jinja2.environment.Template"
        fully_qualified_name: "jinja2.environment.Template"
      }
      args {
        pretty_printed_name: "builtins.list[Union[builtins.str,jinja2.environment.Template]]"
        args {
          pretty_printed_name: "Union[builtins.str,jinja2.environment.Template]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "jinja2.environment.Template"
            fully_qualified_name: "jinja2.environment.Template"
          }
        }
        fully_qualified_name: "builtins.list"
      }
    }
  }
  parameters {
    name: "context"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
}
functions {
  name: "render_template_string"
  fully_qualified_name: "flask.templating.render_template_string"
  return_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
  parameters {
    name: "source"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  parameters {
    name: "context"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
}
functions {
  name: "stream_template"
  fully_qualified_name: "flask.templating.stream_template"
  return_annotation {
    pretty_printed_name: "typing.Iterator[builtins.str]"
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    fully_qualified_name: "typing.Iterator"
  }
  parameters {
    name: "template_name_or_list"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,jinja2.environment.Template,builtins.list[Union[builtins.str,jinja2.environment.Template]]]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "jinja2.environment.Template"
        fully_qualified_name: "jinja2.environment.Template"
      }
      args {
        pretty_printed_name: "builtins.list[Union[builtins.str,jinja2.environment.Template]]"
        args {
          pretty_printed_name: "Union[builtins.str,jinja2.environment.Template]"
          kind: UNION
          args {
            pretty_printed_name: "builtins.str"
            fully_qualified_name: "builtins.str"
          }
          args {
            pretty_printed_name: "jinja2.environment.Template"
            fully_qualified_name: "jinja2.environment.Template"
          }
        }
        fully_qualified_name: "builtins.list"
      }
    }
  }
  parameters {
    name: "context"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
}
functions {
  name: "stream_template_string"
  fully_qualified_name: "flask.templating.stream_template_string"
  return_annotation {
    pretty_printed_name: "typing.Iterator[builtins.str]"
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    fully_qualified_name: "typing.Iterator"
  }
  parameters {
    name: "source"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  parameters {
    name: "context"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
}
functions {
  name: "__getattr__"
  fully_qualified_name: "flask.__getattr__"
  parameters {
    name: "__"
  }
}
vars {
  name: "__path__"
  fully_qualified_name: "flask.__path__"
  type_annotation {
    pretty_printed_name: "builtins.list[builtins.str]"
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    fully_qualified_name: "builtins.list"
  }
}
vars {
  name: "__annotations__"
  fully_qualified_name: "flask.__annotations__"
  type_annotation {
    pretty_printed_name: "builtins.dict[builtins.str,Any]"
    args {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    args {
      pretty_printed_name: "Any"
      kind: ANY
    }
    fully_qualified_name: "builtins.dict"
  }
}
vars {
  name: "json"
  fully_qualified_name: "flask.json"
  is_imported_module: true
}
vars {
  name: "current_app"
  fully_qualified_name: "flask.globals.current_app"
  type_annotation {
    pretty_printed_name: "flask.app.Flask"
    fully_qualified_name: "flask.app.Flask"
  }
}
vars {
  name: "g"
  fully_qualified_name: "flask.globals.g"
  type_annotation {
    pretty_printed_name: "flask.ctx._AppCtxGlobals"
    fully_qualified_name: "flask.ctx._AppCtxGlobals"
  }
}
vars {
  name: "request"
  fully_qualified_name: "flask.globals.request"
  type_annotation {
    pretty_printed_name: "flask.wrappers.Request"
    fully_qualified_name: "flask.wrappers.Request"
  }
}
vars {
  name: "session"
  fully_qualified_name: "flask.globals.session"
  type_annotation {
    pretty_printed_name: "flask.sessions.SessionMixin"
    fully_qualified_name: "flask.sessions.SessionMixin"
  }
}
vars {
  name: "appcontext_popped"
  fully_qualified_name: "flask.signals.appcontext_popped"
  type_annotation {
    pretty_printed_name: "blinker.base.NamedSignal"
    fully_qualified_name: "blinker.base.NamedSignal"
  }
}
vars {
  name: "appcontext_pushed"
  fully_qualified_name: "flask.signals.appcontext_pushed"
  type_annotation {
    pretty_printed_name: "blinker.base.NamedSignal"
    fully_qualified_name: "blinker.base.NamedSignal"
  }
}
vars {
  name: "appcontext_tearing_down"
  fully_qualified_name: "flask.signals.appcontext_tearing_down"
  type_annotation {
    pretty_printed_name: "blinker.base.NamedSignal"
    fully_qualified_name: "blinker.base.NamedSignal"
  }
}
vars {
  name: "before_render_template"
  fully_qualified_name: "flask.signals.before_render_template"
  type_annotation {
    pretty_printed_name: "blinker.base.NamedSignal"
    fully_qualified_name: "blinker.base.NamedSignal"
  }
}
vars {
  name: "got_request_exception"
  fully_qualified_name: "flask.signals.got_request_exception"
  type_annotation {
    pretty_printed_name: "blinker.base.NamedSignal"
    fully_qualified_name: "blinker.base.NamedSignal"
  }
}
vars {
  name: "message_flashed"
  fully_qualified_name: "flask.signals.message_flashed"
  type_annotation {
    pretty_printed_name: "blinker.base.NamedSignal"
    fully_qualified_name: "blinker.base.NamedSignal"
  }
}
vars {
  name: "request_finished"
  fully_qualified_name: "flask.signals.request_finished"
  type_annotation {
    pretty_printed_name: "blinker.base.NamedSignal"
    fully_qualified_name: "blinker.base.NamedSignal"
  }
}
vars {
  name: "request_started"
  fully_qualified_name: "flask.signals.request_started"
  type_annotation {
    pretty_printed_name: "blinker.base.NamedSignal"
    fully_qualified_name: "blinker.base.NamedSignal"
  }
}
vars {
  name: "request_tearing_down"
  fully_qualified_name: "flask.signals.request_tearing_down"
  type_annotation {
    pretty_printed_name: "blinker.base.NamedSignal"
    fully_qualified_name: "blinker.base.NamedSignal"
  }
}
vars {
  name: "template_rendered"
  fully_qualified_name: "flask.signals.template_rendered"
  type_annotation {
    pretty_printed_name: "blinker.base.NamedSignal"
    fully_qualified_name: "blinker.base.NamedSignal"
  }
}
vars {
  name: "__version__"
  fully_qualified_name: "flask.__version__"
  type_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
}
