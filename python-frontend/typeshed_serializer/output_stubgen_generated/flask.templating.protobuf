fully_qualified_name: "flask.templating"
classes {
  name: "DispatchingJinjaLoader"
  fully_qualified_name: "flask.templating.DispatchingJinjaLoader"
  methods {
    name: "__init__"
    fully_qualified_name: "flask.templating.DispatchingJinjaLoader.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "app"
      kind: POSITIONAL_OR_KEYWORD
    }
  }
  methods {
    name: "_get_source_explained"
    fully_qualified_name: "flask.templating.DispatchingJinjaLoader._get_source_explained"
    return_annotation {
      pretty_printed_name: "Tuple[Union[None],Union[CallableType[None],None]]"
      kind: TUPLE
      args {
        pretty_printed_name: "__"
      }
      args {
        pretty_printed_name: "Union[None]"
        kind: UNION
        args {
          pretty_printed_name: "__"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      args {
        pretty_printed_name: "Union[CallableType[None],None]"
        kind: UNION
        args {
          pretty_printed_name: "CallableType[None]"
          kind: CALLABLE
          args {
            pretty_printed_name: "__"
          }
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "environment"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "template"
      kind: POSITIONAL_OR_KEYWORD
    }
  }
  methods {
    name: "_get_source_fast"
    fully_qualified_name: "flask.templating.DispatchingJinjaLoader._get_source_fast"
    return_annotation {
      pretty_printed_name: "Tuple[Union[None],Union[CallableType[None],None]]"
      kind: TUPLE
      args {
        pretty_printed_name: "__"
      }
      args {
        pretty_printed_name: "Union[None]"
        kind: UNION
        args {
          pretty_printed_name: "__"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      args {
        pretty_printed_name: "Union[CallableType[None],None]"
        kind: UNION
        args {
          pretty_printed_name: "CallableType[None]"
          kind: CALLABLE
          args {
            pretty_printed_name: "__"
          }
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "environment"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "template"
      kind: POSITIONAL_OR_KEYWORD
    }
  }
  methods {
    name: "_iter_loaders"
    fully_qualified_name: "flask.templating.DispatchingJinjaLoader._iter_loaders"
    return_annotation {
      pretty_printed_name: "None[Tuple[],None,None]"
      args {
        pretty_printed_name: "Tuple[]"
        kind: TUPLE
        args {
          pretty_printed_name: "__"
        }
        args {
          pretty_printed_name: "__"
        }
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "template"
      kind: POSITIONAL_OR_KEYWORD
    }
  }
  methods {
    name: "get_source"
    fully_qualified_name: "flask.templating.DispatchingJinjaLoader.get_source"
    return_annotation {
      pretty_printed_name: "Tuple[Union[None],Union[CallableType[None],None]]"
      kind: TUPLE
      args {
        pretty_printed_name: "__"
      }
      args {
        pretty_printed_name: "Union[None]"
        kind: UNION
        args {
          pretty_printed_name: "__"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      args {
        pretty_printed_name: "Union[CallableType[None],None]"
        kind: UNION
        args {
          pretty_printed_name: "CallableType[None]"
          kind: CALLABLE
          args {
            pretty_printed_name: "__"
          }
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "environment"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "template"
      kind: POSITIONAL_OR_KEYWORD
    }
  }
  methods {
    name: "list_templates"
    fully_qualified_name: "flask.templating.DispatchingJinjaLoader.list_templates"
    return_annotation {
      pretty_printed_name: "None"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
  }
  attributes {
    name: "app"
    fully_qualified_name: "flask.templating.DispatchingJinjaLoader.app"
    type_annotation {
      pretty_printed_name: "__"
    }
  }
}
classes {
  name: "Environment"
  fully_qualified_name: "flask.templating.Environment"
  methods {
    name: "__init__"
    fully_qualified_name: "flask.templating.Environment.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "app"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "options"
      kind: VAR_KEYWORD
    }
  }
  attributes {
    name: "app"
    fully_qualified_name: "flask.templating.Environment.app"
    type_annotation {
      pretty_printed_name: "__"
    }
  }
}
functions {
  name: "_default_template_ctx_processor"
  fully_qualified_name: "flask.templating._default_template_ctx_processor"
  return_annotation {
    pretty_printed_name: "None[Any]"
    args {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
}
functions {
  name: "_render"
  fully_qualified_name: "flask.templating._render"
  return_annotation {
    pretty_printed_name: "__"
  }
  parameters {
    name: "app"
    kind: POSITIONAL_OR_KEYWORD
  }
  parameters {
    name: "template"
    kind: POSITIONAL_OR_KEYWORD
  }
  parameters {
    name: "context"
    kind: POSITIONAL_OR_KEYWORD
  }
}
functions {
  name: "_stream"
  fully_qualified_name: "flask.templating._stream"
  return_annotation {
    pretty_printed_name: "None"
  }
  parameters {
    name: "app"
    kind: POSITIONAL_OR_KEYWORD
  }
  parameters {
    name: "template"
    kind: POSITIONAL_OR_KEYWORD
  }
  parameters {
    name: "context"
    kind: POSITIONAL_OR_KEYWORD
  }
}
functions {
  name: "render_template"
  fully_qualified_name: "flask.templating.render_template"
  return_annotation {
    pretty_printed_name: "__"
  }
  parameters {
    name: "template_name_or_list"
    kind: POSITIONAL_OR_KEYWORD
  }
  parameters {
    name: "context"
    kind: VAR_KEYWORD
  }
}
functions {
  name: "render_template_string"
  fully_qualified_name: "flask.templating.render_template_string"
  return_annotation {
    pretty_printed_name: "__"
  }
  parameters {
    name: "source"
    kind: POSITIONAL_OR_KEYWORD
  }
  parameters {
    name: "context"
    kind: VAR_KEYWORD
  }
}
functions {
  name: "stream_template"
  fully_qualified_name: "flask.templating.stream_template"
  return_annotation {
    pretty_printed_name: "None"
  }
  parameters {
    name: "template_name_or_list"
    kind: POSITIONAL_OR_KEYWORD
  }
  parameters {
    name: "context"
    kind: VAR_KEYWORD
  }
}
functions {
  name: "stream_template_string"
  fully_qualified_name: "flask.templating.stream_template_string"
  return_annotation {
    pretty_printed_name: "None"
  }
  parameters {
    name: "source"
    kind: POSITIONAL_OR_KEYWORD
  }
  parameters {
    name: "context"
    kind: VAR_KEYWORD
  }
}
