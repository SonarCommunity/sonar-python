fully_qualified_name: "flask.debughelpers"
classes {
  name: "DebugFilesKeyError"
  fully_qualified_name: "flask.debughelpers.DebugFilesKeyError"
  methods {
    name: "__init__"
    fully_qualified_name: "flask.debughelpers.DebugFilesKeyError.__init__"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "request"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
    }
  }
  methods {
    name: "__str__"
    fully_qualified_name: "flask.debughelpers.DebugFilesKeyError.__str__"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
  }
  attributes {
    name: "msg"
    fully_qualified_name: "flask.debughelpers.DebugFilesKeyError.msg"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
}
classes {
  name: "FormDataRoutingRedirect"
  fully_qualified_name: "flask.debughelpers.FormDataRoutingRedirect"
  methods {
    name: "__init__"
    fully_qualified_name: "flask.debughelpers.FormDataRoutingRedirect.__init__"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "request"
      kind: POSITIONAL_OR_KEYWORD
    }
  }
}
classes {
  name: "UnexpectedUnicodeError"
  fully_qualified_name: "flask.debughelpers.UnexpectedUnicodeError"
}
classes {
  name: "newcls@82"
  fully_qualified_name: "flask.debughelpers.newcls@82"
  methods {
    name: "__getitem__"
    fully_qualified_name: "flask.debughelpers.newcls@82.__getitem__"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "key"
      kind: POSITIONAL_OR_KEYWORD
    }
  }
}
functions {
  name: "_dump_loader_info"
  fully_qualified_name: "flask.debughelpers._dump_loader_info"
  return_annotation {
    pretty_printed_name: "None[Any,Any,Any]"
    args {
      pretty_printed_name: "Any"
      kind: ANY
    }
    args {
      pretty_printed_name: "Any"
      kind: ANY
    }
    args {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  parameters {
    name: "loader"
    kind: POSITIONAL_OR_KEYWORD
  }
}
functions {
  name: "attach_enctype_error_multidict"
  fully_qualified_name: "flask.debughelpers.attach_enctype_error_multidict"
  parameters {
    name: "request"
    kind: POSITIONAL_OR_KEYWORD
  }
}
functions {
  name: "explain_template_loading_attempts"
  fully_qualified_name: "flask.debughelpers.explain_template_loading_attempts"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "app"
    kind: POSITIONAL_OR_KEYWORD
  }
  parameters {
    name: "template"
    kind: POSITIONAL_OR_KEYWORD
  }
  parameters {
    name: "attempts"
    kind: POSITIONAL_OR_KEYWORD
  }
}
