fully_qualified_name: "flask.blueprints"
classes {
  name: "Blueprint"
  fully_qualified_name: "flask.blueprints.Blueprint"
  methods {
    name: "__init__"
    fully_qualified_name: "flask.blueprints.Blueprint.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "import_name"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "static_folder"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
    parameters {
      name: "static_url_path"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
    parameters {
      name: "template_folder"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
    parameters {
      name: "url_prefix"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
    parameters {
      name: "subdomain"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
    parameters {
      name: "url_defaults"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
    parameters {
      name: "root_path"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
    parameters {
      name: "cli_group"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
  }
  methods {
    name: "_check_setup_finished"
    fully_qualified_name: "flask.blueprints.Blueprint._check_setup_finished"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "f_name"
      kind: POSITIONAL_OR_KEYWORD
    }
  }
  methods {
    name: "add_app_template_filter"
    fully_qualified_name: "flask.blueprints.Blueprint.add_app_template_filter"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "f"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
    has_decorators: true
  }
  methods {
    name: "add_app_template_global"
    fully_qualified_name: "flask.blueprints.Blueprint.add_app_template_global"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "f"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
    has_decorators: true
  }
  methods {
    name: "add_app_template_test"
    fully_qualified_name: "flask.blueprints.Blueprint.add_app_template_test"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "f"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
    has_decorators: true
  }
  methods {
    name: "add_url_rule"
    fully_qualified_name: "flask.blueprints.Blueprint.add_url_rule"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "rule"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "endpoint"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
    parameters {
      name: "view_func"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
    parameters {
      name: "provide_automatic_options"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
    parameters {
      name: "options"
      kind: VAR_KEYWORD
    }
    has_decorators: true
  }
  methods {
    name: "after_app_request"
    fully_qualified_name: "flask.blueprints.Blueprint.after_app_request"
    return_annotation {
      pretty_printed_name: "flask.blueprints.T_after_request"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "f"
      kind: POSITIONAL_OR_KEYWORD
    }
    has_decorators: true
  }
  methods {
    name: "app_context_processor"
    fully_qualified_name: "flask.blueprints.Blueprint.app_context_processor"
    return_annotation {
      pretty_printed_name: "flask.blueprints.T_template_context_processor"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "f"
      kind: POSITIONAL_OR_KEYWORD
    }
    has_decorators: true
  }
  methods {
    name: "app_errorhandler"
    fully_qualified_name: "flask.blueprints.Blueprint.app_errorhandler"
    return_annotation {
      pretty_printed_name: "CallableType[None]"
      kind: CALLABLE
      args {
        pretty_printed_name: "__"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "code"
      kind: POSITIONAL_OR_KEYWORD
    }
    has_decorators: true
  }
  methods {
    name: "app_template_filter"
    fully_qualified_name: "flask.blueprints.Blueprint.app_template_filter"
    return_annotation {
      pretty_printed_name: "CallableType[None]"
      kind: CALLABLE
      args {
        pretty_printed_name: "__"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
    has_decorators: true
  }
  methods {
    name: "app_template_global"
    fully_qualified_name: "flask.blueprints.Blueprint.app_template_global"
    return_annotation {
      pretty_printed_name: "CallableType[None]"
      kind: CALLABLE
      args {
        pretty_printed_name: "__"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
    has_decorators: true
  }
  methods {
    name: "app_template_test"
    fully_qualified_name: "flask.blueprints.Blueprint.app_template_test"
    return_annotation {
      pretty_printed_name: "CallableType[None]"
      kind: CALLABLE
      args {
        pretty_printed_name: "__"
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
    has_decorators: true
  }
  methods {
    name: "app_url_defaults"
    fully_qualified_name: "flask.blueprints.Blueprint.app_url_defaults"
    return_annotation {
      pretty_printed_name: "flask.blueprints.T_url_defaults"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "f"
      kind: POSITIONAL_OR_KEYWORD
    }
    has_decorators: true
  }
  methods {
    name: "app_url_value_preprocessor"
    fully_qualified_name: "flask.blueprints.Blueprint.app_url_value_preprocessor"
    return_annotation {
      pretty_printed_name: "flask.blueprints.T_url_value_preprocessor"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "f"
      kind: POSITIONAL_OR_KEYWORD
    }
    has_decorators: true
  }
  methods {
    name: "before_app_request"
    fully_qualified_name: "flask.blueprints.Blueprint.before_app_request"
    return_annotation {
      pretty_printed_name: "flask.blueprints.T_before_request"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "f"
      kind: POSITIONAL_OR_KEYWORD
    }
    has_decorators: true
  }
  methods {
    name: "make_setup_state"
    fully_qualified_name: "flask.blueprints.Blueprint.make_setup_state"
    return_annotation {
      pretty_printed_name: "__"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "app"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "options"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "first_registration"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
  }
  methods {
    name: "record"
    fully_qualified_name: "flask.blueprints.Blueprint.record"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "func"
      kind: POSITIONAL_OR_KEYWORD
    }
    has_decorators: true
  }
  methods {
    name: "record_once"
    fully_qualified_name: "flask.blueprints.Blueprint.record_once"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "func"
      kind: POSITIONAL_OR_KEYWORD
    }
    has_decorators: true
  }
  methods {
    name: "register"
    fully_qualified_name: "flask.blueprints.Blueprint.register"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "app"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "options"
      kind: POSITIONAL_OR_KEYWORD
    }
  }
  methods {
    name: "register_blueprint"
    fully_qualified_name: "flask.blueprints.Blueprint.register_blueprint"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "blueprint"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "options"
      kind: VAR_KEYWORD
    }
    has_decorators: true
  }
  methods {
    name: "teardown_app_request"
    fully_qualified_name: "flask.blueprints.Blueprint.teardown_app_request"
    return_annotation {
      pretty_printed_name: "flask.blueprints.T_teardown"
      kind: TYPE_VAR
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "f"
      kind: POSITIONAL_OR_KEYWORD
    }
    has_decorators: true
  }
  attributes {
    name: "_blueprints"
    fully_qualified_name: "flask.blueprints.Blueprint._blueprints"
    type_annotation {
      pretty_printed_name: "None[Tuple[None[Any,Any]]]"
      args {
        pretty_printed_name: "Tuple[None[Any,Any]]"
        kind: TUPLE
        args {
          pretty_printed_name: "__"
        }
        args {
          pretty_printed_name: "None[Any,Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
        }
      }
    }
  }
  attributes {
    name: "_got_registered_once"
    fully_qualified_name: "flask.blueprints.Blueprint._got_registered_once"
    type_annotation {
      pretty_printed_name: "__"
    }
  }
  attributes {
    name: "cli_group"
    fully_qualified_name: "flask.blueprints.Blueprint.cli_group"
    type_annotation {
      pretty_printed_name: "Union[None]"
      kind: UNION
      args {
        pretty_printed_name: "__"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  attributes {
    name: "deferred_functions"
    fully_qualified_name: "flask.blueprints.Blueprint.deferred_functions"
    type_annotation {
      pretty_printed_name: "None"
      args {
      }
    }
  }
  attributes {
    name: "subdomain"
    fully_qualified_name: "flask.blueprints.Blueprint.subdomain"
    type_annotation {
      pretty_printed_name: "Union[None]"
      kind: UNION
      args {
        pretty_printed_name: "__"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  attributes {
    name: "url_prefix"
    fully_qualified_name: "flask.blueprints.Blueprint.url_prefix"
    type_annotation {
      pretty_printed_name: "Union[None]"
      kind: UNION
      args {
        pretty_printed_name: "__"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  attributes {
    name: "url_values_defaults"
    fully_qualified_name: "flask.blueprints.Blueprint.url_values_defaults"
    type_annotation {
      pretty_printed_name: "None[Any,Any]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
  }
}
classes {
  name: "BlueprintSetupState"
  fully_qualified_name: "flask.blueprints.BlueprintSetupState"
  methods {
    name: "__init__"
    fully_qualified_name: "flask.blueprints.BlueprintSetupState.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "blueprint"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "app"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "options"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "first_registration"
      kind: POSITIONAL_OR_KEYWORD
    }
  }
  methods {
    name: "add_url_rule"
    fully_qualified_name: "flask.blueprints.BlueprintSetupState.add_url_rule"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "rule"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "endpoint"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
    parameters {
      name: "view_func"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
    parameters {
      name: "options"
      kind: VAR_KEYWORD
    }
  }
  attributes {
    name: "app"
    fully_qualified_name: "flask.blueprints.BlueprintSetupState.app"
    type_annotation {
      pretty_printed_name: "__"
    }
  }
  attributes {
    name: "blueprint"
    fully_qualified_name: "flask.blueprints.BlueprintSetupState.blueprint"
    type_annotation {
      pretty_printed_name: "__"
    }
  }
  attributes {
    name: "first_registration"
    fully_qualified_name: "flask.blueprints.BlueprintSetupState.first_registration"
    type_annotation {
      pretty_printed_name: "__"
    }
  }
  attributes {
    name: "name"
    fully_qualified_name: "flask.blueprints.BlueprintSetupState.name"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  attributes {
    name: "name_prefix"
    fully_qualified_name: "flask.blueprints.BlueprintSetupState.name_prefix"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  attributes {
    name: "options"
    fully_qualified_name: "flask.blueprints.BlueprintSetupState.options"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  attributes {
    name: "subdomain"
    fully_qualified_name: "flask.blueprints.BlueprintSetupState.subdomain"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  attributes {
    name: "url_defaults"
    fully_qualified_name: "flask.blueprints.BlueprintSetupState.url_defaults"
    type_annotation {
      pretty_printed_name: "None[Any,Any]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
  }
  attributes {
    name: "url_prefix"
    fully_qualified_name: "flask.blueprints.BlueprintSetupState.url_prefix"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
}
