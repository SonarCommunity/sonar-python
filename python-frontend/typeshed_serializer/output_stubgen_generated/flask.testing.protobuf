fully_qualified_name: "flask.testing"
classes {
  name: "EnvironBuilder"
  fully_qualified_name: "flask.testing.EnvironBuilder"
  methods {
    name: "__init__"
    fully_qualified_name: "flask.testing.EnvironBuilder.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "app"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "path"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
    parameters {
      name: "base_url"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
    parameters {
      name: "subdomain"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
    parameters {
      name: "url_scheme"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
    }
    parameters {
      name: "kwargs"
      kind: VAR_KEYWORD
    }
  }
  methods {
    name: "json_dumps"
    fully_qualified_name: "flask.testing.EnvironBuilder.json_dumps"
    return_annotation {
      pretty_printed_name: "__"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "obj"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "kwargs"
      kind: VAR_KEYWORD
    }
  }
  attributes {
    name: "app"
    fully_qualified_name: "flask.testing.EnvironBuilder.app"
    type_annotation {
      pretty_printed_name: "__"
    }
  }
}
classes {
  name: "FlaskCliRunner"
  fully_qualified_name: "flask.testing.FlaskCliRunner"
  methods {
    name: "__init__"
    fully_qualified_name: "flask.testing.FlaskCliRunner.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "app"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "kwargs"
      kind: VAR_KEYWORD
    }
  }
  methods {
    name: "invoke"
    fully_qualified_name: "flask.testing.FlaskCliRunner.invoke"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "cli"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
    parameters {
      name: "args"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
    parameters {
      name: "kwargs"
      kind: VAR_KEYWORD
    }
  }
  attributes {
    name: "app"
    fully_qualified_name: "flask.testing.FlaskCliRunner.app"
    type_annotation {
      pretty_printed_name: "__"
    }
  }
}
classes {
  name: "FlaskClient"
  fully_qualified_name: "flask.testing.FlaskClient"
  methods {
    name: "__enter__"
    fully_qualified_name: "flask.testing.FlaskClient.__enter__"
    return_annotation {
      pretty_printed_name: "__"
    }
    parameters {
      name: "self"
    }
  }
  methods {
    name: "__exit__"
    fully_qualified_name: "flask.testing.FlaskClient.__exit__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
    }
    parameters {
      name: "exc_type"
    }
    parameters {
      name: "exc_value"
    }
    parameters {
      name: "tb"
    }
  }
  methods {
    name: "__init__"
    fully_qualified_name: "flask.testing.FlaskClient.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
    }
    parameters {
      name: "kwargs"
      kind: VAR_KEYWORD
    }
  }
  methods {
    name: "_copy_environ"
    fully_qualified_name: "flask.testing.FlaskClient._copy_environ"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "other"
      kind: POSITIONAL_OR_KEYWORD
    }
  }
  methods {
    name: "_request_from_builder_args"
    fully_qualified_name: "flask.testing.FlaskClient._request_from_builder_args"
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "args"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "kwargs"
      kind: POSITIONAL_OR_KEYWORD
    }
  }
  methods {
    name: "open"
    fully_qualified_name: "flask.testing.FlaskClient.open"
    return_annotation {
      pretty_printed_name: "__"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
    }
    parameters {
      name: "buffered"
      kind: KEYWORD_ONLY
      has_default: true
    }
    parameters {
      name: "follow_redirects"
      kind: KEYWORD_ONLY
      has_default: true
    }
    parameters {
      name: "kwargs"
      kind: VAR_KEYWORD
    }
  }
  methods {
    name: "session_transaction"
    fully_qualified_name: "flask.testing.FlaskClient.session_transaction"
    return_annotation {
      pretty_printed_name: "None[None,None]"
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "args"
      kind: VAR_POSITIONAL
    }
    parameters {
      name: "kwargs"
      kind: VAR_KEYWORD
    }
    has_decorators: true
  }
  attributes {
    name: "_context_stack"
    fully_qualified_name: "flask.testing.FlaskClient._context_stack"
    type_annotation {
      pretty_printed_name: "__"
    }
  }
  attributes {
    name: "_new_contexts"
    fully_qualified_name: "flask.testing.FlaskClient._new_contexts"
    type_annotation {
      pretty_printed_name: "None"
    }
  }
  attributes {
    name: "application"
    fully_qualified_name: "flask.testing.FlaskClient.application"
    type_annotation {
      pretty_printed_name: "__"
    }
  }
  attributes {
    name: "environ_base"
    fully_qualified_name: "flask.testing.FlaskClient.environ_base"
    type_annotation {
      pretty_printed_name: "None"
    }
  }
  attributes {
    name: "preserve_context"
    fully_qualified_name: "flask.testing.FlaskClient.preserve_context"
    type_annotation {
      pretty_printed_name: "__"
    }
  }
}
