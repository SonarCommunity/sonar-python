fully_qualified_name: "flask.ctx"
classes {
  name: "AppContext"
  fully_qualified_name: "flask.ctx.AppContext"
  methods {
    name: "__enter__"
    fully_qualified_name: "flask.ctx.AppContext.__enter__"
    return_annotation {
      pretty_printed_name: "__"
    }
    parameters {
      name: "self"
    }
  }
  methods {
    name: "__exit__"
    fully_qualified_name: "flask.ctx.AppContext.__exit__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
    }
    parameters {
      name: "exc_type"
    }
    parameters {
      name: "exc_value"
    }
    parameters {
      name: "tb"
    }
  }
  methods {
    name: "__init__"
    fully_qualified_name: "flask.ctx.AppContext.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "app"
      kind: POSITIONAL_OR_KEYWORD
    }
  }
  methods {
    name: "pop"
    fully_qualified_name: "flask.ctx.AppContext.pop"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "exc"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
  }
  methods {
    name: "push"
    fully_qualified_name: "flask.ctx.AppContext.push"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
  }
  attributes {
    name: "_cv_tokens"
    fully_qualified_name: "flask.ctx.AppContext._cv_tokens"
    type_annotation {
      pretty_printed_name: "None"
    }
  }
  attributes {
    name: "app"
    fully_qualified_name: "flask.ctx.AppContext.app"
    type_annotation {
      pretty_printed_name: "__"
    }
  }
  attributes {
    name: "g"
    fully_qualified_name: "flask.ctx.AppContext.g"
    type_annotation {
      pretty_printed_name: "__"
    }
  }
  attributes {
    name: "url_adapter"
    fully_qualified_name: "flask.ctx.AppContext.url_adapter"
    type_annotation {
      pretty_printed_name: "Union[None]"
      kind: UNION
      args {
        pretty_printed_name: "__"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
}
classes {
  name: "RequestContext"
  fully_qualified_name: "flask.ctx.RequestContext"
  methods {
    name: "__enter__"
    fully_qualified_name: "flask.ctx.RequestContext.__enter__"
    return_annotation {
      pretty_printed_name: "__"
    }
    parameters {
      name: "self"
    }
  }
  methods {
    name: "__exit__"
    fully_qualified_name: "flask.ctx.RequestContext.__exit__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
    }
    parameters {
      name: "exc_type"
    }
    parameters {
      name: "exc_value"
    }
    parameters {
      name: "tb"
    }
  }
  methods {
    name: "__init__"
    fully_qualified_name: "flask.ctx.RequestContext.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "app"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "environ"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "request"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
    parameters {
      name: "session"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
  }
  methods {
    name: "__repr__"
    fully_qualified_name: "flask.ctx.RequestContext.__repr__"
    return_annotation {
      pretty_printed_name: "__"
    }
    parameters {
      name: "self"
    }
  }
  methods {
    name: "copy"
    fully_qualified_name: "flask.ctx.RequestContext.copy"
    return_annotation {
      pretty_printed_name: "__"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
  }
  methods {
    name: "match_request"
    fully_qualified_name: "flask.ctx.RequestContext.match_request"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
  }
  methods {
    name: "pop"
    fully_qualified_name: "flask.ctx.RequestContext.pop"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "exc"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
  }
  methods {
    name: "push"
    fully_qualified_name: "flask.ctx.RequestContext.push"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
  }
  attributes {
    name: "_after_request_functions"
    fully_qualified_name: "flask.ctx.RequestContext._after_request_functions"
    type_annotation {
      pretty_printed_name: "None"
      args {
      }
    }
  }
  attributes {
    name: "_cv_tokens"
    fully_qualified_name: "flask.ctx.RequestContext._cv_tokens"
    type_annotation {
      pretty_printed_name: "None[Tuple[None[Any],Union[None]]]"
      args {
        pretty_printed_name: "Tuple[None[Any],Union[None]]"
        kind: TUPLE
        args {
          pretty_printed_name: "None[Any]"
          args {
            pretty_printed_name: "Any"
            kind: ANY
          }
        }
        args {
          pretty_printed_name: "Union[None]"
          kind: UNION
          args {
            pretty_printed_name: "__"
          }
          args {
            pretty_printed_name: "None"
            kind: NONE
          }
        }
      }
    }
  }
  attributes {
    name: "app"
    fully_qualified_name: "flask.ctx.RequestContext.app"
    type_annotation {
      pretty_printed_name: "__"
    }
  }
  attributes {
    name: "flashes"
    fully_qualified_name: "flask.ctx.RequestContext.flashes"
    type_annotation {
      pretty_printed_name: "Union[None[Tuple[]],None]"
      kind: UNION
      args {
        pretty_printed_name: "None[Tuple[]]"
        args {
          pretty_printed_name: "Tuple[]"
          kind: TUPLE
          args {
            pretty_printed_name: "__"
          }
          args {
            pretty_printed_name: "__"
          }
        }
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  attributes {
    name: "request"
    fully_qualified_name: "flask.ctx.RequestContext.request"
    type_annotation {
      pretty_printed_name: "__"
    }
  }
  attributes {
    name: "session"
    fully_qualified_name: "flask.ctx.RequestContext.session"
    type_annotation {
      pretty_printed_name: "Union[None]"
      kind: UNION
      args {
        pretty_printed_name: "__"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  attributes {
    name: "url_adapter"
    fully_qualified_name: "flask.ctx.RequestContext.url_adapter"
    type_annotation {
      pretty_printed_name: "Union[None]"
      kind: UNION
      args {
        pretty_printed_name: "__"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
}
classes {
  name: "_AppCtxGlobals"
  fully_qualified_name: "flask.ctx._AppCtxGlobals"
  methods {
    name: "__contains__"
    fully_qualified_name: "flask.ctx._AppCtxGlobals.__contains__"
    return_annotation {
      pretty_printed_name: "__"
    }
    parameters {
      name: "self"
    }
    parameters {
      name: "item"
    }
  }
  methods {
    name: "__delattr__"
    fully_qualified_name: "flask.ctx._AppCtxGlobals.__delattr__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
    }
    parameters {
      name: "name"
    }
  }
  methods {
    name: "__getattr__"
    fully_qualified_name: "flask.ctx._AppCtxGlobals.__getattr__"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
    }
    parameters {
      name: "name"
    }
  }
  methods {
    name: "__iter__"
    fully_qualified_name: "flask.ctx._AppCtxGlobals.__iter__"
    return_annotation {
      pretty_printed_name: "None"
    }
    parameters {
      name: "self"
    }
  }
  methods {
    name: "__repr__"
    fully_qualified_name: "flask.ctx._AppCtxGlobals.__repr__"
    return_annotation {
      pretty_printed_name: "__"
    }
    parameters {
      name: "self"
    }
  }
  methods {
    name: "__setattr__"
    fully_qualified_name: "flask.ctx._AppCtxGlobals.__setattr__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
    }
    parameters {
      name: "name"
    }
    parameters {
      name: "value"
    }
  }
  methods {
    name: "get"
    fully_qualified_name: "flask.ctx._AppCtxGlobals.get"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "default"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
  }
  methods {
    name: "pop"
    fully_qualified_name: "flask.ctx._AppCtxGlobals.pop"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "default"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
  }
  methods {
    name: "setdefault"
    fully_qualified_name: "flask.ctx._AppCtxGlobals.setdefault"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "default"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
  }
}
functions {
  name: "after_this_request"
  fully_qualified_name: "flask.ctx.after_this_request"
  return_annotation {
  }
  parameters {
    name: "f"
    kind: POSITIONAL_OR_KEYWORD
  }
}
functions {
  name: "copy_current_request_context"
  fully_qualified_name: "flask.ctx.copy_current_request_context"
  return_annotation {
    pretty_printed_name: "CallableType[None]"
    kind: CALLABLE
    args {
      pretty_printed_name: "__"
    }
  }
  parameters {
    name: "f"
    kind: POSITIONAL_OR_KEYWORD
  }
}
functions {
  name: "has_app_context"
  fully_qualified_name: "flask.ctx.has_app_context"
  return_annotation {
    pretty_printed_name: "__"
  }
}
functions {
  name: "has_request_context"
  fully_qualified_name: "flask.ctx.has_request_context"
  return_annotation {
    pretty_printed_name: "__"
  }
}
vars {
  name: "_sentinel"
  fully_qualified_name: "flask.ctx._sentinel"
  type_annotation {
    pretty_printed_name: "__"
  }
}
