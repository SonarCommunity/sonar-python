fully_qualified_name: "flask.helpers"
classes {
  name: "locked_cached_property"
  fully_qualified_name: "flask.helpers.locked_cached_property"
  super_classes: "builtins.object"
  methods {
    name: "__init__"
    fully_qualified_name: "flask.helpers.locked_cached_property.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.helpers.locked_cached_property"
        fully_qualified_name: "flask.helpers.locked_cached_property"
      }
    }
    parameters {
      name: "fget"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
    parameters {
      name: "doc"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Union[builtins.str,None]"
        kind: UNION
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "None"
          kind: NONE
        }
      }
      has_default: true
    }
  }
  methods {
    name: "__get__"
    fully_qualified_name: "flask.helpers.locked_cached_property.__get__"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.helpers.locked_cached_property"
        fully_qualified_name: "flask.helpers.locked_cached_property"
      }
    }
    parameters {
      name: "obj"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
    parameters {
      name: "type"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.type"
        fully_qualified_name: "builtins.type"
      }
      has_default: true
    }
  }
  methods {
    name: "__set__"
    fully_qualified_name: "flask.helpers.locked_cached_property.__set__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.helpers.locked_cached_property"
        fully_qualified_name: "flask.helpers.locked_cached_property"
      }
    }
    parameters {
      name: "obj"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
  }
  methods {
    name: "__delete__"
    fully_qualified_name: "flask.helpers.locked_cached_property.__delete__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "flask.helpers.locked_cached_property"
        fully_qualified_name: "flask.helpers.locked_cached_property"
      }
    }
    parameters {
      name: "obj"
      kind: POSITIONAL_OR_KEYWORD
      type_annotation {
        pretty_printed_name: "builtins.object"
        fully_qualified_name: "builtins.object"
      }
    }
  }
  attributes {
    name: "lock"
    fully_qualified_name: "flask.helpers.locked_cached_property.lock"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
}
functions {
  name: "get_env"
  fully_qualified_name: "flask.helpers.get_env"
  return_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
}
functions {
  name: "get_debug_flag"
  fully_qualified_name: "flask.helpers.get_debug_flag"
  return_annotation {
    pretty_printed_name: "builtins.bool"
    fully_qualified_name: "builtins.bool"
  }
}
functions {
  name: "get_load_dotenv"
  fully_qualified_name: "flask.helpers.get_load_dotenv"
  return_annotation {
    pretty_printed_name: "builtins.bool"
    fully_qualified_name: "builtins.bool"
  }
  parameters {
    name: "default"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    has_default: true
  }
}
functions {
  name: "stream_with_context"
  fully_qualified_name: "flask.helpers.stream_with_context"
  return_annotation {
    pretty_printed_name: "typing.Iterator[typing.AnyStr]"
    args {
      pretty_printed_name: "typing.AnyStr"
      kind: TYPE_VAR
    }
    fully_qualified_name: "typing.Iterator"
  }
  parameters {
    name: "generator_or_function"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[typing.Iterator[typing.AnyStr],CallableType[builtins.function]]"
      kind: UNION
      args {
        pretty_printed_name: "typing.Iterator[typing.AnyStr]"
        args {
          pretty_printed_name: "typing.AnyStr"
          kind: TYPE_VAR
        }
        fully_qualified_name: "typing.Iterator"
      }
      args {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
    }
  }
}
functions {
  name: "make_response"
  fully_qualified_name: "flask.helpers.make_response"
  return_annotation {
    pretty_printed_name: "flask.wrappers.Response"
    fully_qualified_name: "flask.wrappers.Response"
  }
  parameters {
    name: "args"
    kind: VAR_POSITIONAL
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
}
functions {
  name: "url_for"
  fully_qualified_name: "flask.helpers.url_for"
  return_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
  parameters {
    name: "endpoint"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  parameters {
    name: "_anchor"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "_method"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "_scheme"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "_external"
    kind: KEYWORD_ONLY
    type_annotation {
      pretty_printed_name: "Union[builtins.bool,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "values"
    kind: VAR_KEYWORD
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
}
functions {
  name: "redirect"
  fully_qualified_name: "flask.helpers.redirect"
  return_annotation {
    pretty_printed_name: "Any"
    kind: ANY
  }
  parameters {
    name: "location"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  parameters {
    name: "code"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.int"
      fully_qualified_name: "builtins.int"
    }
    has_default: true
  }
  parameters {
    name: "Response"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[Type[Any],None]"
      kind: UNION
      args {
        pretty_printed_name: "Type[Any]"
        kind: TYPE
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
}
functions {
  name: "abort"
  fully_qualified_name: "flask.helpers.abort"
  return_annotation {
    pretty_printed_name: "NoReturn"
    kind: UNINHABITED
  }
  parameters {
    name: "code"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.int,Any]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
  }
  parameters {
    name: "args"
    kind: VAR_POSITIONAL
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  parameters {
    name: "kwargs"
    kind: VAR_KEYWORD
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
}
functions {
  name: "get_template_attribute"
  fully_qualified_name: "flask.helpers.get_template_attribute"
  return_annotation {
    pretty_printed_name: "Any"
    kind: ANY
  }
  parameters {
    name: "template_name"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  parameters {
    name: "attribute"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
}
functions {
  name: "flash"
  fully_qualified_name: "flask.helpers.flash"
  return_annotation {
    pretty_printed_name: "None"
    kind: NONE
  }
  parameters {
    name: "message"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
  parameters {
    name: "category"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
    has_default: true
  }
}
functions {
  name: "get_flashed_messages"
  fully_qualified_name: "flask.helpers.get_flashed_messages"
  return_annotation {
    pretty_printed_name: "Union[builtins.list[builtins.str],builtins.list[Tuple[builtins.str,builtins.str]]]"
    kind: UNION
    args {
      pretty_printed_name: "builtins.list[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "builtins.list"
    }
    args {
      pretty_printed_name: "builtins.list[Tuple[builtins.str,builtins.str]]"
      args {
        pretty_printed_name: "Tuple[builtins.str,builtins.str]"
        kind: TUPLE
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
        args {
          pretty_printed_name: "builtins.str"
          fully_qualified_name: "builtins.str"
        }
      }
      fully_qualified_name: "builtins.list"
    }
  }
  parameters {
    name: "with_categories"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    has_default: true
  }
  parameters {
    name: "category_filter"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "typing.Iterable[builtins.str]"
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      fully_qualified_name: "typing.Iterable"
    }
    has_default: true
  }
}
functions {
  name: "send_file"
  fully_qualified_name: "flask.helpers.send_file"
  return_annotation {
    pretty_printed_name: "flask.wrappers.Response"
    fully_qualified_name: "flask.wrappers.Response"
  }
  parameters {
    name: "path_or_file"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[os.PathLike[Any],builtins.str,typing.BinaryIO]"
      kind: UNION
      args {
        pretty_printed_name: "os.PathLike[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "os.PathLike"
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "typing.BinaryIO"
        fully_qualified_name: "typing.BinaryIO"
      }
    }
  }
  parameters {
    name: "mimetype"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "as_attachment"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    has_default: true
  }
  parameters {
    name: "download_name"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.str,None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "conditional"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.bool"
      fully_qualified_name: "builtins.bool"
    }
    has_default: true
  }
  parameters {
    name: "etag"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.bool,builtins.str]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.bool"
        fully_qualified_name: "builtins.bool"
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
    has_default: true
  }
  parameters {
    name: "last_modified"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[datetime.datetime,builtins.int,builtins.float,None]"
      kind: UNION
      args {
        pretty_printed_name: "datetime.datetime"
        fully_qualified_name: "datetime.datetime"
      }
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "builtins.float"
        fully_qualified_name: "builtins.float"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
  parameters {
    name: "max_age"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[builtins.int,CallableType[builtins.function],None]"
      kind: UNION
      args {
        pretty_printed_name: "builtins.int"
        fully_qualified_name: "builtins.int"
      }
      args {
        pretty_printed_name: "CallableType[builtins.function]"
        kind: CALLABLE
        args {
          pretty_printed_name: "builtins.function"
          fully_qualified_name: "builtins.function"
        }
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    has_default: true
  }
}
functions {
  name: "send_from_directory"
  fully_qualified_name: "flask.helpers.send_from_directory"
  return_annotation {
    pretty_printed_name: "flask.wrappers.Response"
    fully_qualified_name: "flask.wrappers.Response"
  }
  parameters {
    name: "directory"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[os.PathLike[Any],builtins.str]"
      kind: UNION
      args {
        pretty_printed_name: "os.PathLike[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "os.PathLike"
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  parameters {
    name: "path"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "Union[os.PathLike[Any],builtins.str]"
      kind: UNION
      args {
        pretty_printed_name: "os.PathLike[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
        fully_qualified_name: "os.PathLike"
      }
      args {
        pretty_printed_name: "builtins.str"
        fully_qualified_name: "builtins.str"
      }
    }
  }
  parameters {
    name: "kwargs"
    kind: VAR_KEYWORD
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
}
functions {
  name: "get_root_path"
  fully_qualified_name: "flask.helpers.get_root_path"
  return_annotation {
    pretty_printed_name: "builtins.str"
    fully_qualified_name: "builtins.str"
  }
  parameters {
    name: "import_name"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
}
functions {
  name: "is_ip"
  fully_qualified_name: "flask.helpers.is_ip"
  return_annotation {
    pretty_printed_name: "builtins.bool"
    fully_qualified_name: "builtins.bool"
  }
  parameters {
    name: "value"
    kind: POSITIONAL_OR_KEYWORD
    type_annotation {
      pretty_printed_name: "builtins.str"
      fully_qualified_name: "builtins.str"
    }
  }
}
vars {
  name: "t"
  fully_qualified_name: "typing"
  is_imported_module: true
}
vars {
  name: "te"
  fully_qualified_name: "typing_extensions"
  is_imported_module: true
}
vars {
  name: "werkzeug"
  fully_qualified_name: "flask.helpers.werkzeug"
  type_annotation {
    pretty_printed_name: "Any"
    kind: ANY
  }
}
vars {
  name: "current_app"
  fully_qualified_name: "flask.globals.current_app"
  type_annotation {
    pretty_printed_name: "flask.app.Flask"
    fully_qualified_name: "flask.app.Flask"
  }
}
vars {
  name: "request"
  fully_qualified_name: "flask.globals.request"
  type_annotation {
    pretty_printed_name: "flask.wrappers.Request"
    fully_qualified_name: "flask.wrappers.Request"
  }
}
vars {
  name: "request_ctx"
  fully_qualified_name: "flask.globals.request_ctx"
  type_annotation {
    pretty_printed_name: "flask.ctx.RequestContext"
    fully_qualified_name: "flask.ctx.RequestContext"
  }
}
vars {
  name: "session"
  fully_qualified_name: "flask.globals.session"
  type_annotation {
    pretty_printed_name: "flask.sessions.SessionMixin"
    fully_qualified_name: "flask.sessions.SessionMixin"
  }
}
vars {
  name: "message_flashed"
  fully_qualified_name: "flask.signals.message_flashed"
  type_annotation {
    pretty_printed_name: "Any"
    kind: ANY
  }
}
vars {
  name: "BaseResponse"
  fully_qualified_name: "flask.helpers.BaseResponse"
  type_annotation {
    pretty_printed_name: "Any"
    kind: ANY
  }
}
