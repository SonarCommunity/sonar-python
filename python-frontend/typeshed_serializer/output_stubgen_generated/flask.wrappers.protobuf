fully_qualified_name: "flask.wrappers"
classes {
  name: "Request"
  fully_qualified_name: "flask.wrappers.Request"
  methods {
    name: "_load_form_data"
    fully_qualified_name: "flask.wrappers.Request._load_form_data"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
  }
  methods {
    name: "blueprint"
    fully_qualified_name: "flask.wrappers.Request.blueprint"
    return_annotation {
      pretty_printed_name: "Union[None]"
      kind: UNION
      args {
        pretty_printed_name: "__"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    has_decorators: true
    is_property: true
  }
  methods {
    name: "blueprints"
    fully_qualified_name: "flask.wrappers.Request.blueprints"
    return_annotation {
      pretty_printed_name: "None"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    has_decorators: true
    is_property: true
  }
  methods {
    name: "endpoint"
    fully_qualified_name: "flask.wrappers.Request.endpoint"
    return_annotation {
      pretty_printed_name: "Union[None]"
      kind: UNION
      args {
        pretty_printed_name: "__"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    has_decorators: true
    is_property: true
  }
  methods {
    name: "max_content_length"
    fully_qualified_name: "flask.wrappers.Request.max_content_length"
    return_annotation {
      pretty_printed_name: "Union[None]"
      kind: UNION
      args {
        pretty_printed_name: "__"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    has_decorators: true
    is_property: true
  }
  methods {
    name: "on_json_loading_failed"
    fully_qualified_name: "flask.wrappers.Request.on_json_loading_failed"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "e"
      kind: POSITIONAL_OR_KEYWORD
    }
  }
  attributes {
    name: "json_module"
    fully_qualified_name: "flask.wrappers.Request.json_module"
    type_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
  }
  attributes {
    name: "routing_exception"
    fully_qualified_name: "flask.wrappers.Request.routing_exception"
    type_annotation {
      pretty_printed_name: "Union[None]"
      kind: UNION
      args {
        pretty_printed_name: "__"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  attributes {
    name: "url_rule"
    fully_qualified_name: "flask.wrappers.Request.url_rule"
    type_annotation {
      pretty_printed_name: "Union[None]"
      kind: UNION
      args {
        pretty_printed_name: "__"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
  attributes {
    name: "view_args"
    fully_qualified_name: "flask.wrappers.Request.view_args"
    type_annotation {
      pretty_printed_name: "Union[None[Any],None]"
      kind: UNION
      args {
        pretty_printed_name: "None[Any]"
        args {
          pretty_printed_name: "Any"
          kind: ANY
        }
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
}
classes {
  name: "Response"
  fully_qualified_name: "flask.wrappers.Response"
  methods {
    name: "max_cookie_size"
    fully_qualified_name: "flask.wrappers.Response.max_cookie_size"
    return_annotation {
      pretty_printed_name: "__"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    has_decorators: true
    is_property: true
  }
  attributes {
    name: "autocorrect_location_header"
    fully_qualified_name: "flask.wrappers.Response.autocorrect_location_header"
    type_annotation {
      pretty_printed_name: "__"
    }
  }
  attributes {
    name: "default_mimetype"
    fully_qualified_name: "flask.wrappers.Response.default_mimetype"
    type_annotation {
      pretty_printed_name: "Union[None]"
      kind: UNION
      args {
        pretty_printed_name: "__"
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
}
