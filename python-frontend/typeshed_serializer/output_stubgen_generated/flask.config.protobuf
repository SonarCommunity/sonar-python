fully_qualified_name: "flask.config"
classes {
  name: "Config"
  fully_qualified_name: "flask.config.Config"
  methods {
    name: "__init__"
    fully_qualified_name: "flask.config.Config.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "root_path"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "defaults"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
  }
  methods {
    name: "__repr__"
    fully_qualified_name: "flask.config.Config.__repr__"
    return_annotation {
      pretty_printed_name: "__"
    }
    parameters {
      name: "self"
    }
  }
  methods {
    name: "from_envvar"
    fully_qualified_name: "flask.config.Config.from_envvar"
    return_annotation {
      pretty_printed_name: "__"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "variable_name"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "silent"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
  }
  methods {
    name: "from_file"
    fully_qualified_name: "flask.config.Config.from_file"
    return_annotation {
      pretty_printed_name: "__"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "filename"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "load"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "silent"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
    parameters {
      name: "text"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
  }
  methods {
    name: "from_mapping"
    fully_qualified_name: "flask.config.Config.from_mapping"
    return_annotation {
      pretty_printed_name: "__"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "mapping"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
    parameters {
      name: "kwargs"
      kind: VAR_KEYWORD
    }
  }
  methods {
    name: "from_object"
    fully_qualified_name: "flask.config.Config.from_object"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "obj"
      kind: POSITIONAL_OR_KEYWORD
    }
  }
  methods {
    name: "from_prefixed_env"
    fully_qualified_name: "flask.config.Config.from_prefixed_env"
    return_annotation {
      pretty_printed_name: "__"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "prefix"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
    parameters {
      name: "loads"
      kind: KEYWORD_ONLY
      has_default: true
    }
  }
  methods {
    name: "from_pyfile"
    fully_qualified_name: "flask.config.Config.from_pyfile"
    return_annotation {
      pretty_printed_name: "__"
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "filename"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "silent"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
  }
  methods {
    name: "get_namespace"
    fully_qualified_name: "flask.config.Config.get_namespace"
    return_annotation {
      pretty_printed_name: "None[Any]"
      args {
        pretty_printed_name: "Any"
        kind: ANY
      }
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "namespace"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "lowercase"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
    parameters {
      name: "trim_namespace"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
  }
  attributes {
    name: "root_path"
    fully_qualified_name: "flask.config.Config.root_path"
    type_annotation {
      pretty_printed_name: "__"
    }
  }
}
classes {
  name: "ConfigAttribute"
  fully_qualified_name: "flask.config.ConfigAttribute"
  methods {
    name: "__get__"
    fully_qualified_name: "flask.config.ConfigAttribute.__get__"
    return_annotation {
      pretty_printed_name: "Any"
      kind: ANY
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "obj"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "owner"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
  }
  methods {
    name: "__init__"
    fully_qualified_name: "flask.config.ConfigAttribute.__init__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "name"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "get_converter"
      kind: POSITIONAL_OR_KEYWORD
      has_default: true
    }
  }
  methods {
    name: "__set__"
    fully_qualified_name: "flask.config.ConfigAttribute.__set__"
    return_annotation {
      pretty_printed_name: "None"
      kind: NONE
    }
    parameters {
      name: "self"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "obj"
      kind: POSITIONAL_OR_KEYWORD
    }
    parameters {
      name: "value"
      kind: POSITIONAL_OR_KEYWORD
    }
  }
  attributes {
    name: "get_converter"
    fully_qualified_name: "flask.config.ConfigAttribute.get_converter"
    type_annotation {
      pretty_printed_name: "Union[CallableType[None],None]"
      kind: UNION
      args {
        pretty_printed_name: "CallableType[None]"
        kind: CALLABLE
        args {
          pretty_printed_name: "__"
        }
      }
      args {
        pretty_printed_name: "None"
        kind: NONE
      }
    }
  }
}
