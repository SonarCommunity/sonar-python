from .._api import WeightsEnum
from torch import Tensor
from torchvision.models import inception as inception_module
from torchvision.models.inception import InceptionOutputs, Inception_V3_Weights
from typing import Any, Optional, Union

class QuantizableBasicConv2d(inception_module.BasicConv2d):
    relu: Any
    def __init__(self, *args: Any, **kwargs: Any) -> None: ...
    def forward(self, x: Tensor) -> Tensor: ...
    def fuse_model(self, is_qat: Optional[bool] = ...) -> None: ...

class QuantizableInceptionA(inception_module.InceptionA):
    myop: Any
    def __init__(self, *args: Any, **kwargs: Any) -> None: ...
    def forward(self, x: Tensor) -> Tensor: ...

class QuantizableInceptionB(inception_module.InceptionB):
    myop: Any
    def __init__(self, *args: Any, **kwargs: Any) -> None: ...
    def forward(self, x: Tensor) -> Tensor: ...

class QuantizableInceptionC(inception_module.InceptionC):
    myop: Any
    def __init__(self, *args: Any, **kwargs: Any) -> None: ...
    def forward(self, x: Tensor) -> Tensor: ...

class QuantizableInceptionD(inception_module.InceptionD):
    myop: Any
    def __init__(self, *args: Any, **kwargs: Any) -> None: ...
    def forward(self, x: Tensor) -> Tensor: ...

class QuantizableInceptionE(inception_module.InceptionE):
    myop1: Any
    myop2: Any
    myop3: Any
    def __init__(self, *args: Any, **kwargs: Any) -> None: ...
    def forward(self, x: Tensor) -> Tensor: ...

class QuantizableInceptionAux(inception_module.InceptionAux):
    def __init__(self, *args: Any, **kwargs: Any) -> None: ...

class QuantizableInception3(inception_module.Inception3):
    quant: Any
    dequant: Any
    def __init__(self, *args: Any, **kwargs: Any) -> None: ...
    def forward(self, x: Tensor) -> InceptionOutputs: ...
    def fuse_model(self, is_qat: Optional[bool] = ...) -> None: ...

class Inception_V3_QuantizedWeights(WeightsEnum):
    IMAGENET1K_FBGEMM_V1: Any
    DEFAULT: Any

def inception_v3(*, weights: Optional[Union[Inception_V3_QuantizedWeights, Inception_V3_Weights]] = ..., progress: bool = ..., quantize: bool = ..., **kwargs: Any) -> QuantizableInception3: ...
