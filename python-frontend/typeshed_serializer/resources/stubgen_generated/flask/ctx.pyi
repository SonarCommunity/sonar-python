import typing as t
from . import typing as ft
from .app import Flask as Flask
from .sessions import SessionMixin as SessionMixin
from .signals import appcontext_popped as appcontext_popped, appcontext_pushed as appcontext_pushed
from .wrappers import Request as Request
from types import TracebackType
from typing import Any

class _AppCtxGlobals:
    def __getattr__(self, name: str) -> t.Any: ...
    def __setattr__(self, name: str, value: t.Any) -> None: ...
    def __delattr__(self, name: str) -> None: ...
    def get(self, name: str, default: t.Optional[t.Any] = ...) -> t.Any: ...
    def pop(self, name: str, default: t.Any = ...) -> t.Any: ...
    def setdefault(self, name: str, default: t.Any = ...) -> t.Any: ...
    def __contains__(self, item: str) -> bool: ...
    def __iter__(self) -> t.Iterator[str]: ...

def after_this_request(f: ft.AfterRequestCallable) -> ft.AfterRequestCallable: ...
def copy_current_request_context(f: t.Callable) -> t.Callable: ...
def has_request_context() -> bool: ...
def has_app_context() -> bool: ...

class AppContext:
    app: Any
    url_adapter: Any
    g: Any
    def __init__(self, app: Flask) -> None: ...
    def push(self) -> None: ...
    def pop(self, exc: t.Optional[BaseException] = ...) -> None: ...
    def __enter__(self) -> AppContext: ...
    def __exit__(self, exc_type: t.Optional[type], exc_value: t.Optional[BaseException], tb: t.Optional[TracebackType]) -> None: ...

class RequestContext:
    app: Any
    request: Any
    url_adapter: Any
    flashes: Any
    session: Any
    def __init__(self, app: Flask, environ: dict, request: t.Optional[Request] = ..., session: t.Optional[SessionMixin] = ...) -> None: ...
    def copy(self) -> RequestContext: ...
    def match_request(self) -> None: ...
    def push(self) -> None: ...
    def pop(self, exc: t.Optional[BaseException] = ...) -> None: ...
    def __enter__(self) -> RequestContext: ...
    def __exit__(self, exc_type: t.Optional[type], exc_value: t.Optional[BaseException], tb: t.Optional[TracebackType]) -> None: ...
