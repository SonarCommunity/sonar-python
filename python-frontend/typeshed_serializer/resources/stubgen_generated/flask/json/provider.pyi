import typing as t
from ..app import Flask as Flask
from ..globals import request as request
from ..wrappers import Response as Response

class JSONProvider:
    def __init__(self, app: Flask) -> None: ...
    def dumps(self, obj: t.Any, **kwargs: t.Any) -> str: ...
    def dump(self, obj: t.Any, fp: t.IO[str], **kwargs: t.Any) -> None: ...
    def loads(self, s: Union[str, bytes], **kwargs: t.Any) -> t.Any: ...
    def load(self, fp: t.IO[t.AnyStr], **kwargs: t.Any) -> t.Any: ...
    def response(self, *args: t.Any, **kwargs: t.Any) -> Response: ...

class DefaultJSONProvider(JSONProvider):
    default: t.Callable[[t.Any], t.Any]
    ensure_ascii: bool
    sort_keys: bool
    compact: Union[bool, None]
    mimetype: str
    def dumps(self, obj: t.Any, **kwargs: t.Any) -> str: ...
    def loads(self, s: Union[str, bytes], **kwargs: t.Any) -> t.Any: ...
    def response(self, *args: t.Any, **kwargs: t.Any) -> Response: ...
