
torch._export.pass_baseY
ExportPassBaseError+torch._export.pass_base.ExportPassBaseError"builtins.RuntimeErrorèF
!_ExportPassBaseDeprecatedDoNotUse9torch._export.pass_base._ExportPassBaseDeprecatedDoNotUse"(torch.fx.passes.infra.pass_base.PassBase*Ü
_create_dummy_node_metadataUtorch._export.pass_base._ExportPassBaseDeprecatedDoNotUse._create_dummy_node_metadata0:staticmethodh*€
__init__Btorch._export.pass_base._ExportPassBaseDeprecatedDoNotUse.__init__"
None*Ä
selfv
9torch._export.pass_base._ExportPassBaseDeprecatedDoNotUse"9torch._export.pass_base._ExportPassBaseDeprecatedDoNotUse*˘
_fx=torch._export.pass_base._ExportPassBaseDeprecatedDoNotUse._fx"b
/torch._export.pass_infra.proxy_value.ProxyValue"/torch._export.pass_infra.proxy_value.ProxyValue*Ä
selfv
9torch._export.pass_base._ExportPassBaseDeprecatedDoNotUse"9torch._export.pass_base._ExportPassBaseDeprecatedDoNotUse*&
kind
builtins.str"builtins.str*ä
target˝
>TypeAlias[Union[CallableType[builtins.function],builtins.str]]¢
3Union[CallableType[builtins.function],builtins.str]K
CallableType[builtins.function]&
builtins.function"builtins.function
builtins.str"builtins.str"torch.fx.node.Target*y
argso
builtins.tuple[TypeAlias[Any]]=
TypeAlias[Any]
Any" torch._export.pass_base.Argument"builtins.tuple*•
kwargsò
*builtins.dict[builtins.str,TypeAlias[Any]]
builtins.str"builtins.str=
TypeAlias[Any]
Any" torch._export.pass_base.Argument"builtins.dict*t
metaj
3torch._export.pass_infra.node_metadata.NodeMetadata"3torch._export.pass_infra.node_metadata.NodeMetadata*ñ
inputs@torch._export.pass_base._ExportPassBaseDeprecatedDoNotUse.inputs"m
builtins.list[TypeAlias[Any]]=
TypeAlias[Any]
Any" torch._export.pass_base.Argument"builtins.list*Ä
selfv
9torch._export.pass_base._ExportPassBaseDeprecatedDoNotUse"9torch._export.pass_base._ExportPassBaseDeprecatedDoNotUse*X
graph_moduleF
!torch.fx.graph_module.GraphModule"!torch.fx.graph_module.GraphModule*«
on_attrAtorch._export.pass_base._ExportPassBaseDeprecatedDoNotUse.on_attr"
None*Ä
selfv
9torch._export.pass_base._ExportPassBaseDeprecatedDoNotUse"9torch._export.pass_base._ExportPassBaseDeprecatedDoNotUse*l
attrb
/torch._export.pass_infra.proxy_value.ProxyValue"/torch._export.pass_infra.proxy_value.ProxyValue*°
placeholderEtorch._export.pass_base._ExportPassBaseDeprecatedDoNotUse.placeholder"b
/torch._export.pass_infra.proxy_value.ProxyValue"/torch._export.pass_infra.proxy_value.ProxyValue*Ä
selfv
9torch._export.pass_base._ExportPassBaseDeprecatedDoNotUse"9torch._export.pass_base._ExportPassBaseDeprecatedDoNotUse*&
name
builtins.str"builtins.str*F
arg=
TypeAlias[Any]
Any" torch._export.pass_base.Argument*t
metaj
3torch._export.pass_infra.node_metadata.NodeMetadata"3torch._export.pass_infra.node_metadata.NodeMetadata*È
call_operatorGtorch._export.pass_base._ExportPassBaseDeprecatedDoNotUse.call_operator"b
/torch._export.pass_infra.proxy_value.ProxyValue"/torch._export.pass_infra.proxy_value.ProxyValue*Ä
selfv
9torch._export.pass_base._ExportPassBaseDeprecatedDoNotUse"9torch._export.pass_base._ExportPassBaseDeprecatedDoNotUse*
op
Any*y
argso
builtins.tuple[TypeAlias[Any]]=
TypeAlias[Any]
Any" torch._export.pass_base.Argument"builtins.tuple*•
kwargsò
*builtins.dict[builtins.str,TypeAlias[Any]]
builtins.str"builtins.str=
TypeAlias[Any]
Any" torch._export.pass_base.Argument"builtins.dict*t
metaj
3torch._export.pass_infra.node_metadata.NodeMetadata"3torch._export.pass_infra.node_metadata.NodeMetadata*Õ
call_symBtorch._export.pass_base._ExportPassBaseDeprecatedDoNotUse.call_sym"b
/torch._export.pass_infra.proxy_value.ProxyValue"/torch._export.pass_infra.proxy_value.ProxyValue*Ä
selfv
9torch._export.pass_base._ExportPassBaseDeprecatedDoNotUse"9torch._export.pass_base._ExportPassBaseDeprecatedDoNotUse*§
targetó
*TypeAlias[CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.function"torch._export.pass_base.Fn*y
argso
builtins.tuple[TypeAlias[Any]]=
TypeAlias[Any]
Any" torch._export.pass_base.Argument"builtins.tuple*t
metaj
3torch._export.pass_infra.node_metadata.NodeMetadata"3torch._export.pass_infra.node_metadata.NodeMetadata*¡
	call_condCtorch._export.pass_base._ExportPassBaseDeprecatedDoNotUse.call_cond"b
/torch._export.pass_infra.proxy_value.ProxyValue"/torch._export.pass_infra.proxy_value.ProxyValue*Ä
selfv
9torch._export.pass_base._ExportPassBaseDeprecatedDoNotUse"9torch._export.pass_base._ExportPassBaseDeprecatedDoNotUse*l
predb
/torch._export.pass_infra.proxy_value.ProxyValue"/torch._export.pass_infra.proxy_value.ProxyValue*S
true_fnF
!torch.fx.graph_module.GraphModule"!torch.fx.graph_module.GraphModule*T
false_fnF
!torch.fx.graph_module.GraphModule"!torch.fx.graph_module.GraphModule*y
inputsm
builtins.list[TypeAlias[Any]]=
TypeAlias[Any]
Any" torch._export.pass_base.Argument"builtins.list*t
metaj
3torch._export.pass_infra.node_metadata.NodeMetadata"3torch._export.pass_infra.node_metadata.NodeMetadata*á
call_mapBtorch._export.pass_base._ExportPassBaseDeprecatedDoNotUse.call_map"b
/torch._export.pass_infra.proxy_value.ProxyValue"/torch._export.pass_infra.proxy_value.ProxyValue*Ä
selfv
9torch._export.pass_base._ExportPassBaseDeprecatedDoNotUse"9torch._export.pass_base._ExportPassBaseDeprecatedDoNotUse*M
fF
!torch.fx.graph_module.GraphModule"!torch.fx.graph_module.GraphModule*≈
mapped_args≥
>builtins.list[torch._export.pass_infra.proxy_value.ProxyValue]b
/torch._export.pass_infra.proxy_value.ProxyValue"/torch._export.pass_infra.proxy_value.ProxyValue"builtins.list*¬
operands≥
>builtins.list[torch._export.pass_infra.proxy_value.ProxyValue]b
/torch._export.pass_infra.proxy_value.ProxyValue"/torch._export.pass_infra.proxy_value.ProxyValue"builtins.list*t
metaj
3torch._export.pass_infra.node_metadata.NodeMetadata"3torch._export.pass_infra.node_metadata.NodeMetadata*…
call_getitemFtorch._export.pass_base._ExportPassBaseDeprecatedDoNotUse.call_getitem"b
/torch._export.pass_infra.proxy_value.ProxyValue"/torch._export.pass_infra.proxy_value.ProxyValue*Ä
selfv
9torch._export.pass_base._ExportPassBaseDeprecatedDoNotUse"9torch._export.pass_base._ExportPassBaseDeprecatedDoNotUse*m
valueb
/torch._export.pass_infra.proxy_value.ProxyValue"/torch._export.pass_infra.proxy_value.ProxyValue*%
key
builtins.int"builtins.int*t
metaj
3torch._export.pass_infra.node_metadata.NodeMetadata"3torch._export.pass_infra.node_metadata.NodeMetadata*£
output@torch._export.pass_base._ExportPassBaseDeprecatedDoNotUse.output"b
/torch._export.pass_infra.proxy_value.ProxyValue"/torch._export.pass_infra.proxy_value.ProxyValue*Ä
selfv
9torch._export.pass_base._ExportPassBaseDeprecatedDoNotUse"9torch._export.pass_base._ExportPassBaseDeprecatedDoNotUse*z
resultsm
builtins.list[TypeAlias[Any]]=
TypeAlias[Any]
Any" torch._export.pass_base.Argument"builtins.list*t
metaj
3torch._export.pass_infra.node_metadata.NodeMetadata"3torch._export.pass_infra.node_metadata.NodeMetadata*•
call_submoduleHtorch._export.pass_base._ExportPassBaseDeprecatedDoNotUse.call_submodule"o
TypeAlias[Tuple[Any,Any]]$
Tuple[Any,Any]
Any
Any"*torch.fx.passes.infra.pass_base.PassResult*Ä
selfv
9torch._export.pass_base._ExportPassBaseDeprecatedDoNotUse"9torch._export.pass_base._ExportPassBaseDeprecatedDoNotUse*X
graph_moduleF
!torch.fx.graph_module.GraphModule"!torch.fx.graph_module.GraphModule*{
inputso
builtins.tuple[TypeAlias[Any]]=
TypeAlias[Any]
Any" torch._export.pass_base.Argument"builtins.tuple*î
call>torch._export.pass_base._ExportPassBaseDeprecatedDoNotUse.call"o
TypeAlias[Tuple[Any,Any]]$
Tuple[Any,Any]
Any
Any"*torch.fx.passes.infra.pass_base.PassResult*Ä
selfv
9torch._export.pass_base._ExportPassBaseDeprecatedDoNotUse"9torch._export.pass_base._ExportPassBaseDeprecatedDoNotUse*X
graph_moduleF
!torch.fx.graph_module.GraphModule"!torch.fx.graph_module.GraphModuler]
interpreterEtorch._export.pass_base._ExportPassBaseDeprecatedDoNotUse.interpreter
Anyr›
tracer@torch._export.pass_base._ExportPassBaseDeprecatedDoNotUse.tracerê
Ftorch._export.pass_base._ExportPassBaseDeprecatedDoNotUse.ExportTracer"Ftorch._export.pass_base._ExportPassBaseDeprecatedDoNotUse.ExportTracerrÖ
fake_tensor_modeJtorch._export.pass_base._ExportPassBaseDeprecatedDoNotUse.fake_tensor_mode§
8Union[torch._subclasses.fake_tensor.FakeTensorMode,None]\
,torch._subclasses.fake_tensor.FakeTensorMode",torch._subclasses.fake_tensor.FakeTensorMode
Nonerv
_initializedFtorch._export.pass_base._ExportPassBaseDeprecatedDoNotUse._initialized
builtins.bool"builtins.boolr†
node_debug_strHtorch._export.pass_base._ExportPassBaseDeprecatedDoNotUse.node_debug_strD
Union[builtins.str,None]
builtins.str"builtins.str
None*ì
__annotations__'torch._export.pass_base.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*C
_unstack_pytree'torch._export.pass_base._unstack_pytree
Any*$
fx_tracebacktorch.fx.traceback *
pytreetorch.utils._pytree *v
__all__torch._export.pass_base.__all__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*≈
_TORCH_SYM_OPS&torch._export.pass_base._TORCH_SYM_OPSä
-builtins.set[CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.function"builtins.set