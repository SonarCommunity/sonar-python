
torch.nn.utils.parametrize 
ParametrizationList.torch.nn.utils.parametrize.ParametrizationList"%torch.nn.modules.container.ModuleList*¶
__init__7torch.nn.utils.parametrize.ParametrizationList.__init__"
None*j
self`
.torch.nn.utils.parametrize.ParametrizationList".torch.nn.utils.parametrize.ParametrizationList*’
modules„
/typing.Sequence[torch.nn.modules.module.Module]@
torch.nn.modules.module.Module"torch.nn.modules.module.Module"typing.Sequence*·
original¨
8Union[torch._tensor.Tensor,torch.nn.parameter.Parameter],
torch._tensor.Tensor"torch._tensor.Tensor<
torch.nn.parameter.Parameter"torch.nn.parameter.Parameter*,
unsafe
builtins.bool"builtins.bool *ü
right_inverse<torch.nn.utils.parametrize.ParametrizationList.right_inverse"
None*j
self`
.torch.nn.utils.parametrize.ParametrizationList".torch.nn.utils.parametrize.ParametrizationList*7
value,
torch._tensor.Tensor"torch._tensor.Tensor*Û
forward6torch.nn.utils.parametrize.ParametrizationList.forward",
torch._tensor.Tensor"torch._tensor.Tensor*j
self`
.torch.nn.utils.parametrize.ParametrizationList".torch.nn.utils.parametrize.ParametrizationListrq
original7torch.nn.utils.parametrize.ParametrizationList.original,
torch._tensor.Tensor"torch._tensor.Tensorr_
unsafe5torch.nn.utils.parametrize.ParametrizationList.unsafe
builtins.bool"builtins.boolre
	is_tensor8torch.nn.utils.parametrize.ParametrizationList.is_tensor
builtins.bool"builtins.boolra
ntensors7torch.nn.utils.parametrize.ParametrizationList.ntensors
builtins.int"builtins.intv
_register_parameter_or_buffer8torch.nn.utils.parametrize._register_parameter_or_buffer*

module*
name*
X¬

_maybe_set%torch.nn.utils.parametrize._maybe_set"
None*6
dest,
torch._tensor.Tensor"torch._tensor.Tensor*5
src,
torch._tensor.Tensor"torch._tensor.Tensor™
_inject_new_class,torch.nn.utils.parametrize._inject_new_class"
None*L
module@
torch.nn.modules.module.Module"torch.nn.modules.module.ModuleÆ
_inject_property+torch.nn.utils.parametrize._inject_property"
None*L
module@
torch.nn.modules.module.Module"torch.nn.modules.module.Module*-
tensor_name
builtins.str"builtins.str“
register_parametrization3torch.nn.utils.parametrize.register_parametrization"@
torch.nn.modules.module.Module"torch.nn.modules.module.Module*L
module@
torch.nn.modules.module.Module"torch.nn.modules.module.Module*-
tensor_name
builtins.str"builtins.str*U
parametrization@
torch.nn.modules.module.Module"torch.nn.modules.module.Module*,
unsafe
builtins.bool"builtins.bool „
is_parametrized*torch.nn.utils.parametrize.is_parametrized"
builtins.bool"builtins.bool*L
module@
torch.nn.modules.module.Module"torch.nn.modules.module.Module*W
tensor_nameD
Union[builtins.str,None]
builtins.str"builtins.str
None Æ
remove_parametrizations2torch.nn.utils.parametrize.remove_parametrizations"@
torch.nn.modules.module.Module"torch.nn.modules.module.Module*L
module@
torch.nn.modules.module.Module"torch.nn.modules.module.Module*-
tensor_name
builtins.str"builtins.str*8
leave_parametrized
builtins.bool"builtins.bool Å
type_before_parametrizations7torch.nn.utils.parametrize.type_before_parametrizations"
builtins.type"builtins.type*L
module@
torch.nn.modules.module.Module"torch.nn.modules.module.Module¦
$transfer_parametrizations_and_params?torch.nn.utils.parametrize.transfer_parametrizations_and_params"@
torch.nn.modules.module.Module"torch.nn.modules.module.Module*Q
from_module@
torch.nn.modules.module.Module"torch.nn.modules.module.Module*O
	to_module@
torch.nn.modules.module.Module"torch.nn.modules.module.Module*W
tensor_nameD
Union[builtins.str,None]
builtins.str"builtins.str
None *–
__annotations__*torch.nn.utils.parametrize.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*y
__all__"torch.nn.utils.parametrize.__all__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*Y
_cache_enabled)torch.nn.utils.parametrize._cache_enabled
builtins.int"builtins.int*Ï
_cache!torch.nn.utils.parametrize._cache¡
Pbuiltins.dict[Tuple[builtins.int,builtins.str],Union[torch._tensor.Tensor,None]]`
 Tuple[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str\
 Union[torch._tensor.Tensor,None],
torch._tensor.Tensor"torch._tensor.Tensor
None"builtins.dict