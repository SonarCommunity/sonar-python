
torch.ao.quantization.fx.tracerÿ
ScopeContextManager3torch.ao.quantization.fx.tracer.ScopeContextManager""torch.fx.proxy.ScopeContextManager*Ž
__init__<torch.ao.quantization.fx.tracer.ScopeContextManager.__init__"
None*t
selfj
3torch.ao.quantization.fx.tracer.ScopeContextManager"3torch.ao.quantization.fx.tracer.ScopeContextManager*7
scope,
torch.fx.proxy.Scope"torch.fx.proxy.Scope*T
current_module@
torch.nn.modules.module.Module"torch.nn.modules.module.Module*5
current_module_path
builtins.str"builtins.strÒ

QuantizationTracer2torch.ao.quantization.fx.tracer.QuantizationTracer"torch.fx._symbolic_trace.Tracer*×
__init__;torch.ao.quantization.fx.tracer.QuantizationTracer.__init__"
None*r
selfh
2torch.ao.quantization.fx.tracer.QuantizationTracer"2torch.ao.quantization.fx.tracer.QuantizationTracer*d
skipped_module_namesJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*©
skipped_module_classesŒ
.builtins.list[CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.function"builtins.list*é
is_leaf_moduleAtorch.ao.quantization.fx.tracer.QuantizationTracer.is_leaf_module"
builtins.bool"builtins.bool*r
selfh
2torch.ao.quantization.fx.tracer.QuantizationTracer"2torch.ao.quantization.fx.tracer.QuantizationTracer*G
m@
torch.nn.modules.module.Module"torch.nn.modules.module.Module*7
module_qualified_name
builtins.str"builtins.strr«
skipped_module_namesGtorch.ao.quantization.fx.tracer.QuantizationTracer.skipped_module_namesJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.listrò
skipped_module_classesItorch.ao.quantization.fx.tracer.QuantizationTracer.skipped_module_classesŒ
.builtins.list[CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.function"builtins.list*›
__annotations__/torch.ao.quantization.fx.tracer.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*~
__all__'torch.ao.quantization.fx.tracer.__all__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list