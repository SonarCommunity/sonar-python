
unicodedata»
UCDunicodedata.UCD"builtins.object*¡
bidirectionalunicodedata.UCD.bidirectional"
builtins.str"builtins.str*,
self"
unicodedata.UCD"unicodedata.UCD*%
__chr
builtins.str"builtins.str*—
categoryunicodedata.UCD.category"
builtins.str"builtins.str*,
self"
unicodedata.UCD"unicodedata.UCD*%
__chr
builtins.str"builtins.str*™
	combiningunicodedata.UCD.combining"
builtins.int"builtins.int*,
self"
unicodedata.UCD"unicodedata.UCD*%
__chr
builtins.str"builtins.str*ô
decimalunicodedata.UCD.decimal"X
"Union[builtins.int,unicodedata._T]
builtins.int"builtins.int
unicodedata._T*,
self"
unicodedata.UCD"unicodedata.UCD*%
__chr
builtins.str"builtins.str*!
	__default
unicodedata._T *¡
decompositionunicodedata.UCD.decomposition"
builtins.str"builtins.str*,
self"
unicodedata.UCD"unicodedata.UCD*%
__chr
builtins.str"builtins.str*ð
digitunicodedata.UCD.digit"X
"Union[builtins.int,unicodedata._T]
builtins.int"builtins.int
unicodedata._T*,
self"
unicodedata.UCD"unicodedata.UCD*%
__chr
builtins.str"builtins.str*!
	__default
unicodedata._T *§
east_asian_width unicodedata.UCD.east_asian_width"
builtins.str"builtins.str*,
self"
unicodedata.UCD"unicodedata.UCD*%
__chr
builtins.str"builtins.str*Þ
lookupunicodedata.UCD.lookup"
builtins.str"builtins.str*,
self"
unicodedata.UCD"unicodedata.UCD*p
__namef
"Union[builtins.str,builtins.bytes]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes*—
mirroredunicodedata.UCD.mirrored"
builtins.int"builtins.int*,
self"
unicodedata.UCD"unicodedata.UCD*%
__chr
builtins.str"builtins.str*î
nameunicodedata.UCD.name"X
"Union[builtins.str,unicodedata._T]
builtins.str"builtins.str
unicodedata._T*,
self"
unicodedata.UCD"unicodedata.UCD*%
__chr
builtins.str"builtins.str*!
	__default
unicodedata._T *Ä
	normalizeunicodedata.UCD.normalize"
builtins.str"builtins.str*,
self"
unicodedata.UCD"unicodedata.UCD*&
__form
builtins.str"builtins.str*(
__unistr
builtins.str"builtins.str*ú
numericunicodedata.UCD.numeric"^
$Union[builtins.float,unicodedata._T] 
builtins.float"builtins.float
unicodedata._T*,
self"
unicodedata.UCD"unicodedata.UCD*%
__chr
builtins.str"builtins.str*!
	__default
unicodedata._T rP
unidata_versionunicodedata.UCD.unidata_version
builtins.str"builtins.stro
bidirectionalunicodedata.bidirectional"
builtins.str"builtins.str*%
__chr
builtins.str"builtins.stre
categoryunicodedata.category"
builtins.str"builtins.str*%
__chr
builtins.str"builtins.strg
	combiningunicodedata.combining"
builtins.int"builtins.int*%
__chr
builtins.str"builtins.strÂ
decimalunicodedata.decimal"X
"Union[builtins.int,unicodedata._T]
builtins.int"builtins.int
unicodedata._T*%
__chr
builtins.str"builtins.str*!
	__default
unicodedata._T o
decompositionunicodedata.decomposition"
builtins.str"builtins.str*%
__chr
builtins.str"builtins.str¾
digitunicodedata.digit"X
"Union[builtins.int,unicodedata._T]
builtins.int"builtins.int
unicodedata._T*%
__chr
builtins.str"builtins.str*!
	__default
unicodedata._T u
east_asian_widthunicodedata.east_asian_width"
builtins.str"builtins.str*%
__chr
builtins.str"builtins.strœ
is_normalizedunicodedata.is_normalized"
builtins.bool"builtins.bool*&
__form
builtins.str"builtins.str*(
__unistr
builtins.str"builtins.str¬
lookupunicodedata.lookup"
builtins.str"builtins.str*p
__namef
"Union[builtins.str,builtins.bytes]
builtins.str"builtins.str 
builtins.bytes"builtins.bytese
mirroredunicodedata.mirrored"
builtins.int"builtins.int*%
__chr
builtins.str"builtins.str¼
nameunicodedata.name"X
"Union[builtins.str,unicodedata._T]
builtins.str"builtins.str
unicodedata._T*%
__chr
builtins.str"builtins.str*!
	__default
unicodedata._T ’
	normalizeunicodedata.normalize"
builtins.str"builtins.str*&
__form
builtins.str"builtins.str*(
__unistr
builtins.str"builtins.strÈ
numericunicodedata.numeric"^
$Union[builtins.float,unicodedata._T] 
builtins.float"builtins.float
unicodedata._T*%
__chr
builtins.str"builtins.str*!
	__default
unicodedata._T *F
	ucd_3_2_0unicodedata.ucd_3_2_0"
unicodedata.UCD"unicodedata.UCD*1
ucnhash_CAPIunicodedata.ucnhash_CAPI
Any*L
unidata_versionunicodedata.unidata_version
builtins.str"builtins.str