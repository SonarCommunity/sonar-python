
logging.configlogging.config"Æ

dictConfiglogging.config.dictConfig"
None*c
configW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dictz27z35z36z37z38z39"‚

fileConfiglogging.config.fileConfig"
None*ù
fnameë
+Union[builtins.str,typing.IO[builtins.str]]
builtins.str"builtins.strB
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IO* 
defaultsπ
4Union[builtins.dict[builtins.str,builtins.str],None]u
(builtins.dict[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"builtins.dict
None *>
disable_existing_loggers
builtins.bool"builtins.bool z27"¶

fileConfiglogging.config.fileConfig"
None*›
fname—
Union[TypeAlias[TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]],typing.IO[builtins.str],configparser.RawConfigParser]…
CTypeAlias[TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]]È
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPath"logging.config._PathB
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IO<
configparser.RawConfigParser"configparser.RawConfigParser* 
defaultsπ
4Union[builtins.dict[builtins.str,builtins.str],None]u
(builtins.dict[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"builtins.dict
None *>
disable_existing_loggers
builtins.bool"builtins.bool z35z36"Œ	

fileConfiglogging.config.fileConfig"
None*Å
fnameı
™Union[TypeAlias[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]],typing.IO[builtins.str],configparser.RawConfigParser]¡
nTypeAlias[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath"logging.config._PathB
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IO<
configparser.RawConfigParser"configparser.RawConfigParser* 
defaultsπ
4Union[builtins.dict[builtins.str,builtins.str],None]u
(builtins.dict[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"builtins.dict
None *>
disable_existing_loggers
builtins.bool"builtins.bool z37z38z39"s
listenlogging.config.listen"$
threading.Thread"threading.Thread*(
port
builtins.int"builtins.int z27"õ
listenlogging.config.listen"$
threading.Thread"threading.Thread*(
port
builtins.int"builtins.int *ï
verifyÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None z35z36z37z38z39"O
stopListeninglogging.config.stopListening"
Nonez27z35z36z37z38z39"û
valid_identlogging.config.valid_ident":
Literal[builtins.bool]	
builtins.bool"builtins.bool*#
s
builtins.str"builtins.strz35z36z37z38z39