
pathlib†-
PurePathpathlib.PurePath"os.PathLike*Ú
__new__pathlib.PurePath.__new__"

pathlib._P*-
cls$
Type[pathlib._P]

pathlib._P*Ù
argsÈ
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPathz35z36z37z38z39z310*å
__hash__pathlib.PurePath.__hash__"
builtins.int"builtins.int*.
self$
pathlib.PurePath"pathlib.PurePathz35z36z37z38z39z310*∑
__lt__pathlib.PurePath.__lt__"
builtins.bool"builtins.bool*,
self$
pathlib.PurePath"pathlib.PurePath*-
other$
pathlib.PurePath"pathlib.PurePathz35z36z37z38z39z310*∑
__le__pathlib.PurePath.__le__"
builtins.bool"builtins.bool*,
self$
pathlib.PurePath"pathlib.PurePath*-
other$
pathlib.PurePath"pathlib.PurePathz35z36z37z38z39z310*∑
__gt__pathlib.PurePath.__gt__"
builtins.bool"builtins.bool*,
self$
pathlib.PurePath"pathlib.PurePath*-
other$
pathlib.PurePath"pathlib.PurePathz35z36z37z38z39z310*∑
__ge__pathlib.PurePath.__ge__"
builtins.bool"builtins.bool*,
self$
pathlib.PurePath"pathlib.PurePath*-
other$
pathlib.PurePath"pathlib.PurePathz35z36z37z38z39z310*‡
__truediv__pathlib.PurePath.__truediv__"

pathlib._P*
self

pathlib._P*Ò
keyÈ
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPathz35z36z37z38z39z310*‚
__rtruediv__pathlib.PurePath.__rtruediv__"

pathlib._P*
self

pathlib._P*Ò
keyÈ
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPathz35z36z37z38z39z310*í
	__bytes__pathlib.PurePath.__bytes__" 
builtins.bytes"builtins.bytes*.
self$
pathlib.PurePath"pathlib.PurePathz35z36z37z38z39z310*å
as_posixpathlib.PurePath.as_posix"
builtins.str"builtins.str*.
self$
pathlib.PurePath"pathlib.PurePathz35z36z37z38z39z310*à
as_uripathlib.PurePath.as_uri"
builtins.str"builtins.str*.
self$
pathlib.PurePath"pathlib.PurePathz35z36z37z38z39z310*î
is_absolutepathlib.PurePath.is_absolute"
builtins.bool"builtins.bool*.
self$
pathlib.PurePath"pathlib.PurePathz35z36z37z38z39z310*î
is_reservedpathlib.PurePath.is_reserved"
builtins.bool"builtins.bool*.
self$
pathlib.PurePath"pathlib.PurePathz35z36z37z38z39z310*∏
matchpathlib.PurePath.match"
builtins.bool"builtins.bool*.
self$
pathlib.PurePath"pathlib.PurePath*.
path_pattern
builtins.str"builtins.strz35z36z37z38z39z310*Ê
relative_topathlib.PurePath.relative_to"

pathlib._P*
self

pathlib._P*ı
otherÈ
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPathz35z36z37z38z39z310*í
	with_namepathlib.PurePath.with_name"

pathlib._P*
self

pathlib._P*&
name
builtins.str"builtins.strz35z36z37z38z39z310*ò
with_suffixpathlib.PurePath.with_suffix"

pathlib._P*
self

pathlib._P*(
suffix
builtins.str"builtins.strz35z36z37z38z39z310*‡
joinpathpathlib.PurePath.joinpath"

pathlib._P*
self

pathlib._P*ı
otherÈ
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPathz35z36z37z38z39z310*§
parentspathlib.PurePath.parents">
typing.Sequence[pathlib._P]

pathlib._P"typing.Sequence*
self

pathlib._P0:property`z35z36z37z38z39z310*r
parentpathlib.PurePath.parent"

pathlib._P*
self

pathlib._P0:property`z35z36z37z38z39z310*Ç
is_relative_topathlib.PurePath.is_relative_to"
builtins.bool"builtins.bool*.
self$
pathlib.PurePath"pathlib.PurePath*ı
otherÈ
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPathz39z310*Ç
	with_stempathlib.PurePath.with_stem"

pathlib._P*
self

pathlib._P*&
stem
builtins.str"builtins.strz39z310* 
__class_getitem__"pathlib.PurePath.__class_getitem__"(
types.GenericAlias"types.GenericAlias*I
cls@
Type[pathlib.PurePath]$
pathlib.PurePath"pathlib.PurePath*
type
Anypz39z310j35j36j37j38j39j310rÜ
partspathlib.PurePath.partsL
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple*35*36*37*38*39*310rV
drivepathlib.PurePath.drive
builtins.str"builtins.str*35*36*37*38*39*310rT
rootpathlib.PurePath.root
builtins.str"builtins.str*35*36*37*38*39*310rX
anchorpathlib.PurePath.anchor
builtins.str"builtins.str*35*36*37*38*39*310rT
namepathlib.PurePath.name
builtins.str"builtins.str*35*36*37*38*39*310rX
suffixpathlib.PurePath.suffix
builtins.str"builtins.str*35*36*37*38*39*310rä
suffixespathlib.PurePath.suffixesJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*35*36*37*38*39*310rT
stempathlib.PurePath.stem
builtins.str"builtins.str*35*36*37*38*39*310Q
PurePosixPathpathlib.PurePosixPath"pathlib.PurePathj35j36j37j38j39j310U
PureWindowsPathpathlib.PureWindowsPath"pathlib.PurePathj35j36j37j38j39j310Çè
Pathpathlib.Path"pathlib.PurePath*É
__new__pathlib.Path.__new__"

pathlib._P*-
cls$
Type[pathlib._P]

pathlib._P*Ù
argsÈ
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPath*
kwargs
Anyz35z36z37z38z39z310*d
	__enter__pathlib.Path.__enter__"

pathlib._P*
self

pathlib._Pz35z36z37z38z39z310*ú
__exit__pathlib.Path.__exit__"G
Union[builtins.bool,None]
builtins.bool"builtins.bool
None*$
self
pathlib.Path"pathlib.Path*ó
exc_typeä
(Union[Type[builtins.BaseException],None]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException
None*o
	exc_valueb
"Union[builtins.BaseException,None]0
builtins.BaseException"builtins.BaseException
None*f
	tracebackY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
Nonez35z36z37z38z39z310*Ä
cwdpathlib.Path.cwd"

pathlib._P*-
cls$
Type[pathlib._P]

pathlib._P0:classmethodpz35z36z37z38z39z310*|
statpathlib.Path.stat" 
os.stat_result"os.stat_result*&
self
pathlib.Path"pathlib.Pathz35z36z37z38z39z310*é
chmodpathlib.Path.chmod"
None*&
self
pathlib.Path"pathlib.Path*&
mode
builtins.int"builtins.intz35z36z37z38z39z310*~
existspathlib.Path.exists"
builtins.bool"builtins.bool*&
self
pathlib.Path"pathlib.Pathz35z36z37z38z39z310*◊
globpathlib.Path.glob"^
&typing.Generator[pathlib._P,None,None]

pathlib._P
None
None"typing.Generator*
self

pathlib._P*)
pattern
builtins.str"builtins.strz35z36z37z38z39z310*z
grouppathlib.Path.group"
builtins.str"builtins.str*&
self
pathlib.Path"pathlib.Pathz35z36z37z38z39z310*~
is_dirpathlib.Path.is_dir"
builtins.bool"builtins.bool*&
self
pathlib.Path"pathlib.Pathz35z36z37z38z39z310*Ä
is_filepathlib.Path.is_file"
builtins.bool"builtins.bool*&
self
pathlib.Path"pathlib.Pathz35z36z37z38z39z310*Ü

is_symlinkpathlib.Path.is_symlink"
builtins.bool"builtins.bool*&
self
pathlib.Path"pathlib.Pathz35z36z37z38z39z310*Ñ
	is_socketpathlib.Path.is_socket"
builtins.bool"builtins.bool*&
self
pathlib.Path"pathlib.Pathz35z36z37z38z39z310*Ä
is_fifopathlib.Path.is_fifo"
builtins.bool"builtins.bool*&
self
pathlib.Path"pathlib.Pathz35z36z37z38z39z310*ê
is_block_devicepathlib.Path.is_block_device"
builtins.bool"builtins.bool*&
self
pathlib.Path"pathlib.Pathz35z36z37z38z39z310*é
is_char_devicepathlib.Path.is_char_device"
builtins.bool"builtins.bool*&
self
pathlib.Path"pathlib.Pathz35z36z37z38z39z310*≤
iterdirpathlib.Path.iterdir"^
&typing.Generator[pathlib._P,None,None]

pathlib._P
None
None"typing.Generator*
self

pathlib._Pz35z36z37z38z39z310*ê
lchmodpathlib.Path.lchmod"
None*&
self
pathlib.Path"pathlib.Path*&
mode
builtins.int"builtins.intz35z36z37z38z39z310*~
lstatpathlib.Path.lstat" 
os.stat_result"os.stat_result*&
self
pathlib.Path"pathlib.Pathz35z36z37z38z39z310*Ô
mkdirpathlib.Path.mkdir"
None*&
self
pathlib.Path"pathlib.Path*(
mode
builtins.int"builtins.int *-
parents
builtins.bool"builtins.bool *.
exist_ok
builtins.bool"builtins.bool z35z36z37z38z39z310*z
ownerpathlib.Path.owner"
builtins.str"builtins.str*&
self
pathlib.Path"pathlib.Pathz35z36z37z38z39z310*’
renamepathlib.Path.rename"
None*&
self
pathlib.Path"pathlib.Path*x
targetl
$Union[builtins.str,pathlib.PurePath]
builtins.str"builtins.str$
pathlib.PurePath"pathlib.PurePathz35z36z37*Œ
renamepathlib.Path.rename"

pathlib._P*
self

pathlib._P*x
targetl
$Union[builtins.str,pathlib.PurePath]
builtins.str"builtins.str$
pathlib.PurePath"pathlib.PurePathz38z39z310*◊
replacepathlib.Path.replace"
None*&
self
pathlib.Path"pathlib.Path*x
targetl
$Union[builtins.str,pathlib.PurePath]
builtins.str"builtins.str$
pathlib.PurePath"pathlib.PurePathz35z36z37*–
replacepathlib.Path.replace"

pathlib._P*
self

pathlib._P*x
targetl
$Union[builtins.str,pathlib.PurePath]
builtins.str"builtins.str$
pathlib.PurePath"pathlib.PurePathz38z39z310*ê
resolvepathlib.Path.resolve"

pathlib._P*
self

pathlib._P*,
strict
builtins.bool"builtins.bool z35z36z37z38z39z310*Ÿ
rglobpathlib.Path.rglob"^
&typing.Generator[pathlib._P,None,None]

pathlib._P
None
None"typing.Generator*
self

pathlib._P*)
pattern
builtins.str"builtins.strz35z36z37z38z39z310*f
rmdirpathlib.Path.rmdir"
None*&
self
pathlib.Path"pathlib.Pathz35z36z37z38z39z310*ô

symlink_topathlib.Path.symlink_to"
None*&
self
pathlib.Path"pathlib.Path*l
target`
 Union[builtins.str,pathlib.Path]
builtins.str"builtins.str
pathlib.Path"pathlib.Path*9
target_is_directory
builtins.bool"builtins.bool z35z36z37z38z39z310*¿
touchpathlib.Path.touch"
None*&
self
pathlib.Path"pathlib.Path*(
mode
builtins.int"builtins.int *.
exist_ok
builtins.bool"builtins.bool z35z36z37z38z39z310*[
unlinkpathlib.Path.unlink"
None*&
self
pathlib.Path"pathlib.Pathz35z36z37*é
unlinkpathlib.Path.unlink"
None*&
self
pathlib.Path"pathlib.Path*0

missing_ok
builtins.bool"builtins.bool z38z39z310*Ç
homepathlib.Path.home"

pathlib._P*-
cls$
Type[pathlib._P]

pathlib._P0:classmethodpz35z36z37z38z39z310*d
absolutepathlib.Path.absolute"

pathlib._P*
self

pathlib._Pz35z36z37z38z39z310*h

expanduserpathlib.Path.expanduser"

pathlib._P*
self

pathlib._Pz35z36z37z38z39z310*à

read_bytespathlib.Path.read_bytes" 
builtins.bytes"builtins.bytes*&
self
pathlib.Path"pathlib.Pathz35z36z37z38z39z310*¨
	read_textpathlib.Path.read_text"
builtins.str"builtins.str*&
self
pathlib.Path"pathlib.Path*T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None z35z36z37z38z39z310*“
samefilepathlib.Path.samefile"
builtins.bool"builtins.bool*&
self
pathlib.Path"pathlib.Path*Õ

other_pathº
<Union[builtins.str,builtins.bytes,builtins.int,pathlib.Path]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
builtins.int"builtins.int
pathlib.Path"pathlib.Pathz35z36z37z38z39z310*≤
write_bytespathlib.Path.write_bytes"
builtins.int"builtins.int*&
self
pathlib.Path"pathlib.Path**
data 
builtins.bytes"builtins.bytesz35z36z37z38z39z310*÷

write_textpathlib.Path.write_text"
builtins.int"builtins.int*&
self
pathlib.Path"pathlib.Path*&
data
builtins.str"builtins.str*T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None z35z36z37z38z39z310*z
is_mountpathlib.Path.is_mount"
builtins.bool"builtins.bool*&
self
pathlib.Path"pathlib.Pathz37z38z39z310*Œ
link_topathlib.Path.link_to"
None*&
self
pathlib.Path"pathlib.Path*Ì
target‡
NUnion[TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]],builtins.bytes]È
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPath 
builtins.bytes"builtins.bytesz38z39z310*T
readlinkpathlib.Path.readlink"

pathlib._P*
self

pathlib._Pz39z3102Õœ
openpathlib.Path.open≥B
openpathlib.Path.open"$
io.TextIOWrapper"io.TextIOWrapper*&
self
pathlib.Path"pathlib.Path*ç?
modeÄ?
’	TypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]]]ã5
 	Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]]‰
—TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]Î
∆Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"_typeshed.OpenTextModeUpdating–
◊TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]“
ÃUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"_typeshed.OpenTextModeWritingˇ	
ôTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]ø
éUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"_typeshed.OpenTextModeReading"_typeshed.OpenTextMode *-
	buffering
builtins.int"builtins.int *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
newlineD
Union[builtins.str,None]
builtins.str"builtins.str
None 0:overloadXë0
openpathlib.Path.open"
	io.FileIO"	io.FileIO*&
self
pathlib.Path"pathlib.Path*î.
modeâ.
ãTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]]]‹&
ÄUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]]æ
°TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]Û
ñUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str" _typeshed.OpenBinaryModeUpdatingÌ
¡TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]É
∂Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"_typeshed.OpenBinaryModeReading£
ïTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]Â
äUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"_typeshed.OpenBinaryModeWriting"_typeshed.OpenBinaryMode*F
	buffering7
Literal[builtins.int]	
builtins.int"builtins.int*
encoding
None *
errors
None *
newline
None 0:overloadXÀ
openpathlib.Path.open"&
io.BufferedRandom"io.BufferedRandom*&
self
pathlib.Path"pathlib.Path*…
modeæ
°TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]Û
ñUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str" _typeshed.OpenBinaryModeUpdating*∫
	buffering®
2Union[Literal[builtins.int],Literal[builtins.int]]7
Literal[builtins.int]	
builtins.int"builtins.int7
Literal[builtins.int]	
builtins.int"builtins.int *
encoding
None *
errors
None *
newline
None 0:overloadX∞
openpathlib.Path.open"&
io.BufferedWriter"io.BufferedWriter*&
self
pathlib.Path"pathlib.Path*Æ
mode£
ïTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]Â
äUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"_typeshed.OpenBinaryModeWriting*∫
	buffering®
2Union[Literal[builtins.int],Literal[builtins.int]]7
Literal[builtins.int]	
builtins.int"builtins.int7
Literal[builtins.int]	
builtins.int"builtins.int *
encoding
None *
errors
None *
newline
None 0:overloadX˙	
openpathlib.Path.open"&
io.BufferedReader"io.BufferedReader*&
self
pathlib.Path"pathlib.Path*¯
modeÌ
¡TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]É
∂Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"_typeshed.OpenBinaryModeReading*∫
	buffering®
2Union[Literal[builtins.int],Literal[builtins.int]]7
Literal[builtins.int]	
builtins.int"builtins.int7
Literal[builtins.int]	
builtins.int"builtins.int *
encoding
None *
errors
None *
newline
None 0:overloadXÇ0
openpathlib.Path.open""
typing.BinaryIO"typing.BinaryIO*&
self
pathlib.Path"pathlib.Path*î.
modeâ.
ãTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]]]‹&
ÄUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]]æ
°TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]Û
ñUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str" _typeshed.OpenBinaryModeUpdatingÌ
¡TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]É
∂Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"_typeshed.OpenBinaryModeReading£
ïTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]Â
äUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"_typeshed.OpenBinaryModeWriting"_typeshed.OpenBinaryMode*+
	buffering
builtins.int"builtins.int*
encoding
None *
errors
None *
newline
None 0:overloadXÀ
openpathlib.Path.open"$
typing.IO[Any]
Any"	typing.IO*&
self
pathlib.Path"pathlib.Path*&
mode
builtins.str"builtins.str*-
	buffering
builtins.int"builtins.int *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
newlineD
Union[builtins.str,None]
builtins.str"builtins.str
None 0:overloadX"35"36"37"38"39"310j35j36j37j38j39j310\
	PosixPathpathlib.PosixPath"pathlib.Path"pathlib.PurePosixPathj35j36j37j38j39j310b
WindowsPathpathlib.WindowsPath"pathlib.Path"pathlib.PureWindowsPathj35j36j37j38j39j310