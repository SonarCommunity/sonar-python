
flask.viewsÞ
Viewflask.views.View"builtins.object*¯
dispatch_request!flask.views.View.dispatch_request"
Any*.
self$
flask.views.View"flask.views.View*
args
Any*
kwargs
Anyz35z36z37z38z39z310*è
as_viewflask.views.View.as_view"
Any*I
cls@
Type[flask.views.View]$
flask.views.View"flask.views.View*
name
Any*

class_args
Any*
class_kwargs
Any0:classmethodpz35z36z37z38z39z310j35j36j37j38j39j310rE
methodsflask.views.View.methods
Any*35*36*37*38*39*310ri
provide_automatic_options*flask.views.View.provide_automatic_options
Any*35*36*37*38*39*310rK

decoratorsflask.views.View.decorators
Any*35*36*37*38*39*310¤
MethodViewTypeflask.views.MethodViewType"builtins.type*Í
__init__#flask.views.MethodViewType.__init__"
None*B
self8
flask.views.MethodViewType"flask.views.MethodViewType*
name
Any*
bases
Any*
d
Anyz35z36z37z38z39z310j35j36j37j38j39j310±

MethodViewflask.views.MethodView"flask.views.View*Á
dispatch_request'flask.views.MethodView.dispatch_request"
Any*:
self0
flask.views.MethodView"flask.views.MethodView*
args
Any*
kwargs
Anyz35z36z37z38z39z310@bflask.views.MethodViewTypej35j36j37j38j39j310*N
Any
typing.Any"
builtins.object"builtins.object*35*36*37*38*39*310*T
http_method_funcsflask.views.http_method_funcs
Any*35*36*37*38*39*310