
urllib2⁄
URLErrorurllib2.URLError"builtins.IOErrorj27r•
reasonurllib2.URLError.reason~
*Union[builtins.str,builtins.BaseException]
builtins.str"builtins.str0
builtins.BaseException"builtins.BaseException*27´
	HTTPErrorurllib2.HTTPError"urllib2.URLError"urllib.addinfourl*˚
__init__urllib2.HTTPError.__init__"
None*0
self&
urllib2.HTTPError"urllib2.HTTPError*
url
Any*&
code
builtins.int"builtins.int*%
msg
builtins.str"builtins.str*Å
hdrsw
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping*.
fp&
urllib.addinfourl"urllib.addinfourlz27j27r@
codeurllib2.HTTPError.code
builtins.int"builtins.int*27r°
headersurllib2.HTTPError.headersw
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping*27 
Requesturllib2.Request"builtins.object*Ò
__init__urllib2.Request.__init__"
None*,
self"
urllib2.Request"urllib2.Request*%
url
builtins.str"builtins.str*P
dataD
Union[builtins.str,None]
builtins.str"builtins.str
None *Ñ
headersu
(builtins.dict[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"builtins.dict *[
origin_req_hostD
Union[builtins.str,None]
builtins.str"builtins.str
None *2
unverifiable
builtins.bool"builtins.bool z27*B
__getattr__urllib2.Request.__getattr__*
self*
attrz27*x

get_methodurllib2.Request.get_method"
builtins.str"builtins.str*,
self"
urllib2.Request"urllib2.Requestz27*s
add_dataurllib2.Request.add_data"
None*,
self"
urllib2.Request"urllib2.Request*
data
Anyz27*v
has_dataurllib2.Request.has_data"
builtins.bool"builtins.bool*,
self"
urllib2.Request"urllib2.Requestz27*t
get_dataurllib2.Request.get_data"
builtins.str"builtins.str*,
self"
urllib2.Request"urllib2.Requestz27*|
get_full_urlurllib2.Request.get_full_url"
builtins.str"builtins.str*,
self"
urllib2.Request"urllib2.Requestz27*2
get_typeurllib2.Request.get_type*
selfz27*t
get_hosturllib2.Request.get_host"
builtins.str"builtins.str*,
self"
urllib2.Request"urllib2.Requestz27*:
get_selectorurllib2.Request.get_selector*
selfz27*à
	set_proxyurllib2.Request.set_proxy"
None*,
self"
urllib2.Request"urllib2.Request*
host
Any*
type
Anyz27*x
	has_proxyurllib2.Request.has_proxy"
builtins.bool"builtins.bool*,
self"
urllib2.Request"urllib2.Requestz27*ä
get_origin_req_host#urllib2.Request.get_origin_req_host"
builtins.str"builtins.str*,
self"
urllib2.Request"urllib2.Requestz27*Ñ
is_unverifiableurllib2.Request.is_unverifiable"
builtins.bool"builtins.bool*,
self"
urllib2.Request"urllib2.Requestz27*≤

add_headerurllib2.Request.add_header"
None*,
self"
urllib2.Request"urllib2.Request*%
key
builtins.str"builtins.str*%
val
builtins.str"builtins.strz27*Ã
add_unredirected_header'urllib2.Request.add_unredirected_header"
None*,
self"
urllib2.Request"urllib2.Request*%
key
builtins.str"builtins.str*%
val
builtins.str"builtins.strz27*©

has_headerurllib2.Request.has_header"
builtins.bool"builtins.bool*,
self"
urllib2.Request"urllib2.Request*-
header_name
builtins.str"builtins.strz27*¸

get_headerurllib2.Request.get_header"
builtins.str"builtins.str*,
self"
urllib2.Request"urllib2.Request*-
header_name
builtins.str"builtins.str*S
defaultD
Union[builtins.str,None]
builtins.str"builtins.str
None z27*:
header_itemsurllib2.Request.header_items*
selfz27j27r>
hosturllib2.Request.host
builtins.str"builtins.str*27r>
porturllib2.Request.port
builtins.str"builtins.str*27r>
dataurllib2.Request.data
builtins.str"builtins.str*27rù
headersurllib2.Request.headersu
(builtins.dict[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"builtins.dict*27rP
unverifiableurllib2.Request.unverifiable
builtins.bool"builtins.bool*27rf
typeurllib2.Request.typeD
Union[builtins.str,None]
builtins.str"builtins.str
None*27rZ
origin_req_hosturllib2.Request.origin_req_host"
builtins.object"builtins.object*27r±
unredirected_hdrs!urllib2.Request.unredirected_hdrsu
(builtins.dict[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"builtins.dict*27rr
timeouturllib2.Request.timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None*27Ë
OpenerDirectorurllib2.OpenerDirector"builtins.object*¥
add_handler"urllib2.OpenerDirector.add_handler"
None*:
self0
urllib2.OpenerDirector"urllib2.OpenerDirector*7
handler*
urllib2.BaseHandler"urllib2.BaseHandlerz27*—
openurllib2.OpenerDirector.open"S
Union[urllib.addinfourl,None]&
urllib.addinfourl"urllib.addinfourl
None*:
self0
urllib2.OpenerDirector"urllib2.OpenerDirector*±
fullurl£
FUnion[urllib2.Request,TypeAlias[Union[builtins.str,builtins.unicode]]]"
urllib2.Request"urllib2.Request≤
/TypeAlias[Union[builtins.str,builtins.unicode]]l
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode"urllib2._string*á
data{
)Union[builtins.str,builtins.unicode,None]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None z27*¬
errorurllib2.OpenerDirector.error"
Any*:
self0
urllib2.OpenerDirector"urllib2.OpenerDirector*æ
proto≤
/TypeAlias[Union[builtins.str,builtins.unicode]]l
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode"urllib2._string*
args
Anyz27j27rÿ

addheaders!urllib2.OpenerDirector.addheaders¢
/builtins.list[Tuple[builtins.str,builtins.str]]`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"builtins.list*27ì
BaseHandlerurllib2.BaseHandler"builtins.object*Æ

add_parenturllib2.BaseHandler.add_parent"
None*4
self*
urllib2.BaseHandler"urllib2.BaseHandler*<
parent0
urllib2.OpenerDirector"urllib2.OpenerDirectorz27*f
closeurllib2.BaseHandler.close"
None*4
self*
urllib2.BaseHandler"urllib2.BaseHandlerz27*é
__lt__urllib2.BaseHandler.__lt__"
builtins.bool"builtins.bool*2
self*
urllib2.BaseHandler"urllib2.BaseHandler*
other
Anyz27j27rT
handler_order!urllib2.BaseHandler.handler_order
builtins.int"builtins.int*27rZ
parenturllib2.BaseHandler.parent0
urllib2.OpenerDirector"urllib2.OpenerDirector*27≠
HTTPErrorProcessorurllib2.HTTPErrorProcessor"urllib2.BaseHandler*b
http_response(urllib2.HTTPErrorProcessor.http_response*
self*
request*
responsez27j27©
HTTPDefaultErrorHandlerurllib2.HTTPDefaultErrorHandler"urllib2.BaseHandler*”
http_error_default2urllib2.HTTPDefaultErrorHandler.http_error_default"
Any*L
selfB
urllib2.HTTPDefaultErrorHandler"urllib2.HTTPDefaultErrorHandler*+
req"
urllib2.Request"urllib2.Request*.
fp&
urllib.addinfourl"urllib.addinfourl*&
code
builtins.int"builtins.int*%
msg
builtins.str"builtins.str*Å
hdrsw
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mappingz27j27Õ
HTTPRedirectHandlerurllib2.HTTPRedirectHandler"urllib2.BaseHandler*€
redirect_request,urllib2.HTTPRedirectHandler.redirect_request"
Any*D
self:
urllib2.HTTPRedirectHandler"urllib2.HTTPRedirectHandler*+
req"
urllib2.Request"urllib2.Request*.
fp&
urllib.addinfourl"urllib.addinfourl*&
code
builtins.int"builtins.int*%
msg
builtins.str"builtins.str*Ñ
headersw
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping*
newurl
Anyz27*¬
http_error_301*urllib2.HTTPRedirectHandler.http_error_301"
Any*D
self:
urllib2.HTTPRedirectHandler"urllib2.HTTPRedirectHandler*+
req"
urllib2.Request"urllib2.Request*.
fp&
urllib.addinfourl"urllib.addinfourl*&
code
builtins.int"builtins.int*%
msg
builtins.str"builtins.str*Ñ
headersw
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mappingz27*¬
http_error_302*urllib2.HTTPRedirectHandler.http_error_302"
Any*D
self:
urllib2.HTTPRedirectHandler"urllib2.HTTPRedirectHandler*+
req"
urllib2.Request"urllib2.Request*.
fp&
urllib.addinfourl"urllib.addinfourl*&
code
builtins.int"builtins.int*%
msg
builtins.str"builtins.str*Ñ
headersw
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mappingz27*¬
http_error_303*urllib2.HTTPRedirectHandler.http_error_303"
Any*D
self:
urllib2.HTTPRedirectHandler"urllib2.HTTPRedirectHandler*+
req"
urllib2.Request"urllib2.Request*.
fp&
urllib.addinfourl"urllib.addinfourl*&
code
builtins.int"builtins.int*%
msg
builtins.str"builtins.str*Ñ
headersw
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mappingz27*¬
http_error_307*urllib2.HTTPRedirectHandler.http_error_307"
Any*D
self:
urllib2.HTTPRedirectHandler"urllib2.HTTPRedirectHandler*+
req"
urllib2.Request"urllib2.Request*.
fp&
urllib.addinfourl"urllib.addinfourl*&
code
builtins.int"builtins.int*%
msg
builtins.str"builtins.str*Ñ
headersw
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mappingz27j27rX
max_repeats'urllib2.HTTPRedirectHandler.max_repeats
builtins.int"builtins.int*27rb
max_redirections,urllib2.HTTPRedirectHandler.max_redirections
builtins.int"builtins.int*27rP
inf_msg#urllib2.HTTPRedirectHandler.inf_msg
builtins.str"builtins.str*27Ó
ProxyHandlerurllib2.ProxyHandler"urllib2.BaseHandler*æ
__init__urllib2.ProxyHandler.__init__"
None*6
self,
urllib2.ProxyHandler"urllib2.ProxyHandler*Ã
proxiesº
5Union[typing.Mapping[builtins.str,builtins.str],None]w
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping
None z27*∆

proxy_openurllib2.ProxyHandler.proxy_open"
Any*6
self,
urllib2.ProxyHandler"urllib2.ProxyHandler*+
req"
urllib2.Request"urllib2.Request*
proxy
Any*
type
Anyz27j27r§
proxiesurllib2.ProxyHandler.proxiesw
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping*27£
HTTPPasswordMgrurllib2.HTTPPasswordMgr"builtins.object*x
__init__ urllib2.HTTPPasswordMgr.__init__"
None*<
self2
urllib2.HTTPPasswordMgr"urllib2.HTTPPasswordMgrz27*ã
add_password$urllib2.HTTPPasswordMgr.add_password"
None*<
self2
urllib2.HTTPPasswordMgr"urllib2.HTTPPasswordMgr*[
realmP
Union[builtins.unicode,None]$
builtins.unicode"builtins.unicode
None*…
uriø
9Union[builtins.unicode,typing.Sequence[builtins.unicode]]$
builtins.unicode"builtins.unicodeZ
!typing.Sequence[builtins.unicode]$
builtins.unicode"builtins.unicode"typing.Sequence*.
user$
builtins.unicode"builtins.unicode*0
passwd$
builtins.unicode"builtins.unicodez27*∏
find_user_password*urllib2.HTTPPasswordMgr.find_user_password"$
Tuple[Any,Any]
Any
Any*<
self2
urllib2.HTTPPasswordMgr"urllib2.HTTPPasswordMgr*[
realmP
Union[builtins.unicode,None]$
builtins.unicode"builtins.unicode
None*1
authuri$
builtins.unicode"builtins.unicodez27*ã

reduce_uri"urllib2.HTTPPasswordMgr.reduce_uri"$
Tuple[Any,Any]
Any
Any*<
self2
urllib2.HTTPPasswordMgr"urllib2.HTTPPasswordMgr*º
uri≤
/TypeAlias[Union[builtins.str,builtins.unicode]]l
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode"urllib2._string*2
default_port
builtins.bool"builtins.bool z27*ê
	is_suburi!urllib2.HTTPPasswordMgr.is_suburi"
builtins.bool"builtins.bool*<
self2
urllib2.HTTPPasswordMgr"urllib2.HTTPPasswordMgr*Ω
base≤
/TypeAlias[Union[builtins.str,builtins.unicode]]l
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode"urllib2._string*Ω
test≤
/TypeAlias[Union[builtins.str,builtins.unicode]]l
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode"urllib2._stringz27j27g
HTTPPasswordMgrWithDefaultRealm'urllib2.HTTPPasswordMgrWithDefaultRealm"urllib2.HTTPPasswordMgrj27ö
AbstractBasicAuthHandler urllib2.AbstractBasicAuthHandler"builtins.object*é
__init__)urllib2.AbstractBasicAuthHandler.__init__"
None*N
selfD
 urllib2.AbstractBasicAuthHandler" urllib2.AbstractBasicAuthHandler*y
password_mgre
#Union[urllib2.HTTPPasswordMgr,None]2
urllib2.HTTPPasswordMgr"urllib2.HTTPPasswordMgr
None z27*¶
add_password-urllib2.AbstractBasicAuthHandler.add_password"
None*N
selfD
 urllib2.AbstractBasicAuthHandler" urllib2.AbstractBasicAuthHandler*[
realmP
Union[builtins.unicode,None]$
builtins.unicode"builtins.unicode
None*…
uriø
9Union[builtins.unicode,typing.Sequence[builtins.unicode]]$
builtins.unicode"builtins.unicodeZ
!typing.Sequence[builtins.unicode]$
builtins.unicode"builtins.unicode"typing.Sequence*.
user$
builtins.unicode"builtins.unicode*0
passwd$
builtins.unicode"builtins.unicodez27*â
http_error_auth_reqed6urllib2.AbstractBasicAuthHandler.http_error_auth_reqed"
Any*N
selfD
 urllib2.AbstractBasicAuthHandler" urllib2.AbstractBasicAuthHandler*
authreq
Any*
host
Any*+
req"
urllib2.Request"urllib2.Request*Ñ
headersw
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mappingz27*Ä
retry_http_basic_auth6urllib2.AbstractBasicAuthHandler.retry_http_basic_auth"
Any*N
selfD
 urllib2.AbstractBasicAuthHandler" urllib2.AbstractBasicAuthHandler*
host
Any*+
req"
urllib2.Request"urllib2.Request*
realm
Anyz27j27í
HTTPBasicAuthHandlerurllib2.HTTPBasicAuthHandler" urllib2.AbstractBasicAuthHandler"urllib2.BaseHandler*≈
http_error_401+urllib2.HTTPBasicAuthHandler.http_error_401"
Any*F
self<
urllib2.HTTPBasicAuthHandler"urllib2.HTTPBasicAuthHandler*+
req"
urllib2.Request"urllib2.Request*.
fp&
urllib.addinfourl"urllib.addinfourl*&
code
builtins.int"builtins.int*%
msg
builtins.str"builtins.str*Ñ
headersw
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mappingz27j27rY
auth_header(urllib2.HTTPBasicAuthHandler.auth_header
builtins.str"builtins.str*27ò
ProxyBasicAuthHandlerurllib2.ProxyBasicAuthHandler" urllib2.AbstractBasicAuthHandler"urllib2.BaseHandler*»
http_error_407,urllib2.ProxyBasicAuthHandler.http_error_407"
Any*H
self>
urllib2.ProxyBasicAuthHandler"urllib2.ProxyBasicAuthHandler*+
req"
urllib2.Request"urllib2.Request*.
fp&
urllib.addinfourl"urllib.addinfourl*&
code
builtins.int"builtins.int*%
msg
builtins.str"builtins.str*Ñ
headersw
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mappingz27j27rZ
auth_header)urllib2.ProxyBasicAuthHandler.auth_header
builtins.str"builtins.str*27í
AbstractDigestAuthHandler!urllib2.AbstractDigestAuthHandler"builtins.object*ã
__init__*urllib2.AbstractDigestAuthHandler.__init__"
None*P
selfF
!urllib2.AbstractDigestAuthHandler"!urllib2.AbstractDigestAuthHandler*s
passwde
#Union[urllib2.HTTPPasswordMgr,None]2
urllib2.HTTPPasswordMgr"urllib2.HTTPPasswordMgr
None z27*©
add_password.urllib2.AbstractDigestAuthHandler.add_password"
None*P
selfF
!urllib2.AbstractDigestAuthHandler"!urllib2.AbstractDigestAuthHandler*[
realmP
Union[builtins.unicode,None]$
builtins.unicode"builtins.unicode
None*…
uriø
9Union[builtins.unicode,typing.Sequence[builtins.unicode]]$
builtins.unicode"builtins.unicodeZ
!typing.Sequence[builtins.unicode]$
builtins.unicode"builtins.unicode"typing.Sequence*.
user$
builtins.unicode"builtins.unicode*0
passwd$
builtins.unicode"builtins.unicodez27*®
reset_retry_count3urllib2.AbstractDigestAuthHandler.reset_retry_count"
None*P
selfF
!urllib2.AbstractDigestAuthHandler"!urllib2.AbstractDigestAuthHandlerz27*ª
http_error_auth_reqed7urllib2.AbstractDigestAuthHandler.http_error_auth_reqed"
None*P
selfF
!urllib2.AbstractDigestAuthHandler"!urllib2.AbstractDigestAuthHandler*-
auth_header
builtins.str"builtins.str*&
host
builtins.str"builtins.str*+
req"
urllib2.Request"urllib2.Request*Ñ
headersw
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mappingz27*€
retry_http_digest_auth8urllib2.AbstractDigestAuthHandler.retry_http_digest_auth"\
 Union[httplib.HTTPResponse,None],
httplib.HTTPResponse"httplib.HTTPResponse
None*P
selfF
!urllib2.AbstractDigestAuthHandler"!urllib2.AbstractDigestAuthHandler*+
req"
urllib2.Request"urllib2.Request*&
auth
builtins.str"builtins.strz27*◊

get_cnonce,urllib2.AbstractDigestAuthHandler.get_cnonce"
builtins.str"builtins.str*P
selfF
!urllib2.AbstractDigestAuthHandler"!urllib2.AbstractDigestAuthHandler*'
nonce
builtins.str"builtins.strz27*Ì
get_authorization3urllib2.AbstractDigestAuthHandler.get_authorization"
builtins.str"builtins.str*P
selfF
!urllib2.AbstractDigestAuthHandler"!urllib2.AbstractDigestAuthHandler*+
req"
urllib2.Request"urllib2.Request*Å
chalw
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mappingz27*∂
get_algorithm_impls5urllib2.AbstractDigestAuthHandler.get_algorithm_impls"‰
FTuple[CallableType[builtins.function],CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.functionK
CallableType[builtins.function]&
builtins.function"builtins.function*P
selfF
!urllib2.AbstractDigestAuthHandler"!urllib2.AbstractDigestAuthHandler*+
	algorithm
builtins.str"builtins.strz27*∏
get_entity_digest3urllib2.AbstractDigestAuthHandler.get_entity_digest"D
Union[builtins.str,None]
builtins.str"builtins.str
None*P
selfF
!urllib2.AbstractDigestAuthHandler"!urllib2.AbstractDigestAuthHandler*N
dataD
Union[builtins.str,None]
builtins.str"builtins.str
None*Å
chalw
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mappingz27j27˘
HTTPDigestAuthHandlerurllib2.HTTPDigestAuthHandler"urllib2.BaseHandler"!urllib2.AbstractDigestAuthHandler*»
http_error_401,urllib2.HTTPDigestAuthHandler.http_error_401"
Any*H
self>
urllib2.HTTPDigestAuthHandler"urllib2.HTTPDigestAuthHandler*+
req"
urllib2.Request"urllib2.Request*.
fp&
urllib.addinfourl"urllib.addinfourl*&
code
builtins.int"builtins.int*%
msg
builtins.str"builtins.str*Ñ
headersw
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mappingz27j27rZ
auth_header)urllib2.HTTPDigestAuthHandler.auth_header
builtins.str"builtins.str*27r^
handler_order+urllib2.HTTPDigestAuthHandler.handler_order
builtins.int"builtins.int*27Ä
ProxyDigestAuthHandlerurllib2.ProxyDigestAuthHandler"urllib2.BaseHandler"!urllib2.AbstractDigestAuthHandler*À
http_error_407-urllib2.ProxyDigestAuthHandler.http_error_407"
Any*J
self@
urllib2.ProxyDigestAuthHandler"urllib2.ProxyDigestAuthHandler*+
req"
urllib2.Request"urllib2.Request*.
fp&
urllib.addinfourl"urllib.addinfourl*&
code
builtins.int"builtins.int*%
msg
builtins.str"builtins.str*Ñ
headersw
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mappingz27j27r[
auth_header*urllib2.ProxyDigestAuthHandler.auth_header
builtins.str"builtins.str*27r_
handler_order,urllib2.ProxyDigestAuthHandler.handler_order
builtins.int"builtins.int*27˛
AbstractHTTPHandlerurllib2.AbstractHTTPHandler"urllib2.BaseHandler*¥
__init__$urllib2.AbstractHTTPHandler.__init__"
None*D
self:
urllib2.AbstractHTTPHandler"urllib2.AbstractHTTPHandler*.

debuglevel
builtins.int"builtins.int z27*√
set_http_debuglevel/urllib2.AbstractHTTPHandler.set_http_debuglevel"
None*D
self:
urllib2.AbstractHTTPHandler"urllib2.AbstractHTTPHandler*'
level
builtins.int"builtins.intz27*’
do_request_'urllib2.AbstractHTTPHandler.do_request_""
urllib2.Request"urllib2.Request*D
self:
urllib2.AbstractHTTPHandler"urllib2.AbstractHTTPHandler*/
request"
urllib2.Request"urllib2.Requestz27*€
do_open#urllib2.AbstractHTTPHandler.do_open"&
urllib.addinfourl"urllib.addinfourl*D
self:
urllib2.AbstractHTTPHandler"urllib2.AbstractHTTPHandler*P

http_class@
httplib.HTTPConnectionProtocol"httplib.HTTPConnectionProtocol*+
req"
urllib2.Request"urllib2.Request*:
http_conn_args&
Union[Any,None]
Any
Nonez27j27¡
HTTPHandlerurllib2.HTTPHandler"urllib2.AbstractHTTPHandler*π
	http_openurllib2.HTTPHandler.http_open"&
urllib.addinfourl"urllib.addinfourl*4
self*
urllib2.HTTPHandler"urllib2.HTTPHandler*+
req"
urllib2.Request"urllib2.Requestz27*ø
http_request urllib2.HTTPHandler.http_request""
urllib2.Request"urllib2.Request*4
self*
urllib2.HTTPHandler"urllib2.HTTPHandler*/
request"
urllib2.Request"urllib2.Requestz27j27 
HTTPSHandlerurllib2.HTTPSHandler"urllib2.AbstractHTTPHandler*˙
__init__urllib2.HTTPSHandler.__init__"
None*6
self,
urllib2.HTTPSHandler"urllib2.HTTPSHandler*.

debuglevel
builtins.int"builtins.int *Y
contextJ
Union[ssl.SSLContext,None] 
ssl.SSLContext"ssl.SSLContext
None z27*æ

https_openurllib2.HTTPSHandler.https_open"&
urllib.addinfourl"urllib.addinfourl*6
self,
urllib2.HTTPSHandler"urllib2.HTTPSHandler*+
req"
urllib2.Request"urllib2.Requestz27*ƒ
https_request"urllib2.HTTPSHandler.https_request""
urllib2.Request"urllib2.Request*6
self,
urllib2.HTTPSHandler"urllib2.HTTPSHandler*/
request"
urllib2.Request"urllib2.Requestz27j27¢
HTTPCookieProcessorurllib2.HTTPCookieProcessor"urllib2.BaseHandler*Ω
__init__$urllib2.HTTPCookieProcessor.__init__"
None*D
self:
urllib2.HTTPCookieProcessor"urllib2.HTTPCookieProcessor*7
	cookiejar&
Union[Any,None]
Any
None z27*º
http_request(urllib2.HTTPCookieProcessor.http_request"
Any*D
self:
urllib2.HTTPCookieProcessor"urllib2.HTTPCookieProcessor*/
request"
urllib2.Request"urllib2.Requestz27*’
http_response)urllib2.HTTPCookieProcessor.http_response"
Any*D
self:
urllib2.HTTPCookieProcessor"urllib2.HTTPCookieProcessor*/
request"
urllib2.Request"urllib2.Request*
response
Anyz27j27Ì
UnknownHandlerurllib2.UnknownHandler"urllib2.BaseHandler*©
unknown_open#urllib2.UnknownHandler.unknown_open"
Any*:
self0
urllib2.UnknownHandler"urllib2.UnknownHandler*+
req"
urllib2.Request"urllib2.Requestz27j27ª
FileHandlerurllib2.FileHandler"urllib2.BaseHandler*ö
	file_openurllib2.FileHandler.file_open"
Any*4
self*
urllib2.FileHandler"urllib2.FileHandler*+
req"
urllib2.Request"urllib2.Requestz27*8
	get_namesurllib2.FileHandler.get_names*
selfz27*¶
open_local_file#urllib2.FileHandler.open_local_file"
Any*4
self*
urllib2.FileHandler"urllib2.FileHandler*+
req"
urllib2.Request"urllib2.Requestz27j27œ

FTPHandlerurllib2.FTPHandler"urllib2.BaseHandler*ï
ftp_openurllib2.FTPHandler.ftp_open"
Any*2
self(
urllib2.FTPHandler"urllib2.FTPHandler*+
req"
urllib2.Request"urllib2.Requestz27*|
connect_ftpurllib2.FTPHandler.connect_ftp*
self*
user*

passwd*
host*
port*
dirs*
timeoutz27j27∂
CacheFTPHandlerurllib2.CacheFTPHandler"urllib2.FTPHandler*x
__init__ urllib2.CacheFTPHandler.__init__"
None*<
self2
urllib2.CacheFTPHandler"urllib2.CacheFTPHandlerz27*Œ

setTimeout"urllib2.CacheFTPHandler.setTimeout"
Any*<
self2
urllib2.CacheFTPHandler"urllib2.CacheFTPHandler*Q
tJ
Union[builtins.float,None] 
builtins.float"builtins.float
Nonez27*¢
setMaxConns#urllib2.CacheFTPHandler.setMaxConns"
Any*<
self2
urllib2.CacheFTPHandler"urllib2.CacheFTPHandler*#
m
builtins.int"builtins.intz27*@
check_cache#urllib2.CacheFTPHandler.check_cache*
selfz27*@
clear_cache#urllib2.CacheFTPHandler.clear_cache*
selfz27j27ˇ
urlopenurllib2.urlopen"&
urllib.addinfourl"urllib.addinfourl*≠
url£
FUnion[urllib2.Request,TypeAlias[Union[builtins.str,builtins.unicode]]]"
urllib2.Request"urllib2.Request≤
/TypeAlias[Union[builtins.str,builtins.unicode]]l
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode"urllib2._string*á
data{
)Union[builtins.str,builtins.unicode,None]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *â
cafile{
)Union[builtins.str,builtins.unicode,None]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode
None *â
capath{
)Union[builtins.str,builtins.unicode,None]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode
None */
	cadefault
builtins.bool"builtins.bool *Y
contextJ
Union[ssl.SSLContext,None] 
ssl.SSLContext"ssl.SSLContext
None z27t
install_openerurllib2.install_opener"
None*<
opener0
urllib2.OpenerDirector"urllib2.OpenerDirectorz27õ
build_openerurllib2.build_opener"0
urllib2.OpenerDirector"urllib2.OpenerDirector*æ
handlersØ
4Union[urllib2.BaseHandler,Type[urllib2.BaseHandler]]*
urllib2.BaseHandler"urllib2.BaseHandlerI
Type[urllib2.BaseHandler]*
urllib2.BaseHandler"urllib2.BaseHandlerz27ä
parse_http_listurllib2.parse_http_list"@
builtins.list[typing.AnyStr]
typing.AnyStr"builtins.list*
s
typing.AnyStrz27⁄
parse_keqv_listurllib2.parse_keqv_list"a
*builtins.dict[typing.AnyStr,typing.AnyStr]
typing.AnyStr
typing.AnyStr"builtins.dict*G
l@
builtins.list[typing.AnyStr]
typing.AnyStr"builtins.listz27