
distutils.filelistdistutils.filelist€,
FileListdistutils.filelist.FileList"builtins.object2«
__init__$distutils.filelist.FileList.__init__"
None*D
self:
distutils.filelist.FileList"distutils.filelist.FileList*
warn
None *
debug_print
None z35z36z37z38z392˙
set_allfiles(distutils.filelist.FileList.set_allfiles"
None*D
self:
distutils.filelist.FileList"distutils.filelist.FileList*\
allfilesN
typing.Iterable[builtins.str]
builtins.str"builtins.str"typing.Iterablez35z36z37z38z392ª
findall#distutils.filelist.FileList.findall"
None*D
self:
distutils.filelist.FileList"distutils.filelist.FileList*'
dir
builtins.str"builtins.str z35z36z37z38z392¡
debug_print'distutils.filelist.FileList.debug_print"
None*D
self:
distutils.filelist.FileList"distutils.filelist.FileList*%
msg
builtins.str"builtins.strz35z36z37z38z392∏
append"distutils.filelist.FileList.append"
None*D
self:
distutils.filelist.FileList"distutils.filelist.FileList*&
item
builtins.str"builtins.strz35z36z37z38z392Î
extend"distutils.filelist.FileList.extend"
None*D
self:
distutils.filelist.FileList"distutils.filelist.FileList*Y
itemsN
typing.Iterable[builtins.str]
builtins.str"builtins.str"typing.Iterablez35z36z37z38z392å
sort distutils.filelist.FileList.sort"
None*D
self:
distutils.filelist.FileList"distutils.filelist.FileListz35z36z37z38z392¶
remove_duplicates-distutils.filelist.FileList.remove_duplicates"
None*D
self:
distutils.filelist.FileList"distutils.filelist.FileListz35z36z37z38z392÷
process_template_line1distutils.filelist.FileList.process_template_line"
None*D
self:
distutils.filelist.FileList"distutils.filelist.FileList*&
line
builtins.str"builtins.strz35z36z37z38z39:Å
include_pattern+distutils.filelist.FileList.include_pattern‰
include_pattern+distutils.filelist.FileList.include_pattern"
builtins.bool"builtins.bool*D
self:
distutils.filelist.FileList"distutils.filelist.FileList*)
pattern
builtins.str"builtins.str*q
anchorc
!Union[builtins.int,builtins.bool]
builtins.int"builtins.int
builtins.bool"builtins.bool *R
prefixD
Union[builtins.str,None]
builtins.str"builtins.str
None *Ω
is_regex¨
3Union[Literal[builtins.int],Literal[builtins.bool]]7
Literal[builtins.int]	
builtins.int"builtins.int:
Literal[builtins.bool]	
builtins.bool"builtins.bool 0:overloadX£
include_pattern+distutils.filelist.FileList.include_pattern"
builtins.bool"builtins.bool*D
self:
distutils.filelist.FileList"distutils.filelist.FileList*Æ
pattern†
0Union[builtins.str,typing.Pattern[builtins.str]]
builtins.str"builtins.strL
typing.Pattern[builtins.str]
builtins.str"builtins.str"typing.Pattern*Ω
is_regex¨
3Union[Literal[builtins.bool],Literal[builtins.int]]:
Literal[builtins.bool]	
builtins.bool"builtins.bool7
Literal[builtins.int]	
builtins.int"builtins.int 0:overloadXü
include_pattern+distutils.filelist.FileList.include_pattern"
builtins.bool"builtins.bool*D
self:
distutils.filelist.FileList"distutils.filelist.FileList*Æ
pattern†
0Union[builtins.str,typing.Pattern[builtins.str]]
builtins.str"builtins.strL
typing.Pattern[builtins.str]
builtins.str"builtins.str"typing.Pattern*q
anchorc
!Union[builtins.int,builtins.bool]
builtins.int"builtins.int
builtins.bool"builtins.bool *R
prefixD
Union[builtins.str,None]
builtins.str"builtins.str
None *s
is_regexc
!Union[builtins.int,builtins.bool]
builtins.int"builtins.int
builtins.bool"builtins.bool 0:overloadX"35"36"37"38"39:Å
exclude_pattern+distutils.filelist.FileList.exclude_pattern‰
exclude_pattern+distutils.filelist.FileList.exclude_pattern"
builtins.bool"builtins.bool*D
self:
distutils.filelist.FileList"distutils.filelist.FileList*)
pattern
builtins.str"builtins.str*q
anchorc
!Union[builtins.int,builtins.bool]
builtins.int"builtins.int
builtins.bool"builtins.bool *R
prefixD
Union[builtins.str,None]
builtins.str"builtins.str
None *Ω
is_regex¨
3Union[Literal[builtins.int],Literal[builtins.bool]]7
Literal[builtins.int]	
builtins.int"builtins.int:
Literal[builtins.bool]	
builtins.bool"builtins.bool 0:overloadX£
exclude_pattern+distutils.filelist.FileList.exclude_pattern"
builtins.bool"builtins.bool*D
self:
distutils.filelist.FileList"distutils.filelist.FileList*Æ
pattern†
0Union[builtins.str,typing.Pattern[builtins.str]]
builtins.str"builtins.strL
typing.Pattern[builtins.str]
builtins.str"builtins.str"typing.Pattern*Ω
is_regex¨
3Union[Literal[builtins.bool],Literal[builtins.int]]:
Literal[builtins.bool]	
builtins.bool"builtins.bool7
Literal[builtins.int]	
builtins.int"builtins.int 0:overloadXü
exclude_pattern+distutils.filelist.FileList.exclude_pattern"
builtins.bool"builtins.bool*D
self:
distutils.filelist.FileList"distutils.filelist.FileList*Æ
pattern†
0Union[builtins.str,typing.Pattern[builtins.str]]
builtins.str"builtins.strL
typing.Pattern[builtins.str]
builtins.str"builtins.str"typing.Pattern*q
anchorc
!Union[builtins.int,builtins.bool]
builtins.int"builtins.int
builtins.bool"builtins.bool *R
prefixD
Union[builtins.str,None]
builtins.str"builtins.str
None *s
is_regexc
!Union[builtins.int,builtins.bool]
builtins.int"builtins.int
builtins.bool"builtins.bool 0:overloadX"35"36"37"38"39r27r35r36r37r38r39"Æ
findalldistutils.filelist.findall"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*'
dir
builtins.str"builtins.str z35z36z37z38z39"à

glob_to_redistutils.filelist.glob_to_re"
builtins.str"builtins.str*)
pattern
builtins.str"builtins.strz35z36z37z38z39*•
translate_pattern$distutils.filelist.translate_pattern«
translate_pattern$distutils.filelist.translate_pattern"L
typing.Pattern[builtins.str]
builtins.str"builtins.str"typing.Pattern*)
pattern
builtins.str"builtins.str*q
anchorc
!Union[builtins.int,builtins.bool]
builtins.int"builtins.int
builtins.bool"builtins.bool *R
prefixD
Union[builtins.str,None]
builtins.str"builtins.str
None *Ω
is_regex¨
3Union[Literal[builtins.bool],Literal[builtins.int]]:
Literal[builtins.bool]	
builtins.bool"builtins.bool7
Literal[builtins.int]	
builtins.int"builtins.int 0:overloadXÜ
translate_pattern$distutils.filelist.translate_pattern"L
typing.Pattern[builtins.str]
builtins.str"builtins.str"typing.Pattern*Æ
pattern†
0Union[builtins.str,typing.Pattern[builtins.str]]
builtins.str"builtins.strL
typing.Pattern[builtins.str]
builtins.str"builtins.str"typing.Pattern*Ω
is_regex¨
3Union[Literal[builtins.bool],Literal[builtins.int]]:
Literal[builtins.bool]	
builtins.bool"builtins.bool7
Literal[builtins.int]	
builtins.int"builtins.int 0:overloadXÇ
translate_pattern$distutils.filelist.translate_pattern"L
typing.Pattern[builtins.str]
builtins.str"builtins.str"typing.Pattern*Æ
pattern†
0Union[builtins.str,typing.Pattern[builtins.str]]
builtins.str"builtins.strL
typing.Pattern[builtins.str]
builtins.str"builtins.str"typing.Pattern*q
anchorc
!Union[builtins.int,builtins.bool]
builtins.int"builtins.int
builtins.bool"builtins.bool *R
prefixD
Union[builtins.str,None]
builtins.str"builtins.str
None *s
is_regexc
!Union[builtins.int,builtins.bool]
builtins.int"builtins.int
builtins.bool"builtins.bool 0:overloadX"35"36"37"38"39