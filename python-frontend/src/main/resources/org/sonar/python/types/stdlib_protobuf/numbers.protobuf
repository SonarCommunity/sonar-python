
numbersŸ
_ComplexLikenumbers._ComplexLike"builtins.object*©
__neg__numbers._ComplexLike.__neg__",
numbers._ComplexLike"numbers._ComplexLike*.,
numbers._ComplexLike"numbers._ComplexLikez36z37z38z39z310z311z312z313*©
__pos__numbers._ComplexLike.__pos__",
numbers._ComplexLike"numbers._ComplexLike*.,
numbers._ComplexLike"numbers._ComplexLikez36z37z38z39z310z311z312z313*£
__abs__numbers._ComplexLike.__abs__"&
numbers._RealLike"numbers._RealLike*.,
numbers._ComplexLike"numbers._ComplexLikez36z37z38z39z310z311z312z313Xj36j37j38j39j310j311j312j313¿
	_RealLikenumbers._RealLike"numbers._ComplexLike*Æ
	__trunc__numbers._RealLike.__trunc__".
numbers._IntegralLike"numbers._IntegralLike*0
self&
numbers._RealLike"numbers._RealLikez36z37z38z39z310z311z312z313*Æ
	__floor__numbers._RealLike.__floor__".
numbers._IntegralLike"numbers._IntegralLike*0
self&
numbers._RealLike"numbers._RealLikez36z37z38z39z310z311z312z313*¨
__ceil__numbers._RealLike.__ceil__".
numbers._IntegralLike"numbers._IntegralLike*0
self&
numbers._RealLike"numbers._RealLikez36z37z38z39z310z311z312z313*ò
	__float__numbers._RealLike.__float__" 
builtins.float"builtins.float*(&
numbers._RealLike"numbers._RealLikez36z37z38z39z310z311z312z313*ö
__neg__numbers._RealLike.__neg__"&
numbers._RealLike"numbers._RealLike*(&
numbers._RealLike"numbers._RealLikez36z37z38z39z310z311z312z313*ö
__pos__numbers._RealLike.__pos__"&
numbers._RealLike"numbers._RealLike*(&
numbers._RealLike"numbers._RealLikez36z37z38z39z310z311z312z313Xj36j37j38j39j310j311j312j313Û
_IntegralLikenumbers._IntegralLike"numbers._RealLike*¥

__invert__ numbers._IntegralLike.__invert__".
numbers._IntegralLike"numbers._IntegralLike*0.
numbers._IntegralLike"numbers._IntegralLikez36z37z38z39z310z311z312z313*ú
__int__numbers._IntegralLike.__int__"
builtins.int"builtins.int*0.
numbers._IntegralLike"numbers._IntegralLikez36z37z38z39z310z311z312z313*®
	__index__numbers._IntegralLike.__index__"
builtins.int"builtins.int*8
self.
numbers._IntegralLike"numbers._IntegralLikez36z37z38z39z310z311z312z313*Æ
__abs__numbers._IntegralLike.__abs__".
numbers._IntegralLike"numbers._IntegralLike*0.
numbers._IntegralLike"numbers._IntegralLikez36z37z38z39z310z311z312z313*Æ
__neg__numbers._IntegralLike.__neg__".
numbers._IntegralLike"numbers._IntegralLike*0.
numbers._IntegralLike"numbers._IntegralLikez36z37z38z39z310z311z312z313*Æ
__pos__numbers._IntegralLike.__pos__".
numbers._IntegralLike"numbers._IntegralLike*0.
numbers._IntegralLike"numbers._IntegralLikez36z37z38z39z310z311z312z313Xj36j37j38j39j310j311j312j313Ñ
Numbernumbers.Number"builtins.object*•
__hash__numbers.Number.__hash__"
builtins.int"builtins.int**
self 
numbers.Number"numbers.Number0:abstractmethod@z36z37z38z39z310z311z312z313@babc.ABCMetaj36j37j38j39j310j311j312j313˚
Complexnumbers.Complex"numbers.Number"numbers._ComplexLike*Æ
__complex__numbers.Complex.__complex__"$
builtins.complex"builtins.complex*$"
numbers.Complex"numbers.Complex0:abstractmethod@z36z37z38z39z310z311z312z313*ñ
__bool__numbers.Complex.__bool__"
builtins.bool"builtins.bool*,
self"
numbers.Complex"numbers.Complexz36z37z38z39z310z311z312z313*∂
realnumbers.Complex.real"&
numbers._RealLike"numbers._RealLike*,
self"
numbers.Complex"numbers.Complex0:property:abstractmethod@`z36z37z38z39z310z311z312z313*∂
imagnumbers.Complex.imag"&
numbers._RealLike"numbers._RealLike*,
self"
numbers.Complex"numbers.Complex0:property:abstractmethod@`z36z37z38z39z310z311z312z313*π
__add__numbers.Complex.__add__",
numbers._ComplexLike"numbers._ComplexLike*$"
numbers.Complex"numbers.Complex*	
Any0:abstractmethod@z36z37z38z39z310z311z312z313*ª
__radd__numbers.Complex.__radd__",
numbers._ComplexLike"numbers._ComplexLike*$"
numbers.Complex"numbers.Complex*	
Any0:abstractmethod@z36z37z38z39z310z311z312z313*Æ
__neg__numbers.Complex.__neg__",
numbers._ComplexLike"numbers._ComplexLike*$"
numbers.Complex"numbers.Complex0:abstractmethod@z36z37z38z39z310z311z312z313*Æ
__pos__numbers.Complex.__pos__",
numbers._ComplexLike"numbers._ComplexLike*$"
numbers.Complex"numbers.Complex0:abstractmethod@z36z37z38z39z310z311z312z313*•
__sub__numbers.Complex.__sub__",
numbers._ComplexLike"numbers._ComplexLike*$"
numbers.Complex"numbers.Complex*	
Anyz36z37z38z39z310z311z312z313*ß
__rsub__numbers.Complex.__rsub__",
numbers._ComplexLike"numbers._ComplexLike*$"
numbers.Complex"numbers.Complex*	
Anyz36z37z38z39z310z311z312z313*π
__mul__numbers.Complex.__mul__",
numbers._ComplexLike"numbers._ComplexLike*$"
numbers.Complex"numbers.Complex*	
Any0:abstractmethod@z36z37z38z39z310z311z312z313*ª
__rmul__numbers.Complex.__rmul__",
numbers._ComplexLike"numbers._ComplexLike*$"
numbers.Complex"numbers.Complex*	
Any0:abstractmethod@z36z37z38z39z310z311z312z313*¡
__truediv__numbers.Complex.__truediv__",
numbers._ComplexLike"numbers._ComplexLike*$"
numbers.Complex"numbers.Complex*	
Any0:abstractmethod@z36z37z38z39z310z311z312z313*√
__rtruediv__numbers.Complex.__rtruediv__",
numbers._ComplexLike"numbers._ComplexLike*$"
numbers.Complex"numbers.Complex*	
Any0:abstractmethod@z36z37z38z39z310z311z312z313*π
__pow__numbers.Complex.__pow__",
numbers._ComplexLike"numbers._ComplexLike*$"
numbers.Complex"numbers.Complex*	
Any0:abstractmethod@z36z37z38z39z310z311z312z313*ª
__rpow__numbers.Complex.__rpow__",
numbers._ComplexLike"numbers._ComplexLike*$"
numbers.Complex"numbers.Complex*	
Any0:abstractmethod@z36z37z38z39z310z311z312z313*®
__abs__numbers.Complex.__abs__"&
numbers._RealLike"numbers._RealLike*$"
numbers.Complex"numbers.Complex0:abstractmethod@z36z37z38z39z310z311z312z313*∫
	conjugatenumbers.Complex.conjugate",
numbers._ComplexLike"numbers._ComplexLike*,
self"
numbers.Complex"numbers.Complex0:abstractmethod@z36z37z38z39z310z311z312z313*ƒ
__eq__numbers.Complex.__eq__"
builtins.bool"builtins.bool*$"
numbers.Complex"numbers.Complex*$"
builtins.object"builtins.object0:abstractmethod@z36z37z38z39z310z311z312z313j36j37j38j39j310j311j312j313∞
Realnumbers.Real"numbers.Complex"numbers._RealLike*ù
	__float__numbers.Real.__float__" 
builtins.float"builtins.float*
numbers.Real"numbers.Real0:abstractmethod@z36z37z38z39z310z311z312z313*≥
	__trunc__numbers.Real.__trunc__".
numbers._IntegralLike"numbers._IntegralLike*&
self
numbers.Real"numbers.Real0:abstractmethod@z36z37z38z39z310z311z312z313*≥
	__floor__numbers.Real.__floor__".
numbers._IntegralLike"numbers._IntegralLike*&
self
numbers.Real"numbers.Real0:abstractmethod@z36z37z38z39z310z311z312z313*±
__ceil__numbers.Real.__ceil__".
numbers._IntegralLike"numbers._IntegralLike*&
self
numbers.Real"numbers.Real0:abstractmethod@z36z37z38z39z310z311z312z313*Ù

__divmod__numbers.Real.__divmod__"~
*Tuple[numbers._RealLike,numbers._RealLike]&
numbers._RealLike"numbers._RealLike&
numbers._RealLike"numbers._RealLike*
numbers.Real"numbers.Real*	
Anyz36z37z38z39z310z311z312z313*á
__rdivmod__numbers.Real.__rdivmod__"~
*Tuple[numbers._RealLike,numbers._RealLike]&
numbers._RealLike"numbers._RealLike&
numbers._RealLike"numbers._RealLike*&
self
numbers.Real"numbers.Real*
other
Anyz36z37z38z39z310z311z312z313*¥
__floordiv__numbers.Real.__floordiv__"&
numbers._RealLike"numbers._RealLike*
numbers.Real"numbers.Real*	
Any0:abstractmethod@z36z37z38z39z310z311z312z313*∂
__rfloordiv__numbers.Real.__rfloordiv__"&
numbers._RealLike"numbers._RealLike*
numbers.Real"numbers.Real*	
Any0:abstractmethod@z36z37z38z39z310z311z312z313*™
__mod__numbers.Real.__mod__"&
numbers._RealLike"numbers._RealLike*
numbers.Real"numbers.Real*	
Any0:abstractmethod@z36z37z38z39z310z311z312z313*¨
__rmod__numbers.Real.__rmod__"&
numbers._RealLike"numbers._RealLike*
numbers.Real"numbers.Real*	
Any0:abstractmethod@z36z37z38z39z310z311z312z313*†
__lt__numbers.Real.__lt__"
builtins.bool"builtins.bool*
numbers.Real"numbers.Real*	
Any0:abstractmethod@z36z37z38z39z310z311z312z313*†
__le__numbers.Real.__le__"
builtins.bool"builtins.bool*
numbers.Real"numbers.Real*	
Any0:abstractmethod@z36z37z38z39z310z311z312z313*ë
__complex__numbers.Real.__complex__"$
builtins.complex"builtins.complex*
numbers.Real"numbers.Realz36z37z38z39z310z311z312z313*õ
realnumbers.Real.real"&
numbers._RealLike"numbers._RealLike*&
self
numbers.Real"numbers.Real0:property`z36z37z38z39z310z311z312z313*¨
imagnumbers.Real.imag"7
Literal[builtins.int]	
builtins.int"builtins.int*&
self
numbers.Real"numbers.Real0:property`z36z37z38z39z310z311z312z313*ó
	conjugatenumbers.Real.conjugate"&
numbers._RealLike"numbers._RealLike*&
self
numbers.Real"numbers.Realz36z37z38z39z310z311z312z313*ü
__pos__numbers.Real.__pos__"&
numbers._RealLike"numbers._RealLike*
numbers.Real"numbers.Real0:abstractmethod@z36z37z38z39z310z311z312z313*ü
__neg__numbers.Real.__neg__"&
numbers._RealLike"numbers._RealLike*
numbers.Real"numbers.Real0:abstractmethod@z36z37z38z39z310z311z312z3132ø
	__round__numbers.Real.__round__¥
	__round__numbers.Real.__round__".
numbers._IntegralLike"numbers._IntegralLike*&
self
numbers.Real"numbers.Real*
ndigits
None 0:abstractmethod:overload@Xæ
	__round__numbers.Real.__round__"&
numbers._RealLike"numbers._RealLike*&
self
numbers.Real"numbers.Real*)
ndigits
builtins.int"builtins.int0:abstractmethod:overload@X"36"37"38"39"310"311"312"313j36j37j38j39j310j311j312j313Ü
Rationalnumbers.Rational"numbers.Real*À
	numeratornumbers.Rational.numerator".
numbers._IntegralLike"numbers._IntegralLike*.
self$
numbers.Rational"numbers.Rational0:property:abstractmethod@`z36z37z38z39z310z311z312z313*œ
denominatornumbers.Rational.denominator".
numbers._IntegralLike"numbers._IntegralLike*.
self$
numbers.Rational"numbers.Rational0:property:abstractmethod@`z36z37z38z39z310z311z312z313*ï
	__float__numbers.Rational.__float__" 
builtins.float"builtins.float*&$
numbers.Rational"numbers.Rationalz36z37z38z39z310z311z312z313j36j37j38j39j310j311j312j313‘"
Integralnumbers.Integral"numbers.Rational"numbers._IntegralLike*°
__int__numbers.Integral.__int__"
builtins.int"builtins.int*&$
numbers.Integral"numbers.Integral0:abstractmethod@z36z37z38z39z310z311z312z313*ô
	__index__numbers.Integral.__index__"
builtins.int"builtins.int*.
self$
numbers.Integral"numbers.Integralz36z37z38z39z310z311z312z313*ü
__pow__numbers.Integral.__pow__".
numbers._IntegralLike"numbers._IntegralLike*&$
numbers.Integral"numbers.Integral*	
Any*_[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None 0:abstractmethod@z36z37z38z39z310z311z312z313*ƒ

__lshift__numbers.Integral.__lshift__".
numbers._IntegralLike"numbers._IntegralLike*&$
numbers.Integral"numbers.Integral*	
Any0:abstractmethod@z36z37z38z39z310z311z312z313*∆
__rlshift__numbers.Integral.__rlshift__".
numbers._IntegralLike"numbers._IntegralLike*&$
numbers.Integral"numbers.Integral*	
Any0:abstractmethod@z36z37z38z39z310z311z312z313*ƒ

__rshift__numbers.Integral.__rshift__".
numbers._IntegralLike"numbers._IntegralLike*&$
numbers.Integral"numbers.Integral*	
Any0:abstractmethod@z36z37z38z39z310z311z312z313*∆
__rrshift__numbers.Integral.__rrshift__".
numbers._IntegralLike"numbers._IntegralLike*&$
numbers.Integral"numbers.Integral*	
Any0:abstractmethod@z36z37z38z39z310z311z312z313*æ
__and__numbers.Integral.__and__".
numbers._IntegralLike"numbers._IntegralLike*&$
numbers.Integral"numbers.Integral*	
Any0:abstractmethod@z36z37z38z39z310z311z312z313*¿
__rand__numbers.Integral.__rand__".
numbers._IntegralLike"numbers._IntegralLike*&$
numbers.Integral"numbers.Integral*	
Any0:abstractmethod@z36z37z38z39z310z311z312z313*æ
__xor__numbers.Integral.__xor__".
numbers._IntegralLike"numbers._IntegralLike*&$
numbers.Integral"numbers.Integral*	
Any0:abstractmethod@z36z37z38z39z310z311z312z313*¿
__rxor__numbers.Integral.__rxor__".
numbers._IntegralLike"numbers._IntegralLike*&$
numbers.Integral"numbers.Integral*	
Any0:abstractmethod@z36z37z38z39z310z311z312z313*º
__or__numbers.Integral.__or__".
numbers._IntegralLike"numbers._IntegralLike*&$
numbers.Integral"numbers.Integral*	
Any0:abstractmethod@z36z37z38z39z310z311z312z313*æ
__ror__numbers.Integral.__ror__".
numbers._IntegralLike"numbers._IntegralLike*&$
numbers.Integral"numbers.Integral*	
Any0:abstractmethod@z36z37z38z39z310z311z312z313*π

__invert__numbers.Integral.__invert__".
numbers._IntegralLike"numbers._IntegralLike*&$
numbers.Integral"numbers.Integral0:abstractmethod@z36z37z38z39z310z311z312z313*ï
	__float__numbers.Integral.__float__" 
builtins.float"builtins.float*&$
numbers.Integral"numbers.Integralz36z37z38z39z310z311z312z313*π
	numeratornumbers.Integral.numerator".
numbers._IntegralLike"numbers._IntegralLike*.
self$
numbers.Integral"numbers.Integral0:property`z36z37z38z39z310z311z312z313*∆
denominatornumbers.Integral.denominator"7
Literal[builtins.int]	
builtins.int"builtins.int*.
self$
numbers.Integral"numbers.Integral0:property`z36z37z38z39z310z311z312z313*≥
__pos__numbers.Integral.__pos__".
numbers._IntegralLike"numbers._IntegralLike*&$
numbers.Integral"numbers.Integral0:abstractmethod@z36z37z38z39z310z311z312z313*≥
__neg__numbers.Integral.__neg__".
numbers._IntegralLike"numbers._IntegralLike*&$
numbers.Integral"numbers.Integral0:abstractmethod@z36z37z38z39z310z311z312z313*≥
__abs__numbers.Integral.__abs__".
numbers._IntegralLike"numbers._IntegralLike*&$
numbers.Integral"numbers.Integral0:abstractmethod@z36z37z38z39z310z311z312z3132„
	__round__numbers.Integral.__round__¿
	__round__numbers.Integral.__round__".
numbers._IntegralLike"numbers._IntegralLike*.
self$
numbers.Integral"numbers.Integral*
ndigits
None 0:abstractmethod:overload@X“
	__round__numbers.Integral.__round__".
numbers._IntegralLike"numbers._IntegralLike*.
self$
numbers.Integral"numbers.Integral*)
ndigits
builtins.int"builtins.int0:abstractmethod:overload@X"36"37"38"39"310"311"312"313j36j37j38j39j310j311j312j313*ß
__annotations__numbers.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*36*37*38*39*310*311*312*313*ä
__all__numbers.__all__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*36*37*38*39*310*311*312*313