
gevent.backdoorùC
_GeventSocketsocket.socket"_socket.socket*ÿ
__init__socket.socket.__init__"
None*(
self
socket.socket"socket.socket*†
familyx
(Union[socket.AddressFamily,builtins.int],
socket.AddressFamily"socket.AddressFamily
builtins.int"builtins.int *{
typeo
%Union[socket.SocketKind,builtins.int]&
socket.SocketKind"socket.SocketKind
builtins.int"builtins.int *)
proto
builtins.int"builtins.int *R
filenoD
Union[builtins.int,None]
builtins.int"builtins.int
None z36z37z38z39z310z311z312z313*Ø
	__enter__socket.socket.__enter__"E
socket.socket.Self
socket.socket"socket.socket"socket.socket*GE
socket.socket.Self
socket.socket"socket.socket"socket.socketz36z37z38z39z310z311z312z313*š
__exit__socket.socket.__exit__"
None* 
socket.socket"socket.socket*&"
builtins.object"builtins.objectz36z37z38z39z310z311z312z313*Ô
dupsocket.socket.dup"E
socket.socket.Self
socket.socket"socket.socket"socket.socket*O
selfE
socket.socket.Self
socket.socket"socket.socket"socket.socketz36z37z38z39z310z311z312z313*ç
acceptsocket.socket.accept"y
#Tuple[socket.socket,TypeAlias[Any]]
socket.socket"socket.socket0
TypeAlias[Any]
Any"_socket._RetAddress*(
self
socket.socket"socket.socketz36z37z38z39z310z311z312z313*Å
sendfilesocket.socket.sendfile"
builtins.int"builtins.int*(
self
socket.socket"socket.socket*6
file,
socket._SendableFile"socket._SendableFile**
offset
builtins.int"builtins.int *Q
countD
Union[builtins.int,None]
builtins.int"builtins.int
None z36z37z38z39z310z311z312z313*¨
familysocket.socket.family",
socket.AddressFamily"socket.AddressFamily*(
self
socket.socket"socket.socket0:property`z36z37z38z39z310z311z312z313*ž
typesocket.socket.type"&
socket.SocketKind"socket.SocketKind*(
self
socket.socket"socket.socket0:property`z36z37z38z39z310z311z312z313*ž
get_inheritablesocket.socket.get_inheritable"
builtins.bool"builtins.bool*(
self
socket.socket"socket.socketz36z37z38z39z310z311z312z313*¹
set_inheritablesocket.socket.set_inheritable"
None*(
self
socket.socket"socket.socket*/
inheritable
builtins.bool"builtins.boolz36z37z38z39z310z311z312z3132ø0
makefilesocket.socket.makefileÃ

makefilesocket.socket.makefile""
socket.SocketIO"socket.SocketIO*(
self
socket.socket"socket.socket*û
modeð
øUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str*F
	buffering7
Literal[builtins.int]	
builtins.int"builtins.int*T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
newlineD
Union[builtins.str,None]
builtins.str"builtins.str
None 0:overloadXÀ
makefilesocket.socket.makefile"&
io.BufferedRWPair"io.BufferedRWPair*(
self
socket.socket"socket.socket*ð
modeå
ŠUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str*É
	buffering·
7Union[Literal[builtins.int],Literal[builtins.int],None]7
Literal[builtins.int]	
builtins.int"builtins.int7
Literal[builtins.int]	
builtins.int"builtins.int
None *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
newlineD
Union[builtins.str,None]
builtins.str"builtins.str
None 0:overloadXƒ
makefilesocket.socket.makefile"&
io.BufferedReader"io.BufferedReader*(
self
socket.socket"socket.socket*³
mode¨
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str*É
	buffering·
7Union[Literal[builtins.int],Literal[builtins.int],None]7
Literal[builtins.int]	
builtins.int"builtins.int7
Literal[builtins.int]	
builtins.int"builtins.int
None *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
newlineD
Union[builtins.str,None]
builtins.str"builtins.str
None 0:overloadXƒ
makefilesocket.socket.makefile"&
io.BufferedWriter"io.BufferedWriter*(
self
socket.socket"socket.socket*³
mode¨
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str*É
	buffering·
7Union[Literal[builtins.int],Literal[builtins.int],None]7
Literal[builtins.int]	
builtins.int"builtins.int7
Literal[builtins.int]	
builtins.int"builtins.int
None *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
newlineD
Union[builtins.str,None]
builtins.str"builtins.str
None 0:overloadXœ

makefilesocket.socket.makefile"
	io.IOBase"	io.IOBase*(
self
socket.socket"socket.socket*û
modeð
øUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str*+
	buffering
builtins.int"builtins.int*T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
newlineD
Union[builtins.str,None]
builtins.str"builtins.str
None 0:overloadXû
makefilesocket.socket.makefile"$
io.TextIOWrapper"io.TextIOWrapper*(
self
socket.socket"socket.socket*¢
mode•
tUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str *U
	bufferingD
Union[builtins.int,None]
builtins.int"builtins.int
None *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
newlineD
Union[builtins.str,None]
builtins.str"builtins.str
None 0:overloadX"36"37"38"39"310"311"312"313j36j37j38j39j310j311j312j313òA
BackdoorServergevent.backdoor.BackdoorServer"gevent.server.StreamServer*–
handle%gevent.backdoor.BackdoorServer.handle"
None*J
self@
gevent.backdoor.BackdoorServer"gevent.backdoor.BackdoorServer*(
conn
socket.socket"socket.socket*A
_address3
TypeAlias[Any]
Any"gevent.server._Addressz36z37z38z39z310z311z312z3132®
__init__'gevent.backdoor.BackdoorServer.__init__©

__init__'gevent.backdoor.BackdoorServer.__init__"
None*J
self@
gevent.backdoor.BackdoorServer"gevent.backdoor.BackdoorServer*õ
listeneræ
BUnion[socket.socket,Tuple[builtins.str,builtins.int],builtins.str]
socket.socket"socket.socket`
 Tuple[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int
builtins.str"builtins.str*¡
locals’
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *R
bannerD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
backlogD
Union[builtins.int,None]
builtins.int"builtins.int
None *é
spawnÛ
UTypeAlias[Union[gevent.pool.Pool,gevent.baseserver._SpawnFunc,builtins.int,Any,None]]ã
JUnion[gevent.pool.Pool,gevent.baseserver._SpawnFunc,builtins.int,Any,None]$
gevent.pool.Pool"gevent.pool.Pool<
gevent.baseserver._SpawnFunc"gevent.baseserver._SpawnFunc
builtins.int"builtins.int
Any
None"gevent.baseserver._Spawner *1
ssl_context 
ssl.SSLContext"ssl.SSLContext*1
server_side
builtins.bool"builtins.bool *=
do_handshake_on_connect
builtins.bool"builtins.bool *:
suppress_ragged_eofs
builtins.bool"builtins.bool 0:overloadXÄ
__init__'gevent.backdoor.BackdoorServer.__init__"
None*J
self@
gevent.backdoor.BackdoorServer"gevent.backdoor.BackdoorServer*õ
listeneræ
BUnion[socket.socket,Tuple[builtins.str,builtins.int],builtins.str]
socket.socket"socket.socket`
 Tuple[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int
builtins.str"builtins.str*¡
locals’
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *R
bannerD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
backlogD
Union[builtins.int,None]
builtins.int"builtins.int
None *é
spawnÛ
UTypeAlias[Union[gevent.pool.Pool,gevent.baseserver._SpawnFunc,builtins.int,Any,None]]ã
JUnion[gevent.pool.Pool,gevent.baseserver._SpawnFunc,builtins.int,Any,None]$
gevent.pool.Pool"gevent.pool.Pool<
gevent.baseserver._SpawnFunc"gevent.baseserver._SpawnFunc
builtins.int"builtins.int
Any
None"gevent.baseserver._Spawner *Æ
keyfile¶
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]²
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath *Ç
certfile¶
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]²
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath *1
server_side
builtins.bool"builtins.bool *-
	cert_reqs
builtins.int"builtins.int */
ssl_version
builtins.int"builtins.int *,
ca_certs
builtins.str"builtins.str *=
do_handshake_on_connect
builtins.bool"builtins.bool *:
suppress_ragged_eofs
builtins.bool"builtins.bool *+
ciphers
builtins.str"builtins.str 0:overloadX"36"372ê
__init__'gevent.backdoor.BackdoorServer.__init__ý

__init__'gevent.backdoor.BackdoorServer.__init__"
None*J
self@
gevent.backdoor.BackdoorServer"gevent.backdoor.BackdoorServer*õ
listeneræ
BUnion[socket.socket,Tuple[builtins.str,builtins.int],builtins.str]
socket.socket"socket.socket`
 Tuple[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int
builtins.str"builtins.str*¡
locals’
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *R
bannerD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
backlogD
Union[builtins.int,None]
builtins.int"builtins.int
None *½
spawn¯
gTypeAlias[Union[gevent.pool.Pool,gevent.baseserver._SpawnFunc,builtins.int,Literal[builtins.str],None]]¥
\Union[gevent.pool.Pool,gevent.baseserver._SpawnFunc,builtins.int,Literal[builtins.str],None]$
gevent.pool.Pool"gevent.pool.Pool<
gevent.baseserver._SpawnFunc"gevent.baseserver._SpawnFunc
builtins.int"builtins.int7
Literal[builtins.str]	
builtins.str"builtins.str
None"gevent.baseserver._Spawner *1
ssl_context 
ssl.SSLContext"ssl.SSLContext*1
server_side
builtins.bool"builtins.bool *=
do_handshake_on_connect
builtins.bool"builtins.bool *:
suppress_ragged_eofs
builtins.bool"builtins.bool 0:overloadX˜
__init__'gevent.backdoor.BackdoorServer.__init__"
None*J
self@
gevent.backdoor.BackdoorServer"gevent.backdoor.BackdoorServer*õ
listeneræ
BUnion[socket.socket,Tuple[builtins.str,builtins.int],builtins.str]
socket.socket"socket.socket`
 Tuple[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int
builtins.str"builtins.str*¡
locals’
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *R
bannerD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
backlogD
Union[builtins.int,None]
builtins.int"builtins.int
None *½
spawn¯
gTypeAlias[Union[gevent.pool.Pool,gevent.baseserver._SpawnFunc,builtins.int,Literal[builtins.str],None]]¥
\Union[gevent.pool.Pool,gevent.baseserver._SpawnFunc,builtins.int,Literal[builtins.str],None]$
gevent.pool.Pool"gevent.pool.Pool<
gevent.baseserver._SpawnFunc"gevent.baseserver._SpawnFunc
builtins.int"builtins.int7
Literal[builtins.str]	
builtins.str"builtins.str
None"gevent.baseserver._Spawner *Æ
keyfile¶
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]²
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath *Ç
certfile¶
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]²
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath *1
server_side
builtins.bool"builtins.bool *-
	cert_reqs
builtins.int"builtins.int */
ssl_version
builtins.int"builtins.int *,
ca_certs
builtins.str"builtins.str *=
do_handshake_on_connect
builtins.bool"builtins.bool *:
suppress_ragged_eofs
builtins.bool"builtins.bool *+
ciphers
builtins.str"builtins.str 0:overloadX"38"39"310"311"312"313j36j37j38j39j310j311j312j313r¬
locals%gevent.backdoor.BackdoorServer.localsW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*36*37*38*39*310*311*312*313r™
banner%gevent.backdoor.BackdoorServer.bannerD
Union[builtins.str,None]
builtins.str"builtins.str
None*36*37*38*39*310*311*312*313*¯
__annotations__gevent.backdoor.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*36*37*38*39*310*311*312*313