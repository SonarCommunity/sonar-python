
torch._numpy._utilS
	AxisErrortorch._numpy._util.AxisError"builtins.ValueError"builtins.IndexError^
UFuncTypeError!torch._numpy._util.UFuncTypeError"builtins.TypeError"builtins.RuntimeError6
is_sequencetorch._numpy._util.is_sequence*
seqJ
cast_if_needed!torch._numpy._util.cast_if_needed*

tensor*	
dtype@
cast_int_to_float$torch._numpy._util.cast_int_to_float*
x`
normalize_axis_index'torch._numpy._util.normalize_axis_index*
ax*
ndim*
argname y
normalize_axis_tuple'torch._numpy._util.normalize_axis_tuple*
axis*
ndim*
argname *
allow_duplicate M
allow_only_single_axis)torch._numpy._util.allow_only_single_axis*
axisH
expand_shapetorch._numpy._util.expand_shape*
	arr_shape*
axisS
apply_keepdims!torch._numpy._util.apply_keepdims*

tensor*
axis*
ndimR
axis_none_flatten$torch._numpy._util.axis_none_flatten*
tensors*

axis [
typecast_tensor"torch._numpy._util.typecast_tensor*
t*
target_dtype*
castingc
typecast_tensors#torch._numpy._util.typecast_tensors*
tensors*
target_dtype*
castingL
_try_convert_to_tensor)torch._numpy._util._try_convert_to_tensor*
objh
_coerce_to_tensor$torch._numpy._util._coerce_to_tensor*
obj*
dtype *

copy *
ndmin I
ndarrays_to_tensors&torch._numpy._util.ndarrays_to_tensors*

inputs*Ž
__annotations__"torch._numpy._util.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict