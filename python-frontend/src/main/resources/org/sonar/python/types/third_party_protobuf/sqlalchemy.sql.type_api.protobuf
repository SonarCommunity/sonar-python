
sqlalchemy.sql.type_api«

TypeEngine"sqlalchemy.sql.type_api.TypeEngine"#sqlalchemy.sql.visitors.Traversible*g
evaluates_none1sqlalchemy.sql.type_api.TypeEngine.evaluates_none*
selfz36z37z38z39z310z311*[
copy'sqlalchemy.sql.type_api.TypeEngine.copy*
self*
kwz36z37z38z39z310z311*˚
compare_against_backend:sqlalchemy.sql.type_api.TypeEngine.compare_against_backend"
None*R
selfH
"sqlalchemy.sql.type_api.TypeEngine""sqlalchemy.sql.type_api.TypeEngine*
dialect
Any*
	conn_type
Anyz36z37z38z39z310z311*j

copy_value-sqlalchemy.sql.type_api.TypeEngine.copy_value*
self*	
valuez36z37z38z39z310z311*◊
literal_processor4sqlalchemy.sql.type_api.TypeEngine.literal_processor"
None*R
selfH
"sqlalchemy.sql.type_api.TypeEngine""sqlalchemy.sql.type_api.TypeEngine*
dialect
Anyz36z37z38z39z310z311*—
bind_processor1sqlalchemy.sql.type_api.TypeEngine.bind_processor"
None*R
selfH
"sqlalchemy.sql.type_api.TypeEngine""sqlalchemy.sql.type_api.TypeEngine*
dialect
Anyz36z37z38z39z310z311*Î
result_processor3sqlalchemy.sql.type_api.TypeEngine.result_processor"
None*R
selfH
"sqlalchemy.sql.type_api.TypeEngine""sqlalchemy.sql.type_api.TypeEngine*
dialect
Any*
coltype
Anyz36z37z38z39z310z311*◊
column_expression4sqlalchemy.sql.type_api.TypeEngine.column_expression"
None*R
selfH
"sqlalchemy.sql.type_api.TypeEngine""sqlalchemy.sql.type_api.TypeEngine*
colexpr
Anyz36z37z38z39z310z311*’
bind_expression2sqlalchemy.sql.type_api.TypeEngine.bind_expression"
None*R
selfH
"sqlalchemy.sql.type_api.TypeEngine""sqlalchemy.sql.type_api.TypeEngine*
	bindvalue
Anyz36z37z38z39z310z311*u
compare_values1sqlalchemy.sql.type_api.TypeEngine.compare_values*
self*
x*
yz36z37z38z39z310z311*œ
get_dbapi_type1sqlalchemy.sql.type_api.TypeEngine.get_dbapi_type"
None*R
selfH
"sqlalchemy.sql.type_api.TypeEngine""sqlalchemy.sql.type_api.TypeEngine*
dbapi
Anyz36z37z38z39z310z311*√
python_type.sqlalchemy.sql.type_api.TypeEngine.python_type"
None*R
selfH
"sqlalchemy.sql.type_api.TypeEngine""sqlalchemy.sql.type_api.TypeEngine0:property`z36z37z38z39z310z311*Ä
with_variant/sqlalchemy.sql.type_api.TypeEngine.with_variant*
self*	
type_*
dialect_namez36z37z38z39z310z311*Ë

as_generic-sqlalchemy.sql.type_api.TypeEngine.as_generic"
Any*R
selfH
"sqlalchemy.sql.type_api.TypeEngine""sqlalchemy.sql.type_api.TypeEngine*4
allow_nulltype
builtins.bool"builtins.bool z36z37z38z39z310z311*p
dialect_impl/sqlalchemy.sql.type_api.TypeEngine.dialect_impl*
self*
dialectz36z37z38z39z310z311*f
adapt(sqlalchemy.sql.type_api.TypeEngine.adapt*
self*
cls*
kwz36z37z38z39z310z311*à
coerce_compared_value8sqlalchemy.sql.type_api.TypeEngine.coerce_compared_value*
self*
op*	
valuez36z37z38z39z310z311*ò
compile*sqlalchemy.sql.type_api.TypeEngine.compile"
Any*R
selfH
"sqlalchemy.sql.type_api.TypeEngine""sqlalchemy.sql.type_api.TypeEngine*j
dialect[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None z36z37z38z39z310z311j36j37j38j39j310j311rq
hashable+sqlalchemy.sql.type_api.TypeEngine.hashable
builtins.bool"builtins.bool*36*37*38*39*310*311rn
comparator_factory5sqlalchemy.sql.type_api.TypeEngine.comparator_factory
Any*36*37*38*39*310*311rl
sort_key_function4sqlalchemy.sql.type_api.TypeEngine.sort_key_function
Any*36*37*38*39*310*311râ
should_evaluate_none7sqlalchemy.sql.type_api.TypeEngine.should_evaluate_none
builtins.bool"builtins.bool*36*37*38*39*310*311≤
VisitableCheckKWArg+sqlalchemy.sql.type_api.VisitableCheckKWArg"+sqlalchemy.util.langhelpers.EnsureKWArgType"'sqlalchemy.sql.visitors.TraversibleTypej36j37j38j39j310j311Ω
ExternalType$sqlalchemy.sql.type_api.ExternalType"builtins.objectj36j37j38j39j310j311r\
cache_ok-sqlalchemy.sql.type_api.ExternalType.cache_ok
Any*36*37*38*39*310*311ﬁ
UserDefinedType'sqlalchemy.sql.type_api.UserDefinedType"$sqlalchemy.sql.type_api.ExternalType""sqlalchemy.sql.type_api.TypeEngine*ç
coerce_compared_value=sqlalchemy.sql.type_api.UserDefinedType.coerce_compared_value*
self*
op*	
valuez36z37z38z39z310z311@b+sqlalchemy.sql.type_api.VisitableCheckKWArgj36j37j38j39j310j311rÄ
__visit_name__6sqlalchemy.sql.type_api.UserDefinedType.__visit_name__
builtins.str"builtins.str*36*37*38*39*310*311r|
ensure_kwarg4sqlalchemy.sql.type_api.UserDefinedType.ensure_kwarg
builtins.str"builtins.str*36*37*38*39*310*311∆
Emulated sqlalchemy.sql.type_api.Emulated"builtins.object*Å
adapt_to_emulated2sqlalchemy.sql.type_api.Emulated.adapt_to_emulated*
self*
impltype*
kwz36z37z38z39z310z311*i
adapt&sqlalchemy.sql.type_api.Emulated.adapt*
self*
impltype*
kwz36z37z38z39z310z311j36j37j38j39j310j311∑
NativeForEmulated)sqlalchemy.sql.type_api.NativeForEmulated"builtins.object*§
adapt_native_to_emulatedBsqlalchemy.sql.type_api.NativeForEmulated.adapt_native_to_emulated*
cls*
impl*
kw0:classmethodpz36z37z38z39z310z311*§
adapt_emulated_to_nativeBsqlalchemy.sql.type_api.NativeForEmulated.adapt_emulated_to_native*
cls*
impl*
kw0:classmethodpz36z37z38z39z310z311j36j37j38j39j310j311ç
TypeDecorator%sqlalchemy.sql.type_api.TypeDecorator"$sqlalchemy.sql.type_api.ExternalType"%sqlalchemy.sql.base.SchemaEventTarget""sqlalchemy.sql.type_api.TypeEngine*‡
__init__.sqlalchemy.sql.type_api.TypeDecorator.__init__"
None*X
selfN
%sqlalchemy.sql.type_api.TypeDecorator"%sqlalchemy.sql.type_api.TypeDecorator*
args
Any*
kwargs
Anyz36z37z38z39z310z311*Ä
comparator_factory8sqlalchemy.sql.type_api.TypeDecorator.comparator_factory*
self0:property`z36z37z38z39z310z311*q
type_engine1sqlalchemy.sql.type_api.TypeDecorator.type_engine*
self*
dialectz36z37z38z39z310z311*}
load_dialect_impl7sqlalchemy.sql.type_api.TypeDecorator.load_dialect_impl*
self*
dialectz36z37z38z39z310z311*’
__getattr__1sqlalchemy.sql.type_api.TypeDecorator.__getattr__"
Any*PN
%sqlalchemy.sql.type_api.TypeDecorator"%sqlalchemy.sql.type_api.TypeDecorator*
builtins.str"builtins.strz36z37z38z39z310z311*¸
process_literal_param;sqlalchemy.sql.type_api.TypeDecorator.process_literal_param"
None*X
selfN
%sqlalchemy.sql.type_api.TypeDecorator"%sqlalchemy.sql.type_api.TypeDecorator*
value
Any*
dialect
Anyz36z37z38z39z310z311*ˆ
process_bind_param8sqlalchemy.sql.type_api.TypeDecorator.process_bind_param"
None*X
selfN
%sqlalchemy.sql.type_api.TypeDecorator"%sqlalchemy.sql.type_api.TypeDecorator*
value
Any*
dialect
Anyz36z37z38z39z310z311*˙
process_result_value:sqlalchemy.sql.type_api.TypeDecorator.process_result_value"
None*X
selfN
%sqlalchemy.sql.type_api.TypeDecorator"%sqlalchemy.sql.type_api.TypeDecorator*
value
Any*
dialect
Anyz36z37z38z39z310z311*}
literal_processor7sqlalchemy.sql.type_api.TypeDecorator.literal_processor*
self*
dialectz36z37z38z39z310z311*w
bind_processor4sqlalchemy.sql.type_api.TypeDecorator.bind_processor*
self*
dialectz36z37z38z39z310z311*à
result_processor6sqlalchemy.sql.type_api.TypeDecorator.result_processor*
self*
dialect*
coltypez36z37z38z39z310z311*{
bind_expression5sqlalchemy.sql.type_api.TypeDecorator.bind_expression*
self*
	bindparamz36z37z38z39z310z311*|
column_expression7sqlalchemy.sql.type_api.TypeDecorator.column_expression*
self*

columnz36z37z38z39z310z311*ã
coerce_compared_value;sqlalchemy.sql.type_api.TypeDecorator.coerce_compared_value*
self*
op*	
valuez36z37z38z39z310z311*^
copy*sqlalchemy.sql.type_api.TypeDecorator.copy*
self*
kwz36z37z38z39z310z311*u
get_dbapi_type4sqlalchemy.sql.type_api.TypeDecorator.get_dbapi_type*
self*	
dbapiz36z37z38z39z310z311*x
compare_values4sqlalchemy.sql.type_api.TypeDecorator.compare_values*
self*
x*
yz36z37z38z39z310z311*~
sort_key_function7sqlalchemy.sql.type_api.TypeDecorator.sort_key_function*
self0:property`z36z37z38z39z310z311j36j37j38j39j310j311r~
__visit_name__4sqlalchemy.sql.type_api.TypeDecorator.__visit_name__
builtins.str"builtins.str*36*37*38*39*310*311rU
impl*sqlalchemy.sql.type_api.TypeDecorator.impl
Any*36*37*38*39*310*311rq
coerce_to_is_types8sqlalchemy.sql.type_api.TypeDecorator.coerce_to_is_types
Any*36*37*38*39*310*311◊
Variantsqlalchemy.sql.type_api.Variant"%sqlalchemy.sql.type_api.TypeDecorator*œ
__init__(sqlalchemy.sql.type_api.Variant.__init__"
None*L
selfB
sqlalchemy.sql.type_api.Variant"sqlalchemy.sql.type_api.Variant*
base
Any*
mapping
Anyz36z37z38z39z310z311*ã
coerce_compared_value5sqlalchemy.sql.type_api.Variant.coerce_compared_value*
self*
operator*	
valuez36z37z38z39z310z311*w
load_dialect_impl1sqlalchemy.sql.type_api.Variant.load_dialect_impl*
self*
dialectz36z37z38z39z310z311*}
with_variant,sqlalchemy.sql.type_api.Variant.with_variant*
self*	
type_*
dialect_namez36z37z38z39z310z311*z
comparator_factory2sqlalchemy.sql.type_api.Variant.comparator_factory*
self0:property`z36z37z38z39z310z311j36j37j38j39j310j311rn
cache_ok(sqlalchemy.sql.type_api.Variant.cache_ok
builtins.bool"builtins.bool*36*37*38*39*310*311rO
impl$sqlalchemy.sql.type_api.Variant.impl
Any*36*37*38*39*310*311rU
mapping'sqlalchemy.sql.type_api.Variant.mapping
Any*36*37*38*39*310*311j
to_instance#sqlalchemy.sql.type_api.to_instance*
typeobj*
arg*
kwz36z37z38z39z310z311e

adapt_type"sqlalchemy.sql.type_api.adapt_type*
typeobj*
colspecsz36z37z38z39z310z311*≠
__annotations__'sqlalchemy.sql.type_api.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*36*37*38*39*310*311*U
BOOLEANTYPE#sqlalchemy.sql.type_api.BOOLEANTYPE
Any*36*37*38*39*310*311*U
INTEGERTYPE#sqlalchemy.sql.type_api.INTEGERTYPE
Any*36*37*38*39*310*311*O
NULLTYPE sqlalchemy.sql.type_api.NULLTYPE
Any*36*37*38*39*310*311*U
NUMERICTYPE#sqlalchemy.sql.type_api.NUMERICTYPE
Any*36*37*38*39*310*311*S

STRINGTYPE"sqlalchemy.sql.type_api.STRINGTYPE
Any*36*37*38*39*310*311*Q
	MATCHTYPE!sqlalchemy.sql.type_api.MATCHTYPE
Any*36*37*38*39*310*311*Q
	INDEXABLE!sqlalchemy.sql.type_api.INDEXABLE
Any*36*37*38*39*310*311*S

TABLEVALUE"sqlalchemy.sql.type_api.TABLEVALUE
Any*36*37*38*39*310*311