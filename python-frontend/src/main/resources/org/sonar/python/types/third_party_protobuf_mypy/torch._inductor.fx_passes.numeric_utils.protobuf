
'torch._inductor.fx_passes.numeric_utilsX
set_deterministic9torch._inductor.fx_passes.numeric_utils.set_deterministic"
NoneN
clean_memory4torch._inductor.fx_passes.numeric_utils.clean_memory"
None„
compare_dict_tensors<torch._inductor.fx_passes.numeric_utils.compare_dict_tensors*
	dict_base*
dict_control*
	precisionˆ
compare_tuple_tensors=torch._inductor.fx_passes.numeric_utils.compare_tuple_tensors*

tuple_base*
tuple_control*
	precision‚
compare_parameters:torch._inductor.fx_passes.numeric_utils.compare_parameters*

model_base*
model_control*
	precisionˆ
compare_forward_output>torch._inductor.fx_passes.numeric_utils.compare_forward_output*
	pred_base*
pred_control*
	precision€
compare_gradients9torch._inductor.fx_passes.numeric_utils.compare_gradients*

model_base*
model_control*
	precision™
	run_model1torch._inductor.fx_passes.numeric_utils.run_model*

model_base*
model_control*
model_input*
num_iterations *
	precision Ä
numeric_check_if_enabled@torch._inductor.fx_passes.numeric_utils.numeric_check_if_enabled*
gm_before_fx_passes*
gm_after_fx_passes*
example_inputs*
num_iterations*
	precision*£
__annotations__7torch._inductor.fx_passes.numeric_utils.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*
optimtorch.optim *Z
logger.torch._inductor.fx_passes.numeric_utils.logger 
logging.Logger"logging.Logger*j
MAIN_RANDOM_SEED8torch._inductor.fx_passes.numeric_utils.MAIN_RANDOM_SEED
builtins.int"builtins.int