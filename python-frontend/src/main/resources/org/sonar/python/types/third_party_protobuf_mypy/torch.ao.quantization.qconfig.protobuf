
torch.ao.quantization.qconfigπ
QConfig%torch.ao.quantization.qconfig.QConfig"(torch.ao.quantization.qconfig.QConfig@84*]
__new__-torch.ao.quantization.qconfig.QConfig.__new__*
cls*

activation*

weight˙

QConfig@84(torch.ao.quantization.qconfig.QConfig@84"builtins.tuple*™
_replace1torch.ao.quantization.qconfig.QConfig@84._replace"V
,torch.ao.quantization.qconfig.QConfig@84._NT$
Tuple[Any,Any]
Any
Any*a
_selfV
,torch.ao.quantization.qconfig.QConfig@84._NT$
Tuple[Any,Any]
Any
Any*

activation
Any *
weight
Any *„
__new__0torch.ao.quantization.qconfig.QConfig@84.__new__"V
,torch.ao.quantization.qconfig.QConfig@84._NT$
Tuple[Any,Any]
Any
Any*ü
_clsî
2Type[torch.ao.quantization.qconfig.QConfig@84._NT]V
,torch.ao.quantization.qconfig.QConfig@84._NT$
Tuple[Any,Any]
Any
Any"type*

activation
Any*
weight
Any*˜
_asdict0torch.ao.quantization.qconfig.QConfig@84._asdict"W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*a
_selfV
,torch.ao.quantization.qconfig.QConfig@84._NT$
Tuple[Any,Any]
Any
Any*™
_make.torch.ao.quantization.qconfig.QConfig@84._make"V
,torch.ao.quantization.qconfig.QConfig@84._NT$
Tuple[Any,Any]
Any
Any*ü
_clsî
2Type[torch.ao.quantization.qconfig.QConfig@84._NT]V
,torch.ao.quantization.qconfig.QConfig@84._NT$
Tuple[Any,Any]
Any
Any"type*>
iterable0
typing.Iterable[Any]
Any"typing.Iterable*
new
Any *
len
Any 0:classmethodprJ

activation3torch.ao.quantization.qconfig.QConfig@84.activation
AnyrB
weight/torch.ao.quantization.qconfig.QConfig@84.weight
Anyrù
_fields0torch.ao.quantization.qconfig.QConfig@84._fields`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.strrû
_field_types5torch.ao.quantization.qconfig.QConfig@84._field_typesW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dictr§
_field_defaults8torch.ao.quantization.qconfig.QConfig@84._field_defaultsW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dictrY
_source0torch.ao.quantization.qconfig.QConfig@84._source
builtins.str"builtins.strr§
__annotations__8torch.ao.quantization.qconfig.QConfig@84.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict‹
QConfigDynamic,torch.ao.quantization.qconfig.QConfigDynamic"0torch.ao.quantization.qconfig.QConfigDynamic@115*h
__new__4torch.ao.quantization.qconfig.QConfigDynamic.__new__*
cls*

activation *
weight 8™
QConfigDynamic@1150torch.ao.quantization.qconfig.QConfigDynamic@115"builtins.tuple*¬
_replace9torch.ao.quantization.qconfig.QConfigDynamic@115._replace"^
4torch.ao.quantization.qconfig.QConfigDynamic@115._NT$
Tuple[Any,Any]
Any
Any*i
_self^
4torch.ao.quantization.qconfig.QConfigDynamic@115._NT$
Tuple[Any,Any]
Any
Any*

activation
Any *
weight
Any *É
__new__8torch.ao.quantization.qconfig.QConfigDynamic@115.__new__"^
4torch.ao.quantization.qconfig.QConfigDynamic@115._NT$
Tuple[Any,Any]
Any
Any*Ø
_cls§
:Type[torch.ao.quantization.qconfig.QConfigDynamic@115._NT]^
4torch.ao.quantization.qconfig.QConfigDynamic@115._NT$
Tuple[Any,Any]
Any
Any"type*

activation
Any*
weight
Any*á
_asdict8torch.ao.quantization.qconfig.QConfigDynamic@115._asdict"W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*i
_self^
4torch.ao.quantization.qconfig.QConfigDynamic@115._NT$
Tuple[Any,Any]
Any
Any* 
_make6torch.ao.quantization.qconfig.QConfigDynamic@115._make"^
4torch.ao.quantization.qconfig.QConfigDynamic@115._NT$
Tuple[Any,Any]
Any
Any*Ø
_cls§
:Type[torch.ao.quantization.qconfig.QConfigDynamic@115._NT]^
4torch.ao.quantization.qconfig.QConfigDynamic@115._NT$
Tuple[Any,Any]
Any
Any"type*>
iterable0
typing.Iterable[Any]
Any"typing.Iterable*
new
Any *
len
Any 0:classmethodprR

activation;torch.ao.quantization.qconfig.QConfigDynamic@115.activation
AnyrJ
weight7torch.ao.quantization.qconfig.QConfigDynamic@115.weight
Anyr•
_fields8torch.ao.quantization.qconfig.QConfigDynamic@115._fields`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.strr¶
_field_types=torch.ao.quantization.qconfig.QConfigDynamic@115._field_typesW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dictr¨
_field_defaults@torch.ao.quantization.qconfig.QConfigDynamic@115._field_defaultsW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dictra
_source8torch.ao.quantization.qconfig.QConfigDynamic@115._source
builtins.str"builtins.strr¨
__annotations__@torch.ao.quantization.qconfig.QConfigDynamic@115.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dictf
get_default_qconfig1torch.ao.quantization.qconfig.get_default_qconfig*
backend *
version n
get_default_qat_qconfig5torch.ao.quantization.qconfig.get_default_qat_qconfig*
backend *
version —
_assert_valid_qconfig3torch.ao.quantization.qconfig._assert_valid_qconfig"
None*≠
qconfigü
%Union[TypeAlias[Tuple[Any,Any]],None]j
TypeAlias[Tuple[Any,Any]]$
Tuple[Any,Any]
Any
Any"%torch.ao.quantization.qconfig.QConfig
None*I
mod@
torch.nn.modules.module.Module"torch.nn.modules.module.ModuleÅ
_add_module_to_qconfig_obs_ctr<torch.ao.quantization.qconfig._add_module_to_qconfig_obs_ctr"
Any*é
qconfigÄ
0TypeAlias[Union[TypeAlias[Tuple[Any,Any]],None]]ü
%Union[TypeAlias[Tuple[Any,Any]],None]j
TypeAlias[Tuple[Any,Any]]$
Tuple[Any,Any]
Any
Any"%torch.ao.quantization.qconfig.QConfig
None"(torch.ao.quantization.qconfig.QConfigAny*Ü
modulez
*Union[torch.nn.modules.module.Module,None]@
torch.nn.modules.module.Module"torch.nn.modules.module.Module
Noneõ
_obs_or_fq_ctr_equals3torch.ao.quantization.qconfig._obs_or_fq_ctr_equals"
Any*‡

obs_or_fq1œ
≠TypeAlias[Union[torch.ao.quantization.observer._PartialWrapper,Type[torch.ao.quantization.observer.ObserverBase],Type[torch.ao.quantization.fake_quantize.FakeQuantizeBase]]]ÿ
¢Union[torch.ao.quantization.observer._PartialWrapper,Type[torch.ao.quantization.observer.ObserverBase],Type[torch.ao.quantization.fake_quantize.FakeQuantizeBase]]`
.torch.ao.quantization.observer._PartialWrapper".torch.ao.quantization.observer._PartialWrapperó
1Type[torch.ao.quantization.observer.ObserverBase]Z
+torch.ao.quantization.observer.ObserverBase"+torch.ao.quantization.observer.ObserverBase"type≤
:Type[torch.ao.quantization.fake_quantize.FakeQuantizeBase]l
4torch.ao.quantization.fake_quantize.FakeQuantizeBase"4torch.ao.quantization.fake_quantize.FakeQuantizeBase"type"@torch.ao.quantization.qconfig._ObserverOrFakeQuantizeConstructor*‡

obs_or_fq2œ
≠TypeAlias[Union[torch.ao.quantization.observer._PartialWrapper,Type[torch.ao.quantization.observer.ObserverBase],Type[torch.ao.quantization.fake_quantize.FakeQuantizeBase]]]ÿ
¢Union[torch.ao.quantization.observer._PartialWrapper,Type[torch.ao.quantization.observer.ObserverBase],Type[torch.ao.quantization.fake_quantize.FakeQuantizeBase]]`
.torch.ao.quantization.observer._PartialWrapper".torch.ao.quantization.observer._PartialWrapperó
1Type[torch.ao.quantization.observer.ObserverBase]Z
+torch.ao.quantization.observer.ObserverBase"+torch.ao.quantization.observer.ObserverBase"type≤
:Type[torch.ao.quantization.fake_quantize.FakeQuantizeBase]l
4torch.ao.quantization.fake_quantize.FakeQuantizeBase"4torch.ao.quantization.fake_quantize.FakeQuantizeBase"type"@torch.ao.quantization.qconfig._ObserverOrFakeQuantizeConstructorΩ
_partial_wrapper_equals5torch.ao.quantization.qconfig._partial_wrapper_equals"
Any*p

obs_or_fq1`
.torch.ao.quantization.observer._PartialWrapper".torch.ao.quantization.observer._PartialWrapper*p

obs_or_fq2`
.torch.ao.quantization.observer._PartialWrapper".torch.ao.quantization.observer._PartialWrapperﬂ
qconfig_equals,torch.ao.quantization.qconfig.qconfig_equals"
Any*â
q1Ä
0TypeAlias[Union[TypeAlias[Tuple[Any,Any]],None]]ü
%Union[TypeAlias[Tuple[Any,Any]],None]j
TypeAlias[Tuple[Any,Any]]$
Tuple[Any,Any]
Any
Any"%torch.ao.quantization.qconfig.QConfig
None"(torch.ao.quantization.qconfig.QConfigAny*â
q2Ä
0TypeAlias[Union[TypeAlias[Tuple[Any,Any]],None]]ü
%Union[TypeAlias[Tuple[Any,Any]],None]j
TypeAlias[Tuple[Any,Any]]$
Tuple[Any,Any]
Any
Any"%torch.ao.quantization.qconfig.QConfig
None"(torch.ao.quantization.qconfig.QConfigAny÷
_activation_is_memoryless7torch.ao.quantization.qconfig._activation_is_memoryless"
Any*w
qconfigj
TypeAlias[Tuple[Any,Any]]$
Tuple[Any,Any]
Any
Any"%torch.ao.quantization.qconfig.QConfigâ
_is_reuse_input_qconfig5torch.ao.quantization.qconfig._is_reuse_input_qconfig"
Any*≠
qconfigü
%Union[TypeAlias[Tuple[Any,Any]],None]j
TypeAlias[Tuple[Any,Any]]$
Tuple[Any,Any]
Any
Any"%torch.ao.quantization.qconfig.QConfig
None*ô
__annotations__-torch.ao.quantization.qconfig.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*
nntorch.nn *|
__all__%torch.ao.quantization.qconfig.__all__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*f
default_qconfig-torch.ao.quantization.qconfig.default_qconfig$
Tuple[Any,Any]
Any
Any*r
default_debug_qconfig3torch.ao.quantization.qconfig.default_debug_qconfig$
Tuple[Any,Any]
Any
Any*~
default_per_channel_qconfig9torch.ao.quantization.qconfig.default_per_channel_qconfig$
Tuple[Any,Any]
Any
Any*v
default_dynamic_qconfig5torch.ao.quantization.qconfig.default_dynamic_qconfig$
Tuple[Any,Any]
Any
Any*v
float16_dynamic_qconfig5torch.ao.quantization.qconfig.float16_dynamic_qconfig$
Tuple[Any,Any]
Any
Any*t
float16_static_qconfig4torch.ao.quantization.qconfig.float16_static_qconfig$
Tuple[Any,Any]
Any
Any*~
per_channel_dynamic_qconfig9torch.ao.quantization.qconfig.per_channel_dynamic_qconfig$
Tuple[Any,Any]
Any
Any*ä
!float_qparams_weight_only_qconfig?torch.ao.quantization.qconfig.float_qparams_weight_only_qconfig$
Tuple[Any,Any]
Any
Any*î
&float_qparams_weight_only_qconfig_4bitDtorch.ao.quantization.qconfig.float_qparams_weight_only_qconfig_4bit$
Tuple[Any,Any]
Any
Any*n
default_qat_qconfig1torch.ao.quantization.qconfig.default_qat_qconfig$
Tuple[Any,Any]
Any
Any*~
default_dynamic_qat_qconfig9torch.ao.quantization.qconfig.default_dynamic_qat_qconfig$
Tuple[Any,Any]
Any
Any*~
default_weight_only_qconfig9torch.ao.quantization.qconfig.default_weight_only_qconfig$
Tuple[Any,Any]
Any
Any*Ü
default_activation_only_qconfig=torch.ao.quantization.qconfig.default_activation_only_qconfig$
Tuple[Any,Any]
Any
Any*t
default_qat_qconfig_v24torch.ao.quantization.qconfig.default_qat_qconfig_v2$
Tuple[Any,Any]
Any
Any*~
default_reuse_input_qconfig9torch.ao.quantization.qconfig.default_reuse_input_qconfig$
Tuple[Any,Any]
Any
Any*ä
!default_symmetric_qnnpack_qconfig?torch.ao.quantization.qconfig.default_symmetric_qnnpack_qconfig$
Tuple[Any,Any]
Any
Any*¢
-default_per_channel_symmetric_qnnpack_qconfigKtorch.ao.quantization.qconfig.default_per_channel_symmetric_qnnpack_qconfig$
Tuple[Any,Any]
Any
Any*Ç
default_embedding_qat_qconfig;torch.ao.quantization.qconfig.default_embedding_qat_qconfig$
Tuple[Any,Any]
Any
Any*å
"default_embedding_qat_qconfig_4bit@torch.ao.quantization.qconfig.default_embedding_qat_qconfig_4bit$
Tuple[Any,Any]
Any
Any*Ç
default_quint8_weight_qconfig;torch.ao.quantization.qconfig.default_quint8_weight_qconfig$
Tuple[Any,Any]
Any
Any*í
%default_symmetric_qnnpack_qat_qconfigCtorch.ao.quantization.qconfig.default_symmetric_qnnpack_qat_qconfig$
Tuple[Any,Any]
Any
Any*™
1default_per_channel_symmetric_qnnpack_qat_qconfigOtorch.ao.quantization.qconfig.default_per_channel_symmetric_qnnpack_qat_qconfig$
Tuple[Any,Any]
Any
Any*ä
!_default_fp32_placeholder_qconfig?torch.ao.quantization.qconfig._default_fp32_placeholder_qconfig$
Tuple[Any,Any]
Any
Any*é
#_default_quint8_placeholder_qconfigAtorch.ao.quantization.qconfig._default_quint8_placeholder_qconfig$
Tuple[Any,Any]
Any
Any