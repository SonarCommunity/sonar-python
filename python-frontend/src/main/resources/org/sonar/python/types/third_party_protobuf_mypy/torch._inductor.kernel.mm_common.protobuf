
 torch._inductor.kernel.mm_common‡
cdivtorch._inductor.utils.ceildiv"B
Union[builtins.int,Any]
builtins.int"builtins.int
Any*M
numerB
Union[builtins.int,Any]
builtins.int"builtins.int
Any*M
denomB
Union[builtins.int,Any]
builtins.int"builtins.int
Anyj
triton_config.torch._inductor.kernel.mm_common.triton_config*

num_stages*
	num_warps*

kwargs¹
filtered_configs1torch._inductor.kernel.mm_common.filtered_configs"
Any*#
m
builtins.int"builtins.int*#
n
builtins.int"builtins.int*#
k
builtins.int"builtins.int*Ù
configsË
Vbuiltins.list[Tuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]]á
GTuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int"builtins.list*
has_int8_tensor
Any K
mm_grid(torch._inductor.kernel.mm_common.mm_grid*
m*
n*
meta@
acc_type)torch._inductor.kernel.mm_common.acc_type*	
dtypeŽ

mm_options+torch._inductor.kernel.mm_common.mm_options*

config*	
sym_m*	
sym_n*	
sym_k*

layout*
b_prologue_cast_type …
mm_args(torch._inductor.kernel.mm_common.mm_args*
mat1*
mat2*

others*
layout *
	out_dtype *
use_4x2_dim a
addmm_epilogue/torch._inductor.kernel.mm_common.addmm_epilogue*	
dtype*	
alpha*
beta*œ
__annotations__0torch._inductor.kernel.mm_common.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*8
sympy&torch._inductor.kernel.mm_common.sympy
Any*+
inductor_configtorch._inductor.config *M
log$torch._inductor.kernel.mm_common.log 
logging.Logger"logging.Logger*•
mm_kernel_configs2torch._inductor.kernel.mm_common.mm_kernel_configsË
:builtins.list[builtins.dict[builtins.str,builtins.object]]~
+builtins.dict[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"builtins.dict"builtins.list*Ÿ
int8_mm_kernel_configs7torch._inductor.kernel.mm_common.int8_mm_kernel_configsË
:builtins.list[builtins.dict[builtins.str,builtins.object]]~
+builtins.dict[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"builtins.dict"builtins.list*±
mixed_mm_kernel_configs_small_m@torch._inductor.kernel.mm_common.mixed_mm_kernel_configs_small_mË
:builtins.list[builtins.dict[builtins.str,builtins.object]]~
+builtins.dict[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"builtins.dict"builtins.list*¡
mixed_mm_kernel_configs8torch._inductor.kernel.mm_common.mixed_mm_kernel_configsË
:builtins.list[builtins.dict[builtins.str,builtins.object]]~
+builtins.dict[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"builtins.dict"builtins.list*›
mm_platform_configs4torch._inductor.kernel.mm_common.mm_platform_configsÍ
Wbuiltins.tuple[Tuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]]á
GTuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int"builtins.tuple*Ÿ
int8_platform_configs6torch._inductor.kernel.mm_common.int8_platform_configsÍ
Wbuiltins.tuple[Tuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]]á
GTuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int"builtins.tuple*§
mixed_mm_platform_configs:torch._inductor.kernel.mm_common.mixed_mm_platform_configsÍ
Wbuiltins.tuple[Tuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]]á
GTuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int"builtins.tuple*o

mm_configs+torch._inductor.kernel.mm_common.mm_configs4
functools.partial[Any]
Any"functools.partial*y
int8_mm_configs0torch._inductor.kernel.mm_common.int8_mm_configs4
functools.partial[Any]
Any"functools.partial*{
mixed_mm_configs1torch._inductor.kernel.mm_common.mixed_mm_configs4
functools.partial[Any]
Any"functools.partial