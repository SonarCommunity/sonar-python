
torch.testing._creationˆ
_uniform_random_(torch.testing._creation._uniform_random_",
torch._tensor.Tensor"torch._tensor.Tensor*3
t,
torch._tensor.Tensor"torch._tensor.Tensor*)
low 
builtins.float"builtins.float**
high 
builtins.float"builtins.floatè
make_tensor#torch.testing._creation.make_tensor",
torch._tensor.Tensor"torch._tensor.Tensor*¬
shape∂
ZUnion[builtins.int,torch._C.Size,builtins.list[builtins.int],builtins.tuple[builtins.int]]
builtins.int"builtins.int
torch._C.Size"torch._C.SizeJ
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.listL
builtins.tuple[builtins.int]
builtins.int"builtins.int"builtins.tuple*+
dtype 
torch._C.dtype"torch._C.dtype*u
devicei
#Union[builtins.str,torch._C.device]
builtins.str"builtins.str"
torch._C.device"torch._C.device*U
lowJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *V
highJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *3
requires_grad
builtins.bool"builtins.bool *3
noncontiguous
builtins.bool"builtins.bool *2
exclude_zero
builtins.bool"builtins.bool *w
memory_formatb
"Union[torch._C.memory_format,None]0
torch._C.memory_format"torch._C.memory_format
None *ì
__annotations__'torch.testing._creation.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*
collectionscollections *å
_INTEGRAL_TYPES'torch.testing._creation._INTEGRAL_TYPESP
builtins.list[torch._C.dtype] 
torch._C.dtype"torch._C.dtype"builtins.list*å
_FLOATING_TYPES'torch.testing._creation._FLOATING_TYPESP
builtins.list[torch._C.dtype] 
torch._C.dtype"torch._C.dtype"builtins.list*ñ
_FLOATING_8BIT_TYPES,torch.testing._creation._FLOATING_8BIT_TYPESP
builtins.list[torch._C.dtype] 
torch._C.dtype"torch._C.dtype"builtins.list*ä
_COMPLEX_TYPES&torch.testing._creation._COMPLEX_TYPESP
builtins.list[torch._C.dtype] 
torch._C.dtype"torch._C.dtype"builtins.list*¢
_BOOLEAN_OR_INTEGRAL_TYPES2torch.testing._creation._BOOLEAN_OR_INTEGRAL_TYPESP
builtins.list[torch._C.dtype] 
torch._C.dtype"torch._C.dtype"builtins.list*¢
_FLOATING_OR_COMPLEX_TYPES2torch.testing._creation._FLOATING_OR_COMPLEX_TYPESP
builtins.list[torch._C.dtype] 
torch._C.dtype"torch._C.dtype"builtins.list