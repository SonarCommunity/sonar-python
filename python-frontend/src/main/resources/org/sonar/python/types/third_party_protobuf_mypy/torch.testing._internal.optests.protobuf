
torch.testing._internal.optests_
OpCheckError;torch.testing._internal.optests.generate_tests.OpCheckError"builtins.Exception¢
make_fx_check5torch.testing._internal.optests.make_fx.make_fx_check*
func*
args*

kwargs*
tracing_mode*
assert_close *
randomize_data ô
aot_autograd_check?torch.testing._internal.optests.aot_autograd.aot_autograd_check*
func*
args*

kwargs*
dynamic*
assert_raises_regex_fn *
assert_equals_fn *
check_gradients *#
try_check_data_specialization ÿ
,_test_aot_autograd_forwards_backwards_helperYtorch.testing._internal.optests.aot_autograd._test_aot_autograd_forwards_backwards_helper*
f*

compiled_f*
args*
assert_raises_regex_fn*
assert_equals_fn*!
try_check_data_specializationb

fake_check6torch.testing._internal.optests.fake_tensor.fake_check*
op*
args*

kwargsŽ
autograd_registration_checkQtorch.testing._internal.optests.autograd_registration.autograd_registration_check*
op*
args*

kwargsò
generate_opcheck_testsEtorch.testing._internal.optests.generate_tests.generate_opcheck_tests"
None*
testcase
Any*Z

namespacesJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*^
failures_dict_pathD
Union[builtins.str,None]
builtins.str"builtins.str
None *Õ
additional_decorators·
;builtins.dict[builtins.str,CallableType[builtins.function]]
builtins.str"builtins.strK
CallableType[builtins.function]&
builtins.function"builtins.function"builtins.dict *\

test_utilsJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list °
opcheck6torch.testing._internal.optests.generate_tests.opcheck"u
(builtins.dict[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"builtins.dict*§
opž
^Union[torch._ops.OpOverload,torch._ops.OpOverloadPacket,torch._library.custom_ops.CustomOpDef].
torch._ops.OpOverload"torch._ops.OpOverload:
torch._ops.OpOverloadPacket"torch._ops.OpOverloadPacketN
%torch._library.custom_ops.CustomOpDef"%torch._library.custom_ops.CustomOpDef*8
args.
builtins.tuple[Any]
Any"builtins.tuple*¡
kwargs’
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *¶

test_utils£
1Union[builtins.str,typing.Sequence[builtins.str]]
builtins.str"builtins.strN
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence *5
raise_exception
builtins.bool"builtins.bool –
dontGenerateOpCheckTestsGtorch.testing._internal.optests.generate_tests.dontGenerateOpCheckTests"
Any*(
reason
builtins.str"builtins.str_
is_inside_opcheck_modeEtorch.testing._internal.optests.generate_tests.is_inside_opcheck_mode*€
__path__(torch.testing._internal.optests.__path__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*›
__annotations__/torch.testing._internal.optests.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict