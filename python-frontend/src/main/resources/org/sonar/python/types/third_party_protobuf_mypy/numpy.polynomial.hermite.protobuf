
numpy.polynomial.hermiteè
Hermite numpy.polynomial.hermite.Hermite"&numpy.polynomial._polybase.ABCPolyBaser:
domain'numpy.polynomial.hermite.Hermite.domain
Anyr:
window'numpy.polynomial.hermite.Hermite.window
AnyrB

basis_name+numpy.polynomial.hermite.Hermite.basis_name
Any8
	poly2herm"numpy.polynomial.hermite.poly2herm*
pol6
	herm2poly"numpy.polynomial.hermite.herm2poly*
c?
hermline!numpy.polynomial.hermite.hermline*
off*
sclB
hermfromroots&numpy.polynomial.hermite.hermfromroots*	
roots;
hermadd numpy.polynomial.hermite.hermadd*
c1*
c2;
hermsub numpy.polynomial.hermite.hermsub*
c1*
c24
hermmulx!numpy.polynomial.hermite.hermmulx*
c;
hermmul numpy.polynomial.hermite.hermmul*
c1*
c2;
hermdiv numpy.polynomial.hermite.hermdiv*
c1*
c2K
hermpow numpy.polynomial.hermite.hermpow*
c*
pow*
maxpower R
hermder numpy.polynomial.hermite.hermder*
c*
m *	
scl *

axis g
hermint numpy.polynomial.hermite.hermint*
c*
m *
k *

lbnd *	
scl *

axis G
hermval numpy.polynomial.hermite.hermval*
x*
c*
tensor D
	hermval2d"numpy.polynomial.hermite.hermval2d*
x*
y*
cF

hermgrid2d#numpy.polynomial.hermite.hermgrid2d*
x*
y*
cK
	hermval3d"numpy.polynomial.hermite.hermval3d*
x*
y*
z*
cM

hermgrid3d#numpy.polynomial.hermite.hermgrid3d*
x*
y*
z*
cA

hermvander#numpy.polynomial.hermite.hermvander*
x*
degL
hermvander2d%numpy.polynomial.hermite.hermvander2d*
x*
y*
degS
hermvander3d%numpy.polynomial.hermite.hermvander3d*
x*
y*
z*
degd
hermfit numpy.polynomial.hermite.hermfit*
x*
y*
deg*
rcond *

full *
w >
hermcompanion&numpy.polynomial.hermite.hermcompanion*
c6
	hermroots"numpy.polynomial.hermite.hermroots*
c8
	hermgauss"numpy.polynomial.hermite.hermgauss*
deg8

hermweight#numpy.polynomial.hermite.hermweight*
x*î
__annotations__(numpy.polynomial.hermite.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*w
__all__ numpy.polynomial.hermite.__all__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*z
hermtrim!numpy.polynomial.hermite.hermtrimK
CallableType[builtins.function]&
builtins.function"builtins.function*°

hermdomain#numpy.polynomial.hermite.hermdomainÌ
Nnumpy.ndarray[Any,numpy.dtype[TypeAlias[numpy.signedinteger[TypeAlias[Any]]]]]
AnyÇ
;numpy.dtype[TypeAlias[numpy.signedinteger[TypeAlias[Any]]]]µ
.TypeAlias[numpy.signedinteger[TypeAlias[Any]]]u
#numpy.signedinteger[TypeAlias[Any]]9
TypeAlias[Any]
Any"numpy._typing._nbit._NBitInt"numpy.signedinteger"
numpy.int_"numpy.dtype"numpy.ndarray*ù
hermzero!numpy.polynomial.hermite.hermzeroÌ
Nnumpy.ndarray[Any,numpy.dtype[TypeAlias[numpy.signedinteger[TypeAlias[Any]]]]]
AnyÇ
;numpy.dtype[TypeAlias[numpy.signedinteger[TypeAlias[Any]]]]µ
.TypeAlias[numpy.signedinteger[TypeAlias[Any]]]u
#numpy.signedinteger[TypeAlias[Any]]9
TypeAlias[Any]
Any"numpy._typing._nbit._NBitInt"numpy.signedinteger"
numpy.int_"numpy.dtype"numpy.ndarray*õ
hermone numpy.polynomial.hermite.hermoneÌ
Nnumpy.ndarray[Any,numpy.dtype[TypeAlias[numpy.signedinteger[TypeAlias[Any]]]]]
AnyÇ
;numpy.dtype[TypeAlias[numpy.signedinteger[TypeAlias[Any]]]]µ
.TypeAlias[numpy.signedinteger[TypeAlias[Any]]]u
#numpy.signedinteger[TypeAlias[Any]]9
TypeAlias[Any]
Any"numpy._typing._nbit._NBitInt"numpy.signedinteger"
numpy.int_"numpy.dtype"numpy.ndarray*É
hermxnumpy.polynomial.hermite.hermxŸ
Inumpy.ndarray[Any,numpy.dtype[TypeAlias[numpy.floating[TypeAlias[Any]]]]]
AnyÛ
6numpy.dtype[TypeAlias[numpy.floating[TypeAlias[Any]]]]´
)TypeAlias[numpy.floating[TypeAlias[Any]]]n
numpy.floating[TypeAlias[Any]]<
TypeAlias[Any]
Any"numpy._typing._nbit._NBitDouble"numpy.floating"numpy.float_"numpy.dtype"numpy.ndarray