
importlib.resources._functional›
open_binary+importlib.resources._functional.open_binary""
typing.BinaryIO"typing.BinaryIO*¸
anchor«
:TypeAlias[TypeAlias[Union[builtins.str,types.ModuleType]]]Æ
/TypeAlias[Union[builtins.str,types.ModuleType]]l
$Union[builtins.str,types.ModuleType]
builtins.str"builtins.str$
types.ModuleType"types.ModuleType"#importlib.resources._common.Package""importlib.resources._common.Anchor*ú

path_namesé
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]—
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPathz313™
read_binary+importlib.resources._functional.read_binary" 
builtins.bytes"builtins.bytes*¸
anchor«
:TypeAlias[TypeAlias[Union[builtins.str,types.ModuleType]]]Æ
/TypeAlias[Union[builtins.str,types.ModuleType]]l
$Union[builtins.str,types.ModuleType]
builtins.str"builtins.str$
types.ModuleType"types.ModuleType"#importlib.resources._common.Package""importlib.resources._common.Anchor*ú

path_namesé
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]—
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPathz313Ý
path$importlib.resources._functional.path"r
/contextlib.AbstractContextManager[pathlib.Path]
pathlib.Path"pathlib.Path"!contextlib.AbstractContextManager*¸
anchor«
:TypeAlias[TypeAlias[Union[builtins.str,types.ModuleType]]]Æ
/TypeAlias[Union[builtins.str,types.ModuleType]]l
$Union[builtins.str,types.ModuleType]
builtins.str"builtins.str$
types.ModuleType"types.ModuleType"#importlib.resources._common.Package""importlib.resources._common.Anchor*ú

path_namesé
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]—
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPathz313—
is_resource+importlib.resources._functional.is_resource"
builtins.bool"builtins.bool*¸
anchor«
:TypeAlias[TypeAlias[Union[builtins.str,types.ModuleType]]]Æ
/TypeAlias[Union[builtins.str,types.ModuleType]]l
$Union[builtins.str,types.ModuleType]
builtins.str"builtins.str$
types.ModuleType"types.ModuleType"#importlib.resources._common.Package""importlib.resources._common.Anchor*ú

path_namesé
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]—
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPathz313Á
contents(importlib.resources._functional.contents"N
typing.Iterator[builtins.str]
builtins.str"builtins.str"typing.Iterator*¸
anchor«
:TypeAlias[TypeAlias[Union[builtins.str,types.ModuleType]]]Æ
/TypeAlias[Union[builtins.str,types.ModuleType]]l
$Union[builtins.str,types.ModuleType]
builtins.str"builtins.str$
types.ModuleType"types.ModuleType"#importlib.resources._common.Package""importlib.resources._common.Anchor*ú

path_namesé
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]—
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPathz313"÷
	open_text)importlib.resources._functional.open_textê
	open_text)importlib.resources._functional.open_text"&
_io.TextIOWrapper"_io.TextIOWrapper*¸
anchor«
:TypeAlias[TypeAlias[Union[builtins.str,types.ModuleType]]]Æ
/TypeAlias[Union[builtins.str,types.ModuleType]]l
$Union[builtins.str,types.ModuleType]
builtins.str"builtins.str$
types.ModuleType"types.ModuleType"#importlib.resources._common.Package""importlib.resources._common.Anchor*

path_names
Any*T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None 0:overloadXÌ
	open_text)importlib.resources._functional.open_text"&
_io.TextIOWrapper"_io.TextIOWrapper*¸
anchor«
:TypeAlias[TypeAlias[Union[builtins.str,types.ModuleType]]]Æ
/TypeAlias[Union[builtins.str,types.ModuleType]]l
$Union[builtins.str,types.ModuleType]
builtins.str"builtins.str$
types.ModuleType"types.ModuleType"#importlib.resources._common.Package""importlib.resources._common.Anchor*ú

path_namesé
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]—
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPath*R
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None*R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None 0:overloadX"313"ã
	read_text)importlib.resources._functional.read_textà
	read_text)importlib.resources._functional.read_text"
builtins.str"builtins.str*¸
anchor«
:TypeAlias[TypeAlias[Union[builtins.str,types.ModuleType]]]Æ
/TypeAlias[Union[builtins.str,types.ModuleType]]l
$Union[builtins.str,types.ModuleType]
builtins.str"builtins.str$
types.ModuleType"types.ModuleType"#importlib.resources._common.Package""importlib.resources._common.Anchor*

path_names
Any*T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None 0:overloadXÂ
	read_text)importlib.resources._functional.read_text"
builtins.str"builtins.str*¸
anchor«
:TypeAlias[TypeAlias[Union[builtins.str,types.ModuleType]]]Æ
/TypeAlias[Union[builtins.str,types.ModuleType]]l
$Union[builtins.str,types.ModuleType]
builtins.str"builtins.str$
types.ModuleType"types.ModuleType"#importlib.resources._common.Package""importlib.resources._common.Anchor*ú

path_namesé
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]—
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPath*R
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None*R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None 0:overloadX"313*¿
__annotations__/importlib.resources._functional.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*36*37*38*39*310*311*312*313