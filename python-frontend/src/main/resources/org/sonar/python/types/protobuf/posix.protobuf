
posixposix5
stat_resultposix.stat_result"builtins.objectr27«
statvfs_resultposix.statvfs_result"builtins.tuple*typing.Sequence*typing.Iterable*typing.Container*typing.Reversible2ª
_replaceposix.statvfs_result._replace"
posix.statvfs_result._NT*'
_self
posix.statvfs_result._NT*+
f_bsize
builtins.int"builtins.int *,
f_frsize
builtins.int"builtins.int *,
f_blocks
builtins.int"builtins.int *+
f_bfree
builtins.int"builtins.int *,
f_bavail
builtins.int"builtins.int *+
f_files
builtins.int"builtins.int *+
f_ffree
builtins.int"builtins.int *,
f_favail
builtins.int"builtins.int **
f_flag
builtins.int"builtins.int *-
	f_namemax
builtins.int"builtins.int z272»
__new__posix.statvfs_result.__new__"
posix.statvfs_result._NT*J
_cls@
Type[posix.statvfs_result._NT]
posix.statvfs_result._NT*)
f_bsize
builtins.int"builtins.int**
f_frsize
builtins.int"builtins.int**
f_blocks
builtins.int"builtins.int*)
f_bfree
builtins.int"builtins.int**
f_bavail
builtins.int"builtins.int*)
f_files
builtins.int"builtins.int*)
f_ffree
builtins.int"builtins.int**
f_favail
builtins.int"builtins.int*(
f_flag
builtins.int"builtins.int*+
	f_namemax
builtins.int"builtins.intz272≠
_asdictposix.statvfs_result._asdict"W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*'
_self
posix.statvfs_result._NTz272ä
_makeposix.statvfs_result._make"
posix.statvfs_result._NT*J
_cls@
Type[posix.statvfs_result._NT]
posix.statvfs_result._NT*>
iterable0
typing.Iterable[Any]
Any"typing.Iterable*
new
Any *
len
Any 0:classmethodpz27r27Ã

uname_resultposix.uname_result"builtins.tuple*typing.Sequence*typing.Collection*typing.Reversible*typing.Iterable*typing.Container2‡
_replaceposix.uname_result._replace"
posix.uname_result._NT*%
_self
posix.uname_result._NT*+
sysname
builtins.str"builtins.str *,
nodename
builtins.str"builtins.str *+
release
builtins.str"builtins.str *+
version
builtins.str"builtins.str *+
machine
builtins.str"builtins.str z35z36z37z38z392ı
__new__posix.uname_result.__new__"
posix.uname_result._NT*F
_cls<
Type[posix.uname_result._NT]
posix.uname_result._NT*)
sysname
builtins.str"builtins.str**
nodename
builtins.str"builtins.str*)
release
builtins.str"builtins.str*)
version
builtins.str"builtins.str*)
machine
builtins.str"builtins.strz35z36z37z38z392π
_asdictposix.uname_result._asdict"W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*%
_self
posix.uname_result._NTz35z36z37z38z392í
_makeposix.uname_result._make"
posix.uname_result._NT*F
_cls<
Type[posix.uname_result._NT]
posix.uname_result._NT*>
iterable0
typing.Iterable[Any]
Any"typing.Iterable*
new
Any *
len
Any 0:classmethodpz35z36z37z38z39r35r36r37r38r39Ü
times_resultposix.times_result"builtins.tuple*typing.Sequence*typing.Collection*typing.Reversible*typing.Iterable*typing.Container2˝
_replaceposix.times_result._replace"
posix.times_result._NT*%
_self
posix.times_result._NT*,
user 
builtins.float"builtins.float *.
system 
builtins.float"builtins.float *5
children_user 
builtins.float"builtins.float *7
children_system 
builtins.float"builtins.float */
elapsed 
builtins.float"builtins.float z35z36z37z38z392í
__new__posix.times_result.__new__"
posix.times_result._NT*F
_cls<
Type[posix.times_result._NT]
posix.times_result._NT**
user 
builtins.float"builtins.float*,
system 
builtins.float"builtins.float*3
children_user 
builtins.float"builtins.float*5
children_system 
builtins.float"builtins.float*-
elapsed 
builtins.float"builtins.floatz35z36z37z38z392π
_asdictposix.times_result._asdict"W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*%
_self
posix.times_result._NTz35z36z37z38z392í
_makeposix.times_result._make"
posix.times_result._NT*F
_cls<
Type[posix.times_result._NT]
posix.times_result._NT*>
iterable0
typing.Iterable[Any]
Any"typing.Iterable*
new
Any *
len
Any 0:classmethodpz35z36z37z38z39r35r36r37r38r39€

waitid_resultposix.waitid_result"builtins.tuple*typing.Sequence*typing.Collection*typing.Reversible*typing.Iterable*typing.Container2„
_replaceposix.waitid_result._replace"
posix.waitid_result._NT*&
_self
posix.waitid_result._NT**
si_pid
builtins.int"builtins.int **
si_uid
builtins.int"builtins.int *,
si_signo
builtins.int"builtins.int *-
	si_status
builtins.int"builtins.int *+
si_code
builtins.int"builtins.int z35z36z37z38z392˘
__new__posix.waitid_result.__new__"
posix.waitid_result._NT*H
_cls>
Type[posix.waitid_result._NT]
posix.waitid_result._NT*(
si_pid
builtins.int"builtins.int*(
si_uid
builtins.int"builtins.int**
si_signo
builtins.int"builtins.int*+
	si_status
builtins.int"builtins.int*)
si_code
builtins.int"builtins.intz35z36z37z38z392ª
_asdictposix.waitid_result._asdict"W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*&
_self
posix.waitid_result._NTz35z36z37z38z392ñ
_makeposix.waitid_result._make"
posix.waitid_result._NT*H
_cls>
Type[posix.waitid_result._NT]
posix.waitid_result._NT*>
iterable0
typing.Iterable[Any]
Any"typing.Iterable*
new
Any *
len
Any 0:classmethodpz35z36z37z38z39r35r36r37r38r39È
sched_paramposix.sched_param"builtins.tuple*typing.Sequence*typing.Collection*typing.Reversible*typing.Iterable*typing.Container2Ø
_replaceposix.sched_param._replace"
posix.sched_param._NT*$
_self
posix.sched_param._NT*2
sched_priority
builtins.int"builtins.int z35z36z37z38z392À
__new__posix.sched_param.__new__"
posix.sched_param._NT*D
_cls:
Type[posix.sched_param._NT]
posix.sched_param._NT*0
sched_priority
builtins.int"builtins.intz35z36z37z38z392∑
_asdictposix.sched_param._asdict"W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*$
_self
posix.sched_param._NTz35z36z37z38z392é
_makeposix.sched_param._make"
posix.sched_param._NT*D
_cls:
Type[posix.sched_param._NT]
posix.sched_param._NT*>
iterable0
typing.Iterable[Any]
Any"typing.Iterable*
new
Any *
len
Any 0:classmethodpz35z36z37z38z39r35r36r37r38r39"j
	WCOREDUMPposix.WCOREDUMP"
builtins.bool"builtins.bool*(
status
builtins.int"builtins.intz27"z
	WCOREDUMPposix.WCOREDUMP"
builtins.bool"builtins.bool*(
__status
builtins.int"builtins.intz35z36z37z38z39"n
WEXITSTATUSposix.WEXITSTATUS"
builtins.bool"builtins.bool*(
status
builtins.int"builtins.intz27"|
WEXITSTATUSposix.WEXITSTATUS"
builtins.int"builtins.int*(
status
builtins.int"builtins.intz35z36z37z38z39"Ñ
WIFCONTINUEDposix.WIFCONTINUED"
builtins.bool"builtins.bool*(
status
builtins.int"builtins.intz27z35z36z37z38z39"~
	WIFEXITEDposix.WIFEXITED"
builtins.bool"builtins.bool*(
status
builtins.int"builtins.intz27z35z36z37z38z39"Ç
WIFSIGNALEDposix.WIFSIGNALED"
builtins.bool"builtins.bool*(
status
builtins.int"builtins.intz27z35z36z37z38z39"Ä

WIFSTOPPEDposix.WIFSTOPPED"
builtins.bool"builtins.bool*(
status
builtins.int"builtins.intz27z35z36z37z38z39"h
WSTOPSIGposix.WSTOPSIG"
builtins.bool"builtins.bool*(
status
builtins.int"builtins.intz27"v
WSTOPSIGposix.WSTOPSIG"
builtins.int"builtins.int*(
status
builtins.int"builtins.intz35z36z37z38z39"h
WTERMSIGposix.WTERMSIG"
builtins.bool"builtins.bool*(
status
builtins.int"builtins.intz27"v
WTERMSIGposix.WTERMSIG"
builtins.int"builtins.int*(
status
builtins.int"builtins.intz35z36z37z38z39"L
_exitposix._exit"
None*(
status
builtins.int"builtins.intz27""
abortposix.abort"
Nonez27"í
accessposix.access"
builtins.bool"builtins.bool*.
path$
builtins.unicode"builtins.unicode*&
mode
builtins.int"builtins.intz27"R
chdirposix.chdir"
None*.
path$
builtins.unicode"builtins.unicodez27"z
chmodposix.chmod"
None*.
path$
builtins.unicode"builtins.unicode*&
mode
builtins.int"builtins.intz27"†
chownposix.chown"
None*.
path$
builtins.unicode"builtins.unicode*%
uid
builtins.int"builtins.int*%
gid
builtins.int"builtins.intz27"T
chrootposix.chroot"
None*.
path$
builtins.unicode"builtins.unicodez27"H
closeposix.close"
None*$
fd
builtins.int"builtins.intz27"Å

closerangeposix.closerange"
None*(
fd_low
builtins.int"builtins.int*)
fd_high
builtins.int"builtins.intz27"¶
confstrposix.confstr"
builtins.str"builtins.str*j
name`
 Union[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.intz27":
ctermidposix.ctermid"
builtins.str"builtins.strz27"X
dup	posix.dup"
builtins.int"builtins.int*$
fd
builtins.int"builtins.intz27"m
dup2
posix.dup2"
None*$
fd
builtins.int"builtins.int*%
fd2
builtins.int"builtins.intz27"ß
execvposix.execv"
None*&
path
builtins.str"builtins.str*X
argsN
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence*Ä
envw
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mappingz27"©
execveposix.execve"
None*&
path
builtins.str"builtins.str*X
argsN
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence*Ä
envw
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mappingz27"˚
fchdirposix.fchdir"
None*‘
fdÀ
2TypeAlias[Union[builtins.int,_typeshed.HasFileno]]u
'Union[builtins.int,_typeshed.HasFileno]
builtins.int"builtins.int*
_typeshed.HasFileno"_typeshed.HasFileno"_typeshed.FileDescriptorLikez27"r
fchmodposix.fchmod"
None*$
fd
builtins.int"builtins.int*&
mode
builtins.int"builtins.intz27"ò
fchownposix.fchown"
None*$
fd
builtins.int"builtins.int*%
uid
builtins.int"builtins.int*%
gid
builtins.int"builtins.intz27"Å
	fdatasyncposix.fdatasync"
None*‘
fdÀ
2TypeAlias[Union[builtins.int,_typeshed.HasFileno]]u
'Union[builtins.int,_typeshed.HasFileno]
builtins.int"builtins.int*
_typeshed.HasFileno"_typeshed.HasFileno"_typeshed.FileDescriptorLikez27"€
fdopenposix.fdopen"B
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IO*$
fd
builtins.int"builtins.int*(
mode
builtins.str"builtins.str *+
bufsize
builtins.int"builtins.int z27"4
fork
posix.fork"
builtins.int"builtins.intz27"~
forkptyposix.forkpty"`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.intz27"x
	fpathconfposix.fpathconf"
None*$
fd
builtins.int"builtins.int*&
name
builtins.str"builtins.strz27"f
fstatposix.fstat"&
posix.stat_result"posix.stat_result*$
fd
builtins.int"builtins.intz27"Ä
fstatvfsposix.fstatvfs"π
àTuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int*$
fd
builtins.int"builtins.intz27"˘
fsyncposix.fsync"
None*‘
fdÀ
2TypeAlias[Union[builtins.int,_typeshed.HasFileno]]u
'Union[builtins.int,_typeshed.HasFileno]
builtins.int"builtins.int*
_typeshed.HasFileno"_typeshed.HasFileno"_typeshed.FileDescriptorLikez27"z
	ftruncateposix.ftruncate"
None*$
fd
builtins.int"builtins.int*(
length
builtins.int"builtins.intz27"8
getcwdposix.getcwd"
builtins.str"builtins.strz27"B
getcwduposix.getcwdu"$
builtins.unicode"builtins.unicodez27":
getegidposix.getegid"
builtins.int"builtins.intz27":
geteuidposix.geteuid"
builtins.int"builtins.intz27"8
getgidposix.getgid"
builtins.int"builtins.intz27"l
	getgroupsposix.getgroups"J
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.listz27"¬

getloadavgposix.getloadavg"ù
3Tuple[builtins.float,builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.floatz27"<
getloginposix.getlogin"
builtins.str"builtins.strz27"a
getpgidposix.getpgid"
builtins.int"builtins.int*%
pid
builtins.int"builtins.intz27":
getpgrpposix.getpgrp"
builtins.int"builtins.intz27"8
getpidposix.getpid"
builtins.int"builtins.intz27":
getppidposix.getppid"
builtins.int"builtins.intz27"Æ
	getresgidposix.getresgid"ã
-Tuple[builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.intz27"Æ
	getresuidposix.getresuid"ã
-Tuple[builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.intz27"_
getsidposix.getsid"
builtins.int"builtins.int*%
pid
builtins.int"builtins.intz27"8
getuidposix.getuid"
builtins.int"builtins.intz27"

initgroupsposix.initgroups"
None**
username
builtins.str"builtins.str*%
gid
builtins.int"builtins.intz27"`
isattyposix.isatty"
builtins.bool"builtins.bool*$
fd
builtins.int"builtins.intz27"n
kill
posix.kill"
None*%
pid
builtins.int"builtins.int*%
sig
builtins.int"builtins.intz27"s
killpgposix.killpg"
None*&
pgid
builtins.int"builtins.int*%
sig
builtins.int"builtins.intz27"¢
lchownposix.lchown"
None*.
path$
builtins.unicode"builtins.unicode*%
uid
builtins.int"builtins.int*%
gid
builtins.int"builtins.intz27"
link
posix.link"
None*0
source$
builtins.unicode"builtins.unicode*+
	link_name
builtins.str"builtins.strz27"{
listdirposix.listdir"@
builtins.list[typing.AnyStr]
typing.AnyStr"builtins.list*
path
typing.AnyStrz27"ñ
lseekposix.lseek"
None*$
fd
builtins.int"builtins.int*%
pos
builtins.int"builtins.int*%
how
builtins.int"builtins.intz27"p
lstatposix.lstat"&
posix.stat_result"posix.stat_result*.
path$
builtins.unicode"builtins.unicodez27"`
majorposix.major"
builtins.int"builtins.int*(
device
builtins.int"builtins.intz27"å
makedevposix.makedev"
builtins.int"builtins.int*'
major
builtins.int"builtins.int*'
minor
builtins.int"builtins.intz27"`
minorposix.minor"
builtins.int"builtins.int*(
device
builtins.int"builtins.intz27"|
mkdirposix.mkdir"
None*.
path$
builtins.unicode"builtins.unicode*(
mode
builtins.int"builtins.int z27"~
mkfifoposix.mkfifo"
None*.
path$
builtins.unicode"builtins.unicode*(
mode
builtins.int"builtins.int z27"¨
mknodposix.mknod"
None*2
filename$
builtins.unicode"builtins.unicode*(
mode
builtins.int"builtins.int **
device
builtins.int"builtins.int z27"a
nice
posix.nice"
builtins.int"builtins.int*+
	increment
builtins.int"builtins.intz27"∑
open
posix.open"
builtins.int"builtins.int*.
file$
builtins.unicode"builtins.unicode*'
flags
builtins.int"builtins.int*(
mode
builtins.int"builtins.int z27"~
openptyposix.openpty"`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.intz27"î
pathconfposix.pathconf"
builtins.str"builtins.str*.
path$
builtins.unicode"builtins.unicode*&
name
builtins.str"builtins.strz27"x
pipe
posix.pipe"`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.intz27"ﬁ
popenposix.popen"B
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IO*)
command
builtins.str"builtins.str*(
mode
builtins.str"builtins.str *+
bufsize
builtins.int"builtins.int z27"x
putenvposix.putenv"
None*)
varname
builtins.str"builtins.str*'
value
builtins.str"builtins.strz27"
read
posix.read"
builtins.str"builtins.str*$
fd
builtins.int"builtins.int*#
n
builtins.int"builtins.intz27"D
readlinkposix.readlink"
posix._T*
path
posix._Tz27"T
removeposix.remove"
None*.
path$
builtins.unicode"builtins.unicodez27"Ç
renameposix.rename"
None*-
src$
builtins.unicode"builtins.unicode*-
dst$
builtins.unicode"builtins.unicodez27"R
rmdirposix.rmdir"
None*.
path$
builtins.unicode"builtins.unicodez27"N
setegidposix.setegid"
None*&
egid
builtins.int"builtins.intz27"N
seteuidposix.seteuid"
None*&
euid
builtins.int"builtins.intz27"K
setgidposix.setgid"
None*%
gid
builtins.int"builtins.intz27"Ü
	setgroupsposix.setgroups"
None*Z
groupsN
typing.Sequence[builtins.int]
builtins.int"builtins.int"typing.Sequencez27"u
setpgidposix.setpgid"
None*%
pid
builtins.int"builtins.int*&
pgrp
builtins.int"builtins.intz27"&
setpgrpposix.setpgrp"
Nonez27"x
setregidposix.setregid"
None*&
rgid
builtins.int"builtins.int*&
egid
builtins.int"builtins.intz27"¢
	setresgidposix.setresgid"
None*&
rgid
builtins.int"builtins.int*&
egid
builtins.int"builtins.int*&
sgid
builtins.int"builtins.intz27"¢
	setresuidposix.setresuid"
None*&
ruid
builtins.int"builtins.int*&
euid
builtins.int"builtins.int*&
suid
builtins.int"builtins.intz27"x
setreuidposix.setreuid"
None*&
ruid
builtins.int"builtins.int*&
euid
builtins.int"builtins.intz27"$
setsidposix.setsid"
Nonez27"K
setuidposix.setuid"
None*%
pid
builtins.int"builtins.intz27"n
stat
posix.stat"&
posix.stat_result"posix.stat_result*.
path$
builtins.unicode"builtins.unicodez27"à
statvfsposix.statvfs"π
àTuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int*.
path$
builtins.unicode"builtins.unicodez27"^
stat_float_timesposix.stat_float_times"
None*$
fd
builtins.int"builtins.intz27"d
strerrorposix.strerror"
builtins.str"builtins.str*&
code
builtins.int"builtins.intz27"ç
symlinkposix.symlink"
None*0
source$
builtins.unicode"builtins.unicode*3
	link_name$
builtins.unicode"builtins.unicodez27"¶
sysconfposix.sysconf"
builtins.int"builtins.int*j
name`
 Union[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.intz27"k
systemposix.system"
builtins.int"builtins.int*1
command$
builtins.unicode"builtins.unicodez27"d
	tcgetpgrpposix.tcgetpgrp"
builtins.int"builtins.int*$
fd
builtins.int"builtins.intz27"v
	tcsetpgrpposix.tcsetpgrp"
None*$
fd
builtins.int"builtins.int*$
pg
builtins.int"builtins.intz27"ö
timesposix.times"ˇ
QTuple[builtins.float,builtins.float,builtins.float,builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.floatz27"`
tmpfileposix.tmpfile"B
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IOz27"`
ttynameposix.ttyname"
builtins.str"builtins.str*$
fd
builtins.int"builtins.intz27"^
umaskposix.umask"
builtins.int"builtins.int*&
mask
builtins.int"builtins.intz27"¸
unameposix.uname"·
GTuple[builtins.str,builtins.str,builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.strz27"T
unlinkposix.unlink"
None*.
path$
builtins.unicode"builtins.unicodez27"S
unsetenvposix.unsetenv"
None*)
varname
builtins.str"builtins.strz27"_
urandomposix.urandom"
builtins.str"builtins.str*#
n
builtins.int"builtins.intz27"˝
utimeposix.utime"
None*.
path$
builtins.unicode"builtins.unicode*®
timesú
,Union[Tuple[builtins.int,builtins.int],None]`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
Nonez27"4
wait
posix.wait"
builtins.int"builtins.intz27"Œ

wait3posix.wait3"à

ÜTuple[builtins.int,builtins.int,TypeAlias[Tuple[builtins.float,builtins.float,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]]]
builtins.int"builtins.int
builtins.int"builtins.intæ
ÂTypeAlias[Tuple[builtins.float,builtins.float,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]]«
⁄Tuple[builtins.float,builtins.float,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int] 
builtins.float"builtins.float 
builtins.float"builtins.float
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int"posix._r*)
options
builtins.int"builtins.intz27"ı

wait4posix.wait4"à

ÜTuple[builtins.int,builtins.int,TypeAlias[Tuple[builtins.float,builtins.float,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]]]
builtins.int"builtins.int
builtins.int"builtins.intæ
ÂTypeAlias[Tuple[builtins.float,builtins.float,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]]«
⁄Tuple[builtins.float,builtins.float,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int] 
builtins.float"builtins.float 
builtins.float"builtins.float
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int"posix._r*%
pid
builtins.int"builtins.int*)
options
builtins.int"builtins.intz27"å
waitpidposix.waitpid"
builtins.int"builtins.int*%
pid
builtins.int"builtins.int*)
options
builtins.int"builtins.intz27"É
writeposix.write"
builtins.int"builtins.int*$
fd
builtins.int"builtins.int*%
str
builtins.str"builtins.strz27*˛
listdirposix.listdirƒ
listdirposix.listdir"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*P
pathD
Union[builtins.str,None]
builtins.str"builtins.str
None 0:overloadX§
listdirposix.listdir"P
builtins.list[builtins.bytes] 
builtins.bytes"builtins.bytes"builtins.list**
path 
builtins.bytes"builtins.bytes0:overloadXö
listdirposix.listdir"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*&
path
builtins.int"builtins.int0:overloadXƒ
listdirposix.listdir"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*P
pathF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike0:overloadX"35"36"37"38"39