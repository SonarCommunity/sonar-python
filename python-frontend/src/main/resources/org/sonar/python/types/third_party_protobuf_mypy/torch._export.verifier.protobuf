
torch._export.verifierS
SpecViolationError)torch._export.verifier.SpecViolationError"builtins.Exception–
_VerifierMeta$torch._export.verifier._VerifierMeta"builtins.type*d
__new__,torch._export.verifier._VerifierMeta.__new__*
metacls*
name*	
bases*	
attrsr£
	_registry.torch._export.verifier._VerifierMeta._registryÂ
Abuiltins.dict[builtins.str,Type[torch._export.verifier.Verifier]]
builtins.str"builtins.strs
%Type[torch._export.verifier.Verifier]B
torch._export.verifier.Verifier"torch._export.verifier.Verifier"type"builtins.dictà
Verifiertorch._export.verifier.Verifier"builtins.object*∆
allowed_builtin_ops3torch._export.verifier.Verifier.allowed_builtin_ops",
builtins.list[Any]
Any"builtins.list*L
selfB
torch._export.verifier.Verifier"torch._export.verifier.Verifier*›
allowed_op_types0torch._export.verifier.Verifier.allowed_op_types"I
builtins.tuple[Type[Any]]
	Type[Any]
Any"type"builtins.tuple*L
selfB
torch._export.verifier.Verifier"torch._export.verifier.Verifier*Á
allowed_getattr_types5torch._export.verifier.Verifier.allowed_getattr_types"I
builtins.tuple[Type[Any]]
	Type[Any]
Any"type"builtins.tuple*L
selfB
torch._export.verifier.Verifier"torch._export.verifier.Verifier*R
check_valid_op.torch._export.verifier.Verifier.check_valid_op*
self*
op*Ï
check_additional0torch._export.verifier.Verifier.check_additional"
None*L
selfB
torch._export.verifier.Verifier"torch._export.verifier.Verifier*N
gmF
!torch.fx.graph_module.GraphModule"!torch.fx.graph_module.GraphModule*˘
check%torch._export.verifier.Verifier.check"
None*L
selfB
torch._export.verifier.Verifier"torch._export.verifier.Verifier*f
ep^
-torch.export.exported_program.ExportedProgram"-torch.export.exported_program.ExportedProgram0:finalP*˝
_check_graph_module3torch._export.verifier.Verifier._check_graph_module"
None*L
selfB
torch._export.verifier.Verifier"torch._export.verifier.Verifier*N
gmF
!torch.fx.graph_module.GraphModule"!torch.fx.graph_module.GraphModule0:finalP@b$torch._export.verifier._VerifierMetarP
dialect'torch._export.verifier.Verifier.dialect
builtins.str"builtins.strç
is_functional$torch._export.verifier.is_functional"
builtins.bool"builtins.bool*6
op.
torch._ops.OpOverload"torch._ops.OpOverloadÖ
_check_has_fake_tensor-torch._export.verifier._check_has_fake_tensor"
None*2
node(
torch.fx.node.Node"torch.fx.node.Nodem

_check_val!torch._export.verifier._check_val"
None*2
node(
torch.fx.node.Node"torch.fx.node.Nodew
_check_torch_fn&torch._export.verifier._check_torch_fn"
None*2
node(
torch.fx.node.Node"torch.fx.node.NodeÇ
getattr_recursive(torch._export.verifier.getattr_recursive"
Any*
obj
Any*(
target
builtins.str"builtins.strà
"_verify_exported_program_signature9torch._export.verifier._verify_exported_program_signature"
None*
exported_program
Anyó
load_verifier$torch._export.verifier.load_verifier"¥
1Union[Type[torch._export.verifier.Verifier],None]s
%Type[torch._export.verifier.Verifier]B
torch._export.verifier.Verifier"torch._export.verifier.Verifier"type
None*)
dialect
builtins.str"builtins.str*í
__annotations__&torch._export.verifier.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict