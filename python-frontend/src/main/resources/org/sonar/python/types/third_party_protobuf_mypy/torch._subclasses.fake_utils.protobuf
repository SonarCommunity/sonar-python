
torch._subclasses.fake_utils·
CrossRefFakeMode-torch._subclasses.fake_utils.CrossRefFakeMode".torch.utils._python_dispatch.TorchDispatchMode*ë
__init__6torch._subclasses.fake_utils.CrossRefFakeMode.__init__"
None*h
self^
-torch._subclasses.fake_utils.CrossRefFakeMode"-torch._subclasses.fake_utils.CrossRefFakeMode*õ
ignore_op_fnÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None *
check_strides
Any *
check_aliasing
Any *è
__torch_dispatch__@torch._subclasses.fake_utils.CrossRefFakeMode.__torch_dispatch__*
self*
func*	
types*

args *
kwargs ró
ignore_op_fn:torch._subclasses.fake_utils.CrossRefFakeMode.ignore_op_fnK
CallableType[builtins.function]&
builtins.function"builtins.functionrU
check_strides;torch._subclasses.fake_utils.CrossRefFakeMode.check_strides
AnyrW
check_aliasing<torch._subclasses.fake_utils.CrossRefFakeMode.check_aliasing
Anyb
outputs_alias_inputs1torch._subclasses.fake_utils.outputs_alias_inputs*
outputs*

inputs^
outputs_are_inputs/torch._subclasses.fake_utils.outputs_are_inputs*
outputs*

inputs\
output_alias_each_other4torch._subclasses.fake_utils.output_alias_each_other*
outputsU
is_sdpa_error*torch._subclasses.fake_utils.is_sdpa_error*
func*
idx*
e*ò
__annotations__,torch._subclasses.fake_utils.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*
pytreetorch.utils._pytree *2
aten!torch._subclasses.fake_utils.aten
Any