
#torch.fx.passes.utils.matcher_utils„
InternalMatch1torch.fx.passes.utils.matcher_utils.InternalMatch"builtins.object*P
__copy__:torch.fx.passes.utils.matcher_utils.InternalMatch.__copy__*
self*Á
__init__:torch.fx.passes.utils.matcher_utils.InternalMatch.__init__"
None*p
selff
1torch.fx.passes.utils.matcher_utils.InternalMatch"1torch.fx.passes.utils.matcher_utils.InternalMatch*i
anchors\
!builtins.list[torch.fx.node.Node](
torch.fx.node.Node"torch.fx.node.Node"builtins.list*´
	nodes_mapô
4builtins.dict[torch.fx.node.Node,torch.fx.node.Node](
torch.fx.node.Node"torch.fx.node.Node(
torch.fx.node.Node"torch.fx.node.Node"builtins.dict *u
placeholder_nodes\
!builtins.list[torch.fx.node.Node](
torch.fx.node.Node"torch.fx.node.Node"builtins.list *s
returning_nodes\
!builtins.list[torch.fx.node.Node](
torch.fx.node.Node"torch.fx.node.Node"builtins.list *ù
name_node_mapá
.builtins.dict[builtins.str,torch.fx.node.Node]
builtins.str"builtins.str(
torch.fx.node.Node"torch.fx.node.Node"builtins.dict 8r¢
anchors9torch.fx.passes.utils.matcher_utils.InternalMatch.anchors\
!builtins.list[torch.fx.node.Node](
torch.fx.node.Node"torch.fx.node.Node"builtins.listr‰
	nodes_map;torch.fx.passes.utils.matcher_utils.InternalMatch.nodes_mapô
4builtins.dict[torch.fx.node.Node,torch.fx.node.Node](
torch.fx.node.Node"torch.fx.node.Node(
torch.fx.node.Node"torch.fx.node.Node"builtins.dictr∂
placeholder_nodesCtorch.fx.passes.utils.matcher_utils.InternalMatch.placeholder_nodes\
!builtins.list[torch.fx.node.Node](
torch.fx.node.Node"torch.fx.node.Node"builtins.listr≤
returning_nodesAtorch.fx.passes.utils.matcher_utils.InternalMatch.returning_nodes\
!builtins.list[torch.fx.node.Node](
torch.fx.node.Node"torch.fx.node.Node"builtins.listr⁄
name_node_map?torch.fx.passes.utils.matcher_utils.InternalMatch.name_node_mapá
.builtins.dict[builtins.str,torch.fx.node.Node]
builtins.str"builtins.str(
torch.fx.node.Node"torch.fx.node.Node"builtins.dictr¯
__dataclass_fields__Ftorch.fx.passes.utils.matcher_utils.InternalMatch.__dataclass_fields__ó
2builtins.dict[builtins.str,dataclasses.Field[Any]]
builtins.str"builtins.str4
dataclasses.Field[Any]
Any"dataclasses.Field"builtins.dictÌ$
SubgraphMatcher3torch.fx.passes.utils.matcher_utils.SubgraphMatcher"builtins.object*È
__init__<torch.fx.passes.utils.matcher_utils.SubgraphMatcher.__init__"
None*t
selfj
3torch.fx.passes.utils.matcher_utils.SubgraphMatcher"3torch.fx.passes.utils.matcher_utils.SubgraphMatcher*9
pattern,
torch.fx.graph.Graph"torch.fx.graph.Graph*2
match_output
builtins.bool"builtins.bool *7
match_placeholder
builtins.bool"builtins.bool *@
remove_overlapping_matches
builtins.bool"builtins.bool *5
ignore_literals
builtins.bool"builtins.bool *‘
_match_attributesEtorch.fx.passes.utils.matcher_utils.SubgraphMatcher._match_attributes"
builtins.bool"builtins.bool*t
selfj
3torch.fx.passes.utils.matcher_utils.SubgraphMatcher"3torch.fx.passes.utils.matcher_utils.SubgraphMatcher*0
pn(
torch.fx.node.Node"torch.fx.node.Node*0
gn(
torch.fx.node.Node"torch.fx.node.Node*“
_nodes_are_equalDtorch.fx.passes.utils.matcher_utils.SubgraphMatcher._nodes_are_equal"
builtins.bool"builtins.bool*t
selfj
3torch.fx.passes.utils.matcher_utils.SubgraphMatcher"3torch.fx.passes.utils.matcher_utils.SubgraphMatcher*0
pn(
torch.fx.node.Node"torch.fx.node.Node*0
gn(
torch.fx.node.Node"torch.fx.node.Node*î
_is_containedAtorch.fx.passes.utils.matcher_utils.SubgraphMatcher._is_contained"
builtins.bool"builtins.bool*t
selfj
3torch.fx.passes.utils.matcher_utils.SubgraphMatcher"3torch.fx.passes.utils.matcher_utils.SubgraphMatcher*©
	nodes_mapô
4builtins.dict[torch.fx.node.Node,torch.fx.node.Node](
torch.fx.node.Node"torch.fx.node.Node(
torch.fx.node.Node"torch.fx.node.Node"builtins.dict*Í
_remove_overlapping_matchesOtorch.fx.passes.utils.matcher_utils.SubgraphMatcher._remove_overlapping_matches"π
@builtins.list[torch.fx.passes.utils.matcher_utils.InternalMatch]f
1torch.fx.passes.utils.matcher_utils.InternalMatch"1torch.fx.passes.utils.matcher_utils.InternalMatch"builtins.list*t
selfj
3torch.fx.passes.utils.matcher_utils.SubgraphMatcher"3torch.fx.passes.utils.matcher_utils.SubgraphMatcher*«
matchesπ
@builtins.list[torch.fx.passes.utils.matcher_utils.InternalMatch]f
1torch.fx.passes.utils.matcher_utils.InternalMatch"1torch.fx.passes.utils.matcher_utils.InternalMatch"builtins.list*Å
_match_literalsCtorch.fx.passes.utils.matcher_utils.SubgraphMatcher._match_literals"
builtins.bool"builtins.bool*t
selfj
3torch.fx.passes.utils.matcher_utils.SubgraphMatcher"3torch.fx.passes.utils.matcher_utils.SubgraphMatcher*
pn
Any*
gn
Any*q
matchf
1torch.fx.passes.utils.matcher_utils.InternalMatch"1torch.fx.passes.utils.matcher_utils.InternalMatch*Ω
_match_nodes@torch.fx.passes.utils.matcher_utils.SubgraphMatcher._match_nodes"
builtins.bool"builtins.bool*t
selfj
3torch.fx.passes.utils.matcher_utils.SubgraphMatcher"3torch.fx.passes.utils.matcher_utils.SubgraphMatcher*0
pn(
torch.fx.node.Node"torch.fx.node.Node*0
gn(
torch.fx.node.Node"torch.fx.node.Node*q
matchf
1torch.fx.passes.utils.matcher_utils.InternalMatch"1torch.fx.passes.utils.matcher_utils.InternalMatch*≠
match9torch.fx.passes.utils.matcher_utils.SubgraphMatcher.match"π
@builtins.list[torch.fx.passes.utils.matcher_utils.InternalMatch]f
1torch.fx.passes.utils.matcher_utils.InternalMatch"1torch.fx.passes.utils.matcher_utils.InternalMatch"builtins.list*t
selfj
3torch.fx.passes.utils.matcher_utils.SubgraphMatcher"3torch.fx.passes.utils.matcher_utils.SubgraphMatcher*7
graph,
torch.fx.graph.Graph"torch.fx.graph.Graph8rt
pattern;torch.fx.passes.utils.matcher_utils.SubgraphMatcher.pattern,
torch.fx.graph.Graph"torch.fx.graph.Graphrp
match_output@torch.fx.passes.utils.matcher_utils.SubgraphMatcher.match_output
builtins.bool"builtins.boolrz
match_placeholderEtorch.fx.passes.utils.matcher_utils.SubgraphMatcher.match_placeholder
builtins.bool"builtins.boolrå
remove_overlapping_matchesNtorch.fx.passes.utils.matcher_utils.SubgraphMatcher.remove_overlapping_matches
builtins.bool"builtins.boolrv
ignore_literalsCtorch.fx.passes.utils.matcher_utils.SubgraphMatcher.ignore_literals
builtins.bool"builtins.boolrò
pattern_placeholder_nodesMtorch.fx.passes.utils.matcher_utils.SubgraphMatcher.pattern_placeholder_nodes,
builtins.list[Any]
Any"builtins.listrƒ
pattern_returning_nodesKtorch.fx.passes.utils.matcher_utils.SubgraphMatcher.pattern_returning_nodes\
!builtins.list[torch.fx.node.Node](
torch.fx.node.Node"torch.fx.node.Node"builtins.listr¥
pattern_anchorsCtorch.fx.passes.utils.matcher_utils.SubgraphMatcher.pattern_anchors\
!builtins.list[torch.fx.node.Node](
torch.fx.node.Node"torch.fx.node.Node"builtins.list@
_init_logger0torch.fx.passes.utils.matcher_utils._init_logger*ü
__annotations__3torch.fx.passes.utils.matcher_utils.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*Ç
__all__+torch.fx.passes.utils.matcher_utils.__all__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*=
logger*torch.fx.passes.utils.matcher_utils.logger
Any