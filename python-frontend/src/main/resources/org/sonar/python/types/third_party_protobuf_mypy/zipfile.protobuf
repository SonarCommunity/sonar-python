
zipfile4

BadZipFilezipfile.BadZipFile"builtins.Exception8
LargeZipFilezipfile.LargeZipFile"builtins.Exceptionø

ZipExtFilezipfile.ZipExtFile"io.BufferedIOBase*°
__init__zipfile.ZipExtFile.__init__"
None*2
self(
zipfile.ZipExtFile"zipfile.ZipExtFile*U
fileobjH
typing.IO[builtins.bytes] 
builtins.bytes"builtins.bytes"	typing.IO*&
mode
builtins.str"builtins.str*/
zipinfo"
zipfile.ZipInfo"zipfile.ZipInfo*U
pwdJ
Union[builtins.bytes,None] 
builtins.bytes"builtins.bytes
None *3
close_fileobj
builtins.bool"builtins.bool *ƒ
readzipfile.ZipExtFile.read" 
builtins.bytes"builtins.bytes*2
self(
zipfile.ZipExtFile"zipfile.ZipExtFile*M
nD
Union[builtins.int,None]
builtins.int"builtins.int
None *®
readlinezipfile.ZipExtFile.readline" 
builtins.bytes"builtins.bytes*2
self(
zipfile.ZipExtFile"zipfile.ZipExtFile*)
limit
builtins.int"builtins.int *w
__repr__zipfile.ZipExtFile.__repr__"
builtins.str"builtins.str*0
self(
zipfile.ZipExtFile"zipfile.ZipExtFile*ú
peekzipfile.ZipExtFile.peek" 
builtins.bytes"builtins.bytes*2
self(
zipfile.ZipExtFile"zipfile.ZipExtFile*%
n
builtins.int"builtins.int *ƒ
read1zipfile.ZipExtFile.read1" 
builtins.bytes"builtins.bytes*2
self(
zipfile.ZipExtFile"zipfile.ZipExtFile*K
nD
Union[builtins.int,None]
builtins.int"builtins.int
Noner?
MAX_Nzipfile.ZipExtFile.MAX_N
builtins.int"builtins.intrO
MIN_READ_SIZE zipfile.ZipExtFile.MIN_READ_SIZE
builtins.int"builtins.intrO
MAX_SEEK_READ zipfile.ZipExtFile.MAX_SEEK_READ
builtins.int"builtins.intr≥
newlineszipfile.ZipExtFile.newlinesâ
)Union[builtins.list[builtins.bytes],None]P
builtins.list[builtins.bytes] 
builtins.bytes"builtins.bytes"builtins.list
Noner=
modezipfile.ZipExtFile.mode
builtins.str"builtins.strr=
namezipfile.ZipExtFile.name
builtins.str"builtins.str©
_Writerzipfile._Writer"builtins.object*z
writezipfile._Writer.write"
Any*,
self"
zipfile._Writer"zipfile._Writer*#
__s
builtins.str"builtins.strXˇ2
ZipFilezipfile.ZipFile"builtins.object*û
__init__zipfile.ZipFile.__init__"
None*,
self"
zipfile.ZipFile"zipfile.ZipFile*û
fileì
YUnion[TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]],typing.IO[builtins.bytes]]È
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPathH
typing.IO[builtins.bytes] 
builtins.bytes"builtins.bytes"	typing.IO*(
mode
builtins.str"builtins.str */
compression
builtins.int"builtins.int *0

allowZip64
builtins.bool"builtins.bool *Y
compresslevelD
Union[builtins.int,None]
builtins.int"builtins.int
None *7
strict_timestamps
builtins.bool"builtins.bool *v
	__enter__zipfile.ZipFile.__enter__""
zipfile.ZipFile"zipfile.ZipFile**
self"
zipfile.ZipFile"zipfile.ZipFile*»
__exit__zipfile.ZipFile.__exit__"
None**
self"
zipfile.ZipFile"zipfile.ZipFile*ó
exc_typeä
(Union[Type[builtins.BaseException],None]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException
None*m
exc_valb
"Union[builtins.BaseException,None]0
builtins.BaseException"builtins.BaseException
None*c
exc_tbY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None*V
closezipfile.ZipFile.close"
None*,
self"
zipfile.ZipFile"zipfile.ZipFile*ú
getinfozipfile.ZipFile.getinfo""
zipfile.ZipInfo"zipfile.ZipInfo*,
self"
zipfile.ZipFile"zipfile.ZipFile*&
name
builtins.str"builtins.str*ß
infolistzipfile.ZipFile.infolist"S
builtins.list[zipfile.ZipInfo]"
zipfile.ZipInfo"zipfile.ZipInfo"builtins.list*,
self"
zipfile.ZipFile"zipfile.ZipFile*û
namelistzipfile.ZipFile.namelist"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*,
self"
zipfile.ZipFile"zipfile.ZipFile*Å
openzipfile.ZipFile.open"H
typing.IO[builtins.bytes] 
builtins.bytes"builtins.bytes"	typing.IO*,
self"
zipfile.ZipFile"zipfile.ZipFile*∂
name´
.TypeAlias[Union[builtins.str,zipfile.ZipInfo]]i
#Union[builtins.str,zipfile.ZipInfo]
builtins.str"builtins.str"
zipfile.ZipInfo"zipfile.ZipInfo"zipfile._SZI*(
mode
builtins.str"builtins.str *U
pwdJ
Union[builtins.bytes,None] 
builtins.bytes"builtins.bytes
None *1
force_zip64
builtins.bool"builtins.bool *∂
extractzipfile.ZipFile.extract"
builtins.str"builtins.str*,
self"
zipfile.ZipFile"zipfile.ZipFile*∏
member´
.TypeAlias[Union[builtins.str,zipfile.ZipInfo]]i
#Union[builtins.str,zipfile.ZipInfo]
builtins.str"builtins.str"
zipfile.ZipInfo"zipfile.ZipInfo"zipfile._SZI*≥
path¶
2Union[builtins.str,os.PathLike[builtins.str],None]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike
None *U
pwdJ
Union[builtins.bytes,None] 
builtins.bytes"builtins.bytes
None *á

extractallzipfile.ZipFile.extractall"
None*,
self"
zipfile.ZipFile"zipfile.ZipFile*≥
path¶
2Union[builtins.str,os.PathLike[builtins.str],None]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike
None *ó
membersá
)Union[typing.Iterable[builtins.str],None]N
typing.Iterable[builtins.str]
builtins.str"builtins.str"typing.Iterable
None *U
pwdJ
Union[builtins.bytes,None] 
builtins.bytes"builtins.bytes
None *∑
printdirzipfile.ZipFile.printdir"
None*,
self"
zipfile.ZipFile"zipfile.ZipFile*Y
fileM
Union[zipfile._Writer,None]"
zipfile._Writer"zipfile._Writer
None *ç
setpasswordzipfile.ZipFile.setpassword"
None*,
self"
zipfile.ZipFile"zipfile.ZipFile*)
pwd 
builtins.bytes"builtins.bytes*¸
readzipfile.ZipFile.read" 
builtins.bytes"builtins.bytes*,
self"
zipfile.ZipFile"zipfile.ZipFile*∂
name´
.TypeAlias[Union[builtins.str,zipfile.ZipInfo]]i
#Union[builtins.str,zipfile.ZipInfo]
builtins.str"builtins.str"
zipfile.ZipInfo"zipfile.ZipInfo"zipfile._SZI*U
pwdJ
Union[builtins.bytes,None] 
builtins.bytes"builtins.bytes
None *ñ
testzipzipfile.ZipFile.testzip"D
Union[builtins.str,None]
builtins.str"builtins.str
None*,
self"
zipfile.ZipFile"zipfile.ZipFile*¿
writezipfile.ZipFile.write"
None*,
self"
zipfile.ZipFile"zipfile.ZipFile*¯
filenameÈ
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPath*∂
arcname¶
2Union[builtins.str,os.PathLike[builtins.str],None]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike
None *Y
compress_typeD
Union[builtins.int,None]
builtins.int"builtins.int
None *Y
compresslevelD
Union[builtins.int,None]
builtins.int"builtins.int
None *…
writestrzipfile.ZipFile.writestr"
None*,
self"
zipfile.ZipFile"zipfile.ZipFile*¬
zinfo_or_arcname´
.TypeAlias[Union[builtins.str,zipfile.ZipInfo]]i
#Union[builtins.str,zipfile.ZipInfo]
builtins.str"builtins.str"
zipfile.ZipInfo"zipfile.ZipInfo"zipfile._SZI*p
dataf
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str*Y
compress_typeD
Union[builtins.int,None]
builtins.int"builtins.int
None *Y
compresslevelD
Union[builtins.int,None]
builtins.int"builtins.int
None rj
filenamezipfile.ZipFile.filenameD
Union[builtins.str,None]
builtins.str"builtins.str
Noner<
debugzipfile.ZipFile.debug
builtins.int"builtins.intrD
commentzipfile.ZipFile.comment 
builtins.bytes"builtins.bytesry
filelistzipfile.ZipFile.filelistS
builtins.list[zipfile.ZipInfo]"
zipfile.ZipInfo"zipfile.ZipInfo"builtins.listró
fpzipfile.ZipFile.fp}
%Union[typing.IO[builtins.bytes],None]H
typing.IO[builtins.bytes] 
builtins.bytes"builtins.bytes"	typing.IO
Noner®

NameToInfozipfile.ZipFile.NameToInfo~
+builtins.dict[builtins.str,zipfile.ZipInfo]
builtins.str"builtins.str"
zipfile.ZipInfo"zipfile.ZipInfo"builtins.dictrD
	start_dirzipfile.ZipFile.start_dir
builtins.int"builtins.intœ
	PyZipFilezipfile.PyZipFile"zipfile.ZipFile*ƒ
__init__zipfile.PyZipFile.__init__"
None*0
self&
zipfile.PyZipFile"zipfile.PyZipFile*§
fileô
-Union[builtins.str,typing.IO[builtins.bytes]]
builtins.str"builtins.strH
typing.IO[builtins.bytes] 
builtins.bytes"builtins.bytes"	typing.IO*(
mode
builtins.str"builtins.str */
compression
builtins.int"builtins.int *0

allowZip64
builtins.bool"builtins.bool *,
optimize
builtins.int"builtins.int *÷
writepyzipfile.PyZipFile.writepy"
None*0
self&
zipfile.PyZipFile"zipfile.PyZipFile**
pathname
builtins.str"builtins.str*,
basename
builtins.str"builtins.str *ô

filterfuncÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None ˝
ZipInfozipfile.ZipInfo"builtins.object*ƒ
__init__zipfile.ZipInfo.__init__"
None*,
self"
zipfile.ZipInfo"zipfile.ZipInfo*T
filenameD
Union[builtins.str,None]
builtins.str"builtins.str
None *è
	date_time˝
`Union[Tuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int],None]å
TTuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
None *ê
	from_filezipfile.ZipInfo.from_file""
zipfile.ZipInfo"zipfile.ZipInfo*F
cls=
Type[zipfile.ZipInfo]"
zipfile.ZipInfo"zipfile.ZipInfo*¯
filenameÈ
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPath*∂
arcname¶
2Union[builtins.str,os.PathLike[builtins.str],None]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike
None *7
strict_timestamps
builtins.bool"builtins.bool 0:classmethodp*n
is_dirzipfile.ZipInfo.is_dir"
builtins.bool"builtins.bool*,
self"
zipfile.ZipInfo"zipfile.ZipInfo*Œ

FileHeaderzipfile.ZipInfo.FileHeader" 
builtins.bytes"builtins.bytes*,
self"
zipfile.ZipInfo"zipfile.ZipInfo*T
zip64G
Union[builtins.bool,None]
builtins.bool"builtins.bool
None rB
filenamezipfile.ZipInfo.filename
builtins.str"builtins.strr®
	date_timezipfile.ZipInfo.date_timeˇ
_TypeAlias[Tuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]]å
TTuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int"zipfile._DTrL
compress_typezipfile.ZipInfo.compress_type
builtins.int"builtins.intrD
commentzipfile.ZipInfo.comment 
builtins.bytes"builtins.bytesr@
extrazipfile.ZipInfo.extra 
builtins.bytes"builtins.bytesrL
create_systemzipfile.ZipInfo.create_system
builtins.int"builtins.intrN
create_versionzipfile.ZipInfo.create_version
builtins.int"builtins.intrP
extract_versionzipfile.ZipInfo.extract_version
builtins.int"builtins.intrB
reservedzipfile.ZipInfo.reserved
builtins.int"builtins.intrD
	flag_bitszipfile.ZipInfo.flag_bits
builtins.int"builtins.intr>
volumezipfile.ZipInfo.volume
builtins.int"builtins.intrL
internal_attrzipfile.ZipInfo.internal_attr
builtins.int"builtins.intrL
external_attrzipfile.ZipInfo.external_attr
builtins.int"builtins.intrL
header_offsetzipfile.ZipInfo.header_offset
builtins.int"builtins.intr8
CRCzipfile.ZipInfo.CRC
builtins.int"builtins.intrL
compress_sizezipfile.ZipInfo.compress_size
builtins.int"builtins.intrD
	file_sizezipfile.ZipInfo.file_size
builtins.int"builtins.int≤
_PathOpenProtocolzipfile._PathOpenProtocol"builtins.object*Ó
__call__"zipfile._PathOpenProtocol.__call__"H
typing.IO[builtins.bytes] 
builtins.bytes"builtins.bytes"	typing.IO*@
self6
zipfile._PathOpenProtocol"zipfile._PathOpenProtocol*(
mode
builtins.str"builtins.str *U
pwdJ
Union[builtins.bytes,None] 
builtins.bytes"builtins.bytes
None *1
force_zip64
builtins.bool"builtins.bool Xæ
Pathzipfile.Path"builtins.object*m
namezipfile.Path.name"
builtins.str"builtins.str*&
self
zipfile.Path"zipfile.Path0:property`*q
parentzipfile.Path.parent"
zipfile.Path"zipfile.Path*&
self
zipfile.Path"zipfile.Path0:property`*–
__init__zipfile.Path.__init__"
None*&
self
zipfile.Path"zipfile.Path*“
root«
iUnion[zipfile.ZipFile,TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]],typing.IO[builtins.bytes]]"
zipfile.ZipFile"zipfile.ZipFileÈ
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPathH
typing.IO[builtins.bytes] 
builtins.bytes"builtins.bytes"	typing.IO*&
at
builtins.str"builtins.str *á
openzipfile.Path.open"6
zipfile._PathOpenProtocol"zipfile._PathOpenProtocol*&
self
zipfile.Path"zipfile.Path0:property`*ó
iterdirzipfile.Path.iterdir"N
typing.Iterator[zipfile.Path]
zipfile.Path"zipfile.Path"typing.Iterator*&
self
zipfile.Path"zipfile.Path*e
is_dirzipfile.Path.is_dir"
builtins.bool"builtins.bool*&
self
zipfile.Path"zipfile.Path*g
is_filezipfile.Path.is_file"
builtins.bool"builtins.bool*&
self
zipfile.Path"zipfile.Path*e
existszipfile.Path.exists"
builtins.bool"builtins.bool*&
self
zipfile.Path"zipfile.Path*”
	read_textzipfile.Path.read_text"
builtins.str"builtins.str*&
self
zipfile.Path"zipfile.Path*T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
newlineD
Union[builtins.str,None]
builtins.str"builtins.str
None *4
line_buffering
builtins.bool"builtins.bool *3
write_through
builtins.bool"builtins.bool *o

read_byteszipfile.Path.read_bytes" 
builtins.bytes"builtins.bytes*&
self
zipfile.Path"zipfile.Path*›
joinpathzipfile.Path.joinpath"
zipfile.Path"zipfile.Path*&
self
zipfile.Path"zipfile.Path*Û
addÈ
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPath*ﬂ
__truediv__zipfile.Path.__truediv__"
zipfile.Path"zipfile.Path*$
self
zipfile.Path"zipfile.Path*Ò
addÈ
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPathÂ

is_zipfilezipfile.is_zipfile"
builtins.bool"builtins.bool*¢
filenameì
YUnion[TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]],typing.IO[builtins.bytes]]È
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPathH
typing.IO[builtins.bytes] 
builtins.bytes"builtins.bytes"	typing.IO*>

ZIP_STOREDzipfile.ZIP_STORED
builtins.int"builtins.int*B
ZIP_DEFLATEDzipfile.ZIP_DEFLATED
builtins.int"builtins.int*@
ZIP64_LIMITzipfile.ZIP64_LIMIT
builtins.int"builtins.int*P
ZIP_FILECOUNT_LIMITzipfile.ZIP_FILECOUNT_LIMIT
builtins.int"builtins.int*H
ZIP_MAX_COMMENTzipfile.ZIP_MAX_COMMENT
builtins.int"builtins.int*<
	ZIP_BZIP2zipfile.ZIP_BZIP2
builtins.int"builtins.int*:
ZIP_LZMAzipfile.ZIP_LZMA
builtins.int"builtins.int