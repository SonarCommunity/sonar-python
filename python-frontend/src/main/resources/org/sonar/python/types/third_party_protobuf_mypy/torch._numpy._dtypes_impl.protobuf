
torch._numpy._dtypes_implä
DefaultDTypes'torch._numpy._dtypes_impl.DefaultDTypes"builtins.tuple*„
_replace0torch._numpy._dtypes_impl.DefaultDTypes._replace"b
+torch._numpy._dtypes_impl.DefaultDTypes._NT1
Tuple[Any,Any,Any]
Any
Any
Any*m
_selfb
+torch._numpy._dtypes_impl.DefaultDTypes._NT1
Tuple[Any,Any,Any]
Any
Any
Any*
float_dtype
Any *
complex_dtype
Any *
	int_dtype
Any *ô
__new__/torch._numpy._dtypes_impl.DefaultDTypes.__new__"b
+torch._numpy._dtypes_impl.DefaultDTypes._NT1
Tuple[Any,Any,Any]
Any
Any
Any*™
_clsü
1Type[torch._numpy._dtypes_impl.DefaultDTypes._NT]b
+torch._numpy._dtypes_impl.DefaultDTypes._NT1
Tuple[Any,Any,Any]
Any
Any
Any"type*
float_dtype
Any*
complex_dtype
Any*
	int_dtype
Any*Ç
_asdict/torch._numpy._dtypes_impl.DefaultDTypes._asdict"W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*m
_selfb
+torch._numpy._dtypes_impl.DefaultDTypes._NT1
Tuple[Any,Any,Any]
Any
Any
Any*¿
_make-torch._numpy._dtypes_impl.DefaultDTypes._make"b
+torch._numpy._dtypes_impl.DefaultDTypes._NT1
Tuple[Any,Any,Any]
Any
Any
Any*™
_clsü
1Type[torch._numpy._dtypes_impl.DefaultDTypes._NT]b
+torch._numpy._dtypes_impl.DefaultDTypes._NT1
Tuple[Any,Any,Any]
Any
Any
Any"type*>
iterable0
typing.Iterable[Any]
Any"typing.Iterable*
new
Any *
len
Any 0:classmethodprK
float_dtype3torch._numpy._dtypes_impl.DefaultDTypes.float_dtype
AnyrO
complex_dtype5torch._numpy._dtypes_impl.DefaultDTypes.complex_dtype
AnyrG
	int_dtype1torch._numpy._dtypes_impl.DefaultDTypes.int_dtype
Anyr»
_fields/torch._numpy._dtypes_impl.DefaultDTypes._fieldsã
-Tuple[builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.strrù
_field_types4torch._numpy._dtypes_impl.DefaultDTypes._field_typesW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dictr£
_field_defaults7torch._numpy._dtypes_impl.DefaultDTypes._field_defaultsW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dictrX
_source/torch._numpy._dtypes_impl.DefaultDTypes._source
builtins.str"builtins.strr£
__annotations__7torch._numpy._dtypes_impl.DefaultDTypes.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict:
default_dtypes(torch._numpy._dtypes_impl.default_dtypesS
get_default_dtype_for/torch._numpy._dtypes_impl.get_default_dtype_for*	
dtypeo
can_cast_impl'torch._numpy._dtypes_impl.can_cast_impl*
from_torch_dtype*
to_torch_dtype*
castingK
result_type_impl*torch._numpy._dtypes_impl.result_type_impl*
tensorsR
python_type_for_torch/torch._numpy._dtypes_impl.python_type_for_torch*
dtyp7
	is_scalar#torch._numpy._dtypes_impl.is_scalar*
xO
is_scalar_or_symbolic/torch._numpy._dtypes_impl.is_scalar_or_symbolic*
xM
_dtype_for_scalar+torch._numpy._dtypes_impl._dtype_for_scalar*
py_type[
_dtype_for_scalar_or_tensor5torch._numpy._dtypes_impl._dtype_for_scalar_or_tensor*
xO
is_float_or_fp_tensor/torch._numpy._dtypes_impl.is_float_or_fp_tensor*
x]
is_complex_or_complex_tensor6torch._numpy._dtypes_impl.is_complex_or_complex_tensor*
x;
	_category#torch._numpy._dtypes_impl._category*	
dtypes
nep50_to_tensors*torch._numpy._dtypes_impl.nep50_to_tensors*
x1*
x2*
handle_weaks*
function_name*ï
__annotations__)torch._numpy._dtypes_impl.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*d
_default_dtypes)torch._numpy._dtypes_impl._default_dtypes&
Union[Any,None]
Any
None*$
_cdtorch._numpy._casting_dicts *◊
_SCALAR_TYPES'torch._numpy._dtypes_impl._SCALAR_TYPESú
vTuple[CallableType[builtins.type],CallableType[builtins.type],CallableType[builtins.type],CallableType[builtins.type]]N
CallableType[builtins.type]
builtins.type"builtins.type"builtins.type?
CallableType[builtins.type]
builtins.type"builtins.type?
CallableType[builtins.type]
builtins.type"builtins.typeN
CallableType[builtins.type]
builtins.type"builtins.type"builtins.type*â
_SCALAR_AND_SYMBOLIC_TYPES4torch._numpy._dtypes_impl._SCALAR_AND_SYMBOLIC_TYPES¥
 Tuple[CallableType[builtins.type],CallableType[builtins.type],CallableType[builtins.type],CallableType[builtins.type],CallableType[builtins.type],CallableType[builtins.type],CallableType[builtins.type]]N
CallableType[builtins.type]
builtins.type"builtins.type"builtins.type?
CallableType[builtins.type]
builtins.type"builtins.type?
CallableType[builtins.type]
builtins.type"builtins.typeN
CallableType[builtins.type]
builtins.type"builtins.type"builtins.type?
CallableType[builtins.type]
builtins.type"builtins.type?
CallableType[builtins.type]
builtins.type"builtins.type?
CallableType[builtins.type]
builtins.type"builtins.type*ã
_NEP50_FUNCS_TENSOR_ONLY2torch._numpy._dtypes_impl._NEP50_FUNCS_TENSOR_ONLY∫
ØTuple[builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str