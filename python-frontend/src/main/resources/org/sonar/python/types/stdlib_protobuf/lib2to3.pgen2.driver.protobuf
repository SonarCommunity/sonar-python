
lib2to3.pgen2.driverˆ-
Driverlib2to3.pgen2.driver.Driver"builtins.object*Ý
__init__$lib2to3.pgen2.driver.Driver.__init__"
None*D
self:
lib2to3.pgen2.driver.Driver"lib2to3.pgen2.driver.Driver*K
grammar>
lib2to3.pgen2.grammar.Grammar"lib2to3.pgen2.grammar.Grammar*–
convert†
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None *X
loggerJ
Union[logging.Logger,None] 
logging.Logger"logging.Logger
None z27z35z36z37z38z39z310*ç
parse_tokens(lib2to3.pgen2.driver.Driver.parse_tokens"Þ
9TypeAlias[Union[lib2to3.pytree.Node,lib2to3.pytree.Leaf]]Š
.Union[lib2to3.pytree.Node,lib2to3.pytree.Leaf]*
lib2to3.pytree.Node"lib2to3.pytree.Node*
lib2to3.pytree.Leaf"lib2to3.pytree.Leaf"lib2to3.pytree._NL*D
self:
lib2to3.pgen2.driver.Driver"lib2to3.pgen2.driver.Driver*<
tokens0
typing.Iterable[Any]
Any"typing.Iterable*+
debug
builtins.bool"builtins.bool z27z35z36z37z38z39z310*ô
parse_stream_raw,lib2to3.pgen2.driver.Driver.parse_stream_raw"Þ
9TypeAlias[Union[lib2to3.pytree.Node,lib2to3.pytree.Leaf]]Š
.Union[lib2to3.pytree.Node,lib2to3.pytree.Leaf]*
lib2to3.pytree.Node"lib2to3.pytree.Node*
lib2to3.pytree.Leaf"lib2to3.pytree.Leaf"lib2to3.pytree._NL*D
self:
lib2to3.pgen2.driver.Driver"lib2to3.pgen2.driver.Driver*Z
streamN
typing.IO[builtins.unicode]$
builtins.unicode"builtins.unicode"	typing.IO*+
debug
builtins.bool"builtins.bool z27*ý
parse_stream_raw,lib2to3.pgen2.driver.Driver.parse_stream_raw"Þ
9TypeAlias[Union[lib2to3.pytree.Node,lib2to3.pytree.Leaf]]Š
.Union[lib2to3.pytree.Node,lib2to3.pytree.Leaf]*
lib2to3.pytree.Node"lib2to3.pytree.Node*
lib2to3.pytree.Leaf"lib2to3.pytree.Leaf"lib2to3.pytree._NL*D
self:
lib2to3.pgen2.driver.Driver"lib2to3.pgen2.driver.Driver*N
streamB
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IO*+
debug
builtins.bool"builtins.bool z35z36z37z38z39z310*ì
parse_stream(lib2to3.pgen2.driver.Driver.parse_stream"Þ
9TypeAlias[Union[lib2to3.pytree.Node,lib2to3.pytree.Leaf]]Š
.Union[lib2to3.pytree.Node,lib2to3.pytree.Leaf]*
lib2to3.pytree.Node"lib2to3.pytree.Node*
lib2to3.pytree.Leaf"lib2to3.pytree.Leaf"lib2to3.pytree._NL*D
self:
lib2to3.pgen2.driver.Driver"lib2to3.pgen2.driver.Driver*Z
streamN
typing.IO[builtins.unicode]$
builtins.unicode"builtins.unicode"	typing.IO*+
debug
builtins.bool"builtins.bool z27*õ
parse_stream(lib2to3.pgen2.driver.Driver.parse_stream"Þ
9TypeAlias[Union[lib2to3.pytree.Node,lib2to3.pytree.Leaf]]Š
.Union[lib2to3.pytree.Node,lib2to3.pytree.Leaf]*
lib2to3.pytree.Node"lib2to3.pytree.Node*
lib2to3.pytree.Leaf"lib2to3.pytree.Leaf"lib2to3.pytree._NL*D
self:
lib2to3.pgen2.driver.Driver"lib2to3.pgen2.driver.Driver*N
streamB
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IO*+
debug
builtins.bool"builtins.bool z35z36z37z38z39z310*¢

parse_file&lib2to3.pgen2.driver.Driver.parse_file"Þ
9TypeAlias[Union[lib2to3.pytree.Node,lib2to3.pytree.Leaf]]Š
.Union[lib2to3.pytree.Node,lib2to3.pytree.Leaf]*
lib2to3.pytree.Node"lib2to3.pytree.Node*
lib2to3.pytree.Leaf"lib2to3.pytree.Leaf"lib2to3.pytree._NL*D
self:
lib2to3.pgen2.driver.Driver"lib2to3.pgen2.driver.Driver*2
filename$
builtins.unicode"builtins.unicode*`
encodingP
Union[builtins.unicode,None]$
builtins.unicode"builtins.unicode
None *+
debug
builtins.bool"builtins.bool z27*ò

parse_file&lib2to3.pgen2.driver.Driver.parse_file"Þ
9TypeAlias[Union[lib2to3.pytree.Node,lib2to3.pytree.Leaf]]Š
.Union[lib2to3.pytree.Node,lib2to3.pytree.Leaf]*
lib2to3.pytree.Node"lib2to3.pytree.Node*
lib2to3.pytree.Leaf"lib2to3.pytree.Leaf"lib2to3.pytree._NL*D
self:
lib2to3.pgen2.driver.Driver"lib2to3.pgen2.driver.Driver*ø
filenameé
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]—
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPath*T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *+
debug
builtins.bool"builtins.bool z35z36z37z38z39z310*À
parse_string(lib2to3.pgen2.driver.Driver.parse_string"Þ
9TypeAlias[Union[lib2to3.pytree.Node,lib2to3.pytree.Leaf]]Š
.Union[lib2to3.pytree.Node,lib2to3.pytree.Leaf]*
lib2to3.pytree.Node"lib2to3.pytree.Node*
lib2to3.pytree.Leaf"lib2to3.pytree.Leaf"lib2to3.pytree._NL*D
self:
lib2to3.pgen2.driver.Driver"lib2to3.pgen2.driver.Driver*.
text$
builtins.unicode"builtins.unicode*+
debug
builtins.bool"builtins.bool z27*Í
parse_string(lib2to3.pgen2.driver.Driver.parse_string"Þ
9TypeAlias[Union[lib2to3.pytree.Node,lib2to3.pytree.Leaf]]Š
.Union[lib2to3.pytree.Node,lib2to3.pytree.Leaf]*
lib2to3.pytree.Node"lib2to3.pytree.Node*
lib2to3.pytree.Leaf"lib2to3.pytree.Leaf"lib2to3.pytree._NL*D
self:
lib2to3.pgen2.driver.Driver"lib2to3.pgen2.driver.Driver*&
text
builtins.str"builtins.str*+
debug
builtins.bool"builtins.bool z35z36z37z38z39z310j27j35j36j37j38j39j310r‹
grammar#lib2to3.pgen2.driver.Driver.grammar>
lib2to3.pgen2.grammar.Grammar"lib2to3.pgen2.grammar.Grammar*27*35*36*37*38*39*310rk
logger"lib2to3.pgen2.driver.Driver.logger 
logging.Logger"logging.Logger*27*35*36*37*38*39*310râ
convert#lib2to3.pgen2.driver.Driver.convert”
*TypeAlias[CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.function"lib2to3.pytree._Convert*27*35*36*37*38*39*310´
load_grammar!lib2to3.pgen2.driver.load_grammar">
lib2to3.pgen2.grammar.Grammar"lib2to3.pgen2.grammar.Grammar*.
gt$
builtins.unicode"builtins.unicode *Z
gpP
Union[builtins.unicode,None]$
builtins.unicode"builtins.unicode
None **
save
builtins.bool"builtins.bool *+
force
builtins.bool"builtins.bool *X
loggerJ
Union[logging.Logger,None] 
logging.Logger"logging.Logger
None z27µ
load_grammar!lib2to3.pgen2.driver.load_grammar">
lib2to3.pgen2.grammar.Grammar"lib2to3.pgen2.grammar.Grammar*&
gt
builtins.str"builtins.str *N
gpD
Union[builtins.str,None]
builtins.str"builtins.str
None **
save
builtins.bool"builtins.bool *+
force
builtins.bool"builtins.bool *X
loggerJ
Union[logging.Logger,None] 
logging.Logger"logging.Logger
None z35z36z37z38z39z310