
_pytest.scope¯&
Scope_pytest.scope.Scope"	enum.Enum*é

next_lower_pytest.scope.Scope.next_lower"*
_pytest.scope.Scope"_pytest.scope.Scope*4
self*
_pytest.scope.Scope"_pytest.scope.Scope*ê
next_higher_pytest.scope.Scope.next_higher"*
_pytest.scope.Scope"_pytest.scope.Scope*4
self*
_pytest.scope.Scope"_pytest.scope.Scope*†
__lt___pytest.scope.Scope.__lt__"
builtins.bool"builtins.bool*,*
_pytest.scope.Scope"_pytest.scope.Scope*,*
_pytest.scope.Scope"_pytest.scope.Scope*Ü
	from_user_pytest.scope.Scope.from_user"*
_pytest.scope.Scope"_pytest.scope.Scope*X
clsO
Type[_pytest.scope.Scope]*
_pytest.scope.Scope"_pytest.scope.Scope"type*∆

scope_nameµ
TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]ï
tUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"_pytest.scope._ScopeName*'
descr
builtins.str"builtins.str*Q
whereD
Union[builtins.str,None]
builtins.str"builtins.str
None 0:classmethodp*±
__le___pytest.scope.Scope.__le__"
builtins.bool"builtins.bool*4
self*
_pytest.scope.Scope"_pytest.scope.Scope*5
other*
_pytest.scope.Scope"_pytest.scope.Scope*±
__gt___pytest.scope.Scope.__gt__"
builtins.bool"builtins.bool*4
self*
_pytest.scope.Scope"_pytest.scope.Scope*5
other*
_pytest.scope.Scope"_pytest.scope.Scope*±
__ge___pytest.scope.Scope.__ge__"
builtins.bool"builtins.bool*4
self*
_pytest.scope.Scope"_pytest.scope.Scope*5
other*
_pytest.scope.Scope"_pytest.scope.Scope8Hr‡
Function_pytest.scope.Scope.Functionµ
TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]ï
tUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"_pytest.scope._ScopeNamer⁄
Class_pytest.scope.Scope.Classµ
TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]ï
tUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"_pytest.scope._ScopeNamer‹
Module_pytest.scope.Scope.Moduleµ
TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]ï
tUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"_pytest.scope._ScopeNamerﬁ
Package_pytest.scope.Scope.Packageµ
TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]ï
tUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"_pytest.scope._ScopeNamerﬁ
Session_pytest.scope.Scope.Sessionµ
TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]ï
tUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"_pytest.scope._ScopeName*â
__annotations___pytest.scope.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*â
_ALL_SCOPES_pytest.scope._ALL_SCOPES_
"builtins.list[_pytest.scope.Scope]*
_pytest.scope.Scope"_pytest.scope.Scope"builtins.list*ª
_SCOPE_INDICES_pytest.scope._SCOPE_INDICESä
/builtins.dict[_pytest.scope.Scope,builtins.int]*
_pytest.scope.Scope"_pytest.scope.Scope
builtins.int"builtins.int"builtins.dict*ˇ
HIGH_SCOPES_pytest.scope.HIGH_SCOPES‘
âbuiltins.list[Union[Literal[_pytest.scope.Scope],Literal[_pytest.scope.Scope],Literal[_pytest.scope.Scope],Literal[_pytest.scope.Scope]]]∂
zUnion[Literal[_pytest.scope.Scope],Literal[_pytest.scope.Scope],Literal[_pytest.scope.Scope],Literal[_pytest.scope.Scope]]L
Literal[_pytest.scope.Scope]	*
_pytest.scope.Scope"_pytest.scope.ScopeL
Literal[_pytest.scope.Scope]	*
_pytest.scope.Scope"_pytest.scope.ScopeL
Literal[_pytest.scope.Scope]	*
_pytest.scope.Scope"_pytest.scope.ScopeL
Literal[_pytest.scope.Scope]	*
_pytest.scope.Scope"_pytest.scope.Scope"builtins.list