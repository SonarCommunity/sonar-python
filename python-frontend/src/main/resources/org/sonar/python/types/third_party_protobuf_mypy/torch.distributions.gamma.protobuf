
torch.distributions.gammaÐ
Gammatorch.distributions.gamma.Gamma"0torch.distributions.exp_family.ExponentialFamily*D
mean$torch.distributions.gamma.Gamma.mean*
self0:property`*D
mode$torch.distributions.gamma.Gamma.mode*
self0:property`*L
variance(torch.distributions.gamma.Gamma.variance*
self0:property`*p
__init__(torch.distributions.gamma.Gamma.__init__*
self*
concentration*
rate*
validate_args *\
expand&torch.distributions.gamma.Gamma.expand*
self*
batch_shape*
	_instance *P
rsample'torch.distributions.gamma.Gamma.rsample*
self*
sample_shape *I
log_prob(torch.distributions.gamma.Gamma.log_prob*
self*	
value*<
entropy'torch.distributions.gamma.Gamma.entropy*
self*Z
_natural_params/torch.distributions.gamma.Gamma._natural_params*
self0:property`*Z
_log_normalizer/torch.distributions.gamma.Gamma._log_normalizer*
self*
x*
y*?
cdf#torch.distributions.gamma.Gamma.cdf*
self*	
valuer”
arg_constraints/torch.distributions.gamma.Gamma.arg_constraintsÏ
Fbuiltins.dict[builtins.str,torch.distributions.constraints.Constraint]
builtins.str"builtins.strX
*torch.distributions.constraints.Constraint"*torch.distributions.constraints.Constraint"builtins.dictr”
support'torch.distributions.gamma.Gamma.support`
.torch.distributions.constraints._GreaterThanEq".torch.distributions.constraints._GreaterThanEqrZ
has_rsample+torch.distributions.gamma.Gamma.has_rsample
builtins.bool"builtins.boolrl
_mean_carrier_measure5torch.distributions.gamma.Gamma._mean_carrier_measure
builtins.int"builtins.intrG
concentration-torch.distributions.gamma.Gamma.concentration
Anyr5
rate$torch.distributions.gamma.Gamma.rate
AnyO
_standard_gamma)torch.distributions.gamma._standard_gamma*
concentration*•
__annotations__)torch.distributions.gamma.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*x
__all__!torch.distributions.gamma.__all__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list