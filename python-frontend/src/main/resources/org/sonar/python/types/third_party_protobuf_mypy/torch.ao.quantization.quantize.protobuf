
torch.ao.quantization.quantized
is_activation_post_process:torch.ao.quantization.observer._is_activation_post_process*

module_
get_default_custom_config_dict=torch.ao.quantization.quantize.get_default_custom_config_dictπ
_propagate_qconfig_helper8torch.ao.quantization.quantize._propagate_qconfig_helper*

module*
qconfig_dict*
qconfig_parent *
prefix * 
prepare_custom_config_dict â
propagate_qconfig_1torch.ao.quantization.quantize.propagate_qconfig_*

module*
qconfig_dict * 
prepare_custom_config_dict p
_observer_forward_hook5torch.ao.quantization.quantize._observer_forward_hook*
self*	
input*

outputl
_observer_forward_pre_hook9torch.ao.quantization.quantize._observer_forward_pre_hook*
self*	
inputã
&_register_activation_post_process_hookEtorch.ao.quantization.quantize._register_activation_post_process_hook*

module*
pre_hook ∏
_add_observer_-torch.ao.quantization.quantize._add_observer_*

module*
qconfig_propagation_list *
non_leaf_module_list *
device *!
custom_module_class_mapping W
_get_unique_devices_3torch.ao.quantization.quantize._get_unique_devices_*

moduleQ
add_quant_dequant0torch.ao.quantization.quantize.add_quant_dequant*

module§
prepare&torch.ao.quantization.quantize.prepare*	
model*
inplace *

allow_list *#
observer_non_leaf_module_list * 
prepare_custom_config_dict m
_remove_activation_post_process>torch.ao.quantization.quantize._remove_activation_post_process*

moduleM
_remove_qconfig.torch.ao.quantization.quantize._remove_qconfig*

modulev
quantize'torch.ao.quantization.quantize.quantize*	
model*

run_fn*
run_args*
mapping *
inplace ç
quantize_dynamic/torch.ao.quantization.quantize.quantize_dynamic*	
model*
qconfig_spec *
dtype *
mapping *
inplace b
prepare_qat*torch.ao.quantization.quantize.prepare_qat*	
model*
mapping *
inplace o
quantize_qat+torch.ao.quantization.quantize.quantize_qat*	
model*

run_fn*
run_args*
inplace …
convert&torch.ao.quantization.quantize.convert*

module*
mapping *
inplace *
remove_qconfig *
is_reference * 
convert_custom_config_dict * 
use_precomputed_fake_quant µ
_convert'torch.ao.quantization.quantize._convert*

module*
mapping *
inplace *
is_reference * 
convert_custom_config_dict * 
use_precomputed_fake_quant í
swap_module*torch.ao.quantization.quantize.swap_module*
mod*
mapping*
custom_module_class_mapping* 
use_precomputed_fake_quant o
_get_observer_dict1torch.ao.quantization.quantize._get_observer_dict*
mod*
target_dict*
prefix *ö
__annotations__.torch.ao.quantization.quantize.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*
nntorch.nn *
nnqtorch.ao.nn.quantized *}
__all__&torch.ao.quantization.quantize.__all__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*Œ
_DEFAULT_CUSTOM_CONFIG_DICT:torch.ao.quantization.quantize._DEFAULT_CUSTOM_CONFIG_DICTÚ
Fbuiltins.dict[builtins.str,builtins.dict[builtins.type,builtins.type]]
builtins.str"builtins.str{
*builtins.dict[builtins.type,builtins.type]
builtins.type"builtins.type
builtins.type"builtins.type"builtins.dict"builtins.dict