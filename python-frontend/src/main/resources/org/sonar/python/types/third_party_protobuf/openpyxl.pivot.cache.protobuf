
openpyxl.pivot.cache∑
MeasureDimensionMap(openpyxl.pivot.cache.MeasureDimensionMap".openpyxl.descriptors.serialisable.Serialisable*¿
__init__1openpyxl.pivot.cache.MeasureDimensionMap.__init__"
None*^
selfT
(openpyxl.pivot.cache.MeasureDimensionMap"(openpyxl.pivot.cache.MeasureDimensionMap*:
measureGroup&
Union[Any,None]
Any
None *7
	dimension&
Union[Any,None]
Any
None z36z37z38z39z310z311z312z313j36j37j38j39j310j311j312j313r}
tagname0openpyxl.pivot.cache.MeasureDimensionMap.tagname
builtins.str"builtins.str*36*37*38*39*310*311*312*313r±
measureGroup5openpyxl.pivot.cache.MeasureDimensionMap.measureGroupF
!openpyxl.descriptors.base.Integer"!openpyxl.descriptors.base.Integer*36*37*38*39*310*311*312*313r´
	dimension2openpyxl.pivot.cache.MeasureDimensionMap.dimensionF
!openpyxl.descriptors.base.Integer"!openpyxl.descriptors.base.Integer*36*37*38*39*310*311*312*313≈
MeasureGroup!openpyxl.pivot.cache.MeasureGroup".openpyxl.descriptors.serialisable.Serialisable*â
__init__*openpyxl.pivot.cache.MeasureGroup.__init__"
None*P
selfF
!openpyxl.pivot.cache.MeasureGroup"!openpyxl.pivot.cache.MeasureGroup*&
name
builtins.str"builtins.str*)
caption
builtins.str"builtins.strz36z37z38z39z310z311z312z313j36j37j38j39j310j311j312j313rv
tagname)openpyxl.pivot.cache.MeasureGroup.tagname
builtins.str"builtins.str*36*37*38*39*310*311*312*313rò
name&openpyxl.pivot.cache.MeasureGroup.nameD
 openpyxl.descriptors.base.String" openpyxl.descriptors.base.String*36*37*38*39*310*311*312*313rû
caption)openpyxl.pivot.cache.MeasureGroup.captionD
 openpyxl.descriptors.base.String" openpyxl.descriptors.base.String*36*37*38*39*310*311*312*313Ç
PivotDimension#openpyxl.pivot.cache.PivotDimension".openpyxl.descriptors.serialisable.Serialisable2Ù	
__init__,openpyxl.pivot.cache.PivotDimension.__init__ 
__init__,openpyxl.pivot.cache.PivotDimension.__init__"
None*T
selfJ
#openpyxl.pivot.cache.PivotDimension"#openpyxl.pivot.cache.PivotDimension*†
measureê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool *&
name
builtins.str"builtins.str*,

uniqueName
builtins.str"builtins.str*)
caption
builtins.str"builtins.str0:overloadX»
__init__,openpyxl.pivot.cache.PivotDimension.__init__"
None*T
selfJ
#openpyxl.pivot.cache.PivotDimension"#openpyxl.pivot.cache.PivotDimension*û
measureê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool*&
name
builtins.str"builtins.str*,

uniqueName
builtins.str"builtins.str*)
caption
builtins.str"builtins.str0:overloadX"36"37"38"39"310"311"312"313j36j37j38j39j310j311j312j313rx
tagname+openpyxl.pivot.cache.PivotDimension.tagname
builtins.str"builtins.str*36*37*38*39*310*311*312*313rú
measure+openpyxl.pivot.cache.PivotDimension.measure@
openpyxl.descriptors.base.Bool"openpyxl.descriptors.base.Bool*36*37*38*39*310*311*312*313rö
name(openpyxl.pivot.cache.PivotDimension.nameD
 openpyxl.descriptors.base.String" openpyxl.descriptors.base.String*36*37*38*39*310*311*312*313r¶

uniqueName.openpyxl.pivot.cache.PivotDimension.uniqueNameD
 openpyxl.descriptors.base.String" openpyxl.descriptors.base.String*36*37*38*39*310*311*312*313r†
caption+openpyxl.pivot.cache.PivotDimension.captionD
 openpyxl.descriptors.base.String" openpyxl.descriptors.base.String*36*37*38*39*310*311*312*313Î
CalculatedMember%openpyxl.pivot.cache.CalculatedMember".openpyxl.descriptors.serialisable.Serialisable*Ä
__init__.openpyxl.pivot.cache.CalculatedMember.__init__"
None*X
selfN
%openpyxl.pivot.cache.CalculatedMember"%openpyxl.pivot.cache.CalculatedMember*&
name
builtins.str"builtins.str*%
mdx
builtins.str"builtins.str*,

memberName
builtins.str"builtins.str*+
	hierarchy
builtins.str"builtins.str*(
parent
builtins.str"builtins.str*

solveOrder
Any*ú
setê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool *0
extLst"
builtins.object"builtins.object z36z37z38z39z310z311z312z313j36j37j38j39j310j311j312j313rz
tagname-openpyxl.pivot.cache.CalculatedMember.tagname
builtins.str"builtins.str*36*37*38*39*310*311*312*313rú
name*openpyxl.pivot.cache.CalculatedMember.nameD
 openpyxl.descriptors.base.String" openpyxl.descriptors.base.String*36*37*38*39*310*311*312*313rö
mdx)openpyxl.pivot.cache.CalculatedMember.mdxD
 openpyxl.descriptors.base.String" openpyxl.descriptors.base.String*36*37*38*39*310*311*312*313r®

memberName0openpyxl.pivot.cache.CalculatedMember.memberNameD
 openpyxl.descriptors.base.String" openpyxl.descriptors.base.String*36*37*38*39*310*311*312*313r¶
	hierarchy/openpyxl.pivot.cache.CalculatedMember.hierarchyD
 openpyxl.descriptors.base.String" openpyxl.descriptors.base.String*36*37*38*39*310*311*312*313r†
parent,openpyxl.pivot.cache.CalculatedMember.parentD
 openpyxl.descriptors.base.String" openpyxl.descriptors.base.String*36*37*38*39*310*311*312*313r™

solveOrder0openpyxl.pivot.cache.CalculatedMember.solveOrderF
!openpyxl.descriptors.base.Integer"!openpyxl.descriptors.base.Integer*36*37*38*39*310*311*312*313rñ
set)openpyxl.pivot.cache.CalculatedMember.set@
openpyxl.descriptors.base.Bool"openpyxl.descriptors.base.Bool*36*37*38*39*310*311*312*313r¨
extLst,openpyxl.pivot.cache.CalculatedMember.extLstP
$openpyxl.descriptors.base.Typed[Any]
Any"openpyxl.descriptors.base.Typed*36*37*38*39*310*311*312*313r¥
__elements__2openpyxl.pivot.cache.CalculatedMember.__elements__L
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple*36*37*38*39*310*311*312*313√
CalculatedItem#openpyxl.pivot.cache.CalculatedItem".openpyxl.descriptors.serialisable.Serialisable2‰
__init__,openpyxl.pivot.cache.CalculatedItem.__init__¬
__init__,openpyxl.pivot.cache.CalculatedItem.__init__"
None*T
selfJ
#openpyxl.pivot.cache.CalculatedItem"#openpyxl.pivot.cache.CalculatedItem*3
field&
Union[Any,None]
Any
None *)
formula
builtins.str"builtins.str*O
	pivotArea@
openpyxl.pivot.table.PivotArea"openpyxl.pivot.table.PivotArea*i
extLst[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None 0:overloadX¿
__init__,openpyxl.pivot.cache.CalculatedItem.__init__"
None*T
selfJ
#openpyxl.pivot.cache.CalculatedItem"#openpyxl.pivot.cache.CalculatedItem*1
field&
Union[Any,None]
Any
None*)
formula
builtins.str"builtins.str*O
	pivotArea@
openpyxl.pivot.table.PivotArea"openpyxl.pivot.table.PivotArea*i
extLst[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None 0:overloadX"36"37"38"39"310"311"312"313j36j37j38j39j310j311j312j313rx
tagname+openpyxl.pivot.cache.CalculatedItem.tagname
builtins.str"builtins.str*36*37*38*39*310*311*312*313rû
field)openpyxl.pivot.cache.CalculatedItem.fieldF
!openpyxl.descriptors.base.Integer"!openpyxl.descriptors.base.Integer*36*37*38*39*310*311*312*313r†
formula+openpyxl.pivot.cache.CalculatedItem.formulaD
 openpyxl.descriptors.base.String" openpyxl.descriptors.base.String*36*37*38*39*310*311*312*313r∞
	pivotArea-openpyxl.pivot.cache.CalculatedItem.pivotAreaP
$openpyxl.descriptors.base.Typed[Any]
Any"openpyxl.descriptors.base.Typed*36*37*38*39*310*311*312*313r™
extLst*openpyxl.pivot.cache.CalculatedItem.extLstP
$openpyxl.descriptors.base.Typed[Any]
Any"openpyxl.descriptors.base.Typed*36*37*38*39*310*311*312*313r≤
__elements__0openpyxl.pivot.cache.CalculatedItem.__elements__L
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple*36*37*38*39*310*311*312*313ü
ServerFormat!openpyxl.pivot.cache.ServerFormat".openpyxl.descriptors.serialisable.Serialisable*ﬂ
__init__*openpyxl.pivot.cache.ServerFormat.__init__"
None*P
selfF
!openpyxl.pivot.cache.ServerFormat"!openpyxl.pivot.cache.ServerFormat*S
cultureD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
formatD
Union[builtins.str,None]
builtins.str"builtins.str
None z36z37z38z39z310z311z312z313j36j37j38j39j310j311j312j313rv
tagname)openpyxl.pivot.cache.ServerFormat.tagname
builtins.str"builtins.str*36*37*38*39*310*311*312*313rû
culture)openpyxl.pivot.cache.ServerFormat.cultureD
 openpyxl.descriptors.base.String" openpyxl.descriptors.base.String*36*37*38*39*310*311*312*313rú
format(openpyxl.pivot.cache.ServerFormat.formatD
 openpyxl.descriptors.base.String" openpyxl.descriptors.base.String*36*37*38*39*310*311*312*313ù
Queryopenpyxl.pivot.cache.Query".openpyxl.descriptors.serialisable.Serialisable*‘
__init__#openpyxl.pivot.cache.Query.__init__"
None*B
self8
openpyxl.pivot.cache.Query"openpyxl.pivot.cache.Query*%
mdx
builtins.str"builtins.str*â
tpls}
+Union[openpyxl.pivot.fields.TupleList,None]B
openpyxl.pivot.fields.TupleList"openpyxl.pivot.fields.TupleList
None z36z37z38z39z310z311z312z313j36j37j38j39j310j311j312j313ro
tagname"openpyxl.pivot.cache.Query.tagname
builtins.str"builtins.str*36*37*38*39*310*311*312*313rè
mdxopenpyxl.pivot.cache.Query.mdxD
 openpyxl.descriptors.base.String" openpyxl.descriptors.base.String*36*37*38*39*310*311*312*313rù
tplsopenpyxl.pivot.cache.Query.tplsP
$openpyxl.descriptors.base.Typed[Any]
Any"openpyxl.descriptors.base.Typed*36*37*38*39*310*311*312*313r©
__elements__'openpyxl.pivot.cache.Query.__elements__L
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple*36*37*38*39*310*311*312*313±
OLAPSetopenpyxl.pivot.cache.OLAPSet".openpyxl.descriptors.serialisable.Serialisable*µ
__init__%openpyxl.pivot.cache.OLAPSet.__init__"
None*F
self<
openpyxl.pivot.cache.OLAPSet"openpyxl.pivot.cache.OLAPSet*
count
Any*
maxRank
Any*/
setDefinition
builtins.str"builtins.str*k
sortType[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *§
queryFailedê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool *â
tpls}
+Union[openpyxl.pivot.fields.TupleList,None]B
openpyxl.pivot.fields.TupleList"openpyxl.pivot.fields.TupleList
None *ê
sortByTuple}
+Union[openpyxl.pivot.fields.TupleList,None]B
openpyxl.pivot.fields.TupleList"openpyxl.pivot.fields.TupleList
None z36z37z38z39z310z311z312z313j36j37j38j39j310j311j312j313rq
tagname$openpyxl.pivot.cache.OLAPSet.tagname
builtins.str"builtins.str*36*37*38*39*310*311*312*313ró
count"openpyxl.pivot.cache.OLAPSet.countF
!openpyxl.descriptors.base.Integer"!openpyxl.descriptors.base.Integer*36*37*38*39*310*311*312*313rõ
maxRank$openpyxl.pivot.cache.OLAPSet.maxRankF
!openpyxl.descriptors.base.Integer"!openpyxl.descriptors.base.Integer*36*37*38*39*310*311*312*313r•
setDefinition*openpyxl.pivot.cache.OLAPSet.setDefinitionD
 openpyxl.descriptors.base.String" openpyxl.descriptors.base.String*36*37*38*39*310*311*312*313rà
sortType%openpyxl.pivot.cache.OLAPSet.sortType1
TypeAlias[Any]
Any"_typeshed.Incomplete*36*37*38*39*310*311*312*313rù
queryFailed(openpyxl.pivot.cache.OLAPSet.queryFailed@
openpyxl.descriptors.base.Bool"openpyxl.descriptors.base.Bool*36*37*38*39*310*311*312*313rü
tpls!openpyxl.pivot.cache.OLAPSet.tplsP
$openpyxl.descriptors.base.Typed[Any]
Any"openpyxl.descriptors.base.Typed*36*37*38*39*310*311*312*313r≠
sortByTuple(openpyxl.pivot.cache.OLAPSet.sortByTupleP
$openpyxl.descriptors.base.Typed[Any]
Any"openpyxl.descriptors.base.Typed*36*37*38*39*310*311*312*313r´
__elements__)openpyxl.pivot.cache.OLAPSet.__elements__L
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple*36*37*38*39*310*311*312*313»
PCDSDTCEntries#openpyxl.pivot.cache.PCDSDTCEntries".openpyxl.descriptors.serialisable.Serialisable*‡
__init__,openpyxl.pivot.cache.PCDSDTCEntries.__init__"
None*T
selfJ
#openpyxl.pivot.cache.PCDSDTCEntries"#openpyxl.pivot.cache.PCDSDTCEntries*
count
Any*E
m>
openpyxl.pivot.fields.Missing"openpyxl.pivot.fields.Missing*C
n<
openpyxl.pivot.fields.Number"openpyxl.pivot.fields.Number*A
e:
openpyxl.pivot.fields.Error"openpyxl.pivot.fields.Error*?
s8
openpyxl.pivot.fields.Text"openpyxl.pivot.fields.Textz36z37z38z39z310z311z312z313j36j37j38j39j310j311j312j313rx
tagname+openpyxl.pivot.cache.PCDSDTCEntries.tagname
builtins.str"builtins.str*36*37*38*39*310*311*312*313rû
count)openpyxl.pivot.cache.PCDSDTCEntries.countF
!openpyxl.descriptors.base.Integer"!openpyxl.descriptors.base.Integer*36*37*38*39*310*311*312*313r†
m%openpyxl.pivot.cache.PCDSDTCEntries.mP
$openpyxl.descriptors.base.Typed[Any]
Any"openpyxl.descriptors.base.Typed*36*37*38*39*310*311*312*313r†
n%openpyxl.pivot.cache.PCDSDTCEntries.nP
$openpyxl.descriptors.base.Typed[Any]
Any"openpyxl.descriptors.base.Typed*36*37*38*39*310*311*312*313r†
e%openpyxl.pivot.cache.PCDSDTCEntries.eP
$openpyxl.descriptors.base.Typed[Any]
Any"openpyxl.descriptors.base.Typed*36*37*38*39*310*311*312*313r†
s%openpyxl.pivot.cache.PCDSDTCEntries.sP
$openpyxl.descriptors.base.Typed[Any]
Any"openpyxl.descriptors.base.Typed*36*37*38*39*310*311*312*313r≤
__elements__0openpyxl.pivot.cache.PCDSDTCEntries.__elements__L
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple*36*37*38*39*310*311*312*313°

TupleCacheopenpyxl.pivot.cache.TupleCache".openpyxl.descriptors.serialisable.Serialisable*Ê
__init__(openpyxl.pivot.cache.TupleCache.__init__"
None*L
selfB
openpyxl.pivot.cache.TupleCache"openpyxl.pivot.cache.TupleCache*ô
entriesâ
/Union[openpyxl.pivot.cache.PCDSDTCEntries,None]J
#openpyxl.pivot.cache.PCDSDTCEntries"#openpyxl.pivot.cache.PCDSDTCEntries
None *Í
sets›
_Union[builtins.list[openpyxl.pivot.cache.OLAPSet],builtins.tuple[openpyxl.pivot.cache.OLAPSet]]z
+builtins.list[openpyxl.pivot.cache.OLAPSet]<
openpyxl.pivot.cache.OLAPSet"openpyxl.pivot.cache.OLAPSet"builtins.list|
,builtins.tuple[openpyxl.pivot.cache.OLAPSet]<
openpyxl.pivot.cache.OLAPSet"openpyxl.pivot.cache.OLAPSet"builtins.tuple *‡

queryCacheÕ
[Union[builtins.list[openpyxl.pivot.cache.Query],builtins.tuple[openpyxl.pivot.cache.Query]]t
)builtins.list[openpyxl.pivot.cache.Query]8
openpyxl.pivot.cache.Query"openpyxl.pivot.cache.Query"builtins.listv
*builtins.tuple[openpyxl.pivot.cache.Query]8
openpyxl.pivot.cache.Query"openpyxl.pivot.cache.Query"builtins.tuple *ù
serverFormatsá
iUnion[builtins.list[openpyxl.pivot.cache.ServerFormat],builtins.tuple[openpyxl.pivot.cache.ServerFormat]]â
0builtins.list[openpyxl.pivot.cache.ServerFormat]F
!openpyxl.pivot.cache.ServerFormat"!openpyxl.pivot.cache.ServerFormat"builtins.listã
1builtins.tuple[openpyxl.pivot.cache.ServerFormat]F
!openpyxl.pivot.cache.ServerFormat"!openpyxl.pivot.cache.ServerFormat"builtins.tuple *ß
extLstò
4Union[openpyxl.descriptors.excel.ExtensionList,None]T
(openpyxl.descriptors.excel.ExtensionList"(openpyxl.descriptors.excel.ExtensionList
None z36z37z38z39z310z311z312z313j36j37j38j39j310j311j312j313rt
tagname'openpyxl.pivot.cache.TupleCache.tagname
builtins.str"builtins.str*36*37*38*39*310*311*312*313r®
entries'openpyxl.pivot.cache.TupleCache.entriesP
$openpyxl.descriptors.base.Typed[Any]
Any"openpyxl.descriptors.base.Typed*36*37*38*39*310*311*312*313rÿ
sets$openpyxl.pivot.cache.TupleCache.setsÖ
Yopenpyxl.descriptors.sequence.NestedSequence[builtins.list[openpyxl.pivot.cache.OLAPSet]]z
+builtins.list[openpyxl.pivot.cache.OLAPSet]<
openpyxl.pivot.cache.OLAPSet"openpyxl.pivot.cache.OLAPSet"builtins.list",openpyxl.descriptors.sequence.NestedSequence*36*37*38*39*310*311*312*313r‹

queryCache*openpyxl.pivot.cache.TupleCache.queryCache˝
Wopenpyxl.descriptors.sequence.NestedSequence[builtins.list[openpyxl.pivot.cache.Query]]t
)builtins.list[openpyxl.pivot.cache.Query]8
openpyxl.pivot.cache.Query"openpyxl.pivot.cache.Query"builtins.list",openpyxl.descriptors.sequence.NestedSequence*36*37*38*39*310*311*312*313rˇ
serverFormats-openpyxl.pivot.cache.TupleCache.serverFormatsö
^openpyxl.descriptors.sequence.NestedSequence[builtins.list[openpyxl.pivot.cache.ServerFormat]]â
0builtins.list[openpyxl.pivot.cache.ServerFormat]F
!openpyxl.pivot.cache.ServerFormat"!openpyxl.pivot.cache.ServerFormat"builtins.list",openpyxl.descriptors.sequence.NestedSequence*36*37*38*39*310*311*312*313r¶
extLst&openpyxl.pivot.cache.TupleCache.extLstP
$openpyxl.descriptors.base.Typed[Any]
Any"openpyxl.descriptors.base.Typed*36*37*38*39*310*311*312*313rÆ
__elements__,openpyxl.pivot.cache.TupleCache.__elements__L
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple*36*37*38*39*310*311*312*313ˆ
OLAPKPIopenpyxl.pivot.cache.OLAPKPI".openpyxl.descriptors.serialisable.Serialisable*œ
__init__%openpyxl.pivot.cache.OLAPKPI.__init__"
None*F
self<
openpyxl.pivot.cache.OLAPKPI"openpyxl.pivot.cache.OLAPKPI*V

uniqueNameD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
captionD
Union[builtins.str,None]
builtins.str"builtins.str
None *Y
displayFolderD
Union[builtins.str,None]
builtins.str"builtins.str
None *X
measureGroupD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
parentD
Union[builtins.str,None]
builtins.str"builtins.str
None *Q
valueD
Union[builtins.str,None]
builtins.str"builtins.str
None *P
goalD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
statusD
Union[builtins.str,None]
builtins.str"builtins.str
None *Q
trendD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
weightD
Union[builtins.str,None]
builtins.str"builtins.str
None *P
timeD
Union[builtins.str,None]
builtins.str"builtins.str
None z36z37z38z39z310z311z312z313j36j37j38j39j310j311j312j313rq
tagname$openpyxl.pivot.cache.OLAPKPI.tagname
builtins.str"builtins.str*36*37*38*39*310*311*312*313rü

uniqueName'openpyxl.pivot.cache.OLAPKPI.uniqueNameD
 openpyxl.descriptors.base.String" openpyxl.descriptors.base.String*36*37*38*39*310*311*312*313rô
caption$openpyxl.pivot.cache.OLAPKPI.captionD
 openpyxl.descriptors.base.String" openpyxl.descriptors.base.String*36*37*38*39*310*311*312*313r•
displayFolder*openpyxl.pivot.cache.OLAPKPI.displayFolderD
 openpyxl.descriptors.base.String" openpyxl.descriptors.base.String*36*37*38*39*310*311*312*313r£
measureGroup)openpyxl.pivot.cache.OLAPKPI.measureGroupD
 openpyxl.descriptors.base.String" openpyxl.descriptors.base.String*36*37*38*39*310*311*312*313ró
parent#openpyxl.pivot.cache.OLAPKPI.parentD
 openpyxl.descriptors.base.String" openpyxl.descriptors.base.String*36*37*38*39*310*311*312*313rï
value"openpyxl.pivot.cache.OLAPKPI.valueD
 openpyxl.descriptors.base.String" openpyxl.descriptors.base.String*36*37*38*39*310*311*312*313rì
goal!openpyxl.pivot.cache.OLAPKPI.goalD
 openpyxl.descriptors.base.String" openpyxl.descriptors.base.String*36*37*38*39*310*311*312*313ró
status#openpyxl.pivot.cache.OLAPKPI.statusD
 openpyxl.descriptors.base.String" openpyxl.descriptors.base.String*36*37*38*39*310*311*312*313rï
trend"openpyxl.pivot.cache.OLAPKPI.trendD
 openpyxl.descriptors.base.String" openpyxl.descriptors.base.String*36*37*38*39*310*311*312*313ró
weight#openpyxl.pivot.cache.OLAPKPI.weightD
 openpyxl.descriptors.base.String" openpyxl.descriptors.base.String*36*37*38*39*310*311*312*313rì
time!openpyxl.pivot.cache.OLAPKPI.timeD
 openpyxl.descriptors.base.String" openpyxl.descriptors.base.String*36*37*38*39*310*311*312*313Ω
GroupMember openpyxl.pivot.cache.GroupMember".openpyxl.descriptors.serialisable.Serialisable*Ç
__init__)openpyxl.pivot.cache.GroupMember.__init__"
None*N
selfD
 openpyxl.pivot.cache.GroupMember" openpyxl.pivot.cache.GroupMember*,

uniqueName
builtins.str"builtins.str*û
groupê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool z36z37z38z39z310z311z312z313j36j37j38j39j310j311j312j313ru
tagname(openpyxl.pivot.cache.GroupMember.tagname
builtins.str"builtins.str*36*37*38*39*310*311*312*313r£

uniqueName+openpyxl.pivot.cache.GroupMember.uniqueNameD
 openpyxl.descriptors.base.String" openpyxl.descriptors.base.String*36*37*38*39*310*311*312*313rï
group&openpyxl.pivot.cache.GroupMember.group@
openpyxl.descriptors.base.Bool"openpyxl.descriptors.base.Bool*36*37*38*39*310*311*312*313Õ

LevelGroupopenpyxl.pivot.cache.LevelGroup".openpyxl.descriptors.serialisable.Serialisable*â
__init__(openpyxl.pivot.cache.LevelGroup.__init__"
None*L
selfB
openpyxl.pivot.cache.LevelGroup"openpyxl.pivot.cache.LevelGroup*&
name
builtins.str"builtins.str*,

uniqueName
builtins.str"builtins.str*)
caption
builtins.str"builtins.str*.
uniqueParent
builtins.str"builtins.str*
id
Any*î
groupMembersˇ
gUnion[builtins.list[openpyxl.pivot.cache.GroupMember],builtins.tuple[openpyxl.pivot.cache.GroupMember]]Ü
/builtins.list[openpyxl.pivot.cache.GroupMember]D
 openpyxl.pivot.cache.GroupMember" openpyxl.pivot.cache.GroupMember"builtins.listà
0builtins.tuple[openpyxl.pivot.cache.GroupMember]D
 openpyxl.pivot.cache.GroupMember" openpyxl.pivot.cache.GroupMember"builtins.tuple z36z37z38z39z310z311z312z313j36j37j38j39j310j311j312j313rt
tagname'openpyxl.pivot.cache.LevelGroup.tagname
builtins.str"builtins.str*36*37*38*39*310*311*312*313rñ
name$openpyxl.pivot.cache.LevelGroup.nameD
 openpyxl.descriptors.base.String" openpyxl.descriptors.base.String*36*37*38*39*310*311*312*313r¢

uniqueName*openpyxl.pivot.cache.LevelGroup.uniqueNameD
 openpyxl.descriptors.base.String" openpyxl.descriptors.base.String*36*37*38*39*310*311*312*313rú
caption'openpyxl.pivot.cache.LevelGroup.captionD
 openpyxl.descriptors.base.String" openpyxl.descriptors.base.String*36*37*38*39*310*311*312*313r¶
uniqueParent,openpyxl.pivot.cache.LevelGroup.uniqueParentD
 openpyxl.descriptors.base.String" openpyxl.descriptors.base.String*36*37*38*39*310*311*312*313rî
id"openpyxl.pivot.cache.LevelGroup.idF
!openpyxl.descriptors.base.Integer"!openpyxl.descriptors.base.Integer*36*37*38*39*310*311*312*313r˘
groupMembers,openpyxl.pivot.cache.LevelGroup.groupMembersñ
]openpyxl.descriptors.sequence.NestedSequence[builtins.list[openpyxl.pivot.cache.GroupMember]]Ü
/builtins.list[openpyxl.pivot.cache.GroupMember]D
 openpyxl.pivot.cache.GroupMember" openpyxl.pivot.cache.GroupMember"builtins.list",openpyxl.descriptors.sequence.NestedSequence*36*37*38*39*310*311*312*313rÆ
__elements__,openpyxl.pivot.cache.LevelGroup.__elements__L
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple*36*37*38*39*310*311*312*313¬

GroupLevelopenpyxl.pivot.cache.GroupLevel".openpyxl.descriptors.serialisable.Serialisable*Ñ
__init__(openpyxl.pivot.cache.GroupLevel.__init__"
None*L
selfB
openpyxl.pivot.cache.GroupLevel"openpyxl.pivot.cache.GroupLevel*,

uniqueName
builtins.str"builtins.str*)
caption
builtins.str"builtins.str*ù
userê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool *•
customRollUpê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool *Ü
groups˜
eUnion[builtins.list[openpyxl.pivot.cache.LevelGroup],builtins.tuple[openpyxl.pivot.cache.LevelGroup]]É
.builtins.list[openpyxl.pivot.cache.LevelGroup]B
openpyxl.pivot.cache.LevelGroup"openpyxl.pivot.cache.LevelGroup"builtins.listÖ
/builtins.tuple[openpyxl.pivot.cache.LevelGroup]B
openpyxl.pivot.cache.LevelGroup"openpyxl.pivot.cache.LevelGroup"builtins.tuple *ß
extLstò
4Union[openpyxl.descriptors.excel.ExtensionList,None]T
(openpyxl.descriptors.excel.ExtensionList"(openpyxl.descriptors.excel.ExtensionList
None z36z37z38z39z310z311z312z313j36j37j38j39j310j311j312j313rt
tagname'openpyxl.pivot.cache.GroupLevel.tagname
builtins.str"builtins.str*36*37*38*39*310*311*312*313r¢

uniqueName*openpyxl.pivot.cache.GroupLevel.uniqueNameD
 openpyxl.descriptors.base.String" openpyxl.descriptors.base.String*36*37*38*39*310*311*312*313rú
caption'openpyxl.pivot.cache.GroupLevel.captionD
 openpyxl.descriptors.base.String" openpyxl.descriptors.base.String*36*37*38*39*310*311*312*313rí
user$openpyxl.pivot.cache.GroupLevel.user@
openpyxl.descriptors.base.Bool"openpyxl.descriptors.base.Bool*36*37*38*39*310*311*312*313r¢
customRollUp,openpyxl.pivot.cache.GroupLevel.customRollUp@
openpyxl.descriptors.base.Bool"openpyxl.descriptors.base.Bool*36*37*38*39*310*311*312*313rÈ
groups&openpyxl.pivot.cache.GroupLevel.groupsí
\openpyxl.descriptors.sequence.NestedSequence[builtins.list[openpyxl.pivot.cache.LevelGroup]]É
.builtins.list[openpyxl.pivot.cache.LevelGroup]B
openpyxl.pivot.cache.LevelGroup"openpyxl.pivot.cache.LevelGroup"builtins.list",openpyxl.descriptors.sequence.NestedSequence*36*37*38*39*310*311*312*313r¶
extLst&openpyxl.pivot.cache.GroupLevel.extLstP
$openpyxl.descriptors.base.Typed[Any]
Any"openpyxl.descriptors.base.Typed*36*37*38*39*310*311*312*313rÆ
__elements__,openpyxl.pivot.cache.GroupLevel.__elements__L
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple*36*37*38*39*310*311*312*313œ

FieldUsageopenpyxl.pivot.cache.FieldUsage".openpyxl.descriptors.serialisable.Serialisable*¿
__init__(openpyxl.pivot.cache.FieldUsage.__init__"
None*L
selfB
openpyxl.pivot.cache.FieldUsage"openpyxl.pivot.cache.FieldUsage*
x
Anyz36z37z38z39z310z311z312z313j36j37j38j39j310j311j312j313rt
tagname'openpyxl.pivot.cache.FieldUsage.tagname
builtins.str"builtins.str*36*37*38*39*310*311*312*313rí
x!openpyxl.pivot.cache.FieldUsage.xF
!openpyxl.descriptors.base.Integer"!openpyxl.descriptors.base.Integer*36*37*38*39*310*311*312*313‰w
CacheHierarchy#openpyxl.pivot.cache.CacheHierarchy".openpyxl.descriptors.serialisable.Serialisable2êP
__init__,openpyxl.pivot.cache.CacheHierarchy.__init__Á'
__init__,openpyxl.pivot.cache.CacheHierarchy.__init__"
None*T
selfJ
#openpyxl.pivot.cache.CacheHierarchy"#openpyxl.pivot.cache.CacheHierarchy*.

uniqueName
builtins.str"builtins.str *S
captionD
Union[builtins.str,None]
builtins.str"builtins.str
None *†
measureê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool *ú
setê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool *7
	parentSet&
Union[Any,None]
Any
None *
iconSet
Any *¢
	attributeê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool *ù
timeê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool *•
keyAttributeê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool *c
defaultMemberUniqueNameD
Union[builtins.str,None]
builtins.str"builtins.str
None *Y
allUniqueNameD
Union[builtins.str,None]
builtins.str"builtins.str
None *V

allCaptionD
Union[builtins.str,None]
builtins.str"builtins.str
None *_
dimensionUniqueNameD
Union[builtins.str,None]
builtins.str"builtins.str
None *Y
displayFolderD
Union[builtins.str,None]
builtins.str"builtins.str
None *X
measureGroupD
Union[builtins.str,None]
builtins.str"builtins.str
None *°
measuresê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool *
count
Any*°
oneFieldê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool *A
memberValueDatatype&
Union[Any,None]
Any
None *˛

unbalancedÎ
JUnion[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]ê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool
None *É
unbalancedGroupÎ
JUnion[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]ê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool
None *ü
hiddenê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool *ã
fieldsUsage˜
eUnion[builtins.list[openpyxl.pivot.cache.FieldUsage],builtins.tuple[openpyxl.pivot.cache.FieldUsage]]É
.builtins.list[openpyxl.pivot.cache.FieldUsage]B
openpyxl.pivot.cache.FieldUsage"openpyxl.pivot.cache.FieldUsage"builtins.listÖ
/builtins.tuple[openpyxl.pivot.cache.FieldUsage]B
openpyxl.pivot.cache.FieldUsage"openpyxl.pivot.cache.FieldUsage"builtins.tuple *ã
groupLevels˜
eUnion[builtins.list[openpyxl.pivot.cache.FieldUsage],builtins.tuple[openpyxl.pivot.cache.FieldUsage]]É
.builtins.list[openpyxl.pivot.cache.FieldUsage]B
openpyxl.pivot.cache.FieldUsage"openpyxl.pivot.cache.FieldUsage"builtins.listÖ
/builtins.tuple[openpyxl.pivot.cache.FieldUsage]B
openpyxl.pivot.cache.FieldUsage"openpyxl.pivot.cache.FieldUsage"builtins.tuple *ß
extLstò
4Union[openpyxl.descriptors.excel.ExtensionList,None]T
(openpyxl.descriptors.excel.ExtensionList"(openpyxl.descriptors.excel.ExtensionList
None 0:overloadX«'
__init__,openpyxl.pivot.cache.CacheHierarchy.__init__"
None*T
selfJ
#openpyxl.pivot.cache.CacheHierarchy"#openpyxl.pivot.cache.CacheHierarchy*,

uniqueName
builtins.str"builtins.str*Q
captionD
Union[builtins.str,None]
builtins.str"builtins.str
None*û
measureê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool*ö
setê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool*5
	parentSet&
Union[Any,None]
Any
None*
iconSet
Any*†
	attributeê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool*õ
timeê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool*£
keyAttributeê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool*a
defaultMemberUniqueNameD
Union[builtins.str,None]
builtins.str"builtins.str
None*W
allUniqueNameD
Union[builtins.str,None]
builtins.str"builtins.str
None*T

allCaptionD
Union[builtins.str,None]
builtins.str"builtins.str
None*]
dimensionUniqueNameD
Union[builtins.str,None]
builtins.str"builtins.str
None*W
displayFolderD
Union[builtins.str,None]
builtins.str"builtins.str
None*V
measureGroupD
Union[builtins.str,None]
builtins.str"builtins.str
None*ü
measuresê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool*
count
Any*°
oneFieldê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool *A
memberValueDatatype&
Union[Any,None]
Any
None *˛

unbalancedÎ
JUnion[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]ê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool
None *É
unbalancedGroupÎ
JUnion[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]ê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool
None *ü
hiddenê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool *ã
fieldsUsage˜
eUnion[builtins.list[openpyxl.pivot.cache.FieldUsage],builtins.tuple[openpyxl.pivot.cache.FieldUsage]]É
.builtins.list[openpyxl.pivot.cache.FieldUsage]B
openpyxl.pivot.cache.FieldUsage"openpyxl.pivot.cache.FieldUsage"builtins.listÖ
/builtins.tuple[openpyxl.pivot.cache.FieldUsage]B
openpyxl.pivot.cache.FieldUsage"openpyxl.pivot.cache.FieldUsage"builtins.tuple *ã
groupLevels˜
eUnion[builtins.list[openpyxl.pivot.cache.FieldUsage],builtins.tuple[openpyxl.pivot.cache.FieldUsage]]É
.builtins.list[openpyxl.pivot.cache.FieldUsage]B
openpyxl.pivot.cache.FieldUsage"openpyxl.pivot.cache.FieldUsage"builtins.listÖ
/builtins.tuple[openpyxl.pivot.cache.FieldUsage]B
openpyxl.pivot.cache.FieldUsage"openpyxl.pivot.cache.FieldUsage"builtins.tuple *ß
extLstò
4Union[openpyxl.descriptors.excel.ExtensionList,None]T
(openpyxl.descriptors.excel.ExtensionList"(openpyxl.descriptors.excel.ExtensionList
None 0:overloadX"36"37"38"39"310"311"312"313j36j37j38j39j310j311j312j313rx
tagname+openpyxl.pivot.cache.CacheHierarchy.tagname
builtins.str"builtins.str*36*37*38*39*310*311*312*313r¶

uniqueName.openpyxl.pivot.cache.CacheHierarchy.uniqueNameD
 openpyxl.descriptors.base.String" openpyxl.descriptors.base.String*36*37*38*39*310*311*312*313r†
caption+openpyxl.pivot.cache.CacheHierarchy.captionD
 openpyxl.descriptors.base.String" openpyxl.descriptors.base.String*36*37*38*39*310*311*312*313rú
measure+openpyxl.pivot.cache.CacheHierarchy.measure@
openpyxl.descriptors.base.Bool"openpyxl.descriptors.base.Bool*36*37*38*39*310*311*312*313rî
set'openpyxl.pivot.cache.CacheHierarchy.set@
openpyxl.descriptors.base.Bool"openpyxl.descriptors.base.Bool*36*37*38*39*310*311*312*313r¶
	parentSet-openpyxl.pivot.cache.CacheHierarchy.parentSetF
!openpyxl.descriptors.base.Integer"!openpyxl.descriptors.base.Integer*36*37*38*39*310*311*312*313r¢
iconSet+openpyxl.pivot.cache.CacheHierarchy.iconSetF
!openpyxl.descriptors.base.Integer"!openpyxl.descriptors.base.Integer*36*37*38*39*310*311*312*313r†
	attribute-openpyxl.pivot.cache.CacheHierarchy.attribute@
openpyxl.descriptors.base.Bool"openpyxl.descriptors.base.Bool*36*37*38*39*310*311*312*313rñ
time(openpyxl.pivot.cache.CacheHierarchy.time@
openpyxl.descriptors.base.Bool"openpyxl.descriptors.base.Bool*36*37*38*39*310*311*312*313r¶
keyAttribute0openpyxl.pivot.cache.CacheHierarchy.keyAttribute@
openpyxl.descriptors.base.Bool"openpyxl.descriptors.base.Bool*36*37*38*39*310*311*312*313r¿
defaultMemberUniqueName;openpyxl.pivot.cache.CacheHierarchy.defaultMemberUniqueNameD
 openpyxl.descriptors.base.String" openpyxl.descriptors.base.String*36*37*38*39*310*311*312*313r¨
allUniqueName1openpyxl.pivot.cache.CacheHierarchy.allUniqueNameD
 openpyxl.descriptors.base.String" openpyxl.descriptors.base.String*36*37*38*39*310*311*312*313r¶

allCaption.openpyxl.pivot.cache.CacheHierarchy.allCaptionD
 openpyxl.descriptors.base.String" openpyxl.descriptors.base.String*36*37*38*39*310*311*312*313r∏
dimensionUniqueName7openpyxl.pivot.cache.CacheHierarchy.dimensionUniqueNameD
 openpyxl.descriptors.base.String" openpyxl.descriptors.base.String*36*37*38*39*310*311*312*313r¨
displayFolder1openpyxl.pivot.cache.CacheHierarchy.displayFolderD
 openpyxl.descriptors.base.String" openpyxl.descriptors.base.String*36*37*38*39*310*311*312*313r™
measureGroup0openpyxl.pivot.cache.CacheHierarchy.measureGroupD
 openpyxl.descriptors.base.String" openpyxl.descriptors.base.String*36*37*38*39*310*311*312*313rû
measures,openpyxl.pivot.cache.CacheHierarchy.measures@
openpyxl.descriptors.base.Bool"openpyxl.descriptors.base.Bool*36*37*38*39*310*311*312*313rû
count)openpyxl.pivot.cache.CacheHierarchy.countF
!openpyxl.descriptors.base.Integer"!openpyxl.descriptors.base.Integer*36*37*38*39*310*311*312*313rû
oneField,openpyxl.pivot.cache.CacheHierarchy.oneField@
openpyxl.descriptors.base.Bool"openpyxl.descriptors.base.Bool*36*37*38*39*310*311*312*313r∫
memberValueDatatype7openpyxl.pivot.cache.CacheHierarchy.memberValueDatatypeF
!openpyxl.descriptors.base.Integer"!openpyxl.descriptors.base.Integer*36*37*38*39*310*311*312*313r¢

unbalanced.openpyxl.pivot.cache.CacheHierarchy.unbalanced@
openpyxl.descriptors.base.Bool"openpyxl.descriptors.base.Bool*36*37*38*39*310*311*312*313r¨
unbalancedGroup3openpyxl.pivot.cache.CacheHierarchy.unbalancedGroup@
openpyxl.descriptors.base.Bool"openpyxl.descriptors.base.Bool*36*37*38*39*310*311*312*313rö
hidden*openpyxl.pivot.cache.CacheHierarchy.hidden@
openpyxl.descriptors.base.Bool"openpyxl.descriptors.base.Bool*36*37*38*39*310*311*312*313r˜
fieldsUsage/openpyxl.pivot.cache.CacheHierarchy.fieldsUsageí
\openpyxl.descriptors.sequence.NestedSequence[builtins.list[openpyxl.pivot.cache.FieldUsage]]É
.builtins.list[openpyxl.pivot.cache.FieldUsage]B
openpyxl.pivot.cache.FieldUsage"openpyxl.pivot.cache.FieldUsage"builtins.list",openpyxl.descriptors.sequence.NestedSequence*36*37*38*39*310*311*312*313r˜
groupLevels/openpyxl.pivot.cache.CacheHierarchy.groupLevelsí
\openpyxl.descriptors.sequence.NestedSequence[builtins.list[openpyxl.pivot.cache.GroupLevel]]É
.builtins.list[openpyxl.pivot.cache.GroupLevel]B
openpyxl.pivot.cache.GroupLevel"openpyxl.pivot.cache.GroupLevel"builtins.list",openpyxl.descriptors.sequence.NestedSequence*36*37*38*39*310*311*312*313r™
extLst*openpyxl.pivot.cache.CacheHierarchy.extLstP
$openpyxl.descriptors.base.Typed[Any]
Any"openpyxl.descriptors.base.Typed*36*37*38*39*310*311*312*313r≤
__elements__0openpyxl.pivot.cache.CacheHierarchy.__elements__L
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple*36*37*38*39*310*311*312*313•

GroupItemsopenpyxl.pivot.cache.GroupItems".openpyxl.descriptors.serialisable.Serialisable*Ü
__init__(openpyxl.pivot.cache.GroupItems.__init__"
None*L
selfB
openpyxl.pivot.cache.GroupItems"openpyxl.pivot.cache.GroupItems*h
count[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *
m
Any *
n
Any *
b
Any *
e
Any *
s
Any *
d
Any z36z37z38z39z310z311z312z313*Ã
count%openpyxl.pivot.cache.GroupItems.count"
builtins.int"builtins.int*L
selfB
openpyxl.pivot.cache.GroupItems"openpyxl.pivot.cache.GroupItems0:property`z36z37z38z39z310z311z312z313j36j37j38j39j310j311j312j313rt
tagname'openpyxl.pivot.cache.GroupItems.tagname
builtins.str"builtins.str*36*37*38*39*310*311*312*313r}
m!openpyxl.pivot.cache.GroupItems.m1
TypeAlias[Any]
Any"_typeshed.Incomplete*36*37*38*39*310*311*312*313r}
n!openpyxl.pivot.cache.GroupItems.n1
TypeAlias[Any]
Any"_typeshed.Incomplete*36*37*38*39*310*311*312*313r}
b!openpyxl.pivot.cache.GroupItems.b1
TypeAlias[Any]
Any"_typeshed.Incomplete*36*37*38*39*310*311*312*313r}
e!openpyxl.pivot.cache.GroupItems.e1
TypeAlias[Any]
Any"_typeshed.Incomplete*36*37*38*39*310*311*312*313r}
s!openpyxl.pivot.cache.GroupItems.s1
TypeAlias[Any]
Any"_typeshed.Incomplete*36*37*38*39*310*311*312*313r}
d!openpyxl.pivot.cache.GroupItems.d1
TypeAlias[Any]
Any"_typeshed.Incomplete*36*37*38*39*310*311*312*313rÆ
__elements__,openpyxl.pivot.cache.GroupItems.__elements__L
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple*36*37*38*39*310*311*312*313r®
	__attrs__)openpyxl.pivot.cache.GroupItems.__attrs__L
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple*36*37*38*39*310*311*312*313É3
RangePropenpyxl.pivot.cache.RangePr".openpyxl.descriptors.serialisable.Serialisable*®
__init__%openpyxl.pivot.cache.RangePr.__init__"
None*F
self<
openpyxl.pivot.cache.RangePr"openpyxl.pivot.cache.RangePr*˝
	autoStartÎ
JUnion[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]ê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool
None *˚
autoEndÎ
JUnion[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]ê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool
None *P
groupByA
TypeAlias[Any]
Any"$openpyxl.pivot.cache._RangePrGroupBy *6
startNum&
Union[Any,None]
Any
None *4
endNum&
Union[Any,None]
Any
None *è
	startDate~
*Union[datetime.datetime,builtins.str,None]&
datetime.datetime"datetime.datetime
builtins.str"builtins.str
None *ç
endDate~
*Union[datetime.datetime,builtins.str,None]&
datetime.datetime"datetime.datetime
builtins.str"builtins.str
None *;
groupInterval&
Union[Any,None]
Any
None z36z37*Ô
__init__%openpyxl.pivot.cache.RangePr.__init__"
None*F
self<
openpyxl.pivot.cache.RangePr"openpyxl.pivot.cache.RangePr*˝
	autoStartÎ
JUnion[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]ê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool
None *˚
autoEndÎ
JUnion[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]ê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool
None *Ç
groupByÚ
¡TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]É
∂Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"$openpyxl.pivot.cache._RangePrGroupBy *6
startNum&
Union[Any,None]
Any
None *4
endNum&
Union[Any,None]
Any
None *è
	startDate~
*Union[datetime.datetime,builtins.str,None]&
datetime.datetime"datetime.datetime
builtins.str"builtins.str
None *ç
endDate~
*Union[datetime.datetime,builtins.str,None]&
datetime.datetime"datetime.datetime
builtins.str"builtins.str
None *;
groupInterval&
Union[Any,None]
Any
None z38z39z310z311z312z313j36j37j38j39j310j311j312j313rq
tagname$openpyxl.pivot.cache.RangePr.tagname
builtins.str"builtins.str*36*37*38*39*310*311*312*313rô
	autoStart&openpyxl.pivot.cache.RangePr.autoStart@
openpyxl.descriptors.base.Bool"openpyxl.descriptors.base.Bool*36*37*38*39*310*311*312*313rï
autoEnd$openpyxl.pivot.cache.RangePr.autoEnd@
openpyxl.descriptors.base.Bool"openpyxl.descriptors.base.Bool*36*37*38*39*310*311*312*313r”
groupBy$openpyxl.pivot.cache.RangePr.groupByô
1openpyxl.descriptors.base.NoneSet[TypeAlias[Any]]A
TypeAlias[Any]
Any"$openpyxl.pivot.cache._RangePrGroupBy"!openpyxl.descriptors.base.NoneSet*36*37rÕ	
groupBy$openpyxl.pivot.cache.RangePr.groupByˇ
‰openpyxl.descriptors.base.NoneSet[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]]Ú
¡TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]É
∂Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"$openpyxl.pivot.cache._RangePrGroupBy"!openpyxl.descriptors.base.NoneSet*38*39*310*311*312*313rô
startNum%openpyxl.pivot.cache.RangePr.startNumB
openpyxl.descriptors.base.Float"openpyxl.descriptors.base.Float*36*37*38*39*310*311*312*313rï
endNum#openpyxl.pivot.cache.RangePr.endNumB
openpyxl.descriptors.base.Float"openpyxl.descriptors.base.Float*36*37*38*39*310*311*312*313r°
	startDate&openpyxl.pivot.cache.RangePr.startDateH
"openpyxl.descriptors.base.DateTime""openpyxl.descriptors.base.DateTime*36*37*38*39*310*311*312*313rù
endDate$openpyxl.pivot.cache.RangePr.endDateH
"openpyxl.descriptors.base.DateTime""openpyxl.descriptors.base.DateTime*36*37*38*39*310*311*312*313r£
groupInterval*openpyxl.pivot.cache.RangePr.groupIntervalB
openpyxl.descriptors.base.Float"openpyxl.descriptors.base.Float*36*37*38*39*310*311*312*313„

FieldGroupopenpyxl.pivot.cache.FieldGroup".openpyxl.descriptors.serialisable.Serialisable*å
__init__(openpyxl.pivot.cache.FieldGroup.__init__"
None*L
selfB
openpyxl.pivot.cache.FieldGroup"openpyxl.pivot.cache.FieldGroup*1
par&
Union[Any,None]
Any
None *2
base&
Union[Any,None]
Any
None *É
rangePrt
(Union[openpyxl.pivot.cache.RangePr,None]<
openpyxl.pivot.cache.RangePr"openpyxl.pivot.cache.RangePr
None *⁄

discretePr«
yUnion[builtins.list[openpyxl.descriptors.nested.NestedInteger],builtins.tuple[openpyxl.descriptors.nested.NestedInteger]]°
8builtins.list[openpyxl.descriptors.nested.NestedInteger]V
)openpyxl.descriptors.nested.NestedInteger")openpyxl.descriptors.nested.NestedInteger"builtins.list£
9builtins.tuple[openpyxl.descriptors.nested.NestedInteger]V
)openpyxl.descriptors.nested.NestedInteger")openpyxl.descriptors.nested.NestedInteger"builtins.tuple *è

groupItems}
+Union[openpyxl.pivot.cache.GroupItems,None]B
openpyxl.pivot.cache.GroupItems"openpyxl.pivot.cache.GroupItems
None z36z37z38z39z310z311z312z313j36j37j38j39j310j311j312j313rt
tagname'openpyxl.pivot.cache.FieldGroup.tagname
builtins.str"builtins.str*36*37*38*39*310*311*312*313rñ
par#openpyxl.pivot.cache.FieldGroup.parF
!openpyxl.descriptors.base.Integer"!openpyxl.descriptors.base.Integer*36*37*38*39*310*311*312*313rò
base$openpyxl.pivot.cache.FieldGroup.baseF
!openpyxl.descriptors.base.Integer"!openpyxl.descriptors.base.Integer*36*37*38*39*310*311*312*313r®
rangePr'openpyxl.pivot.cache.FieldGroup.rangePrP
$openpyxl.descriptors.base.Typed[Any]
Any"openpyxl.descriptors.base.Typed*36*37*38*39*310*311*312*313rô

discretePr*openpyxl.pivot.cache.FieldGroup.discretePr∫
fopenpyxl.descriptors.sequence.NestedSequence[builtins.list[openpyxl.descriptors.nested.NestedInteger]]°
8builtins.list[openpyxl.descriptors.nested.NestedInteger]V
)openpyxl.descriptors.nested.NestedInteger")openpyxl.descriptors.nested.NestedInteger"builtins.list",openpyxl.descriptors.sequence.NestedSequence*36*37*38*39*310*311*312*313rÆ

groupItems*openpyxl.pivot.cache.FieldGroup.groupItemsP
$openpyxl.descriptors.base.Typed[Any]
Any"openpyxl.descriptors.base.Typed*36*37*38*39*310*311*312*313rÆ
__elements__,openpyxl.pivot.cache.FieldGroup.__elements__L
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple*36*37*38*39*310*311*312*313≈<
SharedItems openpyxl.pivot.cache.SharedItems".openpyxl.descriptors.serialisable.Serialisable*æ 
__init__)openpyxl.pivot.cache.SharedItems.__init__"
None*N
selfD
 openpyxl.pivot.cache.SharedItems" openpyxl.pivot.cache.SharedItems*
_fields
Any *ä
containsSemiMixedTypesÎ
JUnion[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]ê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool
None *É
containsNonDateÎ
JUnion[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]ê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool
None *Ä
containsDateÎ
JUnion[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]ê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool
None *Ç
containsStringÎ
JUnion[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]ê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool
None *Å
containsBlankÎ
JUnion[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]ê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool
None *Ü
containsMixedTypesÎ
JUnion[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]ê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool
None *Ç
containsNumberÎ
JUnion[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]ê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool
None *É
containsIntegerÎ
JUnion[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]ê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool
None *6
minValue&
Union[Any,None]
Any
None *6
maxValue&
Union[Any,None]
Any
None *ç
minDate~
*Union[datetime.datetime,builtins.str,None]&
datetime.datetime"datetime.datetime
builtins.str"builtins.str
None *ç
maxDate~
*Union[datetime.datetime,builtins.str,None]&
datetime.datetime"datetime.datetime
builtins.str"builtins.str
None */
count"
builtins.object"builtins.object *¸
longTextÎ
JUnion[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]ê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool
None z36z37z38z39z310z311z312z313*œ
count&openpyxl.pivot.cache.SharedItems.count"
builtins.int"builtins.int*N
selfD
 openpyxl.pivot.cache.SharedItems" openpyxl.pivot.cache.SharedItems0:property`z36z37z38z39z310z311z312z313j36j37j38j39j310j311j312j313ru
tagname(openpyxl.pivot.cache.SharedItems.tagname
builtins.str"builtins.str*36*37*38*39*310*311*312*313r~
m"openpyxl.pivot.cache.SharedItems.m1
TypeAlias[Any]
Any"_typeshed.Incomplete*36*37*38*39*310*311*312*313r~
n"openpyxl.pivot.cache.SharedItems.n1
TypeAlias[Any]
Any"_typeshed.Incomplete*36*37*38*39*310*311*312*313r~
b"openpyxl.pivot.cache.SharedItems.b1
TypeAlias[Any]
Any"_typeshed.Incomplete*36*37*38*39*310*311*312*313r~
e"openpyxl.pivot.cache.SharedItems.e1
TypeAlias[Any]
Any"_typeshed.Incomplete*36*37*38*39*310*311*312*313r~
s"openpyxl.pivot.cache.SharedItems.s1
TypeAlias[Any]
Any"_typeshed.Incomplete*36*37*38*39*310*311*312*313r~
d"openpyxl.pivot.cache.SharedItems.d1
TypeAlias[Any]
Any"_typeshed.Incomplete*36*37*38*39*310*311*312*313r∑
containsSemiMixedTypes7openpyxl.pivot.cache.SharedItems.containsSemiMixedTypes@
openpyxl.descriptors.base.Bool"openpyxl.descriptors.base.Bool*36*37*38*39*310*311*312*313r©
containsNonDate0openpyxl.pivot.cache.SharedItems.containsNonDate@
openpyxl.descriptors.base.Bool"openpyxl.descriptors.base.Bool*36*37*38*39*310*311*312*313r£
containsDate-openpyxl.pivot.cache.SharedItems.containsDate@
openpyxl.descriptors.base.Bool"openpyxl.descriptors.base.Bool*36*37*38*39*310*311*312*313rß
containsString/openpyxl.pivot.cache.SharedItems.containsString@
openpyxl.descriptors.base.Bool"openpyxl.descriptors.base.Bool*36*37*38*39*310*311*312*313r•
containsBlank.openpyxl.pivot.cache.SharedItems.containsBlank@
openpyxl.descriptors.base.Bool"openpyxl.descriptors.base.Bool*36*37*38*39*310*311*312*313rØ
containsMixedTypes3openpyxl.pivot.cache.SharedItems.containsMixedTypes@
openpyxl.descriptors.base.Bool"openpyxl.descriptors.base.Bool*36*37*38*39*310*311*312*313rß
containsNumber/openpyxl.pivot.cache.SharedItems.containsNumber@
openpyxl.descriptors.base.Bool"openpyxl.descriptors.base.Bool*36*37*38*39*310*311*312*313r©
containsInteger0openpyxl.pivot.cache.SharedItems.containsInteger@
openpyxl.descriptors.base.Bool"openpyxl.descriptors.base.Bool*36*37*38*39*310*311*312*313rù
minValue)openpyxl.pivot.cache.SharedItems.minValueB
openpyxl.descriptors.base.Float"openpyxl.descriptors.base.Float*36*37*38*39*310*311*312*313rù
maxValue)openpyxl.pivot.cache.SharedItems.maxValueB
openpyxl.descriptors.base.Float"openpyxl.descriptors.base.Float*36*37*38*39*310*311*312*313r°
minDate(openpyxl.pivot.cache.SharedItems.minDateH
"openpyxl.descriptors.base.DateTime""openpyxl.descriptors.base.DateTime*36*37*38*39*310*311*312*313r°
maxDate(openpyxl.pivot.cache.SharedItems.maxDateH
"openpyxl.descriptors.base.DateTime""openpyxl.descriptors.base.DateTime*36*37*38*39*310*311*312*313rõ
longText)openpyxl.pivot.cache.SharedItems.longText@
openpyxl.descriptors.base.Bool"openpyxl.descriptors.base.Bool*36*37*38*39*310*311*312*313r©
	__attrs__*openpyxl.pivot.cache.SharedItems.__attrs__L
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple*36*37*38*39*310*311*312*313êH

CacheFieldopenpyxl.pivot.cache.CacheField".openpyxl.descriptors.serialisable.Serialisable2‹.
__init__(openpyxl.pivot.cache.CacheField.__init__Ÿ
__init__(openpyxl.pivot.cache.CacheField.__init__"
None*L
selfB
openpyxl.pivot.cache.CacheField"openpyxl.pivot.cache.CacheField*î
sharedItemsÄ
,Union[openpyxl.pivot.cache.SharedItems,None]D
 openpyxl.pivot.cache.SharedItems" openpyxl.pivot.cache.SharedItems
None *è

fieldGroup}
+Union[openpyxl.pivot.cache.FieldGroup,None]B
openpyxl.pivot.cache.FieldGroup"openpyxl.pivot.cache.FieldGroup
None *ì
mpMapÖ
PUnion[openpyxl.xml._functions_overloads._HasTagAndGet[Union[Any,None]],Any,None]õ
@openpyxl.xml._functions_overloads._HasTagAndGet[Union[Any,None]]&
Union[Any,None]
Any
None"/openpyxl.xml._functions_overloads._HasTagAndGet
Any
None *ß
extLstò
4Union[openpyxl.descriptors.excel.ExtensionList,None]T
(openpyxl.descriptors.excel.ExtensionList"(openpyxl.descriptors.excel.ExtensionList
None *&
name
builtins.str"builtins.str*S
captionD
Union[builtins.str,None]
builtins.str"builtins.str
None *X
propertyNameD
Union[builtins.str,None]
builtins.str"builtins.str
None *ˇ
serverFieldÎ
JUnion[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]ê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool
None *˛

uniqueListÎ
JUnion[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]ê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool
None *6
numFmtId&
Union[Any,None]
Any
None *S
formulaD
Union[builtins.str,None]
builtins.str"builtins.str
None *5
sqlType&
Union[Any,None]
Any
None *7
	hierarchy&
Union[Any,None]
Any
None *3
level&
Union[Any,None]
Any
None *Å
databaseFieldÎ
JUnion[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]ê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool
None *:
mappingCount&
Union[Any,None]
Any
None *á
memberPropertyFieldÎ
JUnion[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]ê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool
None 0:overloadX•
__init__(openpyxl.pivot.cache.CacheField.__init__"
None*L
selfB
openpyxl.pivot.cache.CacheField"openpyxl.pivot.cache.CacheField*í
sharedItemsÄ
,Union[openpyxl.pivot.cache.SharedItems,None]D
 openpyxl.pivot.cache.SharedItems" openpyxl.pivot.cache.SharedItems
None*ç

fieldGroup}
+Union[openpyxl.pivot.cache.FieldGroup,None]B
openpyxl.pivot.cache.FieldGroup"openpyxl.pivot.cache.FieldGroup
None*f
mpMap[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None*•
extLstò
4Union[openpyxl.descriptors.excel.ExtensionList,None]T
(openpyxl.descriptors.excel.ExtensionList"(openpyxl.descriptors.excel.ExtensionList
None*&
name
builtins.str"builtins.str*S
captionD
Union[builtins.str,None]
builtins.str"builtins.str
None *X
propertyNameD
Union[builtins.str,None]
builtins.str"builtins.str
None *ˇ
serverFieldÎ
JUnion[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]ê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool
None *˛

uniqueListÎ
JUnion[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]ê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool
None *6
numFmtId&
Union[Any,None]
Any
None *S
formulaD
Union[builtins.str,None]
builtins.str"builtins.str
None *5
sqlType&
Union[Any,None]
Any
None *7
	hierarchy&
Union[Any,None]
Any
None *3
level&
Union[Any,None]
Any
None *Å
databaseFieldÎ
JUnion[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]ê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool
None *:
mappingCount&
Union[Any,None]
Any
None *á
memberPropertyFieldÎ
JUnion[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]ê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool
None 0:overloadX"36"37"38"39"310"311"312"313j36j37j38j39j310j311j312j313rt
tagname'openpyxl.pivot.cache.CacheField.tagname
builtins.str"builtins.str*36*37*38*39*310*311*312*313r∞
sharedItems+openpyxl.pivot.cache.CacheField.sharedItemsP
$openpyxl.descriptors.base.Typed[Any]
Any"openpyxl.descriptors.base.Typed*36*37*38*39*310*311*312*313rÆ

fieldGroup*openpyxl.pivot.cache.CacheField.fieldGroupP
$openpyxl.descriptors.base.Typed[Any]
Any"openpyxl.descriptors.base.Typed*36*37*38*39*310*311*312*313r™
mpMap%openpyxl.pivot.cache.CacheField.mpMapV
)openpyxl.descriptors.nested.NestedInteger")openpyxl.descriptors.nested.NestedInteger*36*37*38*39*310*311*312*313r¶
extLst&openpyxl.pivot.cache.CacheField.extLstP
$openpyxl.descriptors.base.Typed[Any]
Any"openpyxl.descriptors.base.Typed*36*37*38*39*310*311*312*313rñ
name$openpyxl.pivot.cache.CacheField.nameD
 openpyxl.descriptors.base.String" openpyxl.descriptors.base.String*36*37*38*39*310*311*312*313rú
caption'openpyxl.pivot.cache.CacheField.captionD
 openpyxl.descriptors.base.String" openpyxl.descriptors.base.String*36*37*38*39*310*311*312*313r¶
propertyName,openpyxl.pivot.cache.CacheField.propertyNameD
 openpyxl.descriptors.base.String" openpyxl.descriptors.base.String*36*37*38*39*310*311*312*313r†
serverField+openpyxl.pivot.cache.CacheField.serverField@
openpyxl.descriptors.base.Bool"openpyxl.descriptors.base.Bool*36*37*38*39*310*311*312*313rû

uniqueList*openpyxl.pivot.cache.CacheField.uniqueList@
openpyxl.descriptors.base.Bool"openpyxl.descriptors.base.Bool*36*37*38*39*310*311*312*313r†
numFmtId(openpyxl.pivot.cache.CacheField.numFmtIdF
!openpyxl.descriptors.base.Integer"!openpyxl.descriptors.base.Integer*36*37*38*39*310*311*312*313rú
formula'openpyxl.pivot.cache.CacheField.formulaD
 openpyxl.descriptors.base.String" openpyxl.descriptors.base.String*36*37*38*39*310*311*312*313rû
sqlType'openpyxl.pivot.cache.CacheField.sqlTypeF
!openpyxl.descriptors.base.Integer"!openpyxl.descriptors.base.Integer*36*37*38*39*310*311*312*313r¢
	hierarchy)openpyxl.pivot.cache.CacheField.hierarchyF
!openpyxl.descriptors.base.Integer"!openpyxl.descriptors.base.Integer*36*37*38*39*310*311*312*313rö
level%openpyxl.pivot.cache.CacheField.levelF
!openpyxl.descriptors.base.Integer"!openpyxl.descriptors.base.Integer*36*37*38*39*310*311*312*313r§
databaseField-openpyxl.pivot.cache.CacheField.databaseField@
openpyxl.descriptors.base.Bool"openpyxl.descriptors.base.Bool*36*37*38*39*310*311*312*313r®
mappingCount,openpyxl.pivot.cache.CacheField.mappingCountF
!openpyxl.descriptors.base.Integer"!openpyxl.descriptors.base.Integer*36*37*38*39*310*311*312*313r∞
memberPropertyField3openpyxl.pivot.cache.CacheField.memberPropertyField@
openpyxl.descriptors.base.Bool"openpyxl.descriptors.base.Bool*36*37*38*39*310*311*312*313rÆ
__elements__,openpyxl.pivot.cache.CacheField.__elements__L
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple*36*37*38*39*310*311*312*313±
RangeSetopenpyxl.pivot.cache.RangeSet".openpyxl.descriptors.serialisable.Serialisable2§	
__init__&openpyxl.pivot.cache.RangeSet.__init__®
__init__&openpyxl.pivot.cache.RangeSet.__init__"
None*H
self>
openpyxl.pivot.cache.RangeSet"openpyxl.pivot.cache.RangeSet*0
i1&
Union[Any,None]
Any
None *0
i2&
Union[Any,None]
Any
None *0
i3&
Union[Any,None]
Any
None *0
i4&
Union[Any,None]
Any
None *%
ref
builtins.str"builtins.str*P
nameD
Union[builtins.str,None]
builtins.str"builtins.str
None *Q
sheetD
Union[builtins.str,None]
builtins.str"builtins.str
None 0:overloadX†
__init__&openpyxl.pivot.cache.RangeSet.__init__"
None*H
self>
openpyxl.pivot.cache.RangeSet"openpyxl.pivot.cache.RangeSet*.
i1&
Union[Any,None]
Any
None*.
i2&
Union[Any,None]
Any
None*.
i3&
Union[Any,None]
Any
None*.
i4&
Union[Any,None]
Any
None*%
ref
builtins.str"builtins.str*P
nameD
Union[builtins.str,None]
builtins.str"builtins.str
None *Q
sheetD
Union[builtins.str,None]
builtins.str"builtins.str
None 0:overloadX"36"37"38"39"310"311"312"313j36j37j38j39j310j311j312j313rr
tagname%openpyxl.pivot.cache.RangeSet.tagname
builtins.str"builtins.str*36*37*38*39*310*311*312*313rí
i1 openpyxl.pivot.cache.RangeSet.i1F
!openpyxl.descriptors.base.Integer"!openpyxl.descriptors.base.Integer*36*37*38*39*310*311*312*313rí
i2 openpyxl.pivot.cache.RangeSet.i2F
!openpyxl.descriptors.base.Integer"!openpyxl.descriptors.base.Integer*36*37*38*39*310*311*312*313rí
i3 openpyxl.pivot.cache.RangeSet.i3F
!openpyxl.descriptors.base.Integer"!openpyxl.descriptors.base.Integer*36*37*38*39*310*311*312*313rí
i4 openpyxl.pivot.cache.RangeSet.i4F
!openpyxl.descriptors.base.Integer"!openpyxl.descriptors.base.Integer*36*37*38*39*310*311*312*313rí
ref!openpyxl.pivot.cache.RangeSet.refD
 openpyxl.descriptors.base.String" openpyxl.descriptors.base.String*36*37*38*39*310*311*312*313rî
name"openpyxl.pivot.cache.RangeSet.nameD
 openpyxl.descriptors.base.String" openpyxl.descriptors.base.String*36*37*38*39*310*311*312*313rñ
sheet#openpyxl.pivot.cache.RangeSet.sheetD
 openpyxl.descriptors.base.String" openpyxl.descriptors.base.String*36*37*38*39*310*311*312*313›
PageItemopenpyxl.pivot.cache.PageItem".openpyxl.descriptors.serialisable.Serialisable*“
__init__&openpyxl.pivot.cache.PageItem.__init__"
None*H
self>
openpyxl.pivot.cache.PageItem"openpyxl.pivot.cache.PageItem*&
name
builtins.str"builtins.strz36z37z38z39z310z311z312z313j36j37j38j39j310j311j312j313rr
tagname%openpyxl.pivot.cache.PageItem.tagname
builtins.str"builtins.str*36*37*38*39*310*311*312*313rî
name"openpyxl.pivot.cache.PageItem.nameD
 openpyxl.descriptors.base.String" openpyxl.descriptors.base.String*36*37*38*39*310*311*312*313œ
Consolidation"openpyxl.pivot.cache.Consolidation".openpyxl.descriptors.serialisable.Serialisable*®

__init__+openpyxl.pivot.cache.Consolidation.__init__"
None*R
selfH
"openpyxl.pivot.cache.Consolidation""openpyxl.pivot.cache.Consolidation*¸
autoPageÎ
JUnion[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]ê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool
None *Û
pagesÂ
aUnion[builtins.list[openpyxl.pivot.cache.PageItem],builtins.tuple[openpyxl.pivot.cache.PageItem]]}
,builtins.list[openpyxl.pivot.cache.PageItem]>
openpyxl.pivot.cache.PageItem"openpyxl.pivot.cache.PageItem"builtins.list
-builtins.tuple[openpyxl.pivot.cache.PageItem]>
openpyxl.pivot.cache.PageItem"openpyxl.pivot.cache.PageItem"builtins.tuple *˜
	rangeSetsÂ
aUnion[builtins.list[openpyxl.pivot.cache.RangeSet],builtins.tuple[openpyxl.pivot.cache.RangeSet]]}
,builtins.list[openpyxl.pivot.cache.RangeSet]>
openpyxl.pivot.cache.RangeSet"openpyxl.pivot.cache.RangeSet"builtins.list
-builtins.tuple[openpyxl.pivot.cache.RangeSet]>
openpyxl.pivot.cache.RangeSet"openpyxl.pivot.cache.RangeSet"builtins.tuple z36z37z38z39z310z311z312z313j36j37j38j39j310j311j312j313rw
tagname*openpyxl.pivot.cache.Consolidation.tagname
builtins.str"builtins.str*36*37*38*39*310*311*312*313rù
autoPage+openpyxl.pivot.cache.Consolidation.autoPage@
openpyxl.descriptors.base.Bool"openpyxl.descriptors.base.Bool*36*37*38*39*310*311*312*313r·
pages(openpyxl.pivot.cache.Consolidation.pagesâ
Zopenpyxl.descriptors.sequence.NestedSequence[builtins.list[openpyxl.pivot.cache.PageItem]]}
,builtins.list[openpyxl.pivot.cache.PageItem]>
openpyxl.pivot.cache.PageItem"openpyxl.pivot.cache.PageItem"builtins.list",openpyxl.descriptors.sequence.NestedSequence*36*37*38*39*310*311*312*313rÈ
	rangeSets,openpyxl.pivot.cache.Consolidation.rangeSetsâ
Zopenpyxl.descriptors.sequence.NestedSequence[builtins.list[openpyxl.pivot.cache.RangeSet]]}
,builtins.list[openpyxl.pivot.cache.RangeSet]>
openpyxl.pivot.cache.RangeSet"openpyxl.pivot.cache.RangeSet"builtins.list",openpyxl.descriptors.sequence.NestedSequence*36*37*38*39*310*311*312*313r±
__elements__/openpyxl.pivot.cache.Consolidation.__elements__L
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple*36*37*38*39*310*311*312*313ò	
WorksheetSource$openpyxl.pivot.cache.WorksheetSource".openpyxl.descriptors.serialisable.Serialisable*µ
__init__-openpyxl.pivot.cache.WorksheetSource.__init__"
None*V
selfL
$openpyxl.pivot.cache.WorksheetSource"$openpyxl.pivot.cache.WorksheetSource*O
refD
Union[builtins.str,None]
builtins.str"builtins.str
None *P
nameD
Union[builtins.str,None]
builtins.str"builtins.str
None *Q
sheetD
Union[builtins.str,None]
builtins.str"builtins.str
None z36z37z38z39z310z311z312z313j36j37j38j39j310j311j312j313ry
tagname,openpyxl.pivot.cache.WorksheetSource.tagname
builtins.str"builtins.str*36*37*38*39*310*311*312*313rô
ref(openpyxl.pivot.cache.WorksheetSource.refD
 openpyxl.descriptors.base.String" openpyxl.descriptors.base.String*36*37*38*39*310*311*312*313rõ
name)openpyxl.pivot.cache.WorksheetSource.nameD
 openpyxl.descriptors.base.String" openpyxl.descriptors.base.String*36*37*38*39*310*311*312*313rù
sheet*openpyxl.pivot.cache.WorksheetSource.sheetD
 openpyxl.descriptors.base.String" openpyxl.descriptors.base.String*36*37*38*39*310*311*312*313ı
CacheSource openpyxl.pivot.cache.CacheSource".openpyxl.descriptors.serialisable.Serialisable*ë
__init__)openpyxl.pivot.cache.CacheSource.__init__"
None*N
selfD
 openpyxl.pivot.cache.CacheSource" openpyxl.pivot.cache.CacheSource*L
typeB
TypeAlias[Any]
Any"%openpyxl.pivot.cache._CacheSourceType*:
connectionId&
Union[Any,None]
Any
None *§
worksheetSourceå
0Union[openpyxl.pivot.cache.WorksheetSource,None]L
$openpyxl.pivot.cache.WorksheetSource"$openpyxl.pivot.cache.WorksheetSource
None *ú
consolidationÜ
.Union[openpyxl.pivot.cache.Consolidation,None]H
"openpyxl.pivot.cache.Consolidation""openpyxl.pivot.cache.Consolidation
None *ß
extLstò
4Union[openpyxl.descriptors.excel.ExtensionList,None]T
(openpyxl.descriptors.excel.ExtensionList"(openpyxl.descriptors.excel.ExtensionList
None z36z37*¬	
__init__)openpyxl.pivot.cache.CacheSource.__init__"
None*N
selfD
 openpyxl.pivot.cache.CacheSource" openpyxl.pivot.cache.CacheSource*Ë
type›
iTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"%openpyxl.pivot.cache._CacheSourceType*:
connectionId&
Union[Any,None]
Any
None *§
worksheetSourceå
0Union[openpyxl.pivot.cache.WorksheetSource,None]L
$openpyxl.pivot.cache.WorksheetSource"$openpyxl.pivot.cache.WorksheetSource
None *ú
consolidationÜ
.Union[openpyxl.pivot.cache.Consolidation,None]H
"openpyxl.pivot.cache.Consolidation""openpyxl.pivot.cache.Consolidation
None *ß
extLstò
4Union[openpyxl.descriptors.excel.ExtensionList,None]T
(openpyxl.descriptors.excel.ExtensionList"(openpyxl.descriptors.excel.ExtensionList
None z38z39z310z311z312z313j36j37j38j39j310j311j312j313ru
tagname(openpyxl.pivot.cache.CacheSource.tagname
builtins.str"builtins.str*36*37*38*39*310*311*312*313r 
type%openpyxl.pivot.cache.CacheSource.typeí
-openpyxl.descriptors.base.Set[TypeAlias[Any]]B
TypeAlias[Any]
Any"%openpyxl.pivot.cache._CacheSourceType"openpyxl.descriptors.base.Set*36*37r÷
type%openpyxl.pivot.cache.CacheSource.typeä
àopenpyxl.descriptors.base.Set[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]]›
iTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"%openpyxl.pivot.cache._CacheSourceType"openpyxl.descriptors.base.Set*38*39*310*311*312*313r©
connectionId-openpyxl.pivot.cache.CacheSource.connectionIdF
!openpyxl.descriptors.base.Integer"!openpyxl.descriptors.base.Integer*36*37*38*39*310*311*312*313rπ
worksheetSource0openpyxl.pivot.cache.CacheSource.worksheetSourceP
$openpyxl.descriptors.base.Typed[Any]
Any"openpyxl.descriptors.base.Typed*36*37*38*39*310*311*312*313rµ
consolidation.openpyxl.pivot.cache.CacheSource.consolidationP
$openpyxl.descriptors.base.Typed[Any]
Any"openpyxl.descriptors.base.Typed*36*37*38*39*310*311*312*313rß
extLst'openpyxl.pivot.cache.CacheSource.extLstP
$openpyxl.descriptors.base.Typed[Any]
Any"openpyxl.descriptors.base.Typed*36*37*38*39*310*311*312*313rØ
__elements__-openpyxl.pivot.cache.CacheSource.__elements__L
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple*36*37*38*39*310*311*312*313ÌÉ
CacheDefinition$openpyxl.pivot.cache.CacheDefinition".openpyxl.descriptors.serialisable.Serialisable*Û
to_tree,openpyxl.pivot.cache.CacheDefinition.to_tree">
xml.etree.ElementTree.Element"xml.etree.ElementTree.Element*V
selfL
$openpyxl.pivot.cache.CacheDefinition"$openpyxl.pivot.cache.CacheDefinitionz36z37z38z39z310z311z312z313*Ÿ
path)openpyxl.pivot.cache.CacheDefinition.path"
builtins.str"builtins.str*V
selfL
$openpyxl.pivot.cache.CacheDefinition"$openpyxl.pivot.cache.CacheDefinition0:property`z36z37z38z39z310z311z312z3132ÕQ
__init__-openpyxl.pivot.cache.CacheDefinition.__init__Û)
__init__-openpyxl.pivot.cache.CacheDefinition.__init__"
None*V
selfL
$openpyxl.pivot.cache.CacheDefinition"$openpyxl.pivot.cache.CacheDefinition*˚
invalidÎ
JUnion[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]ê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool
None *¸
saveDataÎ
JUnion[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]ê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool
None *Å
refreshOnLoadÎ
JUnion[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]ê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool
None *Ç
optimizeMemoryÎ
JUnion[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]ê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool
None *Å
enableRefreshÎ
JUnion[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]ê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool
None *W
refreshedByD
Union[builtins.str,None]
builtins.str"builtins.str
None *;
refreshedDate&
Union[Any,None]
Any
None *ñ
refreshedDateIso~
*Union[datetime.datetime,builtins.str,None]&
datetime.datetime"datetime.datetime
builtins.str"builtins.str
None *É
backgroundQueryÎ
JUnion[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]ê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool
None *?
missingItemsLimit&
Union[Any,None]
Any
None *<
createdVersion&
Union[Any,None]
Any
None *>
refreshedVersion&
Union[Any,None]
Any
None *C
minRefreshableVersion&
Union[Any,None]
Any
None *9
recordCount&
Union[Any,None]
Any
None *Ñ
upgradeOnRefreshÎ
JUnion[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]ê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool
None *è

tupleCache}
+Union[openpyxl.pivot.cache.TupleCache,None]B
openpyxl.pivot.cache.TupleCache"openpyxl.pivot.cache.TupleCache
None *É
supportSubqueryÎ
JUnion[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]ê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool
None *à
supportAdvancedDrillÎ
JUnion[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]ê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool
None *U
cacheSourceD
 openpyxl.pivot.cache.CacheSource" openpyxl.pivot.cache.CacheSource*
cacheFields
Any *
cacheHierarchies
Any *Í
kpis›
_Union[builtins.list[openpyxl.pivot.cache.OLAPKPI],builtins.tuple[openpyxl.pivot.cache.OLAPKPI]]z
+builtins.list[openpyxl.pivot.cache.OLAPKPI]<
openpyxl.pivot.cache.OLAPKPI"openpyxl.pivot.cache.OLAPKPI"builtins.list|
,builtins.tuple[openpyxl.pivot.cache.OLAPKPI]<
openpyxl.pivot.cache.OLAPKPI"openpyxl.pivot.cache.OLAPKPI"builtins.tuple *
calculatedItems
Any * 
calculatedMembers
Any *

dimensions
Any *
measureGroups
Any *
maps
Any *ß
extLstò
4Union[openpyxl.descriptors.excel.ExtensionList,None]T
(openpyxl.descriptors.excel.ExtensionList"(openpyxl.descriptors.excel.ExtensionList
None *e
id[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None 0:overloadX˜&
__init__-openpyxl.pivot.cache.CacheDefinition.__init__"
None*V
selfL
$openpyxl.pivot.cache.CacheDefinition"$openpyxl.pivot.cache.CacheDefinition*˘
invalidÎ
JUnion[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]ê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool
None*˙
saveDataÎ
JUnion[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]ê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool
None*ˇ
refreshOnLoadÎ
JUnion[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]ê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool
None*Ä
optimizeMemoryÎ
JUnion[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]ê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool
None*ˇ
enableRefreshÎ
JUnion[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]ê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool
None*U
refreshedByD
Union[builtins.str,None]
builtins.str"builtins.str
None*9
refreshedDate&
Union[Any,None]
Any
None*î
refreshedDateIso~
*Union[datetime.datetime,builtins.str,None]&
datetime.datetime"datetime.datetime
builtins.str"builtins.str
None*Å
backgroundQueryÎ
JUnion[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]ê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool
None*=
missingItemsLimit&
Union[Any,None]
Any
None*:
createdVersion&
Union[Any,None]
Any
None*<
refreshedVersion&
Union[Any,None]
Any
None*A
minRefreshableVersion&
Union[Any,None]
Any
None*7
recordCount&
Union[Any,None]
Any
None*Ç
upgradeOnRefreshÎ
JUnion[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]ê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool
None*ç

tupleCache}
+Union[openpyxl.pivot.cache.TupleCache,None]B
openpyxl.pivot.cache.TupleCache"openpyxl.pivot.cache.TupleCache
None*Å
supportSubqueryÎ
JUnion[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]ê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool
None*Ü
supportAdvancedDrillÎ
JUnion[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]ê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool
None*U
cacheSourceD
 openpyxl.pivot.cache.CacheSource" openpyxl.pivot.cache.CacheSource*
cacheFields
Any *
cacheHierarchies
Any *
kpis
Any *
calculatedItems
Any * 
calculatedMembers
Any *

dimensions
Any *
measureGroups
Any *
maps
Any *ß
extLstò
4Union[openpyxl.descriptors.excel.ExtensionList,None]T
(openpyxl.descriptors.excel.ExtensionList"(openpyxl.descriptors.excel.ExtensionList
None *e
id[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None 0:overloadX"36"37"38"39"310"311"312"313j36j37j38j39j310j311j312j313r}
	mime_type.openpyxl.pivot.cache.CacheDefinition.mime_type
builtins.str"builtins.str*36*37*38*39*310*311*312*313r{
rel_type-openpyxl.pivot.cache.CacheDefinition.rel_type
builtins.str"builtins.str*36*37*38*39*310*311*312*313ré
records,openpyxl.pivot.cache.CacheDefinition.records1
TypeAlias[Any]
Any"_typeshed.Incomplete*36*37*38*39*310*311*312*313ry
tagname,openpyxl.pivot.cache.CacheDefinition.tagname
builtins.str"builtins.str*36*37*38*39*310*311*312*313rù
invalid,openpyxl.pivot.cache.CacheDefinition.invalid@
openpyxl.descriptors.base.Bool"openpyxl.descriptors.base.Bool*36*37*38*39*310*311*312*313rü
saveData-openpyxl.pivot.cache.CacheDefinition.saveData@
openpyxl.descriptors.base.Bool"openpyxl.descriptors.base.Bool*36*37*38*39*310*311*312*313r©
refreshOnLoad2openpyxl.pivot.cache.CacheDefinition.refreshOnLoad@
openpyxl.descriptors.base.Bool"openpyxl.descriptors.base.Bool*36*37*38*39*310*311*312*313r´
optimizeMemory3openpyxl.pivot.cache.CacheDefinition.optimizeMemory@
openpyxl.descriptors.base.Bool"openpyxl.descriptors.base.Bool*36*37*38*39*310*311*312*313r©
enableRefresh2openpyxl.pivot.cache.CacheDefinition.enableRefresh@
openpyxl.descriptors.base.Bool"openpyxl.descriptors.base.Bool*36*37*38*39*310*311*312*313r©
refreshedBy0openpyxl.pivot.cache.CacheDefinition.refreshedByD
 openpyxl.descriptors.base.String" openpyxl.descriptors.base.String*36*37*38*39*310*311*312*313r´
refreshedDate2openpyxl.pivot.cache.CacheDefinition.refreshedDateB
openpyxl.descriptors.base.Float"openpyxl.descriptors.base.Float*36*37*38*39*310*311*312*313r∑
refreshedDateIso5openpyxl.pivot.cache.CacheDefinition.refreshedDateIsoH
"openpyxl.descriptors.base.DateTime""openpyxl.descriptors.base.DateTime*36*37*38*39*310*311*312*313r≠
backgroundQuery4openpyxl.pivot.cache.CacheDefinition.backgroundQuery@
openpyxl.descriptors.base.Bool"openpyxl.descriptors.base.Bool*36*37*38*39*310*311*312*313r∑
missingItemsLimit6openpyxl.pivot.cache.CacheDefinition.missingItemsLimitF
!openpyxl.descriptors.base.Integer"!openpyxl.descriptors.base.Integer*36*37*38*39*310*311*312*313r±
createdVersion3openpyxl.pivot.cache.CacheDefinition.createdVersionF
!openpyxl.descriptors.base.Integer"!openpyxl.descriptors.base.Integer*36*37*38*39*310*311*312*313rµ
refreshedVersion5openpyxl.pivot.cache.CacheDefinition.refreshedVersionF
!openpyxl.descriptors.base.Integer"!openpyxl.descriptors.base.Integer*36*37*38*39*310*311*312*313rø
minRefreshableVersion:openpyxl.pivot.cache.CacheDefinition.minRefreshableVersionF
!openpyxl.descriptors.base.Integer"!openpyxl.descriptors.base.Integer*36*37*38*39*310*311*312*313r´
recordCount0openpyxl.pivot.cache.CacheDefinition.recordCountF
!openpyxl.descriptors.base.Integer"!openpyxl.descriptors.base.Integer*36*37*38*39*310*311*312*313rØ
upgradeOnRefresh5openpyxl.pivot.cache.CacheDefinition.upgradeOnRefresh@
openpyxl.descriptors.base.Bool"openpyxl.descriptors.base.Bool*36*37*38*39*310*311*312*313r≠
supportSubquery4openpyxl.pivot.cache.CacheDefinition.supportSubquery@
openpyxl.descriptors.base.Bool"openpyxl.descriptors.base.Bool*36*37*38*39*310*311*312*313r∑
supportAdvancedDrill9openpyxl.pivot.cache.CacheDefinition.supportAdvancedDrill@
openpyxl.descriptors.base.Bool"openpyxl.descriptors.base.Bool*36*37*38*39*310*311*312*313rµ
cacheSource0openpyxl.pivot.cache.CacheDefinition.cacheSourceP
$openpyxl.descriptors.base.Typed[Any]
Any"openpyxl.descriptors.base.Typed*36*37*38*39*310*311*312*313rñ
cacheFields0openpyxl.pivot.cache.CacheDefinition.cacheFields1
TypeAlias[Any]
Any"_typeshed.Incomplete*36*37*38*39*310*311*312*313r†
cacheHierarchies5openpyxl.pivot.cache.CacheDefinition.cacheHierarchies1
TypeAlias[Any]
Any"_typeshed.Incomplete*36*37*38*39*310*311*312*313r›
kpis)openpyxl.pivot.cache.CacheDefinition.kpisÖ
Yopenpyxl.descriptors.sequence.NestedSequence[builtins.list[openpyxl.pivot.cache.OLAPKPI]]z
+builtins.list[openpyxl.pivot.cache.OLAPKPI]<
openpyxl.pivot.cache.OLAPKPI"openpyxl.pivot.cache.OLAPKPI"builtins.list",openpyxl.descriptors.sequence.NestedSequence*36*37*38*39*310*311*312*313r≥

tupleCache/openpyxl.pivot.cache.CacheDefinition.tupleCacheP
$openpyxl.descriptors.base.Typed[Any]
Any"openpyxl.descriptors.base.Typed*36*37*38*39*310*311*312*313rû
calculatedItems4openpyxl.pivot.cache.CacheDefinition.calculatedItems1
TypeAlias[Any]
Any"_typeshed.Incomplete*36*37*38*39*310*311*312*313r¢
calculatedMembers6openpyxl.pivot.cache.CacheDefinition.calculatedMembers1
TypeAlias[Any]
Any"_typeshed.Incomplete*36*37*38*39*310*311*312*313rî

dimensions/openpyxl.pivot.cache.CacheDefinition.dimensions1
TypeAlias[Any]
Any"_typeshed.Incomplete*36*37*38*39*310*311*312*313rö
measureGroups2openpyxl.pivot.cache.CacheDefinition.measureGroups1
TypeAlias[Any]
Any"_typeshed.Incomplete*36*37*38*39*310*311*312*313rà
maps)openpyxl.pivot.cache.CacheDefinition.maps1
TypeAlias[Any]
Any"_typeshed.Incomplete*36*37*38*39*310*311*312*313r´
extLst+openpyxl.pivot.cache.CacheDefinition.extLstP
$openpyxl.descriptors.base.Typed[Any]
Any"openpyxl.descriptors.base.Typed*36*37*38*39*310*311*312*313rÑ
id'openpyxl.pivot.cache.CacheDefinition.id1
TypeAlias[Any]
Any"_typeshed.Incomplete*36*37*38*39*310*311*312*313r≥
__elements__1openpyxl.pivot.cache.CacheDefinition.__elements__L
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple*36*37*38*39*310*311*312*313*¥
__annotations__$openpyxl.pivot.cache.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*36*37*38*39*310*311*312*313*j
ConvertibleToFloat'openpyxl.pivot.cache.ConvertibleToFloat
Any*36*37*38*39*310*311*312*313*f
ConvertibleToInt%openpyxl.pivot.cache.ConvertibleToInt
Any*36*37*38*39*310*311*312*313*8
Literalopenpyxl.pivot.cache.Literal
Any*36*37