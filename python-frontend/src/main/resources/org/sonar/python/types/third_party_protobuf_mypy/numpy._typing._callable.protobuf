
numpy._typing._callableõ
_BoolOpnumpy._typing._callable._BoolOp"builtins.object2Ÿ
__call__(numpy._typing._callable._BoolOp.__call__ß
__call__(numpy._typing._callable._BoolOp.__call__"Z
'numpy._typing._callable._GenericType_co
numpy.generic"numpy.generic"numpy.generic* «
Hnumpy._typing._callable._BoolOp[numpy._typing._callable._GenericType_co]Z
'numpy._typing._callable._GenericType_co
numpy.generic"numpy.generic"numpy.generic"numpy._typing._callable._BoolOp*π∂
+TypeAlias[Union[builtins.bool,numpy.bool_]]`
 Union[builtins.bool,numpy.bool_]
builtins.bool"builtins.bool
numpy.bool_"numpy.bool_"#numpy._typing._scalars._BoolLike_co0:overloadXÁ
__call__(numpy._typing._callable._BoolOp.__call__"µ
.TypeAlias[numpy.signedinteger[TypeAlias[Any]]]u
#numpy.signedinteger[TypeAlias[Any]]9
TypeAlias[Any]
Any"numpy._typing._nbit._NBitInt"numpy.signedinteger"
numpy.int_* «
Hnumpy._typing._callable._BoolOp[numpy._typing._callable._GenericType_co]Z
'numpy._typing._callable._GenericType_co
numpy.generic"numpy.generic"numpy.generic"numpy._typing._callable._BoolOp*
builtins.int"builtins.int0:overloadXﬁ
__call__(numpy._typing._callable._BoolOp.__call__"®
/TypeAlias[numpy.floating[numpy._typing._64Bit]]d
$numpy.floating[numpy._typing._64Bit],
numpy._typing._64Bit"numpy._typing._64Bit"numpy.floating"numpy.float64* «
Hnumpy._typing._callable._BoolOp[numpy._typing._callable._GenericType_co]Z
'numpy._typing._callable._GenericType_co
numpy.generic"numpy.generic"numpy.generic"numpy._typing._callable._BoolOp*" 
builtins.float"builtins.float0:overloadX”
__call__(numpy._typing._callable._BoolOp.__call__"ô
KTypeAlias[numpy.complexfloating[numpy._typing._64Bit,numpy._typing._64Bit]]µ
@numpy.complexfloating[numpy._typing._64Bit,numpy._typing._64Bit],
numpy._typing._64Bit"numpy._typing._64Bit,
numpy._typing._64Bit"numpy._typing._64Bit"numpy.complexfloating"numpy.complex128* «
Hnumpy._typing._callable._BoolOp[numpy._typing._callable._GenericType_co]Z
'numpy._typing._callable._GenericType_co
numpy.generic"numpy.generic"numpy.generic"numpy._typing._callable._BoolOp*&$
builtins.complex"builtins.complex0:overloadX◊
__call__(numpy._typing._callable._BoolOp.__call__"a
#numpy._typing._callable._NumberType*
numpy.number[Any]
Any"numpy.number"numpy.number* «
Hnumpy._typing._callable._BoolOp[numpy._typing._callable._GenericType_co]Z
'numpy._typing._callable._GenericType_co
numpy.generic"numpy.generic"numpy.generic"numpy._typing._callable._BoolOp*ca
#numpy._typing._callable._NumberType*
numpy.number[Any]
Any"numpy.number"numpy.number0:overloadXPXà

_BoolBitOp"numpy._typing._callable._BoolBitOp"builtins.object2¿
__call__+numpy._typing._callable._BoolBitOp.__call__∞
__call__+numpy._typing._callable._BoolBitOp.__call__"Z
'numpy._typing._callable._GenericType_co
numpy.generic"numpy.generic"numpy.generic*–Õ
Knumpy._typing._callable._BoolBitOp[numpy._typing._callable._GenericType_co]Z
'numpy._typing._callable._GenericType_co
numpy.generic"numpy.generic"numpy.generic""numpy._typing._callable._BoolBitOp*π∂
+TypeAlias[Union[builtins.bool,numpy.bool_]]`
 Union[builtins.bool,numpy.bool_]
builtins.bool"builtins.bool
numpy.bool_"numpy.bool_"#numpy._typing._scalars._BoolLike_co0:overloadX
__call__+numpy._typing._callable._BoolBitOp.__call__"µ
.TypeAlias[numpy.signedinteger[TypeAlias[Any]]]u
#numpy.signedinteger[TypeAlias[Any]]9
TypeAlias[Any]
Any"numpy._typing._nbit._NBitInt"numpy.signedinteger"
numpy.int_*–Õ
Knumpy._typing._callable._BoolBitOp[numpy._typing._callable._GenericType_co]Z
'numpy._typing._callable._GenericType_co
numpy.generic"numpy.generic"numpy.generic""numpy._typing._callable._BoolBitOp*
builtins.int"builtins.int0:overloadX‡
__call__+numpy._typing._callable._BoolBitOp.__call__"a
 numpy._typing._callable._IntType,
numpy.integer[Any]
Any"numpy.integer"numpy.integer*–Õ
Knumpy._typing._callable._BoolBitOp[numpy._typing._callable._GenericType_co]Z
'numpy._typing._callable._GenericType_co
numpy.generic"numpy.generic"numpy.generic""numpy._typing._callable._BoolBitOp*ca
 numpy._typing._callable._IntType,
numpy.integer[Any]
Any"numpy.integer"numpy.integer0:overloadXPX†
_BoolSub numpy._typing._callable._BoolSub"builtins.object2ﬁ
__call__)numpy._typing._callable._BoolSub.__call__ª
__call__)numpy._typing._callable._BoolSub.__call__"
NoReturn
*FD
 numpy._typing._callable._BoolSub" numpy._typing._callable._BoolSub* 
builtins.bool"builtins.bool0:overloadX„
__call__)numpy._typing._callable._BoolSub.__call__"µ
.TypeAlias[numpy.signedinteger[TypeAlias[Any]]]u
#numpy.signedinteger[TypeAlias[Any]]9
TypeAlias[Any]
Any"numpy._typing._nbit._NBitInt"numpy.signedinteger"
numpy.int_*FD
 numpy._typing._callable._BoolSub" numpy._typing._callable._BoolSub*
builtins.int"builtins.int0:overloadX⁄
__call__)numpy._typing._callable._BoolSub.__call__"®
/TypeAlias[numpy.floating[numpy._typing._64Bit]]d
$numpy.floating[numpy._typing._64Bit],
numpy._typing._64Bit"numpy._typing._64Bit"numpy.floating"numpy.float64*FD
 numpy._typing._callable._BoolSub" numpy._typing._callable._BoolSub*" 
builtins.float"builtins.float0:overloadXœ
__call__)numpy._typing._callable._BoolSub.__call__"ô
KTypeAlias[numpy.complexfloating[numpy._typing._64Bit,numpy._typing._64Bit]]µ
@numpy.complexfloating[numpy._typing._64Bit,numpy._typing._64Bit],
numpy._typing._64Bit"numpy._typing._64Bit,
numpy._typing._64Bit"numpy._typing._64Bit"numpy.complexfloating"numpy.complex128*FD
 numpy._typing._callable._BoolSub" numpy._typing._callable._BoolSub*&$
builtins.complex"builtins.complex0:overloadX”
__call__)numpy._typing._callable._BoolSub.__call__"a
#numpy._typing._callable._NumberType*
numpy.number[Any]
Any"numpy.number"numpy.number*FD
 numpy._typing._callable._BoolSub" numpy._typing._callable._BoolSub*ca
#numpy._typing._callable._NumberType*
numpy.number[Any]
Any"numpy.number"numpy.number0:overloadXXç
_BoolTrueDiv$numpy._typing._callable._BoolTrueDiv"builtins.object2√
__call__-numpy._typing._callable._BoolTrueDiv.__call__«
__call__-numpy._typing._callable._BoolTrueDiv.__call__"®
/TypeAlias[numpy.floating[numpy._typing._64Bit]]d
$numpy.floating[numpy._typing._64Bit],
numpy._typing._64Bit"numpy._typing._64Bit"numpy.floating"numpy.float64*NL
$numpy._typing._callable._BoolTrueDiv"$numpy._typing._callable._BoolTrueDiv*Çˇ
sUnion[builtins.float,TypeAlias[Union[TypeAlias[Union[builtins.bool,numpy.bool_]],builtins.int,numpy.integer[Any]]]] 
builtins.float"builtins.float„
]TypeAlias[Union[TypeAlias[Union[builtins.bool,numpy.bool_]],builtins.int,numpy.integer[Any]]]€
RUnion[TypeAlias[Union[builtins.bool,numpy.bool_]],builtins.int,numpy.integer[Any]]∂
+TypeAlias[Union[builtins.bool,numpy.bool_]]`
 Union[builtins.bool,numpy.bool_]
builtins.bool"builtins.bool
numpy.bool_"numpy.bool_"#numpy._typing._scalars._BoolLike_co
builtins.int"builtins.int,
numpy.integer[Any]
Any"numpy.integer""numpy._typing._scalars._IntLike_co0:overloadX€
__call__-numpy._typing._callable._BoolTrueDiv.__call__"ô
KTypeAlias[numpy.complexfloating[numpy._typing._64Bit,numpy._typing._64Bit]]µ
@numpy.complexfloating[numpy._typing._64Bit,numpy._typing._64Bit],
numpy._typing._64Bit"numpy._typing._64Bit,
numpy._typing._64Bit"numpy._typing._64Bit"numpy.complexfloating"numpy.complex128*NL
$numpy._typing._callable._BoolTrueDiv"$numpy._typing._callable._BoolTrueDiv*&$
builtins.complex"builtins.complex0:overloadXﬂ
__call__-numpy._typing._callable._BoolTrueDiv.__call__"a
#numpy._typing._callable._NumberType*
numpy.number[Any]
Any"numpy.number"numpy.number*NL
$numpy._typing._callable._BoolTrueDiv"$numpy._typing._callable._BoolTrueDiv*ca
#numpy._typing._callable._NumberType*
numpy.number[Any]
Any"numpy.number"numpy.number0:overloadXXÌ
_BoolMod numpy._typing._callable._BoolMod"builtins.object2´
__call__)numpy._typing._callable._BoolMod.__call__˙
__call__)numpy._typing._callable._BoolMod.__call__"∞
3TypeAlias[numpy.signedinteger[numpy._typing._8Bit]]k
(numpy.signedinteger[numpy._typing._8Bit]*
numpy._typing._8Bit"numpy._typing._8Bit"numpy.signedinteger"
numpy.int8*FD
 numpy._typing._callable._BoolMod" numpy._typing._callable._BoolMod*π∂
+TypeAlias[Union[builtins.bool,numpy.bool_]]`
 Union[builtins.bool,numpy.bool_]
builtins.bool"builtins.bool
numpy.bool_"numpy.bool_"#numpy._typing._scalars._BoolLike_co0:overloadX„
__call__)numpy._typing._callable._BoolMod.__call__"µ
.TypeAlias[numpy.signedinteger[TypeAlias[Any]]]u
#numpy.signedinteger[TypeAlias[Any]]9
TypeAlias[Any]
Any"numpy._typing._nbit._NBitInt"numpy.signedinteger"
numpy.int_*FD
 numpy._typing._callable._BoolMod" numpy._typing._callable._BoolMod*
builtins.int"builtins.int0:overloadX⁄
__call__)numpy._typing._callable._BoolMod.__call__"®
/TypeAlias[numpy.floating[numpy._typing._64Bit]]d
$numpy.floating[numpy._typing._64Bit],
numpy._typing._64Bit"numpy._typing._64Bit"numpy.floating"numpy.float64*FD
 numpy._typing._callable._BoolMod" numpy._typing._callable._BoolMod*" 
builtins.float"builtins.float0:overloadX”
__call__)numpy._typing._callable._BoolMod.__call__"a
 numpy._typing._callable._IntType,
numpy.integer[Any]
Any"numpy.integer"numpy.integer*FD
 numpy._typing._callable._BoolMod" numpy._typing._callable._BoolMod*ca
 numpy._typing._callable._IntType,
numpy.integer[Any]
Any"numpy.integer"numpy.integer0:overloadX›
__call__)numpy._typing._callable._BoolMod.__call__"f
"numpy._typing._callable._FloatType.
numpy.floating[Any]
Any"numpy.floating"numpy.floating*FD
 numpy._typing._callable._BoolMod" numpy._typing._callable._BoolMod*hf
"numpy._typing._callable._FloatType.
numpy.floating[Any]
Any"numpy.floating"numpy.floating0:overloadXX¨
_BoolDivMod#numpy._typing._callable._BoolDivMod"builtins.object2‰
__call__,numpy._typing._callable._BoolDivMod.__call__≤
__call__,numpy._typing._callable._BoolDivMod.__call__"ﬂ
ITypeAlias[Tuple[numpy._typing._callable._T1,numpy._typing._callable._T1]]Ó
>Tuple[numpy._typing._callable._T1,numpy._typing._callable._T1]T
numpy._typing._callable._T1"
builtins.object"builtins.object"builtins.objectT
numpy._typing._callable._T1"
builtins.object"builtins.object"builtins.object"numpy._typing._callable._2Tuple*LJ
#numpy._typing._callable._BoolDivMod"#numpy._typing._callable._BoolDivMod*π∂
+TypeAlias[Union[builtins.bool,numpy.bool_]]`
 Union[builtins.bool,numpy.bool_]
builtins.bool"builtins.bool
numpy.bool_"numpy.bool_"#numpy._typing._scalars._BoolLike_co0:overloadXñ
__call__,numpy._typing._callable._BoolDivMod.__call__"ﬂ
ITypeAlias[Tuple[numpy._typing._callable._T1,numpy._typing._callable._T1]]Ó
>Tuple[numpy._typing._callable._T1,numpy._typing._callable._T1]T
numpy._typing._callable._T1"
builtins.object"builtins.object"builtins.objectT
numpy._typing._callable._T1"
builtins.object"builtins.object"builtins.object"numpy._typing._callable._2Tuple*LJ
#numpy._typing._callable._BoolDivMod"#numpy._typing._callable._BoolDivMod*
builtins.int"builtins.int0:overloadXö
__call__,numpy._typing._callable._BoolDivMod.__call__"ﬂ
ITypeAlias[Tuple[numpy._typing._callable._T1,numpy._typing._callable._T1]]Ó
>Tuple[numpy._typing._callable._T1,numpy._typing._callable._T1]T
numpy._typing._callable._T1"
builtins.object"builtins.object"builtins.objectT
numpy._typing._callable._T1"
builtins.object"builtins.object"builtins.object"numpy._typing._callable._2Tuple*LJ
#numpy._typing._callable._BoolDivMod"#numpy._typing._callable._BoolDivMod*" 
builtins.float"builtins.float0:overloadX€
__call__,numpy._typing._callable._BoolDivMod.__call__"ﬂ
ITypeAlias[Tuple[numpy._typing._callable._T1,numpy._typing._callable._T1]]Ó
>Tuple[numpy._typing._callable._T1,numpy._typing._callable._T1]T
numpy._typing._callable._T1"
builtins.object"builtins.object"builtins.objectT
numpy._typing._callable._T1"
builtins.object"builtins.object"builtins.object"numpy._typing._callable._2Tuple*LJ
#numpy._typing._callable._BoolDivMod"#numpy._typing._callable._BoolDivMod*ca
 numpy._typing._callable._IntType,
numpy.integer[Any]
Any"numpy.integer"numpy.integer0:overloadX‡
__call__,numpy._typing._callable._BoolDivMod.__call__"ﬂ
ITypeAlias[Tuple[numpy._typing._callable._T1,numpy._typing._callable._T1]]Ó
>Tuple[numpy._typing._callable._T1,numpy._typing._callable._T1]T
numpy._typing._callable._T1"
builtins.object"builtins.object"builtins.objectT
numpy._typing._callable._T1"
builtins.object"builtins.object"builtins.object"numpy._typing._callable._2Tuple*LJ
#numpy._typing._callable._BoolDivMod"#numpy._typing._callable._BoolDivMod*hf
"numpy._typing._callable._FloatType.
numpy.floating[Any]
Any"numpy.floating"numpy.floating0:overloadXXﬂ
_TD64Div numpy._typing._callable._TD64Div"builtins.object2õ
__call__)numpy._typing._callable._TD64Div.__call__´
__call__)numpy._typing._callable._TD64Div.__call__"d
&numpy._typing._callable._NumberType_co*
numpy.number[Any]
Any"numpy.number"numpy.number*’“
Hnumpy._typing._callable._TD64Div[numpy._typing._callable._NumberType_co]d
&numpy._typing._callable._NumberType_co*
numpy.number[Any]
Any"numpy.number"numpy.number" numpy._typing._callable._TD64Div*(&
numpy.timedelta64"numpy.timedelta640:overloadXÂ
__call__)numpy._typing._callable._TD64Div.__call__"
NoReturn
*’“
Hnumpy._typing._callable._TD64Div[numpy._typing._callable._NumberType_co]d
&numpy._typing._callable._NumberType_co*
numpy.number[Any]
Any"numpy.number"numpy.number" numpy._typing._callable._TD64Div*π∂
+TypeAlias[Union[builtins.bool,numpy.bool_]]`
 Union[builtins.bool,numpy.bool_]
builtins.bool"builtins.bool
numpy.bool_"numpy.bool_"#numpy._typing._scalars._BoolLike_co0:overloadXÕ	
__call__)numpy._typing._callable._TD64Div.__call__"&
numpy.timedelta64"numpy.timedelta64*’“
Hnumpy._typing._callable._TD64Div[numpy._typing._callable._NumberType_co]d
&numpy._typing._callable._NumberType_co*
numpy.number[Any]
Any"numpy.number"numpy.number" numpy._typing._callable._TD64Div*áÑ
íTypeAlias[Union[TypeAlias[Union[TypeAlias[Union[builtins.bool,numpy.bool_]],builtins.int,numpy.integer[Any]]],builtins.float,numpy.floating[Any]]]ƒ
áUnion[TypeAlias[Union[TypeAlias[Union[builtins.bool,numpy.bool_]],builtins.int,numpy.integer[Any]]],builtins.float,numpy.floating[Any]]„
]TypeAlias[Union[TypeAlias[Union[builtins.bool,numpy.bool_]],builtins.int,numpy.integer[Any]]]€
RUnion[TypeAlias[Union[builtins.bool,numpy.bool_]],builtins.int,numpy.integer[Any]]∂
+TypeAlias[Union[builtins.bool,numpy.bool_]]`
 Union[builtins.bool,numpy.bool_]
builtins.bool"builtins.bool
numpy.bool_"numpy.bool_"#numpy._typing._scalars._BoolLike_co
builtins.int"builtins.int,
numpy.integer[Any]
Any"numpy.integer""numpy._typing._scalars._IntLike_co 
builtins.float"builtins.float.
numpy.floating[Any]
Any"numpy.floating"$numpy._typing._scalars._FloatLike_co0:overloadXPX„
_IntTrueDiv#numpy._typing._callable._IntTrueDiv"builtins.object2ô
__call__,numpy._typing._callable._IntTrueDiv.__call__˜
__call__,numpy._typing._callable._IntTrueDiv.__call__"Æ
.numpy.floating[numpy._typing._callable._NBit1]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase"numpy.floating*€ÿ
Cnumpy._typing._callable._IntTrueDiv[numpy._typing._callable._NBit1]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase"#numpy._typing._callable._IntTrueDiv* 
builtins.bool"builtins.bool0:overloadXÅ
__call__,numpy._typing._callable._IntTrueDiv.__call__"∫
Dnumpy.floating[Union[numpy._typing._callable._NBit1,TypeAlias[Any]]]·
4Union[numpy._typing._callable._NBit1,TypeAlias[Any]]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase9
TypeAlias[Any]
Any"numpy._typing._nbit._NBitInt"numpy.floating*€ÿ
Cnumpy._typing._callable._IntTrueDiv[numpy._typing._callable._NBit1]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase"#numpy._typing._callable._IntTrueDiv*
builtins.int"builtins.int0:overloadXà
__call__,numpy._typing._callable._IntTrueDiv.__call__"Ω
Dnumpy.floating[Union[numpy._typing._callable._NBit1,TypeAlias[Any]]]‰
4Union[numpy._typing._callable._NBit1,TypeAlias[Any]]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase<
TypeAlias[Any]
Any"numpy._typing._nbit._NBitDouble"numpy.floating*€ÿ
Cnumpy._typing._callable._IntTrueDiv[numpy._typing._callable._NBit1]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase"#numpy._typing._callable._IntTrueDiv*" 
builtins.float"builtins.float0:overloadXÏ
__call__,numpy._typing._callable._IntTrueDiv.__call__"ù
ynumpy.complexfloating[Union[numpy._typing._callable._NBit1,TypeAlias[Any]],Union[numpy._typing._callable._NBit1,Unknown]]‰
4Union[numpy._typing._callable._NBit1,TypeAlias[Any]]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase<
TypeAlias[Any]
Any"numpy._typing._nbit._NBitDouble°
-Union[numpy._typing._callable._NBit1,Unknown]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase "numpy.complexfloating*€ÿ
Cnumpy._typing._callable._IntTrueDiv[numpy._typing._callable._NBit1]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase"#numpy._typing._callable._IntTrueDiv*&$
builtins.complex"builtins.complex0:overloadXÊ
__call__,numpy._typing._callable._IntTrueDiv.__call__"ç
Tnumpy.floating[Union[numpy._typing._callable._NBit1,numpy._typing._callable._NBit2]]§
DUnion[numpy._typing._callable._NBit1,numpy._typing._callable._NBit2]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBasel
numpy._typing._callable._NBit20
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase"numpy.floating*€ÿ
Cnumpy._typing._callable._IntTrueDiv[numpy._typing._callable._NBit1]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase"#numpy._typing._callable._IntTrueDiv*Ø¨
-numpy.integer[numpy._typing._callable._NBit2]l
numpy._typing._callable._NBit20
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase"numpy.integer0:overloadXPXˇ
_UnsignedIntOp&numpy._typing._callable._UnsignedIntOp"builtins.object2Ø
__call__/numpy._typing._callable._UnsignedIntOp.__call__é
__call__/numpy._typing._callable._UnsignedIntOp.__call__"º
5numpy.unsignedinteger[numpy._typing._callable._NBit1]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase"numpy.unsignedinteger*·ﬁ
Fnumpy._typing._callable._UnsignedIntOp[numpy._typing._callable._NBit1]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase"&numpy._typing._callable._UnsignedIntOp* 
builtins.bool"builtins.bool0:overloadXƒ
__call__/numpy._typing._callable._UnsignedIntOp.__call__"
Any*·ﬁ
Fnumpy._typing._callable._UnsignedIntOp[numpy._typing._callable._NBit1]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase"&numpy._typing._callable._UnsignedIntOp*ãà
,Union[builtins.int,numpy.signedinteger[Any]]
builtins.int"builtins.int8
numpy.signedinteger[Any]
Any"numpy.signedinteger0:overloadXë
__call__/numpy._typing._callable._UnsignedIntOp.__call__"Ω
Dnumpy.floating[Union[numpy._typing._callable._NBit1,TypeAlias[Any]]]‰
4Union[numpy._typing._callable._NBit1,TypeAlias[Any]]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase<
TypeAlias[Any]
Any"numpy._typing._nbit._NBitDouble"numpy.floating*·ﬁ
Fnumpy._typing._callable._UnsignedIntOp[numpy._typing._callable._NBit1]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase"&numpy._typing._callable._UnsignedIntOp*" 
builtins.float"builtins.float0:overloadXı
__call__/numpy._typing._callable._UnsignedIntOp.__call__"ù
ynumpy.complexfloating[Union[numpy._typing._callable._NBit1,TypeAlias[Any]],Union[numpy._typing._callable._NBit1,Unknown]]‰
4Union[numpy._typing._callable._NBit1,TypeAlias[Any]]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase<
TypeAlias[Any]
Any"numpy._typing._nbit._NBitDouble°
-Union[numpy._typing._callable._NBit1,Unknown]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase "numpy.complexfloating*·ﬁ
Fnumpy._typing._callable._UnsignedIntOp[numpy._typing._callable._NBit1]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase"&numpy._typing._callable._UnsignedIntOp*&$
builtins.complex"builtins.complex0:overloadXç
__call__/numpy._typing._callable._UnsignedIntOp.__call__"õ
[numpy.unsignedinteger[Union[numpy._typing._callable._NBit1,numpy._typing._callable._NBit2]]§
DUnion[numpy._typing._callable._NBit1,numpy._typing._callable._NBit2]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBasel
numpy._typing._callable._NBit20
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase"numpy.unsignedinteger*·ﬁ
Fnumpy._typing._callable._UnsignedIntOp[numpy._typing._callable._NBit1]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase"&numpy._typing._callable._UnsignedIntOp*øº
5numpy.unsignedinteger[numpy._typing._callable._NBit2]l
numpy._typing._callable._NBit20
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase"numpy.unsignedinteger0:overloadXPXâ
_UnsignedIntBitOp)numpy._typing._callable._UnsignedIntBitOp"builtins.object2≥
__call__2numpy._typing._callable._UnsignedIntBitOp.__call__ó
__call__2numpy._typing._callable._UnsignedIntBitOp.__call__"º
5numpy.unsignedinteger[numpy._typing._callable._NBit1]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase"numpy.unsignedinteger*Á‰
Inumpy._typing._callable._UnsignedIntBitOp[numpy._typing._callable._NBit1]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase")numpy._typing._callable._UnsignedIntBitOp* 
builtins.bool"builtins.bool0:overloadXê
__call__2numpy._typing._callable._UnsignedIntBitOp.__call__"8
numpy.signedinteger[Any]
Any"numpy.signedinteger*Á‰
Inumpy._typing._callable._UnsignedIntBitOp[numpy._typing._callable._NBit1]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase")numpy._typing._callable._UnsignedIntBitOp*
builtins.int"builtins.int0:overloadX¨
__call__2numpy._typing._callable._UnsignedIntBitOp.__call__"8
numpy.signedinteger[Any]
Any"numpy.signedinteger*Á‰
Inumpy._typing._callable._UnsignedIntBitOp[numpy._typing._callable._NBit1]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase")numpy._typing._callable._UnsignedIntBitOp*:8
numpy.signedinteger[Any]
Any"numpy.signedinteger0:overloadXñ
__call__2numpy._typing._callable._UnsignedIntBitOp.__call__"õ
[numpy.unsignedinteger[Union[numpy._typing._callable._NBit1,numpy._typing._callable._NBit2]]§
DUnion[numpy._typing._callable._NBit1,numpy._typing._callable._NBit2]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBasel
numpy._typing._callable._NBit20
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase"numpy.unsignedinteger*Á‰
Inumpy._typing._callable._UnsignedIntBitOp[numpy._typing._callable._NBit1]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase")numpy._typing._callable._UnsignedIntBitOp*øº
5numpy.unsignedinteger[numpy._typing._callable._NBit2]l
numpy._typing._callable._NBit20
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase"numpy.unsignedinteger0:overloadXPXñ
_UnsignedIntMod'numpy._typing._callable._UnsignedIntMod"builtins.object2ƒ
__call__0numpy._typing._callable._UnsignedIntMod.__call__ë
__call__0numpy._typing._callable._UnsignedIntMod.__call__"º
5numpy.unsignedinteger[numpy._typing._callable._NBit1]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase"numpy.unsignedinteger*„‡
Gnumpy._typing._callable._UnsignedIntMod[numpy._typing._callable._NBit1]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase"'numpy._typing._callable._UnsignedIntMod* 
builtins.bool"builtins.bool0:overloadX«
__call__0numpy._typing._callable._UnsignedIntMod.__call__"
Any*„‡
Gnumpy._typing._callable._UnsignedIntMod[numpy._typing._callable._NBit1]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase"'numpy._typing._callable._UnsignedIntMod*ãà
,Union[builtins.int,numpy.signedinteger[Any]]
builtins.int"builtins.int8
numpy.signedinteger[Any]
Any"numpy.signedinteger0:overloadXî
__call__0numpy._typing._callable._UnsignedIntMod.__call__"Ω
Dnumpy.floating[Union[numpy._typing._callable._NBit1,TypeAlias[Any]]]‰
4Union[numpy._typing._callable._NBit1,TypeAlias[Any]]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase<
TypeAlias[Any]
Any"numpy._typing._nbit._NBitDouble"numpy.floating*„‡
Gnumpy._typing._callable._UnsignedIntMod[numpy._typing._callable._NBit1]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase"'numpy._typing._callable._UnsignedIntMod*" 
builtins.float"builtins.float0:overloadXê
__call__0numpy._typing._callable._UnsignedIntMod.__call__"õ
[numpy.unsignedinteger[Union[numpy._typing._callable._NBit1,numpy._typing._callable._NBit2]]§
DUnion[numpy._typing._callable._NBit1,numpy._typing._callable._NBit2]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBasel
numpy._typing._callable._NBit20
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase"numpy.unsignedinteger*„‡
Gnumpy._typing._callable._UnsignedIntMod[numpy._typing._callable._NBit1]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase"'numpy._typing._callable._UnsignedIntMod*øº
5numpy.unsignedinteger[numpy._typing._callable._NBit2]l
numpy._typing._callable._NBit20
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase"numpy.unsignedinteger0:overloadXPX•
_UnsignedIntDivMod*numpy._typing._callable._UnsignedIntDivMod"builtins.object2Õ
__call__3numpy._typing._callable._UnsignedIntDivMod.__call__Ω
__call__3numpy._typing._callable._UnsignedIntDivMod.__call__"ﬂ
ITypeAlias[Tuple[numpy._typing._callable._T1,numpy._typing._callable._T1]]Ó
>Tuple[numpy._typing._callable._T1,numpy._typing._callable._T1]T
numpy._typing._callable._T1"
builtins.object"builtins.object"builtins.objectT
numpy._typing._callable._T1"
builtins.object"builtins.object"builtins.object"numpy._typing._callable._2Tuple*ÈÊ
Jnumpy._typing._callable._UnsignedIntDivMod[numpy._typing._callable._NBit1]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase"*numpy._typing._callable._UnsignedIntDivMod* 
builtins.bool"builtins.bool0:overloadX©
__call__3numpy._typing._callable._UnsignedIntDivMod.__call__"ﬂ
ITypeAlias[Tuple[numpy._typing._callable._T1,numpy._typing._callable._T1]]Ó
>Tuple[numpy._typing._callable._T1,numpy._typing._callable._T1]T
numpy._typing._callable._T1"
builtins.object"builtins.object"builtins.objectT
numpy._typing._callable._T1"
builtins.object"builtins.object"builtins.object"numpy._typing._callable._2Tuple*ÈÊ
Jnumpy._typing._callable._UnsignedIntDivMod[numpy._typing._callable._NBit1]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase"*numpy._typing._callable._UnsignedIntDivMod*ãà
,Union[builtins.int,numpy.signedinteger[Any]]
builtins.int"builtins.int8
numpy.signedinteger[Any]
Any"numpy.signedinteger0:overloadXø
__call__3numpy._typing._callable._UnsignedIntDivMod.__call__"ﬂ
ITypeAlias[Tuple[numpy._typing._callable._T1,numpy._typing._callable._T1]]Ó
>Tuple[numpy._typing._callable._T1,numpy._typing._callable._T1]T
numpy._typing._callable._T1"
builtins.object"builtins.object"builtins.objectT
numpy._typing._callable._T1"
builtins.object"builtins.object"builtins.object"numpy._typing._callable._2Tuple*ÈÊ
Jnumpy._typing._callable._UnsignedIntDivMod[numpy._typing._callable._NBit1]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase"*numpy._typing._callable._UnsignedIntDivMod*" 
builtins.float"builtins.float0:overloadX›
__call__3numpy._typing._callable._UnsignedIntDivMod.__call__"ﬂ
ITypeAlias[Tuple[numpy._typing._callable._T1,numpy._typing._callable._T1]]Ó
>Tuple[numpy._typing._callable._T1,numpy._typing._callable._T1]T
numpy._typing._callable._T1"
builtins.object"builtins.object"builtins.objectT
numpy._typing._callable._T1"
builtins.object"builtins.object"builtins.object"numpy._typing._callable._2Tuple*ÈÊ
Jnumpy._typing._callable._UnsignedIntDivMod[numpy._typing._callable._NBit1]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase"*numpy._typing._callable._UnsignedIntDivMod*øº
5numpy.unsignedinteger[numpy._typing._callable._NBit2]l
numpy._typing._callable._NBit20
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase"numpy.unsignedinteger0:overloadXPXü
_SignedIntOp$numpy._typing._callable._SignedIntOp"builtins.object2”
__call__-numpy._typing._callable._SignedIntOp.__call__Ñ
__call__-numpy._typing._callable._SignedIntOp.__call__"∏
3numpy.signedinteger[numpy._typing._callable._NBit1]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase"numpy.signedinteger*›⁄
Dnumpy._typing._callable._SignedIntOp[numpy._typing._callable._NBit1]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase"$numpy._typing._callable._SignedIntOp* 
builtins.bool"builtins.bool0:overloadXé
__call__-numpy._typing._callable._SignedIntOp.__call__"ƒ
Inumpy.signedinteger[Union[numpy._typing._callable._NBit1,TypeAlias[Any]]]·
4Union[numpy._typing._callable._NBit1,TypeAlias[Any]]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase9
TypeAlias[Any]
Any"numpy._typing._nbit._NBitInt"numpy.signedinteger*›⁄
Dnumpy._typing._callable._SignedIntOp[numpy._typing._callable._NBit1]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase"$numpy._typing._callable._SignedIntOp*
builtins.int"builtins.int0:overloadXã
__call__-numpy._typing._callable._SignedIntOp.__call__"Ω
Dnumpy.floating[Union[numpy._typing._callable._NBit1,TypeAlias[Any]]]‰
4Union[numpy._typing._callable._NBit1,TypeAlias[Any]]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase<
TypeAlias[Any]
Any"numpy._typing._nbit._NBitDouble"numpy.floating*›⁄
Dnumpy._typing._callable._SignedIntOp[numpy._typing._callable._NBit1]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase"$numpy._typing._callable._SignedIntOp*" 
builtins.float"builtins.float0:overloadXÔ
__call__-numpy._typing._callable._SignedIntOp.__call__"ù
ynumpy.complexfloating[Union[numpy._typing._callable._NBit1,TypeAlias[Any]],Union[numpy._typing._callable._NBit1,Unknown]]‰
4Union[numpy._typing._callable._NBit1,TypeAlias[Any]]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase<
TypeAlias[Any]
Any"numpy._typing._nbit._NBitDouble°
-Union[numpy._typing._callable._NBit1,Unknown]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase "numpy.complexfloating*›⁄
Dnumpy._typing._callable._SignedIntOp[numpy._typing._callable._NBit1]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase"$numpy._typing._callable._SignedIntOp*&$
builtins.complex"builtins.complex0:overloadXˇ
__call__-numpy._typing._callable._SignedIntOp.__call__"ó
Ynumpy.signedinteger[Union[numpy._typing._callable._NBit1,numpy._typing._callable._NBit2]]§
DUnion[numpy._typing._callable._NBit1,numpy._typing._callable._NBit2]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBasel
numpy._typing._callable._NBit20
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase"numpy.signedinteger*›⁄
Dnumpy._typing._callable._SignedIntOp[numpy._typing._callable._NBit1]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase"$numpy._typing._callable._SignedIntOp*ª∏
3numpy.signedinteger[numpy._typing._callable._NBit2]l
numpy._typing._callable._NBit20
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase"numpy.signedinteger0:overloadXPX√
_SignedIntBitOp'numpy._typing._callable._SignedIntBitOp"builtins.object2Ò
__call__0numpy._typing._callable._SignedIntBitOp.__call__ç
__call__0numpy._typing._callable._SignedIntBitOp.__call__"∏
3numpy.signedinteger[numpy._typing._callable._NBit1]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase"numpy.signedinteger*„‡
Gnumpy._typing._callable._SignedIntBitOp[numpy._typing._callable._NBit1]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase"'numpy._typing._callable._SignedIntBitOp* 
builtins.bool"builtins.bool0:overloadXó
__call__0numpy._typing._callable._SignedIntBitOp.__call__"ƒ
Inumpy.signedinteger[Union[numpy._typing._callable._NBit1,TypeAlias[Any]]]·
4Union[numpy._typing._callable._NBit1,TypeAlias[Any]]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase9
TypeAlias[Any]
Any"numpy._typing._nbit._NBitInt"numpy.signedinteger*„‡
Gnumpy._typing._callable._SignedIntBitOp[numpy._typing._callable._NBit1]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase"'numpy._typing._callable._SignedIntBitOp*
builtins.int"builtins.int0:overloadXà
__call__0numpy._typing._callable._SignedIntBitOp.__call__"ó
Ynumpy.signedinteger[Union[numpy._typing._callable._NBit1,numpy._typing._callable._NBit2]]§
DUnion[numpy._typing._callable._NBit1,numpy._typing._callable._NBit2]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBasel
numpy._typing._callable._NBit20
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase"numpy.signedinteger*„‡
Gnumpy._typing._callable._SignedIntBitOp[numpy._typing._callable._NBit1]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase"'numpy._typing._callable._SignedIntBitOp*ª∏
3numpy.signedinteger[numpy._typing._callable._NBit2]l
numpy._typing._callable._NBit20
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase"numpy.signedinteger0:overloadXPXº
_SignedIntMod%numpy._typing._callable._SignedIntMod"builtins.object2Ó
__call__.numpy._typing._callable._SignedIntMod.__call__á
__call__.numpy._typing._callable._SignedIntMod.__call__"∏
3numpy.signedinteger[numpy._typing._callable._NBit1]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase"numpy.signedinteger*ﬂ‹
Enumpy._typing._callable._SignedIntMod[numpy._typing._callable._NBit1]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase"%numpy._typing._callable._SignedIntMod* 
builtins.bool"builtins.bool0:overloadXë
__call__.numpy._typing._callable._SignedIntMod.__call__"ƒ
Inumpy.signedinteger[Union[numpy._typing._callable._NBit1,TypeAlias[Any]]]·
4Union[numpy._typing._callable._NBit1,TypeAlias[Any]]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase9
TypeAlias[Any]
Any"numpy._typing._nbit._NBitInt"numpy.signedinteger*ﬂ‹
Enumpy._typing._callable._SignedIntMod[numpy._typing._callable._NBit1]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase"%numpy._typing._callable._SignedIntMod*
builtins.int"builtins.int0:overloadXé
__call__.numpy._typing._callable._SignedIntMod.__call__"Ω
Dnumpy.floating[Union[numpy._typing._callable._NBit1,TypeAlias[Any]]]‰
4Union[numpy._typing._callable._NBit1,TypeAlias[Any]]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase<
TypeAlias[Any]
Any"numpy._typing._nbit._NBitDouble"numpy.floating*ﬂ‹
Enumpy._typing._callable._SignedIntMod[numpy._typing._callable._NBit1]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase"%numpy._typing._callable._SignedIntMod*" 
builtins.float"builtins.float0:overloadXÇ
__call__.numpy._typing._callable._SignedIntMod.__call__"ó
Ynumpy.signedinteger[Union[numpy._typing._callable._NBit1,numpy._typing._callable._NBit2]]§
DUnion[numpy._typing._callable._NBit1,numpy._typing._callable._NBit2]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBasel
numpy._typing._callable._NBit20
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase"numpy.signedinteger*ﬂ‹
Enumpy._typing._callable._SignedIntMod[numpy._typing._callable._NBit1]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase"%numpy._typing._callable._SignedIntMod*ª∏
3numpy.signedinteger[numpy._typing._callable._NBit2]l
numpy._typing._callable._NBit20
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase"numpy.signedinteger0:overloadXPXï
_SignedIntDivMod(numpy._typing._callable._SignedIntDivMod"builtins.object2¡
__call__1numpy._typing._callable._SignedIntDivMod.__call__∑
__call__1numpy._typing._callable._SignedIntDivMod.__call__"ﬂ
ITypeAlias[Tuple[numpy._typing._callable._T1,numpy._typing._callable._T1]]Ó
>Tuple[numpy._typing._callable._T1,numpy._typing._callable._T1]T
numpy._typing._callable._T1"
builtins.object"builtins.object"builtins.objectT
numpy._typing._callable._T1"
builtins.object"builtins.object"builtins.object"numpy._typing._callable._2Tuple*Â‚
Hnumpy._typing._callable._SignedIntDivMod[numpy._typing._callable._NBit1]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase"(numpy._typing._callable._SignedIntDivMod* 
builtins.bool"builtins.bool0:overloadXµ
__call__1numpy._typing._callable._SignedIntDivMod.__call__"ﬂ
ITypeAlias[Tuple[numpy._typing._callable._T1,numpy._typing._callable._T1]]Ó
>Tuple[numpy._typing._callable._T1,numpy._typing._callable._T1]T
numpy._typing._callable._T1"
builtins.object"builtins.object"builtins.objectT
numpy._typing._callable._T1"
builtins.object"builtins.object"builtins.object"numpy._typing._callable._2Tuple*Â‚
Hnumpy._typing._callable._SignedIntDivMod[numpy._typing._callable._NBit1]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase"(numpy._typing._callable._SignedIntDivMod*
builtins.int"builtins.int0:overloadXπ
__call__1numpy._typing._callable._SignedIntDivMod.__call__"ﬂ
ITypeAlias[Tuple[numpy._typing._callable._T1,numpy._typing._callable._T1]]Ó
>Tuple[numpy._typing._callable._T1,numpy._typing._callable._T1]T
numpy._typing._callable._T1"
builtins.object"builtins.object"builtins.objectT
numpy._typing._callable._T1"
builtins.object"builtins.object"builtins.object"numpy._typing._callable._2Tuple*Â‚
Hnumpy._typing._callable._SignedIntDivMod[numpy._typing._callable._NBit1]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase"(numpy._typing._callable._SignedIntDivMod*" 
builtins.float"builtins.float0:overloadX”
__call__1numpy._typing._callable._SignedIntDivMod.__call__"ﬂ
ITypeAlias[Tuple[numpy._typing._callable._T1,numpy._typing._callable._T1]]Ó
>Tuple[numpy._typing._callable._T1,numpy._typing._callable._T1]T
numpy._typing._callable._T1"
builtins.object"builtins.object"builtins.objectT
numpy._typing._callable._T1"
builtins.object"builtins.object"builtins.object"numpy._typing._callable._2Tuple*Â‚
Hnumpy._typing._callable._SignedIntDivMod[numpy._typing._callable._NBit1]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase"(numpy._typing._callable._SignedIntDivMod*ª∏
3numpy.signedinteger[numpy._typing._callable._NBit2]l
numpy._typing._callable._NBit20
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase"numpy.signedinteger0:overloadXPX»
_FloatOp numpy._typing._callable._FloatOp"builtins.object2Ñ
__call__)numpy._typing._callable._FloatOp.__call__Ó
__call__)numpy._typing._callable._FloatOp.__call__"Æ
.numpy.floating[numpy._typing._callable._NBit1]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase"numpy.floating*’“
@numpy._typing._callable._FloatOp[numpy._typing._callable._NBit1]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase" numpy._typing._callable._FloatOp* 
builtins.bool"builtins.bool0:overloadX¯
__call__)numpy._typing._callable._FloatOp.__call__"∫
Dnumpy.floating[Union[numpy._typing._callable._NBit1,TypeAlias[Any]]]·
4Union[numpy._typing._callable._NBit1,TypeAlias[Any]]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase9
TypeAlias[Any]
Any"numpy._typing._nbit._NBitInt"numpy.floating*’“
@numpy._typing._callable._FloatOp[numpy._typing._callable._NBit1]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase" numpy._typing._callable._FloatOp*
builtins.int"builtins.int0:overloadXˇ
__call__)numpy._typing._callable._FloatOp.__call__"Ω
Dnumpy.floating[Union[numpy._typing._callable._NBit1,TypeAlias[Any]]]‰
4Union[numpy._typing._callable._NBit1,TypeAlias[Any]]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase<
TypeAlias[Any]
Any"numpy._typing._nbit._NBitDouble"numpy.floating*’“
@numpy._typing._callable._FloatOp[numpy._typing._callable._NBit1]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase" numpy._typing._callable._FloatOp*" 
builtins.float"builtins.float0:overloadX„
__call__)numpy._typing._callable._FloatOp.__call__"ù
ynumpy.complexfloating[Union[numpy._typing._callable._NBit1,TypeAlias[Any]],Union[numpy._typing._callable._NBit1,Unknown]]‰
4Union[numpy._typing._callable._NBit1,TypeAlias[Any]]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase<
TypeAlias[Any]
Any"numpy._typing._nbit._NBitDouble°
-Union[numpy._typing._callable._NBit1,Unknown]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase "numpy.complexfloating*’“
@numpy._typing._callable._FloatOp[numpy._typing._callable._NBit1]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase" numpy._typing._callable._FloatOp*&$
builtins.complex"builtins.complex0:overloadX¯
__call__)numpy._typing._callable._FloatOp.__call__"ç
Tnumpy.floating[Union[numpy._typing._callable._NBit1,numpy._typing._callable._NBit2]]§
DUnion[numpy._typing._callable._NBit1,numpy._typing._callable._NBit2]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBasel
numpy._typing._callable._NBit20
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase"numpy.floating*’“
@numpy._typing._callable._FloatOp[numpy._typing._callable._NBit1]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase" numpy._typing._callable._FloatOp* «
cUnion[numpy.integer[numpy._typing._callable._NBit2],numpy.floating[numpy._typing._callable._NBit2]]¨
-numpy.integer[numpy._typing._callable._NBit2]l
numpy._typing._callable._NBit20
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase"numpy.integerÆ
.numpy.floating[numpy._typing._callable._NBit2]l
numpy._typing._callable._NBit20
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase"numpy.floating0:overloadXPXÒ
	_FloatMod!numpy._typing._callable._FloatMod"builtins.object2´
__call__*numpy._typing._callable._FloatMod.__call__Ò
__call__*numpy._typing._callable._FloatMod.__call__"Æ
.numpy.floating[numpy._typing._callable._NBit1]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase"numpy.floating*◊‘
Anumpy._typing._callable._FloatMod[numpy._typing._callable._NBit1]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase"!numpy._typing._callable._FloatMod* 
builtins.bool"builtins.bool0:overloadX˚
__call__*numpy._typing._callable._FloatMod.__call__"∫
Dnumpy.floating[Union[numpy._typing._callable._NBit1,TypeAlias[Any]]]·
4Union[numpy._typing._callable._NBit1,TypeAlias[Any]]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase9
TypeAlias[Any]
Any"numpy._typing._nbit._NBitInt"numpy.floating*◊‘
Anumpy._typing._callable._FloatMod[numpy._typing._callable._NBit1]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase"!numpy._typing._callable._FloatMod*
builtins.int"builtins.int0:overloadXÇ
__call__*numpy._typing._callable._FloatMod.__call__"Ω
Dnumpy.floating[Union[numpy._typing._callable._NBit1,TypeAlias[Any]]]‰
4Union[numpy._typing._callable._NBit1,TypeAlias[Any]]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase<
TypeAlias[Any]
Any"numpy._typing._nbit._NBitDouble"numpy.floating*◊‘
Anumpy._typing._callable._FloatMod[numpy._typing._callable._NBit1]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase"!numpy._typing._callable._FloatMod*" 
builtins.float"builtins.float0:overloadX˚
__call__*numpy._typing._callable._FloatMod.__call__"ç
Tnumpy.floating[Union[numpy._typing._callable._NBit1,numpy._typing._callable._NBit2]]§
DUnion[numpy._typing._callable._NBit1,numpy._typing._callable._NBit2]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBasel
numpy._typing._callable._NBit20
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase"numpy.floating*◊‘
Anumpy._typing._callable._FloatMod[numpy._typing._callable._NBit1]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase"!numpy._typing._callable._FloatMod* «
cUnion[numpy.integer[numpy._typing._callable._NBit2],numpy.floating[numpy._typing._callable._NBit2]]¨
-numpy.integer[numpy._typing._callable._NBit2]l
numpy._typing._callable._NBit20
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase"numpy.integerÆ
.numpy.floating[numpy._typing._callable._NBit2]l
numpy._typing._callable._NBit20
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase"numpy.floating0:overloadXPXË
_FloatDivMod$numpy._typing._callable._FloatDivMod"builtins.object2ú
__call__-numpy._typing._callable._FloatDivMod.__call__´
__call__-numpy._typing._callable._FloatDivMod.__call__"ﬂ
ITypeAlias[Tuple[numpy._typing._callable._T1,numpy._typing._callable._T1]]Ó
>Tuple[numpy._typing._callable._T1,numpy._typing._callable._T1]T
numpy._typing._callable._T1"
builtins.object"builtins.object"builtins.objectT
numpy._typing._callable._T1"
builtins.object"builtins.object"builtins.object"numpy._typing._callable._2Tuple*›⁄
Dnumpy._typing._callable._FloatDivMod[numpy._typing._callable._NBit1]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase"$numpy._typing._callable._FloatDivMod* 
builtins.bool"builtins.bool0:overloadX©
__call__-numpy._typing._callable._FloatDivMod.__call__"ﬂ
ITypeAlias[Tuple[numpy._typing._callable._T1,numpy._typing._callable._T1]]Ó
>Tuple[numpy._typing._callable._T1,numpy._typing._callable._T1]T
numpy._typing._callable._T1"
builtins.object"builtins.object"builtins.objectT
numpy._typing._callable._T1"
builtins.object"builtins.object"builtins.object"numpy._typing._callable._2Tuple*›⁄
Dnumpy._typing._callable._FloatDivMod[numpy._typing._callable._NBit1]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase"$numpy._typing._callable._FloatDivMod*
builtins.int"builtins.int0:overloadX≠
__call__-numpy._typing._callable._FloatDivMod.__call__"ﬂ
ITypeAlias[Tuple[numpy._typing._callable._T1,numpy._typing._callable._T1]]Ó
>Tuple[numpy._typing._callable._T1,numpy._typing._callable._T1]T
numpy._typing._callable._T1"
builtins.object"builtins.object"builtins.objectT
numpy._typing._callable._T1"
builtins.object"builtins.object"builtins.object"numpy._typing._callable._2Tuple*›⁄
Dnumpy._typing._callable._FloatDivMod[numpy._typing._callable._NBit1]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase"$numpy._typing._callable._FloatDivMod*" 
builtins.float"builtins.float0:overloadX÷
__call__-numpy._typing._callable._FloatDivMod.__call__"ﬂ
ITypeAlias[Tuple[numpy._typing._callable._T1,numpy._typing._callable._T1]]Ó
>Tuple[numpy._typing._callable._T1,numpy._typing._callable._T1]T
numpy._typing._callable._T1"
builtins.object"builtins.object"builtins.objectT
numpy._typing._callable._T1"
builtins.object"builtins.object"builtins.object"numpy._typing._callable._2Tuple*›⁄
Dnumpy._typing._callable._FloatDivMod[numpy._typing._callable._NBit1]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase"$numpy._typing._callable._FloatDivMod* «
cUnion[numpy.integer[numpy._typing._callable._NBit2],numpy.floating[numpy._typing._callable._NBit2]]¨
-numpy.integer[numpy._typing._callable._NBit2]l
numpy._typing._callable._NBit20
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase"numpy.integerÆ
.numpy.floating[numpy._typing._callable._NBit2]l
numpy._typing._callable._NBit20
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase"numpy.floating0:overloadXPX¸"

_ComplexOp"numpy._typing._callable._ComplexOp"builtins.object2¥"
__call__+numpy._typing._callable._ComplexOp.__call__è
__call__+numpy._typing._callable._ComplexOp.__call__"…
Tnumpy.complexfloating[numpy._typing._callable._NBit1,numpy._typing._callable._NBit1]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBasel
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase"numpy.complexfloating*Ÿ÷
Bnumpy._typing._callable._ComplexOp[numpy._typing._callable._NBit1]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase""numpy._typing._callable._ComplexOp* 
builtins.bool"builtins.bool0:overloadXﬁ
__call__+numpy._typing._callable._ComplexOp.__call__"ö
ynumpy.complexfloating[Union[numpy._typing._callable._NBit1,TypeAlias[Any]],Union[numpy._typing._callable._NBit1,Unknown]]·
4Union[numpy._typing._callable._NBit1,TypeAlias[Any]]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase9
TypeAlias[Any]
Any"numpy._typing._nbit._NBitInt°
-Union[numpy._typing._callable._NBit1,Unknown]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase "numpy.complexfloating*Ÿ÷
Bnumpy._typing._callable._ComplexOp[numpy._typing._callable._NBit1]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase""numpy._typing._callable._ComplexOp*
builtins.int"builtins.int0:overloadXÈ
__call__+numpy._typing._callable._ComplexOp.__call__"ù
ynumpy.complexfloating[Union[numpy._typing._callable._NBit1,TypeAlias[Any]],Union[numpy._typing._callable._NBit1,Unknown]]‰
4Union[numpy._typing._callable._NBit1,TypeAlias[Any]]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase<
TypeAlias[Any]
Any"numpy._typing._nbit._NBitDouble°
-Union[numpy._typing._callable._NBit1,Unknown]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase "numpy.complexfloating*Ÿ÷
Bnumpy._typing._callable._ComplexOp[numpy._typing._callable._NBit1]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase""numpy._typing._callable._ComplexOp*&$
builtins.complex"builtins.complex0:overloadXõ
__call__+numpy._typing._callable._ComplexOp.__call__"à
†numpy.complexfloating[Union[numpy._typing._callable._NBit1,numpy._typing._callable._NBit2],Union[numpy._typing._callable._NBit1,numpy._typing._callable._NBit2]]§
DUnion[numpy._typing._callable._NBit1,numpy._typing._callable._NBit2]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBasel
numpy._typing._callable._NBit20
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase§
DUnion[numpy._typing._callable._NBit1,numpy._typing._callable._NBit2]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBasel
numpy._typing._callable._NBit20
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase"numpy.complexfloating*Ÿ÷
Bnumpy._typing._callable._ComplexOp[numpy._typing._callable._NBit1]l
numpy._typing._callable._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase""numpy._typing._callable._ComplexOp*ÏÈ
∏Union[numpy.integer[numpy._typing._callable._NBit2],numpy.floating[numpy._typing._callable._NBit2],numpy.complexfloating[numpy._typing._callable._NBit2,numpy._typing._callable._NBit2]]¨
-numpy.integer[numpy._typing._callable._NBit2]l
numpy._typing._callable._NBit20
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase"numpy.integerÆ
.numpy.floating[numpy._typing._callable._NBit2]l
numpy._typing._callable._NBit20
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase"numpy.floating…
Tnumpy.complexfloating[numpy._typing._callable._NBit2,numpy._typing._callable._NBit2]l
numpy._typing._callable._NBit20
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBasel
numpy._typing._callable._NBit20
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase"numpy.complexfloating0:overloadXPX‡
	_NumberOp!numpy._typing._callable._NumberOp"builtins.object*ú
__call__*numpy._typing._callable._NumberOp.__call__"
Any*HF
!numpy._typing._callable._NumberOp"!numpy._typing._callable._NumberOp*êç
\TypeAlias[Union[builtins.int,builtins.float,builtins.complex,numpy.number[Any],numpy.bool_]]É
QUnion[builtins.int,builtins.float,builtins.complex,numpy.number[Any],numpy.bool_]
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complex*
numpy.number[Any]
Any"numpy.number
numpy.bool_"numpy.bool_"%numpy._typing._scalars._NumberLike_coX˘
_SupportsLT#numpy._typing._callable._SupportsLT"builtins.object*±
__lt__*numpy._typing._callable._SupportsLT.__lt__""
builtins.object"builtins.object*LJ
#numpy._typing._callable._SupportsLT"#numpy._typing._callable._SupportsLT*	
AnyX˘
_SupportsGT#numpy._typing._callable._SupportsGT"builtins.object*±
__gt__*numpy._typing._callable._SupportsGT.__gt__""
builtins.object"builtins.object*LJ
#numpy._typing._callable._SupportsGT"#numpy._typing._callable._SupportsGT*	
AnyX·
_ComparisonOp%numpy._typing._callable._ComparisonOp"builtins.object2ì
__call__.numpy._typing._callable._ComparisonOp.__call__ò
__call__.numpy._typing._callable._ComparisonOp.__call__"
numpy.bool_"numpy.bool_*“œ
lnumpy._typing._callable._ComparisonOp[numpy._typing._callable._T1_contra,numpy._typing._callable._T2_contra][
"numpy._typing._callable._T1_contra"
builtins.object"builtins.object"builtins.object[
"numpy._typing._callable._T2_contra"
builtins.object"builtins.object"builtins.object"%numpy._typing._callable._ComparisonOp*][
"numpy._typing._callable._T1_contra"
builtins.object"builtins.object"builtins.object0:overloadXÇ
__call__.numpy._typing._callable._ComparisonOp.__call__"É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray*“œ
lnumpy._typing._callable._ComparisonOp[numpy._typing._callable._T1_contra,numpy._typing._callable._T2_contra][
"numpy._typing._callable._T1_contra"
builtins.object"builtins.object"builtins.object[
"numpy._typing._callable._T2_contra"
builtins.object"builtins.object"builtins.object"%numpy._typing._callable._ComparisonOp*][
"numpy._typing._callable._T2_contra"
builtins.object"builtins.object"builtins.object0:overloadX∂	
__call__.numpy._typing._callable._ComparisonOp.__call__"
Any*“œ
lnumpy._typing._callable._ComparisonOp[numpy._typing._callable._T1_contra,numpy._typing._callable._T2_contra][
"numpy._typing._callable._T1_contra"
builtins.object"builtins.object"builtins.object[
"numpy._typing._callable._T2_contra"
builtins.object"builtins.object"builtins.object"%numpy._typing._callable._ComparisonOp*çä
ÕUnion[numpy._typing._callable._SupportsLT,numpy._typing._callable._SupportsGT,numpy._typing._nested_sequence._NestedSequence[Union[numpy._typing._callable._SupportsLT,numpy._typing._callable._SupportsGT]]]J
#numpy._typing._callable._SupportsLT"#numpy._typing._callable._SupportsLTJ
#numpy._typing._callable._SupportsGT"#numpy._typing._callable._SupportsGTù
~numpy._typing._nested_sequence._NestedSequence[Union[numpy._typing._callable._SupportsLT,numpy._typing._callable._SupportsGT]]Í
NUnion[numpy._typing._callable._SupportsLT,numpy._typing._callable._SupportsGT]J
#numpy._typing._callable._SupportsLT"#numpy._typing._callable._SupportsLTJ
#numpy._typing._callable._SupportsGT"#numpy._typing._callable._SupportsGT".numpy._typing._nested_sequence._NestedSequence0:overloadXPX*ì
__annotations__'numpy._typing._callable.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict