
fastapi.utilsÛ
is_body_allowed_for_status_code-fastapi.utils.is_body_allowed_for_status_code"
builtins.bool"builtins.bool*Ä
status_codeo
%Union[builtins.int,builtins.str,None]
builtins.int"builtins.int
builtins.str"builtins.str
None©
get_model_definitions#fastapi.utils.get_model_definitions"W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*Ø
flat_modelsù
Bbuiltins.set[Union[Type[pydantic.main.BaseModel],Type[enum.Enum]]]»
4Union[Type[pydantic.main.BaseModel],Type[enum.Enum]][
Type[pydantic.main.BaseModel]2
pydantic.main.BaseModel"pydantic.main.BaseModel"type1
Type[enum.Enum]
	enum.Enum"	enum.Enum"type"builtins.set*ﬂ
model_name_map 
Pbuiltins.dict[Union[Type[pydantic.main.BaseModel],Type[enum.Enum]],builtins.str]»
4Union[Type[pydantic.main.BaseModel],Type[enum.Enum]][
Type[pydantic.main.BaseModel]2
pydantic.main.BaseModel"pydantic.main.BaseModel"type1
Type[enum.Enum]
	enum.Enum"	enum.Enum"type
builtins.str"builtins.str"builtins.dict¨
get_path_param_names"fastapi.utils.get_path_param_names"H
builtins.set[builtins.str]
builtins.str"builtins.str"builtins.set*&
path
builtins.str"builtins.str¶
create_response_field#fastapi.utils.create_response_field"8
pydantic.fields.ModelField"pydantic.fields.ModelField*&
name
builtins.str"builtins.str*'
type_
	Type[Any]
Any"type*Ø
class_validatorsñ
KUnion[builtins.dict[builtins.str,pydantic.class_validators.Validator],None]∫
?builtins.dict[builtins.str,pydantic.class_validators.Validator]
builtins.str"builtins.strJ
#pydantic.class_validators.Validator"#pydantic.class_validators.Validator"builtins.dict
None *5
default&
Union[Any,None]
Any
None *ß
requiredñ
2Union[builtins.bool,pydantic.fields.UndefinedType]
builtins.bool"builtins.bool>
pydantic.fields.UndefinedType"pydantic.fields.UndefinedType *x
model_configd
 Type[pydantic.config.BaseConfig]8
pydantic.config.BaseConfig"pydantic.config.BaseConfig"type *}

field_infok
%Union[pydantic.fields.FieldInfo,None]6
pydantic.fields.FieldInfo"pydantic.fields.FieldInfo
None *Q
aliasD
Union[builtins.str,None]
builtins.str"builtins.str
None „
create_cloned_field!fastapi.utils.create_cloned_field"8
pydantic.fields.ModelField"pydantic.fields.ModelField*C
field8
pydantic.fields.ModelField"pydantic.fields.ModelField*©
cloned_typesî
^Union[typing.MutableMapping[Type[pydantic.main.BaseModel],Type[pydantic.main.BaseModel]],None]•
Rtyping.MutableMapping[Type[pydantic.main.BaseModel],Type[pydantic.main.BaseModel]][
Type[pydantic.main.BaseModel]2
pydantic.main.BaseModel"pydantic.main.BaseModel"type[
Type[pydantic.main.BaseModel]2
pydantic.main.BaseModel"pydantic.main.BaseModel"type"typing.MutableMapping
None Ê
generate_operation_id_for_path,fastapi.utils.generate_operation_id_for_path"
builtins.str"builtins.str*&
name
builtins.str"builtins.str*&
path
builtins.str"builtins.str*(
method
builtins.str"builtins.strï
generate_unique_id fastapi.utils.generate_unique_id"
builtins.str"builtins.str*?
route4
fastapi.routing.APIRoute"fastapi.routing.APIRoute“
deep_dict_updatefastapi.utils.deep_dict_update"
None*H
	main_dict9
builtins.dict[Any,Any]
Any
Any"builtins.dict*J
update_dict9
builtins.dict[Any,Any]
Any
Any"builtins.dictä
get_value_or_default"fastapi.utils.get_value_or_default"å
SUnion[fastapi.datastructures.DefaultPlaceholder,fastapi.datastructures.DefaultType]V
)fastapi.datastructures.DefaultPlaceholder")fastapi.datastructures.DefaultPlaceholder[
"fastapi.datastructures.DefaultType"
builtins.object"builtins.object"builtins.object*ù

first_itemå
SUnion[fastapi.datastructures.DefaultPlaceholder,fastapi.datastructures.DefaultType]V
)fastapi.datastructures.DefaultPlaceholder")fastapi.datastructures.DefaultPlaceholder[
"fastapi.datastructures.DefaultType"
builtins.object"builtins.object"builtins.object*û
extra_itemså
SUnion[fastapi.datastructures.DefaultPlaceholder,fastapi.datastructures.DefaultType]V
)fastapi.datastructures.DefaultPlaceholder")fastapi.datastructures.DefaultPlaceholder[
"fastapi.datastructures.DefaultType"
builtins.object"builtins.object"builtins.object*â
__annotations__fastapi.utils.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*‡
_CLONED_TYPES_CACHE!fastapi.utils._CLONED_TYPES_CACHE•
Rtyping.MutableMapping[Type[pydantic.main.BaseModel],Type[pydantic.main.BaseModel]][
Type[pydantic.main.BaseModel]2
pydantic.main.BaseModel"pydantic.main.BaseModel"type[
Type[pydantic.main.BaseModel]2
pydantic.main.BaseModel"pydantic.main.BaseModel"type"typing.MutableMapping