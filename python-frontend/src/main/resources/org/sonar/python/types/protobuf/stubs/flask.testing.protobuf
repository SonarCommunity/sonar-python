
flask.testingº$
IO	typing.IO"typing.Iterator*ü
modetyping.IO.mode"
builtins.str"builtins.str*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:property`z35z36z37z38z39z310*ü
nametyping.IO.name"
builtins.str"builtins.str*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:property`z35z36z37z38z39z310*ì
closetyping.IO.close"
None*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z35z36z37z38z39z310*•
closedtyping.IO.closed"
builtins.bool"builtins.bool*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:property`z35z36z37z38z39z310*©
filenotyping.IO.fileno"
builtins.int"builtins.int*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z35z36z37z38z39z310*ì
flushtyping.IO.flush"
None*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z35z36z37z38z39z310*´
isattytyping.IO.isatty"
builtins.bool"builtins.bool*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z35z36z37z38z39z310*¡
readtyping.IO.read"
typing.AnyStr*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*%
n
builtins.int"builtins.int 0:abstractmethod@z35z36z37z38z39z310*Ø
readabletyping.IO.readable"
builtins.bool"builtins.bool*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z35z36z37z38z39z310*Õ
readlinetyping.IO.readline"
typing.AnyStr*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*)
limit
builtins.int"builtins.int 0:abstractmethod@z35z36z37z38z39z310*˝
	readlinestyping.IO.readlines"@
builtins.list[typing.AnyStr]
typing.AnyStr"builtins.list*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*(
hint
builtins.int"builtins.int 0:abstractmethod@z35z36z37z38z39z310*˚
seektyping.IO.seek"
builtins.int"builtins.int*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*(
offset
builtins.int"builtins.int**
whence
builtins.int"builtins.int 0:abstractmethod@z35z36z37z38z39z310*Ø
seekabletyping.IO.seekable"
builtins.bool"builtins.bool*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z35z36z37z38z39z310*•
telltyping.IO.tell"
builtins.int"builtins.int*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z35z36z37z38z39z310*ˇ
truncatetyping.IO.truncate"
builtins.int"builtins.int*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*P
sizeD
Union[builtins.int,None]
builtins.int"builtins.int
None 0:abstractmethod@z35z36z37z38z39z310*Ø
writabletyping.IO.writable"
builtins.bool"builtins.bool*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z35z36z37z38z39z310*¡
writetyping.IO.write"
builtins.int"builtins.int*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*
s
typing.AnyStr0:abstractmethod@z35z36z37z38z39z310*Ó

writelinestyping.IO.writelines"
None*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*O
linesD
typing.Iterable[typing.AnyStr]
typing.AnyStr"typing.Iterable0:abstractmethod@z35z36z37z38z39z310*¢
__next__typing.IO.__next__"
typing.AnyStr*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z35z36z37z38z39z310*”
__iter__typing.IO.__iter__"D
typing.Iterator[typing.AnyStr]
typing.AnyStr"typing.Iterator*@
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z35z36z37z38z39z310*…
	__enter__typing.IO.__enter__"8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*@
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z35z36z37z38z39z310*æ
__exit__typing.IO.__exit__"G
Union[builtins.bool,None]
builtins.bool"builtins.bool
None*@
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*ê
tä
(Union[Type[builtins.BaseException],None]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException
None*k
valueb
"Union[builtins.BaseException,None]0
builtins.BaseException"builtins.BaseException
None*f
	tracebackY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None0:abstractmethod@z35z36z37z38z39z310Pj35j36j37j38j39j310Ø
Iterabletyping.Iterable"builtins.object*·
__iter__typing.Iterable.__iter__"B
typing.Iterator[typing._T_co]
typing._T_co"typing.Iterator*J
selfB
typing.Iterable[typing._T_co]
typing._T_co"typing.Iterable0:abstractmethod@z35z36z37z38z39z3108PXj35j36j37j38j39j310í
Mappingtyping.Mapping"typing.Collection*Â
__getitem__typing.Mapping.__getitem__"
typing._VT_co*e
self]
(typing.Mapping[typing._KT,typing._VT_co]

typing._KT
typing._VT_co"typing.Mapping*
k

typing._KT0:abstractmethod@z35z36z37z38z39z310*≥
itemstyping.Mapping.items"ë
3typing.AbstractSet[Tuple[typing._KT,typing._VT_co]]F
Tuple[typing._KT,typing._VT_co]

typing._KT
typing._VT_co"typing.AbstractSet*g
self]
(typing.Mapping[typing._KT,typing._VT_co]

typing._KT
typing._VT_co"typing.Mappingz35z36z37z38z39z310*„
keystyping.Mapping.keys"D
typing.AbstractSet[typing._KT]

typing._KT"typing.AbstractSet*g
self]
(typing.Mapping[typing._KT,typing._VT_co]

typing._KT
typing._VT_co"typing.Mappingz35z36z37z38z39z310*Î
valuestyping.Mapping.values"H
 typing.ValuesView[typing._VT_co]
typing._VT_co"typing.ValuesView*g
self]
(typing.Mapping[typing._KT,typing._VT_co]

typing._KT
typing._VT_co"typing.Mappingz35z36z37z38z39z310*Ù
__contains__typing.Mapping.__contains__"
builtins.bool"builtins.bool*e
self]
(typing.Mapping[typing._KT,typing._VT_co]

typing._KT
typing._VT_co"typing.Mapping*'
o"
builtins.object"builtins.objectz35z36z37z38z39z3102ﬂ
gettyping.Mapping.getÂ
gettyping.Mapping.get":
Union[typing._VT_co,None]
typing._VT_co
None*g
self]
(typing.Mapping[typing._KT,typing._VT_co]

typing._KT
typing._VT_co"typing.Mapping*
key

typing._KT0:overloadX¬
gettyping.Mapping.get"D
Union[typing._VT_co,typing._T]
typing._VT_co
	typing._T*g
self]
(typing.Mapping[typing._KT,typing._VT_co]

typing._KT
typing._VT_co"typing.Mapping*
key

typing._KT*Q
defaultD
Union[typing._VT_co,typing._T]
typing._VT_co
	typing._T0:overloadX"35"36"37"38"39"310Pj35j36j37j38j39j310À
TypeVartyping.TypeVar"builtins.object*û
__init__typing.TypeVar.__init__"
None**
self 
typing.TypeVar"typing.TypeVar*&
name
builtins.str"builtins.str*'
constraints
	Type[Any]
Any*s
boundf
"Union[None,Type[Any],builtins.str]
None
	Type[Any]
Any
builtins.str"builtins.str */
	covariant
builtins.bool"builtins.bool *3
contravariant
builtins.bool"builtins.bool z35z36z37z38z39z310j35j36j37j38j39j310r{
	__bound__typing.TypeVar.__bound__;
Union[Type[Any],None]
	Type[Any]
Any
None*35*36*37*38*39*310rè
__constraints__typing.TypeVar.__constraints__C
builtins.tuple[Type[Any]]
	Type[Any]
Any"builtins.tuple*35*36*37*38*39*310rf
__covariant__typing.TypeVar.__covariant__
builtins.bool"builtins.bool*35*36*37*38*39*310rn
__contravariant__ typing.TypeVar.__contravariant__
builtins.bool"builtins.bool*35*36*37*38*39*310Æ
BaseCommandclick.core.BaseCommand"builtins.object*∏
__init__click.core.BaseCommand.__init__"
None*:
self0
click.core.BaseCommand"click.core.BaseCommand*&
name
builtins.str"builtins.str*É
context_settingsk
"Union[builtins.dict[Any,Any],None]9
builtins.dict[Any,Any]
Any
Any"builtins.dict
None z35z36z37z38z39z310*”
	get_usage click.core.BaseCommand.get_usage"
builtins.str"builtins.str*:
self0
click.core.BaseCommand"click.core.BaseCommand*1
ctx(
click.core.Context"click.core.Contextz35z36z37z38z39z310*—
get_helpclick.core.BaseCommand.get_help"
builtins.str"builtins.str*:
self0
click.core.BaseCommand"click.core.BaseCommand*1
ctx(
click.core.Context"click.core.Contextz35z36z37z38z39z310*Ø
make_context#click.core.BaseCommand.make_context"(
click.core.Context"click.core.Context*:
self0
click.core.BaseCommand"click.core.BaseCommand*+
	info_name
builtins.str"builtins.str*T
argsJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*d
parentV
Union[click.core.Context,None](
click.core.Context"click.core.Context
None *
extra
Anyz35z36z37z38z39z310*Ÿ

parse_args!click.core.BaseCommand.parse_args"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*:
self0
click.core.BaseCommand"click.core.BaseCommand*1
ctx(
click.core.Context"click.core.Context*T
argsJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.listz35z36z37z38z39z310*∏
invokeclick.core.BaseCommand.invoke"
Any*:
self0
click.core.BaseCommand"click.core.BaseCommand*1
ctx(
click.core.Context"click.core.Contextz35z36z37z38z39z310*é
mainclick.core.BaseCommand.main"
Any*:
self0
click.core.BaseCommand"click.core.BaseCommand*é
argsÅ
'Union[builtins.list[builtins.str],None]J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list
None *U
	prog_nameD
Union[builtins.str,None]
builtins.str"builtins.str
None *X
complete_varD
Union[builtins.str,None]
builtins.str"builtins.str
None *5
standalone_mode
builtins.bool"builtins.bool *
extra
Anyz35z36z37z38z39z310*±
__call__click.core.BaseCommand.__call__"
Any*:
self0
click.core.BaseCommand"click.core.BaseCommand*
args
Any*
kwargs
Anyz35z36z37z38z39z310j35j36j37j38j39j310rt
allow_extra_args'click.core.BaseCommand.allow_extra_args
builtins.bool"builtins.bool*35*36*37*38*39*310rÇ
allow_interspersed_args.click.core.BaseCommand.allow_interspersed_args
builtins.bool"builtins.bool*35*36*37*38*39*310rÄ
ignore_unknown_options-click.core.BaseCommand.ignore_unknown_options
builtins.bool"builtins.bool*35*36*37*38*39*310rZ
nameclick.core.BaseCommand.name
builtins.str"builtins.str*35*36*37*38*39*310rè
context_settings'click.core.BaseCommand.context_settings9
builtins.dict[Any,Any]
Any
Any"builtins.dict*35*36*37*38*39*310≈
	CliRunnerclick.testing.CliRunner"builtins.object*ë
__init__ click.testing.CliRunner.__init__"
None*<
self2
click.testing.CliRunner"click.testing.CliRunner*S
charsetD
Union[builtins.str,None]
builtins.str"builtins.str
None *»
envº
5Union[typing.Mapping[builtins.str,builtins.str],None]w
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping
None *0

echo_stdin
builtins.bool"builtins.bool *0

mix_stderr
builtins.bool"builtins.bool z35z36z37z38z39z310*ˆ
get_default_prog_name-click.testing.CliRunner.get_default_prog_name"
builtins.str"builtins.str*<
self2
click.testing.CliRunner"click.testing.CliRunner*9
cli0
click.core.BaseCommand"click.core.BaseCommandz35z36z37z38z39z310*À
make_env click.testing.CliRunner.make_env"u
(builtins.dict[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"builtins.dict*<
self2
click.testing.CliRunner"click.testing.CliRunner*Œ
	overridesº
5Union[typing.Mapping[builtins.str,builtins.str],None]w
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping
None z35z36z37z38z39z310*Ö
	isolation!click.testing.CliRunner.isolation" 
Qtyping.ContextManager[Tuple[io.BytesIO,Union[io.BytesIO,Literal[builtins.bool]]]]›
:Tuple[io.BytesIO,Union[io.BytesIO,Literal[builtins.bool]]]

io.BytesIO"
io.BytesIOÇ
(Union[io.BytesIO,Literal[builtins.bool]]

io.BytesIO"
io.BytesIO:
Literal[builtins.bool]	
builtins.bool"builtins.bool"typing.ContextManager*<
self2
click.testing.CliRunner"click.testing.CliRunner*∏
input™
6Union[builtins.bytes,builtins.str,typing.IO[Any],None] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str$
typing.IO[Any]
Any"	typing.IO
None *»
envº
5Union[typing.Mapping[builtins.str,builtins.str],None]w
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping
None *+
color
builtins.bool"builtins.bool z35z36z37z38z39z310*©
invokeclick.testing.CliRunner.invoke",
click.testing.Result"click.testing.Result*<
self2
click.testing.CliRunner"click.testing.CliRunner*9
cli0
click.core.BaseCommand"click.core.BaseCommand*ø
args≤
6Union[builtins.str,typing.Iterable[builtins.str],None]
builtins.str"builtins.strN
typing.Iterable[builtins.str]
builtins.str"builtins.str"typing.Iterable
None *∏
input™
6Union[builtins.bytes,builtins.str,typing.IO[Any],None] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str$
typing.IO[Any]
Any"	typing.IO
None *»
envº
5Union[typing.Mapping[builtins.str,builtins.str],None]w
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping
None *6
catch_exceptions
builtins.bool"builtins.bool *+
color
builtins.bool"builtins.bool *
extra
Anyz35z36z37z38z39z310*ı
isolated_filesystem+click.testing.CliRunner.isolated_filesystem"Z
#typing.ContextManager[builtins.str]
builtins.str"builtins.str"typing.ContextManager*<
self2
click.testing.CliRunner"click.testing.CliRunnerz35z36z37z38z39z310j35j36j37j38j39j310ra
charsetclick.testing.CliRunner.charset
builtins.str"builtins.str*35*36*37*38*39*310r¥
envclick.testing.CliRunner.envw
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping*35*36*37*38*39*310ri

echo_stdin"click.testing.CliRunner.echo_stdin
builtins.bool"builtins.bool*35*36*37*38*39*310ri

mix_stderr"click.testing.CliRunner.mix_stderr
builtins.bool"builtins.bool*35*36*37*38*39*310“
Resultclick.testing.Result"builtins.object*©
__init__click.testing.Result.__init__"
None*6
self,
click.testing.Result"click.testing.Result*>
runner2
click.testing.CliRunner"click.testing.CliRunner*2
stdout_bytes 
builtins.bytes"builtins.bytes*2
stderr_bytes 
builtins.bytes"builtins.bytes*+
	exit_code
builtins.int"builtins.int*
	exception
Any*6
exc_info&
Union[Any,None]
Any
None z35z36z37z38z39z310*¢
outputclick.testing.Result.output"
builtins.str"builtins.str*6
self,
click.testing.Result"click.testing.Result0:property`z35z36z37z38z39z310*¢
stdoutclick.testing.Result.stdout"
builtins.str"builtins.str*6
self,
click.testing.Result"click.testing.Result0:property`z35z36z37z38z39z310*¢
stderrclick.testing.Result.stderr"
builtins.str"builtins.str*6
self,
click.testing.Result"click.testing.Result0:property`z35z36z37z38z39z310j35j36j37j38j39j310rr
runnerclick.testing.Result.runner2
click.testing.CliRunner"click.testing.CliRunner*35*36*37*38*39*310rb
	exit_codeclick.testing.Result.exit_code
builtins.int"builtins.int*35*36*37*38*39*310rM
	exceptionclick.testing.Result.exception
Any*35*36*37*38*39*310rj
exc_infoclick.testing.Result.exc_info&
Union[Any,None]
Any
None*35*36*37*38*39*310rl
stdout_bytes!click.testing.Result.stdout_bytes 
builtins.bytes"builtins.bytes*35*36*37*38*39*310rl
stderr_bytes!click.testing.Result.stderr_bytes 
builtins.bytes"builtins.bytes*35*36*37*38*39*310Üa
Clientwerkzeug.test.Client"builtins.object*∂
__init__werkzeug.test.Client.__init__"
None*^
selfT
&werkzeug.test.Client[werkzeug.test._R]
werkzeug.test._R"werkzeug.test.Client*
application
Any*z
response_wrapperb
"Union[Type[werkzeug.test._R],None]0
Type[werkzeug.test._R]
werkzeug.test._R
None *1
use_cookies
builtins.bool"builtins.bool *?
allow_subdomain_redirects
builtins.bool"builtins.bool z35z36z37z38z39z310*Á

set_cookiewerkzeug.test.Client.set_cookie"
Any*^
selfT
&werkzeug.test.Client[werkzeug.test._R]
werkzeug.test._R"werkzeug.test.Client*
server_name
Any*
key
Any*)
value
builtins.str"builtins.str *5
max_age&
Union[Any,None]
Any
None *5
expires&
Union[Any,None]
Any
None *(
path
builtins.str"builtins.str *4
domain&
Union[Any,None]
Any
None *4
secure&
Union[Any,None]
Any
None *.
httponly
builtins.bool"builtins.bool *+
charset
builtins.str"builtins.str z35z36z37z38z39z310*¡
delete_cookie"werkzeug.test.Client.delete_cookie"
Any*^
selfT
&werkzeug.test.Client[werkzeug.test._R]
werkzeug.test._R"werkzeug.test.Client*
server_name
Any*
key
Any*(
path
builtins.str"builtins.str *4
domain&
Union[Any,None]
Any
None z35z36z37z38z39z310*˘
run_wsgi_app!werkzeug.test.Client.run_wsgi_app"
Any*^
selfT
&werkzeug.test.Client[werkzeug.test._R]
werkzeug.test._R"werkzeug.test.Client*
environ
Any*.
buffered
builtins.bool"builtins.bool z35z36z37z38z39z310*≥
resolve_redirect%werkzeug.test.Client.resolve_redirect"
Any*^
selfT
&werkzeug.test.Client[werkzeug.test._R]
werkzeug.test._R"werkzeug.test.Client*
response
Any*
new_location
Any*
environ
Any*.
buffered
builtins.bool"builtins.bool z35z36z37z38z39z3102‘
openwerkzeug.test.Client.openä
openwerkzeug.test.Client.open"Ü
BTuple[TypeAlias[builtins.dict[builtins.str,Any]],werkzeug.test._R]ß
*TypeAlias[builtins.dict[builtins.str,Any]]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict"_typeshed.wsgi.WSGIEnvironment
werkzeug.test._R*^
selfT
&werkzeug.test.Client[werkzeug.test._R]
werkzeug.test._R"werkzeug.test.Client*
args
Any*H
as_tuple:
Literal[builtins.bool]	
builtins.bool"builtins.bool*
kwargs
Any0:overloadXô
openwerkzeug.test.Client.open"
werkzeug.test._R*^
selfT
&werkzeug.test.Client[werkzeug.test._R]
werkzeug.test._R"werkzeug.test.Client*
args
Any*J
as_tuple:
Literal[builtins.bool]	
builtins.bool"builtins.bool *
kwargs
Any0:overloadXÓ
openwerkzeug.test.Client.open"
Any*^
selfT
&werkzeug.test.Client[werkzeug.test._R]
werkzeug.test._R"werkzeug.test.Client*
args
Any*,
as_tuple
builtins.bool"builtins.bool*
kwargs
Any0:overloadX"35"36"37"38"39"3102¿
getwerkzeug.test.Client.getÑ
getwerkzeug.test.Client.get"Ü
BTuple[TypeAlias[builtins.dict[builtins.str,Any]],werkzeug.test._R]ß
*TypeAlias[builtins.dict[builtins.str,Any]]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict"_typeshed.wsgi.WSGIEnvironment
werkzeug.test._R*^
selfT
&werkzeug.test.Client[werkzeug.test._R]
werkzeug.test._R"werkzeug.test.Client*
args
Any*H
as_tuple:
Literal[builtins.bool]	
builtins.bool"builtins.bool*
kw
Any0:overloadXì
getwerkzeug.test.Client.get"
werkzeug.test._R*^
selfT
&werkzeug.test.Client[werkzeug.test._R]
werkzeug.test._R"werkzeug.test.Client*
args
Any*J
as_tuple:
Literal[builtins.bool]	
builtins.bool"builtins.bool *
kw
Any0:overloadXË
getwerkzeug.test.Client.get"
Any*^
selfT
&werkzeug.test.Client[werkzeug.test._R]
werkzeug.test._R"werkzeug.test.Client*
args
Any*,
as_tuple
builtins.bool"builtins.bool*
kw
Any0:overloadX"35"36"37"38"39"3102–
patchwerkzeug.test.Client.patchà
patchwerkzeug.test.Client.patch"Ü
BTuple[TypeAlias[builtins.dict[builtins.str,Any]],werkzeug.test._R]ß
*TypeAlias[builtins.dict[builtins.str,Any]]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict"_typeshed.wsgi.WSGIEnvironment
werkzeug.test._R*^
selfT
&werkzeug.test.Client[werkzeug.test._R]
werkzeug.test._R"werkzeug.test.Client*
args
Any*H
as_tuple:
Literal[builtins.bool]	
builtins.bool"builtins.bool*
kw
Any0:overloadXó
patchwerkzeug.test.Client.patch"
werkzeug.test._R*^
selfT
&werkzeug.test.Client[werkzeug.test._R]
werkzeug.test._R"werkzeug.test.Client*
args
Any*J
as_tuple:
Literal[builtins.bool]	
builtins.bool"builtins.bool *
kw
Any0:overloadXÏ
patchwerkzeug.test.Client.patch"
Any*^
selfT
&werkzeug.test.Client[werkzeug.test._R]
werkzeug.test._R"werkzeug.test.Client*
args
Any*,
as_tuple
builtins.bool"builtins.bool*
kw
Any0:overloadX"35"36"37"38"39"3102»
postwerkzeug.test.Client.postÜ
postwerkzeug.test.Client.post"Ü
BTuple[TypeAlias[builtins.dict[builtins.str,Any]],werkzeug.test._R]ß
*TypeAlias[builtins.dict[builtins.str,Any]]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict"_typeshed.wsgi.WSGIEnvironment
werkzeug.test._R*^
selfT
&werkzeug.test.Client[werkzeug.test._R]
werkzeug.test._R"werkzeug.test.Client*
args
Any*H
as_tuple:
Literal[builtins.bool]	
builtins.bool"builtins.bool*
kw
Any0:overloadXï
postwerkzeug.test.Client.post"
werkzeug.test._R*^
selfT
&werkzeug.test.Client[werkzeug.test._R]
werkzeug.test._R"werkzeug.test.Client*
args
Any*J
as_tuple:
Literal[builtins.bool]	
builtins.bool"builtins.bool *
kw
Any0:overloadXÍ
postwerkzeug.test.Client.post"
Any*^
selfT
&werkzeug.test.Client[werkzeug.test._R]
werkzeug.test._R"werkzeug.test.Client*
args
Any*,
as_tuple
builtins.bool"builtins.bool*
kw
Any0:overloadX"35"36"37"38"39"3102»
headwerkzeug.test.Client.headÜ
headwerkzeug.test.Client.head"Ü
BTuple[TypeAlias[builtins.dict[builtins.str,Any]],werkzeug.test._R]ß
*TypeAlias[builtins.dict[builtins.str,Any]]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict"_typeshed.wsgi.WSGIEnvironment
werkzeug.test._R*^
selfT
&werkzeug.test.Client[werkzeug.test._R]
werkzeug.test._R"werkzeug.test.Client*
args
Any*H
as_tuple:
Literal[builtins.bool]	
builtins.bool"builtins.bool*
kw
Any0:overloadXï
headwerkzeug.test.Client.head"
werkzeug.test._R*^
selfT
&werkzeug.test.Client[werkzeug.test._R]
werkzeug.test._R"werkzeug.test.Client*
args
Any*J
as_tuple:
Literal[builtins.bool]	
builtins.bool"builtins.bool *
kw
Any0:overloadXÍ
headwerkzeug.test.Client.head"
Any*^
selfT
&werkzeug.test.Client[werkzeug.test._R]
werkzeug.test._R"werkzeug.test.Client*
args
Any*,
as_tuple
builtins.bool"builtins.bool*
kw
Any0:overloadX"35"36"37"38"39"3102¿
putwerkzeug.test.Client.putÑ
putwerkzeug.test.Client.put"Ü
BTuple[TypeAlias[builtins.dict[builtins.str,Any]],werkzeug.test._R]ß
*TypeAlias[builtins.dict[builtins.str,Any]]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict"_typeshed.wsgi.WSGIEnvironment
werkzeug.test._R*^
selfT
&werkzeug.test.Client[werkzeug.test._R]
werkzeug.test._R"werkzeug.test.Client*
args
Any*H
as_tuple:
Literal[builtins.bool]	
builtins.bool"builtins.bool*
kw
Any0:overloadXì
putwerkzeug.test.Client.put"
werkzeug.test._R*^
selfT
&werkzeug.test.Client[werkzeug.test._R]
werkzeug.test._R"werkzeug.test.Client*
args
Any*J
as_tuple:
Literal[builtins.bool]	
builtins.bool"builtins.bool *
kw
Any0:overloadXË
putwerkzeug.test.Client.put"
Any*^
selfT
&werkzeug.test.Client[werkzeug.test._R]
werkzeug.test._R"werkzeug.test.Client*
args
Any*,
as_tuple
builtins.bool"builtins.bool*
kw
Any0:overloadX"35"36"37"38"39"3102ÿ
deletewerkzeug.test.Client.deleteä
deletewerkzeug.test.Client.delete"Ü
BTuple[TypeAlias[builtins.dict[builtins.str,Any]],werkzeug.test._R]ß
*TypeAlias[builtins.dict[builtins.str,Any]]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict"_typeshed.wsgi.WSGIEnvironment
werkzeug.test._R*^
selfT
&werkzeug.test.Client[werkzeug.test._R]
werkzeug.test._R"werkzeug.test.Client*
args
Any*H
as_tuple:
Literal[builtins.bool]	
builtins.bool"builtins.bool*
kw
Any0:overloadXô
deletewerkzeug.test.Client.delete"
werkzeug.test._R*^
selfT
&werkzeug.test.Client[werkzeug.test._R]
werkzeug.test._R"werkzeug.test.Client*
args
Any*J
as_tuple:
Literal[builtins.bool]	
builtins.bool"builtins.bool *
kw
Any0:overloadXÓ
deletewerkzeug.test.Client.delete"
Any*^
selfT
&werkzeug.test.Client[werkzeug.test._R]
werkzeug.test._R"werkzeug.test.Client*
args
Any*,
as_tuple
builtins.bool"builtins.bool*
kw
Any0:overloadX"35"36"37"38"39"3102‡
optionswerkzeug.test.Client.optionså
optionswerkzeug.test.Client.options"Ü
BTuple[TypeAlias[builtins.dict[builtins.str,Any]],werkzeug.test._R]ß
*TypeAlias[builtins.dict[builtins.str,Any]]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict"_typeshed.wsgi.WSGIEnvironment
werkzeug.test._R*^
selfT
&werkzeug.test.Client[werkzeug.test._R]
werkzeug.test._R"werkzeug.test.Client*
args
Any*H
as_tuple:
Literal[builtins.bool]	
builtins.bool"builtins.bool*
kw
Any0:overloadXõ
optionswerkzeug.test.Client.options"
werkzeug.test._R*^
selfT
&werkzeug.test.Client[werkzeug.test._R]
werkzeug.test._R"werkzeug.test.Client*
args
Any*J
as_tuple:
Literal[builtins.bool]	
builtins.bool"builtins.bool *
kw
Any0:overloadX
optionswerkzeug.test.Client.options"
Any*^
selfT
&werkzeug.test.Client[werkzeug.test._R]
werkzeug.test._R"werkzeug.test.Client*
args
Any*,
as_tuple
builtins.bool"builtins.bool*
kw
Any0:overloadX"35"36"37"38"39"3102–
tracewerkzeug.test.Client.traceà
tracewerkzeug.test.Client.trace"Ü
BTuple[TypeAlias[builtins.dict[builtins.str,Any]],werkzeug.test._R]ß
*TypeAlias[builtins.dict[builtins.str,Any]]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict"_typeshed.wsgi.WSGIEnvironment
werkzeug.test._R*^
selfT
&werkzeug.test.Client[werkzeug.test._R]
werkzeug.test._R"werkzeug.test.Client*
args
Any*H
as_tuple:
Literal[builtins.bool]	
builtins.bool"builtins.bool*
kw
Any0:overloadXó
tracewerkzeug.test.Client.trace"
werkzeug.test._R*^
selfT
&werkzeug.test.Client[werkzeug.test._R]
werkzeug.test._R"werkzeug.test.Client*
args
Any*J
as_tuple:
Literal[builtins.bool]	
builtins.bool"builtins.bool *
kw
Any0:overloadXÏ
tracewerkzeug.test.Client.trace"
Any*^
selfT
&werkzeug.test.Client[werkzeug.test._R]
werkzeug.test._R"werkzeug.test.Client*
args
Any*,
as_tuple
builtins.bool"builtins.bool*
kw
Any0:overloadX"35"36"37"38"39"310Pj35j36j37j38j39j310rQ
application werkzeug.test.Client.application
Any*35*36*37*38*39*310r∂
response_wrapper%werkzeug.test.Client.response_wrapperb
"Union[Type[werkzeug.test._R],None]0
Type[werkzeug.test._R]
werkzeug.test._R
None*35*36*37*38*39*310rO

cookie_jarwerkzeug.test.Client.cookie_jar
Any*35*36*37*38*39*310rm
allow_subdomain_redirects.werkzeug.test.Client.allow_subdomain_redirects
Any*35*36*37*38*39*310Ì!
EnvironBuilderwerkzeug.test.EnvironBuilder"builtins.object*Ö
__init__%werkzeug.test.EnvironBuilder.__init__"
None*F
self<
werkzeug.test.EnvironBuilder"werkzeug.test.EnvironBuilder*(
path
builtins.str"builtins.str *6
base_url&
Union[Any,None]
Any
None *:
query_string&
Union[Any,None]
Any
None **
method
builtins.str"builtins.str *:
input_stream&
Union[Any,None]
Any
None *:
content_type&
Union[Any,None]
Any
None *<
content_length&
Union[Any,None]
Any
None *;
errors_stream&
Union[Any,None]
Any
None *1
multithread
builtins.bool"builtins.bool *2
multiprocess
builtins.bool"builtins.bool *.
run_once
builtins.bool"builtins.bool *5
headers&
Union[Any,None]
Any
None *2
data&
Union[Any,None]
Any
None *:
environ_base&
Union[Any,None]
Any
None *?
environ_overrides&
Union[Any,None]
Any
None *+
charset
builtins.str"builtins.str z35z36z37z38z39z310*ƒ
server_name(werkzeug.test.EnvironBuilder.server_name"
builtins.str"builtins.str*F
self<
werkzeug.test.EnvironBuilder"werkzeug.test.EnvironBuilder0:property`z35z36z37z38z39z310*ƒ
server_port(werkzeug.test.EnvironBuilder.server_port"
builtins.int"builtins.int*F
self<
werkzeug.test.EnvironBuilder"werkzeug.test.EnvironBuilder0:property`z35z36z37z38z39z310*ò
__del__$werkzeug.test.EnvironBuilder.__del__"
None*D
self<
werkzeug.test.EnvironBuilder"werkzeug.test.EnvironBuilderz35z36z37z38z39z310*ñ
close"werkzeug.test.EnvironBuilder.close"
None*F
self<
werkzeug.test.EnvironBuilder"werkzeug.test.EnvironBuilderz35z36z37z38z39z310*¬
get_environ(werkzeug.test.EnvironBuilder.get_environ"ß
*TypeAlias[builtins.dict[builtins.str,Any]]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict"_typeshed.wsgi.WSGIEnvironment*F
self<
werkzeug.test.EnvironBuilder"werkzeug.test.EnvironBuilderz35z36z37z38z39z310*‘
get_request(werkzeug.test.EnvironBuilder.get_request"
Any*F
self<
werkzeug.test.EnvironBuilder"werkzeug.test.EnvironBuilder*1
cls&
Union[Any,None]
Any
None z35z36z37z38z39z310j35j36j37j38j39j310ra
server_protocol,werkzeug.test.EnvironBuilder.server_protocol
Any*35*36*37*38*39*310r[
wsgi_version)werkzeug.test.EnvironBuilder.wsgi_version
Any*35*36*37*38*39*310r]
request_class*werkzeug.test.EnvironBuilder.request_class
Any*35*36*37*38*39*310rf
charset$werkzeug.test.EnvironBuilder.charset
builtins.str"builtins.str*35*36*37*38*39*310rK
path!werkzeug.test.EnvironBuilder.path
Any*35*36*37*38*39*310rS
base_url%werkzeug.test.EnvironBuilder.base_url
Any*35*36*37*38*39*310r[
query_string)werkzeug.test.EnvironBuilder.query_string
Any*35*36*37*38*39*310rK
args!werkzeug.test.EnvironBuilder.args
Any*35*36*37*38*39*310rO
method#werkzeug.test.EnvironBuilder.method
Any*35*36*37*38*39*310rQ
headers$werkzeug.test.EnvironBuilder.headers
Any*35*36*37*38*39*310r[
content_type)werkzeug.test.EnvironBuilder.content_type
Any*35*36*37*38*39*310r]
errors_stream*werkzeug.test.EnvironBuilder.errors_stream
Any*35*36*37*38*39*310rY
multithread(werkzeug.test.EnvironBuilder.multithread
Any*35*36*37*38*39*310r[
multiprocess)werkzeug.test.EnvironBuilder.multiprocess
Any*35*36*37*38*39*310rS
run_once%werkzeug.test.EnvironBuilder.run_once
Any*35*36*37*38*39*310r[
environ_base)werkzeug.test.EnvironBuilder.environ_base
Any*35*36*37*38*39*310re
environ_overrides.werkzeug.test.EnvironBuilder.environ_overrides
Any*35*36*37*38*39*310r[
input_stream)werkzeug.test.EnvironBuilder.input_stream
Any*35*36*37*38*39*310r_
content_length+werkzeug.test.EnvironBuilder.content_length
Any*35*36*37*38*39*310rO
closed#werkzeug.test.EnvironBuilder.closed
Any*35*36*37*38*39*310rK
form!werkzeug.test.EnvironBuilder.form
Any*35*36*37*38*39*310rM
files"werkzeug.test.EnvironBuilder.files
Any*35*36*37*38*39*310Ÿ
FlaskClientflask.testing.FlaskClient"werkzeug.test.Client*„
__init__"flask.testing.FlaskClient.__init__"
None*h
self^
+flask.testing.FlaskClient[flask.testing._R]
flask.testing._R"flask.testing.FlaskClient*
args
Any*
kwargs
Anyz35z36z37z38z39z310*˘
session_transaction-flask.testing.FlaskClient.session_transaction"
None*h
self^
+flask.testing.FlaskClient[flask.testing._R]
flask.testing._R"flask.testing.FlaskClient*
args
Any*
kwargs
Anyz35z36z37z38z39z310*S
	__enter__#flask.testing.FlaskClient.__enter__*
selfz35z36z37z38z39z310*Û
__exit__"flask.testing.FlaskClient.__exit__"
None*f
self^
+flask.testing.FlaskClient[flask.testing._R]
flask.testing._R"flask.testing.FlaskClient*
exc_type
Any*
	exc_value
Any*
tb
Anyz35z36z37z38z39z310Pj35j36j37j38j39j310rw
preserve_context*flask.testing.FlaskClient.preserve_context
builtins.bool"builtins.bool*35*36*37*38*39*310rX
environ_base&flask.testing.FlaskClient.environ_base
Any*35*36*37*38*39*310‡

FlaskCliRunnerflask.testing.FlaskCliRunner"click.testing.CliRunner*√
__init__%flask.testing.FlaskCliRunner.__init__"
None*F
self<
flask.testing.FlaskCliRunner"flask.testing.FlaskCliRunner*
app
Any*
kwargs
Anyz35z36z37z38z39z310*Ï
invoke#flask.testing.FlaskCliRunner.invoke",
click.testing.Result"click.testing.Result*F
self<
flask.testing.FlaskCliRunner"flask.testing.FlaskCliRunner*m
clib
"Union[click.core.BaseCommand,None]0
click.core.BaseCommand"click.core.BaseCommand
None *ø
args≤
6Union[builtins.str,typing.Iterable[builtins.str],None]
builtins.str"builtins.strN
typing.Iterable[builtins.str]
builtins.str"builtins.str"typing.Iterable
None *∏
input™
6Union[builtins.bytes,typing.IO[Any],builtins.str,None] 
builtins.bytes"builtins.bytes$
typing.IO[Any]
Any"	typing.IO
builtins.str"builtins.str
None *»
envº
5Union[typing.Mapping[builtins.str,builtins.str],None]w
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping
None *6
catch_exceptions
builtins.bool"builtins.bool *+
color
builtins.bool"builtins.bool *
extra
Anyz35z36z37z38z39z310j35j36j37j38j39j310rI
app flask.testing.FlaskCliRunner.app
Any*35*36*37*38*39*310º
EnvironBuilderflask.testing.EnvironBuilder"werkzeug.test.EnvironBuilder*´
__init__%flask.testing.EnvironBuilder.__init__"
None*F
self<
flask.testing.EnvironBuilder"flask.testing.EnvironBuilder*
app
Any*(
path
builtins.str"builtins.str *6
base_url&
Union[Any,None]
Any
None *7
	subdomain&
Union[Any,None]
Any
None *8

url_scheme&
Union[Any,None]
Any
None *
args
Any*
kwargs
Anyz35z36z37z38z39z310*€

json_dumps'flask.testing.EnvironBuilder.json_dumps"
builtins.str"builtins.str*F
self<
flask.testing.EnvironBuilder"flask.testing.EnvironBuilder*
obj
Any*
kwargs
Anyz35z36z37z38z39z310j35j36j37j38j39j310rI
app flask.testing.EnvironBuilder.app
Any*35*36*37*38*39*310ı
make_test_environ_builder'flask.testing.make_test_environ_builder"
Any*
app
Any*(
path
builtins.str"builtins.str *6
base_url&
Union[Any,None]
Any
None *7
	subdomain&
Union[Any,None]
Any
None *8

url_scheme&
Union[Any,None]
Any
None *
args
Any*
kwargs
Anyz35z36z37z38z39z310*N
Any
typing.Any"
builtins.object"builtins.object*35*36*37*38*39*310*`
Optionaltyping.Optional*
typing._SpecialForm"typing._SpecialForm*35*36*37*38*39*310*Z
Uniontyping.Union*
typing._SpecialForm"typing._SpecialForm*35*36*37*38*39*310