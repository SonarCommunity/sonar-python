
'torch.ao.nn.quantized.modules.batchnormÙ

_BatchNorm2torch.ao.nn.quantized.modules.batchnorm._BatchNorm"%torch.nn.modules.batchnorm._BatchNorm*º
__init__;torch.ao.nn.quantized.modules.batchnorm._BatchNorm.__init__"
None*r
selfh
2torch.ao.nn.quantized.modules.batchnorm._BatchNorm"2torch.ao.nn.quantized.modules.batchnorm._BatchNorm*
num_features
Any*
eps
Any *
momentum
Any *
device
Any *
dtype
Any *‘

from_float=torch.ao.nn.quantized.modules.batchnorm._BatchNorm.from_float*
cls*
mod* 
use_precomputed_fake_quant 0:staticmethodh*ž
from_referenceAtorch.ao.nn.quantized.modules.batchnorm._BatchNorm.from_reference*
cls*
bn*
output_scale*
output_zero_point0:classmethodp×	
BatchNorm2d3torch.ao.nn.quantized.modules.batchnorm.BatchNorm2d"2torch.ao.nn.quantized.modules.batchnorm._BatchNorm*½
__init__<torch.ao.nn.quantized.modules.batchnorm.BatchNorm2d.__init__"
None*t
selfj
3torch.ao.nn.quantized.modules.batchnorm.BatchNorm2d"3torch.ao.nn.quantized.modules.batchnorm.BatchNorm2d*
num_features
Any*
eps
Any *
momentum
Any *
device
Any *
dtype
Any *T
	_get_name=torch.ao.nn.quantized.modules.batchnorm.BatchNorm2d._get_name*
self*m
_check_input_dimDtorch.ao.nn.quantized.modules.batchnorm.BatchNorm2d._check_input_dim*
self*	
input*£
forward;torch.ao.nn.quantized.modules.batchnorm.BatchNorm2d.forward",
torch._tensor.Tensor"torch._tensor.Tensor*t
selfj
3torch.ao.nn.quantized.modules.batchnorm.BatchNorm2d"3torch.ao.nn.quantized.modules.batchnorm.BatchNorm2d*7
input,
torch._tensor.Tensor"torch._tensor.Tensor*‘

from_float>torch.ao.nn.quantized.modules.batchnorm.BatchNorm2d.from_float*
cls*
mod* 
use_precomputed_fake_quant 0:classmethodprŸ
_NNI_BN_RELU_MODULEGtorch.ao.nn.quantized.modules.batchnorm.BatchNorm2d._NNI_BN_RELU_MODULE?
CallableType[builtins.type]
builtins.type"builtins.type´
BatchNorm3d3torch.ao.nn.quantized.modules.batchnorm.BatchNorm3d"2torch.ao.nn.quantized.modules.batchnorm._BatchNorm*š
__init__<torch.ao.nn.quantized.modules.batchnorm.BatchNorm3d.__init__*
self*
num_features*	
eps *
momentum *
device *
dtype *T
	_get_name=torch.ao.nn.quantized.modules.batchnorm.BatchNorm3d._get_name*
self*m
_check_input_dimDtorch.ao.nn.quantized.modules.batchnorm.BatchNorm3d._check_input_dim*
self*	
input*£
forward;torch.ao.nn.quantized.modules.batchnorm.BatchNorm3d.forward",
torch._tensor.Tensor"torch._tensor.Tensor*t
selfj
3torch.ao.nn.quantized.modules.batchnorm.BatchNorm3d"3torch.ao.nn.quantized.modules.batchnorm.BatchNorm3d*7
input,
torch._tensor.Tensor"torch._tensor.Tensor*‘

from_float>torch.ao.nn.quantized.modules.batchnorm.BatchNorm3d.from_float*
cls*
mod* 
use_precomputed_fake_quant 0:classmethodprŸ
_NNI_BN_RELU_MODULEGtorch.ao.nn.quantized.modules.batchnorm.BatchNorm3d._NNI_BN_RELU_MODULE?
CallableType[builtins.type]
builtins.type"builtins.type*£
__annotations__7torch.ao.nn.quantized.modules.batchnorm.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*
nnitorch.ao.nn.intrinsic *†
__all__/torch.ao.nn.quantized.modules.batchnorm.__all__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list