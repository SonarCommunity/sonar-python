
torch.jit._dataclass_impls]
_get_fake_filename-torch.jit._dataclass_impls._get_fake_filename*
cls*
method_nameÉ

compose_fn%torch.jit._dataclass_impls.compose_fn"Ð
mTypeAlias[Tuple[_ast.Module,torch._sources.SourceContext,builtins.str,Union[builtins.str,None],builtins.int]]Â
bTuple[_ast.Module,torch._sources.SourceContext,builtins.str,Union[builtins.str,None],builtins.int]
_ast.Module"_ast.Module<
torch._sources.SourceContext"torch._sources.SourceContext
builtins.str"builtins.strD
Union[builtins.str,None]
builtins.str"builtins.str
None
builtins.int"builtins.int"torch._sources.ParsedDef*
cls
Any*&
name
builtins.str"builtins.str*Z

body_linesJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*+
	signature
builtins.str"builtins.str¨
synthesize__init__-torch.jit._dataclass_impls.synthesize__init__"Ð
mTypeAlias[Tuple[_ast.Module,torch._sources.SourceContext,builtins.str,Union[builtins.str,None],builtins.int]]Â
bTuple[_ast.Module,torch._sources.SourceContext,builtins.str,Union[builtins.str,None],builtins.int]
_ast.Module"_ast.Module<
torch._sources.SourceContext"torch._sources.SourceContext
builtins.str"builtins.strD
Union[builtins.str,None]
builtins.str"builtins.str
None
builtins.int"builtins.int"torch._sources.ParsedDef*
cls
Any¨
synthesize__repr__-torch.jit._dataclass_impls.synthesize__repr__"Ð
mTypeAlias[Tuple[_ast.Module,torch._sources.SourceContext,builtins.str,Union[builtins.str,None],builtins.int]]Â
bTuple[_ast.Module,torch._sources.SourceContext,builtins.str,Union[builtins.str,None],builtins.int]
_ast.Module"_ast.Module<
torch._sources.SourceContext"torch._sources.SourceContext
builtins.str"builtins.strD
Union[builtins.str,None]
builtins.str"builtins.str
None
builtins.int"builtins.int"torch._sources.ParsedDef*
cls
Any¨
synthesize__hash__-torch.jit._dataclass_impls.synthesize__hash__"Ð
mTypeAlias[Tuple[_ast.Module,torch._sources.SourceContext,builtins.str,Union[builtins.str,None],builtins.int]]Â
bTuple[_ast.Module,torch._sources.SourceContext,builtins.str,Union[builtins.str,None],builtins.int]
_ast.Module"_ast.Module<
torch._sources.SourceContext"torch._sources.SourceContext
builtins.str"builtins.strD
Union[builtins.str,None]
builtins.str"builtins.str
None
builtins.int"builtins.int"torch._sources.ParsedDef*
cls
Anyþ
synthesize_equality.torch.jit._dataclass_impls.synthesize_equality"Ð
mTypeAlias[Tuple[_ast.Module,torch._sources.SourceContext,builtins.str,Union[builtins.str,None],builtins.int]]Â
bTuple[_ast.Module,torch._sources.SourceContext,builtins.str,Union[builtins.str,None],builtins.int]
_ast.Module"_ast.Module<
torch._sources.SourceContext"torch._sources.SourceContext
builtins.str"builtins.strD
Union[builtins.str,None]
builtins.str"builtins.str
None
builtins.int"builtins.int"torch._sources.ParsedDef*
cls
Any*&
name
builtins.str"builtins.str**
converse
builtins.str"builtins.strª
synthesize_inequality0torch.jit._dataclass_impls.synthesize_inequality"Ð
mTypeAlias[Tuple[_ast.Module,torch._sources.SourceContext,builtins.str,Union[builtins.str,None],builtins.int]]Â
bTuple[_ast.Module,torch._sources.SourceContext,builtins.str,Union[builtins.str,None],builtins.int]
_ast.Module"_ast.Module<
torch._sources.SourceContext"torch._sources.SourceContext
builtins.str"builtins.strD
Union[builtins.str,None]
builtins.str"builtins.str
None
builtins.int"builtins.int"torch._sources.ParsedDef*
cls
Any*&
name
builtins.str"builtins.str*$
op
builtins.str"builtins.str*,
allow_eq
builtins.bool"builtins.boolŽ
synthesize_comparison0torch.jit._dataclass_impls.synthesize_comparison"Ð
mTypeAlias[Tuple[_ast.Module,torch._sources.SourceContext,builtins.str,Union[builtins.str,None],builtins.int]]Â
bTuple[_ast.Module,torch._sources.SourceContext,builtins.str,Union[builtins.str,None],builtins.int]
_ast.Module"_ast.Module<
torch._sources.SourceContext"torch._sources.SourceContext
builtins.str"builtins.strD
Union[builtins.str,None]
builtins.str"builtins.str
None
builtins.int"builtins.int"torch._sources.ParsedDef*
cls
Any*&
name
builtins.str"builtins.str*,
allow_eq
builtins.bool"builtins.bool*1
raise_on_none
builtins.bool"builtins.bool*U
innerJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*–
__annotations__*torch.jit._dataclass_impls.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*‡
DATACLASS_MAGIC_METHODS2torch.jit._dataclass_impls.DATACLASS_MAGIC_METHODS·
;builtins.dict[builtins.str,CallableType[builtins.function]]
builtins.str"builtins.strK
CallableType[builtins.function]&
builtins.function"builtins.function"builtins.dict