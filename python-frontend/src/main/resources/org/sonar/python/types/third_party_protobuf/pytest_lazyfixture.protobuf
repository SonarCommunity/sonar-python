
pytest_lazyfixtureÍ
LazyFixturepytest_lazyfixture.LazyFixture"builtins.object*Æ
__init__'pytest_lazyfixture.LazyFixture.__init__"
None*J
self@
pytest_lazyfixture.LazyFixture"pytest_lazyfixture.LazyFixture*&
name
builtins.str"builtins.strz36z37z38z39z310*Î
__eq__%pytest_lazyfixture.LazyFixture.__eq__"
builtins.bool"builtins.bool*B@
pytest_lazyfixture.LazyFixture"pytest_lazyfixture.LazyFixture*$"
builtins.object"builtins.objectz36z37z38z39z310j36j37j38j39j310r^
name#pytest_lazyfixture.LazyFixture.name
builtins.str"builtins.str*36*37*38*39*310—
is_lazy_fixture"pytest_lazyfixture.is_lazy_fixture"
builtins.bool"builtins.bool*+
val"
builtins.object"builtins.objectz36z37z38z39z310"Õ
lazy_fixturepytest_lazyfixture.lazy_fixture¨
lazy_fixturepytest_lazyfixture.lazy_fixture"@
pytest_lazyfixture.LazyFixture"pytest_lazyfixture.LazyFixture*'
names
builtins.str"builtins.str0:overloadXã
lazy_fixturepytest_lazyfixture.lazy_fixture"È
8Union[builtins.list[pytest_lazyfixture.LazyFixture],Any]€
-builtins.list[pytest_lazyfixture.LazyFixture]@
pytest_lazyfixture.LazyFixture"pytest_lazyfixture.LazyFixture"builtins.list
Any*Y
namesN
typing.Iterable[builtins.str]
builtins.str"builtins.str"typing.Iterable0:overloadX"36"37"38"39"310*£
__annotations__"pytest_lazyfixture.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*36*37*38*39*310