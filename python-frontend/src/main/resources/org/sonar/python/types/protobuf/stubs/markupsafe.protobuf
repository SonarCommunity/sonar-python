

markupsafeØ
Iterabletyping.Iterable"builtins.object*·
__iter__typing.Iterable.__iter__"B
typing.Iterator[typing._T_co]
typing._T_co"typing.Iterator*J
selfB
typing.Iterable[typing._T_co]
typing._T_co"typing.Iterable0:abstractmethod@z35z36z37z38z39z3108PXj35j36j37j38j39j310í
Mappingtyping.Mapping"typing.Collection*Â
__getitem__typing.Mapping.__getitem__"
typing._VT_co*e
self]
(typing.Mapping[typing._KT,typing._VT_co]

typing._KT
typing._VT_co"typing.Mapping*
k

typing._KT0:abstractmethod@z35z36z37z38z39z310*≥
itemstyping.Mapping.items"ë
3typing.AbstractSet[Tuple[typing._KT,typing._VT_co]]F
Tuple[typing._KT,typing._VT_co]

typing._KT
typing._VT_co"typing.AbstractSet*g
self]
(typing.Mapping[typing._KT,typing._VT_co]

typing._KT
typing._VT_co"typing.Mappingz35z36z37z38z39z310*„
keystyping.Mapping.keys"D
typing.AbstractSet[typing._KT]

typing._KT"typing.AbstractSet*g
self]
(typing.Mapping[typing._KT,typing._VT_co]

typing._KT
typing._VT_co"typing.Mappingz35z36z37z38z39z310*Î
valuestyping.Mapping.values"H
 typing.ValuesView[typing._VT_co]
typing._VT_co"typing.ValuesView*g
self]
(typing.Mapping[typing._KT,typing._VT_co]

typing._KT
typing._VT_co"typing.Mappingz35z36z37z38z39z310*Ù
__contains__typing.Mapping.__contains__"
builtins.bool"builtins.bool*e
self]
(typing.Mapping[typing._KT,typing._VT_co]

typing._KT
typing._VT_co"typing.Mapping*'
o"
builtins.object"builtins.objectz35z36z37z38z39z3102ﬂ
gettyping.Mapping.getÂ
gettyping.Mapping.get":
Union[typing._VT_co,None]
typing._VT_co
None*g
self]
(typing.Mapping[typing._KT,typing._VT_co]

typing._KT
typing._VT_co"typing.Mapping*
key

typing._KT0:overloadX¬
gettyping.Mapping.get"D
Union[typing._VT_co,typing._T]
typing._VT_co
	typing._T*g
self]
(typing.Mapping[typing._KT,typing._VT_co]

typing._KT
typing._VT_co"typing.Mapping*
key

typing._KT*Q
defaultD
Union[typing._VT_co,typing._T]
typing._VT_co
	typing._T0:overloadX"35"36"37"38"39"310Pj35j36j37j38j39j310¬
Sequencetyping.Sequence"typing.Collection"typing.Reversible*å
indextyping.Sequence.index"
builtins.int"builtins.int*L
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*
value
Any*)
start
builtins.int"builtins.int *(
stop
builtins.int"builtins.int z35z36z37z38z39z310*∑
counttyping.Sequence.count"
builtins.int"builtins.int*L
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*
value
Anyz35z36z37z38z39z310*⁄
__contains__typing.Sequence.__contains__"
builtins.bool"builtins.bool*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*'
x"
builtins.object"builtins.objectz35z36z37z38z39z310*Õ
__iter__typing.Sequence.__iter__"B
typing.Iterator[typing._T_co]
typing._T_co"typing.Iterator*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequencez35z36z37z38z39z310*’
__reversed__typing.Sequence.__reversed__"B
typing.Iterator[typing._T_co]
typing._T_co"typing.Iterator*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequencez35z36z37z38z39z3102ï
__getitem__typing.Sequence.__getitem__À
__getitem__typing.Sequence.__getitem__"
typing._T_co*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*!
i
builtins.int"builtins.int0:overload:abstractmethod@XÅ
__getitem__typing.Sequence.__getitem__"B
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*%
s 
builtins.slice"builtins.slice0:overload:abstractmethod@X"35"36"37"38"39"310Pj35j36j37j38j39j310∂
SupportsIndextyping_extensions.SupportsIndex"builtins.object*”
	__index__)typing_extensions.SupportsIndex.__index__"
builtins.int"builtins.int*L
selfB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex0:abc.abstractmethod@z35z36z37z38z39z3108@Xj35j36j37j38j39j310§E
Markupmarkupsafe.Markup"builtins.str*ﬂ
__new__markupsafe.Markup.__new__"&
markupsafe.Markup"markupsafe.Markup*L
clsC
Type[markupsafe.Markup]&
markupsafe.Markup"markupsafe.Markup*(
base
builtins.str"builtins.str *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None **
errors
builtins.str"builtins.str z35z36z37z38z39z310*ô
__html__markupsafe.Markup.__html__"&
markupsafe.Markup"markupsafe.Markup*0
self&
markupsafe.Markup"markupsafe.Markupz35z36z37z38z39z310*º
__add__markupsafe.Markup.__add__"&
markupsafe.Markup"markupsafe.Markup*.
self&
markupsafe.Markup"markupsafe.Markup*%
other
builtins.str"builtins.strz35z36z37z38z39z310*æ
__radd__markupsafe.Markup.__radd__"&
markupsafe.Markup"markupsafe.Markup*.
self&
markupsafe.Markup"markupsafe.Markup*%
other
builtins.str"builtins.strz35z36z37z38z39z310*∫
__mul__markupsafe.Markup.__mul__"&
markupsafe.Markup"markupsafe.Markup*.
self&
markupsafe.Markup"markupsafe.Markup*#
num
builtins.int"builtins.intz35z36z37z38z39z310*º
__rmul__markupsafe.Markup.__rmul__"&
markupsafe.Markup"markupsafe.Markup*.
self&
markupsafe.Markup"markupsafe.Markup*#
num
builtins.int"builtins.intz35z36z37z38z39z310*®
__mod__markupsafe.Markup.__mod__"&
markupsafe.Markup"markupsafe.Markup*.
self&
markupsafe.Markup"markupsafe.Markup*
args
Anyz35z36z37z38z39z310*Í
joinmarkupsafe.Markup.join"&
markupsafe.Markup"markupsafe.Markup*0
self&
markupsafe.Markup"markupsafe.Markup*W
seqN
typing.Iterable[builtins.str]
builtins.str"builtins.str"typing.Iterablez35z36z37z38z39z310*Î
splitmarkupsafe.Markup.split"Y
 builtins.list[markupsafe.Markup]&
markupsafe.Markup"markupsafe.Markup"builtins.list*0
self&
markupsafe.Markup"markupsafe.Markup*O
sepD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
maxsplitB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex z35z36z37z38z39z310*Ì
rsplitmarkupsafe.Markup.rsplit"Y
 builtins.list[markupsafe.Markup]&
markupsafe.Markup"markupsafe.Markup"builtins.list*0
self&
markupsafe.Markup"markupsafe.Markup*O
sepD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
maxsplitB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex z35z36z37z38z39z310*Ä

splitlinesmarkupsafe.Markup.splitlines"Y
 builtins.list[markupsafe.Markup]&
markupsafe.Markup"markupsafe.Markup"builtins.list*0
self&
markupsafe.Markup"markupsafe.Markup*.
keepends
builtins.bool"builtins.bool z35z36z37z38z39z310*è
unescapemarkupsafe.Markup.unescape"
builtins.str"builtins.str*0
self&
markupsafe.Markup"markupsafe.Markupz35z36z37z38z39z310*ë
	striptagsmarkupsafe.Markup.striptags"
builtins.str"builtins.str*0
self&
markupsafe.Markup"markupsafe.Markupz35z36z37z38z39z310*Á
escapemarkupsafe.Markup.escape"&
markupsafe.Markup"markupsafe.Markup*L
clsC
Type[markupsafe.Markup]&
markupsafe.Markup"markupsafe.Markup*#
s
builtins.str"builtins.str0:classmethodpz35z36z37z38z39z310*’
	partitionmarkupsafe.Markup.partition"∏
<Tuple[markupsafe.Markup,markupsafe.Markup,markupsafe.Markup]&
markupsafe.Markup"markupsafe.Markup&
markupsafe.Markup"markupsafe.Markup&
markupsafe.Markup"markupsafe.Markup*0
self&
markupsafe.Markup"markupsafe.Markup*%
sep
builtins.str"builtins.strz35z36z37z38z39z310*◊

rpartitionmarkupsafe.Markup.rpartition"∏
<Tuple[markupsafe.Markup,markupsafe.Markup,markupsafe.Markup]&
markupsafe.Markup"markupsafe.Markup&
markupsafe.Markup"markupsafe.Markup&
markupsafe.Markup"markupsafe.Markup*0
self&
markupsafe.Markup"markupsafe.Markup*%
sep
builtins.str"builtins.strz35z36z37z38z39z310*Ω
formatmarkupsafe.Markup.format"&
markupsafe.Markup"markupsafe.Markup*0
self&
markupsafe.Markup"markupsafe.Markup*
args
Any*
kwargs
Anyz35z36z37z38z39z310*÷
__html_format__!markupsafe.Markup.__html_format__"&
markupsafe.Markup"markupsafe.Markup*0
self&
markupsafe.Markup"markupsafe.Markup*-
format_spec
builtins.str"builtins.strz35z36z37z38z39z310*Ú
__getslice__markupsafe.Markup.__getslice__"&
markupsafe.Markup"markupsafe.Markup*0
self&
markupsafe.Markup"markupsafe.Markup*'
start
builtins.int"builtins.int*&
stop
builtins.int"builtins.intz35z36z37z38z39z310*ä
__getitem__markupsafe.Markup.__getitem__"&
markupsafe.Markup"markupsafe.Markup*.
self&
markupsafe.Markup"markupsafe.Markup*k
if
"Union[builtins.int,builtins.slice]
builtins.int"builtins.int 
builtins.slice"builtins.slicez35z36z37z38z39z310*ù

capitalizemarkupsafe.Markup.capitalize"&
markupsafe.Markup"markupsafe.Markup*0
self&
markupsafe.Markup"markupsafe.Markupz35z36z37z38z39z310*ì
titlemarkupsafe.Markup.title"&
markupsafe.Markup"markupsafe.Markup*0
self&
markupsafe.Markup"markupsafe.Markupz35z36z37z38z39z310*ì
lowermarkupsafe.Markup.lower"&
markupsafe.Markup"markupsafe.Markup*0
self&
markupsafe.Markup"markupsafe.Markupz35z36z37z38z39z310*ì
uppermarkupsafe.Markup.upper"&
markupsafe.Markup"markupsafe.Markup*0
self&
markupsafe.Markup"markupsafe.Markupz35z36z37z38z39z310*ô
swapcasemarkupsafe.Markup.swapcase"&
markupsafe.Markup"markupsafe.Markup*0
self&
markupsafe.Markup"markupsafe.Markupz35z36z37z38z39z310*∂
replacemarkupsafe.Markup.replace"&
markupsafe.Markup"markupsafe.Markup*0
self&
markupsafe.Markup"markupsafe.Markup*%
old
builtins.str"builtins.str*%
new
builtins.str"builtins.str*O
countB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex z35z36z37z38z39z310*ê
ljustmarkupsafe.Markup.ljust"&
markupsafe.Markup"markupsafe.Markup*0
self&
markupsafe.Markup"markupsafe.Markup*M
widthB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex*,
fillchar
builtins.str"builtins.str z35z36z37z38z39z310*ê
rjustmarkupsafe.Markup.rjust"&
markupsafe.Markup"markupsafe.Markup*0
self&
markupsafe.Markup"markupsafe.Markup*M
widthB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex*,
fillchar
builtins.str"builtins.str z35z36z37z38z39z310*Ë
lstripmarkupsafe.Markup.lstrip"&
markupsafe.Markup"markupsafe.Markup*0
self&
markupsafe.Markup"markupsafe.Markup*Q
charsD
Union[builtins.str,None]
builtins.str"builtins.str
None z35z36z37z38z39z310*Ë
rstripmarkupsafe.Markup.rstrip"&
markupsafe.Markup"markupsafe.Markup*0
self&
markupsafe.Markup"markupsafe.Markup*Q
charsD
Union[builtins.str,None]
builtins.str"builtins.str
None z35z36z37z38z39z310*Ê
stripmarkupsafe.Markup.strip"&
markupsafe.Markup"markupsafe.Markup*0
self&
markupsafe.Markup"markupsafe.Markup*Q
charsD
Union[builtins.str,None]
builtins.str"builtins.str
None z35z36z37z38z39z310*í
centermarkupsafe.Markup.center"&
markupsafe.Markup"markupsafe.Markup*0
self&
markupsafe.Markup"markupsafe.Markup*M
widthB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex*,
fillchar
builtins.str"builtins.str z35z36z37z38z39z310*‚
zfillmarkupsafe.Markup.zfill"&
markupsafe.Markup"markupsafe.Markup*0
self&
markupsafe.Markup"markupsafe.Markup*M
widthB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndexz35z36z37z38z39z310*“
	translatemarkupsafe.Markup.translate"&
markupsafe.Markup"markupsafe.Markup*0
self&
markupsafe.Markup"markupsafe.Markup*¥
table®
ÄUnion[typing.Mapping[builtins.int,Union[builtins.int,builtins.str,None]],typing.Sequence[Union[builtins.int,builtins.str,None]]]„
Btyping.Mapping[builtins.int,Union[builtins.int,builtins.str,None]]
builtins.int"builtins.into
%Union[builtins.int,builtins.str,None]
builtins.int"builtins.int
builtins.str"builtins.str
None"typing.Mapping∫
6typing.Sequence[Union[builtins.int,builtins.str,None]]o
%Union[builtins.int,builtins.str,None]
builtins.int"builtins.int
builtins.str"builtins.str
None"typing.Sequencez35z36z37z38z39z310*Ω

expandtabsmarkupsafe.Markup.expandtabs"&
markupsafe.Markup"markupsafe.Markup*0
self&
markupsafe.Markup"markupsafe.Markup*+
tabsize
builtins.int"builtins.int z35z36z37*‰

expandtabsmarkupsafe.Markup.expandtabs"&
markupsafe.Markup"markupsafe.Markup*0
self&
markupsafe.Markup"markupsafe.Markup*Q
tabsizeB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex z38z39z310j35j36j37j38j39j310ı
EscapeFormattermarkupsafe.EscapeFormatter"string.Formatter*Ô
__init__#markupsafe.EscapeFormatter.__init__"
None*B
self8
markupsafe.EscapeFormatter"markupsafe.EscapeFormatter*W
escapeK
CallableType[builtins.function]&
builtins.function"builtins.functionz35z36z37z38z39z310*î
format_field'markupsafe.EscapeFormatter.format_field"&
markupsafe.Markup"markupsafe.Markup*B
self8
markupsafe.EscapeFormatter"markupsafe.EscapeFormatter*'
value
builtins.str"builtins.str*-
format_spec
builtins.str"builtins.strz35z36z37z38z39z310j35j36j37j38j39j310rë
escape!markupsafe.EscapeFormatter.escapeK
CallableType[builtins.function]&
builtins.function"builtins.function*35*36*37*38*39*310‹
escapemarkupsafe._native.escape"&
markupsafe.Markup"markupsafe.Markup*v
so
%Union[markupsafe.Markup,builtins.str]&
markupsafe.Markup"markupsafe.Markup
builtins.str"builtins.strz35z36z37z38z39z310˙
escape_silent markupsafe._native.escape_silent"&
markupsafe.Markup"markupsafe.Markup*Ö
s~
*Union[None,markupsafe.Markup,builtins.str]
None&
markupsafe.Markup"markupsafe.Markup
builtins.str"builtins.strz35z36z37z38z39z310ã
soft_unicodemarkupsafe._native.soft_unicode"
builtins.str"builtins.str*#
s
builtins.str"builtins.strz35z36z37z38z39z310*+
stringstring *35*36*37*38*39*310*%
syssys *35*36*37*38*39*310*N
Any
typing.Any"
builtins.object"builtins.object*35*36*37*38*39*310*`
Callabletyping.Callable*
typing._SpecialForm"typing._SpecialForm*35*36*37*38*39*310*`
Optionaltyping.Optional*
typing._SpecialForm"typing._SpecialForm*35*36*37*38*39*310*Z
Tupletyping.Tuple*
typing._SpecialForm"typing._SpecialForm*35*36*37*38*39*310*Z
Uniontyping.Union*
typing._SpecialForm"typing._SpecialForm*35*36*37*38*39*310*Ö
soft_strmarkupsafe.soft_strK
CallableType[builtins.function]&
builtins.function"builtins.function*35*36*37*38*39*310