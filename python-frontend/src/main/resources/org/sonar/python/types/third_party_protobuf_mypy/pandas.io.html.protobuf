
pandas.io.htmlç+
	read_htmlpandas.io.html.read_html"w
*builtins.list[pandas.core.frame.DataFrame]:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame"builtins.list* 
io¡
gUnion[TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]],pandas._typing.ReadBuffer[builtins.str]]Ô
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"pandas._typing.FilePathb
'pandas._typing.ReadBuffer[builtins.str]
builtins.str"builtins.str"pandas._typing.ReadBuffer*z
matchm
#Union[builtins.str,re.Pattern[Any]]
builtins.str"builtins.str&
re.Pattern[Any]
Any"
re.Pattern *R
flavorD
Union[builtins.str,None]
builtins.str"builtins.str
None *¡
header≤
6Union[builtins.int,typing.Sequence[builtins.int],None]
builtins.int"builtins.intN
typing.Sequence[builtins.int]
builtins.int"builtins.int"typing.Sequence
None *˝
	index_colÎ
_Union[builtins.int,typing.Sequence[builtins.int],builtins.list[pandas._typing.HashableT1],None]
builtins.int"builtins.intN
typing.Sequence[builtins.int]
builtins.int"builtins.int"typing.Sequenceç
(builtins.list[pandas._typing.HashableT1]R
pandas._typing.HashableT1"
typing.Hashable"typing.Hashable"typing.Hashable"builtins.list
None *Ù
skiprows„
EUnion[builtins.int,typing.Sequence[builtins.int],builtins.slice,None]
builtins.int"builtins.intN
typing.Sequence[builtins.int]
builtins.int"builtins.int"typing.Sequence 
builtins.slice"builtins.slice
None *«
attrsπ
4Union[builtins.dict[builtins.str,builtins.str],None]u
(builtins.dict[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"builtins.dict
None *Ü	
parse_datesÚ
åUnion[builtins.bool,typing.Sequence[builtins.int],builtins.list[pandas._typing.HashableT2],typing.Sequence[typing.Sequence[typing.Hashable]],builtins.dict[builtins.str,typing.Sequence[builtins.int]],builtins.dict[builtins.str,builtins.list[pandas._typing.HashableT3]]]
builtins.bool"builtins.boolN
typing.Sequence[builtins.int]
builtins.int"builtins.int"typing.Sequenceç
(builtins.list[pandas._typing.HashableT2]R
pandas._typing.HashableT2"
typing.Hashable"typing.Hashable"typing.Hashable"builtins.listù
1typing.Sequence[typing.Sequence[typing.Hashable]]W
 typing.Sequence[typing.Hashable]"
typing.Hashable"typing.Hashable"typing.Sequence"typing.Sequence∏
9builtins.dict[builtins.str,typing.Sequence[builtins.int]]
builtins.str"builtins.strN
typing.Sequence[builtins.int]
builtins.int"builtins.int"typing.Sequence"builtins.dictÉ
Dbuiltins.dict[builtins.str,builtins.list[pandas._typing.HashableT3]]
builtins.str"builtins.strç
(builtins.list[pandas._typing.HashableT3]R
pandas._typing.HashableT3"
typing.Hashable"typing.Hashable"typing.Hashable"builtins.list"builtins.dict *-
	thousands
builtins.str"builtins.str *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *+
decimal
builtins.str"builtins.str *Ô

converters‹
iUnion[typing.Mapping[Union[builtins.int,pandas._typing.HashableT4],CallableType[builtins.function]],None]‚
]typing.Mapping[Union[builtins.int,pandas._typing.HashableT4],CallableType[builtins.function]]£
-Union[builtins.int,pandas._typing.HashableT4]
builtins.int"builtins.intR
pandas._typing.HashableT4"
typing.Hashable"typing.Hashable"typing.HashableK
CallableType[builtins.function]&
builtins.function"builtins.function"typing.Mapping
None *Ì
	na_values€
ØUnion[builtins.str,builtins.list[builtins.str],builtins.dict[pandas._typing.HashableT5,builtins.str],builtins.dict[pandas._typing.HashableT5,builtins.list[builtins.str]],None]
builtins.str"builtins.strJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list∏
5builtins.dict[pandas._typing.HashableT5,builtins.str]R
pandas._typing.HashableT5"
typing.Hashable"typing.Hashable"typing.Hashable
builtins.str"builtins.str"builtins.dictı
Dbuiltins.dict[pandas._typing.HashableT5,builtins.list[builtins.str]]R
pandas._typing.HashableT5"
typing.Hashable"typing.Hashable"typing.HashableJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list"builtins.dict
None *5
keep_default_na
builtins.bool"builtins.bool *4
displayed_only
builtins.bool"builtins.bool *Î
extract_links’
cUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],None]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str
None *“
dtype_backendº
tUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Literal[pandas._libs.lib._NoDefault]]]â
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.str]]]®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.DtypeBackendµ
/TypeAlias[Literal[pandas._libs.lib._NoDefault]]d
$Literal[pandas._libs.lib._NoDefault]	:
pandas._libs.lib._NoDefault"pandas._libs.lib._NoDefault"pandas._libs.lib.NoDefault *ä
__annotations__pandas.io.html.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict