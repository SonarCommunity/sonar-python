
click.utilsú

TracebackTypetypes.TracebackType"builtins.object*Õ
tb_nexttypes.TracebackType.tb_next"Y
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None*4
self*
types.TracebackType"types.TracebackType0:property`z35z36*©
tb_frametypes.TracebackType.tb_frame""
types.FrameType"types.FrameType*4
self*
types.TracebackType"types.TracebackType0:property`z35z36z37z38z39z310*£
tb_lastitypes.TracebackType.tb_lasti"
builtins.int"builtins.int*4
self*
types.TracebackType"types.TracebackType0:property`z35z36z37z38z39z310*•
	tb_linenotypes.TracebackType.tb_lineno"
builtins.int"builtins.int*4
self*
types.TracebackType"types.TracebackType0:property`z35z36z37z38z39z310*Ï
__init__types.TracebackType.__init__"
None*4
self*
types.TracebackType"types.TracebackType*f
tb_nextY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None*0
tb_frame"
types.FrameType"types.FrameType**
tb_lasti
builtins.int"builtins.int*+
	tb_lineno
builtins.int"builtins.intz37z38z39z310j35j36j37j38j39j310rí
tb_nexttypes.TracebackType.tb_nextY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None*37*38*39*310º$
IO	typing.IO"typing.Iterator*ü
modetyping.IO.mode"
builtins.str"builtins.str*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:property`z35z36z37z38z39z310*ü
nametyping.IO.name"
builtins.str"builtins.str*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:property`z35z36z37z38z39z310*ì
closetyping.IO.close"
None*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z35z36z37z38z39z310*•
closedtyping.IO.closed"
builtins.bool"builtins.bool*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:property`z35z36z37z38z39z310*©
filenotyping.IO.fileno"
builtins.int"builtins.int*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z35z36z37z38z39z310*ì
flushtyping.IO.flush"
None*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z35z36z37z38z39z310*´
isattytyping.IO.isatty"
builtins.bool"builtins.bool*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z35z36z37z38z39z310*¡
readtyping.IO.read"
typing.AnyStr*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*%
n
builtins.int"builtins.int 0:abstractmethod@z35z36z37z38z39z310*Ø
readabletyping.IO.readable"
builtins.bool"builtins.bool*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z35z36z37z38z39z310*Õ
readlinetyping.IO.readline"
typing.AnyStr*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*)
limit
builtins.int"builtins.int 0:abstractmethod@z35z36z37z38z39z310*˝
	readlinestyping.IO.readlines"@
builtins.list[typing.AnyStr]
typing.AnyStr"builtins.list*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*(
hint
builtins.int"builtins.int 0:abstractmethod@z35z36z37z38z39z310*˚
seektyping.IO.seek"
builtins.int"builtins.int*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*(
offset
builtins.int"builtins.int**
whence
builtins.int"builtins.int 0:abstractmethod@z35z36z37z38z39z310*Ø
seekabletyping.IO.seekable"
builtins.bool"builtins.bool*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z35z36z37z38z39z310*•
telltyping.IO.tell"
builtins.int"builtins.int*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z35z36z37z38z39z310*ˇ
truncatetyping.IO.truncate"
builtins.int"builtins.int*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*P
sizeD
Union[builtins.int,None]
builtins.int"builtins.int
None 0:abstractmethod@z35z36z37z38z39z310*Ø
writabletyping.IO.writable"
builtins.bool"builtins.bool*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z35z36z37z38z39z310*¡
writetyping.IO.write"
builtins.int"builtins.int*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*
s
typing.AnyStr0:abstractmethod@z35z36z37z38z39z310*Ó

writelinestyping.IO.writelines"
None*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*O
linesD
typing.Iterable[typing.AnyStr]
typing.AnyStr"typing.Iterable0:abstractmethod@z35z36z37z38z39z310*¢
__next__typing.IO.__next__"
typing.AnyStr*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z35z36z37z38z39z310*”
__iter__typing.IO.__iter__"D
typing.Iterator[typing.AnyStr]
typing.AnyStr"typing.Iterator*@
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z35z36z37z38z39z310*…
	__enter__typing.IO.__enter__"8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*@
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z35z36z37z38z39z310*æ
__exit__typing.IO.__exit__"G
Union[builtins.bool,None]
builtins.bool"builtins.bool
None*@
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*ê
tä
(Union[Type[builtins.BaseException],None]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException
None*k
valueb
"Union[builtins.BaseException,None]0
builtins.BaseException"builtins.BaseException
None*f
	tracebackY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None0:abstractmethod@z35z36z37z38z39z310Pj35j36j37j38j39j310œ
Iteratortyping.Iterator"typing.Iterable*±
__next__typing.Iterator.__next__"
typing._T_co*L
selfB
typing.Iterator[typing._T_co]
typing._T_co"typing.Iterator0:abstractmethod@z35z36z37z38z39z310*Õ
__iter__typing.Iterator.__iter__"B
typing.Iterator[typing._T_co]
typing._T_co"typing.Iterator*J
selfB
typing.Iterator[typing._T_co]
typing._T_co"typing.Iteratorz35z36z37z38z39z3108PXj35j36j37j38j39j310À
TypeVartyping.TypeVar"builtins.object*û
__init__typing.TypeVar.__init__"
None**
self 
typing.TypeVar"typing.TypeVar*&
name
builtins.str"builtins.str*'
constraints
	Type[Any]
Any*s
boundf
"Union[None,Type[Any],builtins.str]
None
	Type[Any]
Any
builtins.str"builtins.str */
	covariant
builtins.bool"builtins.bool *3
contravariant
builtins.bool"builtins.bool z35z36z37z38z39z310j35j36j37j38j39j310r{
	__bound__typing.TypeVar.__bound__;
Union[Type[Any],None]
	Type[Any]
Any
None*35*36*37*38*39*310rè
__constraints__typing.TypeVar.__constraints__C
builtins.tuple[Type[Any]]
	Type[Any]
Any"builtins.tuple*35*36*37*38*39*310rf
__covariant__typing.TypeVar.__covariant__
builtins.bool"builtins.bool*35*36*37*38*39*310rn
__contravariant__ typing.TypeVar.__contravariant__
builtins.bool"builtins.bool*35*36*37*38*39*310’
LazyFileclick.utils.LazyFile"builtins.object*ä
__init__click.utils.LazyFile.__init__"
None*6
self,
click.utils.LazyFile"click.utils.LazyFile**
filename
builtins.str"builtins.str*(
mode
builtins.str"builtins.str *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None **
errors
builtins.str"builtins.str *,
atomic
builtins.bool"builtins.bool z35z36z37z38z39z310*ò
openclick.utils.LazyFile.open"$
typing.IO[Any]
Any"	typing.IO*6
self,
click.utils.LazyFile"click.utils.LazyFilez35z36z37z38z39z310*~
closeclick.utils.LazyFile.close"
None*6
self,
click.utils.LazyFile"click.utils.LazyFilez35z36z37z38z39z310*ö
close_intelligently(click.utils.LazyFile.close_intelligently"
None*6
self,
click.utils.LazyFile"click.utils.LazyFilez35z36z37z38z39z310*®
	__enter__click.utils.LazyFile.__enter__",
click.utils.LazyFile"click.utils.LazyFile*4
self,
click.utils.LazyFile"click.utils.LazyFilez35z36z37z38z39z310*Ó
__exit__click.utils.LazyFile.__exit__"
None*4
self,
click.utils.LazyFile"click.utils.LazyFile*ñ
exctypeä
(Union[Type[builtins.BaseException],None]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException
None*m
excinstb
"Union[builtins.BaseException,None]0
builtins.BaseException"builtins.BaseException
None*b
exctbY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
Nonez35z36z37z38z39z310*™
__iter__click.utils.LazyFile.__iter__"0
typing.Iterator[Any]
Any"typing.Iterator*4
self,
click.utils.LazyFile"click.utils.LazyFilez35z36z37z38z39z310j35j36j37j38j39j310rX
nameclick.utils.LazyFile.name
builtins.str"builtins.str*35*36*37*38*39*310rX
modeclick.utils.LazyFile.mode
builtins.str"builtins.str*35*36*37*38*39*310rà
encodingclick.utils.LazyFile.encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None*35*36*37*38*39*310r\
errorsclick.utils.LazyFile.errors
builtins.str"builtins.str*35*36*37*38*39*310r^
atomicclick.utils.LazyFile.atomic
builtins.bool"builtins.bool*35*36*37*38*39*310⁄
KeepOpenFileclick.utils.KeepOpenFile"builtins.object*ˆ
__init__!click.utils.KeepOpenFile.__init__"
None*`
selfV
'click.utils.KeepOpenFile[typing.AnyStr]
typing.AnyStr"click.utils.KeepOpenFile*B
file8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IOz35z36z37z38z39z310*Ä
	__enter__"click.utils.KeepOpenFile.__enter__"V
'click.utils.KeepOpenFile[typing.AnyStr]
typing.AnyStr"click.utils.KeepOpenFile*^
selfV
'click.utils.KeepOpenFile[typing.AnyStr]
typing.AnyStr"click.utils.KeepOpenFilez35z36z37z38z39z310*ú
__exit__!click.utils.KeepOpenFile.__exit__"
None*^
selfV
'click.utils.KeepOpenFile[typing.AnyStr]
typing.AnyStr"click.utils.KeepOpenFile*ñ
exctypeä
(Union[Type[builtins.BaseException],None]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException
None*m
excinstb
"Union[builtins.BaseException,None]0
builtins.BaseException"builtins.BaseException
None*b
exctbY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
Nonez35z36z37z38z39z310*Ï
__iter__!click.utils.KeepOpenFile.__iter__"D
typing.Iterator[typing.AnyStr]
typing.AnyStr"typing.Iterator*^
selfV
'click.utils.KeepOpenFile[typing.AnyStr]
typing.AnyStr"click.utils.KeepOpenFilez35z36z37z38z39z310Pj35j36j37j38j39j310rz
_fileclick.utils.KeepOpenFile._file8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*35*36*37*38*39*310Å
	_posixifyclick.utils._posixify"
builtins.str"builtins.str*&
name
builtins.str"builtins.strz35z36z37z38z39z310k
safecallclick.utils.safecall"
click.utils._T*
func
click.utils._Tz35z36z37z38z39z310k
make_strclick.utils.make_str"
builtins.str"builtins.str*
value
Anyz35z36z37z38z39z310Õ
make_default_short_help#click.utils.make_default_short_help"
builtins.str"builtins.str*&
help
builtins.str"builtins.str*.

max_length
builtins.int"builtins.int z35z36z37z38z39z310ù
echoclick.utils.echo"
None*1
message"
builtins.object"builtins.object *Å
fileu
#Union[typing.IO[builtins.str],None]B
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IO
None *(
nl
builtins.bool"builtins.bool *)
err
builtins.bool"builtins.bool *T
colorG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None z35z36z37z38z39z310Ω
get_binary_streamclick.utils.get_binary_stream"H
typing.IO[builtins.bytes] 
builtins.bytes"builtins.bytes"	typing.IO*&
name
builtins.str"builtins.strz35z36z37z38z39z310µ
get_text_streamclick.utils.get_text_stream"B
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IO*&
name
builtins.str"builtins.str*T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None **
errors
builtins.str"builtins.str z35z36z37z38z39z310ˆ
	open_fileclick.utils.open_file"
Any**
filename
builtins.str"builtins.str*(
mode
builtins.str"builtins.str *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None **
errors
builtins.str"builtins.str **
lazy
builtins.bool"builtins.bool *,
atomic
builtins.bool"builtins.bool z35z36z37z38z39z310ã
get_os_argsclick.utils.get_os_args"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.listz35z36z37z38z39z310¿
format_filenameclick.utils.format_filename"
builtins.str"builtins.str**
filename
builtins.str"builtins.str*-
shorten
builtins.bool"builtins.bool z35z36z37z38z39z310Î
get_app_dirclick.utils.get_app_dir"
builtins.str"builtins.str**
app_name
builtins.str"builtins.str*-
roaming
builtins.bool"builtins.bool *1
force_posix
builtins.bool"builtins.bool z35z36z37z38z39z310*N
Any
typing.Any"
builtins.object"builtins.object*35*36*37*38*39*310*^
Generictyping.Generic*
typing._SpecialForm"typing._SpecialForm*35*36*37*38*39*310*`
Optionaltyping.Optional*
typing._SpecialForm"typing._SpecialForm*35*36*37*38*39*310*X
Typetyping.Type*
typing._SpecialForm"typing._SpecialForm*35*36*37*38*39*310