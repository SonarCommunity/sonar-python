
torch.distributions.cauchyÞ
Cauchy!torch.distributions.cauchy.Cauchy"-torch.distributions.distribution.Distribution*i
__init__*torch.distributions.cauchy.Cauchy.__init__*
self*
loc*	
scale*
validate_args *^
expand(torch.distributions.cauchy.Cauchy.expand*
self*
batch_shape*
	_instance *F
mean&torch.distributions.cauchy.Cauchy.mean*
self0:property`*F
mode&torch.distributions.cauchy.Cauchy.mode*
self0:property`*N
variance*torch.distributions.cauchy.Cauchy.variance*
self0:property`*R
rsample)torch.distributions.cauchy.Cauchy.rsample*
self*
sample_shape *K
log_prob*torch.distributions.cauchy.Cauchy.log_prob*
self*	
value*A
cdf%torch.distributions.cauchy.Cauchy.cdf*
self*	
value*C
icdf&torch.distributions.cauchy.Cauchy.icdf*
self*	
value*>
entropy)torch.distributions.cauchy.Cauchy.entropy*
selfr–
arg_constraints1torch.distributions.cauchy.Cauchy.arg_constraintsÏ
Fbuiltins.dict[builtins.str,torch.distributions.constraints.Constraint]
builtins.str"builtins.strX
*torch.distributions.constraints.Constraint"*torch.distributions.constraints.Constraint"builtins.dictr„
support)torch.distributions.cauchy.Cauchy.supportN
%torch.distributions.constraints._Real"%torch.distributions.constraints._Realr\
has_rsample-torch.distributions.cauchy.Cauchy.has_rsample
builtins.bool"builtins.boolr5
loc%torch.distributions.cauchy.Cauchy.loc
Anyr9
scale'torch.distributions.cauchy.Cauchy.scale
Any*–
__annotations__*torch.distributions.cauchy.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*y
__all__"torch.distributions.cauchy.__all__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list