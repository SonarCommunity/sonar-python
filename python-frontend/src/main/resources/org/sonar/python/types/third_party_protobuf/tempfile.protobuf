
tempfileÑ'
_TemporaryFileWrappertempfile._TemporaryFileWrapper"	typing.IO*ò
__init__'tempfile._TemporaryFileWrapper.__init__"
None*J
self@
tempfile._TemporaryFileWrapper"tempfile._TemporaryFileWrapper*L
fileB
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IO*
name
Any*,
delete
builtins.bool"builtins.bool *¡
	__enter__(tempfile._TemporaryFileWrapper.__enter__"@
tempfile._TemporaryFileWrapper"tempfile._TemporaryFileWrapper*H
self@
tempfile._TemporaryFileWrapper"tempfile._TemporaryFileWrapper*©
__exit__'tempfile._TemporaryFileWrapper.__exit__"G
Union[builtins.bool,None]
builtins.bool"builtins.bool
None*H
self@
tempfile._TemporaryFileWrapper"tempfile._TemporaryFileWrapper*í
excä
(Union[Type[builtins.BaseException],None]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException
None*k
valueb
"Union[builtins.BaseException,None]0
builtins.BaseException"builtins.BaseException
None*_
tbY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None*≤
__getattr__*tempfile._TemporaryFileWrapper.__getattr__"
Any*H
self@
tempfile._TemporaryFileWrapper"tempfile._TemporaryFileWrapper*$
name
builtins.str"builtins.str*É
close$tempfile._TemporaryFileWrapper.close"
None*J
self@
tempfile._TemporaryFileWrapper"tempfile._TemporaryFileWrapper*≠
unlink%tempfile._TemporaryFileWrapper.unlink"
None*J
self@
tempfile._TemporaryFileWrapper"tempfile._TemporaryFileWrapper*&
path
builtins.str"builtins.str*Õ
__iter__'tempfile._TemporaryFileWrapper.__iter__"N
typing.Iterator[builtins.str]
builtins.str"builtins.str"typing.Iterator*H
self@
tempfile._TemporaryFileWrapper"tempfile._TemporaryFileWrapper*ù
__next__'tempfile._TemporaryFileWrapper.__next__"
builtins.str"builtins.str*J
self@
tempfile._TemporaryFileWrapper"tempfile._TemporaryFileWrapper*ô
fileno%tempfile._TemporaryFileWrapper.fileno"
builtins.int"builtins.int*J
self@
tempfile._TemporaryFileWrapper"tempfile._TemporaryFileWrapper*É
flush$tempfile._TemporaryFileWrapper.flush"
None*J
self@
tempfile._TemporaryFileWrapper"tempfile._TemporaryFileWrapper*õ
isatty%tempfile._TemporaryFileWrapper.isatty"
builtins.bool"builtins.bool*J
self@
tempfile._TemporaryFileWrapper"tempfile._TemporaryFileWrapper*ï
next#tempfile._TemporaryFileWrapper.next"
builtins.str"builtins.str*J
self@
tempfile._TemporaryFileWrapper"tempfile._TemporaryFileWrapper*º
read#tempfile._TemporaryFileWrapper.read"
builtins.str"builtins.str*J
self@
tempfile._TemporaryFileWrapper"tempfile._TemporaryFileWrapper*%
n
builtins.int"builtins.int *ü
readable'tempfile._TemporaryFileWrapper.readable"
builtins.bool"builtins.bool*J
self@
tempfile._TemporaryFileWrapper"tempfile._TemporaryFileWrapper*»
readline'tempfile._TemporaryFileWrapper.readline"
builtins.str"builtins.str*J
self@
tempfile._TemporaryFileWrapper"tempfile._TemporaryFileWrapper*)
limit
builtins.int"builtins.int *˜
	readlines(tempfile._TemporaryFileWrapper.readlines"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*J
self@
tempfile._TemporaryFileWrapper"tempfile._TemporaryFileWrapper*(
hint
builtins.int"builtins.int *Î
seek#tempfile._TemporaryFileWrapper.seek"
builtins.int"builtins.int*J
self@
tempfile._TemporaryFileWrapper"tempfile._TemporaryFileWrapper*(
offset
builtins.int"builtins.int**
whence
builtins.int"builtins.int *ü
seekable'tempfile._TemporaryFileWrapper.seekable"
builtins.bool"builtins.bool*J
self@
tempfile._TemporaryFileWrapper"tempfile._TemporaryFileWrapper*ï
tell#tempfile._TemporaryFileWrapper.tell"
builtins.int"builtins.int*J
self@
tempfile._TemporaryFileWrapper"tempfile._TemporaryFileWrapper*Ô
truncate'tempfile._TemporaryFileWrapper.truncate"
builtins.int"builtins.int*J
self@
tempfile._TemporaryFileWrapper"tempfile._TemporaryFileWrapper*P
sizeD
Union[builtins.int,None]
builtins.int"builtins.int
None *ü
writable'tempfile._TemporaryFileWrapper.writable"
builtins.bool"builtins.bool*J
self@
tempfile._TemporaryFileWrapper"tempfile._TemporaryFileWrapper*º
write$tempfile._TemporaryFileWrapper.write"
builtins.int"builtins.int*J
self@
tempfile._TemporaryFileWrapper"tempfile._TemporaryFileWrapper*#
s
builtins.str"builtins.str*Ë

writelines)tempfile._TemporaryFileWrapper.writelines"
None*J
self@
tempfile._TemporaryFileWrapper"tempfile._TemporaryFileWrapper*Y
linesN
typing.Iterable[builtins.str]
builtins.str"builtins.str"typing.Iterablero
file#tempfile._TemporaryFileWrapper.fileB
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IOr4
name#tempfile._TemporaryFileWrapper.name
AnyrO
delete%tempfile._TemporaryFileWrapper.delete
builtins.bool"builtins.boolﬂG
SpooledTemporaryFiletempfile.SpooledTemporaryFile"	typing.IO*Ó
errors$tempfile.SpooledTemporaryFile.errors"D
Union[builtins.str,None]
builtins.str"builtins.str
None*j
self`
,tempfile.SpooledTemporaryFile[typing.AnyStr]
typing.AnyStr"tempfile.SpooledTemporaryFile0:property`*®
rollover&tempfile.SpooledTemporaryFile.rollover"
None*j
self`
,tempfile.SpooledTemporaryFile[typing.AnyStr]
typing.AnyStr"tempfile.SpooledTemporaryFile*^
	__enter__'tempfile.SpooledTemporaryFile.__enter__"
tempfile._S*
self
tempfile._S*”
__exit__&tempfile.SpooledTemporaryFile.__exit__"G
Union[builtins.bool,None]
builtins.bool"builtins.bool
None*h
self`
,tempfile.SpooledTemporaryFile[typing.AnyStr]
typing.AnyStr"tempfile.SpooledTemporaryFile*ó
exc_typeä
(Union[Type[builtins.BaseException],None]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException
None*m
exc_valb
"Union[builtins.BaseException,None]0
builtins.BaseException"builtins.BaseException
None*c
exc_tbY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None*¢
close#tempfile.SpooledTemporaryFile.close"
None*j
self`
,tempfile.SpooledTemporaryFile[typing.AnyStr]
typing.AnyStr"tempfile.SpooledTemporaryFile*∏
fileno$tempfile.SpooledTemporaryFile.fileno"
builtins.int"builtins.int*j
self`
,tempfile.SpooledTemporaryFile[typing.AnyStr]
typing.AnyStr"tempfile.SpooledTemporaryFile*¢
flush#tempfile.SpooledTemporaryFile.flush"
None*j
self`
,tempfile.SpooledTemporaryFile[typing.AnyStr]
typing.AnyStr"tempfile.SpooledTemporaryFile*∫
isatty$tempfile.SpooledTemporaryFile.isatty"
builtins.bool"builtins.bool*j
self`
,tempfile.SpooledTemporaryFile[typing.AnyStr]
typing.AnyStr"tempfile.SpooledTemporaryFile*–
read"tempfile.SpooledTemporaryFile.read"
typing.AnyStr*j
self`
,tempfile.SpooledTemporaryFile[typing.AnyStr]
typing.AnyStr"tempfile.SpooledTemporaryFile*%
n
builtins.int"builtins.int *‹
readline&tempfile.SpooledTemporaryFile.readline"
typing.AnyStr*j
self`
,tempfile.SpooledTemporaryFile[typing.AnyStr]
typing.AnyStr"tempfile.SpooledTemporaryFile*)
limit
builtins.int"builtins.int *å
	readlines'tempfile.SpooledTemporaryFile.readlines"@
builtins.list[typing.AnyStr]
typing.AnyStr"builtins.list*j
self`
,tempfile.SpooledTemporaryFile[typing.AnyStr]
typing.AnyStr"tempfile.SpooledTemporaryFile*(
hint
builtins.int"builtins.int *ä
seek"tempfile.SpooledTemporaryFile.seek"
builtins.int"builtins.int*j
self`
,tempfile.SpooledTemporaryFile[typing.AnyStr]
typing.AnyStr"tempfile.SpooledTemporaryFile*(
offset
builtins.int"builtins.int**
whence
builtins.int"builtins.int *¥
tell"tempfile.SpooledTemporaryFile.tell"
builtins.int"builtins.int*j
self`
,tempfile.SpooledTemporaryFile[typing.AnyStr]
typing.AnyStr"tempfile.SpooledTemporaryFile*é
truncate&tempfile.SpooledTemporaryFile.truncate"
builtins.int"builtins.int*j
self`
,tempfile.SpooledTemporaryFile[typing.AnyStr]
typing.AnyStr"tempfile.SpooledTemporaryFile*P
sizeD
Union[builtins.int,None]
builtins.int"builtins.int
None *–
write#tempfile.SpooledTemporaryFile.write"
builtins.int"builtins.int*j
self`
,tempfile.SpooledTemporaryFile[typing.AnyStr]
typing.AnyStr"tempfile.SpooledTemporaryFile*
s
typing.AnyStr*Ä

writelines(tempfile.SpooledTemporaryFile.writelines"
None*j
self`
,tempfile.SpooledTemporaryFile[typing.AnyStr]
typing.AnyStr"tempfile.SpooledTemporaryFile*R
iterableD
typing.Iterable[typing.AnyStr]
typing.AnyStr"typing.Iterable*‚
__iter__&tempfile.SpooledTemporaryFile.__iter__"D
typing.Iterator[typing.AnyStr]
typing.AnyStr"typing.Iterator*h
self`
,tempfile.SpooledTemporaryFile[typing.AnyStr]
typing.AnyStr"tempfile.SpooledTemporaryFile*æ
readable&tempfile.SpooledTemporaryFile.readable"
builtins.bool"builtins.bool*j
self`
,tempfile.SpooledTemporaryFile[typing.AnyStr]
typing.AnyStr"tempfile.SpooledTemporaryFile*æ
seekable&tempfile.SpooledTemporaryFile.seekable"
builtins.bool"builtins.bool*j
self`
,tempfile.SpooledTemporaryFile[typing.AnyStr]
typing.AnyStr"tempfile.SpooledTemporaryFile*æ
writable&tempfile.SpooledTemporaryFile.writable"
builtins.bool"builtins.bool*j
self`
,tempfile.SpooledTemporaryFile[typing.AnyStr]
typing.AnyStr"tempfile.SpooledTemporaryFile*±
__next__&tempfile.SpooledTemporaryFile.__next__"
typing.AnyStr*j
self`
,tempfile.SpooledTemporaryFile[typing.AnyStr]
typing.AnyStr"tempfile.SpooledTemporaryFile2æ"
__init__&tempfile.SpooledTemporaryFile.__init__Æ
__init__&tempfile.SpooledTemporaryFile.__init__"
None*z
selfp
-tempfile.SpooledTemporaryFile[builtins.bytes] 
builtins.bytes"builtins.bytes"tempfile.SpooledTemporaryFile*,
max_size
builtins.int"builtins.int *ê
modeÉ
∂Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str *-
	buffering
builtins.int"builtins.int *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
newlineD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
suffixD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
prefixD
Union[builtins.str,None]
builtins.str"builtins.str
None *O
dirD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None 0:overloadX†
__init__&tempfile.SpooledTemporaryFile.__init__"
None*t
selfj
+tempfile.SpooledTemporaryFile[builtins.str]
builtins.str"builtins.str"tempfile.SpooledTemporaryFile*,
max_size
builtins.int"builtins.int *à

mode˚	
ÊUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str *-
	buffering
builtins.int"builtins.int *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
newlineD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
suffixD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
prefixD
Union[builtins.str,None]
builtins.str"builtins.str
None *O
dirD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None 0:overloadXµ
__init__&tempfile.SpooledTemporaryFile.__init__"
None*j
self`
,tempfile.SpooledTemporaryFile[typing.AnyStr]
typing.AnyStr"tempfile.SpooledTemporaryFile*,
max_size
builtins.int"builtins.int *(
mode
builtins.str"builtins.str *-
	buffering
builtins.int"builtins.int *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
newlineD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
suffixD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
prefixD
Union[builtins.str,None]
builtins.str"builtins.str
None *O
dirD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None 0:overloadXPÅ
TemporaryDirectorytempfile.TemporaryDirectory"builtins.object*†
cleanup#tempfile.TemporaryDirectory.cleanup"
None*f
self\
*tempfile.TemporaryDirectory[typing.AnyStr]
typing.AnyStr"tempfile.TemporaryDirectory*´
	__enter__%tempfile.TemporaryDirectory.__enter__"
typing.AnyStr*d
self\
*tempfile.TemporaryDirectory[typing.AnyStr]
typing.AnyStr"tempfile.TemporaryDirectory*é
__exit__$tempfile.TemporaryDirectory.__exit__"
None*d
self\
*tempfile.TemporaryDirectory[typing.AnyStr]
typing.AnyStr"tempfile.TemporaryDirectory*ó
exc_typeä
(Union[Type[builtins.BaseException],None]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException
None*m
exc_valb
"Union[builtins.BaseException,None]0
builtins.BaseException"builtins.BaseException
None*c
exc_tbY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None2õ
__init__$tempfile.TemporaryDirectory.__init__ˇ
__init__$tempfile.TemporaryDirectory.__init__"
None*p
selff
)tempfile.TemporaryDirectory[builtins.str]
builtins.str"builtins.str"tempfile.TemporaryDirectory*
suffix
None *
prefix
None *
dir
None 0:overloadXÊ
__init__$tempfile.TemporaryDirectory.__init__"
None*f
self\
*tempfile.TemporaryDirectory[typing.AnyStr]
typing.AnyStr"tempfile.TemporaryDirectory*H
suffix:
Union[typing.AnyStr,None]
typing.AnyStr
None *H
prefix:
Union[typing.AnyStr,None]
typing.AnyStr
None *ü
dirì
4Union[typing.AnyStr,os.PathLike[typing.AnyStr],None]
typing.AnyStr<
os.PathLike[typing.AnyStr]
typing.AnyStr"os.PathLike
None 0:overloadXPr;
name tempfile.TemporaryDirectory.name
typing.AnyStrE
gettempdirbtempfile.gettempdirb" 
builtins.bytes"builtins.bytesK
gettempprefixbtempfile.gettempprefixb" 
builtins.bytes"builtins.bytes?

gettempdirtempfile.gettempdir"
builtins.str"builtins.strE
gettempprefixtempfile.gettempprefix"
builtins.str"builtins.str"ß"
NamedTemporaryFiletempfile.NamedTemporaryFileû
NamedTemporaryFiletempfile.NamedTemporaryFile"B
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IO*Ü

mode˚	
ÊUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str*-
	buffering
builtins.int"builtins.int *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
newlineD
Union[builtins.str,None]
builtins.str"builtins.str
None *H
suffix:
Union[typing.AnyStr,None]
typing.AnyStr
None *H
prefix:
Union[typing.AnyStr,None]
typing.AnyStr
None *ü
dirì
4Union[typing.AnyStr,os.PathLike[typing.AnyStr],None]
typing.AnyStr<
os.PathLike[typing.AnyStr]
typing.AnyStr"os.PathLike
None *,
delete
builtins.bool"builtins.bool *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None 0:overloadXÆ
NamedTemporaryFiletempfile.NamedTemporaryFile"H
typing.IO[builtins.bytes] 
builtins.bytes"builtins.bytes"	typing.IO*ê
modeÉ
∂Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str *-
	buffering
builtins.int"builtins.int *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
newlineD
Union[builtins.str,None]
builtins.str"builtins.str
None *H
suffix:
Union[typing.AnyStr,None]
typing.AnyStr
None *H
prefix:
Union[typing.AnyStr,None]
typing.AnyStr
None *ü
dirì
4Union[typing.AnyStr,os.PathLike[typing.AnyStr],None]
typing.AnyStr<
os.PathLike[typing.AnyStr]
typing.AnyStr"os.PathLike
None *,
delete
builtins.bool"builtins.bool *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None 0:overloadX°
NamedTemporaryFiletempfile.NamedTemporaryFile"$
typing.IO[Any]
Any"	typing.IO*(
mode
builtins.str"builtins.str *-
	buffering
builtins.int"builtins.int *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
newlineD
Union[builtins.str,None]
builtins.str"builtins.str
None *H
suffix:
Union[typing.AnyStr,None]
typing.AnyStr
None *H
prefix:
Union[typing.AnyStr,None]
typing.AnyStr
None *ü
dirì
4Union[typing.AnyStr,os.PathLike[typing.AnyStr],None]
typing.AnyStr<
os.PathLike[typing.AnyStr]
typing.AnyStr"os.PathLike
None *,
delete
builtins.bool"builtins.bool *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None 0:overloadX"ı 
TemporaryFiletempfile.TemporaryFileÊ
TemporaryFiletempfile.TemporaryFile"B
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IO*Ü

mode˚	
ÊUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str*-
	buffering
builtins.int"builtins.int *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
newlineD
Union[builtins.str,None]
builtins.str"builtins.str
None *H
suffix:
Union[typing.AnyStr,None]
typing.AnyStr
None *H
prefix:
Union[typing.AnyStr,None]
typing.AnyStr
None *ü
dirì
4Union[typing.AnyStr,os.PathLike[typing.AnyStr],None]
typing.AnyStr<
os.PathLike[typing.AnyStr]
typing.AnyStr"os.PathLike
None *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None 0:overloadXˆ

TemporaryFiletempfile.TemporaryFile"H
typing.IO[builtins.bytes] 
builtins.bytes"builtins.bytes"	typing.IO*ê
modeÉ
∂Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str *-
	buffering
builtins.int"builtins.int *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
newlineD
Union[builtins.str,None]
builtins.str"builtins.str
None *H
suffix:
Union[typing.AnyStr,None]
typing.AnyStr
None *H
prefix:
Union[typing.AnyStr,None]
typing.AnyStr
None *ü
dirì
4Union[typing.AnyStr,os.PathLike[typing.AnyStr],None]
typing.AnyStr<
os.PathLike[typing.AnyStr]
typing.AnyStr"os.PathLike
None *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None 0:overloadXÈ
TemporaryFiletempfile.TemporaryFile"$
typing.IO[Any]
Any"	typing.IO*(
mode
builtins.str"builtins.str *-
	buffering
builtins.int"builtins.int *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
newlineD
Union[builtins.str,None]
builtins.str"builtins.str
None *H
suffix:
Union[typing.AnyStr,None]
typing.AnyStr
None *H
prefix:
Union[typing.AnyStr,None]
typing.AnyStr
None *ü
dirì
4Union[typing.AnyStr,os.PathLike[typing.AnyStr],None]
typing.AnyStr<
os.PathLike[typing.AnyStr]
typing.AnyStr"os.PathLike
None *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None 0:overloadX"è
mkstemptempfile.mkstempã
mkstemptempfile.mkstemp"`
 Tuple[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str0:overloadX„
mkstemptempfile.mkstemp"V
!Tuple[builtins.int,typing.AnyStr]
builtins.int"builtins.int
typing.AnyStr*H
suffix:
Union[typing.AnyStr,None]
typing.AnyStr
None *H
prefix:
Union[typing.AnyStr,None]
typing.AnyStr
None *ü
dirì
4Union[typing.AnyStr,os.PathLike[typing.AnyStr],None]
typing.AnyStr<
os.PathLike[typing.AnyStr]
typing.AnyStr"os.PathLike
None **
text
builtins.bool"builtins.bool 0:overloadX"Ÿ
mkdtemptempfile.mkdtempG
mkdtemptempfile.mkdtemp"
builtins.str"builtins.str0:overloadXÚ
mkdtemptempfile.mkdtemp"
typing.AnyStr*H
suffix:
Union[typing.AnyStr,None]
typing.AnyStr
None *H
prefix:
Union[typing.AnyStr,None]
typing.AnyStr
None *ü
dirì
4Union[typing.AnyStr,os.PathLike[typing.AnyStr],None]
typing.AnyStr<
os.PathLike[typing.AnyStr]
typing.AnyStr"os.PathLike
None 0:overloadX"”
mktemptempfile.mktempE
mktemptempfile.mktemp"
builtins.str"builtins.str0:overloadX
mktemptempfile.mktemp"
typing.AnyStr*H
suffix:
Union[typing.AnyStr,None]
typing.AnyStr
None *H
prefix:
Union[typing.AnyStr,None]
typing.AnyStr
None *ü
dirì
4Union[typing.AnyStr,os.PathLike[typing.AnyStr],None]
typing.AnyStr<
os.PathLike[typing.AnyStr]
typing.AnyStr"os.PathLike
None 0:overloadX*9
TMP_MAXtempfile.TMP_MAX
builtins.int"builtins.int*a
tempdirtempfile.tempdirD
Union[builtins.str,None]
builtins.str"builtins.str
None*;
templatetempfile.template
builtins.str"builtins.str