
torch.distributions.studentT”
StudentT%torch.distributions.studentT.StudentT"-torch.distributions.distribution.Distribution*J
mean*torch.distributions.studentT.StudentT.mean*
self0:property`*J
mode*torch.distributions.studentT.StudentT.mode*
self0:property`*R
variance.torch.distributions.studentT.StudentT.variance*
self0:property`*y
__init__.torch.distributions.studentT.StudentT.__init__*
self*
df*	
loc *
scale *
validate_args *b
expand,torch.distributions.studentT.StudentT.expand*
self*
batch_shape*
	_instance *V
rsample-torch.distributions.studentT.StudentT.rsample*
self*
sample_shape *O
log_prob.torch.distributions.studentT.StudentT.log_prob*
self*	
value*B
entropy-torch.distributions.studentT.StudentT.entropy*
selfrš
arg_constraints5torch.distributions.studentT.StudentT.arg_constraintsÏ
Fbuiltins.dict[builtins.str,torch.distributions.constraints.Constraint]
builtins.str"builtins.strX
*torch.distributions.constraints.Constraint"*torch.distributions.constraints.Constraint"builtins.dictrˆ
support-torch.distributions.studentT.StudentT.supportN
%torch.distributions.constraints._Real"%torch.distributions.constraints._Realr`
has_rsample1torch.distributions.studentT.StudentT.has_rsample
builtins.bool"builtins.boolr7
df(torch.distributions.studentT.StudentT.df
Anyr9
loc)torch.distributions.studentT.StudentT.loc
Anyr=
scale+torch.distributions.studentT.StudentT.scale
Anyr=
_chi2+torch.distributions.studentT.StudentT._chi2
Any*˜
__annotations__,torch.distributions.studentT.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*{
__all__$torch.distributions.studentT.__all__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list