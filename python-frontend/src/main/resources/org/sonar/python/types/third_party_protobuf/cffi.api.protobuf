
cffi.api§Ø
FFIcffi.api.FFI"builtins.object*…
__init__cffi.api.FFI.__init__"
None*&
self
cffi.api.FFI"cffi.api.FFI*_
backendP
Union[types.ModuleType,None]$
types.ModuleType"types.ModuleType
None z36z37z38z39z310*ª
cdefcffi.api.FFI.cdef"
None*&
self
cffi.api.FFI"cffi.api.FFI*)
csource
builtins.str"builtins.str*.
override
builtins.bool"builtins.bool *,
packed
builtins.bool"builtins.bool *P
packD
Union[builtins.int,None]
builtins.int"builtins.int
None z36z37z38z39z310*À
embedding_apicffi.api.FFI.embedding_api"
None*&
self
cffi.api.FFI"cffi.api.FFI*)
csource
builtins.str"builtins.str*,
packed
builtins.bool"builtins.bool *~
packr
&Union[builtins.bool,builtins.int,None]
builtins.bool"builtins.bool
builtins.int"builtins.int
None z36z37z38z39z310*˝
dlopencffi.api.FFI.dlopen"&
_cffi_backend.Lib"_cffi_backend.Lib*&
self
cffi.api.FFI"cffi.api.FFI*N
nameD
Union[builtins.str,None]
builtins.str"builtins.str
None*)
flags
builtins.int"builtins.int z36z37z38z39z310*ó
dlclosecffi.api.FFI.dlclose"
None*&
self
cffi.api.FFI"cffi.api.FFI*/
lib&
_cffi_backend.Lib"_cffi_backend.Libz36z37z38z39z310*®
typeofcffi.api.FFI.typeof"*
_cffi_backend.CType"_cffi_backend.CType*&
self
cffi.api.FFI"cffi.api.FFI*ü
cdeclì
YUnion[builtins.str,_cffi_backend._CDataBase,types.BuiltinFunctionType,types.FunctionType]
builtins.str"builtins.str4
_cffi_backend._CDataBase"_cffi_backend._CDataBase6
types.BuiltinFunctionType"types.BuiltinFunctionType(
types.FunctionType"types.FunctionTypez36z37z38z39z310*ã
sizeofcffi.api.FFI.sizeof"
builtins.int"builtins.int*&
self
cffi.api.FFI"cffi.api.FFI*ê
cdeclÑ
,Union[builtins.str,_cffi_backend._CDataBase]
builtins.str"builtins.str4
_cffi_backend._CDataBase"_cffi_backend._CDataBasez36z37z38z39z310*ç
alignofcffi.api.FFI.alignof"
builtins.int"builtins.int*&
self
cffi.api.FFI"cffi.api.FFI*ê
cdeclÑ
,Union[builtins.str,_cffi_backend._CDataBase]
builtins.str"builtins.str4
_cffi_backend._CDataBase"_cffi_backend._CDataBasez36z37z38z39z310*à
offsetofcffi.api.FFI.offsetof"
builtins.int"builtins.int*&
self
cffi.api.FFI"cffi.api.FFI*ê
cdeclÑ
,Union[builtins.str,_cffi_backend._CDataBase]
builtins.str"builtins.str4
_cffi_backend._CDataBase"_cffi_backend._CDataBase*w
fields_or_indexes`
 Union[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.intz36z37z38z39z310*ˆ
newcffi.api.FFI.new"4
_cffi_backend._CDataBase"_cffi_backend._CDataBase*&
self
cffi.api.FFI"cffi.api.FFI*Ä
cdeclu
'Union[builtins.str,_cffi_backend.CType]
builtins.str"builtins.str*
_cffi_backend.CType"_cffi_backend.CType*g
init[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None z36z37z38z39z310*ã
new_allocatorcffi.api.FFI.new_allocator"4
_cffi_backend._Allocator"_cffi_backend._Allocator*&
self
cffi.api.FFI"cffi.api.FFI*î
allocÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None *ì
freeÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None *>
should_clear_after_alloc
builtins.bool"builtins.bool z36z37z38z39z310*£
castcffi.api.FFI.cast"4
_cffi_backend._CDataBase"_cffi_backend._CDataBase*&
self
cffi.api.FFI"cffi.api.FFI*Ä
cdeclu
'Union[builtins.str,_cffi_backend.CType]
builtins.str"builtins.str*
_cffi_backend.CType"_cffi_backend.CType*ë
sourceÑ
,Union[_cffi_backend._CDataBase,builtins.int]4
_cffi_backend._CDataBase"_cffi_backend._CDataBase
builtins.int"builtins.intz36z37z38z39z310*Ø
stringcffi.api.FFI.string"f
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str*&
self
cffi.api.FFI"cffi.api.FFI*?
cdata4
_cffi_backend._CDataBase"_cffi_backend._CDataBase**
maxlen
builtins.int"builtins.int z36z37z38z39z310*Ô
unpackcffi.api.FFI.unpack"ß
5Union[builtins.bytes,builtins.str,builtins.list[Any]] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str,
builtins.list[Any]
Any"builtins.list*&
self
cffi.api.FFI"cffi.api.FFI*?
cdata4
_cffi_backend._CDataBase"_cffi_backend._CDataBase*(
length
builtins.int"builtins.intz36z37z38z39z310*¶
memmovecffi.api.FFI.memmove"
None*&
self
cffi.api.FFI"cffi.api.FFI*ﬂ
dest‘
ÅUnion[_cffi_backend._CDataBase,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]4
_cffi_backend._CDataBase"_cffi_backend._CDataBaseï
aTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]í
VUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData"_typeshed.WriteableBuffer*√
srcπ
¢Union[_cffi_backend._CDataBase,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]]4
_cffi_backend._CDataBase"_cffi_backend._CDataBaseŸ
ÇTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]µ
wUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]] 
builtins.bytes"builtins.bytesï
aTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]í
VUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*#
n
builtins.int"builtins.intz36z37*§
memmovecffi.api.FFI.memmove"
None*&
self
cffi.api.FFI"cffi.api.FFI*«
destº
ïUnion[_cffi_backend._CDataBase,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]4
_cffi_backend._CDataBase"_cffi_backend._CDataBaseÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer*‘
src 
∂Union[_cffi_backend._CDataBase,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]]4
_cffi_backend._CDataBase"_cffi_backend._CDataBase÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*#
n
builtins.int"builtins.intz38z39z310*±
getctypecffi.api.FFI.getctype"
builtins.str"builtins.str*&
self
cffi.api.FFI"cffi.api.FFI*Ä
cdeclu
'Union[builtins.str,_cffi_backend.CType]
builtins.str"builtins.str*
_cffi_backend.CType"_cffi_backend.CType*0
replace_with
builtins.str"builtins.str z36z37z38z39z310*ó
verifycffi.api.FFI.verify"&
_cffi_backend.Lib"_cffi_backend.Lib*&
self
cffi.api.FFI"cffi.api.FFI**
source
builtins.str"builtins.str *R
tmpdirD
Union[builtins.str,None]
builtins.str"builtins.str
None *
kwargs
Anyz36z37z38z39z310*–
	addressofcffi.api.FFI.addressof"4
_cffi_backend._CDataBase"_cffi_backend._CDataBase*&
self
cffi.api.FFI"cffi.api.FFI*?
cdata4
_cffi_backend._CDataBase"_cffi_backend._CDataBase*w
fields_or_indexes`
 Union[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.intz36z37z38z39z310*ò
includecffi.api.FFI.include"
None*&
self
cffi.api.FFI"cffi.api.FFI*0
ffi_to_include
cffi.api.FFI"cffi.api.FFIz36z37z38z39z310*®

new_handlecffi.api.FFI.new_handle"4
_cffi_backend._CDataBase"_cffi_backend._CDataBase*&
self
cffi.api.FFI"cffi.api.FFI*
x
Anyz36z37z38z39z310*™
from_handlecffi.api.FFI.from_handle"
Any*&
self
cffi.api.FFI"cffi.api.FFI*;
x4
_cffi_backend._CDataBase"_cffi_backend._CDataBasez36z37z38z39z310*£
releasecffi.api.FFI.release"
None*&
self
cffi.api.FFI"cffi.api.FFI*;
x4
_cffi_backend._CDataBase"_cffi_backend._CDataBasez36z37z38z39z310*†
set_unicodecffi.api.FFI.set_unicode"
None*&
self
cffi.api.FFI"cffi.api.FFI*0
enabled_flag
builtins.bool"builtins.boolz36z37z38z39z310*é

set_sourcecffi.api.FFI.set_source"
None*&
self
cffi.api.FFI"cffi.api.FFI*-
module_name
builtins.str"builtins.str*(
source
builtins.str"builtins.str*4
source_extension
builtins.str"builtins.str *
kwds
Anyz36z37z38z39z310*Ç
set_source_pkgconfig!cffi.api.FFI.set_source_pkgconfig"
None*&
self
cffi.api.FFI"cffi.api.FFI*-
module_name
builtins.str"builtins.str*^
pkgconfig_libsJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*(
source
builtins.str"builtins.str*4
source_extension
builtins.str"builtins.str *
kwds
Anyz36z37z38z39z310*è
distutils_extension cffi.api.FFI.distutils_extension">
distutils.extension.Extension"distutils.extension.Extension*&
self
cffi.api.FFI"cffi.api.FFI**
tmpdir
builtins.str"builtins.str *-
verbose
builtins.bool"builtins.bool z36z37z38z39z310*ö
emit_c_codecffi.api.FFI.emit_c_code"
None*&
self
cffi.api.FFI"cffi.api.FFI**
filename
builtins.str"builtins.strz36z37z38z39z310*§
emit_python_codecffi.api.FFI.emit_python_code"
None*&
self
cffi.api.FFI"cffi.api.FFI**
filename
builtins.str"builtins.strz36z37z38z39z310*˝
compilecffi.api.FFI.compile"
builtins.str"builtins.str*&
self
cffi.api.FFI"cffi.api.FFI**
tmpdir
builtins.str"builtins.str *+
verbose
builtins.int"builtins.int *R
targetD
Union[builtins.str,None]
builtins.str"builtins.str
None *T
debugG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None z36z37z38z39z310*Ì
	init_oncecffi.api.FFI.init_once"
Any*&
self
cffi.api.FFI"cffi.api.FFI*U
funcK
CallableType[builtins.function]&
builtins.function"builtins.function*+
tag"
typing.Hashable"typing.Hashablez36z37z38z39z310*™
embedding_init_code cffi.api.FFI.embedding_init_code"
None*&
self
cffi.api.FFI"cffi.api.FFI**
pysource
builtins.str"builtins.strz36z37z38z39z310*í

def_externcffi.api.FFI.def_extern"
None*&
self
cffi.api.FFI"cffi.api.FFI*
args
Any*
kwds
Anyz36z37z38z39z310*ß

list_typescffi.api.FFI.list_types"¬
ZTuple[builtins.list[builtins.str],builtins.list[builtins.str],builtins.list[builtins.str]]J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.listJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.listJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*&
self
cffi.api.FFI"cffi.api.FFIz36z37z38z39z3102Å
from_buffercffi.api.FFI.from_bufferœ
from_buffercffi.api.FFI.from_buffer"4
_cffi_backend._CDataBase"_cffi_backend._CDataBase*&
self
cffi.api.FFI"cffi.api.FFI*Â
cdeclŸ
ÇTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]µ
wUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]] 
builtins.bytes"builtins.bytesï
aTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]í
VUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*R
require_writable:
Literal[builtins.bool]	
builtins.bool"builtins.bool 0:overloadXâ
from_buffercffi.api.FFI.from_buffer"4
_cffi_backend._CDataBase"_cffi_backend._CDataBase*&
self
cffi.api.FFI"cffi.api.FFI*°
cdeclï
aTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]í
VUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData"_typeshed.WriteableBuffer*P
require_writable:
Literal[builtins.bool]	
builtins.bool"builtins.bool0:overloadX⁄
from_buffercffi.api.FFI.from_buffer"4
_cffi_backend._CDataBase"_cffi_backend._CDataBase*&
self
cffi.api.FFI"cffi.api.FFI*Ä
cdeclu
'Union[builtins.str,_cffi_backend.CType]
builtins.str"builtins.str*
_cffi_backend.CType"_cffi_backend.CType*Ì
python_bufferŸ
ÇTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]µ
wUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]] 
builtins.bytes"builtins.bytesï
aTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]í
VUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*R
require_writable:
Literal[builtins.bool]	
builtins.bool"builtins.bool 0:overloadXî
from_buffercffi.api.FFI.from_buffer"4
_cffi_backend._CDataBase"_cffi_backend._CDataBase*&
self
cffi.api.FFI"cffi.api.FFI*Ä
cdeclu
'Union[builtins.str,_cffi_backend.CType]
builtins.str"builtins.str*
_cffi_backend.CType"_cffi_backend.CType*©
python_bufferï
aTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]í
VUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData"_typeshed.WriteableBuffer*P
require_writable:
Literal[builtins.bool]	
builtins.bool"builtins.bool0:overloadX"36"372®
from_buffercffi.api.FFI.from_bufferÃ
from_buffercffi.api.FFI.from_buffer"4
_cffi_backend._CDataBase"_cffi_backend._CDataBase*&
self
cffi.api.FFI"cffi.api.FFI*‚
cdecl÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*R
require_writable:
Literal[builtins.bool]	
builtins.bool"builtins.bool 0:overloadX›
from_buffercffi.api.FFI.from_buffer"4
_cffi_backend._CDataBase"_cffi_backend._CDataBase*&
self
cffi.api.FFI"cffi.api.FFI*ı
cdeclÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer*P
require_writable:
Literal[builtins.bool]	
builtins.bool"builtins.bool0:overloadX◊	
from_buffercffi.api.FFI.from_buffer"4
_cffi_backend._CDataBase"_cffi_backend._CDataBase*&
self
cffi.api.FFI"cffi.api.FFI*Ä
cdeclu
'Union[builtins.str,_cffi_backend.CType]
builtins.str"builtins.str*
_cffi_backend.CType"_cffi_backend.CType*Í
python_buffer÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*R
require_writable:
Literal[builtins.bool]	
builtins.bool"builtins.bool 0:overloadXË
from_buffercffi.api.FFI.from_buffer"4
_cffi_backend._CDataBase"_cffi_backend._CDataBase*&
self
cffi.api.FFI"cffi.api.FFI*Ä
cdeclu
'Union[builtins.str,_cffi_backend.CType]
builtins.str"builtins.str*
_cffi_backend.CType"_cffi_backend.CType*˝
python_bufferÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer*P
require_writable:
Literal[builtins.bool]	
builtins.bool"builtins.bool0:overloadX"38"39"3102Î
callbackcffi.api.FFI.callback˜
callbackcffi.api.FFI.callback"K
CallableType[builtins.function]&
builtins.function"builtins.function*&
self
cffi.api.FFI"cffi.api.FFI*Ä
cdeclu
'Union[builtins.str,_cffi_backend.CType]
builtins.str"builtins.str*
_cffi_backend.CType"_cffi_backend.CType*
python_callable
None *
error
Any *ñ
onerrorÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None 0:overloadX∏
callbackcffi.api.FFI.callback"K
CallableType[builtins.function]&
builtins.function"builtins.function*&
self
cffi.api.FFI"cffi.api.FFI*Ä
cdeclu
'Union[builtins.str,_cffi_backend.CType]
builtins.str"builtins.str*
_cffi_backend.CType"_cffi_backend.CType*`
python_callableK
CallableType[builtins.function]&
builtins.function"builtins.function*
error
Any *ñ
onerrorÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None 0:overloadX"36"37"38"39"3102”
gccffi.api.FFI.gc…
gccffi.api.FFI.gc"4
_cffi_backend._CDataBase"_cffi_backend._CDataBase*&
self
cffi.api.FFI"cffi.api.FFI*?
cdata4
_cffi_backend._CDataBase"_cffi_backend._CDataBase*[

destructorK
CallableType[builtins.function]&
builtins.function"builtins.function*(
size
builtins.int"builtins.int 0:overloadX⁄
gccffi.api.FFI.gc"
None*&
self
cffi.api.FFI"cffi.api.FFI*?
cdata4
_cffi_backend._CDataBase"_cffi_backend._CDataBase*

destructor
None*(
size
builtins.int"builtins.int 0:overloadX"36"37"38"39"310j36j37j38j39j310r^
BVoidPcffi.api.FFI.BVoidP*
_cffi_backend.CType"_cffi_backend.CType*36*37*38*39*310r^
BCharAcffi.api.FFI.BCharA*
_cffi_backend.CType"_cffi_backend.CType*36*37*38*39*310rZ
NULLcffi.api.FFI.NULL*
_cffi_backend.CType"_cffi_backend.CType*36*37*38*39*310rN
errnocffi.api.FFI.errno
builtins.int"builtins.int*36*37*38*39*310*ô
__annotations__cffi.api.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*36*37*38*39*310*-
	distutils	distutils *36*37*38*39*310