
torch.ao.quantization.fxÚ
prepare(torch.ao.quantization.fx.prepare.prepare"F
!torch.fx.graph_module.GraphModule"!torch.fx.graph_module.GraphModule*Q
modelF
!torch.fx.graph_module.GraphModule"!torch.fx.graph_module.GraphModule*¼
qconfig_mapping¦
[Union[torch.ao.quantization.qconfig_mapping.QConfigMapping,builtins.dict[builtins.str,Any]]l
4torch.ao.quantization.qconfig_mapping.QConfigMapping"4torch.ao.quantization.qconfig_mapping.QConfigMappingW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict**
is_qat
builtins.bool"builtins.bool*ê
node_name_to_scopeÑ
=builtins.dict[builtins.str,Tuple[builtins.str,builtins.type]]
builtins.str"builtins.strc
!Tuple[builtins.str,builtins.type]
builtins.str"builtins.str
builtins.type"builtins.type"builtins.dict*B
example_inputs.
builtins.tuple[Any]
Any"builtins.tuple*å
prepare_custom_configÇ
fUnion[torch.ao.quantization.fx.custom_config.PrepareCustomConfig,builtins.dict[builtins.str,Any],None]x
:torch.ao.quantization.fx.custom_config.PrepareCustomConfig":torch.ao.quantization.fx.custom_config.PrepareCustomConfigW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *Ò
_equalization_configµ
`Union[torch.ao.quantization.qconfig_mapping.QConfigMapping,builtins.dict[builtins.str,Any],None]l
4torch.ao.quantization.qconfig_mapping.QConfigMapping"4torch.ao.quantization.qconfig_mapping.QConfigMappingW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *ô
backend_configÝ
mUnion[torch.ao.quantization.backend_config.backend_config.BackendConfig,builtins.dict[builtins.str,Any],None]†
Atorch.ao.quantization.backend_config.backend_config.BackendConfig"Atorch.ao.quantization.backend_config.backend_config.BackendConfigW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *:
is_standalone_module
builtins.bool"builtins.bool Þ
convert(torch.ao.quantization.fx.convert.convert"F
!torch.fx.graph_module.GraphModule"!torch.fx.graph_module.GraphModule*Q
modelF
!torch.fx.graph_module.GraphModule"!torch.fx.graph_module.GraphModule*2
is_reference
builtins.bool"builtins.bool *å
convert_custom_configÇ
fUnion[torch.ao.quantization.fx.custom_config.ConvertCustomConfig,builtins.dict[builtins.str,Any],None]x
:torch.ao.quantization.fx.custom_config.ConvertCustomConfig":torch.ao.quantization.fx.custom_config.ConvertCustomConfigW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *:
is_standalone_module
builtins.bool"builtins.bool *:
_remove_qconfig_flag
builtins.bool"builtins.bool *Í
qconfig_mappingµ
`Union[torch.ao.quantization.qconfig_mapping.QConfigMapping,builtins.dict[builtins.str,Any],None]l
4torch.ao.quantization.qconfig_mapping.QConfigMapping"4torch.ao.quantization.qconfig_mapping.QConfigMappingW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *ô
backend_configÝ
mUnion[torch.ao.quantization.backend_config.backend_config.BackendConfig,builtins.dict[builtins.str,Any],None]†
Atorch.ao.quantization.backend_config.backend_config.BackendConfig"Atorch.ao.quantization.backend_config.backend_config.BackendConfigW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *3
is_decomposed
builtins.bool"builtins.bool Ä
fuse"torch.ao.quantization.fx.fuse.fuse"F
!torch.fx.graph_module.GraphModule"!torch.fx.graph_module.GraphModule*Q
modelF
!torch.fx.graph_module.GraphModule"!torch.fx.graph_module.GraphModule**
is_qat
builtins.bool"builtins.bool*Ù
fuse_custom_config¾
cUnion[torch.ao.quantization.fx.custom_config.FuseCustomConfig,builtins.dict[builtins.str,Any],None]r
7torch.ao.quantization.fx.custom_config.FuseCustomConfig"7torch.ao.quantization.fx.custom_config.FuseCustomConfigW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *ô
backend_configÝ
mUnion[torch.ao.quantization.backend_config.backend_config.BackendConfig,builtins.dict[builtins.str,Any],None]†
Atorch.ao.quantization.backend_config.backend_config.BackendConfig"Atorch.ao.quantization.backend_config.backend_config.BackendConfigW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *y
__path__!torch.ao.quantization.fx.__path__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*”
__annotations__(torch.ao.quantization.fx.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict