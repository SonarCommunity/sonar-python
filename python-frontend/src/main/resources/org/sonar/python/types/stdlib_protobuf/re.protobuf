
re˜
errorsre_constants.error"builtins.Exception*¸
__init__sre_constants.error.__init__"
None*4
self*
sre_constants.error"sre_constants.error*%
msg
builtins.str"builtins.str*Ñ
patternu
'Union[builtins.str,builtins.bytes,None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
None *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None z36z37z38z39z310j36j37j38j39j310rQ
msgsre_constants.error.msg
builtins.str"builtins.str*36*37*38*39*310r≤
patternsre_constants.error.patternu
'Union[builtins.str,builtins.bytes,None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
None*36*37*38*39*310ry
possre_constants.error.posD
Union[builtins.int,None]
builtins.int"builtins.int
None*36*37*38*39*310rW
linenosre_constants.error.lineno
builtins.int"builtins.int*36*37*38*39*310rU
colnosre_constants.error.colno
builtins.int"builtins.int*36*37*38*39*310§@
Matchre.Match"builtins.object*ñ
posre.Match.pos"
builtins.int"builtins.int*@
self6
re.Match[typing.AnyStr]
typing.AnyStr"re.Match0:property`z36z37z38z39z310*ú
endposre.Match.endpos"
builtins.int"builtins.int*@
self6
re.Match[typing.AnyStr]
typing.AnyStr"re.Match0:property`z36z37z38z39z310* 
	lastindexre.Match.lastindex"D
Union[builtins.int,None]
builtins.int"builtins.int
None*@
self6
re.Match[typing.AnyStr]
typing.AnyStr"re.Match0:property`z36z37z38z39z310* 
	lastgroupre.Match.lastgroup"D
Union[builtins.str,None]
builtins.str"builtins.str
None*@
self6
re.Match[typing.AnyStr]
typing.AnyStr"re.Match0:property`z36z37z38z39z310*ë
stringre.Match.string"
typing.AnyStr*@
self6
re.Match[typing.AnyStr]
typing.AnyStr"re.Match0:property`z36z37z38z39z310*≤
rere.Match.re":
re.Pattern[typing.AnyStr]
typing.AnyStr"
re.Pattern*@
self6
re.Match[typing.AnyStr]
typing.AnyStr"re.Match0:property`z36z37z38z39z310*Ú
startre.Match.start"
builtins.int"builtins.int*@
self6
re.Match[typing.AnyStr]
typing.AnyStr"re.Match*d`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str z36z37z38z39z310*Ó
endre.Match.end"
builtins.int"builtins.int*@
self6
re.Match[typing.AnyStr]
typing.AnyStr"re.Match*d`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str z36z37z38z39z310*¥
spanre.Match.span"`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int*@
self6
re.Match[typing.AnyStr]
typing.AnyStr"re.Match*d`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str z36z37z38z39z310*°
regsre.Match.regs"§
0builtins.tuple[Tuple[builtins.int,builtins.int]]`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int"builtins.tuple*@
self6
re.Match[typing.AnyStr]
typing.AnyStr"re.Match0:property`z36z37z38z39z310*¨
__copy__re.Match.__copy__"6
re.Match[typing.AnyStr]
typing.AnyStr"re.Match*@
self6
re.Match[typing.AnyStr]
typing.AnyStr"re.Matchz36z37z38z39z310*ø
__deepcopy__re.Match.__deepcopy__"6
re.Match[typing.AnyStr]
typing.AnyStr"re.Match*@
self6
re.Match[typing.AnyStr]
typing.AnyStr"re.Match*	
Anyz36z37z38z39z310*€
__class_getitem__re.Match.__class_getitem__"(
types.GenericAlias"types.GenericAlias*b
clsY
Type[re.Match[typing.AnyStr]]6
re.Match[typing.AnyStr]
typing.AnyStr"re.Match*
item
Anypz39z3102ê

expandre.Match.expandΩ
expandre.Match.expand"
builtins.str"builtins.str*J
self@
re.Match[builtins.str]
builtins.str"builtins.str"re.Match**
template
builtins.str"builtins.str0:overloadXå
expandre.Match.expand" 
builtins.bytes"builtins.bytes*P
selfF
re.Match[builtins.bytes] 
builtins.bytes"builtins.bytes"re.Match*Ó
templateﬂ
ÉTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]]]∫
xUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]] 
builtins.bytes"builtins.bytesô
bTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]ï
WUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer0:overloadXù
expandre.Match.expand"
typing.AnyStr*@
self6
re.Match[typing.AnyStr]
typing.AnyStr"re.Match*
template
typing.AnyStr0:overloadX"36"372í
expandre.Match.expandΩ
expandre.Match.expand"
builtins.str"builtins.str*J
self@
re.Match[builtins.str]
builtins.str"builtins.str"re.Match**
template
builtins.str"builtins.str0:overloadXâ
expandre.Match.expand" 
builtins.bytes"builtins.bytes*P
selfF
re.Match[builtins.bytes] 
builtins.bytes"builtins.bytes"re.Match*Î
template‹
óTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]]]£
åUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÌ
vTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]’
kUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer0:overloadXù
expandre.Match.expand"
typing.AnyStr*@
self6
re.Match[typing.AnyStr]
typing.AnyStr"re.Match*
template
typing.AnyStr0:overloadX"38"39"3102Ñ
groupre.Match.group∑
groupre.Match.group"
typing.AnyStr*@
self6
re.Match[typing.AnyStr]
typing.AnyStr"re.Match*;7
Literal[builtins.int]	
builtins.int"builtins.int 0:overloadXÖ
groupre.Match.group"8
Union[typing.AnyStr,Any]
typing.AnyStr
Any*@
self6
re.Match[typing.AnyStr]
typing.AnyStr"re.Match*b`
 Union[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int0:overloadXì
groupre.Match.group"t
(builtins.tuple[Union[typing.AnyStr,Any]]8
Union[typing.AnyStr,Any]
typing.AnyStr
Any"builtins.tuple*@
self6
re.Match[typing.AnyStr]
typing.AnyStr"re.Match*b`
 Union[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int*b`
 Union[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int*l
groups`
 Union[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int0:overloadX"36"37"38"39"3102ê
groupsre.Match.groupsﬂ
groupsre.Match.groups"t
(builtins.tuple[Union[typing.AnyStr,Any]]8
Union[typing.AnyStr,Any]
typing.AnyStr
Any"builtins.tuple*@
self6
re.Match[typing.AnyStr]
typing.AnyStr"re.Match0:overloadX˝
groupsre.Match.groups"z
*builtins.tuple[Union[typing.AnyStr,re._T]]<
Union[typing.AnyStr,re._T]
typing.AnyStr	
re._T"builtins.tuple*@
self6
re.Match[typing.AnyStr]
typing.AnyStr"re.Match*
default	
re._T0:overloadX"36"37"38"39"3102ˆ
	groupdictre.Match.groupdictè
	groupdictre.Match.groupdict"ù
4builtins.dict[builtins.str,Union[typing.AnyStr,Any]]
builtins.str"builtins.str8
Union[typing.AnyStr,Any]
typing.AnyStr
Any"builtins.dict*@
self6
re.Match[typing.AnyStr]
typing.AnyStr"re.Match0:overloadX≠
	groupdictre.Match.groupdict"£
6builtins.dict[builtins.str,Union[typing.AnyStr,re._T]]
builtins.str"builtins.str<
Union[typing.AnyStr,re._T]
typing.AnyStr	
re._T"builtins.dict*@
self6
re.Match[typing.AnyStr]
typing.AnyStr"re.Match*
default	
re._T0:overloadX"36"37"38"39"3102Ä
__getitem__re.Match.__getitem__π
__getitem__re.Match.__getitem__"
typing.AnyStr*86
re.Match[typing.AnyStr]
typing.AnyStr"re.Match*97
Literal[builtins.int]	
builtins.int"builtins.int0:overloadXâ
__getitem__re.Match.__getitem__"8
Union[typing.AnyStr,Any]
typing.AnyStr
Any*86
re.Match[typing.AnyStr]
typing.AnyStr"re.Match*b`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str0:overloadX"36"37"38"39"3108Pj36j37j38j39j310ÿó
Pattern
re.Pattern"builtins.object*†
flagsre.Pattern.flags"
builtins.int"builtins.int*D
self:
re.Pattern[typing.AnyStr]
typing.AnyStr"
re.Pattern0:property`z36z37z38z39z310*Ö

groupindexre.Pattern.groupindex"w
)typing.Mapping[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int"typing.Mapping*D
self:
re.Pattern[typing.AnyStr]
typing.AnyStr"
re.Pattern0:property`z36z37z38z39z310*¢
groupsre.Pattern.groups"
builtins.int"builtins.int*D
self:
re.Pattern[typing.AnyStr]
typing.AnyStr"
re.Pattern0:property`z36z37z38z39z310*ô
patternre.Pattern.pattern"
typing.AnyStr*D
self:
re.Pattern[typing.AnyStr]
typing.AnyStr"
re.Pattern0:property`z36z37z38z39z310*∂
__copy__re.Pattern.__copy__":
re.Pattern[typing.AnyStr]
typing.AnyStr"
re.Pattern*D
self:
re.Pattern[typing.AnyStr]
typing.AnyStr"
re.Patternz36z37z38z39z310*…
__deepcopy__re.Pattern.__deepcopy__":
re.Pattern[typing.AnyStr]
typing.AnyStr"
re.Pattern*D
self:
re.Pattern[typing.AnyStr]
typing.AnyStr"
re.Pattern*	
Anyz36z37z38z39z310*„
__class_getitem__re.Pattern.__class_getitem__"(
types.GenericAlias"types.GenericAlias*h
cls_
Type[re.Pattern[typing.AnyStr]]:
re.Pattern[typing.AnyStr]
typing.AnyStr"
re.Pattern*
item
Anypz39z3102•
searchre.Pattern.searchÏ
searchre.Pattern.search"r
"Union[re.Match[builtins.str],None]@
re.Match[builtins.str]
builtins.str"builtins.str"re.Match
None*N
selfD
re.Pattern[builtins.str]
builtins.str"builtins.str"
re.Pattern*(
string
builtins.str"builtins.str*'
pos
builtins.int"builtins.int **
endpos
builtins.int"builtins.int 0:overloadXø
searchre.Pattern.search"z
$Union[re.Match[builtins.bytes],None]F
re.Match[builtins.bytes] 
builtins.bytes"builtins.bytes"re.Match
None*T
selfJ
re.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"
re.Pattern*Ï
stringﬂ
ÉTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]]]∫
xUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]] 
builtins.bytes"builtins.bytesô
bTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]ï
WUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*'
pos
builtins.int"builtins.int **
endpos
builtins.int"builtins.int 0:overloadXŒ
searchre.Pattern.search"i
#Union[re.Match[typing.AnyStr],None]6
re.Match[typing.AnyStr]
typing.AnyStr"re.Match
None*D
self:
re.Pattern[typing.AnyStr]
typing.AnyStr"
re.Pattern*
string
typing.AnyStr*'
pos
builtins.int"builtins.int **
endpos
builtins.int"builtins.int 0:overloadX"36"372ß
searchre.Pattern.searchÏ
searchre.Pattern.search"r
"Union[re.Match[builtins.str],None]@
re.Match[builtins.str]
builtins.str"builtins.str"re.Match
None*N
selfD
re.Pattern[builtins.str]
builtins.str"builtins.str"
re.Pattern*(
string
builtins.str"builtins.str*'
pos
builtins.int"builtins.int **
endpos
builtins.int"builtins.int 0:overloadXº	
searchre.Pattern.search"z
$Union[re.Match[builtins.bytes],None]F
re.Match[builtins.bytes] 
builtins.bytes"builtins.bytes"re.Match
None*T
selfJ
re.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"
re.Pattern*È
string‹
óTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]]]£
åUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÌ
vTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]’
kUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*'
pos
builtins.int"builtins.int **
endpos
builtins.int"builtins.int 0:overloadXŒ
searchre.Pattern.search"i
#Union[re.Match[typing.AnyStr],None]6
re.Match[typing.AnyStr]
typing.AnyStr"re.Match
None*D
self:
re.Pattern[typing.AnyStr]
typing.AnyStr"
re.Pattern*
string
typing.AnyStr*'
pos
builtins.int"builtins.int **
endpos
builtins.int"builtins.int 0:overloadX"38"39"3102ù
matchre.Pattern.matchÍ
matchre.Pattern.match"r
"Union[re.Match[builtins.str],None]@
re.Match[builtins.str]
builtins.str"builtins.str"re.Match
None*N
selfD
re.Pattern[builtins.str]
builtins.str"builtins.str"
re.Pattern*(
string
builtins.str"builtins.str*'
pos
builtins.int"builtins.int **
endpos
builtins.int"builtins.int 0:overloadXΩ
matchre.Pattern.match"z
$Union[re.Match[builtins.bytes],None]F
re.Match[builtins.bytes] 
builtins.bytes"builtins.bytes"re.Match
None*T
selfJ
re.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"
re.Pattern*Ï
stringﬂ
ÉTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]]]∫
xUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]] 
builtins.bytes"builtins.bytesô
bTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]ï
WUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*'
pos
builtins.int"builtins.int **
endpos
builtins.int"builtins.int 0:overloadXÃ
matchre.Pattern.match"i
#Union[re.Match[typing.AnyStr],None]6
re.Match[typing.AnyStr]
typing.AnyStr"re.Match
None*D
self:
re.Pattern[typing.AnyStr]
typing.AnyStr"
re.Pattern*
string
typing.AnyStr*'
pos
builtins.int"builtins.int **
endpos
builtins.int"builtins.int 0:overloadX"36"372ü
matchre.Pattern.matchÍ
matchre.Pattern.match"r
"Union[re.Match[builtins.str],None]@
re.Match[builtins.str]
builtins.str"builtins.str"re.Match
None*N
selfD
re.Pattern[builtins.str]
builtins.str"builtins.str"
re.Pattern*(
string
builtins.str"builtins.str*'
pos
builtins.int"builtins.int **
endpos
builtins.int"builtins.int 0:overloadX∫	
matchre.Pattern.match"z
$Union[re.Match[builtins.bytes],None]F
re.Match[builtins.bytes] 
builtins.bytes"builtins.bytes"re.Match
None*T
selfJ
re.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"
re.Pattern*È
string‹
óTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]]]£
åUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÌ
vTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]’
kUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*'
pos
builtins.int"builtins.int **
endpos
builtins.int"builtins.int 0:overloadXÃ
matchre.Pattern.match"i
#Union[re.Match[typing.AnyStr],None]6
re.Match[typing.AnyStr]
typing.AnyStr"re.Match
None*D
self:
re.Pattern[typing.AnyStr]
typing.AnyStr"
re.Pattern*
string
typing.AnyStr*'
pos
builtins.int"builtins.int **
endpos
builtins.int"builtins.int 0:overloadX"38"39"3102Ω
	fullmatchre.Pattern.fullmatchÚ
	fullmatchre.Pattern.fullmatch"r
"Union[re.Match[builtins.str],None]@
re.Match[builtins.str]
builtins.str"builtins.str"re.Match
None*N
selfD
re.Pattern[builtins.str]
builtins.str"builtins.str"
re.Pattern*(
string
builtins.str"builtins.str*'
pos
builtins.int"builtins.int **
endpos
builtins.int"builtins.int 0:overloadX≈
	fullmatchre.Pattern.fullmatch"z
$Union[re.Match[builtins.bytes],None]F
re.Match[builtins.bytes] 
builtins.bytes"builtins.bytes"re.Match
None*T
selfJ
re.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"
re.Pattern*Ï
stringﬂ
ÉTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]]]∫
xUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]] 
builtins.bytes"builtins.bytesô
bTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]ï
WUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*'
pos
builtins.int"builtins.int **
endpos
builtins.int"builtins.int 0:overloadX‘
	fullmatchre.Pattern.fullmatch"i
#Union[re.Match[typing.AnyStr],None]6
re.Match[typing.AnyStr]
typing.AnyStr"re.Match
None*D
self:
re.Pattern[typing.AnyStr]
typing.AnyStr"
re.Pattern*
string
typing.AnyStr*'
pos
builtins.int"builtins.int **
endpos
builtins.int"builtins.int 0:overloadX"36"372ø
	fullmatchre.Pattern.fullmatchÚ
	fullmatchre.Pattern.fullmatch"r
"Union[re.Match[builtins.str],None]@
re.Match[builtins.str]
builtins.str"builtins.str"re.Match
None*N
selfD
re.Pattern[builtins.str]
builtins.str"builtins.str"
re.Pattern*(
string
builtins.str"builtins.str*'
pos
builtins.int"builtins.int **
endpos
builtins.int"builtins.int 0:overloadX¬	
	fullmatchre.Pattern.fullmatch"z
$Union[re.Match[builtins.bytes],None]F
re.Match[builtins.bytes] 
builtins.bytes"builtins.bytes"re.Match
None*T
selfJ
re.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"
re.Pattern*È
string‹
óTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]]]£
åUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÌ
vTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]’
kUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*'
pos
builtins.int"builtins.int **
endpos
builtins.int"builtins.int 0:overloadX‘
	fullmatchre.Pattern.fullmatch"i
#Union[re.Match[typing.AnyStr],None]6
re.Match[typing.AnyStr]
typing.AnyStr"re.Match
None*D
self:
re.Pattern[typing.AnyStr]
typing.AnyStr"
re.Pattern*
string
typing.AnyStr*'
pos
builtins.int"builtins.int **
endpos
builtins.int"builtins.int 0:overloadX"38"39"3102ƒ
splitre.Pattern.splitÃ
splitre.Pattern.split"{
&builtins.list[Union[builtins.str,Any]]B
Union[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.list*N
selfD
re.Pattern[builtins.str]
builtins.str"builtins.str"
re.Pattern*(
string
builtins.str"builtins.str*,
maxsplit
builtins.int"builtins.int 0:overloadX†
splitre.Pattern.split"É
(builtins.list[Union[builtins.bytes,Any]]H
Union[builtins.bytes,Any] 
builtins.bytes"builtins.bytes
Any"builtins.list*T
selfJ
re.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"
re.Pattern*Ï
stringﬂ
ÉTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]]]∫
xUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]] 
builtins.bytes"builtins.bytesô
bTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]ï
WUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*,
maxsplit
builtins.int"builtins.int 0:overloadXÆ
splitre.Pattern.split"r
'builtins.list[Union[typing.AnyStr,Any]]8
Union[typing.AnyStr,Any]
typing.AnyStr
Any"builtins.list*D
self:
re.Pattern[typing.AnyStr]
typing.AnyStr"
re.Pattern*
string
typing.AnyStr*,
maxsplit
builtins.int"builtins.int 0:overloadX"36"372∆
splitre.Pattern.splitÃ
splitre.Pattern.split"{
&builtins.list[Union[builtins.str,Any]]B
Union[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.list*N
selfD
re.Pattern[builtins.str]
builtins.str"builtins.str"
re.Pattern*(
string
builtins.str"builtins.str*,
maxsplit
builtins.int"builtins.int 0:overloadXù	
splitre.Pattern.split"É
(builtins.list[Union[builtins.bytes,Any]]H
Union[builtins.bytes,Any] 
builtins.bytes"builtins.bytes
Any"builtins.list*T
selfJ
re.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"
re.Pattern*È
string‹
óTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]]]£
åUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÌ
vTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]’
kUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*,
maxsplit
builtins.int"builtins.int 0:overloadXÆ
splitre.Pattern.split"r
'builtins.list[Union[typing.AnyStr,Any]]8
Union[typing.AnyStr,Any]
typing.AnyStr
Any"builtins.list*D
self:
re.Pattern[typing.AnyStr]
typing.AnyStr"
re.Pattern*
string
typing.AnyStr*,
maxsplit
builtins.int"builtins.int 0:overloadX"38"39"3102
findallre.Pattern.findall®
findallre.Pattern.findall",
builtins.list[Any]
Any"builtins.list*N
selfD
re.Pattern[builtins.str]
builtins.str"builtins.str"
re.Pattern*(
string
builtins.str"builtins.str*'
pos
builtins.int"builtins.int **
endpos
builtins.int"builtins.int 0:overloadXÛ
findallre.Pattern.findall",
builtins.list[Any]
Any"builtins.list*T
selfJ
re.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"
re.Pattern*Ï
stringﬂ
ÉTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]]]∫
xUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]] 
builtins.bytes"builtins.bytesô
bTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]ï
WUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*'
pos
builtins.int"builtins.int **
endpos
builtins.int"builtins.int 0:overloadXß
findallre.Pattern.findall"@
builtins.list[typing.AnyStr]
typing.AnyStr"builtins.list*D
self:
re.Pattern[typing.AnyStr]
typing.AnyStr"
re.Pattern*
string
typing.AnyStr*'
pos
builtins.int"builtins.int **
endpos
builtins.int"builtins.int 0:overloadX"36"372Ú
findallre.Pattern.findall®
findallre.Pattern.findall",
builtins.list[Any]
Any"builtins.list*N
selfD
re.Pattern[builtins.str]
builtins.str"builtins.str"
re.Pattern*(
string
builtins.str"builtins.str*'
pos
builtins.int"builtins.int **
endpos
builtins.int"builtins.int 0:overloadX
findallre.Pattern.findall",
builtins.list[Any]
Any"builtins.list*T
selfJ
re.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"
re.Pattern*È
string‹
óTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]]]£
åUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÌ
vTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]’
kUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*'
pos
builtins.int"builtins.int **
endpos
builtins.int"builtins.int 0:overloadXß
findallre.Pattern.findall"@
builtins.list[typing.AnyStr]
typing.AnyStr"builtins.list*D
self:
re.Pattern[typing.AnyStr]
typing.AnyStr"
re.Pattern*
string
typing.AnyStr*'
pos
builtins.int"builtins.int **
endpos
builtins.int"builtins.int 0:overloadX"38"39"3102‘
finditerre.Pattern.finditer˙
finditerre.Pattern.finditer"|
'typing.Iterator[re.Match[builtins.str]]@
re.Match[builtins.str]
builtins.str"builtins.str"re.Match"typing.Iterator*N
selfD
re.Pattern[builtins.str]
builtins.str"builtins.str"
re.Pattern*(
string
builtins.str"builtins.str*'
pos
builtins.int"builtins.int **
endpos
builtins.int"builtins.int 0:overloadXŒ
finditerre.Pattern.finditer"Ñ
)typing.Iterator[re.Match[builtins.bytes]]F
re.Match[builtins.bytes] 
builtins.bytes"builtins.bytes"re.Match"typing.Iterator*T
selfJ
re.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"
re.Pattern*Ï
stringﬂ
ÉTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]]]∫
xUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]] 
builtins.bytes"builtins.bytesô
bTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]ï
WUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*'
pos
builtins.int"builtins.int **
endpos
builtins.int"builtins.int 0:overloadX‹
finditerre.Pattern.finditer"s
(typing.Iterator[re.Match[typing.AnyStr]]6
re.Match[typing.AnyStr]
typing.AnyStr"re.Match"typing.Iterator*D
self:
re.Pattern[typing.AnyStr]
typing.AnyStr"
re.Pattern*
string
typing.AnyStr*'
pos
builtins.int"builtins.int **
endpos
builtins.int"builtins.int 0:overloadX"36"372÷
finditerre.Pattern.finditer˙
finditerre.Pattern.finditer"|
'typing.Iterator[re.Match[builtins.str]]@
re.Match[builtins.str]
builtins.str"builtins.str"re.Match"typing.Iterator*N
selfD
re.Pattern[builtins.str]
builtins.str"builtins.str"
re.Pattern*(
string
builtins.str"builtins.str*'
pos
builtins.int"builtins.int **
endpos
builtins.int"builtins.int 0:overloadXÀ	
finditerre.Pattern.finditer"Ñ
)typing.Iterator[re.Match[builtins.bytes]]F
re.Match[builtins.bytes] 
builtins.bytes"builtins.bytes"re.Match"typing.Iterator*T
selfJ
re.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"
re.Pattern*È
string‹
óTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]]]£
åUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÌ
vTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]’
kUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*'
pos
builtins.int"builtins.int **
endpos
builtins.int"builtins.int 0:overloadX‹
finditerre.Pattern.finditer"s
(typing.Iterator[re.Match[typing.AnyStr]]6
re.Match[typing.AnyStr]
typing.AnyStr"re.Match"typing.Iterator*D
self:
re.Pattern[typing.AnyStr]
typing.AnyStr"
re.Pattern*
string
typing.AnyStr*'
pos
builtins.int"builtins.int **
endpos
builtins.int"builtins.int 0:overloadX"38"39"3102…
subre.Pattern.subñ
subre.Pattern.sub"
builtins.str"builtins.str*N
selfD
re.Pattern[builtins.str]
builtins.str"builtins.str"
re.Pattern*≠
repl¢
3Union[builtins.str,CallableType[builtins.function]]
builtins.str"builtins.strK
CallableType[builtins.function]&
builtins.function"builtins.function*(
string
builtins.str"builtins.str*)
count
builtins.int"builtins.int 0:overloadX°
subre.Pattern.sub" 
builtins.bytes"builtins.bytes*T
selfJ
re.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"
re.Pattern*È
replﬁ
™Union[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]]],CallableType[builtins.function]]ﬂ
ÉTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]]]∫
xUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]] 
builtins.bytes"builtins.bytesô
bTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]ï
WUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBufferK
CallableType[builtins.function]&
builtins.function"builtins.function*Ï
stringﬂ
ÉTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]]]∫
xUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]] 
builtins.bytes"builtins.bytesô
bTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]ï
WUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*)
count
builtins.int"builtins.int 0:overloadXÏ
subre.Pattern.sub"
typing.AnyStr*D
self:
re.Pattern[typing.AnyStr]
typing.AnyStr"
re.Pattern*£
replò
4Union[typing.AnyStr,CallableType[builtins.function]]
typing.AnyStrK
CallableType[builtins.function]&
builtins.function"builtins.function*
string
typing.AnyStr*)
count
builtins.int"builtins.int 0:overloadX"36"372‹
subre.Pattern.subñ
subre.Pattern.sub"
builtins.str"builtins.str*N
selfD
re.Pattern[builtins.str]
builtins.str"builtins.str"
re.Pattern*≠
repl¢
3Union[builtins.str,CallableType[builtins.function]]
builtins.str"builtins.strK
CallableType[builtins.function]&
builtins.function"builtins.function*(
string
builtins.str"builtins.str*)
count
builtins.int"builtins.int 0:overloadXØ
subre.Pattern.sub" 
builtins.bytes"builtins.bytes*T
selfJ
re.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"
re.Pattern*˙
replÔ
æUnion[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]]],CallableType[builtins.function]]‹
óTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]]]£
åUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÌ
vTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]’
kUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBufferK
CallableType[builtins.function]&
builtins.function"builtins.function*È
string‹
óTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]]]£
åUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÌ
vTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]’
kUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*)
count
builtins.int"builtins.int 0:overloadXÏ
subre.Pattern.sub"
typing.AnyStr*D
self:
re.Pattern[typing.AnyStr]
typing.AnyStr"
re.Pattern*£
replò
4Union[typing.AnyStr,CallableType[builtins.function]]
typing.AnyStrK
CallableType[builtins.function]&
builtins.function"builtins.function*
string
typing.AnyStr*)
count
builtins.int"builtins.int 0:overloadX"38"39"3102†
subnre.Pattern.subn‹
subnre.Pattern.subn"`
 Tuple[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int*N
selfD
re.Pattern[builtins.str]
builtins.str"builtins.str"
re.Pattern*≠
repl¢
3Union[builtins.str,CallableType[builtins.function]]
builtins.str"builtins.strK
CallableType[builtins.function]&
builtins.function"builtins.function*(
string
builtins.str"builtins.str*)
count
builtins.int"builtins.int 0:overloadXÈ
subnre.Pattern.subn"f
"Tuple[builtins.bytes,builtins.int] 
builtins.bytes"builtins.bytes
builtins.int"builtins.int*T
selfJ
re.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"
re.Pattern*È
replﬁ
™Union[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]]],CallableType[builtins.function]]ﬂ
ÉTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]]]∫
xUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]] 
builtins.bytes"builtins.bytesô
bTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]ï
WUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBufferK
CallableType[builtins.function]&
builtins.function"builtins.function*Ï
stringﬂ
ÉTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]]]∫
xUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]] 
builtins.bytes"builtins.bytesô
bTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]ï
WUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*)
count
builtins.int"builtins.int 0:overloadX≥
subnre.Pattern.subn"V
!Tuple[typing.AnyStr,builtins.int]
typing.AnyStr
builtins.int"builtins.int*D
self:
re.Pattern[typing.AnyStr]
typing.AnyStr"
re.Pattern*£
replò
4Union[typing.AnyStr,CallableType[builtins.function]]
typing.AnyStrK
CallableType[builtins.function]&
builtins.function"builtins.function*
string
typing.AnyStr*)
count
builtins.int"builtins.int 0:overloadX"36"372≥
subnre.Pattern.subn‹
subnre.Pattern.subn"`
 Tuple[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int*N
selfD
re.Pattern[builtins.str]
builtins.str"builtins.str"
re.Pattern*≠
repl¢
3Union[builtins.str,CallableType[builtins.function]]
builtins.str"builtins.strK
CallableType[builtins.function]&
builtins.function"builtins.function*(
string
builtins.str"builtins.str*)
count
builtins.int"builtins.int 0:overloadX˜
subnre.Pattern.subn"f
"Tuple[builtins.bytes,builtins.int] 
builtins.bytes"builtins.bytes
builtins.int"builtins.int*T
selfJ
re.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"
re.Pattern*˙
replÔ
æUnion[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]]],CallableType[builtins.function]]‹
óTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]]]£
åUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÌ
vTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]’
kUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBufferK
CallableType[builtins.function]&
builtins.function"builtins.function*È
string‹
óTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]]]£
åUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÌ
vTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]’
kUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*)
count
builtins.int"builtins.int 0:overloadX≥
subnre.Pattern.subn"V
!Tuple[typing.AnyStr,builtins.int]
typing.AnyStr
builtins.int"builtins.int*D
self:
re.Pattern[typing.AnyStr]
typing.AnyStr"
re.Pattern*£
replò
4Union[typing.AnyStr,CallableType[builtins.function]]
typing.AnyStrK
CallableType[builtins.function]&
builtins.function"builtins.function*
string
typing.AnyStr*)
count
builtins.int"builtins.int 0:overloadX"38"39"3108Pj36j37j38j39j310Ú

	RegexFlagre.RegexFlag"enum.IntFlagHj36j37j38j39j310rF
Are.RegexFlag.A
builtins.int"builtins.int*36*37*38*39*310rN
ASCIIre.RegexFlag.ASCII
builtins.int"builtins.int*36*37*38*39*310rN
DEBUGre.RegexFlag.DEBUG
builtins.int"builtins.int*36*37*38*39*310rF
Ire.RegexFlag.I
builtins.int"builtins.int*36*37*38*39*310rX

IGNORECASEre.RegexFlag.IGNORECASE
builtins.int"builtins.int*36*37*38*39*310rF
Lre.RegexFlag.L
builtins.int"builtins.int*36*37*38*39*310rP
LOCALEre.RegexFlag.LOCALE
builtins.int"builtins.int*36*37*38*39*310rF
Mre.RegexFlag.M
builtins.int"builtins.int*36*37*38*39*310rV
	MULTILINEre.RegexFlag.MULTILINE
builtins.int"builtins.int*36*37*38*39*310rF
Sre.RegexFlag.S
builtins.int"builtins.int*36*37*38*39*310rP
DOTALLre.RegexFlag.DOTALL
builtins.int"builtins.int*36*37*38*39*310rF
Xre.RegexFlag.X
builtins.int"builtins.int*36*37*38*39*310rR
VERBOSEre.RegexFlag.VERBOSE
builtins.int"builtins.int*36*37*38*39*310rF
Ure.RegexFlag.U
builtins.int"builtins.int*36*37*38*39*310rR
UNICODEre.RegexFlag.UNICODE
builtins.int"builtins.int*36*37*38*39*310rF
Tre.RegexFlag.T
builtins.int"builtins.int*36*37*38*39*310rT
TEMPLATEre.RegexFlag.TEMPLATE
builtins.int"builtins.int*36*37*38*39*310[
escape	re.escape"
typing.AnyStr*
pattern
typing.AnyStrz36z37z38z39z3100
purgere.purge"
Nonez36z37z38z39z310´
templatere.template":
re.Pattern[typing.AnyStr]
typing.AnyStr"
re.Pattern*è
patternÅ
.Union[typing.AnyStr,re.Pattern[typing.AnyStr]]
typing.AnyStr:
re.Pattern[typing.AnyStr]
typing.AnyStr"
re.Pattern*Æ
flags†
+TypeAlias[Union[builtins.int,re.RegexFlag]]`
 Union[builtins.int,re.RegexFlag]
builtins.int"builtins.int
re.RegexFlag"re.RegexFlag"re._FlagsType z36z37z38z39z310"π
compile
re.compile∞
compile
re.compile":
re.Pattern[typing.AnyStr]
typing.AnyStr"
re.Pattern*
pattern
typing.AnyStr*Æ
flags†
+TypeAlias[Union[builtins.int,re.RegexFlag]]`
 Union[builtins.int,re.RegexFlag]
builtins.int"builtins.int
re.RegexFlag"re.RegexFlag"re._FlagsType 0:overloadXŸ
compile
re.compile":
re.Pattern[typing.AnyStr]
typing.AnyStr"
re.Pattern*G
pattern:
re.Pattern[typing.AnyStr]
typing.AnyStr"
re.Pattern*Æ
flags†
+TypeAlias[Union[builtins.int,re.RegexFlag]]`
 Union[builtins.int,re.RegexFlag]
builtins.int"builtins.int
re.RegexFlag"re.RegexFlag"re._FlagsType 0:overloadX"36"37"38"39"310"¶
search	re.searchï
search	re.search"r
"Union[re.Match[builtins.str],None]@
re.Match[builtins.str]
builtins.str"builtins.str"re.Match
None*¢
patternî
,Union[builtins.str,re.Pattern[builtins.str]]
builtins.str"builtins.strD
re.Pattern[builtins.str]
builtins.str"builtins.str"
re.Pattern*(
string
builtins.str"builtins.str*Æ
flags†
+TypeAlias[Union[builtins.int,re.RegexFlag]]`
 Union[builtins.int,re.RegexFlag]
builtins.int"builtins.int
re.RegexFlag"re.RegexFlag"re._FlagsType 0:overloadX	
search	re.search"z
$Union[re.Match[builtins.bytes],None]F
re.Match[builtins.bytes] 
builtins.bytes"builtins.bytes"re.Match
None*∞
pattern¢
0Union[builtins.bytes,re.Pattern[builtins.bytes]] 
builtins.bytes"builtins.bytesJ
re.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"
re.Pattern*Ï
stringﬂ
ÉTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]]]∫
xUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]] 
builtins.bytes"builtins.bytesô
bTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]ï
WUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*Æ
flags†
+TypeAlias[Union[builtins.int,re.RegexFlag]]`
 Union[builtins.int,re.RegexFlag]
builtins.int"builtins.int
re.RegexFlag"re.RegexFlag"re._FlagsType 0:overloadX"36"37"®
search	re.searchï
search	re.search"r
"Union[re.Match[builtins.str],None]@
re.Match[builtins.str]
builtins.str"builtins.str"re.Match
None*¢
patternî
,Union[builtins.str,re.Pattern[builtins.str]]
builtins.str"builtins.strD
re.Pattern[builtins.str]
builtins.str"builtins.str"
re.Pattern*(
string
builtins.str"builtins.str*Æ
flags†
+TypeAlias[Union[builtins.int,re.RegexFlag]]`
 Union[builtins.int,re.RegexFlag]
builtins.int"builtins.int
re.RegexFlag"re.RegexFlag"re._FlagsType 0:overloadXÌ

search	re.search"z
$Union[re.Match[builtins.bytes],None]F
re.Match[builtins.bytes] 
builtins.bytes"builtins.bytes"re.Match
None*∞
pattern¢
0Union[builtins.bytes,re.Pattern[builtins.bytes]] 
builtins.bytes"builtins.bytesJ
re.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"
re.Pattern*È
string‹
óTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]]]£
åUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÌ
vTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]’
kUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*Æ
flags†
+TypeAlias[Union[builtins.int,re.RegexFlag]]`
 Union[builtins.int,re.RegexFlag]
builtins.int"builtins.int
re.RegexFlag"re.RegexFlag"re._FlagsType 0:overloadX"38"39"310"†
matchre.matchì
matchre.match"r
"Union[re.Match[builtins.str],None]@
re.Match[builtins.str]
builtins.str"builtins.str"re.Match
None*¢
patternî
,Union[builtins.str,re.Pattern[builtins.str]]
builtins.str"builtins.strD
re.Pattern[builtins.str]
builtins.str"builtins.str"
re.Pattern*(
string
builtins.str"builtins.str*Æ
flags†
+TypeAlias[Union[builtins.int,re.RegexFlag]]`
 Union[builtins.int,re.RegexFlag]
builtins.int"builtins.int
re.RegexFlag"re.RegexFlag"re._FlagsType 0:overloadXÓ	
matchre.match"z
$Union[re.Match[builtins.bytes],None]F
re.Match[builtins.bytes] 
builtins.bytes"builtins.bytes"re.Match
None*∞
pattern¢
0Union[builtins.bytes,re.Pattern[builtins.bytes]] 
builtins.bytes"builtins.bytesJ
re.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"
re.Pattern*Ï
stringﬂ
ÉTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]]]∫
xUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]] 
builtins.bytes"builtins.bytesô
bTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]ï
WUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*Æ
flags†
+TypeAlias[Union[builtins.int,re.RegexFlag]]`
 Union[builtins.int,re.RegexFlag]
builtins.int"builtins.int
re.RegexFlag"re.RegexFlag"re._FlagsType 0:overloadX"36"37"¢
matchre.matchì
matchre.match"r
"Union[re.Match[builtins.str],None]@
re.Match[builtins.str]
builtins.str"builtins.str"re.Match
None*¢
patternî
,Union[builtins.str,re.Pattern[builtins.str]]
builtins.str"builtins.strD
re.Pattern[builtins.str]
builtins.str"builtins.str"
re.Pattern*(
string
builtins.str"builtins.str*Æ
flags†
+TypeAlias[Union[builtins.int,re.RegexFlag]]`
 Union[builtins.int,re.RegexFlag]
builtins.int"builtins.int
re.RegexFlag"re.RegexFlag"re._FlagsType 0:overloadXÎ

matchre.match"z
$Union[re.Match[builtins.bytes],None]F
re.Match[builtins.bytes] 
builtins.bytes"builtins.bytes"re.Match
None*∞
pattern¢
0Union[builtins.bytes,re.Pattern[builtins.bytes]] 
builtins.bytes"builtins.bytesJ
re.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"
re.Pattern*È
string‹
óTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]]]£
åUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÌ
vTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]’
kUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*Æ
flags†
+TypeAlias[Union[builtins.int,re.RegexFlag]]`
 Union[builtins.int,re.RegexFlag]
builtins.int"builtins.int
re.RegexFlag"re.RegexFlag"re._FlagsType 0:overloadX"38"39"310"∏
	fullmatchre.fullmatchõ
	fullmatchre.fullmatch"r
"Union[re.Match[builtins.str],None]@
re.Match[builtins.str]
builtins.str"builtins.str"re.Match
None*¢
patternî
,Union[builtins.str,re.Pattern[builtins.str]]
builtins.str"builtins.strD
re.Pattern[builtins.str]
builtins.str"builtins.str"
re.Pattern*(
string
builtins.str"builtins.str*Æ
flags†
+TypeAlias[Union[builtins.int,re.RegexFlag]]`
 Union[builtins.int,re.RegexFlag]
builtins.int"builtins.int
re.RegexFlag"re.RegexFlag"re._FlagsType 0:overloadXˆ	
	fullmatchre.fullmatch"z
$Union[re.Match[builtins.bytes],None]F
re.Match[builtins.bytes] 
builtins.bytes"builtins.bytes"re.Match
None*∞
pattern¢
0Union[builtins.bytes,re.Pattern[builtins.bytes]] 
builtins.bytes"builtins.bytesJ
re.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"
re.Pattern*Ï
stringﬂ
ÉTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]]]∫
xUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]] 
builtins.bytes"builtins.bytesô
bTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]ï
WUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*Æ
flags†
+TypeAlias[Union[builtins.int,re.RegexFlag]]`
 Union[builtins.int,re.RegexFlag]
builtins.int"builtins.int
re.RegexFlag"re.RegexFlag"re._FlagsType 0:overloadX"36"37"∫
	fullmatchre.fullmatchõ
	fullmatchre.fullmatch"r
"Union[re.Match[builtins.str],None]@
re.Match[builtins.str]
builtins.str"builtins.str"re.Match
None*¢
patternî
,Union[builtins.str,re.Pattern[builtins.str]]
builtins.str"builtins.strD
re.Pattern[builtins.str]
builtins.str"builtins.str"
re.Pattern*(
string
builtins.str"builtins.str*Æ
flags†
+TypeAlias[Union[builtins.int,re.RegexFlag]]`
 Union[builtins.int,re.RegexFlag]
builtins.int"builtins.int
re.RegexFlag"re.RegexFlag"re._FlagsType 0:overloadXÛ

	fullmatchre.fullmatch"z
$Union[re.Match[builtins.bytes],None]F
re.Match[builtins.bytes] 
builtins.bytes"builtins.bytes"re.Match
None*∞
pattern¢
0Union[builtins.bytes,re.Pattern[builtins.bytes]] 
builtins.bytes"builtins.bytesJ
re.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"
re.Pattern*È
string‹
óTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]]]£
åUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÌ
vTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]’
kUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*Æ
flags†
+TypeAlias[Union[builtins.int,re.RegexFlag]]`
 Union[builtins.int,re.RegexFlag]
builtins.int"builtins.int
re.RegexFlag"re.RegexFlag"re._FlagsType 0:overloadX"38"39"310"è
splitre.split 
splitre.split"{
&builtins.list[Union[builtins.str,Any]]B
Union[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.list*¢
patternî
,Union[builtins.str,re.Pattern[builtins.str]]
builtins.str"builtins.strD
re.Pattern[builtins.str]
builtins.str"builtins.str"
re.Pattern*(
string
builtins.str"builtins.str*,
maxsplit
builtins.int"builtins.int *Æ
flags†
+TypeAlias[Union[builtins.int,re.RegexFlag]]`
 Union[builtins.int,re.RegexFlag]
builtins.int"builtins.int
re.RegexFlag"re.RegexFlag"re._FlagsType 0:overloadX¶

splitre.split"É
(builtins.list[Union[builtins.bytes,Any]]H
Union[builtins.bytes,Any] 
builtins.bytes"builtins.bytes
Any"builtins.list*∞
pattern¢
0Union[builtins.bytes,re.Pattern[builtins.bytes]] 
builtins.bytes"builtins.bytesJ
re.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"
re.Pattern*Ï
stringﬂ
ÉTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]]]∫
xUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]] 
builtins.bytes"builtins.bytesô
bTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]ï
WUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*,
maxsplit
builtins.int"builtins.int *Æ
flags†
+TypeAlias[Union[builtins.int,re.RegexFlag]]`
 Union[builtins.int,re.RegexFlag]
builtins.int"builtins.int
re.RegexFlag"re.RegexFlag"re._FlagsType 0:overloadX"36"37"ë
splitre.split 
splitre.split"{
&builtins.list[Union[builtins.str,Any]]B
Union[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.list*¢
patternî
,Union[builtins.str,re.Pattern[builtins.str]]
builtins.str"builtins.strD
re.Pattern[builtins.str]
builtins.str"builtins.str"
re.Pattern*(
string
builtins.str"builtins.str*,
maxsplit
builtins.int"builtins.int *Æ
flags†
+TypeAlias[Union[builtins.int,re.RegexFlag]]`
 Union[builtins.int,re.RegexFlag]
builtins.int"builtins.int
re.RegexFlag"re.RegexFlag"re._FlagsType 0:overloadX£
splitre.split"É
(builtins.list[Union[builtins.bytes,Any]]H
Union[builtins.bytes,Any] 
builtins.bytes"builtins.bytes
Any"builtins.list*∞
pattern¢
0Union[builtins.bytes,re.Pattern[builtins.bytes]] 
builtins.bytes"builtins.bytesJ
re.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"
re.Pattern*È
string‹
óTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]]]£
åUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÌ
vTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]’
kUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*,
maxsplit
builtins.int"builtins.int *Æ
flags†
+TypeAlias[Union[builtins.int,re.RegexFlag]]`
 Union[builtins.int,re.RegexFlag]
builtins.int"builtins.int
re.RegexFlag"re.RegexFlag"re._FlagsType 0:overloadX"38"39"310"ò
findall
re.findall—
findall
re.findall",
builtins.list[Any]
Any"builtins.list*¢
patternî
,Union[builtins.str,re.Pattern[builtins.str]]
builtins.str"builtins.strD
re.Pattern[builtins.str]
builtins.str"builtins.str"
re.Pattern*(
string
builtins.str"builtins.str*Æ
flags†
+TypeAlias[Union[builtins.int,re.RegexFlag]]`
 Union[builtins.int,re.RegexFlag]
builtins.int"builtins.int
re.RegexFlag"re.RegexFlag"re._FlagsType 0:overloadX§	
findall
re.findall",
builtins.list[Any]
Any"builtins.list*∞
pattern¢
0Union[builtins.bytes,re.Pattern[builtins.bytes]] 
builtins.bytes"builtins.bytesJ
re.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"
re.Pattern*Ï
stringﬂ
ÉTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]]]∫
xUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]] 
builtins.bytes"builtins.bytesô
bTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]ï
WUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*Æ
flags†
+TypeAlias[Union[builtins.int,re.RegexFlag]]`
 Union[builtins.int,re.RegexFlag]
builtins.int"builtins.int
re.RegexFlag"re.RegexFlag"re._FlagsType 0:overloadX"36"37"ö
findall
re.findall—
findall
re.findall",
builtins.list[Any]
Any"builtins.list*¢
patternî
,Union[builtins.str,re.Pattern[builtins.str]]
builtins.str"builtins.strD
re.Pattern[builtins.str]
builtins.str"builtins.str"
re.Pattern*(
string
builtins.str"builtins.str*Æ
flags†
+TypeAlias[Union[builtins.int,re.RegexFlag]]`
 Union[builtins.int,re.RegexFlag]
builtins.int"builtins.int
re.RegexFlag"re.RegexFlag"re._FlagsType 0:overloadX°

findall
re.findall",
builtins.list[Any]
Any"builtins.list*∞
pattern¢
0Union[builtins.bytes,re.Pattern[builtins.bytes]] 
builtins.bytes"builtins.bytesJ
re.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"
re.Pattern*È
string‹
óTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]]]£
åUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÌ
vTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]’
kUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*Æ
flags†
+TypeAlias[Union[builtins.int,re.RegexFlag]]`
 Union[builtins.int,re.RegexFlag]
builtins.int"builtins.int
re.RegexFlag"re.RegexFlag"re._FlagsType 0:overloadX"38"39"310"«
finditerre.finditer£
finditerre.finditer"|
'typing.Iterator[re.Match[builtins.str]]@
re.Match[builtins.str]
builtins.str"builtins.str"re.Match"typing.Iterator*¢
patternî
,Union[builtins.str,re.Pattern[builtins.str]]
builtins.str"builtins.strD
re.Pattern[builtins.str]
builtins.str"builtins.str"
re.Pattern*(
string
builtins.str"builtins.str*Æ
flags†
+TypeAlias[Union[builtins.int,re.RegexFlag]]`
 Union[builtins.int,re.RegexFlag]
builtins.int"builtins.int
re.RegexFlag"re.RegexFlag"re._FlagsType 0:overloadXˇ	
finditerre.finditer"Ñ
)typing.Iterator[re.Match[builtins.bytes]]F
re.Match[builtins.bytes] 
builtins.bytes"builtins.bytes"re.Match"typing.Iterator*∞
pattern¢
0Union[builtins.bytes,re.Pattern[builtins.bytes]] 
builtins.bytes"builtins.bytesJ
re.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"
re.Pattern*Ï
stringﬂ
ÉTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]]]∫
xUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]] 
builtins.bytes"builtins.bytesô
bTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]ï
WUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*Æ
flags†
+TypeAlias[Union[builtins.int,re.RegexFlag]]`
 Union[builtins.int,re.RegexFlag]
builtins.int"builtins.int
re.RegexFlag"re.RegexFlag"re._FlagsType 0:overloadX"36"37"…
finditerre.finditer£
finditerre.finditer"|
'typing.Iterator[re.Match[builtins.str]]@
re.Match[builtins.str]
builtins.str"builtins.str"re.Match"typing.Iterator*¢
patternî
,Union[builtins.str,re.Pattern[builtins.str]]
builtins.str"builtins.strD
re.Pattern[builtins.str]
builtins.str"builtins.str"
re.Pattern*(
string
builtins.str"builtins.str*Æ
flags†
+TypeAlias[Union[builtins.int,re.RegexFlag]]`
 Union[builtins.int,re.RegexFlag]
builtins.int"builtins.int
re.RegexFlag"re.RegexFlag"re._FlagsType 0:overloadX¸

finditerre.finditer"Ñ
)typing.Iterator[re.Match[builtins.bytes]]F
re.Match[builtins.bytes] 
builtins.bytes"builtins.bytes"re.Match"typing.Iterator*∞
pattern¢
0Union[builtins.bytes,re.Pattern[builtins.bytes]] 
builtins.bytes"builtins.bytesJ
re.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"
re.Pattern*È
string‹
óTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]]]£
åUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÌ
vTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]’
kUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*Æ
flags†
+TypeAlias[Union[builtins.int,re.RegexFlag]]`
 Union[builtins.int,re.RegexFlag]
builtins.int"builtins.int
re.RegexFlag"re.RegexFlag"re._FlagsType 0:overloadX"38"39"310"÷
subre.subî
subre.sub"
builtins.str"builtins.str*¢
patternî
,Union[builtins.str,re.Pattern[builtins.str]]
builtins.str"builtins.strD
re.Pattern[builtins.str]
builtins.str"builtins.str"
re.Pattern*≠
repl¢
3Union[builtins.str,CallableType[builtins.function]]
builtins.str"builtins.strK
CallableType[builtins.function]&
builtins.function"builtins.function*(
string
builtins.str"builtins.str*)
count
builtins.int"builtins.int *Æ
flags†
+TypeAlias[Union[builtins.int,re.RegexFlag]]`
 Union[builtins.int,re.RegexFlag]
builtins.int"builtins.int
re.RegexFlag"re.RegexFlag"re._FlagsType 0:overloadXß
subre.sub" 
builtins.bytes"builtins.bytes*∞
pattern¢
0Union[builtins.bytes,re.Pattern[builtins.bytes]] 
builtins.bytes"builtins.bytesJ
re.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"
re.Pattern*È
replﬁ
™Union[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]]],CallableType[builtins.function]]ﬂ
ÉTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]]]∫
xUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]] 
builtins.bytes"builtins.bytesô
bTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]ï
WUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBufferK
CallableType[builtins.function]&
builtins.function"builtins.function*Ï
stringﬂ
ÉTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]]]∫
xUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]] 
builtins.bytes"builtins.bytesô
bTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]ï
WUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*)
count
builtins.int"builtins.int *Æ
flags†
+TypeAlias[Union[builtins.int,re.RegexFlag]]`
 Union[builtins.int,re.RegexFlag]
builtins.int"builtins.int
re.RegexFlag"re.RegexFlag"re._FlagsType 0:overloadX"36"37"È
subre.subî
subre.sub"
builtins.str"builtins.str*¢
patternî
,Union[builtins.str,re.Pattern[builtins.str]]
builtins.str"builtins.strD
re.Pattern[builtins.str]
builtins.str"builtins.str"
re.Pattern*≠
repl¢
3Union[builtins.str,CallableType[builtins.function]]
builtins.str"builtins.strK
CallableType[builtins.function]&
builtins.function"builtins.function*(
string
builtins.str"builtins.str*)
count
builtins.int"builtins.int *Æ
flags†
+TypeAlias[Union[builtins.int,re.RegexFlag]]`
 Union[builtins.int,re.RegexFlag]
builtins.int"builtins.int
re.RegexFlag"re.RegexFlag"re._FlagsType 0:overloadXµ
subre.sub" 
builtins.bytes"builtins.bytes*∞
pattern¢
0Union[builtins.bytes,re.Pattern[builtins.bytes]] 
builtins.bytes"builtins.bytesJ
re.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"
re.Pattern*˙
replÔ
æUnion[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]]],CallableType[builtins.function]]‹
óTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]]]£
åUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÌ
vTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]’
kUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBufferK
CallableType[builtins.function]&
builtins.function"builtins.function*È
string‹
óTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]]]£
åUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÌ
vTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]’
kUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*)
count
builtins.int"builtins.int *Æ
flags†
+TypeAlias[Union[builtins.int,re.RegexFlag]]`
 Union[builtins.int,re.RegexFlag]
builtins.int"builtins.int
re.RegexFlag"re.RegexFlag"re._FlagsType 0:overloadX"38"39"310"Ê
subnre.subn⁄
subnre.subn"`
 Tuple[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int*¢
patternî
,Union[builtins.str,re.Pattern[builtins.str]]
builtins.str"builtins.strD
re.Pattern[builtins.str]
builtins.str"builtins.str"
re.Pattern*≠
repl¢
3Union[builtins.str,CallableType[builtins.function]]
builtins.str"builtins.strK
CallableType[builtins.function]&
builtins.function"builtins.function*(
string
builtins.str"builtins.str*)
count
builtins.int"builtins.int *Æ
flags†
+TypeAlias[Union[builtins.int,re.RegexFlag]]`
 Union[builtins.int,re.RegexFlag]
builtins.int"builtins.int
re.RegexFlag"re.RegexFlag"re._FlagsType 0:overloadXÔ
subnre.subn"f
"Tuple[builtins.bytes,builtins.int] 
builtins.bytes"builtins.bytes
builtins.int"builtins.int*∞
pattern¢
0Union[builtins.bytes,re.Pattern[builtins.bytes]] 
builtins.bytes"builtins.bytesJ
re.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"
re.Pattern*È
replﬁ
™Union[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]]],CallableType[builtins.function]]ﬂ
ÉTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]]]∫
xUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]] 
builtins.bytes"builtins.bytesô
bTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]ï
WUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBufferK
CallableType[builtins.function]&
builtins.function"builtins.function*Ï
stringﬂ
ÉTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]]]∫
xUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]] 
builtins.bytes"builtins.bytesô
bTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]ï
WUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*)
count
builtins.int"builtins.int *Æ
flags†
+TypeAlias[Union[builtins.int,re.RegexFlag]]`
 Union[builtins.int,re.RegexFlag]
builtins.int"builtins.int
re.RegexFlag"re.RegexFlag"re._FlagsType 0:overloadX"36"37"˘
subnre.subn⁄
subnre.subn"`
 Tuple[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int*¢
patternî
,Union[builtins.str,re.Pattern[builtins.str]]
builtins.str"builtins.strD
re.Pattern[builtins.str]
builtins.str"builtins.str"
re.Pattern*≠
repl¢
3Union[builtins.str,CallableType[builtins.function]]
builtins.str"builtins.strK
CallableType[builtins.function]&
builtins.function"builtins.function*(
string
builtins.str"builtins.str*)
count
builtins.int"builtins.int *Æ
flags†
+TypeAlias[Union[builtins.int,re.RegexFlag]]`
 Union[builtins.int,re.RegexFlag]
builtins.int"builtins.int
re.RegexFlag"re.RegexFlag"re._FlagsType 0:overloadX˝
subnre.subn"f
"Tuple[builtins.bytes,builtins.int] 
builtins.bytes"builtins.bytes
builtins.int"builtins.int*∞
pattern¢
0Union[builtins.bytes,re.Pattern[builtins.bytes]] 
builtins.bytes"builtins.bytesJ
re.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"
re.Pattern*˙
replÔ
æUnion[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]]],CallableType[builtins.function]]‹
óTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]]]£
åUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÌ
vTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]’
kUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBufferK
CallableType[builtins.function]&
builtins.function"builtins.function*È
string‹
óTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]]]£
åUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÌ
vTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]’
kUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*)
count
builtins.int"builtins.int *Æ
flags†
+TypeAlias[Union[builtins.int,re.RegexFlag]]`
 Union[builtins.int,re.RegexFlag]
builtins.int"builtins.int
re.RegexFlag"re.RegexFlag"re._FlagsType 0:overloadX"38"39"310*ì
__annotations__re.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*36*37*38*39*310*v
__all__
re.__all__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*36*37*38*39*310*<
Are.A
re.RegexFlag"re.RegexFlag*36*37*38*39*310*D
ASCIIre.ASCII
re.RegexFlag"re.RegexFlag*36*37*38*39*310*D
DEBUGre.DEBUG
re.RegexFlag"re.RegexFlag*36*37*38*39*310*<
Ire.I
re.RegexFlag"re.RegexFlag*36*37*38*39*310*N

IGNORECASEre.IGNORECASE
re.RegexFlag"re.RegexFlag*36*37*38*39*310*<
Lre.L
re.RegexFlag"re.RegexFlag*36*37*38*39*310*F
LOCALE	re.LOCALE
re.RegexFlag"re.RegexFlag*36*37*38*39*310*<
Mre.M
re.RegexFlag"re.RegexFlag*36*37*38*39*310*L
	MULTILINEre.MULTILINE
re.RegexFlag"re.RegexFlag*36*37*38*39*310*<
Sre.S
re.RegexFlag"re.RegexFlag*36*37*38*39*310*F
DOTALL	re.DOTALL
re.RegexFlag"re.RegexFlag*36*37*38*39*310*<
Xre.X
re.RegexFlag"re.RegexFlag*36*37*38*39*310*H
VERBOSE
re.VERBOSE
re.RegexFlag"re.RegexFlag*36*37*38*39*310*<
Ure.U
re.RegexFlag"re.RegexFlag*36*37*38*39*310*H
UNICODE
re.UNICODE
re.RegexFlag"re.RegexFlag*36*37*38*39*310*<
Tre.T
re.RegexFlag"re.RegexFlag*36*37*38*39*310*J
TEMPLATEre.TEMPLATE
re.RegexFlag"re.RegexFlag*36*37*38*39*310