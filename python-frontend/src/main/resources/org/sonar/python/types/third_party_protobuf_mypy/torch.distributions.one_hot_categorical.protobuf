
'torch.distributions.one_hot_categorical‰
OneHotCategorical9torch.distributions.one_hot_categorical.OneHotCategorical"-torch.distributions.distribution.Distribution*ˆ
__init__Btorch.distributions.one_hot_categorical.OneHotCategorical.__init__*
self*
probs *
logits *
validate_args *v
expand@torch.distributions.one_hot_categorical.OneHotCategorical.expand*
self*
batch_shape*
	_instance *f
_new>torch.distributions.one_hot_categorical.OneHotCategorical._new*
self*
args*

kwargs*b
_param@torch.distributions.one_hot_categorical.OneHotCategorical._param*
self0:property`*`
probs?torch.distributions.one_hot_categorical.OneHotCategorical.probs*
self0:property`*b
logits@torch.distributions.one_hot_categorical.OneHotCategorical.logits*
self0:property`*^
mean>torch.distributions.one_hot_categorical.OneHotCategorical.mean*
self0:property`*^
mode>torch.distributions.one_hot_categorical.OneHotCategorical.mode*
self0:property`*f
varianceBtorch.distributions.one_hot_categorical.OneHotCategorical.variance*
self0:property`*l
param_shapeEtorch.distributions.one_hot_categorical.OneHotCategorical.param_shape*
self0:property`*h
sample@torch.distributions.one_hot_categorical.OneHotCategorical.sample*
self*
sample_shape *c
log_probBtorch.distributions.one_hot_categorical.OneHotCategorical.log_prob*
self*	
value*V
entropyAtorch.distributions.one_hot_categorical.OneHotCategorical.entropy*
self*x
enumerate_supportKtorch.distributions.one_hot_categorical.OneHotCategorical.enumerate_support*
self*
expand r®
arg_constraintsItorch.distributions.one_hot_categorical.OneHotCategorical.arg_constraintsÏ
Fbuiltins.dict[builtins.str,torch.distributions.constraints.Constraint]
builtins.str"builtins.strX
*torch.distributions.constraints.Constraint"*torch.distributions.constraints.Constraint"builtins.dictr 
supportAtorch.distributions.one_hot_categorical.OneHotCategorical.supportR
'torch.distributions.constraints._OneHot"'torch.distributions.constraints._OneHotrˆ
has_enumerate_supportOtorch.distributions.one_hot_categorical.OneHotCategorical.has_enumerate_support
builtins.bool"builtins.boolr_
_categoricalFtorch.distributions.one_hot_categorical.OneHotCategorical._categorical
Any¨
 OneHotCategoricalStraightThroughHtorch.distributions.one_hot_categorical.OneHotCategoricalStraightThrough"9torch.distributions.one_hot_categorical.OneHotCategorical*y
rsamplePtorch.distributions.one_hot_categorical.OneHotCategoricalStraightThrough.rsample*
self*
sample_shape rƒ
has_rsampleTtorch.distributions.one_hot_categorical.OneHotCategoricalStraightThrough.has_rsample
builtins.bool"builtins.bool*£
__annotations__7torch.distributions.one_hot_categorical.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*†
__all__/torch.distributions.one_hot_categorical.__all__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list