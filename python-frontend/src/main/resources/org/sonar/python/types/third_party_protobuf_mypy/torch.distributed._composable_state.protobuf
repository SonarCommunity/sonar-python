
#torch.distributed._composable_stateE
_State*torch.distributed._composable_state._State"builtins.object∫
#<subclass of "Module" and "_State">Gtorch.distributed._composable_state.<subclass of "Module" and "_State">"torch.nn.modules.module.Module"*torch.distributed._composable_state._Stateç
_insert_module_state8torch.distributed._composable_state._insert_module_state"
None*L
module@
torch.nn.modules.module.Module"torch.nn.modules.module.Module*c
stateX
*torch.distributed._composable_state._State"*torch.distributed._composable_state._Stateπ
_get_module_state5torch.distributed._composable_state._get_module_state"û
6Union[torch.distributed._composable_state._State,None]X
*torch.distributed._composable_state._State"*torch.distributed._composable_state._State
None*L
module@
torch.nn.modules.module.Module"torch.nn.modules.module.Module*ü
__annotations__3torch.distributed._composable_state.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*
nntorch.nn *⁄
_module_state_mapping9torch.distributed._composable_state._module_state_mappingÖ
Xbuiltins.dict[torch.nn.modules.module.Module,torch.distributed._composable_state._State]@
torch.nn.modules.module.Module"torch.nn.modules.module.ModuleX
*torch.distributed._composable_state._State"*torch.distributed._composable_state._State"builtins.dict