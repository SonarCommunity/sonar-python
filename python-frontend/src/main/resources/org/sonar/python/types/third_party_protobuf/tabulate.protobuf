
tabulate√
	Containertyping.Container"builtins.object*Û
__contains__typing.Container.__contains__"
builtins.bool"builtins.bool*L
selfD
typing.Container[typing._T_co]
typing._T_co"typing.Container*)
__x"
builtins.object"builtins.object0:abstractmethod@z35z36z37z38z39z3108PXj35j36j37j38j39j310Ø
Iterabletyping.Iterable"builtins.object*·
__iter__typing.Iterable.__iter__"B
typing.Iterator[typing._T_co]
typing._T_co"typing.Iterator*J
selfB
typing.Iterable[typing._T_co]
typing._T_co"typing.Iterable0:abstractmethod@z35z36z37z38z39z3108PXj35j36j37j38j39j310í
Mappingtyping.Mapping"typing.Collection*Â
__getitem__typing.Mapping.__getitem__"
typing._VT_co*e
self]
(typing.Mapping[typing._KT,typing._VT_co]

typing._KT
typing._VT_co"typing.Mapping*
k

typing._KT0:abstractmethod@z35z36z37z38z39z310*≥
itemstyping.Mapping.items"ë
3typing.AbstractSet[Tuple[typing._KT,typing._VT_co]]F
Tuple[typing._KT,typing._VT_co]

typing._KT
typing._VT_co"typing.AbstractSet*g
self]
(typing.Mapping[typing._KT,typing._VT_co]

typing._KT
typing._VT_co"typing.Mappingz35z36z37z38z39z310*„
keystyping.Mapping.keys"D
typing.AbstractSet[typing._KT]

typing._KT"typing.AbstractSet*g
self]
(typing.Mapping[typing._KT,typing._VT_co]

typing._KT
typing._VT_co"typing.Mappingz35z36z37z38z39z310*Î
valuestyping.Mapping.values"H
 typing.ValuesView[typing._VT_co]
typing._VT_co"typing.ValuesView*g
self]
(typing.Mapping[typing._KT,typing._VT_co]

typing._KT
typing._VT_co"typing.Mappingz35z36z37z38z39z310*Ù
__contains__typing.Mapping.__contains__"
builtins.bool"builtins.bool*e
self]
(typing.Mapping[typing._KT,typing._VT_co]

typing._KT
typing._VT_co"typing.Mapping*'
o"
builtins.object"builtins.objectz35z36z37z38z39z3102ﬂ
gettyping.Mapping.getÂ
gettyping.Mapping.get":
Union[typing._VT_co,None]
typing._VT_co
None*g
self]
(typing.Mapping[typing._KT,typing._VT_co]

typing._KT
typing._VT_co"typing.Mapping*
key

typing._KT0:overloadX¬
gettyping.Mapping.get"D
Union[typing._VT_co,typing._T]
typing._VT_co
	typing._T*g
self]
(typing.Mapping[typing._KT,typing._VT_co]

typing._KT
typing._VT_co"typing.Mapping*
key

typing._KT*Q
defaultD
Union[typing._VT_co,typing._T]
typing._VT_co
	typing._T0:overloadX"35"36"37"38"39"310Pj35j36j37j38j39j310–

NamedTupletyping.NamedTuple"builtins.tuple*Ã
__init__typing.NamedTuple.__init__"
None*0
self&
typing.NamedTuple"typing.NamedTuple**
typename
builtins.str"builtins.str*ç
fields
(typing.Iterable[Tuple[builtins.str,Any]]B
Tuple[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Iterable *
kwargs
Anyz35z36z37z38z39z310*∆
_maketyping.NamedTuple._make"
	typing._T*+
cls"
Type[typing._T]
	typing._T*>
iterable0
typing.Iterable[Any]
Any"typing.Iterable0:classmethodpz35z36z37z38z39z310*œ
_asdicttyping.NamedTuple._asdict"k
)collections.OrderedDict[builtins.str,Any]
builtins.str"builtins.str
Any"collections.OrderedDict*0
self&
typing.NamedTuple"typing.NamedTuplez35z36z37*º
_asdicttyping.NamedTuple._asdict"W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*0
self&
typing.NamedTuple"typing.NamedTuplez38z39z310*|
_replacetyping.NamedTuple._replace"
	typing._T*
self
	typing._T*
kwargs
Anyz35z36z37z38z39z310j35j36j37j38j39j310r 
_field_typestyping.NamedTuple._field_typesÄ
/collections.OrderedDict[builtins.str,Type[Any]]
builtins.str"builtins.str
	Type[Any]
Any"collections.OrderedDict*35*36*37*38*39*310r¶
_field_defaults!typing.NamedTuple._field_defaultsW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*35*36*37*38*39*310rã
_fieldstyping.NamedTuple._fieldsL
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple*35*36*37*38*39*310r[
_sourcetyping.NamedTuple._source
builtins.str"builtins.str*35*36*37*38*39*310¬
Sequencetyping.Sequence"typing.Collection"typing.Reversible*å
indextyping.Sequence.index"
builtins.int"builtins.int*L
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*
value
Any*)
start
builtins.int"builtins.int *(
stop
builtins.int"builtins.int z35z36z37z38z39z310*∑
counttyping.Sequence.count"
builtins.int"builtins.int*L
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*
value
Anyz35z36z37z38z39z310*⁄
__contains__typing.Sequence.__contains__"
builtins.bool"builtins.bool*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*'
x"
builtins.object"builtins.objectz35z36z37z38z39z310*Õ
__iter__typing.Sequence.__iter__"B
typing.Iterator[typing._T_co]
typing._T_co"typing.Iterator*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequencez35z36z37z38z39z310*’
__reversed__typing.Sequence.__reversed__"B
typing.Iterator[typing._T_co]
typing._T_co"typing.Iterator*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequencez35z36z37z38z39z3102ï
__getitem__typing.Sequence.__getitem__À
__getitem__typing.Sequence.__getitem__"
typing._T_co*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*!
i
builtins.int"builtins.int0:overload:abstractmethod@XÅ
__getitem__typing.Sequence.__getitem__"B
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*%
s 
builtins.slice"builtins.slice0:overload:abstractmethod@X"35"36"37"38"39"310Pj35j36j37j38j39j310≤
Linetabulate.Line"builtins.tuple*ú
_replacetabulate.Line._replace"
tabulate.Line._NT* 
_self
tabulate.Line._NT*)
begin
builtins.str"builtins.str *)
hline
builtins.str"builtins.str *'
sep
builtins.str"builtins.str *'
end
builtins.str"builtins.str z35z36z37z38z39z310*Æ
__new__tabulate.Line.__new__"
tabulate.Line._NT*<
_cls2
Type[tabulate.Line._NT]
tabulate.Line._NT*'
begin
builtins.str"builtins.str*'
hline
builtins.str"builtins.str*%
sep
builtins.str"builtins.str*%
end
builtins.str"builtins.strz35z36z37z38z39z310*¥
_asdicttabulate.Line._asdict"W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict* 
_self
tabulate.Line._NTz35z36z37z38z39z310*É
_maketabulate.Line._make"
tabulate.Line._NT*<
_cls2
Type[tabulate.Line._NT]
tabulate.Line._NT*>
iterable0
typing.Iterable[Any]
Any"typing.Iterable*
new
Any *
len
Any 0:classmethodpz35z36z37z38z39z310j35j36j37j38j39j310rl
begintabulate.Line.begin
builtins.str"builtins.str*35*35*36*36*37*37*38*38*39*39*310*310rl
hlinetabulate.Line.hline
builtins.str"builtins.str*35*35*36*36*37*37*38*38*39*39*310*310rh
septabulate.Line.sep
builtins.str"builtins.str*35*35*36*36*37*37*38*38*39*39*310*310rh
endtabulate.Line.end
builtins.str"builtins.str*35*35*36*36*37*37*38*38*39*39*310*310rÚ
_fieldstabulate.Line._fields∂
:Tuple[builtins.str,builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str*35*36*37*38*39*310rú
_field_typestabulate.Line._field_typesW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*35*36*37*38*39*310r¢
_field_defaultstabulate.Line._field_defaultsW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*35*36*37*38*39*310rW
_sourcetabulate.Line._source
builtins.str"builtins.str*35*36*37*38*39*310r¢
__annotations__tabulate.Line.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*35*36*37*38*39*310ä
DataRowtabulate.DataRow"builtins.tuple*˙
_replacetabulate.DataRow._replace"
tabulate.DataRow._NT*#
_self
tabulate.DataRow._NT*)
begin
builtins.str"builtins.str *'
sep
builtins.str"builtins.str *'
end
builtins.str"builtins.str z35z36z37z38z39z310*ë
__new__tabulate.DataRow.__new__"
tabulate.DataRow._NT*B
_cls8
Type[tabulate.DataRow._NT]
tabulate.DataRow._NT*'
begin
builtins.str"builtins.str*%
sep
builtins.str"builtins.str*%
end
builtins.str"builtins.strz35z36z37z38z39z310*∫
_asdicttabulate.DataRow._asdict"W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*#
_self
tabulate.DataRow._NTz35z36z37z38z39z310*è
_maketabulate.DataRow._make"
tabulate.DataRow._NT*B
_cls8
Type[tabulate.DataRow._NT]
tabulate.DataRow._NT*>
iterable0
typing.Iterable[Any]
Any"typing.Iterable*
new
Any *
len
Any 0:classmethodpz35z36z37z38z39z310j35j36j37j38j39j310ro
begintabulate.DataRow.begin
builtins.str"builtins.str*35*35*36*36*37*37*38*38*39*39*310*310rk
septabulate.DataRow.sep
builtins.str"builtins.str*35*35*36*36*37*37*38*38*39*39*310*310rk
endtabulate.DataRow.end
builtins.str"builtins.str*35*35*36*36*37*37*38*38*39*39*310*310r 
_fieldstabulate.DataRow._fieldsã
-Tuple[builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str*35*36*37*38*39*310rü
_field_typestabulate.DataRow._field_typesW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*35*36*37*38*39*310r•
_field_defaults tabulate.DataRow._field_defaultsW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*35*36*37*38*39*310rZ
_sourcetabulate.DataRow._source
builtins.str"builtins.str*35*36*37*38*39*310r•
__annotations__ tabulate.DataRow.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*35*36*37*38*39*310∏b
TableFormattabulate.TableFormat"builtins.tuple*¶
_replacetabulate.TableFormat._replace"
tabulate.TableFormat._NT*'
_self
tabulate.TableFormat._NT*ü
	lineaboveç
qTypeAlias[Union[None,Tuple[builtins.str,builtins.str,builtins.str,builtins.str],CallableType[builtins.function]]]˙
fUnion[None,Tuple[builtins.str,builtins.str,builtins.str,builtins.str],CallableType[builtins.function]]
None∂
:Tuple[builtins.str,builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.strK
CallableType[builtins.function]&
builtins.function"builtins.function"tabulate._TableFormatLine *•
linebelowheaderç
qTypeAlias[Union[None,Tuple[builtins.str,builtins.str,builtins.str,builtins.str],CallableType[builtins.function]]]˙
fUnion[None,Tuple[builtins.str,builtins.str,builtins.str,builtins.str],CallableType[builtins.function]]
None∂
:Tuple[builtins.str,builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.strK
CallableType[builtins.function]&
builtins.function"builtins.function"tabulate._TableFormatLine *•
linebetweenrowsç
qTypeAlias[Union[None,Tuple[builtins.str,builtins.str,builtins.str,builtins.str],CallableType[builtins.function]]]˙
fUnion[None,Tuple[builtins.str,builtins.str,builtins.str,builtins.str],CallableType[builtins.function]]
None∂
:Tuple[builtins.str,builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.strK
CallableType[builtins.function]&
builtins.function"builtins.function"tabulate._TableFormatLine *ü
	linebelowç
qTypeAlias[Union[None,Tuple[builtins.str,builtins.str,builtins.str,builtins.str],CallableType[builtins.function]]]˙
fUnion[None,Tuple[builtins.str,builtins.str,builtins.str,builtins.str],CallableType[builtins.function]]
None∂
:Tuple[builtins.str,builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.strK
CallableType[builtins.function]&
builtins.function"builtins.function"tabulate._TableFormatLine *Ÿ
	headerrow«
dTypeAlias[Union[None,Tuple[builtins.str,builtins.str,builtins.str],CallableType[builtins.function]]]¬
YUnion[None,Tuple[builtins.str,builtins.str,builtins.str],CallableType[builtins.function]]
Noneã
-Tuple[builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.strK
CallableType[builtins.function]&
builtins.function"builtins.function"tabulate._TableFormatRow *◊
datarow«
dTypeAlias[Union[None,Tuple[builtins.str,builtins.str,builtins.str],CallableType[builtins.function]]]¬
YUnion[None,Tuple[builtins.str,builtins.str,builtins.str],CallableType[builtins.function]]
Noneã
-Tuple[builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.strK
CallableType[builtins.function]&
builtins.function"builtins.function"tabulate._TableFormatRow *+
padding
builtins.int"builtins.int *£
with_header_hideä
*Union[typing.Container[builtins.str],None]P
typing.Container[builtins.str]
builtins.str"builtins.str"typing.Container
None z35z36z37z38z39z310*∑
__new__tabulate.TableFormat.__new__"
tabulate.TableFormat._NT*J
_cls@
Type[tabulate.TableFormat._NT]
tabulate.TableFormat._NT*ù
	lineaboveç
qTypeAlias[Union[None,Tuple[builtins.str,builtins.str,builtins.str,builtins.str],CallableType[builtins.function]]]˙
fUnion[None,Tuple[builtins.str,builtins.str,builtins.str,builtins.str],CallableType[builtins.function]]
None∂
:Tuple[builtins.str,builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.strK
CallableType[builtins.function]&
builtins.function"builtins.function"tabulate._TableFormatLine*£
linebelowheaderç
qTypeAlias[Union[None,Tuple[builtins.str,builtins.str,builtins.str,builtins.str],CallableType[builtins.function]]]˙
fUnion[None,Tuple[builtins.str,builtins.str,builtins.str,builtins.str],CallableType[builtins.function]]
None∂
:Tuple[builtins.str,builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.strK
CallableType[builtins.function]&
builtins.function"builtins.function"tabulate._TableFormatLine*£
linebetweenrowsç
qTypeAlias[Union[None,Tuple[builtins.str,builtins.str,builtins.str,builtins.str],CallableType[builtins.function]]]˙
fUnion[None,Tuple[builtins.str,builtins.str,builtins.str,builtins.str],CallableType[builtins.function]]
None∂
:Tuple[builtins.str,builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.strK
CallableType[builtins.function]&
builtins.function"builtins.function"tabulate._TableFormatLine*ù
	linebelowç
qTypeAlias[Union[None,Tuple[builtins.str,builtins.str,builtins.str,builtins.str],CallableType[builtins.function]]]˙
fUnion[None,Tuple[builtins.str,builtins.str,builtins.str,builtins.str],CallableType[builtins.function]]
None∂
:Tuple[builtins.str,builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.strK
CallableType[builtins.function]&
builtins.function"builtins.function"tabulate._TableFormatLine*◊
	headerrow«
dTypeAlias[Union[None,Tuple[builtins.str,builtins.str,builtins.str],CallableType[builtins.function]]]¬
YUnion[None,Tuple[builtins.str,builtins.str,builtins.str],CallableType[builtins.function]]
Noneã
-Tuple[builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.strK
CallableType[builtins.function]&
builtins.function"builtins.function"tabulate._TableFormatRow*’
datarow«
dTypeAlias[Union[None,Tuple[builtins.str,builtins.str,builtins.str],CallableType[builtins.function]]]¬
YUnion[None,Tuple[builtins.str,builtins.str,builtins.str],CallableType[builtins.function]]
Noneã
-Tuple[builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.strK
CallableType[builtins.function]&
builtins.function"builtins.function"tabulate._TableFormatRow*)
padding
builtins.int"builtins.int*°
with_header_hideä
*Union[typing.Container[builtins.str],None]P
typing.Container[builtins.str]
builtins.str"builtins.str"typing.Container
Nonez35z36z37z38z39z310*¬
_asdicttabulate.TableFormat._asdict"W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*'
_self
tabulate.TableFormat._NTz35z36z37z38z39z310*ü
_maketabulate.TableFormat._make"
tabulate.TableFormat._NT*J
_cls@
Type[tabulate.TableFormat._NT]
tabulate.TableFormat._NT*>
iterable0
typing.Iterable[Any]
Any"typing.Iterable*
new
Any *
len
Any 0:classmethodpz35z36z37z38z39z310j35j36j37j38j39j310rÌ
	lineabovetabulate.TableFormat.lineaboveç
qTypeAlias[Union[None,Tuple[builtins.str,builtins.str,builtins.str,builtins.str],CallableType[builtins.function]]]˙
fUnion[None,Tuple[builtins.str,builtins.str,builtins.str,builtins.str],CallableType[builtins.function]]
None∂
:Tuple[builtins.str,builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.strK
CallableType[builtins.function]&
builtins.function"builtins.function"tabulate._TableFormatLine*35*35*36*36*37*37*38*38*39*39*310*310r˘
linebelowheader$tabulate.TableFormat.linebelowheaderç
qTypeAlias[Union[None,Tuple[builtins.str,builtins.str,builtins.str,builtins.str],CallableType[builtins.function]]]˙
fUnion[None,Tuple[builtins.str,builtins.str,builtins.str,builtins.str],CallableType[builtins.function]]
None∂
:Tuple[builtins.str,builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.strK
CallableType[builtins.function]&
builtins.function"builtins.function"tabulate._TableFormatLine*35*35*36*36*37*37*38*38*39*39*310*310r˘
linebetweenrows$tabulate.TableFormat.linebetweenrowsç
qTypeAlias[Union[None,Tuple[builtins.str,builtins.str,builtins.str,builtins.str],CallableType[builtins.function]]]˙
fUnion[None,Tuple[builtins.str,builtins.str,builtins.str,builtins.str],CallableType[builtins.function]]
None∂
:Tuple[builtins.str,builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.strK
CallableType[builtins.function]&
builtins.function"builtins.function"tabulate._TableFormatLine*35*35*36*36*37*37*38*38*39*39*310*310rÌ
	linebelowtabulate.TableFormat.linebelowç
qTypeAlias[Union[None,Tuple[builtins.str,builtins.str,builtins.str,builtins.str],CallableType[builtins.function]]]˙
fUnion[None,Tuple[builtins.str,builtins.str,builtins.str,builtins.str],CallableType[builtins.function]]
None∂
:Tuple[builtins.str,builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.strK
CallableType[builtins.function]&
builtins.function"builtins.function"tabulate._TableFormatLine*35*35*36*36*37*37*38*38*39*39*310*310rß
	headerrowtabulate.TableFormat.headerrow«
dTypeAlias[Union[None,Tuple[builtins.str,builtins.str,builtins.str],CallableType[builtins.function]]]¬
YUnion[None,Tuple[builtins.str,builtins.str,builtins.str],CallableType[builtins.function]]
Noneã
-Tuple[builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.strK
CallableType[builtins.function]&
builtins.function"builtins.function"tabulate._TableFormatRow*35*35*36*36*37*37*38*38*39*39*310*310r£
datarowtabulate.TableFormat.datarow«
dTypeAlias[Union[None,Tuple[builtins.str,builtins.str,builtins.str],CallableType[builtins.function]]]¬
YUnion[None,Tuple[builtins.str,builtins.str,builtins.str],CallableType[builtins.function]]
Noneã
-Tuple[builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.strK
CallableType[builtins.function]&
builtins.function"builtins.function"tabulate._TableFormatRow*35*35*36*36*37*37*38*38*39*39*310*310rw
paddingtabulate.TableFormat.padding
builtins.int"builtins.int*35*35*36*36*37*37*38*38*39*39*310*310r¯
with_header_hide%tabulate.TableFormat.with_header_hideä
*Union[typing.Container[builtins.str],None]P
typing.Container[builtins.str]
builtins.str"builtins.str"typing.Container
None*35*35*36*36*37*37*38*38*39*39*310*310r•
_fieldstabulate.TableFormat._fields‚
nTuple[builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str*35*36*37*38*39*310r£
_field_types!tabulate.TableFormat._field_typesW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*35*36*37*38*39*310r©
_field_defaults$tabulate.TableFormat._field_defaultsW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*35*36*37*38*39*310r^
_sourcetabulate.TableFormat._source
builtins.str"builtins.str*35*36*37*38*39*310r©
__annotations__$tabulate.TableFormat.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*35*36*37*38*39*310ÿ
simple_separated_format tabulate.simple_separated_format"‘
–Tuple[TypeAlias[Union[None,Tuple[builtins.str,builtins.str,builtins.str,builtins.str],CallableType[builtins.function]]],TypeAlias[Union[None,Tuple[builtins.str,builtins.str,builtins.str,builtins.str],CallableType[builtins.function]]],TypeAlias[Union[None,Tuple[builtins.str,builtins.str,builtins.str,builtins.str],CallableType[builtins.function]]],TypeAlias[Union[None,Tuple[builtins.str,builtins.str,builtins.str,builtins.str],CallableType[builtins.function]]],TypeAlias[Union[None,Tuple[builtins.str,builtins.str,builtins.str],CallableType[builtins.function]]],TypeAlias[Union[None,Tuple[builtins.str,builtins.str,builtins.str],CallableType[builtins.function]]],builtins.int,Union[typing.Container[builtins.str],None]]ç
qTypeAlias[Union[None,Tuple[builtins.str,builtins.str,builtins.str,builtins.str],CallableType[builtins.function]]]˙
fUnion[None,Tuple[builtins.str,builtins.str,builtins.str,builtins.str],CallableType[builtins.function]]
None∂
:Tuple[builtins.str,builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.strK
CallableType[builtins.function]&
builtins.function"builtins.function"tabulate._TableFormatLineç
qTypeAlias[Union[None,Tuple[builtins.str,builtins.str,builtins.str,builtins.str],CallableType[builtins.function]]]˙
fUnion[None,Tuple[builtins.str,builtins.str,builtins.str,builtins.str],CallableType[builtins.function]]
None∂
:Tuple[builtins.str,builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.strK
CallableType[builtins.function]&
builtins.function"builtins.function"tabulate._TableFormatLineç
qTypeAlias[Union[None,Tuple[builtins.str,builtins.str,builtins.str,builtins.str],CallableType[builtins.function]]]˙
fUnion[None,Tuple[builtins.str,builtins.str,builtins.str,builtins.str],CallableType[builtins.function]]
None∂
:Tuple[builtins.str,builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.strK
CallableType[builtins.function]&
builtins.function"builtins.function"tabulate._TableFormatLineç
qTypeAlias[Union[None,Tuple[builtins.str,builtins.str,builtins.str,builtins.str],CallableType[builtins.function]]]˙
fUnion[None,Tuple[builtins.str,builtins.str,builtins.str,builtins.str],CallableType[builtins.function]]
None∂
:Tuple[builtins.str,builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.strK
CallableType[builtins.function]&
builtins.function"builtins.function"tabulate._TableFormatLine«
dTypeAlias[Union[None,Tuple[builtins.str,builtins.str,builtins.str],CallableType[builtins.function]]]¬
YUnion[None,Tuple[builtins.str,builtins.str,builtins.str],CallableType[builtins.function]]
Noneã
-Tuple[builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.strK
CallableType[builtins.function]&
builtins.function"builtins.function"tabulate._TableFormatRow«
dTypeAlias[Union[None,Tuple[builtins.str,builtins.str,builtins.str],CallableType[builtins.function]]]¬
YUnion[None,Tuple[builtins.str,builtins.str,builtins.str],CallableType[builtins.function]]
Noneã
-Tuple[builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.strK
CallableType[builtins.function]&
builtins.function"builtins.function"tabulate._TableFormatRow
builtins.int"builtins.intä
*Union[typing.Container[builtins.str],None]P
typing.Container[builtins.str]
builtins.str"builtins.str"typing.Container
None*+
	separator
builtins.str"builtins.strz35z36z37z38z39z310è4
tabulatetabulate.tabulate"
builtins.str"builtins.str*˜
tabular_data‰
^Union[typing.Mapping[builtins.str,typing.Iterable[Any]],typing.Iterable[typing.Iterable[Any]]]ì
1typing.Mapping[builtins.str,typing.Iterable[Any]]
builtins.str"builtins.str0
typing.Iterable[Any]
Any"typing.Iterable"typing.Mappingj
%typing.Iterable[typing.Iterable[Any]]0
typing.Iterable[Any]
Any"typing.Iterable"typing.Iterable*”
headers√
ZUnion[builtins.str,builtins.dict[builtins.str,builtins.str],typing.Sequence[builtins.str]]
builtins.str"builtins.stru
(builtins.dict[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"builtins.dictN
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence *Ô$
tablefmtﬁ$
‰Union[builtins.str,Tuple[TypeAlias[Union[None,Tuple[builtins.str,builtins.str,builtins.str,builtins.str],CallableType[builtins.function]]],TypeAlias[Union[None,Tuple[builtins.str,builtins.str,builtins.str,builtins.str],CallableType[builtins.function]]],TypeAlias[Union[None,Tuple[builtins.str,builtins.str,builtins.str,builtins.str],CallableType[builtins.function]]],TypeAlias[Union[None,Tuple[builtins.str,builtins.str,builtins.str,builtins.str],CallableType[builtins.function]]],TypeAlias[Union[None,Tuple[builtins.str,builtins.str,builtins.str],CallableType[builtins.function]]],TypeAlias[Union[None,Tuple[builtins.str,builtins.str,builtins.str],CallableType[builtins.function]]],builtins.int,Union[typing.Container[builtins.str],None]]]
builtins.str"builtins.str‘
–Tuple[TypeAlias[Union[None,Tuple[builtins.str,builtins.str,builtins.str,builtins.str],CallableType[builtins.function]]],TypeAlias[Union[None,Tuple[builtins.str,builtins.str,builtins.str,builtins.str],CallableType[builtins.function]]],TypeAlias[Union[None,Tuple[builtins.str,builtins.str,builtins.str,builtins.str],CallableType[builtins.function]]],TypeAlias[Union[None,Tuple[builtins.str,builtins.str,builtins.str,builtins.str],CallableType[builtins.function]]],TypeAlias[Union[None,Tuple[builtins.str,builtins.str,builtins.str],CallableType[builtins.function]]],TypeAlias[Union[None,Tuple[builtins.str,builtins.str,builtins.str],CallableType[builtins.function]]],builtins.int,Union[typing.Container[builtins.str],None]]ç
qTypeAlias[Union[None,Tuple[builtins.str,builtins.str,builtins.str,builtins.str],CallableType[builtins.function]]]˙
fUnion[None,Tuple[builtins.str,builtins.str,builtins.str,builtins.str],CallableType[builtins.function]]
None∂
:Tuple[builtins.str,builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.strK
CallableType[builtins.function]&
builtins.function"builtins.function"tabulate._TableFormatLineç
qTypeAlias[Union[None,Tuple[builtins.str,builtins.str,builtins.str,builtins.str],CallableType[builtins.function]]]˙
fUnion[None,Tuple[builtins.str,builtins.str,builtins.str,builtins.str],CallableType[builtins.function]]
None∂
:Tuple[builtins.str,builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.strK
CallableType[builtins.function]&
builtins.function"builtins.function"tabulate._TableFormatLineç
qTypeAlias[Union[None,Tuple[builtins.str,builtins.str,builtins.str,builtins.str],CallableType[builtins.function]]]˙
fUnion[None,Tuple[builtins.str,builtins.str,builtins.str,builtins.str],CallableType[builtins.function]]
None∂
:Tuple[builtins.str,builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.strK
CallableType[builtins.function]&
builtins.function"builtins.function"tabulate._TableFormatLineç
qTypeAlias[Union[None,Tuple[builtins.str,builtins.str,builtins.str,builtins.str],CallableType[builtins.function]]]˙
fUnion[None,Tuple[builtins.str,builtins.str,builtins.str,builtins.str],CallableType[builtins.function]]
None∂
:Tuple[builtins.str,builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.strK
CallableType[builtins.function]&
builtins.function"builtins.function"tabulate._TableFormatLine«
dTypeAlias[Union[None,Tuple[builtins.str,builtins.str,builtins.str],CallableType[builtins.function]]]¬
YUnion[None,Tuple[builtins.str,builtins.str,builtins.str],CallableType[builtins.function]]
Noneã
-Tuple[builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.strK
CallableType[builtins.function]&
builtins.function"builtins.function"tabulate._TableFormatRow«
dTypeAlias[Union[None,Tuple[builtins.str,builtins.str,builtins.str],CallableType[builtins.function]]]¬
YUnion[None,Tuple[builtins.str,builtins.str,builtins.str],CallableType[builtins.function]]
Noneã
-Tuple[builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.strK
CallableType[builtins.function]&
builtins.function"builtins.function"tabulate._TableFormatRow
builtins.int"builtins.intä
*Union[typing.Container[builtins.str],None]P
typing.Container[builtins.str]
builtins.str"builtins.str"typing.Container
None *¥
floatfmt£
1Union[builtins.str,typing.Iterable[builtins.str]]
builtins.str"builtins.strN
typing.Iterable[builtins.str]
builtins.str"builtins.str"typing.Iterable *T
numalignD
Union[builtins.str,None]
builtins.str"builtins.str
None *T
stralignD
Union[builtins.str,None]
builtins.str"builtins.str
None *∂

missingval£
1Union[builtins.str,typing.Iterable[builtins.str]]
builtins.str"builtins.strN
typing.Iterable[builtins.str]
builtins.str"builtins.str"typing.Iterable *º
	showindex™
6Union[builtins.str,builtins.bool,typing.Iterable[Any]]
builtins.str"builtins.str
builtins.bool"builtins.bool0
typing.Iterable[Any]
Any"typing.Iterable *ø
disable_numparse¶
2Union[builtins.bool,typing.Iterable[builtins.int]]
builtins.bool"builtins.boolN
typing.Iterable[builtins.int]
builtins.int"builtins.int"typing.Iterable *Ÿ
colalign»
5Union[typing.Iterable[Union[builtins.str,None]],None]Ç
)typing.Iterable[Union[builtins.str,None]]D
Union[builtins.str,None]
builtins.str"builtins.str
None"typing.Iterable
None z35z36z37z38z39z310*N
Any
typing.Any"
builtins.object"builtins.object*35*36*37*38*39*310*`
Callabletyping.Callable*
typing._SpecialForm"typing._SpecialForm*35*36*37*38*39*310*`
Optionaltyping.Optional*
typing._SpecialForm"typing._SpecialForm*35*36*37*38*39*310*Z
Uniontyping.Union*
typing._SpecialForm"typing._SpecialForm*35*36*37*38*39*310*l
PRESERVE_WHITESPACEtabulate.PRESERVE_WHITESPACE
builtins.bool"builtins.bool*35*36*37*38*39*310*d
WIDE_CHARS_MODEtabulate.WIDE_CHARS_MODE
builtins.bool"builtins.bool*35*36*37*38*39*310*í
tabulate_formatstabulate.tabulate_formatsJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*35*36*37*38*39*310