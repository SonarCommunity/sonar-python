
 torch.ao.quantization.quant_type¹
	QuantType*torch.ao.quantization.quant_type.QuantType"enum.IntEnumHr[
DYNAMIC2torch.ao.quantization.quant_type.QuantType.DYNAMIC
builtins.int"builtins.intrY
STATIC1torch.ao.quantization.quant_type.QuantType.STATIC
builtins.int"builtins.intrS
QAT.torch.ao.quantization.quant_type.QuantType.QAT
builtins.int"builtins.intrc
WEIGHT_ONLY6torch.ao.quantization.quant_type.QuantType.WEIGHT_ONLY
builtins.int"builtins.intÙ
_get_quant_type_to_str7torch.ao.quantization.quant_type._get_quant_type_to_str"
builtins.str"builtins.str*h

quant_typeX
*torch.ao.quantization.quant_type.QuantType"*torch.ao.quantization.quant_type.QuantTypeÏ
_quant_type_from_str5torch.ao.quantization.quant_type._quant_type_from_str"X
*torch.ao.quantization.quant_type.QuantType"*torch.ao.quantization.quant_type.QuantType*&
name
builtins.str"builtins.str*œ
__annotations__0torch.ao.quantization.quant_type.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*
__all__(torch.ao.quantization.quant_type.__all__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*›
_quant_type_to_str3torch.ao.quantization.quant_type._quant_type_to_strÏ
Fbuiltins.dict[torch.ao.quantization.quant_type.QuantType,builtins.str]X
*torch.ao.quantization.quant_type.QuantType"*torch.ao.quantization.quant_type.QuantType
builtins.str"builtins.str"builtins.dict