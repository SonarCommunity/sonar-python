
cgicgiö
_Environcgi._Environ"builtins.object2®
__getitem__cgi._Environ.__getitem__"
builtins.str"builtins.str*$
self
cgi._Environ"cgi._Environ*#
__k
builtins.str"builtins.strz27z35z36z37z38z392©
keyscgi._Environ.keys"N
typing.Iterable[builtins.str]
builtins.str"builtins.str"typing.Iterable*&
self
cgi._Environ"cgi._Environz27z35z36z37z38z39`r27r35r36r37r38r39ñ
MiniFieldStoragecgi.MiniFieldStorage"builtins.object2™
__init__cgi.MiniFieldStorage.__init__"
None*6
self,
cgi.MiniFieldStorage"cgi.MiniFieldStorage*
name
Any*
value
Anyz27z35z36z37z38z392ï
__repr__cgi.MiniFieldStorage.__repr__"
builtins.str"builtins.str*4
self,
cgi.MiniFieldStorage"cgi.MiniFieldStoragez27z35z36z37z38z39r27r35r36r37r38r39¥!
FieldStoragecgi.FieldStorage"builtins.object2⁄
__init__cgi.FieldStorage.__init__"
None*.
self$
cgi.FieldStorage"cgi.FieldStorage*.
fp$
typing.IO[Any]
Any"	typing.IO *Ü
headersw
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping *1
outerboundary
builtins.str"builtins.str *ù
environç
4_typeshed.SupportsGetItem[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"_typeshed.SupportsGetItem *5
keep_blank_values
builtins.int"builtins.int *2
strict_parsing
builtins.int"builtins.int z272ñ
__init__cgi.FieldStorage.__init__"
None*.
self$
cgi.FieldStorage"cgi.FieldStorage*X
fpN
Union[typing.IO[Any],None]$
typing.IO[Any]
Any"	typing.IO
None *Ã
headersº
5Union[typing.Mapping[builtins.str,builtins.str],None]w
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping
None *5
outerboundary 
builtins.bytes"builtins.bytes *ù
environç
4_typeshed.SupportsGetItem[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"_typeshed.SupportsGetItem *5
keep_blank_values
builtins.int"builtins.int *2
strict_parsing
builtins.int"builtins.int *Q
limitD
Union[builtins.int,None]
builtins.int"builtins.int
None *,
encoding
builtins.str"builtins.str **
errors
builtins.str"builtins.str *Z
max_num_fieldsD
Union[builtins.int,None]
builtins.int"builtins.int
None *-
	separator
builtins.str"builtins.str z35z36z37z38z392â
__repr__cgi.FieldStorage.__repr__"
builtins.str"builtins.str*,
self$
cgi.FieldStorage"cgi.FieldStoragez27z35z36z37z38z392ª
__iter__cgi.FieldStorage.__iter__"N
typing.Iterator[builtins.str]
builtins.str"builtins.str"typing.Iterator*,
self$
cgi.FieldStorage"cgi.FieldStoragez27z35z36z37z38z392ü
__getitem__cgi.FieldStorage.__getitem__"
Any*,
self$
cgi.FieldStorage"cgi.FieldStorage*#
key
builtins.str"builtins.strz27z35z36z37z38z392µ
getvaluecgi.FieldStorage.getvalue"
Any*.
self$
cgi.FieldStorage"cgi.FieldStorage*%
key
builtins.str"builtins.str*
default
Any z27z35z36z37z38z392µ
getfirstcgi.FieldStorage.getfirst"
Any*.
self$
cgi.FieldStorage"cgi.FieldStorage*%
key
builtins.str"builtins.str*
default
Any z27z35z36z37z38z392¿
getlistcgi.FieldStorage.getlist",
builtins.list[Any]
Any"builtins.list*.
self$
cgi.FieldStorage"cgi.FieldStorage*%
key
builtins.str"builtins.strz27z35z36z37z38z392±
keyscgi.FieldStorage.keys"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*.
self$
cgi.FieldStorage"cgi.FieldStoragez27z35z36z37z38z392û
has_keycgi.FieldStorage.has_key"
builtins.bool"builtins.bool*.
self$
cgi.FieldStorage"cgi.FieldStorage*%
key
builtins.str"builtins.strz272∏
__contains__cgi.FieldStorage.__contains__"
builtins.bool"builtins.bool*,
self$
cgi.FieldStorage"cgi.FieldStorage*#
key
builtins.str"builtins.strz27z35z36z37z38z392á
__len__cgi.FieldStorage.__len__"
builtins.int"builtins.int*,
self$
cgi.FieldStorage"cgi.FieldStoragez27z35z36z37z38z392}
__nonzero__cgi.FieldStorage.__nonzero__"
builtins.bool"builtins.bool*,
self$
cgi.FieldStorage"cgi.FieldStoragez272∂
	make_filecgi.FieldStorage.make_file"B
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IO*.
self$
cgi.FieldStorage"cgi.FieldStorage*
binary
Any z272ë
	make_filecgi.FieldStorage.make_file"$
typing.IO[Any]
Any"	typing.IO*.
self$
cgi.FieldStorage"cgi.FieldStoragez35z36z37z38z392[
	__enter__cgi.FieldStorage.__enter__"

cgi._T*
self

cgi._Tz35z36z37z38z392Ñ
__exit__cgi.FieldStorage.__exit__"
None*,
self$
cgi.FieldStorage"cgi.FieldStorage*
args
Anyz35z36z37z38z392â
__bool__cgi.FieldStorage.__bool__"
builtins.bool"builtins.bool*.
self$
cgi.FieldStorage"cgi.FieldStoragez35z36z37z38z39r27r35r36r37r38r39˘
FormContentDictcgi.FormContentDict"UserDict.UserDict*builtins.dict*typing.MutableMapping*typing.Mapping*typing.Iterable*typing.Container2‡
__init__cgi.FormContentDict.__init__"
None*4
self*
cgi.FormContentDict"cgi.FormContentDict*Ü
environw
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping *5
keep_blank_values
builtins.int"builtins.int *2
strict_parsing
builtins.int"builtins.int z27r27≥
SvFormContentDictcgi.SvFormContentDict"cgi.FormContentDict*UserDict.UserDict*builtins.dict*typing.MutableMapping*typing.Mapping*typing.Iterable*typing.Container2Å
getlistcgi.SvFormContentDict.getlist"
Any*8
self.
cgi.SvFormContentDict"cgi.SvFormContentDict*
key
Anyz27r27Œ
InterpFormContentDictcgi.InterpFormContentDict"cgi.SvFormContentDict*cgi.FormContentDict*UserDict.UserDict*builtins.dict*typing.MutableMapping*typing.Mapping*typing.Iterable*typing.Containerr27æ
FormContentcgi.FormContent"cgi.FormContentDict*UserDict.UserDict*builtins.dict*typing.MutableMapping*typing.Mapping*typing.Iterable*typing.Container2ß
indexed_valuecgi.FormContent.indexed_value"
Any*,
self"
cgi.FormContent"cgi.FormContent*
key
Any**
location
builtins.int"builtins.intz272k
valuecgi.FormContent.value"
Any*,
self"
cgi.FormContent"cgi.FormContent*
key
Anyz272Ç
lengthcgi.FormContent.length"
builtins.int"builtins.int*,
self"
cgi.FormContent"cgi.FormContent*
key
Anyz272q
strippedcgi.FormContent.stripped"
Any*,
self"
cgi.FormContent"cgi.FormContent*
key
Anyz272â
parscgi.FormContent.pars"9
builtins.dict[Any,Any]
Any
Any"builtins.dict*,
self"
cgi.FormContent"cgi.FormContentz27r27"∫
parse	cgi.parse"≤
7builtins.dict[builtins.str,builtins.list[builtins.str]]
builtins.str"builtins.strJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list"builtins.dict*X
fpN
Union[typing.IO[Any],None]$
typing.IO[Any]
Any"	typing.IO
None *£
environì
7_typeshed.SupportsItemAccess[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"_typeshed.SupportsItemAccess *7
keep_blank_values
builtins.bool"builtins.bool *4
strict_parsing
builtins.bool"builtins.bool z27"˘
parse	cgi.parse"≤
7builtins.dict[builtins.str,builtins.list[builtins.str]]
builtins.str"builtins.strJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list"builtins.dict*X
fpN
Union[typing.IO[Any],None]$
typing.IO[Any]
Any"	typing.IO
None *£
environì
7_typeshed.SupportsItemAccess[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"_typeshed.SupportsItemAccess *7
keep_blank_values
builtins.bool"builtins.bool *4
strict_parsing
builtins.bool"builtins.bool *-
	separator
builtins.str"builtins.str z35z36z37z38z39"Ú
parse_qscgi.parse_qs"≤
7builtins.dict[builtins.str,builtins.list[builtins.str]]
builtins.str"builtins.strJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list"builtins.dict*$
qs
builtins.str"builtins.str*7
keep_blank_values
builtins.bool"builtins.bool *4
strict_parsing
builtins.bool"builtins.bool z27z35z36z37"‰
	parse_qslcgi.parse_qsl"¢
/builtins.list[Tuple[builtins.str,builtins.str]]`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"builtins.list*$
qs
builtins.str"builtins.str*7
keep_blank_values
builtins.bool"builtins.bool *4
strict_parsing
builtins.bool"builtins.bool z27z35z36z37"©
parse_multipartcgi.parse_multipart"≤
7builtins.dict[builtins.str,builtins.list[builtins.str]]
builtins.str"builtins.strJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list"builtins.dict*,
fp$
typing.IO[Any]
Any"	typing.IO*ô
pdictç
4_typeshed.SupportsGetItem[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"_typeshed.SupportsGetItemz27"ª
parse_multipartcgi.parse_multipart"∫
9builtins.dict[builtins.str,builtins.list[builtins.bytes]]
builtins.str"builtins.strP
builtins.list[builtins.bytes] 
builtins.bytes"builtins.bytes"builtins.list"builtins.dict*,
fp$
typing.IO[Any]
Any"	typing.IO*ü
pdictì
6_typeshed.SupportsGetItem[builtins.str,builtins.bytes]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes"_typeshed.SupportsGetItemz35z36"ô
parse_multipartcgi.parse_multipart"ã
.builtins.dict[builtins.str,builtins.list[Any]]
builtins.str"builtins.str,
builtins.list[Any]
Any"builtins.list"builtins.dict*,
fp$
typing.IO[Any]
Any"	typing.IO*ü
pdictì
6_typeshed.SupportsGetItem[builtins.str,builtins.bytes]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes"_typeshed.SupportsGetItem*,
encoding
builtins.str"builtins.str **
errors
builtins.str"builtins.str *-
	separator
builtins.str"builtins.str z37z38z39"∏
parse_headercgi.parse_header"’
<Tuple[builtins.str,builtins.dict[builtins.str,builtins.str]]
builtins.str"builtins.stru
(builtins.dict[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"builtins.dict*&
line
builtins.str"builtins.strz27z35z36z37z38z39"_
testcgi.test"
None*+
environ
cgi._Environ"cgi._Environ z27z35z36z37z38z39"q
print_environcgi.print_environ"
None*+
environ
cgi._Environ"cgi._Environ z27z35z36z37z38z39"°

print_formcgi.print_form"
None*a
formW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dictz27z35z36z37z38z39"H
print_directorycgi.print_directory"
Nonez27z35z36z37z38z39"P
print_environ_usagecgi.print_environ_usage"
Nonez27z35z36z37z38z39"r
escape
cgi.escape"
typing.AnyStr*
s
typing.AnyStr*+
quote
builtins.bool"builtins.bool z27"π
escape
cgi.escape"
builtins.str"builtins.str*#
s
builtins.str"builtins.str*T
quoteG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None z35z36z37