
Ltorch.distributed._shard.sharding_spec.chunk_sharding_spec_ops.embedding_bag¡
_validate_embedding_bag_paramjtorch.distributed._shard.sharding_spec.chunk_sharding_spec_ops.embedding_bag._validate_embedding_bag_param*
args*

kwargs 
_handle_col_wise_shardingftorch.distributed._shard.sharding_spec.chunk_sharding_spec_ops.embedding_bag._handle_col_wise_sharding*	
input*

world_size*

weight*
local_shard*
offsets*
per_sample_weights*
mode*
max_norm*
	norm_type*
padding_idx*
pgª
_handle_row_wise_shardingftorch.distributed._shard.sharding_spec.chunk_sharding_spec_ops.embedding_bag._handle_row_wise_sharding*	
input*

world_size*

weight*
local_shard*
offsets*
per_sample_weights*
mode*
max_norm*
	norm_type*
padding_idx*
rank*
pgÇ
_all_gather_embedding_bag_inputltorch.distributed._shard.sharding_spec.chunk_sharding_spec_ops.embedding_bag._all_gather_embedding_bag_input*	
input*
per_sample_weights*
offsets*
pg*È
__annotations__\torch.distributed._shard.sharding_spec.chunk_sharding_spec_ops.embedding_bag.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*
disttorch.distributed 