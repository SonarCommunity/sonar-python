
#networkx.algorithms.tree.branchings´
MultiDiGraph_EdgeKey8networkx.algorithms.tree.branchings.MultiDiGraph_EdgeKey"*networkx.classes.multidigraph.MultiDiGraph*ý
__init__Anetworkx.algorithms.tree.branchings.MultiDiGraph_EdgeKey.__init__"
None*ô
selfé
Vnetworkx.algorithms.tree.branchings.MultiDiGraph_EdgeKey[networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable"8networkx.algorithms.tree.branchings.MultiDiGraph_EdgeKey*v
incoming_graph_data[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *
attr
Anyz36z37z38z39z310z311z312z313*ˆ
remove_nodeDnetworkx.algorithms.tree.branchings.MultiDiGraph_EdgeKey.remove_node"
None*ô
selfé
Vnetworkx.algorithms.tree.branchings.MultiDiGraph_EdgeKey[networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable"8networkx.algorithms.tree.branchings.MultiDiGraph_EdgeKey*
n
Anyz36z37z38z39z310z311z312z313*™
remove_nodes_fromJnetworkx.algorithms.tree.branchings.MultiDiGraph_EdgeKey.remove_nodes_from"
None*ô
selfé
Vnetworkx.algorithms.tree.branchings.MultiDiGraph_EdgeKey[networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable"8networkx.algorithms.tree.branchings.MultiDiGraph_EdgeKey*
nbunch
Anyz36z37z38z39z310z311z312z313*Ò
add_edgeAnetworkx.algorithms.tree.branchings.MultiDiGraph_EdgeKey.add_edge"
None*ô
selfé
Vnetworkx.algorithms.tree.branchings.MultiDiGraph_EdgeKey[networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable"8networkx.algorithms.tree.branchings.MultiDiGraph_EdgeKey*

u_for_edge
Any*

v_for_edge
Any*
key_for_edge
Any*
attr
Anyz36z37z38z39z310z311z312z313*­
add_edges_fromGnetworkx.algorithms.tree.branchings.MultiDiGraph_EdgeKey.add_edges_from"
None*ô
selfé
Vnetworkx.algorithms.tree.branchings.MultiDiGraph_EdgeKey[networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable"8networkx.algorithms.tree.branchings.MultiDiGraph_EdgeKey*
ebunch_to_add
Any*
attr
Anyz36z37z38z39z310z311z312z313*œ
remove_edge_with_keyMnetworkx.algorithms.tree.branchings.MultiDiGraph_EdgeKey.remove_edge_with_key"
None*ô
selfé
Vnetworkx.algorithms.tree.branchings.MultiDiGraph_EdgeKey[networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable"8networkx.algorithms.tree.branchings.MultiDiGraph_EdgeKey*
key
Anyz36z37z38z39z310z311z312z313*™
remove_edges_fromJnetworkx.algorithms.tree.branchings.MultiDiGraph_EdgeKey.remove_edges_from"
None*ô
selfé
Vnetworkx.algorithms.tree.branchings.MultiDiGraph_EdgeKey[networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable"8networkx.algorithms.tree.branchings.MultiDiGraph_EdgeKey*
ebunch
Anyz36z37z38z39z310z311z312z313Pj36j37j38j39j310j311j312j313r¨

edge_indexCnetworkx.algorithms.tree.branchings.MultiDiGraph_EdgeKey.edge_index1
TypeAlias[Any]
Any"_typeshed.Incomplete*36*37*38*39*310*311*312*313¢
Edmonds+networkx.algorithms.tree.branchings.Edmonds"builtins.object*Í
__init__4networkx.algorithms.tree.branchings.Edmonds.__init__"
None*d
selfZ
+networkx.algorithms.tree.branchings.Edmonds"+networkx.algorithms.tree.branchings.Edmonds*
G
Any*g
seed[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None z36z37z38z39z310z311z312z313*˜
find_optimum8networkx.algorithms.tree.branchings.Edmonds.find_optimum"
Any*d
selfZ
+networkx.algorithms.tree.branchings.Edmonds"+networkx.algorithms.tree.branchings.Edmonds*(
attr
builtins.str"builtins.str */
default 
builtins.float"builtins.float *(
kind
builtins.str"builtins.str *)
style
builtins.str"builtins.str *4
preserve_attrs
builtins.bool"builtins.bool *l
	partition[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *g
seed[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None z36z37z38z39z310z311z312z313j36j37j38j39j310j311j312j313r›

G_original6networkx.algorithms.tree.branchings.Edmonds.G_original1
TypeAlias[Any]
Any"_typeshed.Incomplete*36*37*38*39*310*311*312*313r~
store1networkx.algorithms.tree.branchings.Edmonds.store
builtins.bool"builtins.bool*36*37*38*39*310*311*312*313r‘
edges1networkx.algorithms.tree.branchings.Edmonds.edges1
TypeAlias[Any]
Any"_typeshed.Incomplete*36*37*38*39*310*311*312*313r—
template4networkx.algorithms.tree.branchings.Edmonds.template1
TypeAlias[Any]
Any"_typeshed.Incomplete*36*37*38*39*310*311*312*313¹
ArborescenceIterator8networkx.algorithms.tree.branchings.ArborescenceIterator"builtins.object*Ù
__init__Anetworkx.algorithms.tree.branchings.ArborescenceIterator.__init__"
None*~
selft
8networkx.algorithms.tree.branchings.ArborescenceIterator"8networkx.algorithms.tree.branchings.ArborescenceIterator*
G
Any**
weight
builtins.str"builtins.str *-
minimum
builtins.bool"builtins.bool *q
init_partition[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None z36z37z38z39z310z311z312z313*Ð
__iter__Anetworkx.algorithms.tree.branchings.ArborescenceIterator.__iter__"e
typing.Iterator[TypeAlias[Any]]1
TypeAlias[Any]
Any"_typeshed.Incomplete"typing.Iterator*vt
8networkx.algorithms.tree.branchings.ArborescenceIterator"8networkx.algorithms.tree.branchings.ArborescenceIteratorz36z37z38z39z310z311z312z313*{
__next__Anetworkx.algorithms.tree.branchings.ArborescenceIterator.__next__*
selfz36z37z38z39z310z311z312z313j36j37j38j39j310j311j312j313r–
G:networkx.algorithms.tree.branchings.ArborescenceIterator.G1
TypeAlias[Any]
Any"_typeshed.Incomplete*36*37*38*39*310*311*312*313r 
weight?networkx.algorithms.tree.branchings.ArborescenceIterator.weight1
TypeAlias[Any]
Any"_typeshed.Incomplete*36*37*38*39*310*311*312*313r¢
minimum@networkx.algorithms.tree.branchings.ArborescenceIterator.minimum1
TypeAlias[Any]
Any"_typeshed.Incomplete*36*37*38*39*310*311*312*313r 
method?networkx.algorithms.tree.branchings.ArborescenceIterator.method1
TypeAlias[Any]
Any"_typeshed.Incomplete*36*37*38*39*310*311*312*313r™
partition_keyFnetworkx.algorithms.tree.branchings.ArborescenceIterator.partition_key
builtins.str"builtins.str*36*37*38*39*310*311*312*313r°
init_partitionGnetworkx.algorithms.tree.branchings.ArborescenceIterator.init_partition1
TypeAlias[Any]
Any"_typeshed.Incomplete*36*37*38*39*310*311*312*313r²
partition_queueHnetworkx.algorithms.tree.branchings.ArborescenceIterator.partition_queue1
TypeAlias[Any]
Any"_typeshed.Incomplete*36*37*38*39*310*311*312*313*Ã
__annotations__3networkx.algorithms.tree.branchings.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*36*37*38*39*310*311*312*313*¦
__all__+networkx.algorithms.tree.branchings.__all__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*36*37*38*39*310*311*312*313