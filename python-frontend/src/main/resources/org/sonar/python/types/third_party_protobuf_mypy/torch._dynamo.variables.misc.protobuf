
torch._dynamo.variables.misc◊
SuperVariable*torch._dynamo.variables.misc.SuperVariable",torch._dynamo.variables.base.VariableTracker*É
__init__3torch._dynamo.variables.misc.SuperVariable.__init__*
self*
typevar*
objvar *
specialized *

kwargs*\
reconstruct6torch._dynamo.variables.misc.SuperVariable.reconstruct*
self*
codegen*É
_resolved_getattr_and_sourceGtorch._dynamo.variables.misc.SuperVariable._resolved_getattr_and_source*
self*
tx*
name*¿
var_getattr6torch._dynamo.variables.misc.SuperVariable.var_getattr"\
,torch._dynamo.variables.base.VariableTracker",torch._dynamo.variables.base.VariableTracker*b
selfX
*torch._dynamo.variables.misc.SuperVariable"*torch._dynamo.variables.misc.SuperVariable*
tx
Any*&
name
builtins.str"builtins.str*»
call_method6torch._dynamo.variables.misc.SuperVariable.call_method"\
,torch._dynamo.variables.base.VariableTracker",torch._dynamo.variables.base.VariableTracker*b
selfX
*torch._dynamo.variables.misc.SuperVariable"*torch._dynamo.variables.misc.SuperVariable*
tx
Any*
name
Any*µ
args™
;builtins.list[torch._dynamo.variables.base.VariableTracker]\
,torch._dynamo.variables.base.VariableTracker",torch._dynamo.variables.base.VariableTracker"builtins.list*‚
kwargs’
Hbuiltins.dict[builtins.str,torch._dynamo.variables.base.VariableTracker]
builtins.str"builtins.str\
,torch._dynamo.variables.base.VariableTracker",torch._dynamo.variables.base.VariableTracker"builtins.dictrï
_nonvar_fields9torch._dynamo.variables.misc.SuperVariable._nonvar_fieldsH
builtins.set[builtins.str]
builtins.str"builtins.str"builtins.setrF
typevar2torch._dynamo.variables.misc.SuperVariable.typevar
AnyrD
objvar1torch._dynamo.variables.misc.SuperVariable.objvar
AnyrN
specialized6torch._dynamo.variables.misc.SuperVariable.specialized
Any⁄
ExceptionVariable.torch._dynamo.variables.misc.ExceptionVariable",torch._dynamo.variables.base.VariableTracker*q
__init__7torch._dynamo.variables.misc.ExceptionVariable.__init__*
self*
exc_type*
args*

kwargs*`
reconstruct:torch._dynamo.variables.misc.ExceptionVariable.reconstruct*
self*
codegenrL
exc_type7torch._dynamo.variables.misc.ExceptionVariable.exc_type
AnyrD
args3torch._dynamo.variables.misc.ExceptionVariable.args
Anym
UnknownVariable,torch._dynamo.variables.misc.UnknownVariable",torch._dynamo.variables.base.VariableTracker}
DelayGraphBreakVariable4torch._dynamo.variables.misc.DelayGraphBreakVariable",torch._dynamo.variables.misc.UnknownVariable·	
ComptimeVariable-torch._dynamo.variables.misc.ComptimeVariable",torch._dynamo.variables.base.VariableTracker*_
reconstruct9torch._dynamo.variables.misc.ComptimeVariable.reconstruct*
self*
codegen*…
var_getattr9torch._dynamo.variables.misc.ComptimeVariable.var_getattr"\
,torch._dynamo.variables.base.VariableTracker",torch._dynamo.variables.base.VariableTracker*h
self^
-torch._dynamo.variables.misc.ComptimeVariable"-torch._dynamo.variables.misc.ComptimeVariable*
tx
Any*&
name
builtins.str"builtins.str*¬
call_function;torch._dynamo.variables.misc.ComptimeVariable.call_function"\
,torch._dynamo.variables.base.VariableTracker",torch._dynamo.variables.base.VariableTracker*h
self^
-torch._dynamo.variables.misc.ComptimeVariable"-torch._dynamo.variables.misc.ComptimeVariable*
tx
Any*µ
args™
;builtins.list[torch._dynamo.variables.base.VariableTracker]\
,torch._dynamo.variables.base.VariableTracker",torch._dynamo.variables.base.VariableTracker"builtins.list*‚
kwargs’
Hbuiltins.dict[builtins.str,torch._dynamo.variables.base.VariableTracker]
builtins.str"builtins.str\
,torch._dynamo.variables.base.VariableTracker",torch._dynamo.variables.base.VariableTracker"builtins.dicté
ClosureVariable,torch._dynamo.variables.misc.ClosureVariable",torch._dynamo.variables.misc.UnknownVariable*a
__init__5torch._dynamo.variables.misc.ClosureVariable.__init__*
self*
name*

kwargs*^
reconstruct8torch._dynamo.variables.misc.ClosureVariable.reconstruct*
self*
codegenró
_nonvar_fields;torch._dynamo.variables.misc.ClosureVariable._nonvar_fieldsH
builtins.set[builtins.str]
builtins.str"builtins.str"builtins.setrB
name1torch._dynamo.variables.misc.ClosureVariable.name
Any∏
InlinedClosureVariable3torch._dynamo.variables.misc.InlinedClosureVariable",torch._dynamo.variables.misc.UnknownVariable*h
__init__<torch._dynamo.variables.misc.InlinedClosureVariable.__init__*
self*
name*

kwargs*e
reconstruct?torch._dynamo.variables.misc.InlinedClosureVariable.reconstruct*
self*
codegenrû
_nonvar_fieldsBtorch._dynamo.variables.misc.InlinedClosureVariable._nonvar_fieldsH
builtins.set[builtins.str]
builtins.str"builtins.str"builtins.setrI
name8torch._dynamo.variables.misc.InlinedClosureVariable.name
Any∆
NewCellVariable,torch._dynamo.variables.misc.NewCellVariable",torch._dynamo.variables.base.VariableTracker*W
__init__5torch._dynamo.variables.misc.NewCellVariable.__init__*
self*

kwargsÃ
NewGlobalVariable.torch._dynamo.variables.misc.NewGlobalVariable",torch._dynamo.variables.base.VariableTracker*Y
__init__7torch._dynamo.variables.misc.NewGlobalVariable.__init__*
self*

kwargs◊
InspectSignatureVariable5torch._dynamo.variables.misc.InspectSignatureVariable",torch._dynamo.variables.base.VariableTracker*r
create<torch._dynamo.variables.misc.InspectSignatureVariable.create*
callable*

kwargs0:staticmethodh*–
__init__>torch._dynamo.variables.misc.InspectSignatureVariable.__init__"
None*x
selfn
5torch._dynamo.variables.misc.InspectSignatureVariable"5torch._dynamo.variables.misc.InspectSignatureVariable*k
	inspected\
,torch._dynamo.variables.base.VariableTracker",torch._dynamo.variables.base.VariableTracker*
kwargs
Any*·
var_getattrAtorch._dynamo.variables.misc.InspectSignatureVariable.var_getattr"\
,torch._dynamo.variables.base.VariableTracker",torch._dynamo.variables.base.VariableTracker*x
selfn
5torch._dynamo.variables.misc.InspectSignatureVariable"5torch._dynamo.variables.misc.InspectSignatureVariable*
tx
Any*&
name
builtins.str"builtins.strr™
	inspected?torch._dynamo.variables.misc.InspectSignatureVariable.inspected\
,torch._dynamo.variables.base.VariableTracker",torch._dynamo.variables.base.VariableTracker
InspectParameterVariable5torch._dynamo.variables.misc.InspectParameterVariable",torch._dynamo.variables.base.VariableTrackerÏ
AutogradFunctionVariable5torch._dynamo.variables.misc.AutogradFunctionVariable",torch._dynamo.variables.base.VariableTracker*l
__init__>torch._dynamo.variables.misc.AutogradFunctionVariable.__init__*
self*

fn_cls*

kwargs*v

call_apply@torch._dynamo.variables.misc.AutogradFunctionVariable.call_apply*
self*
tx*
args*

kwargs*|
call_backwardCtorch._dynamo.variables.misc.AutogradFunctionVariable.call_backward*
self*
tx*
args*

kwargs*|
call_functionCtorch._dynamo.variables.misc.AutogradFunctionVariable.call_function*
self*
tx*
args*

kwargs*î
call_methodAtorch._dynamo.variables.misc.AutogradFunctionVariable.call_method"
Any*x
selfn
5torch._dynamo.variables.misc.AutogradFunctionVariable"5torch._dynamo.variables.misc.AutogradFunctionVariable*
tx
Any*
name
Any*µ
args™
;builtins.list[torch._dynamo.variables.base.VariableTracker]\
,torch._dynamo.variables.base.VariableTracker",torch._dynamo.variables.base.VariableTracker"builtins.list*‚
kwargs’
Hbuiltins.dict[builtins.str,torch._dynamo.variables.base.VariableTracker]
builtins.str"builtins.str\
,torch._dynamo.variables.base.VariableTracker",torch._dynamo.variables.base.VariableTracker"builtins.dictr†
_nonvar_fieldsDtorch._dynamo.variables.misc.AutogradFunctionVariable._nonvar_fieldsH
builtins.set[builtins.str]
builtins.str"builtins.str"builtins.setrO
fn_cls<torch._dynamo.variables.misc.AutogradFunctionVariable.fn_cls
Any£
SavedTensorBox+torch._dynamo.variables.misc.SavedTensorBox"builtins.object*Ì
__init__4torch._dynamo.variables.misc.SavedTensorBox.__init__"
None*d
selfZ
+torch._dynamo.variables.misc.SavedTensorBox"+torch._dynamo.variables.misc.SavedTensorBox*∫
tensors™
;builtins.list[torch._dynamo.variables.base.VariableTracker]\
,torch._dynamo.variables.base.VariableTracker",torch._dynamo.variables.base.VariableTracker"builtins.list 8rÎ
tensors3torch._dynamo.variables.misc.SavedTensorBox.tensors™
;builtins.list[torch._dynamo.variables.base.VariableTracker]\
,torch._dynamo.variables.base.VariableTracker",torch._dynamo.variables.base.VariableTracker"builtins.listrÚ
__dataclass_fields__@torch._dynamo.variables.misc.SavedTensorBox.__dataclass_fields__ó
2builtins.dict[builtins.str,dataclasses.Field[Any]]
builtins.str"builtins.str4
dataclasses.Field[Any]
Any"dataclasses.Field"builtins.dict˘
AutogradFunctionContextVariable<torch._dynamo.variables.misc.AutogradFunctionContextVariable">torch._dynamo.variables.user_defined.UserDefinedObjectVariable*œ
__init__Etorch._dynamo.variables.misc.AutogradFunctionContextVariable.__init__*
self*	
value*

value_type *
	inference *
proxy *
saved_tensors *
needs_input_grad *

kwargs*Å
createCtorch._dynamo.variables.misc.AutogradFunctionContextVariable.create*
tx*

args *
kwargs 0:staticmethodh*[
as_proxyEtorch._dynamo.variables.misc.AutogradFunctionContextVariable.as_proxy*
self*ˇ
call_methodHtorch._dynamo.variables.misc.AutogradFunctionContextVariable.call_method"\
,torch._dynamo.variables.base.VariableTracker",torch._dynamo.variables.base.VariableTracker*Ü
self|
<torch._dynamo.variables.misc.AutogradFunctionContextVariable"<torch._dynamo.variables.misc.AutogradFunctionContextVariable*
tx
Any*
name
Any*µ
args™
;builtins.list[torch._dynamo.variables.base.VariableTracker]\
,torch._dynamo.variables.base.VariableTracker",torch._dynamo.variables.base.VariableTracker"builtins.list*‚
kwargs’
Hbuiltins.dict[builtins.str,torch._dynamo.variables.base.VariableTracker]
builtins.str"builtins.str\
,torch._dynamo.variables.base.VariableTracker",torch._dynamo.variables.base.VariableTracker"builtins.dict*s
var_getattrHtorch._dynamo.variables.misc.AutogradFunctionContextVariable.var_getattr*
self*
tx*
namerß
_nonvar_fieldsKtorch._dynamo.variables.misc.AutogradFunctionContextVariable._nonvar_fieldsH
builtins.set[builtins.str]
builtins.str"builtins.str"builtins.setr\
	inferenceFtorch._dynamo.variables.misc.AutogradFunctionContextVariable.inference
AnyrT
proxyBtorch._dynamo.variables.misc.AutogradFunctionContextVariable.proxy
Anyrd
saved_tensorsJtorch._dynamo.variables.misc.AutogradFunctionContextVariable.saved_tensors
Anyrj
needs_input_gradMtorch._dynamo.variables.misc.AutogradFunctionContextVariable.needs_input_grad
Any…
LambdaVariable+torch._dynamo.variables.misc.LambdaVariable",torch._dynamo.variables.base.VariableTracker*^
__init__4torch._dynamo.variables.misc.LambdaVariable.__init__*
self*
fn*

kwargs*º
call_function9torch._dynamo.variables.misc.LambdaVariable.call_function"\
,torch._dynamo.variables.base.VariableTracker",torch._dynamo.variables.base.VariableTracker*d
selfZ
+torch._dynamo.variables.misc.LambdaVariable"+torch._dynamo.variables.misc.LambdaVariable*
tx
Any*µ
args™
;builtins.list[torch._dynamo.variables.base.VariableTracker]\
,torch._dynamo.variables.base.VariableTracker",torch._dynamo.variables.base.VariableTracker"builtins.list*‚
kwargs’
Hbuiltins.dict[builtins.str,torch._dynamo.variables.base.VariableTracker]
builtins.str"builtins.str\
,torch._dynamo.variables.base.VariableTracker",torch._dynamo.variables.base.VariableTracker"builtins.dictr=
fn.torch._dynamo.variables.misc.LambdaVariable.fn
Any≠
GetAttrVariable,torch._dynamo.variables.misc.GetAttrVariable",torch._dynamo.variables.base.VariableTracker*j
__init__5torch._dynamo.variables.misc.GetAttrVariable.__init__*
self*
obj*
name*

kwargs*A
__str__4torch._dynamo.variables.misc.GetAttrVariable.__str__* *≈
create_getattr_proxyAtorch._dynamo.variables.misc.GetAttrVariable.create_getattr_proxy"
Any*<

base_proxy,
torch.fx.proxy.Proxy"torch.fx.proxy.Proxy*
attr
Any0:staticmethodh*K
as_proxy5torch._dynamo.variables.misc.GetAttrVariable.as_proxy*
self*g
const_getattr:torch._dynamo.variables.misc.GetAttrVariable.const_getattr*
self*
tx*
name*^
reconstruct8torch._dynamo.variables.misc.GetAttrVariable.reconstruct*
self*
codegen*ø
call_function:torch._dynamo.variables.misc.GetAttrVariable.call_function"\
,torch._dynamo.variables.base.VariableTracker",torch._dynamo.variables.base.VariableTracker*f
self\
,torch._dynamo.variables.misc.GetAttrVariable",torch._dynamo.variables.misc.GetAttrVariable*
tx
Any*µ
args™
;builtins.list[torch._dynamo.variables.base.VariableTracker]\
,torch._dynamo.variables.base.VariableTracker",torch._dynamo.variables.base.VariableTracker"builtins.list*‚
kwargs’
Hbuiltins.dict[builtins.str,torch._dynamo.variables.base.VariableTracker]
builtins.str"builtins.str\
,torch._dynamo.variables.base.VariableTracker",torch._dynamo.variables.base.VariableTracker"builtins.dict*Œ
call_method8torch._dynamo.variables.misc.GetAttrVariable.call_method"\
,torch._dynamo.variables.base.VariableTracker",torch._dynamo.variables.base.VariableTracker*f
self\
,torch._dynamo.variables.misc.GetAttrVariable",torch._dynamo.variables.misc.GetAttrVariable*
tx
Any*
name
Any*µ
args™
;builtins.list[torch._dynamo.variables.base.VariableTracker]\
,torch._dynamo.variables.base.VariableTracker",torch._dynamo.variables.base.VariableTracker"builtins.list*‚
kwargs’
Hbuiltins.dict[builtins.str,torch._dynamo.variables.base.VariableTracker]
builtins.str"builtins.str\
,torch._dynamo.variables.base.VariableTracker",torch._dynamo.variables.base.VariableTracker"builtins.dictró
_nonvar_fields;torch._dynamo.variables.misc.GetAttrVariable._nonvar_fieldsH
builtins.set[builtins.str]
builtins.str"builtins.str"builtins.setr@
obj0torch._dynamo.variables.misc.GetAttrVariable.obj
AnyrB
name1torch._dynamo.variables.misc.GetAttrVariable.name
AnyÏ	
MethodWrapperVariable2torch._dynamo.variables.misc.MethodWrapperVariable",torch._dynamo.variables.base.VariableTracker*q
__init__;torch._dynamo.variables.misc.MethodWrapperVariable.__init__*
self*
method_wrapper*

kwargs*—
call_function@torch._dynamo.variables.misc.MethodWrapperVariable.call_function"\
,torch._dynamo.variables.base.VariableTracker",torch._dynamo.variables.base.VariableTracker*r
selfh
2torch._dynamo.variables.misc.MethodWrapperVariable"2torch._dynamo.variables.misc.MethodWrapperVariable*
tx
Any*µ
args™
;builtins.list[torch._dynamo.variables.base.VariableTracker]\
,torch._dynamo.variables.base.VariableTracker",torch._dynamo.variables.base.VariableTracker"builtins.list*‚
kwargs’
Hbuiltins.dict[builtins.str,torch._dynamo.variables.base.VariableTracker]
builtins.str"builtins.str\
,torch._dynamo.variables.base.VariableTracker",torch._dynamo.variables.base.VariableTracker"builtins.dict*e
is_python_constantEtorch._dynamo.variables.misc.MethodWrapperVariable.is_python_constant*
self*e
as_python_constantEtorch._dynamo.variables.misc.MethodWrapperVariable.as_python_constant*
selfr\
method_wrapperAtorch._dynamo.variables.misc.MethodWrapperVariable.method_wrapper
Any˙
GetSetDescriptorVariable5torch._dynamo.variables.misc.GetSetDescriptorVariable",torch._dynamo.variables.base.VariableTracker*j
__init__>torch._dynamo.variables.misc.GetSetDescriptorVariable.__init__*
self*
desc*

kwargs*l
var_getattrAtorch._dynamo.variables.misc.GetSetDescriptorVariable.var_getattr*
self*
tx*
name*h
is_python_constantHtorch._dynamo.variables.misc.GetSetDescriptorVariable.is_python_constant*
self*h
as_python_constantHtorch._dynamo.variables.misc.GetSetDescriptorVariable.as_python_constant*
selfrK
desc:torch._dynamo.variables.misc.GetSetDescriptorVariable.desc
AnyÂ
PythonModuleVariable1torch._dynamo.variables.misc.PythonModuleVariable",torch._dynamo.variables.base.VariableTracker*à
__init__:torch._dynamo.variables.misc.PythonModuleVariable.__init__"
None*p
selff
1torch._dynamo.variables.misc.PythonModuleVariable"1torch._dynamo.variables.misc.PythonModuleVariable*/
value$
types.ModuleType"types.ModuleType*
kwargs
Any*V
python_type=torch._dynamo.variables.misc.PythonModuleVariable.python_type*
self*d
as_python_constantDtorch._dynamo.variables.misc.PythonModuleVariable.as_python_constant*
self*H
__repr__:torch._dynamo.variables.misc.PythonModuleVariable.__repr__* *j
call_hasattr>torch._dynamo.variables.misc.PythonModuleVariable.call_hasattr*
self*
tx*
namerú
_nonvar_fields@torch._dynamo.variables.misc.PythonModuleVariable._nonvar_fieldsH
builtins.set[builtins.str]
builtins.str"builtins.str"builtins.setrf
value7torch._dynamo.variables.misc.PythonModuleVariable.value$
types.ModuleType"types.ModuleTyperf
is_torch:torch._dynamo.variables.misc.PythonModuleVariable.is_torch
builtins.bool"builtins.boolì	
TypingVariable+torch._dynamo.variables.misc.TypingVariable",torch._dynamo.variables.base.VariableTracker*a
__init__4torch._dynamo.variables.misc.TypingVariable.__init__*
self*	
value*

kwargs*À
call_method7torch._dynamo.variables.misc.TypingVariable.call_method"\
,torch._dynamo.variables.base.VariableTracker",torch._dynamo.variables.base.VariableTracker*d
selfZ
+torch._dynamo.variables.misc.TypingVariable"+torch._dynamo.variables.misc.TypingVariable*
tx
Any*
name
Any*µ
args™
;builtins.list[torch._dynamo.variables.base.VariableTracker]\
,torch._dynamo.variables.base.VariableTracker",torch._dynamo.variables.base.VariableTracker"builtins.list*‚
kwargs’
Hbuiltins.dict[builtins.str,torch._dynamo.variables.base.VariableTracker]
builtins.str"builtins.str\
,torch._dynamo.variables.base.VariableTracker",torch._dynamo.variables.base.VariableTracker"builtins.dict*P
python_type7torch._dynamo.variables.misc.TypingVariable.python_type*
self*^
as_python_constant>torch._dynamo.variables.misc.TypingVariable.as_python_constant*
selfrC
value1torch._dynamo.variables.misc.TypingVariable.value
AnyÑ
NumpyVariable*torch._dynamo.variables.misc.NumpyVariable",torch._dynamo.variables.base.VariableTracker*`
__init__3torch._dynamo.variables.misc.NumpyVariable.__init__*
self*	
value*

kwargs*É
can_constant_fold_throughDtorch._dynamo.variables.misc.NumpyVariable.can_constant_fold_through*
cls*
fn0:classmethodp*ë
 get_constant_collection_for_funcKtorch._dynamo.variables.misc.NumpyVariable.get_constant_collection_for_func*
cls*
fn0:classmethodp*π
call_function8torch._dynamo.variables.misc.NumpyVariable.call_function"\
,torch._dynamo.variables.base.VariableTracker",torch._dynamo.variables.base.VariableTracker*b
selfX
*torch._dynamo.variables.misc.NumpyVariable"*torch._dynamo.variables.misc.NumpyVariable*
tx
Any*µ
args™
;builtins.list[torch._dynamo.variables.base.VariableTracker]\
,torch._dynamo.variables.base.VariableTracker",torch._dynamo.variables.base.VariableTracker"builtins.list*‚
kwargs’
Hbuiltins.dict[builtins.str,torch._dynamo.variables.base.VariableTracker]
builtins.str"builtins.str\
,torch._dynamo.variables.base.VariableTracker",torch._dynamo.variables.base.VariableTracker"builtins.dict*»
call_method6torch._dynamo.variables.misc.NumpyVariable.call_method"\
,torch._dynamo.variables.base.VariableTracker",torch._dynamo.variables.base.VariableTracker*b
selfX
*torch._dynamo.variables.misc.NumpyVariable"*torch._dynamo.variables.misc.NumpyVariable*
tx
Any*
name
Any*µ
args™
;builtins.list[torch._dynamo.variables.base.VariableTracker]\
,torch._dynamo.variables.base.VariableTracker",torch._dynamo.variables.base.VariableTracker"builtins.list*‚
kwargs’
Hbuiltins.dict[builtins.str,torch._dynamo.variables.base.VariableTracker]
builtins.str"builtins.str\
,torch._dynamo.variables.base.VariableTracker",torch._dynamo.variables.base.VariableTracker"builtins.dict*O
python_type6torch._dynamo.variables.misc.NumpyVariable.python_type*
self*]
as_python_constant=torch._dynamo.variables.misc.NumpyVariable.as_python_constant*
self*I
as_proxy3torch._dynamo.variables.misc.NumpyVariable.as_proxy*
selfr÷
constant_fold_functionsBtorch._dynamo.variables.misc.NumpyVariable.constant_fold_functionsw
&Tuple[CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.functionrB
value0torch._dynamo.variables.misc.NumpyVariable.value
Any⁄
NullVariable)torch._dynamo.variables.misc.NullVariable",torch._dynamo.variables.base.VariableTracker*T
__init__2torch._dynamo.variables.misc.NullVariable.__init__*
self*

kwargs*>
__str__1torch._dynamo.variables.misc.NullVariable.__str__* *[
reconstruct5torch._dynamo.variables.misc.NullVariable.reconstruct*
self*
codegenm
DeletedVariable,torch._dynamo.variables.misc.DeletedVariable",torch._dynamo.variables.base.VariableTrackerÊ
StringFormatVariable1torch._dynamo.variables.misc.StringFormatVariable",torch._dynamo.variables.base.VariableTracker*ç
create8torch._dynamo.variables.misc.StringFormatVariable.create*
cls*
format_string*
sym_args*

sym_kwargs0:classmethodp*ç
__init__:torch._dynamo.variables.misc.StringFormatVariable.__init__*
self*
format_string*
sym_args*

sym_kwargs*

kwargs*H
__repr__:torch._dynamo.variables.misc.StringFormatVariable.__repr__* *c
reconstruct=torch._dynamo.variables.misc.StringFormatVariable.reconstruct*
self*
codegenrú
_nonvar_fields@torch._dynamo.variables.misc.StringFormatVariable._nonvar_fieldsH
builtins.set[builtins.str]
builtins.str"builtins.str"builtins.setrY
format_string?torch._dynamo.variables.misc.StringFormatVariable.format_string
AnyrO
sym_args:torch._dynamo.variables.misc.StringFormatVariable.sym_args
AnyrS

sym_kwargs<torch._dynamo.variables.misc.StringFormatVariable.sym_kwargs
Any±
DebuggingVariable.torch._dynamo.variables.misc.DebuggingVariable",torch._dynamo.variables.base.VariableTracker*d
__init__7torch._dynamo.variables.misc.DebuggingVariable.__init__*
self*	
value*

kwargs*å
is_reorderable_logging_functionNtorch._dynamo.variables.misc.DebuggingVariable.is_reorderable_logging_function*
obj0:staticmethodh*u
call_function<torch._dynamo.variables.misc.DebuggingVariable.call_function*
self*
tx*
args*

kwargs*`
reconstruct:torch._dynamo.variables.misc.DebuggingVariable.reconstruct*
self*
codegen*ß
can_reorder_logs?torch._dynamo.variables.misc.DebuggingVariable.can_reorder_logs"
Any*
fn
Any*
args
Any*
kwargs
Any0:staticmethodhrF
value4torch._dynamo.variables.misc.DebuggingVariable.value
Any∆
LoggingLoggerVariable2torch._dynamo.variables.misc.LoggingLoggerVariable",torch._dynamo.variables.base.VariableTracker*h
__init__;torch._dynamo.variables.misc.LoggingLoggerVariable.__init__*
self*	
value*

kwargs*‡
call_method>torch._dynamo.variables.misc.LoggingLoggerVariable.call_method"\
,torch._dynamo.variables.base.VariableTracker",torch._dynamo.variables.base.VariableTracker*r
selfh
2torch._dynamo.variables.misc.LoggingLoggerVariable"2torch._dynamo.variables.misc.LoggingLoggerVariable*
tx
Any*
name
Any*µ
args™
;builtins.list[torch._dynamo.variables.base.VariableTracker]\
,torch._dynamo.variables.base.VariableTracker",torch._dynamo.variables.base.VariableTracker"builtins.list*‚
kwargs’
Hbuiltins.dict[builtins.str,torch._dynamo.variables.base.VariableTracker]
builtins.str"builtins.str\
,torch._dynamo.variables.base.VariableTracker",torch._dynamo.variables.base.VariableTracker"builtins.dictí
StopIterationVariable2torch._dynamo.variables.misc.StopIterationVariable",torch._dynamo.variables.base.VariableTracker*g
__init__;torch._dynamo.variables.misc.StopIterationVariable.__init__*
self*
args*

kwargs*d
reconstruct>torch._dynamo.variables.misc.StopIterationVariable.reconstruct*
self*
codegenrH
args7torch._dynamo.variables.misc.StopIterationVariable.args
Anyë
ConstantLikeVariable1torch._dynamo.variables.misc.ConstantLikeVariable",torch._dynamo.variables.base.VariableTracker*g
__init__:torch._dynamo.variables.misc.ConstantLikeVariable.__init__*
self*	
value*

kwargs*V
python_type=torch._dynamo.variables.misc.ConstantLikeVariable.python_type*
self*d
as_python_constantDtorch._dynamo.variables.misc.ConstantLikeVariable.as_python_constant*
self*›
call_method=torch._dynamo.variables.misc.ConstantLikeVariable.call_method"\
,torch._dynamo.variables.base.VariableTracker",torch._dynamo.variables.base.VariableTracker*p
selff
1torch._dynamo.variables.misc.ConstantLikeVariable"1torch._dynamo.variables.misc.ConstantLikeVariable*
tx
Any*
name
Any*µ
args™
;builtins.list[torch._dynamo.variables.base.VariableTracker]\
,torch._dynamo.variables.base.VariableTracker",torch._dynamo.variables.base.VariableTracker"builtins.list*‚
kwargs’
Hbuiltins.dict[builtins.str,torch._dynamo.variables.base.VariableTracker]
builtins.str"builtins.str\
,torch._dynamo.variables.base.VariableTracker",torch._dynamo.variables.base.VariableTracker"builtins.dict*’
var_getattr=torch._dynamo.variables.misc.ConstantLikeVariable.var_getattr"\
,torch._dynamo.variables.base.VariableTracker",torch._dynamo.variables.base.VariableTracker*p
selff
1torch._dynamo.variables.misc.ConstantLikeVariable"1torch._dynamo.variables.misc.ConstantLikeVariable*
tx
Any*&
name
builtins.str"builtins.strrn
_error_prefix?torch._dynamo.variables.misc.ConstantLikeVariable._error_prefix
builtins.str"builtins.strrI
value7torch._dynamo.variables.misc.ConstantLikeVariable.value
AnyÏ
RegexPatternVariable1torch._dynamo.variables.misc.RegexPatternVariable"1torch._dynamo.variables.misc.ConstantLikeVariablern
_error_prefix?torch._dynamo.variables.misc.RegexPatternVariable._error_prefix
builtins.str"builtins.str˛
ConstantRegexMatchVariable7torch._dynamo.variables.misc.ConstantRegexMatchVariable"1torch._dynamo.variables.misc.ConstantLikeVariablert
_error_prefixEtorch._dynamo.variables.misc.ConstantRegexMatchVariable._error_prefix
builtins.str"builtins.str 
TorchVersionVariable1torch._dynamo.variables.misc.TorchVersionVariable"1torch._dynamo.variables.misc.ConstantLikeVariable*\
__init__:torch._dynamo.variables.misc.TorchVersionVariable.__init__*
self*

kwargsrn
_error_prefix?torch._dynamo.variables.misc.TorchVersionVariable._error_prefix
builtins.str"builtins.strÔ
NumpyTypeInfoVariable2torch._dynamo.variables.misc.NumpyTypeInfoVariable"1torch._dynamo.variables.misc.ConstantLikeVariablero
_error_prefix@torch._dynamo.variables.misc.NumpyTypeInfoVariable._error_prefix
builtins.str"builtins.str∂
NumpyDTypeVariable/torch._dynamo.variables.misc.NumpyDTypeVariable"1torch._dynamo.variables.misc.ConstantLikeVariable*N
as_proxy8torch._dynamo.variables.misc.NumpyDTypeVariable.as_proxy*
selfrl
_error_prefix=torch._dynamo.variables.misc.NumpyDTypeVariable._error_prefix
builtins.str"builtins.strÎ
7<subclass of "MutableLocal" and "AttributeMutationNew">Ttorch._dynamo.variables.misc.<subclass of "MutableLocal" and "AttributeMutationNew">")torch._dynamo.variables.base.MutableLocal"/torch._dynamo.side_effects.AttributeMutationNewÌ
8<subclass of "MutableLocal" and "AttributeMutationNew">1Utorch._dynamo.variables.misc.<subclass of "MutableLocal" and "AttributeMutationNew">1")torch._dynamo.variables.base.MutableLocal"/torch._dynamo.side_effects.AttributeMutationNewo
!produce_trampoline_autograd_apply>torch._dynamo.variables.misc.produce_trampoline_autograd_apply*

fn_cls*ò
__annotations__,torch._dynamo.variables.misc.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*
torchtorch *
tnptorch._numpy *
pytreetorch.utils._pytree *–
np_constant_collections_map8torch._dynamo.variables.misc.np_constant_collections_mapˆ
mbuiltins.dict[CallableType[builtins.function],CallableType[torch._dynamo.variables.base.VariableTrackerMeta]]K
CallableType[builtins.function]&
builtins.function"builtins.function®
>CallableType[torch._dynamo.variables.base.VariableTrackerMeta]d
0torch._dynamo.variables.base.VariableTrackerMeta"0torch._dynamo.variables.base.VariableTrackerMeta"builtins.dict