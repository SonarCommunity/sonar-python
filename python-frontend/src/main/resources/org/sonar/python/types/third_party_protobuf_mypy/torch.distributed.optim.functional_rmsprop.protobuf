
*torch.distributed.optim.functional_rmsprop√
_FunctionalRMSprop=torch.distributed.optim.functional_rmsprop._FunctionalRMSprop"builtins.object*ï
__init__Ftorch.distributed.optim.functional_rmsprop._FunctionalRMSprop.__init__"
None*à
self~
=torch.distributed.optim.functional_rmsprop._FunctionalRMSprop"=torch.distributed.optim.functional_rmsprop._FunctionalRMSprop*n
paramsb
#builtins.list[torch._tensor.Tensor],
torch._tensor.Tensor"torch._tensor.Tensor"builtins.list**
lr 
builtins.float"builtins.float *-
alpha 
builtins.float"builtins.float *+
eps 
builtins.float"builtins.float *4
weight_decay 
builtins.float"builtins.float *0
momentum 
builtins.float"builtins.float *.
centered
builtins.bool"builtins.bool *-
foreach
builtins.bool"builtins.bool *.
maximize
builtins.bool"builtins.bool *=
_allow_empty_param_list
builtins.bool"builtins.bool *è
stepBtorch.distributed.optim.functional_rmsprop._FunctionalRMSprop.step"
Any*à
self~
=torch.distributed.optim.functional_rmsprop._FunctionalRMSprop"=torch.distributed.optim.functional_rmsprop._FunctionalRMSprop*Æ
	gradientsû
/builtins.list[Union[torch._tensor.Tensor,None]]\
 Union[torch._tensor.Tensor,None],
torch._tensor.Tensor"torch._tensor.Tensor
None"builtins.list8rœ
defaultsFtorch.distributed.optim.functional_rmsprop._FunctionalRMSprop.defaults{
*builtins.dict[builtins.str,builtins.float]
builtins.str"builtins.str 
builtins.float"builtins.float"builtins.dictrr
centeredFtorch.distributed.optim.functional_rmsprop._FunctionalRMSprop.centered
builtins.bool"builtins.boolrp
foreachEtorch.distributed.optim.functional_rmsprop._FunctionalRMSprop.foreach
builtins.bool"builtins.boolrr
maximizeFtorch.distributed.optim.functional_rmsprop._FunctionalRMSprop.maximize
builtins.bool"builtins.boolr≠
param_groupItorch.distributed.optim.functional_rmsprop._FunctionalRMSprop.param_group“
?builtins.dict[builtins.str,builtins.list[torch._tensor.Tensor]]
builtins.str"builtins.strb
#builtins.list[torch._tensor.Tensor],
torch._tensor.Tensor"torch._tensor.Tensor"builtins.list"builtins.dictrU
stateCtorch.distributed.optim.functional_rmsprop._FunctionalRMSprop.state
Any*¶
__annotations__:torch.distributed.optim.functional_rmsprop.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*
Ftorch.optim._functional *â
__all__2torch.distributed.optim.functional_rmsprop.__all__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list