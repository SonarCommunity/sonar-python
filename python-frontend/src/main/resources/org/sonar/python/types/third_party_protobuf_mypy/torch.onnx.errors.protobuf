
torch.onnx.errorsR
OnnxExporterWarning%torch.onnx.errors.OnnxExporterWarning"builtins.UserWarningO
OnnxExporterError#torch.onnx.errors.OnnxExporterError"builtins.RuntimeErrorS
CheckerErrortorch.onnx.errors.CheckerError"#torch.onnx.errors.OnnxExporterErrorÀ
UnsupportedOperatorError*torch.onnx.errors.UnsupportedOperatorError"#torch.onnx.errors.OnnxExporterError*›
__init__3torch.onnx.errors.UnsupportedOperatorError.__init__"
None*b
selfX
*torch.onnx.errors.UnsupportedOperatorError"*torch.onnx.errors.UnsupportedOperatorError*&
name
builtins.str"builtins.str*)
version
builtins.int"builtins.int*[
supported_versionD
Union[builtins.int,None]
builtins.int"builtins.int
None—
SymbolicValueError$torch.onnx.errors.SymbolicValueError"#torch.onnx.errors.OnnxExporterError*Ô
__init__-torch.onnx.errors.SymbolicValueError.__init__"
None*V
selfL
$torch.onnx.errors.SymbolicValueError"$torch.onnx.errors.SymbolicValueError*%
msg
builtins.str"builtins.str*+
value 
torch._C.Value"torch._C.Value*ç
__annotations__!torch.onnx.errors.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*p
__all__torch.onnx.errors.__all__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list