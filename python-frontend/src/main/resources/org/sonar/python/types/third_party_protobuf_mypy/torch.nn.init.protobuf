
torch.nn.init_
_no_grad_uniform_torch.nn.init._no_grad_uniform_*

tensor*
a*
b*
	generator b
_no_grad_normal_torch.nn.init._no_grad_normal_*

tensor*
mean*
std*
	generator |
_no_grad_trunc_normal_$torch.nn.init._no_grad_trunc_normal_*

tensor*
mean*
std*
a*
b*
	generator C
_no_grad_fill_torch.nn.init._no_grad_fill_*

tensor*
val:
_no_grad_zero_torch.nn.init._no_grad_zero_*

tensorM
calculate_gaintorch.nn.init.calculate_gain*
nonlinearity*
param É
uniform_torch.nn.init.uniform_",
torch._tensor.Tensor"torch._tensor.Tensor*8
tensor,
torch._tensor.Tensor"torch._tensor.Tensor*)
a 
builtins.float"builtins.float *)
b 
builtins.float"builtins.float *g
	generatorV
Union[torch._C.Generator,None](
torch._C.Generator"torch._C.Generator
None Ì
normal_torch.nn.init.normal_",
torch._tensor.Tensor"torch._tensor.Tensor*8
tensor,
torch._tensor.Tensor"torch._tensor.Tensor*,
mean 
builtins.float"builtins.float *+
std 
builtins.float"builtins.float *g
	generatorV
Union[torch._C.Generator,None](
torch._C.Generator"torch._C.Generator
None ®
trunc_normal_torch.nn.init.trunc_normal_",
torch._tensor.Tensor"torch._tensor.Tensor*8
tensor,
torch._tensor.Tensor"torch._tensor.Tensor*,
mean 
builtins.float"builtins.float *+
std 
builtins.float"builtins.float *)
a 
builtins.float"builtins.float *)
b 
builtins.float"builtins.float *g
	generatorV
Union[torch._C.Generator,None](
torch._C.Generator"torch._C.Generator
None ·
	constant_torch.nn.init.constant_",
torch._tensor.Tensor"torch._tensor.Tensor*8
tensor,
torch._tensor.Tensor"torch._tensor.Tensor*)
val 
builtins.float"builtins.float„
ones_torch.nn.init.ones_",
torch._tensor.Tensor"torch._tensor.Tensor*8
tensor,
torch._tensor.Tensor"torch._tensor.Tensor†
zeros_torch.nn.init.zeros_",
torch._tensor.Tensor"torch._tensor.Tensor*8
tensor,
torch._tensor.Tensor"torch._tensor.Tensor&
eye_torch.nn.init.eye_*

tensor8
dirac_torch.nn.init.dirac_*

tensor*
groups X
_calculate_fan_in_and_fan_out+torch.nn.init._calculate_fan_in_and_fan_out*

tensor¯
xavier_uniform_torch.nn.init.xavier_uniform_",
torch._tensor.Tensor"torch._tensor.Tensor*8
tensor,
torch._tensor.Tensor"torch._tensor.Tensor*,
gain 
builtins.float"builtins.float *g
	generatorV
Union[torch._C.Generator,None](
torch._C.Generator"torch._C.Generator
None ­
xavier_normal_torch.nn.init.xavier_normal_",
torch._tensor.Tensor"torch._tensor.Tensor*8
tensor,
torch._tensor.Tensor"torch._tensor.Tensor*,
gain 
builtins.float"builtins.float *g
	generatorV
Union[torch._C.Generator,None](
torch._C.Generator"torch._C.Generator
None T
_calculate_correct_fan$torch.nn.init._calculate_correct_fan*

tensor*
modeå
kaiming_uniform_torch.nn.init.kaiming_uniform_"
Any*8
tensor,
torch._tensor.Tensor"torch._tensor.Tensor*)
a 
builtins.float"builtins.float *(
mode
builtins.str"builtins.str *0
nonlinearity
builtins.str"builtins.str *g
	generatorV
Union[torch._C.Generator,None](
torch._C.Generator"torch._C.Generator
None ã
kaiming_normal_torch.nn.init.kaiming_normal_"
Any*8
tensor,
torch._tensor.Tensor"torch._tensor.Tensor*)
a 
builtins.float"builtins.float *(
mode
builtins.str"builtins.str *0
nonlinearity
builtins.str"builtins.str *g
	generatorV
Union[torch._C.Generator,None](
torch._C.Generator"torch._C.Generator
None Ä
orthogonal_torch.nn.init.orthogonal_"
Any*
tensor
Any*
gain
Any *g
	generatorV
Union[torch._C.Generator,None](
torch._C.Generator"torch._C.Generator
None Ò
sparse_torch.nn.init.sparse_"
Any*
tensor
Any*
sparsity
Any*
std
Any *g
	generatorV
Union[torch._C.Generator,None](
torch._C.Generator"torch._C.Generator
None :
_make_deprecatetorch.nn.init._make_deprecate*
meth*‰
__annotations__torch.nn.init.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*H
	_Optionaltyping.Optional*
typing._SpecialForm"typing._SpecialForm*)
uniformtorch.nn.init.uniform
Any*'
normaltorch.nn.init.normal
Any*+
constanttorch.nn.init.constant
Any*!
eyetorch.nn.init.eye
Any*%
diractorch.nn.init.dirac
Any*7
xavier_uniformtorch.nn.init.xavier_uniform
Any*5
xavier_normaltorch.nn.init.xavier_normal
Any*9
kaiming_uniformtorch.nn.init.kaiming_uniform
Any*7
kaiming_normaltorch.nn.init.kaiming_normal
Any*/

orthogonaltorch.nn.init.orthogonal
Any*'
sparsetorch.nn.init.sparse
Any