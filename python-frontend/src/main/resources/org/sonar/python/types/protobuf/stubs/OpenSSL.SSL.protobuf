
OpenSSL.SSL¬
Sequencetyping.Sequence"typing.Collection"typing.Reversible*å
indextyping.Sequence.index"
builtins.int"builtins.int*L
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*
value
Any*)
start
builtins.int"builtins.int *(
stop
builtins.int"builtins.int z35z36z37z38z39z310*∑
counttyping.Sequence.count"
builtins.int"builtins.int*L
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*
value
Anyz35z36z37z38z39z310*⁄
__contains__typing.Sequence.__contains__"
builtins.bool"builtins.bool*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*'
x"
builtins.object"builtins.objectz35z36z37z38z39z310*Õ
__iter__typing.Sequence.__iter__"B
typing.Iterator[typing._T_co]
typing._T_co"typing.Iterator*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequencez35z36z37z38z39z310*’
__reversed__typing.Sequence.__reversed__"B
typing.Iterator[typing._T_co]
typing._T_co"typing.Iterator*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequencez35z36z37z38z39z3102ï
__getitem__typing.Sequence.__getitem__À
__getitem__typing.Sequence.__getitem__"
typing._T_co*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*!
i
builtins.int"builtins.int0:overload:abstractmethod@XÅ
__getitem__typing.Sequence.__getitem__"B
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*%
s 
builtins.slice"builtins.slice0:overload:abstractmethod@X"35"36"37"38"39"310Pj35j36j37j38j39j310¥*
X509OpenSSL.crypto.X509"builtins.object*Å
__init__OpenSSL.crypto.X509.__init__"
None*4
self*
OpenSSL.crypto.X509"OpenSSL.crypto.X509z35z36z37z38z39z310*û
add_extensions"OpenSSL.crypto.X509.add_extensions"
None*4
self*
OpenSSL.crypto.X509"OpenSSL.crypto.X509*é

extensions~
-typing.Iterable[OpenSSL.crypto.X509Extension]<
OpenSSL.crypto.X509Extension"OpenSSL.crypto.X509Extension"typing.Iterablez35z36z37z38z39z310*»
digestOpenSSL.crypto.X509.digest" 
builtins.bytes"builtins.bytes*4
self*
OpenSSL.crypto.X509"OpenSSL.crypto.X509*1
digest_name 
builtins.bytes"builtins.bytesz35z36z37z38z39z310*µ
from_cryptography%OpenSSL.crypto.X509.from_cryptography"*
OpenSSL.crypto.X509"OpenSSL.crypto.X509*R
clsI
Type[OpenSSL.crypto.X509]*
OpenSSL.crypto.X509"OpenSSL.crypto.X509*O
crypto_cert>
cryptography.x509.Certificate"cryptography.x509.Certificate0:classmethodpz35z36z37z38z39z310*Ë
get_extension!OpenSSL.crypto.X509.get_extension"<
OpenSSL.crypto.X509Extension"OpenSSL.crypto.X509Extension*4
self*
OpenSSL.crypto.X509"OpenSSL.crypto.X509*'
index
builtins.int"builtins.intz35z36z37z38z39z310*´
get_extension_count'OpenSSL.crypto.X509.get_extension_count"
builtins.int"builtins.int*4
self*
OpenSSL.crypto.X509"OpenSSL.crypto.X509z35z36z37z38z39z310*Ø

get_issuerOpenSSL.crypto.X509.get_issuer"2
OpenSSL.crypto.X509Name"OpenSSL.crypto.X509Name*4
self*
OpenSSL.crypto.X509"OpenSSL.crypto.X509z35z36z37z38z39z310*À
get_notAfter OpenSSL.crypto.X509.get_notAfter"J
Union[builtins.bytes,None] 
builtins.bytes"builtins.bytes
None*4
self*
OpenSSL.crypto.X509"OpenSSL.crypto.X509z35z36z37z38z39z310*Õ
get_notBefore!OpenSSL.crypto.X509.get_notBefore"J
Union[builtins.bytes,None] 
builtins.bytes"builtins.bytes
None*4
self*
OpenSSL.crypto.X509"OpenSSL.crypto.X509z35z36z37z38z39z310*ß

get_pubkeyOpenSSL.crypto.X509.get_pubkey"*
OpenSSL.crypto.PKey"OpenSSL.crypto.PKey*4
self*
OpenSSL.crypto.X509"OpenSSL.crypto.X509z35z36z37z38z39z310*ß
get_serial_number%OpenSSL.crypto.X509.get_serial_number"
builtins.int"builtins.int*4
self*
OpenSSL.crypto.X509"OpenSSL.crypto.X509z35z36z37z38z39z310*∑
get_signature_algorithm+OpenSSL.crypto.X509.get_signature_algorithm" 
builtins.bytes"builtins.bytes*4
self*
OpenSSL.crypto.X509"OpenSSL.crypto.X509z35z36z37z38z39z310*±
get_subjectOpenSSL.crypto.X509.get_subject"2
OpenSSL.crypto.X509Name"OpenSSL.crypto.X509Name*4
self*
OpenSSL.crypto.X509"OpenSSL.crypto.X509z35z36z37z38z39z310*õ
get_versionOpenSSL.crypto.X509.get_version"
builtins.int"builtins.int*4
self*
OpenSSL.crypto.X509"OpenSSL.crypto.X509z35z36z37z38z39z310*¡
gmtime_adj_notAfter'OpenSSL.crypto.X509.gmtime_adj_notAfter"
None*4
self*
OpenSSL.crypto.X509"OpenSSL.crypto.X509*(
amount
builtins.int"builtins.intz35z36z37z38z39z310*√
gmtime_adj_notBefore(OpenSSL.crypto.X509.gmtime_adj_notBefore"
None*4
self*
OpenSSL.crypto.X509"OpenSSL.crypto.X509*(
amount
builtins.int"builtins.intz35z36z37z38z39z310*ù
has_expiredOpenSSL.crypto.X509.has_expired"
builtins.bool"builtins.bool*4
self*
OpenSSL.crypto.X509"OpenSSL.crypto.X509z35z36z37z38z39z310*≈

set_issuerOpenSSL.crypto.X509.set_issuer"
None*4
self*
OpenSSL.crypto.X509"OpenSSL.crypto.X509*>
issuer2
OpenSSL.crypto.X509Name"OpenSSL.crypto.X509Namez35z36z37z38z39z310*µ
set_notAfter OpenSSL.crypto.X509.set_notAfter"
None*4
self*
OpenSSL.crypto.X509"OpenSSL.crypto.X509**
when 
builtins.bytes"builtins.bytesz35z36z37z38z39z310*∑
set_notBefore!OpenSSL.crypto.X509.set_notBefore"
None*4
self*
OpenSSL.crypto.X509"OpenSSL.crypto.X509**
when 
builtins.bytes"builtins.bytesz35z36z37z38z39z310*ª

set_pubkeyOpenSSL.crypto.X509.set_pubkey"
None*4
self*
OpenSSL.crypto.X509"OpenSSL.crypto.X509*4
pkey*
OpenSSL.crypto.PKey"OpenSSL.crypto.PKeyz35z36z37z38z39z310*Ω
set_serial_number%OpenSSL.crypto.X509.set_serial_number"
None*4
self*
OpenSSL.crypto.X509"OpenSSL.crypto.X509*(
serial
builtins.int"builtins.intz35z36z37z38z39z310*»
set_subjectOpenSSL.crypto.X509.set_subject"
None*4
self*
OpenSSL.crypto.X509"OpenSSL.crypto.X509*?
subject2
OpenSSL.crypto.X509Name"OpenSSL.crypto.X509Namez35z36z37z38z39z310*≤
set_versionOpenSSL.crypto.X509.set_version"
None*4
self*
OpenSSL.crypto.X509"OpenSSL.crypto.X509*)
version
builtins.int"builtins.intz35z36z37z38z39z310*£
signOpenSSL.crypto.X509.sign"
None*4
self*
OpenSSL.crypto.X509"OpenSSL.crypto.X509*4
pkey*
OpenSSL.crypto.PKey"OpenSSL.crypto.PKey*r
digestf
"Union[builtins.str,builtins.bytes]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesz35z36z37z38z39z310*´
subject_name_hash%OpenSSL.crypto.X509.subject_name_hash" 
builtins.bytes"builtins.bytes*4
self*
OpenSSL.crypto.X509"OpenSSL.crypto.X509z35z36z37z38z39z310*≈
to_cryptography#OpenSSL.crypto.X509.to_cryptography">
cryptography.x509.Certificate"cryptography.x509.Certificate*4
self*
OpenSSL.crypto.X509"OpenSSL.crypto.X509z35z36z37z38z39z310j35j36j37j38j39j310Ò
PKeyOpenSSL.crypto.PKey"builtins.object*Å
__init__OpenSSL.crypto.PKey.__init__"
None*4
self*
OpenSSL.crypto.PKey"OpenSSL.crypto.PKeyz35z36z37z38z39z310*ç
bitsOpenSSL.crypto.PKey.bits"
builtins.int"builtins.int*4
self*
OpenSSL.crypto.PKey"OpenSSL.crypto.PKeyz35z36z37z38z39z310*ë
checkOpenSSL.crypto.PKey.check"
builtins.bool"builtins.bool*4
self*
OpenSSL.crypto.PKey"OpenSSL.crypto.PKeyz35z36z37z38z39z310*Å

from_cryptography_key)OpenSSL.crypto.PKey.from_cryptography_key"*
OpenSSL.crypto.PKey"OpenSSL.crypto.PKey*R
clsI
Type[OpenSSL.crypto.PKey]*
OpenSSL.crypto.PKey"OpenSSL.crypto.PKey*í

crypto_keyÅ
ˇTypeAlias[Union[cryptography.hazmat.primitives.asymmetric.dsa.DSAPrivateKey,cryptography.hazmat.primitives.asymmetric.dsa.DSAPublicKey,cryptography.hazmat.primitives.asymmetric.rsa.RSAPrivateKey,cryptography.hazmat.primitives.asymmetric.rsa.RSAPublicKey]]Â
ÙUnion[cryptography.hazmat.primitives.asymmetric.dsa.DSAPrivateKey,cryptography.hazmat.primitives.asymmetric.dsa.DSAPublicKey,cryptography.hazmat.primitives.asymmetric.rsa.RSAPrivateKey,cryptography.hazmat.primitives.asymmetric.rsa.RSAPublicKey]z
;cryptography.hazmat.primitives.asymmetric.dsa.DSAPrivateKey";cryptography.hazmat.primitives.asymmetric.dsa.DSAPrivateKeyx
:cryptography.hazmat.primitives.asymmetric.dsa.DSAPublicKey":cryptography.hazmat.primitives.asymmetric.dsa.DSAPublicKeyz
;cryptography.hazmat.primitives.asymmetric.rsa.RSAPrivateKey";cryptography.hazmat.primitives.asymmetric.rsa.RSAPrivateKeyx
:cryptography.hazmat.primitives.asymmetric.rsa.RSAPublicKey":cryptography.hazmat.primitives.asymmetric.rsa.RSAPublicKey"OpenSSL.crypto._Key0:classmethodpz35z36z37z38z39z310*Ÿ
generate_key OpenSSL.crypto.PKey.generate_key"
None*4
self*
OpenSSL.crypto.PKey"OpenSSL.crypto.PKey*&
type
builtins.int"builtins.int*&
bits
builtins.int"builtins.intz35z36z37z38z39z310*ë	
to_cryptography_key'OpenSSL.crypto.PKey.to_cryptography_key"Å
ˇTypeAlias[Union[cryptography.hazmat.primitives.asymmetric.dsa.DSAPrivateKey,cryptography.hazmat.primitives.asymmetric.dsa.DSAPublicKey,cryptography.hazmat.primitives.asymmetric.rsa.RSAPrivateKey,cryptography.hazmat.primitives.asymmetric.rsa.RSAPublicKey]]Â
ÙUnion[cryptography.hazmat.primitives.asymmetric.dsa.DSAPrivateKey,cryptography.hazmat.primitives.asymmetric.dsa.DSAPublicKey,cryptography.hazmat.primitives.asymmetric.rsa.RSAPrivateKey,cryptography.hazmat.primitives.asymmetric.rsa.RSAPublicKey]z
;cryptography.hazmat.primitives.asymmetric.dsa.DSAPrivateKey";cryptography.hazmat.primitives.asymmetric.dsa.DSAPrivateKeyx
:cryptography.hazmat.primitives.asymmetric.dsa.DSAPublicKey":cryptography.hazmat.primitives.asymmetric.dsa.DSAPublicKeyz
;cryptography.hazmat.primitives.asymmetric.rsa.RSAPrivateKey";cryptography.hazmat.primitives.asymmetric.rsa.RSAPrivateKeyx
:cryptography.hazmat.primitives.asymmetric.rsa.RSAPublicKey":cryptography.hazmat.primitives.asymmetric.rsa.RSAPublicKey"OpenSSL.crypto._Key*4
self*
OpenSSL.crypto.PKey"OpenSSL.crypto.PKeyz35z36z37z38z39z310*ç
typeOpenSSL.crypto.PKey.type"
builtins.int"builtins.int*4
self*
OpenSSL.crypto.PKey"OpenSSL.crypto.PKeyz35z36z37z38z39z310j35j36j37j38j39j310G
ErrorOpenSSL.SSL.Error"builtins.Exceptionj35j36j37j38j39j310V
WantReadErrorOpenSSL.SSL.WantReadError"OpenSSL.SSL.Errorj35j36j37j38j39j310X
WantWriteErrorOpenSSL.SSL.WantWriteError"OpenSSL.SSL.Errorj35j36j37j38j39j310b
WantX509LookupErrorOpenSSL.SSL.WantX509LookupError"OpenSSL.SSL.Errorj35j36j37j38j39j310Z
ZeroReturnErrorOpenSSL.SSL.ZeroReturnError"OpenSSL.SSL.Errorj35j36j37j38j39j310T
SysCallErrorOpenSSL.SSL.SysCallError"OpenSSL.SSL.Errorj35j36j37j38j39j310H
SessionOpenSSL.SSL.Session"builtins.objectj35j36j37j38j39j310¯ 

ConnectionOpenSSL.SSL.Connection"builtins.object*≥
__getattr__"OpenSSL.SSL.Connection.__getattr__"
Any*8
self0
OpenSSL.SSL.Connection"OpenSSL.SSL.Connection*$
name
builtins.str"builtins.strz35z36z37z38z39z310*ö
__init__OpenSSL.SSL.Connection.__init__"
None*:
self0
OpenSSL.SSL.Connection"OpenSSL.SSL.Connection*7
context*
OpenSSL.SSL.Context"OpenSSL.SSL.Context*U
socketG
Union[socket.socket,None]
socket.socket"socket.socket
None z35z36z37z38z39z310*◊
connectOpenSSL.SSL.Connection.connect"
None*:
self0
OpenSSL.SSL.Connection"OpenSSL.SSL.Connection*Ã
addr¡
TUnion[builtins.str,builtins.bytes,typing.Sequence[Union[builtins.str,builtins.int]]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes¶
1typing.Sequence[Union[builtins.str,builtins.int]]`
 Union[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int"typing.Sequencez35z36z37z38z39z310*í
do_handshake#OpenSSL.SSL.Connection.do_handshake"
None*:
self0
OpenSSL.SSL.Connection"OpenSSL.SSL.Connectionz35z36z37z38z39z310*ƒ
get_peer_certificate+OpenSSL.SSL.Connection.get_peer_certificate"*
OpenSSL.crypto.X509"OpenSSL.crypto.X509*:
self0
OpenSSL.SSL.Connection"OpenSSL.SSL.Connectionz35z36z37z38z39z310*Œ
set_tlsext_host_name+OpenSSL.SSL.Connection.set_tlsext_host_name"
None*:
self0
OpenSSL.SSL.Connection"OpenSSL.SSL.Connection**
name 
builtins.bytes"builtins.bytesz35z36z37z38z39z310*Ã
bio_readOpenSSL.SSL.Connection.bio_read" 
builtins.bytes"builtins.bytes*:
self0
OpenSSL.SSL.Connection"OpenSSL.SSL.Connection*(
bufsiz
builtins.int"builtins.intz35z36z37z38z39z310*À
	bio_write OpenSSL.SSL.Connection.bio_write"
builtins.int"builtins.int*:
self0
OpenSSL.SSL.Connection"OpenSSL.SSL.Connection*)
buf 
builtins.bytes"builtins.bytesz35z36z37z38z39z310*ó
recvOpenSSL.SSL.Connection.recv" 
builtins.bytes"builtins.bytes*:
self0
OpenSSL.SSL.Connection"OpenSSL.SSL.Connection*(
bufsiz
builtins.int"builtins.int*Q
flagsD
Union[builtins.int,None]
builtins.int"builtins.int
None z35z36z37z38z39z310*Ú
sendallOpenSSL.SSL.Connection.sendall"
builtins.int"builtins.int*:
self0
OpenSSL.SSL.Connection"OpenSSL.SSL.Connection*)
buf 
builtins.bytes"builtins.bytes*)
flags
builtins.int"builtins.int z35z36z37z38z39z310*ö
set_accept_state'OpenSSL.SSL.Connection.set_accept_state"
None*:
self0
OpenSSL.SSL.Connection"OpenSSL.SSL.Connectionz35z36z37z38z39z310*ú
set_connect_state(OpenSSL.SSL.Connection.set_connect_state"
None*:
self0
OpenSSL.SSL.Connection"OpenSSL.SSL.Connectionz35z36z37z38z39z310*˜
get_peer_cert_chain*OpenSSL.SSL.Connection.get_peer_cert_chain"_
"builtins.list[OpenSSL.crypto.X509]*
OpenSSL.crypto.X509"OpenSSL.crypto.X509"builtins.list*:
self0
OpenSSL.SSL.Connection"OpenSSL.SSL.Connectionz35z36z37z38z39z310*ƒ
get_alpn_proto_negotiated0OpenSSL.SSL.Connection.get_alpn_proto_negotiated" 
builtins.bytes"builtins.bytes*:
self0
OpenSSL.SSL.Connection"OpenSSL.SSL.Connectionz35z36z37z38z39z310*‘
get_cipher_name&OpenSSL.SSL.Connection.get_cipher_name"D
Union[builtins.str,None]
builtins.str"builtins.str
None*:
self0
OpenSSL.SSL.Connection"OpenSSL.SSL.Connectionz35z36z37z38z39z310*Ë
get_protocol_version_name0OpenSSL.SSL.Connection.get_protocol_version_name"D
Union[builtins.str,None]
builtins.str"builtins.str
None*:
self0
OpenSSL.SSL.Connection"OpenSSL.SSL.Connectionz35z36z37z38z39z310*¶
get_shutdown#OpenSSL.SSL.Connection.get_shutdown"
builtins.int"builtins.int*:
self0
OpenSSL.SSL.Connection"OpenSSL.SSL.Connectionz35z36z37z38z39z310*ë
get_app_data#OpenSSL.SSL.Connection.get_app_data"
Any*:
self0
OpenSSL.SSL.Connection"OpenSSL.SSL.Connectionz35z36z37z38z39z310*•
set_app_data#OpenSSL.SSL.Connection.set_app_data"
None*:
self0
OpenSSL.SSL.Connection"OpenSSL.SSL.Connection*
data
Anyz35z36z37z38z39z310j35j36j37j38j39j310π
ContextOpenSSL.SSL.Context"builtins.object*™
__getattr__OpenSSL.SSL.Context.__getattr__"
Any*2
self*
OpenSSL.SSL.Context"OpenSSL.SSL.Context*$
name
builtins.str"builtins.strz35z36z37z38z39z310*´
__init__OpenSSL.SSL.Context.__init__"
None*4
self*
OpenSSL.SSL.Context"OpenSSL.SSL.Context*(
method
builtins.int"builtins.intz35z36z37z38z39z310*¡
load_verify_locations)OpenSSL.SSL.Context.load_verify_locations"
None*4
self*
OpenSSL.SSL.Context"OpenSSL.SSL.Context*P
cafileD
Union[builtins.str,None]
builtins.str"builtins.str
None*R
capathD
Union[builtins.str,None]
builtins.str"builtins.str
None z35z36z37z38z39z310*≤
set_optionsOpenSSL.SSL.Context.set_options"
None*4
self*
OpenSSL.SSL.Context"OpenSSL.SSL.Context*)
options
builtins.int"builtins.intz35z36z37z38z39z310*«

set_verifyOpenSSL.SSL.Context.set_verify"
None*4
self*
OpenSSL.SSL.Context"OpenSSL.SSL.Context*&
mode
builtins.int"builtins.int*ó
callbackÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None z35z36z37z38z39z310*õ
use_certificate_chain_file.OpenSSL.SSL.Context.use_certificate_chain_file"
None*4
self*
OpenSSL.SSL.Context"OpenSSL.SSL.Context*t
certfilef
"Union[builtins.str,builtins.bytes]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesz35z36z37z38z39z310*Ω
use_certificate_file(OpenSSL.SSL.Context.use_certificate_file"
None*4
self*
OpenSSL.SSL.Context"OpenSSL.SSL.Context*t
certfilef
"Union[builtins.str,builtins.bytes]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes*,
filetype
builtins.int"builtins.int z35z36z37z38z39z310*≈
use_certificate#OpenSSL.SSL.Context.use_certificate"
None*4
self*
OpenSSL.SSL.Context"OpenSSL.SSL.Context*4
cert*
OpenSSL.crypto.X509"OpenSSL.crypto.X509z35z36z37z38z39z310*‚
use_privatekey_file'OpenSSL.SSL.Context.use_privatekey_file"
None*4
self*
OpenSSL.SSL.Context"OpenSSL.SSL.Context*s
keyfilef
"Union[builtins.str,builtins.bytes]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes*T
filetypeD
Union[builtins.int,None]
builtins.int"builtins.int
None z35z36z37z38z39z310*√
use_privatekey"OpenSSL.SSL.Context.use_privatekey"
None*4
self*
OpenSSL.SSL.Context"OpenSSL.SSL.Context*4
pkey*
OpenSSL.crypto.PKey"OpenSSL.crypto.PKeyz35z36z37z38z39z310*“
add_extra_chain_cert(OpenSSL.SSL.Context.add_extra_chain_cert"
None*4
self*
OpenSSL.SSL.Context"OpenSSL.SSL.Context*7
certobj*
OpenSSL.crypto.X509"OpenSSL.crypto.X509z35z36z37z38z39z310*¬
set_cipher_list#OpenSSL.SSL.Context.set_cipher_list"
None*4
self*
OpenSSL.SSL.Context"OpenSSL.SSL.Context*1
cipher_list 
builtins.bytes"builtins.bytesz35z36z37z38z39z310*Ú
set_keylog_callback'OpenSSL.SSL.Context.set_keylog_callback"
None*4
self*
OpenSSL.SSL.Context"OpenSSL.SSL.Context*Y
callbackK
CallableType[builtins.function]&
builtins.function"builtins.functionz35z36z37z38z39z310*Ò
set_alpn_protos#OpenSSL.SSL.Context.set_alpn_protos"
None*4
self*
OpenSSL.SSL.Context"OpenSSL.SSL.Context*`
protosT
typing.Sequence[builtins.bytes] 
builtins.bytes"builtins.bytes"typing.Sequencez35z36z37z38z39z310*¸
set_alpn_select_callback,OpenSSL.SSL.Context.set_alpn_select_callback"
None*4
self*
OpenSSL.SSL.Context"OpenSSL.SSL.Context*Y
callbackK
CallableType[builtins.function]&
builtins.function"builtins.functionz35z36z37z38z39z310j35j36j37j38j39j310ã
SSLeay_versionOpenSSL.SSL.SSLeay_version"
builtins.str"builtins.str*&
type
builtins.int"builtins.intz35z36z37z38z39z310*+
socketsocket *35*36*37*38*39*310*N
Any
typing.Any"
builtins.object"builtins.object*35*36*37*38*39*310*`
Callabletyping.Callable*
typing._SpecialForm"typing._SpecialForm*35*36*37*38*39*310*s
OPENSSL_VERSION_NUMBER"OpenSSL.SSL.OPENSSL_VERSION_NUMBER
builtins.int"builtins.int*35*36*37*38*39*310*c
SSLEAY_VERSIONOpenSSL.SSL.SSLEAY_VERSION
builtins.int"builtins.int*35*36*37*38*39*310*a
SSLEAY_CFLAGSOpenSSL.SSL.SSLEAY_CFLAGS
builtins.int"builtins.int*35*36*37*38*39*310*e
SSLEAY_PLATFORMOpenSSL.SSL.SSLEAY_PLATFORM
builtins.int"builtins.int*35*36*37*38*39*310*[

SSLEAY_DIROpenSSL.SSL.SSLEAY_DIR
builtins.int"builtins.int*35*36*37*38*39*310*e
SSLEAY_BUILT_ONOpenSSL.SSL.SSLEAY_BUILT_ON
builtins.int"builtins.int*35*36*37*38*39*310*a
SENT_SHUTDOWNOpenSSL.SSL.SENT_SHUTDOWN
builtins.int"builtins.int*35*36*37*38*39*310*i
RECEIVED_SHUTDOWNOpenSSL.SSL.RECEIVED_SHUTDOWN
builtins.int"builtins.int*35*36*37*38*39*310*_
SSLv2_METHODOpenSSL.SSL.SSLv2_METHOD
builtins.int"builtins.int*35*36*37*38*39*310*_
SSLv3_METHODOpenSSL.SSL.SSLv3_METHOD
builtins.int"builtins.int*35*36*37*38*39*310*a
SSLv23_METHODOpenSSL.SSL.SSLv23_METHOD
builtins.int"builtins.int*35*36*37*38*39*310*_
TLSv1_METHODOpenSSL.SSL.TLSv1_METHOD
builtins.int"builtins.int*35*36*37*38*39*310*c
TLSv1_1_METHODOpenSSL.SSL.TLSv1_1_METHOD
builtins.int"builtins.int*35*36*37*38*39*310*c
TLSv1_2_METHODOpenSSL.SSL.TLSv1_2_METHOD
builtins.int"builtins.int*35*36*37*38*39*310*]
OP_NO_SSLv2OpenSSL.SSL.OP_NO_SSLv2
builtins.int"builtins.int*35*36*37*38*39*310*]
OP_NO_SSLv3OpenSSL.SSL.OP_NO_SSLv3
builtins.int"builtins.int*35*36*37*38*39*310*]
OP_NO_TLSv1OpenSSL.SSL.OP_NO_TLSv1
builtins.int"builtins.int*35*36*37*38*39*310*a
OP_NO_TLSv1_1OpenSSL.SSL.OP_NO_TLSv1_1
builtins.int"builtins.int*35*36*37*38*39*310*a
OP_NO_TLSv1_2OpenSSL.SSL.OP_NO_TLSv1_2
builtins.int"builtins.int*35*36*37*38*39*310*a
OP_NO_TLSv1_3OpenSSL.SSL.OP_NO_TLSv1_3
builtins.int"builtins.int*35*36*37*38*39*310*o
MODE_RELEASE_BUFFERS OpenSSL.SSL.MODE_RELEASE_BUFFERS
builtins.int"builtins.int*35*36*37*38*39*310*g
OP_SINGLE_DH_USEOpenSSL.SSL.OP_SINGLE_DH_USE
builtins.int"builtins.int*35*36*37*38*39*310*k
OP_SINGLE_ECDH_USEOpenSSL.SSL.OP_SINGLE_ECDH_USE
builtins.int"builtins.int*35*36*37*38*39*310*g
OP_EPHEMERAL_RSAOpenSSL.SSL.OP_EPHEMERAL_RSA
builtins.int"builtins.int*35*36*37*38*39*310*w
OP_MICROSOFT_SESS_ID_BUG$OpenSSL.SSL.OP_MICROSOFT_SESS_ID_BUG
builtins.int"builtins.int*35*36*37*38*39*310*y
OP_NETSCAPE_CHALLENGE_BUG%OpenSSL.SSL.OP_NETSCAPE_CHALLENGE_BUG
builtins.int"builtins.int*35*36*37*38*39*310*ç
#OP_NETSCAPE_REUSE_CIPHER_CHANGE_BUG/OpenSSL.SSL.OP_NETSCAPE_REUSE_CIPHER_CHANGE_BUG
builtins.int"builtins.int*35*36*37*38*39*310*É
OP_SSLREF2_REUSE_CERT_TYPE_BUG*OpenSSL.SSL.OP_SSLREF2_REUSE_CERT_TYPE_BUG
builtins.int"builtins.int*35*36*37*38*39*310*Å
OP_MICROSOFT_BIG_SSLV3_BUFFER)OpenSSL.SSL.OP_MICROSOFT_BIG_SSLV3_BUFFER
builtins.int"builtins.int*35*36*37*38*39*310*y
OP_MSIE_SSLV2_RSA_PADDING%OpenSSL.SSL.OP_MSIE_SSLV2_RSA_PADDING
builtins.int"builtins.int*35*36*37*38*39*310*}
OP_SSLEAY_080_CLIENT_DH_BUG'OpenSSL.SSL.OP_SSLEAY_080_CLIENT_DH_BUG
builtins.int"builtins.int*35*36*37*38*39*310*a
OP_TLS_D5_BUGOpenSSL.SSL.OP_TLS_D5_BUG
builtins.int"builtins.int*35*36*37*38*39*310*w
OP_TLS_BLOCK_PADDING_BUG$OpenSSL.SSL.OP_TLS_BLOCK_PADDING_BUG
builtins.int"builtins.int*35*36*37*38*39*310*É
OP_DONT_INSERT_EMPTY_FRAGMENTS*OpenSSL.SSL.OP_DONT_INSERT_EMPTY_FRAGMENTS
builtins.int"builtins.int*35*36*37*38*39*310*}
OP_CIPHER_SERVER_PREFERENCE'OpenSSL.SSL.OP_CIPHER_SERVER_PREFERENCE
builtins.int"builtins.int*35*36*37*38*39*310*m
OP_TLS_ROLLBACK_BUGOpenSSL.SSL.OP_TLS_ROLLBACK_BUG
builtins.int"builtins.int*35*36*37*38*39*310*g
OP_PKCS1_CHECK_1OpenSSL.SSL.OP_PKCS1_CHECK_1
builtins.int"builtins.int*35*36*37*38*39*310*g
OP_PKCS1_CHECK_2OpenSSL.SSL.OP_PKCS1_CHECK_2
builtins.int"builtins.int*35*36*37*38*39*310*q
OP_NETSCAPE_CA_DN_BUG!OpenSSL.SSL.OP_NETSCAPE_CA_DN_BUG
builtins.int"builtins.int*35*36*37*38*39*310*ã
"OP_NETSCAPE_DEMO_CIPHER_CHANGE_BUG.OpenSSL.SSL.OP_NETSCAPE_DEMO_CIPHER_CHANGE_BUG
builtins.int"builtins.int*35*36*37*38*39*310*i
OP_NO_COMPRESSIONOpenSSL.SSL.OP_NO_COMPRESSION
builtins.int"builtins.int*35*36*37*38*39*310*e
OP_NO_QUERY_MTUOpenSSL.SSL.OP_NO_QUERY_MTU
builtins.int"builtins.int*35*36*37*38*39*310*k
OP_COOKIE_EXCHANGEOpenSSL.SSL.OP_COOKIE_EXCHANGE
builtins.int"builtins.int*35*36*37*38*39*310*_
OP_NO_TICKETOpenSSL.SSL.OP_NO_TICKET
builtins.int"builtins.int*35*36*37*38*39*310*S
OP_ALLOpenSSL.SSL.OP_ALL
builtins.int"builtins.int*35*36*37*38*39*310*]
VERIFY_PEEROpenSSL.SSL.VERIFY_PEER
builtins.int"builtins.int*35*36*37*38*39*310*}
VERIFY_FAIL_IF_NO_PEER_CERT'OpenSSL.SSL.VERIFY_FAIL_IF_NO_PEER_CERT
builtins.int"builtins.int*35*36*37*38*39*310*k
VERIFY_CLIENT_ONCEOpenSSL.SSL.VERIFY_CLIENT_ONCE
builtins.int"builtins.int*35*36*37*38*39*310*]
VERIFY_NONEOpenSSL.SSL.VERIFY_NONE
builtins.int"builtins.int*35*36*37*38*39*310*c
SESS_CACHE_OFFOpenSSL.SSL.SESS_CACHE_OFF
builtins.int"builtins.int*35*36*37*38*39*310*i
SESS_CACHE_CLIENTOpenSSL.SSL.SESS_CACHE_CLIENT
builtins.int"builtins.int*35*36*37*38*39*310*i
SESS_CACHE_SERVEROpenSSL.SSL.SESS_CACHE_SERVER
builtins.int"builtins.int*35*36*37*38*39*310*e
SESS_CACHE_BOTHOpenSSL.SSL.SESS_CACHE_BOTH
builtins.int"builtins.int*35*36*37*38*39*310*w
SESS_CACHE_NO_AUTO_CLEAR$OpenSSL.SSL.SESS_CACHE_NO_AUTO_CLEAR
builtins.int"builtins.int*35*36*37*38*39*310*Å
SESS_CACHE_NO_INTERNAL_LOOKUP)OpenSSL.SSL.SESS_CACHE_NO_INTERNAL_LOOKUP
builtins.int"builtins.int*35*36*37*38*39*310*
SESS_CACHE_NO_INTERNAL_STORE(OpenSSL.SSL.SESS_CACHE_NO_INTERNAL_STORE
builtins.int"builtins.int*35*36*37*38*39*310*s
SESS_CACHE_NO_INTERNAL"OpenSSL.SSL.SESS_CACHE_NO_INTERNAL
builtins.int"builtins.int*35*36*37*38*39*310*c
SSL_ST_CONNECTOpenSSL.SSL.SSL_ST_CONNECT
builtins.int"builtins.int*35*36*37*38*39*310*a
SSL_ST_ACCEPTOpenSSL.SSL.SSL_ST_ACCEPT
builtins.int"builtins.int*35*36*37*38*39*310*]
SSL_ST_MASKOpenSSL.SSL.SSL_ST_MASK
builtins.int"builtins.int*35*36*37*38*39*310*]
SSL_CB_LOOPOpenSSL.SSL.SSL_CB_LOOP
builtins.int"builtins.int*35*36*37*38*39*310*]
SSL_CB_EXITOpenSSL.SSL.SSL_CB_EXIT
builtins.int"builtins.int*35*36*37*38*39*310*]
SSL_CB_READOpenSSL.SSL.SSL_CB_READ
builtins.int"builtins.int*35*36*37*38*39*310*_
SSL_CB_WRITEOpenSSL.SSL.SSL_CB_WRITE
builtins.int"builtins.int*35*36*37*38*39*310*_
SSL_CB_ALERTOpenSSL.SSL.SSL_CB_ALERT
builtins.int"builtins.int*35*36*37*38*39*310*i
SSL_CB_READ_ALERTOpenSSL.SSL.SSL_CB_READ_ALERT
builtins.int"builtins.int*35*36*37*38*39*310*k
SSL_CB_WRITE_ALERTOpenSSL.SSL.SSL_CB_WRITE_ALERT
builtins.int"builtins.int*35*36*37*38*39*310*k
SSL_CB_ACCEPT_LOOPOpenSSL.SSL.SSL_CB_ACCEPT_LOOP
builtins.int"builtins.int*35*36*37*38*39*310*k
SSL_CB_ACCEPT_EXITOpenSSL.SSL.SSL_CB_ACCEPT_EXIT
builtins.int"builtins.int*35*36*37*38*39*310*m
SSL_CB_CONNECT_LOOPOpenSSL.SSL.SSL_CB_CONNECT_LOOP
builtins.int"builtins.int*35*36*37*38*39*310*m
SSL_CB_CONNECT_EXITOpenSSL.SSL.SSL_CB_CONNECT_EXIT
builtins.int"builtins.int*35*36*37*38*39*310*s
SSL_CB_HANDSHAKE_START"OpenSSL.SSL.SSL_CB_HANDSHAKE_START
builtins.int"builtins.int*35*36*37*38*39*310*q
SSL_CB_HANDSHAKE_DONE!OpenSSL.SSL.SSL_CB_HANDSHAKE_DONE
builtins.int"builtins.int*35*36*37*38*39*310*}
NO_OVERLAPPING_PROTOCOLS$OpenSSL.SSL.NO_OVERLAPPING_PROTOCOLS"
builtins.object"builtins.object*35*36*37*38*39*310