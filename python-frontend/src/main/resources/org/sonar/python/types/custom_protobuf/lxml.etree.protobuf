

lxml.etree¦
ElementTree!xml.etree.ElementTree.ElementTree"*SonarPythonAnalyzerFakeStub.CustomStubBase*º
__init__*xml.etree.ElementTree.ElementTree.__init__"
None*P
selfF
!xml.etree.ElementTree.ElementTree"!xml.etree.ElementTree.ElementTree*
args
Any*
kwargs
Any*î
getroot)xml.etree.ElementTree.ElementTree.getroot">
xml.etree.ElementTree.Element"xml.etree.ElementTree.Element*P
selfF
!xml.etree.ElementTree.ElementTree"!xml.etree.ElementTree.ElementTree*
args
Any*
kwargs
Any*ê
parse'xml.etree.ElementTree.ElementTree.parse">
xml.etree.ElementTree.Element"xml.etree.ElementTree.Element*P
selfF
!xml.etree.ElementTree.ElementTree"!xml.etree.ElementTree.ElementTree*
args
Any*
kwargs
Any*µ
getiterator-xml.etree.ElementTree.ElementTree.getiterator"}
,builtins.list[xml.etree.ElementTree.Element]>
xml.etree.ElementTree.Element"xml.etree.ElementTree.Element"builtins.list*P
selfF
!xml.etree.ElementTree.ElementTree"!xml.etree.ElementTree.ElementTree*
args
Any*
kwargs
Any*¡
find&xml.etree.ElementTree.ElementTree.find"w
)Union[xml.etree.ElementTree.Element,None]>
xml.etree.ElementTree.Element"xml.etree.ElementTree.Element
None*P
selfF
!xml.etree.ElementTree.ElementTree"!xml.etree.ElementTree.ElementTree*
args
Any*
kwargs
Any*ö
findtext*xml.etree.ElementTree.ElementTree.findtext"D
Union[builtins.str,None]
builtins.str"builtins.str
None*P
selfF
!xml.etree.ElementTree.ElementTree"!xml.etree.ElementTree.ElementTree*
args
Any*
kwargs
Any*­
findall)xml.etree.ElementTree.ElementTree.findall"}
,builtins.list[xml.etree.ElementTree.Element]>
xml.etree.ElementTree.Element"xml.etree.ElementTree.Element"builtins.list*P
selfF
!xml.etree.ElementTree.ElementTree"!xml.etree.ElementTree.ElementTree*
args
Any*
kwargs
Any*¯
iterfind*xml.etree.ElementTree.ElementTree.iterfind"}
,builtins.list[xml.etree.ElementTree.Element]>
xml.etree.ElementTree.Element"xml.etree.ElementTree.Element"builtins.list*P
selfF
!xml.etree.ElementTree.ElementTree"!xml.etree.ElementTree.ElementTree*
args
Any*
kwargs
Any*´
write'xml.etree.ElementTree.ElementTree.write"
None*P
selfF
!xml.etree.ElementTree.ElementTree"!xml.etree.ElementTree.ElementTree*
args
Any*
kwargs
Any*¾

write_c14n,xml.etree.ElementTree.ElementTree.write_c14n"
None*P
selfF
!xml.etree.ElementTree.ElementTree"!xml.etree.ElementTree.ElementTree*
args
Any*
kwargs
Anyî#
Elementxml.etree.ElementTree.Element"*SonarPythonAnalyzerFakeStub.CustomStubBase*®
__init__&xml.etree.ElementTree.Element.__init__"
None*H
self>
xml.etree.ElementTree.Element"xml.etree.ElementTree.Element*
args
Any*
kwargs
Any*ª
append$xml.etree.ElementTree.Element.append"
None*H
self>
xml.etree.ElementTree.Element"xml.etree.ElementTree.Element*
args
Any*
kwargs
Any*¨
clear#xml.etree.ElementTree.Element.clear"
None*H
self>
xml.etree.ElementTree.Element"xml.etree.ElementTree.Element*
args
Any*
kwargs
Any*Ü
copy"xml.etree.ElementTree.Element.copy">
xml.etree.ElementTree.Element"xml.etree.ElementTree.Element*H
self>
xml.etree.ElementTree.Element"xml.etree.ElementTree.Element*
args
Any*
kwargs
Any*ª
extend$xml.etree.ElementTree.Element.extend"
None*H
self>
xml.etree.ElementTree.Element"xml.etree.ElementTree.Element*
args
Any*
kwargs
Any*•
find"xml.etree.ElementTree.Element.find"w
)Union[xml.etree.ElementTree.Element,None]>
xml.etree.ElementTree.Element"xml.etree.ElementTree.Element
None*H
self>
xml.etree.ElementTree.Element"xml.etree.ElementTree.Element*
args
Any*
kwargs
Any*¡
findall%xml.etree.ElementTree.Element.findall"}
,builtins.list[xml.etree.ElementTree.Element]>
xml.etree.ElementTree.Element"xml.etree.ElementTree.Element"builtins.list*H
self>
xml.etree.ElementTree.Element"xml.etree.ElementTree.Element*
args
Any*
kwargs
Any*ê
findtext&xml.etree.ElementTree.Element.findtext"D
Union[builtins.str,None]
builtins.str"builtins.str
None*H
self>
xml.etree.ElementTree.Element"xml.etree.ElementTree.Element*
args
Any*
kwargs
Any*à
get!xml.etree.ElementTree.Element.get"D
Union[builtins.str,None]
builtins.str"builtins.str
None*H
self>
xml.etree.ElementTree.Element"xml.etree.ElementTree.Element*
args
Any*
kwargs
Any*©
getchildren)xml.etree.ElementTree.Element.getchildren"}
,builtins.list[xml.etree.ElementTree.Element]>
xml.etree.ElementTree.Element"xml.etree.ElementTree.Element"builtins.list*H
self>
xml.etree.ElementTree.Element"xml.etree.ElementTree.Element*
args
Any*
kwargs
Any*©
getiterator)xml.etree.ElementTree.Element.getiterator"}
,builtins.list[xml.etree.ElementTree.Element]>
xml.etree.ElementTree.Element"xml.etree.ElementTree.Element"builtins.list*H
self>
xml.etree.ElementTree.Element"xml.etree.ElementTree.Element*
args
Any*
kwargs
Any*ª
insert$xml.etree.ElementTree.Element.insert"
None*H
self>
xml.etree.ElementTree.Element"xml.etree.ElementTree.Element*
args
Any*
kwargs
Any*£
iterfind&xml.etree.ElementTree.Element.iterfind"}
,builtins.list[xml.etree.ElementTree.Element]>
xml.etree.ElementTree.Element"xml.etree.ElementTree.Element"builtins.list*H
self>
xml.etree.ElementTree.Element"xml.etree.ElementTree.Element*
args
Any*
kwargs
Any*ê
makeelement)xml.etree.ElementTree.Element.makeelement">
xml.etree.ElementTree.Element"xml.etree.ElementTree.Element*H
self>
xml.etree.ElementTree.Element"xml.etree.ElementTree.Element*
args
Any*
kwargs
Any*ª
remove$xml.etree.ElementTree.Element.remove"
None*H
self>
xml.etree.ElementTree.Element"xml.etree.ElementTree.Element*
args
Any*
kwargs
Any*¤
set!xml.etree.ElementTree.Element.set"
None*H
self>
xml.etree.ElementTree.Element"xml.etree.ElementTree.Element*
args
Any*
kwargs
Any*Ä
__bool__&xml.etree.ElementTree.Element.__bool__"
builtins.bool"builtins.bool*H
self>
xml.etree.ElementTree.Element"xml.etree.ElementTree.Element*
args
Any*
kwargs
Any*ž
__delitem__)xml.etree.ElementTree.Element.__delitem__"
None*@>
xml.etree.ElementTree.Element"xml.etree.ElementTree.Element*
Any*
Any*Ô
__getitem__)xml.etree.ElementTree.Element.__getitem__">
xml.etree.ElementTree.Element"xml.etree.ElementTree.Element*@>
xml.etree.ElementTree.Element"xml.etree.ElementTree.Element*
Any*
Any*ª
__len__%xml.etree.ElementTree.Element.__len__"
builtins.int"builtins.int*@>
xml.etree.ElementTree.Element"xml.etree.ElementTree.Element*
Any*
Any*ž
__setitem__)xml.etree.ElementTree.Element.__setitem__"
None*@>
xml.etree.ElementTree.Element"xml.etree.ElementTree.Element*
Any*
AnyÙ

_ElementTreelxml.etree._ElementTree"*SonarPythonAnalyzerFakeStub.CustomStubBase*¾
findalllxml.etree._ElementTree.findall",
builtins.list[Any]
Any"builtins.list*<
self2
lxml.etree._ElementTree"lxml.etree._ElementTree*
args
Any*
kwargs
Any*¶
findlxml.etree._ElementTree.find"*
lxml.etree._Element"lxml.etree._Element*<
self2
lxml.etree._ElementTree"lxml.etree._ElementTree*
args
Any*
kwargs
Any*°
findtext lxml.etree._ElementTree.findtext"
builtins.str"builtins.str*<
self2
lxml.etree._ElementTree"lxml.etree._ElementTree*
args
Any*
kwargs
Any*¼
getrootlxml.etree._ElementTree.getroot"*
lxml.etree._Element"lxml.etree._Element*<
self2
lxml.etree._ElementTree"lxml.etree._ElementTree*
args
Any*
kwargs
Any*¸
parselxml.etree._ElementTree.parse"*
lxml.etree._Element"lxml.etree._Element*<
self2
lxml.etree._ElementTree"lxml.etree._ElementTree*
args
Any*
kwargs
Any*Ä
iterfind lxml.etree._ElementTree.iterfind"0
typing.Iterator[Any]
Any"typing.Iterator*<
self2
lxml.etree._ElementTree"lxml.etree._ElementTree*
args
Any*
kwargs
Any*•
xpathlxml.etree._ElementTree.xpath"
Any*<
self2
lxml.etree._ElementTree"lxml.etree._ElementTree*
args
Any*
kwargs
AnyÀ
_Elementlxml.etree._Element"*SonarPythonAnalyzerFakeStub.CustomStubBase*²
findalllxml.etree._Element.findall",
builtins.list[Any]
Any"builtins.list*4
self*
lxml.etree._Element"lxml.etree._Element*
args
Any*
kwargs
Any*ª
findlxml.etree._Element.find"*
lxml.etree._Element"lxml.etree._Element*4
self*
lxml.etree._Element"lxml.etree._Element*
args
Any*
kwargs
Any*¤
findtextlxml.etree._Element.findtext"
builtins.str"builtins.str*4
self*
lxml.etree._Element"lxml.etree._Element*
args
Any*
kwargs
Any*¸
iterfindlxml.etree._Element.iterfind"0
typing.Iterator[Any]
Any"typing.Iterator*4
self*
lxml.etree._Element"lxml.etree._Element*
args
Any*
kwargs
Any*‰
xpathlxml.etree._Element.xpath"
Any*4
self*
lxml.etree._Element"lxml.etree._Element*
args
Any*
kwargs
Any*¢
__getitem__lxml.etree._Element.__getitem__"*
lxml.etree._Element"lxml.etree._Element*,*
lxml.etree._Element"lxml.etree._Element*
Any*
Anyu
parselxml.etree.parse"2
lxml.etree._ElementTree"lxml.etree._ElementTree*
args
Any*
kwargs
Any

fromstringlxml.etree.fromstring"2
lxml.etree._ElementTree"lxml.etree._ElementTree*
args
Any*
kwargs
Any*†
__annotations__lxml.etree.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict