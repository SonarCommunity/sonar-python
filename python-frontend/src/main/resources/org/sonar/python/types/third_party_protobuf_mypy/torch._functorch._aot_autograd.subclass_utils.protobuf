
-torch._functorch._aot_autograd.subclass_utils•
requires_subclass_dispatchHtorch._functorch._aot_autograd.subclass_utils.requires_subclass_dispatch"
builtins.bool"builtins.bool*
args
Any*â
fw_metadatax
:torch._functorch._aot_autograd.schemas.ViewAndMutationMeta":torch._functorch._aot_autograd.schemas.ViewAndMutationMetaﬁ
create_subclass_metaBtorch._functorch._aot_autograd.subclass_utils.create_subclass_meta"ﬂ
^builtins.list[Union[builtins.int,torch._functorch._aot_autograd.schemas.SubclassCreationMeta]]Ì
OUnion[builtins.int,torch._functorch._aot_autograd.schemas.SubclassCreationMeta]
builtins.int"builtins.intz
;torch._functorch._aot_autograd.schemas.SubclassCreationMeta";torch._functorch._aot_autograd.schemas.SubclassCreationMeta"builtins.list*ü
	curr_argsè
-Union[builtins.list[Any],builtins.tuple[Any]],
builtins.list[Any]
Any"builtins.list.
builtins.tuple[Any]
Any"builtins.tupleæ
unwrap_tensor_subclassesFtorch._functorch._aot_autograd.subclass_utils.unwrap_tensor_subclasses"
Any*
wrapped_args
Any*6
is_joint_structure
builtins.bool"builtins.boolƒ
wrap_tensor_subclassesDtorch._functorch._aot_autograd.subclass_utils.wrap_tensor_subclasses".
builtins.tuple[Any]
Any"builtins.tuple*§
unwrapped_argsè
-Union[builtins.tuple[Any],builtins.list[Any]].
builtins.tuple[Any]
Any"builtins.tuple,
builtins.list[Any]
Any"builtins.list*Ù
subclass_metasﬂ
^builtins.list[Union[builtins.int,torch._functorch._aot_autograd.schemas.SubclassCreationMeta]]Ì
OUnion[builtins.int,torch._functorch._aot_autograd.schemas.SubclassCreationMeta]
builtins.int"builtins.intz
;torch._functorch._aot_autograd.schemas.SubclassCreationMeta";torch._functorch._aot_autograd.schemas.SubclassCreationMeta"builtins.list*d
num_fw_outs_saved_for_bwD
Union[builtins.int,None]
builtins.int"builtins.int
None *0

is_runtime
builtins.bool"builtins.bool ‚
"wrap_tensor_subclasses_maybe_jointPtorch._functorch._aot_autograd.subclass_utils.wrap_tensor_subclasses_maybe_joint"è
-Union[builtins.tuple[Any],builtins.list[Any]].
builtins.tuple[Any]
Any"builtins.tuple,
builtins.list[Any]
Any"builtins.list*
unwrapped_args
Any*6
is_joint_structure
builtins.bool"builtins.bool*Ç
metax
:torch._functorch._aot_autograd.schemas.ViewAndMutationMeta":torch._functorch._aot_autograd.schemas.ViewAndMutationMetaÈ
create_metadata_for_subclassJtorch._functorch._aot_autograd.subclass_utils.create_metadata_for_subclass"x
:torch._functorch._aot_autograd.schemas.ViewAndMutationMeta":torch._functorch._aot_autograd.schemas.ViewAndMutationMeta*Ç
metax
:torch._functorch._aot_autograd.schemas.ViewAndMutationMeta":torch._functorch._aot_autograd.schemas.ViewAndMutationMetaÅ
4compute_inner_mutated_inp_indices_from_subclass_metabtorch._functorch._aot_autograd.subclass_utils.compute_inner_mutated_inp_indices_from_subclass_meta"J
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.list*â
fw_metadatax
:torch._functorch._aot_autograd.schemas.ViewAndMutationMeta":torch._functorch._aot_autograd.schemas.ViewAndMutationMeta*å
inner_metadatax
:torch._functorch._aot_autograd.schemas.ViewAndMutationMeta":torch._functorch._aot_autograd.schemas.ViewAndMutationMeta*©
__annotations__=torch._functorch._aot_autograd.subclass_utils.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*
pytreetorch.utils._pytree *Ö
zip1torch._functorch._aot_autograd.subclass_utils.zipK
CallableType[builtins.function]&
builtins.function"builtins.function