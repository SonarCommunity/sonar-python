
paramiko.file¿,
BufferedFileparamiko.file.BufferedFile"#paramiko.util.ClosingContextManager*¥
__init__#paramiko.file.BufferedFile.__init__"
None*d
selfZ
)paramiko.file.BufferedFile[typing.AnyStr]
typing.AnyStr"paramiko.file.BufferedFilez36z37z38z39z310*™
__del__"paramiko.file.BufferedFile.__del__"
None*\Z
)paramiko.file.BufferedFile[typing.AnyStr]
typing.AnyStr"paramiko.file.BufferedFilez36z37z38z39z310*Í
__iter__#paramiko.file.BufferedFile.__iter__"F
paramiko.file.BufferedFile[Any]
Any"paramiko.file.BufferedFile*\Z
)paramiko.file.BufferedFile[typing.AnyStr]
typing.AnyStr"paramiko.file.BufferedFilez36z37z38z39z310*Æ
close paramiko.file.BufferedFile.close"
None*d
selfZ
)paramiko.file.BufferedFile[typing.AnyStr]
typing.AnyStr"paramiko.file.BufferedFilez36z37z38z39z310*Æ
flush paramiko.file.BufferedFile.flush"
None*d
selfZ
)paramiko.file.BufferedFile[typing.AnyStr]
typing.AnyStr"paramiko.file.BufferedFilez36z37z38z39z310*Ω
__next__#paramiko.file.BufferedFile.__next__"
typing.AnyStr*d
selfZ
)paramiko.file.BufferedFile[typing.AnyStr]
typing.AnyStr"paramiko.file.BufferedFilez36z37z38z39z310* 
readable#paramiko.file.BufferedFile.readable"
builtins.bool"builtins.bool*d
selfZ
)paramiko.file.BufferedFile[typing.AnyStr]
typing.AnyStr"paramiko.file.BufferedFilez36z37z38z39z310* 
writable#paramiko.file.BufferedFile.writable"
builtins.bool"builtins.bool*d
selfZ
)paramiko.file.BufferedFile[typing.AnyStr]
typing.AnyStr"paramiko.file.BufferedFilez36z37z38z39z310* 
seekable#paramiko.file.BufferedFile.seekable"
builtins.bool"builtins.bool*d
selfZ
)paramiko.file.BufferedFile[typing.AnyStr]
typing.AnyStr"paramiko.file.BufferedFilez36z37z38z39z310*¸
readinto#paramiko.file.BufferedFile.readinto"
builtins.int"builtins.int*d
selfZ
)paramiko.file.BufferedFile[typing.AnyStr]
typing.AnyStr"paramiko.file.BufferedFile*2
buff(
builtins.bytearray"builtins.bytearrayz36z37z38z39z310*ñ
readparamiko.file.BufferedFile.read" 
builtins.bytes"builtins.bytes*d
selfZ
)paramiko.file.BufferedFile[typing.AnyStr]
typing.AnyStr"paramiko.file.BufferedFile*P
sizeD
Union[builtins.int,None]
builtins.int"builtins.int
None z36z37z38z39z310*è
readline#paramiko.file.BufferedFile.readline"
typing.AnyStr*d
selfZ
)paramiko.file.BufferedFile[typing.AnyStr]
typing.AnyStr"paramiko.file.BufferedFile*P
sizeD
Union[builtins.int,None]
builtins.int"builtins.int
None z36z37z38z39z310*ƒ
	readlines$paramiko.file.BufferedFile.readlines"@
builtins.list[typing.AnyStr]
typing.AnyStr"builtins.list*d
selfZ
)paramiko.file.BufferedFile[typing.AnyStr]
typing.AnyStr"paramiko.file.BufferedFile*T
sizehintD
Union[builtins.int,None]
builtins.int"builtins.int
None z36z37z38z39z310*Ç
seekparamiko.file.BufferedFile.seek"
None*d
selfZ
)paramiko.file.BufferedFile[typing.AnyStr]
typing.AnyStr"paramiko.file.BufferedFile*(
offset
builtins.int"builtins.int**
whence
builtins.int"builtins.int z36z37z38z39z310*¿
tellparamiko.file.BufferedFile.tell"
builtins.int"builtins.int*d
selfZ
)paramiko.file.BufferedFile[typing.AnyStr]
typing.AnyStr"paramiko.file.BufferedFilez36z37z38z39z310*À
write paramiko.file.BufferedFile.write"
None*d
selfZ
)paramiko.file.BufferedFile[typing.AnyStr]
typing.AnyStr"paramiko.file.BufferedFile*
data
typing.AnyStrz36z37z38z39z310*å

writelines%paramiko.file.BufferedFile.writelines"
None*d
selfZ
)paramiko.file.BufferedFile[typing.AnyStr]
typing.AnyStr"paramiko.file.BufferedFile*R
sequenceD
typing.Iterable[typing.AnyStr]
typing.AnyStr"typing.Iterablez36z37z38z39z310*ˆ

xreadlines%paramiko.file.BufferedFile.xreadlines"F
paramiko.file.BufferedFile[Any]
Any"paramiko.file.BufferedFile*d
selfZ
)paramiko.file.BufferedFile[typing.AnyStr]
typing.AnyStr"paramiko.file.BufferedFilez36z37z38z39z310*‘
closed!paramiko.file.BufferedFile.closed"
builtins.bool"builtins.bool*d
selfZ
)paramiko.file.BufferedFile[typing.AnyStr]
typing.AnyStr"paramiko.file.BufferedFile0:property`z36z37z38z39z310Pj36j37j38j39j310rb
SEEK_SET#paramiko.file.BufferedFile.SEEK_SET
builtins.int"builtins.int*36*37*38*39*310rb
SEEK_CUR#paramiko.file.BufferedFile.SEEK_CUR
builtins.int"builtins.int*36*37*38*39*310rb
SEEK_END#paramiko.file.BufferedFile.SEEK_END
builtins.int"builtins.int*36*37*38*39*310rd
	FLAG_READ$paramiko.file.BufferedFile.FLAG_READ
builtins.int"builtins.int*36*37*38*39*310rf

FLAG_WRITE%paramiko.file.BufferedFile.FLAG_WRITE
builtins.int"builtins.int*36*37*38*39*310rh
FLAG_APPEND&paramiko.file.BufferedFile.FLAG_APPEND
builtins.int"builtins.int*36*37*38*39*310rh
FLAG_BINARY&paramiko.file.BufferedFile.FLAG_BINARY
builtins.int"builtins.int*36*37*38*39*310rl
FLAG_BUFFERED(paramiko.file.BufferedFile.FLAG_BUFFERED
builtins.int"builtins.int*36*37*38*39*310rv
FLAG_LINE_BUFFERED-paramiko.file.BufferedFile.FLAG_LINE_BUFFERED
builtins.int"builtins.int*36*37*38*39*310r~
FLAG_UNIVERSAL_NEWLINE1paramiko.file.BufferedFile.FLAG_UNIVERSAL_NEWLINE
builtins.int"builtins.int*36*37*38*39*310r„
newlines#paramiko.file.BufferedFile.newlinesú
7Union[None,typing.AnyStr,builtins.tuple[typing.AnyStr]]
None
typing.AnyStrB
builtins.tuple[typing.AnyStr]
typing.AnyStr"builtins.tuple*36*37*38*39*310*û
__annotations__paramiko.file.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*36*37*38*39*310