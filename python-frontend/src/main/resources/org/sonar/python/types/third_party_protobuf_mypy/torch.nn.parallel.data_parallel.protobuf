
torch.nn.parallel.data_parallelñ'
DataParallel,torch.nn.parallel.data_parallel.DataParallel"torch.nn.modules.module.Module*À
__init__5torch.nn.parallel.data_parallel.DataParallel.__init__"
None*î
selfâ
Otorch.nn.parallel.data_parallel.DataParallel[torch.nn.parallel.data_parallel.T]á
!torch.nn.parallel.data_parallel.T@
torch.nn.modules.module.Module"torch.nn.modules.module.Module"torch.nn.modules.module.Module",torch.nn.parallel.data_parallel.DataParallel*î
moduleá
!torch.nn.parallel.data_parallel.T@
torch.nn.modules.module.Module"torch.nn.modules.module.Module"torch.nn.modules.module.Module*ñ

device_idsÉ
@Union[typing.Sequence[Union[builtins.int,torch._C.device]],None]≤
4typing.Sequence[Union[builtins.int,torch._C.device]]i
#Union[builtins.int,torch._C.device]
builtins.int"builtins.int"
torch._C.device"torch._C.device"typing.Sequence
None *ç
output_devicex
(Union[builtins.int,torch._C.device,None]
builtins.int"builtins.int"
torch._C.device"torch._C.device
None *'
dim
builtins.int"builtins.int *â
forward4torch.nn.parallel.data_parallel.DataParallel.forward"
Any*î
selfâ
Otorch.nn.parallel.data_parallel.DataParallel[torch.nn.parallel.data_parallel.T]á
!torch.nn.parallel.data_parallel.T@
torch.nn.modules.module.Module"torch.nn.modules.module.Module"torch.nn.modules.module.Module",torch.nn.parallel.data_parallel.DataParallel*
inputs
Any*
kwargs
Any*Ö
	replicate6torch.nn.parallel.data_parallel.DataParallel.replicate"À
0builtins.list[torch.nn.parallel.data_parallel.T]á
!torch.nn.parallel.data_parallel.T@
torch.nn.modules.module.Module"torch.nn.modules.module.Module"torch.nn.modules.module.Module"builtins.list*î
selfâ
Otorch.nn.parallel.data_parallel.DataParallel[torch.nn.parallel.data_parallel.T]á
!torch.nn.parallel.data_parallel.T@
torch.nn.modules.module.Module"torch.nn.modules.module.Module"torch.nn.modules.module.Module",torch.nn.parallel.data_parallel.DataParallel*î
moduleá
!torch.nn.parallel.data_parallel.T@
torch.nn.modules.module.Module"torch.nn.modules.module.Module"torch.nn.modules.module.Module*√

device_ids≤
4typing.Sequence[Union[builtins.int,torch._C.device]]i
#Union[builtins.int,torch._C.device]
builtins.int"builtins.int"
torch._C.device"torch._C.device"typing.Sequence*É
scatter4torch.nn.parallel.data_parallel.DataParallel.scatter"
Any*î
selfâ
Otorch.nn.parallel.data_parallel.DataParallel[torch.nn.parallel.data_parallel.T]á
!torch.nn.parallel.data_parallel.T@
torch.nn.modules.module.Module"torch.nn.modules.module.Module"torch.nn.modules.module.Module",torch.nn.parallel.data_parallel.DataParallel*:
inputs.
builtins.tuple[Any]
Any"builtins.tuple*ü
kwargsí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None*√

device_ids≤
4typing.Sequence[Union[builtins.int,torch._C.device]]i
#Union[builtins.int,torch._C.device]
builtins.int"builtins.int"
torch._C.device"torch._C.device"typing.Sequence*∆
parallel_apply;torch.nn.parallel.data_parallel.DataParallel.parallel_apply",
builtins.list[Any]
Any"builtins.list*î
selfâ
Otorch.nn.parallel.data_parallel.DataParallel[torch.nn.parallel.data_parallel.T]á
!torch.nn.parallel.data_parallel.T@
torch.nn.modules.module.Module"torch.nn.modules.module.Module"torch.nn.modules.module.Module",torch.nn.parallel.data_parallel.DataParallel*ﬁ
replicasœ
2typing.Sequence[torch.nn.parallel.data_parallel.T]á
!torch.nn.parallel.data_parallel.T@
torch.nn.modules.module.Module"torch.nn.modules.module.Module"torch.nn.modules.module.Module"typing.Sequence*<
inputs0
typing.Sequence[Any]
Any"typing.Sequence*
kwargs
Any*Ò
gather3torch.nn.parallel.data_parallel.DataParallel.gather"
Any*î
selfâ
Otorch.nn.parallel.data_parallel.DataParallel[torch.nn.parallel.data_parallel.T]á
!torch.nn.parallel.data_parallel.T@
torch.nn.modules.module.Module"torch.nn.modules.module.Module"torch.nn.modules.module.Module",torch.nn.parallel.data_parallel.DataParallel*
outputs
Any*|
output_devicei
#Union[builtins.int,torch._C.device]
builtins.int"builtins.int"
torch._C.device"torch._C.devicePr«
module3torch.nn.parallel.data_parallel.DataParallel.moduleá
!torch.nn.parallel.data_parallel.T@
torch.nn.modules.module.Module"torch.nn.modules.module.Module"torch.nn.modules.module.Modulerë

device_ids7torch.nn.parallel.data_parallel.DataParallel.device_idsJ
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.listrU
dim0torch.nn.parallel.data_parallel.DataParallel.dim
builtins.int"builtins.intri
output_device:torch.nn.parallel.data_parallel.DataParallel.output_device
builtins.int"builtins.intrq
src_device_obj;torch.nn.parallel.data_parallel.DataParallel.src_device_obj"
torch._C.device"torch._C.deviceê
_check_balance.torch.nn.parallel.data_parallel._check_balance"
None*√

device_ids≤
4typing.Sequence[Union[builtins.int,torch._C.device]]i
#Union[builtins.int,torch._C.device]
builtins.int"builtins.int"
torch._C.device"torch._C.device"typing.Sequenceﬁ
data_parallel-torch.nn.parallel.data_parallel.data_parallel",
torch._tensor.Tensor"torch._tensor.Tensor*L
module@
torch.nn.modules.module.Module"torch.nn.modules.module.Module*
inputs
Any*ñ

device_idsÉ
@Union[typing.Sequence[Union[builtins.int,torch._C.device]],None]≤
4typing.Sequence[Union[builtins.int,torch._C.device]]i
#Union[builtins.int,torch._C.device]
builtins.int"builtins.int"
torch._C.device"torch._C.device"typing.Sequence
None *ç
output_devicex
(Union[builtins.int,torch._C.device,None]
builtins.int"builtins.int"
torch._C.device"torch._C.device
None *'
dim
builtins.int"builtins.int *;
module_kwargs&
Union[Any,None]
Any
None *õ
__annotations__/torch.nn.parallel.data_parallel.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*~
__all__'torch.nn.parallel.data_parallel.__all__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list