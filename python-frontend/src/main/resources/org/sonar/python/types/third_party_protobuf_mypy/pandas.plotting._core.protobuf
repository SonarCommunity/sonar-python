
pandas.plotting._core
	_BoxPlotTpandas.plotting._core._BoxPlotT"builtins.tuple*Ò
_replace(pandas.plotting._core._BoxPlotT._replace"˛
#pandas.plotting._core._BoxPlotT._NT‘
9Tuple[Any,builtins.dict[builtins.str,builtins.list[Any]]]
Anyã
.builtins.dict[builtins.str,builtins.list[Any]]
builtins.str"builtins.str,
builtins.list[Any]
Any"builtins.list"builtins.dict*ä
_self˛
#pandas.plotting._core._BoxPlotT._NT‘
9Tuple[Any,builtins.dict[builtins.str,builtins.list[Any]]]
Anyã
.builtins.dict[builtins.str,builtins.list[Any]]
builtins.str"builtins.str,
builtins.list[Any]
Any"builtins.list"builtins.dict*
ax
Any *ô
linesã
.builtins.dict[builtins.str,builtins.list[Any]]
builtins.str"builtins.str,
builtins.list[Any]
Any"builtins.list"builtins.dict *ö
__new__'pandas.plotting._core._BoxPlotT.__new__"˛
#pandas.plotting._core._BoxPlotT._NT‘
9Tuple[Any,builtins.dict[builtins.str,builtins.list[Any]]]
Anyã
.builtins.dict[builtins.str,builtins.list[Any]]
builtins.str"builtins.str,
builtins.list[Any]
Any"builtins.list"builtins.dict*π
_clsÆ
)Type[pandas.plotting._core._BoxPlotT._NT]˛
#pandas.plotting._core._BoxPlotT._NT‘
9Tuple[Any,builtins.dict[builtins.str,builtins.list[Any]]]
Anyã
.builtins.dict[builtins.str,builtins.list[Any]]
builtins.str"builtins.str,
builtins.list[Any]
Any"builtins.list"builtins.dict*
ax
Any*ó
linesã
.builtins.dict[builtins.str,builtins.list[Any]]
builtins.str"builtins.str,
builtins.list[Any]
Any"builtins.list"builtins.dict*ò
_asdict'pandas.plotting._core._BoxPlotT._asdict"W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*ä
_self˛
#pandas.plotting._core._BoxPlotT._NT‘
9Tuple[Any,builtins.dict[builtins.str,builtins.list[Any]]]
Anyã
.builtins.dict[builtins.str,builtins.list[Any]]
builtins.str"builtins.str,
builtins.list[Any]
Any"builtins.list"builtins.dict*‰
_make%pandas.plotting._core._BoxPlotT._make"˛
#pandas.plotting._core._BoxPlotT._NT‘
9Tuple[Any,builtins.dict[builtins.str,builtins.list[Any]]]
Anyã
.builtins.dict[builtins.str,builtins.list[Any]]
builtins.str"builtins.str,
builtins.list[Any]
Any"builtins.list"builtins.dict*π
_clsÆ
)Type[pandas.plotting._core._BoxPlotT._NT]˛
#pandas.plotting._core._BoxPlotT._NT‘
9Tuple[Any,builtins.dict[builtins.str,builtins.list[Any]]]
Anyã
.builtins.dict[builtins.str,builtins.list[Any]]
builtins.str"builtins.str,
builtins.list[Any]
Any"builtins.list"builtins.dict*>
iterable0
typing.Iterable[Any]
Any"typing.Iterable*
new
Any *
len
Any 0:classmethodpr1
ax"pandas.plotting._core._BoxPlotT.ax
Anyrº
lines%pandas.plotting._core._BoxPlotT.linesã
.builtins.dict[builtins.str,builtins.list[Any]]
builtins.str"builtins.str,
builtins.list[Any]
Any"builtins.list"builtins.dictr1
ax"pandas.plotting._core._BoxPlotT.ax
Anyrº
lines%pandas.plotting._core._BoxPlotT.linesã
.builtins.dict[builtins.str,builtins.list[Any]]
builtins.str"builtins.str,
builtins.list[Any]
Any"builtins.list"builtins.dictrî
_fields'pandas.plotting._core._BoxPlotT._fields`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.strrï
_field_types,pandas.plotting._core._BoxPlotT._field_typesW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dictrõ
_field_defaults/pandas.plotting._core._BoxPlotT._field_defaultsW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dictrP
_source'pandas.plotting._core._BoxPlotT._source
builtins.str"builtins.strrõ
__annotations__/pandas.plotting._core._BoxPlotT.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dictø˝
PlotAccessor"pandas.plotting._core.PlotAccessor"builtins.object*®
__init__+pandas.plotting._core.PlotAccessor.__init__"
None*R
selfH
"pandas.plotting._core.PlotAccessor""pandas.plotting._core.PlotAccessor*
data
Any2≠£
__call__+pandas.plotting._core.PlotAccessor.__call__â6
__call__+pandas.plotting._core.PlotAccessor.__call__"
Any*R
selfH
"pandas.plotting._core.PlotAccessor""pandas.plotting._core.PlotAccessor*„
data÷
FUnion[pandas.core.series.Series[Any],pandas.core.frame.DataFrame,None]D
pandas.core.series.Series[Any]
Any"pandas.core.series.Series:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame
None *+
x"
typing.Hashable"typing.Hashable *¬
y∏
7Union[typing.Hashable,typing.Sequence[typing.Hashable]]"
typing.Hashable"typing.HashableW
 typing.Sequence[typing.Hashable]"
typing.Hashable"typing.Hashable"typing.Sequence *˝
kind
¯Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str *0
ax&
Union[Any,None]
Any
None *|
subplotsl
"Union[Literal[builtins.bool],None]:
Literal[builtins.bool]	
builtins.bool"builtins.bool
None *,
sharex
builtins.bool"builtins.bool *,
sharey
builtins.bool"builtins.bool *n
layout`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int *{
figsizel
$Tuple[builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float */
	use_index
builtins.bool"builtins.bool *ï
titleá
)Union[typing.Sequence[builtins.str],None]N
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence
None *S
gridG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *ñ
legendá
*Union[builtins.bool,Literal[builtins.str]]
builtins.bool"builtins.bool7
Literal[builtins.str]	
builtins.str"builtins.str *ú
styleé
eUnion[builtins.str,builtins.list[builtins.str],builtins.dict[pandas._typing.HashableT1,builtins.str]]
builtins.str"builtins.strJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list∏
5builtins.dict[pandas._typing.HashableT1,builtins.str]R
pandas._typing.HashableT1"
typing.Hashable"typing.Hashable"typing.Hashable
builtins.str"builtins.str"builtins.dict *î
logxá
*Union[builtins.bool,Literal[builtins.str]]
builtins.bool"builtins.bool7
Literal[builtins.str]	
builtins.str"builtins.str *î
logyá
*Union[builtins.bool,Literal[builtins.str]]
builtins.bool"builtins.bool7
Literal[builtins.str]	
builtins.str"builtins.str *ñ
loglogá
*Union[builtins.bool,Literal[builtins.str]]
builtins.bool"builtins.bool7
Literal[builtins.str]	
builtins.str"builtins.str *b
xticksT
typing.Sequence[builtins.float] 
builtins.float"builtins.float"typing.Sequence *b
yticksT
typing.Sequence[builtins.float] 
builtins.float"builtins.float"typing.Sequence *ö
xlimç
IUnion[Tuple[builtins.float,builtins.float],builtins.list[builtins.float]]l
$Tuple[builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.floatP
builtins.list[builtins.float] 
builtins.float"builtins.float"builtins.list *ö
ylimç
IUnion[Tuple[builtins.float,builtins.float],builtins.list[builtins.float]]l
$Tuple[builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.floatP
builtins.list[builtins.float] 
builtins.float"builtins.float"builtins.list **
xlabel
builtins.str"builtins.str **
ylabel
builtins.str"builtins.str *+
rot 
builtins.float"builtins.float *0
fontsize 
builtins.float"builtins.float *a
colormapQ
Union[builtins.str,Any,None]
builtins.str"builtins.str
Any
None *.
colorbar
builtins.bool"builtins.bool *0
position 
builtins.float"builtins.float *É
tableı
OUnion[builtins.bool,pandas.core.series.Series[Any],pandas.core.frame.DataFrame]
builtins.bool"builtins.boolD
pandas.core.series.Series[Any]
Any"pandas.core.series.Series:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame *Í
yerr›
µUnion[pandas.core.frame.DataFrame,pandas.core.series.Series[Any],TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[Any,Any],builtins.str]:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrameD
pandas.core.series.Series[Any]
Any"pandas.core.series.Series≈
OTypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]]’
DUnion[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]P
&pandas.core.arrays.base.ExtensionArray"&pandas.core.arrays.base.ExtensionArray9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"pandas._typing.ArrayLike9
builtins.dict[Any,Any]
Any
Any"builtins.dict
builtins.str"builtins.str *Í
xerr›
µUnion[pandas.core.frame.DataFrame,pandas.core.series.Series[Any],TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[Any,Any],builtins.str]:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrameD
pandas.core.series.Series[Any]
Any"pandas.core.series.Series≈
OTypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]]’
DUnion[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]P
&pandas.core.arrays.base.ExtensionArray"&pandas.core.arrays.base.ExtensionArray9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"pandas._typing.ArrayLike9
builtins.dict[Any,Any]
Any
Any"builtins.dict
builtins.str"builtins.str *-
stacked
builtins.bool"builtins.bool *¡
secondary_y≠
gUnion[builtins.bool,builtins.list[pandas._typing.HashableT2],builtins.tuple[pandas._typing.HashableT2]]
builtins.bool"builtins.boolç
(builtins.list[pandas._typing.HashableT2]R
pandas._typing.HashableT2"
typing.Hashable"typing.Hashable"typing.Hashable"builtins.listè
)builtins.tuple[pandas._typing.HashableT2]R
pandas._typing.HashableT2"
typing.Hashable"typing.Hashable"typing.Hashable"builtins.tuple *0

mark_right
builtins.bool"builtins.bool *2
include_bool
builtins.bool"builtins.bool *+
backend
builtins.str"builtins.str *
kwargs
Any0:overloadX…:
__call__+pandas.plotting._core.PlotAccessor.__call__"É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray*R
selfH
"pandas.plotting._core.PlotAccessor""pandas.plotting._core.PlotAccessor*„
data÷
FUnion[pandas.core.series.Series[Any],pandas.core.frame.DataFrame,None]D
pandas.core.series.Series[Any]
Any"pandas.core.series.Series:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame
None *+
x"
typing.Hashable"typing.Hashable *¬
y∏
7Union[typing.Hashable,typing.Sequence[typing.Hashable]]"
typing.Hashable"typing.HashableW
 typing.Sequence[typing.Hashable]"
typing.Hashable"typing.Hashable"typing.Sequence *Æ
kind°
‚Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str *0
ax&
Union[Any,None]
Any
None *ç
subplots˛
YUnion[Literal[builtins.bool],typing.Sequence[typing.Iterable[pandas._typing.HashableT1]]]:
Literal[builtins.bool]	
builtins.bool"builtins.bool‚
;typing.Sequence[typing.Iterable[pandas._typing.HashableT1]]ë
*typing.Iterable[pandas._typing.HashableT1]R
pandas._typing.HashableT1"
typing.Hashable"typing.Hashable"typing.Hashable"typing.Iterable"typing.Sequence*,
sharex
builtins.bool"builtins.bool *,
sharey
builtins.bool"builtins.bool *n
layout`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int *{
figsizel
$Tuple[builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float */
	use_index
builtins.bool"builtins.bool *ï
titleá
)Union[typing.Sequence[builtins.str],None]N
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence
None *S
gridG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *ñ
legendá
*Union[builtins.bool,Literal[builtins.str]]
builtins.bool"builtins.bool7
Literal[builtins.str]	
builtins.str"builtins.str *ú
styleé
eUnion[builtins.str,builtins.list[builtins.str],builtins.dict[pandas._typing.HashableT2,builtins.str]]
builtins.str"builtins.strJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list∏
5builtins.dict[pandas._typing.HashableT2,builtins.str]R
pandas._typing.HashableT2"
typing.Hashable"typing.Hashable"typing.Hashable
builtins.str"builtins.str"builtins.dict *î
logxá
*Union[builtins.bool,Literal[builtins.str]]
builtins.bool"builtins.bool7
Literal[builtins.str]	
builtins.str"builtins.str *î
logyá
*Union[builtins.bool,Literal[builtins.str]]
builtins.bool"builtins.bool7
Literal[builtins.str]	
builtins.str"builtins.str *ñ
loglogá
*Union[builtins.bool,Literal[builtins.str]]
builtins.bool"builtins.bool7
Literal[builtins.str]	
builtins.str"builtins.str *b
xticksT
typing.Sequence[builtins.float] 
builtins.float"builtins.float"typing.Sequence *b
yticksT
typing.Sequence[builtins.float] 
builtins.float"builtins.float"typing.Sequence *ö
xlimç
IUnion[Tuple[builtins.float,builtins.float],builtins.list[builtins.float]]l
$Tuple[builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.floatP
builtins.list[builtins.float] 
builtins.float"builtins.float"builtins.list *ö
ylimç
IUnion[Tuple[builtins.float,builtins.float],builtins.list[builtins.float]]l
$Tuple[builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.floatP
builtins.list[builtins.float] 
builtins.float"builtins.float"builtins.list **
xlabel
builtins.str"builtins.str **
ylabel
builtins.str"builtins.str *+
rot 
builtins.float"builtins.float *0
fontsize 
builtins.float"builtins.float *a
colormapQ
Union[builtins.str,Any,None]
builtins.str"builtins.str
Any
None *.
colorbar
builtins.bool"builtins.bool *0
position 
builtins.float"builtins.float *É
tableı
OUnion[builtins.bool,pandas.core.series.Series[Any],pandas.core.frame.DataFrame]
builtins.bool"builtins.boolD
pandas.core.series.Series[Any]
Any"pandas.core.series.Series:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame *Í
yerr›
µUnion[pandas.core.frame.DataFrame,pandas.core.series.Series[Any],TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[Any,Any],builtins.str]:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrameD
pandas.core.series.Series[Any]
Any"pandas.core.series.Series≈
OTypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]]’
DUnion[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]P
&pandas.core.arrays.base.ExtensionArray"&pandas.core.arrays.base.ExtensionArray9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"pandas._typing.ArrayLike9
builtins.dict[Any,Any]
Any
Any"builtins.dict
builtins.str"builtins.str *Í
xerr›
µUnion[pandas.core.frame.DataFrame,pandas.core.series.Series[Any],TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[Any,Any],builtins.str]:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrameD
pandas.core.series.Series[Any]
Any"pandas.core.series.Series≈
OTypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]]’
DUnion[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]P
&pandas.core.arrays.base.ExtensionArray"&pandas.core.arrays.base.ExtensionArray9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"pandas._typing.ArrayLike9
builtins.dict[Any,Any]
Any
Any"builtins.dict
builtins.str"builtins.str *-
stacked
builtins.bool"builtins.bool *¡
secondary_y≠
gUnion[builtins.bool,builtins.list[pandas._typing.HashableT3],builtins.tuple[pandas._typing.HashableT3]]
builtins.bool"builtins.boolç
(builtins.list[pandas._typing.HashableT3]R
pandas._typing.HashableT3"
typing.Hashable"typing.Hashable"typing.Hashable"builtins.listè
)builtins.tuple[pandas._typing.HashableT3]R
pandas._typing.HashableT3"
typing.Hashable"typing.Hashable"typing.Hashable"builtins.tuple *0

mark_right
builtins.bool"builtins.bool *2
include_bool
builtins.bool"builtins.bool *+
backend
builtins.str"builtins.str *
kwargs
Any0:overloadXõ2
__call__+pandas.plotting._core.PlotAccessor.__call__"D
pandas.core.series.Series[Any]
Any"pandas.core.series.Series*R
selfH
"pandas.plotting._core.PlotAccessor""pandas.plotting._core.PlotAccessor*„
data÷
FUnion[pandas.core.series.Series[Any],pandas.core.frame.DataFrame,None]D
pandas.core.series.Series[Any]
Any"pandas.core.series.Series:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame
None *+
x"
typing.Hashable"typing.Hashable *¬
y∏
7Union[typing.Hashable,typing.Sequence[typing.Hashable]]"
typing.Hashable"typing.HashableW
 typing.Sequence[typing.Hashable]"
typing.Hashable"typing.Hashable"typing.Sequence *A
kind7
Literal[builtins.str]	
builtins.str"builtins.str*0
ax&
Union[Any,None]
Any
None *ç
subplots˛
YUnion[Literal[builtins.bool],typing.Sequence[typing.Iterable[pandas._typing.HashableT1]]]:
Literal[builtins.bool]	
builtins.bool"builtins.bool‚
;typing.Sequence[typing.Iterable[pandas._typing.HashableT1]]ë
*typing.Iterable[pandas._typing.HashableT1]R
pandas._typing.HashableT1"
typing.Hashable"typing.Hashable"typing.Hashable"typing.Iterable"typing.Sequence*,
sharex
builtins.bool"builtins.bool *,
sharey
builtins.bool"builtins.bool *n
layout`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int *{
figsizel
$Tuple[builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float */
	use_index
builtins.bool"builtins.bool *ï
titleá
)Union[typing.Sequence[builtins.str],None]N
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence
None *S
gridG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *ñ
legendá
*Union[builtins.bool,Literal[builtins.str]]
builtins.bool"builtins.bool7
Literal[builtins.str]	
builtins.str"builtins.str *ú
styleé
eUnion[builtins.str,builtins.list[builtins.str],builtins.dict[pandas._typing.HashableT2,builtins.str]]
builtins.str"builtins.strJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list∏
5builtins.dict[pandas._typing.HashableT2,builtins.str]R
pandas._typing.HashableT2"
typing.Hashable"typing.Hashable"typing.Hashable
builtins.str"builtins.str"builtins.dict *î
logxá
*Union[builtins.bool,Literal[builtins.str]]
builtins.bool"builtins.bool7
Literal[builtins.str]	
builtins.str"builtins.str *î
logyá
*Union[builtins.bool,Literal[builtins.str]]
builtins.bool"builtins.bool7
Literal[builtins.str]	
builtins.str"builtins.str *ñ
loglogá
*Union[builtins.bool,Literal[builtins.str]]
builtins.bool"builtins.bool7
Literal[builtins.str]	
builtins.str"builtins.str *b
xticksT
typing.Sequence[builtins.float] 
builtins.float"builtins.float"typing.Sequence *b
yticksT
typing.Sequence[builtins.float] 
builtins.float"builtins.float"typing.Sequence *ö
xlimç
IUnion[Tuple[builtins.float,builtins.float],builtins.list[builtins.float]]l
$Tuple[builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.floatP
builtins.list[builtins.float] 
builtins.float"builtins.float"builtins.list *ö
ylimç
IUnion[Tuple[builtins.float,builtins.float],builtins.list[builtins.float]]l
$Tuple[builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.floatP
builtins.list[builtins.float] 
builtins.float"builtins.float"builtins.list **
xlabel
builtins.str"builtins.str **
ylabel
builtins.str"builtins.str *+
rot 
builtins.float"builtins.float *0
fontsize 
builtins.float"builtins.float *a
colormapQ
Union[builtins.str,Any,None]
builtins.str"builtins.str
Any
None *.
colorbar
builtins.bool"builtins.bool *0
position 
builtins.float"builtins.float *É
tableı
OUnion[builtins.bool,pandas.core.series.Series[Any],pandas.core.frame.DataFrame]
builtins.bool"builtins.boolD
pandas.core.series.Series[Any]
Any"pandas.core.series.Series:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame *Í
yerr›
µUnion[pandas.core.frame.DataFrame,pandas.core.series.Series[Any],TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[Any,Any],builtins.str]:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrameD
pandas.core.series.Series[Any]
Any"pandas.core.series.Series≈
OTypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]]’
DUnion[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]P
&pandas.core.arrays.base.ExtensionArray"&pandas.core.arrays.base.ExtensionArray9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"pandas._typing.ArrayLike9
builtins.dict[Any,Any]
Any
Any"builtins.dict
builtins.str"builtins.str *Í
xerr›
µUnion[pandas.core.frame.DataFrame,pandas.core.series.Series[Any],TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[Any,Any],builtins.str]:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrameD
pandas.core.series.Series[Any]
Any"pandas.core.series.Series≈
OTypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]]’
DUnion[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]P
&pandas.core.arrays.base.ExtensionArray"&pandas.core.arrays.base.ExtensionArray9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"pandas._typing.ArrayLike9
builtins.dict[Any,Any]
Any
Any"builtins.dict
builtins.str"builtins.str *-
stacked
builtins.bool"builtins.bool *¡
secondary_y≠
gUnion[builtins.bool,builtins.list[pandas._typing.HashableT3],builtins.tuple[pandas._typing.HashableT3]]
builtins.bool"builtins.boolç
(builtins.list[pandas._typing.HashableT3]R
pandas._typing.HashableT3"
typing.Hashable"typing.Hashable"typing.Hashable"builtins.listè
)builtins.tuple[pandas._typing.HashableT3]R
pandas._typing.HashableT3"
typing.Hashable"typing.Hashable"typing.Hashable"builtins.tuple *0

mark_right
builtins.bool"builtins.bool *2
include_bool
builtins.bool"builtins.bool *+
backend
builtins.str"builtins.str *
kwargs
Any0:overloadX2Ú'
line'pandas.plotting._core.PlotAccessor.lineπ
line'pandas.plotting._core.PlotAccessor.line"
Any*R
selfH
"pandas.plotting._core.PlotAccessor""pandas.plotting._core.PlotAccessor*V
xM
Union[typing.Hashable,None]"
typing.Hashable"typing.Hashable
None *V
yM
Union[typing.Hashable,None]"
typing.Hashable"typing.Hashable
None *Ÿ
colorÀ
ëTypeAlias[Union[builtins.str,builtins.list[TypeAlias[Union[builtins.str,builtins.list[builtins.float],Tuple[builtins.float,builtins.float,builtins.float],Tuple[builtins.float,builtins.float,builtins.float,builtins.float]]]],builtins.dict[pandas._typing.HashableT,Unknown]]]à
ÜUnion[builtins.str,builtins.list[TypeAlias[Union[builtins.str,builtins.list[builtins.float],Tuple[builtins.float,builtins.float,builtins.float],Tuple[builtins.float,builtins.float,builtins.float,builtins.float]]]],builtins.dict[pandas._typing.HashableT,Unknown]]
builtins.str"builtins.strƒ
¬builtins.list[TypeAlias[Union[builtins.str,builtins.list[builtins.float],Tuple[builtins.float,builtins.float,builtins.float],Tuple[builtins.float,builtins.float,builtins.float,builtins.float]]]]Ì
≥TypeAlias[Union[builtins.str,builtins.list[builtins.float],Tuple[builtins.float,builtins.float,builtins.float],Tuple[builtins.float,builtins.float,builtins.float,builtins.float]]]é
®Union[builtins.str,builtins.list[builtins.float],Tuple[builtins.float,builtins.float,builtins.float],Tuple[builtins.float,builtins.float,builtins.float,builtins.float]]
builtins.str"builtins.strP
builtins.list[builtins.float] 
builtins.float"builtins.float"builtins.listù
3Tuple[builtins.float,builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.floatŒ
BTuple[builtins.float,builtins.float,builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float""pandas.plotting._core._SingleColor"builtins.listï
/builtins.dict[pandas._typing.HashableT,Unknown]Q
pandas._typing.HashableT"
typing.Hashable"typing.Hashable"typing.Hashable "builtins.dict"(pandas.plotting._core._PlotAccessorColor *|
subplotsl
"Union[Literal[builtins.bool],None]:
Literal[builtins.bool]	
builtins.bool"builtins.bool
None *
kwargs
Any0:overloadXÑ
line'pandas.plotting._core.PlotAccessor.line"É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray*R
selfH
"pandas.plotting._core.PlotAccessor""pandas.plotting._core.PlotAccessor*V
xM
Union[typing.Hashable,None]"
typing.Hashable"typing.Hashable
None *V
yM
Union[typing.Hashable,None]"
typing.Hashable"typing.Hashable
None *Ÿ
colorÀ
ëTypeAlias[Union[builtins.str,builtins.list[TypeAlias[Union[builtins.str,builtins.list[builtins.float],Tuple[builtins.float,builtins.float,builtins.float],Tuple[builtins.float,builtins.float,builtins.float,builtins.float]]]],builtins.dict[pandas._typing.HashableT,Unknown]]]à
ÜUnion[builtins.str,builtins.list[TypeAlias[Union[builtins.str,builtins.list[builtins.float],Tuple[builtins.float,builtins.float,builtins.float],Tuple[builtins.float,builtins.float,builtins.float,builtins.float]]]],builtins.dict[pandas._typing.HashableT,Unknown]]
builtins.str"builtins.strƒ
¬builtins.list[TypeAlias[Union[builtins.str,builtins.list[builtins.float],Tuple[builtins.float,builtins.float,builtins.float],Tuple[builtins.float,builtins.float,builtins.float,builtins.float]]]]Ì
≥TypeAlias[Union[builtins.str,builtins.list[builtins.float],Tuple[builtins.float,builtins.float,builtins.float],Tuple[builtins.float,builtins.float,builtins.float,builtins.float]]]é
®Union[builtins.str,builtins.list[builtins.float],Tuple[builtins.float,builtins.float,builtins.float],Tuple[builtins.float,builtins.float,builtins.float,builtins.float]]
builtins.str"builtins.strP
builtins.list[builtins.float] 
builtins.float"builtins.float"builtins.listù
3Tuple[builtins.float,builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.floatŒ
BTuple[builtins.float,builtins.float,builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float""pandas.plotting._core._SingleColor"builtins.listï
/builtins.dict[pandas._typing.HashableT,Unknown]Q
pandas._typing.HashableT"
typing.Hashable"typing.Hashable"typing.Hashable "builtins.dict"(pandas.plotting._core._PlotAccessorColor *J
subplots:
Literal[builtins.bool]	
builtins.bool"builtins.bool *
kwargs
Any0:overloadX2Ï'
bar&pandas.plotting._core.PlotAccessor.bar∑
bar&pandas.plotting._core.PlotAccessor.bar"
Any*R
selfH
"pandas.plotting._core.PlotAccessor""pandas.plotting._core.PlotAccessor*V
xM
Union[typing.Hashable,None]"
typing.Hashable"typing.Hashable
None *V
yM
Union[typing.Hashable,None]"
typing.Hashable"typing.Hashable
None *Ÿ
colorÀ
ëTypeAlias[Union[builtins.str,builtins.list[TypeAlias[Union[builtins.str,builtins.list[builtins.float],Tuple[builtins.float,builtins.float,builtins.float],Tuple[builtins.float,builtins.float,builtins.float,builtins.float]]]],builtins.dict[pandas._typing.HashableT,Unknown]]]à
ÜUnion[builtins.str,builtins.list[TypeAlias[Union[builtins.str,builtins.list[builtins.float],Tuple[builtins.float,builtins.float,builtins.float],Tuple[builtins.float,builtins.float,builtins.float,builtins.float]]]],builtins.dict[pandas._typing.HashableT,Unknown]]
builtins.str"builtins.strƒ
¬builtins.list[TypeAlias[Union[builtins.str,builtins.list[builtins.float],Tuple[builtins.float,builtins.float,builtins.float],Tuple[builtins.float,builtins.float,builtins.float,builtins.float]]]]Ì
≥TypeAlias[Union[builtins.str,builtins.list[builtins.float],Tuple[builtins.float,builtins.float,builtins.float],Tuple[builtins.float,builtins.float,builtins.float,builtins.float]]]é
®Union[builtins.str,builtins.list[builtins.float],Tuple[builtins.float,builtins.float,builtins.float],Tuple[builtins.float,builtins.float,builtins.float,builtins.float]]
builtins.str"builtins.strP
builtins.list[builtins.float] 
builtins.float"builtins.float"builtins.listù
3Tuple[builtins.float,builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.floatŒ
BTuple[builtins.float,builtins.float,builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float""pandas.plotting._core._SingleColor"builtins.listï
/builtins.dict[pandas._typing.HashableT,Unknown]Q
pandas._typing.HashableT"
typing.Hashable"typing.Hashable"typing.Hashable "builtins.dict"(pandas.plotting._core._PlotAccessorColor *|
subplotsl
"Union[Literal[builtins.bool],None]:
Literal[builtins.bool]	
builtins.bool"builtins.bool
None *
kwargs
Any0:overloadXÇ
bar&pandas.plotting._core.PlotAccessor.bar"É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray*R
selfH
"pandas.plotting._core.PlotAccessor""pandas.plotting._core.PlotAccessor*V
xM
Union[typing.Hashable,None]"
typing.Hashable"typing.Hashable
None *V
yM
Union[typing.Hashable,None]"
typing.Hashable"typing.Hashable
None *Ÿ
colorÀ
ëTypeAlias[Union[builtins.str,builtins.list[TypeAlias[Union[builtins.str,builtins.list[builtins.float],Tuple[builtins.float,builtins.float,builtins.float],Tuple[builtins.float,builtins.float,builtins.float,builtins.float]]]],builtins.dict[pandas._typing.HashableT,Unknown]]]à
ÜUnion[builtins.str,builtins.list[TypeAlias[Union[builtins.str,builtins.list[builtins.float],Tuple[builtins.float,builtins.float,builtins.float],Tuple[builtins.float,builtins.float,builtins.float,builtins.float]]]],builtins.dict[pandas._typing.HashableT,Unknown]]
builtins.str"builtins.strƒ
¬builtins.list[TypeAlias[Union[builtins.str,builtins.list[builtins.float],Tuple[builtins.float,builtins.float,builtins.float],Tuple[builtins.float,builtins.float,builtins.float,builtins.float]]]]Ì
≥TypeAlias[Union[builtins.str,builtins.list[builtins.float],Tuple[builtins.float,builtins.float,builtins.float],Tuple[builtins.float,builtins.float,builtins.float,builtins.float]]]é
®Union[builtins.str,builtins.list[builtins.float],Tuple[builtins.float,builtins.float,builtins.float],Tuple[builtins.float,builtins.float,builtins.float,builtins.float]]
builtins.str"builtins.strP
builtins.list[builtins.float] 
builtins.float"builtins.float"builtins.listù
3Tuple[builtins.float,builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.floatŒ
BTuple[builtins.float,builtins.float,builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float""pandas.plotting._core._SingleColor"builtins.listï
/builtins.dict[pandas._typing.HashableT,Unknown]Q
pandas._typing.HashableT"
typing.Hashable"typing.Hashable"typing.Hashable "builtins.dict"(pandas.plotting._core._PlotAccessorColor *J
subplots:
Literal[builtins.bool]	
builtins.bool"builtins.bool *
kwargs
Any0:overloadX2Ú'
barh'pandas.plotting._core.PlotAccessor.barhπ
barh'pandas.plotting._core.PlotAccessor.barh"
Any*R
selfH
"pandas.plotting._core.PlotAccessor""pandas.plotting._core.PlotAccessor*V
xM
Union[typing.Hashable,None]"
typing.Hashable"typing.Hashable
None *V
yM
Union[typing.Hashable,None]"
typing.Hashable"typing.Hashable
None *Ÿ
colorÀ
ëTypeAlias[Union[builtins.str,builtins.list[TypeAlias[Union[builtins.str,builtins.list[builtins.float],Tuple[builtins.float,builtins.float,builtins.float],Tuple[builtins.float,builtins.float,builtins.float,builtins.float]]]],builtins.dict[pandas._typing.HashableT,Unknown]]]à
ÜUnion[builtins.str,builtins.list[TypeAlias[Union[builtins.str,builtins.list[builtins.float],Tuple[builtins.float,builtins.float,builtins.float],Tuple[builtins.float,builtins.float,builtins.float,builtins.float]]]],builtins.dict[pandas._typing.HashableT,Unknown]]
builtins.str"builtins.strƒ
¬builtins.list[TypeAlias[Union[builtins.str,builtins.list[builtins.float],Tuple[builtins.float,builtins.float,builtins.float],Tuple[builtins.float,builtins.float,builtins.float,builtins.float]]]]Ì
≥TypeAlias[Union[builtins.str,builtins.list[builtins.float],Tuple[builtins.float,builtins.float,builtins.float],Tuple[builtins.float,builtins.float,builtins.float,builtins.float]]]é
®Union[builtins.str,builtins.list[builtins.float],Tuple[builtins.float,builtins.float,builtins.float],Tuple[builtins.float,builtins.float,builtins.float,builtins.float]]
builtins.str"builtins.strP
builtins.list[builtins.float] 
builtins.float"builtins.float"builtins.listù
3Tuple[builtins.float,builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.floatŒ
BTuple[builtins.float,builtins.float,builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float""pandas.plotting._core._SingleColor"builtins.listï
/builtins.dict[pandas._typing.HashableT,Unknown]Q
pandas._typing.HashableT"
typing.Hashable"typing.Hashable"typing.Hashable "builtins.dict"(pandas.plotting._core._PlotAccessorColor *|
subplotsl
"Union[Literal[builtins.bool],None]:
Literal[builtins.bool]	
builtins.bool"builtins.bool
None *
kwargs
Any0:overloadXÑ
barh'pandas.plotting._core.PlotAccessor.barh"É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray*R
selfH
"pandas.plotting._core.PlotAccessor""pandas.plotting._core.PlotAccessor*V
xM
Union[typing.Hashable,None]"
typing.Hashable"typing.Hashable
None *V
yM
Union[typing.Hashable,None]"
typing.Hashable"typing.Hashable
None *Ÿ
colorÀ
ëTypeAlias[Union[builtins.str,builtins.list[TypeAlias[Union[builtins.str,builtins.list[builtins.float],Tuple[builtins.float,builtins.float,builtins.float],Tuple[builtins.float,builtins.float,builtins.float,builtins.float]]]],builtins.dict[pandas._typing.HashableT,Unknown]]]à
ÜUnion[builtins.str,builtins.list[TypeAlias[Union[builtins.str,builtins.list[builtins.float],Tuple[builtins.float,builtins.float,builtins.float],Tuple[builtins.float,builtins.float,builtins.float,builtins.float]]]],builtins.dict[pandas._typing.HashableT,Unknown]]
builtins.str"builtins.strƒ
¬builtins.list[TypeAlias[Union[builtins.str,builtins.list[builtins.float],Tuple[builtins.float,builtins.float,builtins.float],Tuple[builtins.float,builtins.float,builtins.float,builtins.float]]]]Ì
≥TypeAlias[Union[builtins.str,builtins.list[builtins.float],Tuple[builtins.float,builtins.float,builtins.float],Tuple[builtins.float,builtins.float,builtins.float,builtins.float]]]é
®Union[builtins.str,builtins.list[builtins.float],Tuple[builtins.float,builtins.float,builtins.float],Tuple[builtins.float,builtins.float,builtins.float,builtins.float]]
builtins.str"builtins.strP
builtins.list[builtins.float] 
builtins.float"builtins.float"builtins.listù
3Tuple[builtins.float,builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.floatŒ
BTuple[builtins.float,builtins.float,builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float""pandas.plotting._core._SingleColor"builtins.listï
/builtins.dict[pandas._typing.HashableT,Unknown]Q
pandas._typing.HashableT"
typing.Hashable"typing.Hashable"typing.Hashable "builtins.dict"(pandas.plotting._core._PlotAccessorColor *J
subplots:
Literal[builtins.bool]	
builtins.bool"builtins.bool *
kwargs
Any0:overloadX2∂	
box&pandas.plotting._core.PlotAccessor.boxº
box&pandas.plotting._core.PlotAccessor.box"
Any*R
selfH
"pandas.plotting._core.PlotAccessor""pandas.plotting._core.PlotAccessor*é
byÉ
CUnion[typing.Hashable,builtins.list[pandas._typing.HashableT],None]"
typing.Hashable"typing.Hashableã
'builtins.list[pandas._typing.HashableT]Q
pandas._typing.HashableT"
typing.Hashable"typing.Hashable"typing.Hashable"builtins.list
None *|
subplotsl
"Union[Literal[builtins.bool],None]:
Literal[builtins.bool]	
builtins.bool"builtins.bool
None *
kwargs
Any0:overloadX«
box&pandas.plotting._core.PlotAccessor.box"D
pandas.core.series.Series[Any]
Any"pandas.core.series.Series*R
selfH
"pandas.plotting._core.PlotAccessor""pandas.plotting._core.PlotAccessor*é
byÉ
CUnion[typing.Hashable,builtins.list[pandas._typing.HashableT],None]"
typing.Hashable"typing.Hashableã
'builtins.list[pandas._typing.HashableT]Q
pandas._typing.HashableT"
typing.Hashable"typing.Hashable"typing.Hashable"builtins.list
None *J
subplots:
Literal[builtins.bool]	
builtins.bool"builtins.bool *
kwargs
Any0:overloadX2Œ
hist'pandas.plotting._core.PlotAccessor.histË
hist'pandas.plotting._core.PlotAccessor.hist"
Any*R
selfH
"pandas.plotting._core.PlotAccessor""pandas.plotting._core.PlotAccessor*é
byÉ
CUnion[typing.Hashable,builtins.list[pandas._typing.HashableT],None]"
typing.Hashable"typing.Hashableã
'builtins.list[pandas._typing.HashableT]Q
pandas._typing.HashableT"
typing.Hashable"typing.Hashable"typing.Hashable"builtins.list
None *(
bins
builtins.int"builtins.int *|
subplotsl
"Union[Literal[builtins.bool],None]:
Literal[builtins.bool]	
builtins.bool"builtins.bool
None *
kwargs
Any0:overloadX±
hist'pandas.plotting._core.PlotAccessor.hist"É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray*R
selfH
"pandas.plotting._core.PlotAccessor""pandas.plotting._core.PlotAccessor*é
byÉ
CUnion[typing.Hashable,builtins.list[pandas._typing.HashableT],None]"
typing.Hashable"typing.Hashableã
'builtins.list[pandas._typing.HashableT]Q
pandas._typing.HashableT"
typing.Hashable"typing.Hashable"typing.Hashable"builtins.list
None *(
bins
builtins.int"builtins.int *H
subplots:
Literal[builtins.bool]	
builtins.bool"builtins.bool*
kwargs
Any0:overloadX2Ä
kde&pandas.plotting._core.PlotAccessor.kde¬	
kde&pandas.plotting._core.PlotAccessor.kde"
Any*R
selfH
"pandas.plotting._core.PlotAccessor""pandas.plotting._core.PlotAccessor*Á
	bw_method’
fUnion[Literal[builtins.str],Literal[builtins.str],builtins.float,CallableType[builtins.function],None]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str 
builtins.float"builtins.floatK
CallableType[builtins.function]&
builtins.function"builtins.function
None *™
indû
lUnion[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]],builtins.int,None]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray
builtins.int"builtins.int
None *|
subplotsl
"Union[Literal[builtins.bool],None]:
Literal[builtins.bool]	
builtins.bool"builtins.bool
None *
kwargs
Any0:overloadXã
kde&pandas.plotting._core.PlotAccessor.kde"É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray*R
selfH
"pandas.plotting._core.PlotAccessor""pandas.plotting._core.PlotAccessor*Á
	bw_method’
fUnion[Literal[builtins.str],Literal[builtins.str],builtins.float,CallableType[builtins.function],None]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str 
builtins.float"builtins.floatK
CallableType[builtins.function]&
builtins.function"builtins.function
None *™
indû
lUnion[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]],builtins.int,None]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray
builtins.int"builtins.int
None *H
subplots:
Literal[builtins.bool]	
builtins.bool"builtins.bool*
kwargs
Any0:overloadX2ñ
area'pandas.plotting._core.PlotAccessor.areaå
area'pandas.plotting._core.PlotAccessor.area"
Any*R
selfH
"pandas.plotting._core.PlotAccessor""pandas.plotting._core.PlotAccessor*V
xM
Union[typing.Hashable,None]"
typing.Hashable"typing.Hashable
None *V
yM
Union[typing.Hashable,None]"
typing.Hashable"typing.Hashable
None *-
stacked
builtins.bool"builtins.bool *|
subplotsl
"Union[Literal[builtins.bool],None]:
Literal[builtins.bool]	
builtins.bool"builtins.bool
None *
kwargs
Any0:overloadX’
area'pandas.plotting._core.PlotAccessor.area"É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray*R
selfH
"pandas.plotting._core.PlotAccessor""pandas.plotting._core.PlotAccessor*V
xM
Union[typing.Hashable,None]"
typing.Hashable"typing.Hashable
None *V
yM
Union[typing.Hashable,None]"
typing.Hashable"typing.Hashable
None *-
stacked
builtins.bool"builtins.bool *H
subplots:
Literal[builtins.bool]	
builtins.bool"builtins.bool*
kwargs
Any0:overloadX2®
pie&pandas.plotting._core.PlotAccessor.pie÷
pie&pandas.plotting._core.PlotAccessor.pie"
Any*R
selfH
"pandas.plotting._core.PlotAccessor""pandas.plotting._core.PlotAccessor*)
y"
typing.Hashable"typing.Hashable*|
subplotsl
"Union[Literal[builtins.bool],None]:
Literal[builtins.bool]	
builtins.bool"builtins.bool
None *
kwargs
Any0:overloadXü
pie&pandas.plotting._core.PlotAccessor.pie"É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray*R
selfH
"pandas.plotting._core.PlotAccessor""pandas.plotting._core.PlotAccessor*)
y"
typing.Hashable"typing.Hashable*H
subplots:
Literal[builtins.bool]	
builtins.bool"builtins.bool*
kwargs
Any0:overloadX2ú
scatter*pandas.plotting._core.PlotAccessor.scatterå
scatter*pandas.plotting._core.PlotAccessor.scatter"
Any*R
selfH
"pandas.plotting._core.PlotAccessor""pandas.plotting._core.PlotAccessor*)
x"
typing.Hashable"typing.Hashable*)
y"
typing.Hashable"typing.Hashable*Õ
s√
;Union[typing.Hashable,typing.Sequence[builtins.float],None]"
typing.Hashable"typing.HashableT
typing.Sequence[builtins.float] 
builtins.float"builtins.float"typing.Sequence
None *∞
c¶
2Union[typing.Hashable,builtins.list[builtins.str]]"
typing.Hashable"typing.HashableJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list *|
subplotsl
"Union[Literal[builtins.bool],None]:
Literal[builtins.bool]	
builtins.bool"builtins.bool
None *
kwargs
Any0:overloadX’
scatter*pandas.plotting._core.PlotAccessor.scatter"É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray*R
selfH
"pandas.plotting._core.PlotAccessor""pandas.plotting._core.PlotAccessor*)
x"
typing.Hashable"typing.Hashable*)
y"
typing.Hashable"typing.Hashable*Õ
s√
;Union[typing.Hashable,typing.Sequence[builtins.float],None]"
typing.Hashable"typing.HashableT
typing.Sequence[builtins.float] 
builtins.float"builtins.float"typing.Sequence
None *∞
c¶
2Union[typing.Hashable,builtins.list[builtins.str]]"
typing.Hashable"typing.HashableJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list *H
subplots:
Literal[builtins.bool]	
builtins.bool"builtins.bool*
kwargs
Any0:overloadX2º
hexbin)pandas.plotting._core.PlotAccessor.hexbin›
hexbin)pandas.plotting._core.PlotAccessor.hexbin"
Any*R
selfH
"pandas.plotting._core.PlotAccessor""pandas.plotting._core.PlotAccessor*)
x"
typing.Hashable"typing.Hashable*)
y"
typing.Hashable"typing.Hashable*V
CM
Union[typing.Hashable,None]"
typing.Hashable"typing.Hashable
None *†
reduce_C_functionÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None *ÿ
gridsize«
9Union[builtins.int,Tuple[builtins.int,builtins.int],None]
builtins.int"builtins.int`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
None *|
subplotsl
"Union[Literal[builtins.bool],None]:
Literal[builtins.bool]	
builtins.bool"builtins.bool
None *
kwargs
Any0:overloadX¶	
hexbin)pandas.plotting._core.PlotAccessor.hexbin"É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray*R
selfH
"pandas.plotting._core.PlotAccessor""pandas.plotting._core.PlotAccessor*)
x"
typing.Hashable"typing.Hashable*)
y"
typing.Hashable"typing.Hashable*V
CM
Union[typing.Hashable,None]"
typing.Hashable"typing.Hashable
None *†
reduce_C_functionÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None *ÿ
gridsize«
9Union[builtins.int,Tuple[builtins.int,builtins.int],None]
builtins.int"builtins.int`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
None *H
subplots:
Literal[builtins.bool]	
builtins.bool"builtins.bool*
kwargs
Any0:overloadXrï
density*pandas.plotting._core.PlotAccessor.density^
CallableType[builtins.function]&
builtins.function"builtins.function"builtins.function"”%
boxplotpandas.plotting._core.boxplot√
boxplotpandas.plotting._core.boxplot"
Any*D
data:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*ï
columnÜ
DUnion[typing.Hashable,builtins.list[pandas._typing.HashableT1],None]"
typing.Hashable"typing.Hashableç
(builtins.list[pandas._typing.HashableT1]R
pandas._typing.HashableT1"
typing.Hashable"typing.Hashable"typing.Hashable"builtins.list
None *ë
byÜ
DUnion[typing.Hashable,builtins.list[pandas._typing.HashableT2],None]"
typing.Hashable"typing.Hashableç
(builtins.list[pandas._typing.HashableT2]R
pandas._typing.HashableT2"
typing.Hashable"typing.Hashable"typing.Hashable"builtins.list
None *0
ax&
Union[Any,None]
Any
None *Ö
fontsizeu
'Union[builtins.float,builtins.str,None] 
builtins.float"builtins.float
builtins.str"builtins.str
None *+
rot 
builtins.float"builtins.float **
grid
builtins.bool"builtins.bool *º
figsize¨
0Union[Tuple[builtins.float,builtins.float],None]l
$Tuple[builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float
None *´
layoutú
,Union[Tuple[builtins.int,builtins.int],None]`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
None *{
return_typeh
!Union[Literal[builtins.str],None]7
Literal[builtins.str]	
builtins.str"builtins.str
None *
kwargs
Any0:overloadXï
boxplotpandas.plotting._core.boxplot"ã
.builtins.dict[builtins.str,builtins.list[Any]]
builtins.str"builtins.str,
builtins.list[Any]
Any"builtins.list"builtins.dict*D
data:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*ï
columnÜ
DUnion[typing.Hashable,builtins.list[pandas._typing.HashableT1],None]"
typing.Hashable"typing.Hashableç
(builtins.list[pandas._typing.HashableT1]R
pandas._typing.HashableT1"
typing.Hashable"typing.Hashable"typing.Hashable"builtins.list
None *ë
byÜ
DUnion[typing.Hashable,builtins.list[pandas._typing.HashableT2],None]"
typing.Hashable"typing.Hashableç
(builtins.list[pandas._typing.HashableT2]R
pandas._typing.HashableT2"
typing.Hashable"typing.Hashable"typing.Hashable"builtins.list
None *0
ax&
Union[Any,None]
Any
None *Ö
fontsizeu
'Union[builtins.float,builtins.str,None] 
builtins.float"builtins.float
builtins.str"builtins.str
None *+
rot 
builtins.float"builtins.float **
grid
builtins.bool"builtins.bool *º
figsize¨
0Union[Tuple[builtins.float,builtins.float],None]l
$Tuple[builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float
None *´
layoutú
,Union[Tuple[builtins.int,builtins.int],None]`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
None *H
return_type7
Literal[builtins.str]	
builtins.str"builtins.str*
kwargs
Any0:overloadX 
boxplotpandas.plotting._core.boxplot"¿
DTypeAlias[Tuple[Any,builtins.dict[builtins.str,builtins.list[Any]]]]‘
9Tuple[Any,builtins.dict[builtins.str,builtins.list[Any]]]
Anyã
.builtins.dict[builtins.str,builtins.list[Any]]
builtins.str"builtins.str,
builtins.list[Any]
Any"builtins.list"builtins.dict"pandas.plotting._core._BoxPlotT*D
data:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*ï
columnÜ
DUnion[typing.Hashable,builtins.list[pandas._typing.HashableT1],None]"
typing.Hashable"typing.Hashableç
(builtins.list[pandas._typing.HashableT1]R
pandas._typing.HashableT1"
typing.Hashable"typing.Hashable"typing.Hashable"builtins.list
None *ë
byÜ
DUnion[typing.Hashable,builtins.list[pandas._typing.HashableT2],None]"
typing.Hashable"typing.Hashableç
(builtins.list[pandas._typing.HashableT2]R
pandas._typing.HashableT2"
typing.Hashable"typing.Hashable"typing.Hashable"builtins.list
None *0
ax&
Union[Any,None]
Any
None *Ö
fontsizeu
'Union[builtins.float,builtins.str,None] 
builtins.float"builtins.float
builtins.str"builtins.str
None *+
rot 
builtins.float"builtins.float **
grid
builtins.bool"builtins.bool *º
figsize¨
0Union[Tuple[builtins.float,builtins.float],None]l
$Tuple[builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float
None *´
layoutú
,Union[Tuple[builtins.int,builtins.int],None]`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
None *H
return_type7
Literal[builtins.str]	
builtins.str"builtins.str*
kwargs
Any0:overloadX*ë
__annotations__%pandas.plotting._core.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*+
Axespandas.plotting._core.Axes
Any*3
Colormappandas.plotting._core.Colormap
Any*/
Line2Dpandas.plotting._core.Line2D
Any*
npnumpy *
pdpandas *;
gaussian_kde"pandas.plotting._core.gaussian_kde
Any