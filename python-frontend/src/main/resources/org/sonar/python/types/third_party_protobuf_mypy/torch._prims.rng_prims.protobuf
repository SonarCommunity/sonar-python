
torch._prims.rng_primsI
throw_on_non_cuda(torch._prims.rng_prims.throw_on_non_cuda*

device†
register_rng_prim(torch._prims.rng_prims.register_rng_prim*
name*

schema*
	impl_aten*
	impl_meta*
doc*

tags }
philox_rand_offset_meta.torch._prims.rng_prims.philox_rand_offset_meta"
Any*)
shape
torch._C.Size"torch._C.Sizes
philox_rand_offset)torch._prims.rng_prims.philox_rand_offset"
Any*)
shape
torch._C.Size"torch._C.SizeC
register_philox_rand+torch._prims.rng_prims.register_philox_randE

get_device!torch._prims.rng_prims.get_device*
args*

kwargs_
"register_run_and_save_rng_state_op9torch._prims.rng_prims.register_run_and_save_rng_state_opW
register_run_with_rng_state_op5torch._prims.rng_prims.register_run_with_rng_state_op?
register_rng_prims)torch._prims.rng_prims.register_rng_prims*’
__annotations__&torch._prims.rng_prims.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*
pytreetorch.utils._pytree *P
run_and_save_rng_state-torch._prims.rng_prims.run_and_save_rng_state
Any*H
run_with_rng_state)torch._prims.rng_prims.run_with_rng_state
Any