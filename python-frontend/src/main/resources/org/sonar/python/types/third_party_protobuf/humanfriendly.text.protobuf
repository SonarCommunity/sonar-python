
humanfriendly.textV
compacthumanfriendly.text.compact*
text*
args*
kwz36z37z38z39z310\
compact_empty_lines&humanfriendly.text.compact_empty_lines*
textz36z37z38z39z310ƒ
concatenatehumanfriendly.text.concatenate"
Any*
items
Any*/
conjunction
builtins.str"builtins.str *2
serial_comma
builtins.bool"builtins.bool z36z37z38z39z310T
dedenthumanfriendly.text.dedent*
text*
args*
kwz36z37z38z39z310T
formathumanfriendly.text.format*
text*
args*
kwz36z37z38z39z310ë
generate_slug humanfriendly.text.generate_slug"
Any*
text
Any*-
	delimiter
builtins.str"builtins.str z36z37z38z39z310P
is_empty_line humanfriendly.text.is_empty_line*
textz36z37z38z39z310J

join_lineshumanfriendly.text.join_lines*
textz36z37z38z39z310›
	pluralizehumanfriendly.text.pluralize"
Any*
count
Any*
singular
Any*i
plural[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None z36z37z38z39z310Â
pluralize_raw humanfriendly.text.pluralize_raw"
Any*
count
Any*
singular
Any*i
plural[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None z36z37z38z39z310f
random_string humanfriendly.text.random_string*
length *

characters z36z37z38z39z310Å
splithumanfriendly.text.split"
Any*
text
Any*-
	delimiter
builtins.str"builtins.str z36z37z38z39z310V
split_paragraphs#humanfriendly.text.split_paragraphs*
textz36z37z38z39z310F
tokenizehumanfriendly.text.tokenize*
textz36z37z38z39z310V
trim_empty_lines#humanfriendly.text.trim_empty_lines*
textz36z37z38z39z310*£
__annotations__"humanfriendly.text.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*36*37*38*39*310