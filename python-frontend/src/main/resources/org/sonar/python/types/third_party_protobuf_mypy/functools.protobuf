
	functoolsÖ!

_CacheInfofunctools._CacheInfo"builtins.tuple*¶
_replacefunctools._CacheInfo._replace"â
functools._CacheInfo._NTÍ
FTuple[builtins.int,builtins.int,Union[builtins.int,None],builtins.int]
builtins.int"builtins.int
builtins.int"builtins.intD
Union[builtins.int,None]
builtins.int"builtins.int
None
builtins.int"builtins.int*ï
_selfâ
functools._CacheInfo._NTÍ
FTuple[builtins.int,builtins.int,Union[builtins.int,None],builtins.int]
builtins.int"builtins.int
builtins.int"builtins.intD
Union[builtins.int,None]
builtins.int"builtins.int
None
builtins.int"builtins.int*(
hits
builtins.int"builtins.int **
misses
builtins.int"builtins.int *S
maxsizeD
Union[builtins.int,None]
builtins.int"builtins.int
None *,
currsize
builtins.int"builtins.int *∆
__new__functools._CacheInfo.__new__"â
functools._CacheInfo._NTÍ
FTuple[builtins.int,builtins.int,Union[builtins.int,None],builtins.int]
builtins.int"builtins.int
builtins.int"builtins.intD
Union[builtins.int,None]
builtins.int"builtins.int
None
builtins.int"builtins.int*ø
_cls¥
Type[functools._CacheInfo._NT]â
functools._CacheInfo._NTÍ
FTuple[builtins.int,builtins.int,Union[builtins.int,None],builtins.int]
builtins.int"builtins.int
builtins.int"builtins.intD
Union[builtins.int,None]
builtins.int"builtins.int
None
builtins.int"builtins.int"type*&
hits
builtins.int"builtins.int*(
misses
builtins.int"builtins.int*Q
maxsizeD
Union[builtins.int,None]
builtins.int"builtins.int
None**
currsize
builtins.int"builtins.int*ò
_asdictfunctools._CacheInfo._asdict"W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*ï
_selfâ
functools._CacheInfo._NTÍ
FTuple[builtins.int,builtins.int,Union[builtins.int,None],builtins.int]
builtins.int"builtins.int
builtins.int"builtins.intD
Union[builtins.int,None]
builtins.int"builtins.int
None
builtins.int"builtins.int*Í
_makefunctools._CacheInfo._make"â
functools._CacheInfo._NTÍ
FTuple[builtins.int,builtins.int,Union[builtins.int,None],builtins.int]
builtins.int"builtins.int
builtins.int"builtins.intD
Union[builtins.int,None]
builtins.int"builtins.int
None
builtins.int"builtins.int*ø
_cls¥
Type[functools._CacheInfo._NT]â
functools._CacheInfo._NTÍ
FTuple[builtins.int,builtins.int,Union[builtins.int,None],builtins.int]
builtins.int"builtins.int
builtins.int"builtins.intD
Union[builtins.int,None]
builtins.int"builtins.int
None
builtins.int"builtins.int"type*>
iterable0
typing.Iterable[Any]
Any"typing.Iterable*
new
Any *
len
Any 0:classmethodpr?
hitsfunctools._CacheInfo.hits
builtins.int"builtins.intrC
missesfunctools._CacheInfo.misses
builtins.int"builtins.intrm
maxsizefunctools._CacheInfo.maxsizeD
Union[builtins.int,None]
builtins.int"builtins.int
NonerG
currsizefunctools._CacheInfo.currsize
builtins.int"builtins.intr?
hitsfunctools._CacheInfo.hits
builtins.int"builtins.intrC
missesfunctools._CacheInfo.misses
builtins.int"builtins.intrm
maxsizefunctools._CacheInfo.maxsizeD
Union[builtins.int,None]
builtins.int"builtins.int
NonerG
currsizefunctools._CacheInfo.currsize
builtins.int"builtins.intr‡
_fieldsfunctools._CacheInfo._fields∂
:Tuple[builtins.str,builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.strrä
_field_types!functools._CacheInfo._field_typesW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dictrê
_field_defaults$functools._CacheInfo._field_defaultsW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dictrE
_sourcefunctools._CacheInfo._source
builtins.str"builtins.strrê
__annotations__$functools._CacheInfo.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dictº
_lru_cache_wrapperfunctools._lru_cache_wrapper"builtins.object*ı
__call__%functools._lru_cache_wrapper.__call__"E
functools._T"
builtins.object"builtins.object"builtins.object*ú
selfë
*functools._lru_cache_wrapper[functools._T]E
functools._T"
builtins.object"builtins.object"builtins.object"functools._lru_cache_wrapper*,
args"
typing.Hashable"typing.Hashable*.
kwargs"
typing.Hashable"typing.Hashable*Ø

cache_info'functools._lru_cache_wrapper.cache_info"ÿ
QTypeAlias[Tuple[builtins.int,builtins.int,Union[builtins.int,None],builtins.int]]Í
FTuple[builtins.int,builtins.int,Union[builtins.int,None],builtins.int]
builtins.int"builtins.int
builtins.int"builtins.intD
Union[builtins.int,None]
builtins.int"builtins.int
None
builtins.int"builtins.int"functools._CacheInfo*ú
selfë
*functools._lru_cache_wrapper[functools._T]E
functools._T"
builtins.object"builtins.object"builtins.object"functools._lru_cache_wrapper*‡
cache_clear(functools._lru_cache_wrapper.cache_clear"
None*ú
selfë
*functools._lru_cache_wrapper[functools._T]E
functools._T"
builtins.object"builtins.object"builtins.object"functools._lru_cache_wrapper*‰
__copy__%functools._lru_cache_wrapper.__copy__"ë
*functools._lru_cache_wrapper[functools._T]E
functools._T"
builtins.object"builtins.object"builtins.object"functools._lru_cache_wrapper*ú
selfë
*functools._lru_cache_wrapper[functools._T]E
functools._T"
builtins.object"builtins.object"builtins.object"functools._lru_cache_wrapper*˜
__deepcopy__)functools._lru_cache_wrapper.__deepcopy__"ë
*functools._lru_cache_wrapper[functools._T]E
functools._T"
builtins.object"builtins.object"builtins.object"functools._lru_cache_wrapper*ú
selfë
*functools._lru_cache_wrapper[functools._T]E
functools._T"
builtins.object"builtins.object"builtins.object"functools._lru_cache_wrapper*	
Any8PrÑ
__wrapped__(functools._lru_cache_wrapper.__wrapped__K
CallableType[builtins.function]&
builtins.function"builtins.functionÙ
partialfunctools.partial"builtins.object*Å
funcfunctools.partial.func"K
CallableType[builtins.function]&
builtins.function"builtins.function*Ö
self{
functools.partial[functools._T]E
functools._T"
builtins.object"builtins.object"builtins.object"functools.partial0:property`*‰
argsfunctools.partial.args".
builtins.tuple[Any]
Any"builtins.tuple*Ö
self{
functools.partial[functools._T]E
functools._T"
builtins.object"builtins.object"builtins.object"functools.partial0:property`*ï
keywordsfunctools.partial.keywords"W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*Ö
self{
functools.partial[functools._T]E
functools._T"
builtins.object"builtins.object"builtins.object"functools.partial0:property`*®
__new__functools.partial.__new__"™
functools.partial.Self{
functools.partial[functools._T]E
functools._T"
builtins.object"builtins.object"builtins.object"functools.partial"functools.partial*›
cls”
Type[functools.partial.Self]™
functools.partial.Self{
functools.partial[functools._T]E
functools._T"
builtins.object"builtins.object"builtins.object"functools.partial"functools.partial"type*MK
CallableType[builtins.function]&
builtins.function"builtins.function*
args
Any*
kwargs
Any*î
__call__functools.partial.__call__"E
functools._T"
builtins.object"builtins.object"builtins.object*}{
functools.partial[functools._T]E
functools._T"
builtins.object"builtins.object"builtins.object"functools.partial*
args
Any*
kwargs
AnyP∂
partialmethodfunctools.partialmethod"builtins.object*Ï
__get__functools.partialmethod.__get__"K
CallableType[builtins.function]&
builtins.function"builtins.function*í
selfá
%functools.partialmethod[functools._T]E
functools._T"
builtins.object"builtins.object"builtins.object"functools.partialmethod*
obj
Any*L
clsA
Union[Type[Any],None]
	Type[Any]
Any"type
None *á
__isabstractmethod__,functools.partialmethod.__isabstractmethod__"
builtins.bool"builtins.bool*í
selfá
%functools.partialmethod[functools._T]E
functools._T"
builtins.object"builtins.object"builtins.object"functools.partialmethod0:property`2Ω
__init__ functools.partialmethod.__init__“
__init__ functools.partialmethod.__init__"
None*í
selfá
%functools.partialmethod[functools._T]E
functools._T"
builtins.object"builtins.object"builtins.object"functools.partialmethod*MK
CallableType[builtins.function]&
builtins.function"builtins.function*
args
Any*
keywords
Any0:overloadXπ
__init__ functools.partialmethod.__init__"
None*í
selfá
%functools.partialmethod[functools._T]E
functools._T"
builtins.object"builtins.object"builtins.object"functools.partialmethod*42
TypeAlias[Any]
Any"functools._Descriptor*
args
Any*
keywords
Any0:overloadXPr·
funcfunctools.partialmethod.func∫
5Union[CallableType[builtins.function],TypeAlias[Any]]K
CallableType[builtins.function]&
builtins.function"builtins.function2
TypeAlias[Any]
Any"functools._DescriptorrT
argsfunctools.partialmethod.args.
builtins.tuple[Any]
Any"builtins.tuplerÖ
keywords functools.partialmethod.keywordsW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dictÀ
_SingleDispatchCallable!functools._SingleDispatchCallable"builtins.object*æ
dispatch*functools._SingleDispatchCallable.dispatch"K
CallableType[builtins.function]&
builtins.function"builtins.function*¶
selfõ
/functools._SingleDispatchCallable[functools._T]E
functools._T"
builtins.object"builtins.object"builtins.object"!functools._SingleDispatchCallable*
cls
Any*Ò
_clear_cache.functools._SingleDispatchCallable._clear_cache"
None*¶
selfõ
/functools._SingleDispatchCallable[functools._T]E
functools._T"
builtins.object"builtins.object"builtins.object"!functools._SingleDispatchCallable*∆
__call__*functools._SingleDispatchCallable.__call__"E
functools._T"
builtins.object"builtins.object"builtins.object*ûõ
/functools._SingleDispatchCallable[functools._T]E
functools._T"
builtins.object"builtins.object"builtins.object"!functools._SingleDispatchCallable*
args
Any*
kwargs
Any2î

register*functools._SingleDispatchCallable.register˜
register*functools._SingleDispatchCallable.register"K
CallableType[builtins.function]&
builtins.function"builtins.function*¶
selfõ
/functools._SingleDispatchCallable[functools._T]E
functools._T"
builtins.object"builtins.object"builtins.object"!functools._SingleDispatchCallable*%
cls
	Type[Any]
Any"type*
func
None 0:overloadX¶
register*functools._SingleDispatchCallable.register"K
CallableType[builtins.function]&
builtins.function"builtins.function*¶
selfõ
/functools._SingleDispatchCallable[functools._T]E
functools._T"
builtins.object"builtins.object"builtins.object"!functools._SingleDispatchCallable*T
clsK
CallableType[builtins.function]&
builtins.function"builtins.function*
func
None 0:overloadX∏
register*functools._SingleDispatchCallable.register"K
CallableType[builtins.function]&
builtins.function"builtins.function*¶
selfõ
/functools._SingleDispatchCallable[functools._T]E
functools._T"
builtins.object"builtins.object"builtins.object"!functools._SingleDispatchCallable*%
cls
	Type[Any]
Any"type*U
funcK
CallableType[builtins.function]&
builtins.function"builtins.function0:overloadXPr‰
registry*functools._SingleDispatchCallable.registry´
;types.MappingProxyType[Any,CallableType[builtins.function]]
AnyK
CallableType[builtins.function]&
builtins.function"builtins.function"types.MappingProxyTypeá
singledispatchmethodfunctools.singledispatchmethod"builtins.object*∑
__init__'functools.singledispatchmethod.__init__"
None*†
selfï
,functools.singledispatchmethod[functools._T]E
functools._T"
builtins.object"builtins.object"builtins.object"functools.singledispatchmethod*U
funcK
CallableType[builtins.function]&
builtins.function"builtins.function*ú
__isabstractmethod__3functools.singledispatchmethod.__isabstractmethod__"
builtins.bool"builtins.bool*†
selfï
,functools.singledispatchmethod[functools._T]E
functools._T"
builtins.object"builtins.object"builtins.object"functools.singledispatchmethod0:property`*ë
__get__&functools.singledispatchmethod.__get__"K
CallableType[builtins.function]&
builtins.function"builtins.function*†
selfï
,functools.singledispatchmethod[functools._T]E
functools._T"
builtins.object"builtins.object"builtins.object"functools.singledispatchmethod*N
objE
functools._S"
builtins.object"builtins.object"builtins.object*ù
clsë
Union[Type[functools._S],None]c
Type[functools._S]E
functools._S"
builtins.object"builtins.object"builtins.object"type
None 2¸	
register'functools.singledispatchmethod.register
register'functools.singledispatchmethod.register"K
CallableType[builtins.function]&
builtins.function"builtins.function*†
selfï
,functools.singledispatchmethod[functools._T]E
functools._T"
builtins.object"builtins.object"builtins.object"functools.singledispatchmethod*%
cls
	Type[Any]
Any"type*
method
None 0:overloadXü
register'functools.singledispatchmethod.register"K
CallableType[builtins.function]&
builtins.function"builtins.function*†
selfï
,functools.singledispatchmethod[functools._T]E
functools._T"
builtins.object"builtins.object"builtins.object"functools.singledispatchmethod*T
clsK
CallableType[builtins.function]&
builtins.function"builtins.function*
method
None 0:overloadX±
register'functools.singledispatchmethod.register"K
CallableType[builtins.function]&
builtins.function"builtins.function*†
selfï
,functools.singledispatchmethod[functools._T]E
functools._T"
builtins.object"builtins.object"builtins.object"functools.singledispatchmethod*%
cls
	Type[Any]
Any"type*W
methodK
CallableType[builtins.function]&
builtins.function"builtins.function0:overloadXPr’

dispatcher)functools.singledispatchmethod.dispatcherõ
/functools._SingleDispatchCallable[functools._T]E
functools._T"
builtins.object"builtins.object"builtins.object"!functools._SingleDispatchCallablerx
func#functools.singledispatchmethod.funcK
CallableType[builtins.function]&
builtins.function"builtins.functionÚ
cached_propertyfunctools.cached_property"builtins.object*®
__init__"functools.cached_property.__init__"
None*ñ
selfã
'functools.cached_property[functools._T]E
functools._T"
builtins.object"builtins.object"builtins.object"functools.cached_property*U
funcK
CallableType[builtins.function]&
builtins.function"builtins.function*™
__set_name__&functools.cached_property.__set_name__"
None*ñ
selfã
'functools.cached_property[functools._T]E
functools._T"
builtins.object"builtins.object"builtins.object"functools.cached_property*'
owner
	Type[Any]
Any"type*&
name
builtins.str"builtins.str*”
__set__!functools.cached_property.__set__"
None*ñ
selfã
'functools.cached_property[functools._T]E
functools._T"
builtins.object"builtins.object"builtins.object"functools.cached_property*0
instance"
builtins.object"builtins.object*P
valueE
functools._T"
builtins.object"builtins.object"builtins.object2ó
__get__!functools.cached_property.__get__…
__get__!functools.cached_property.__get__"À
functools.cached_property.Selfã
'functools.cached_property[functools._T]E
functools._T"
builtins.object"builtins.object"builtins.object"functools.cached_property"functools.cached_property*÷
selfÀ
functools.cached_property.Selfã
'functools.cached_property[functools._T]E
functools._T"
builtins.object"builtins.object"builtins.object"functools.cached_property"functools.cached_property*
instance
None*N
ownerA
Union[Type[Any],None]
	Type[Any]
Any"type
None 0:overloadXú
__get__!functools.cached_property.__get__"E
functools._T"
builtins.object"builtins.object"builtins.object*ñ
selfã
'functools.cached_property[functools._T]E
functools._T"
builtins.object"builtins.object"builtins.object"functools.cached_property*0
instance"
builtins.object"builtins.object*N
ownerA
Union[Type[Any],None]
	Type[Any]
Any"type
None 0:overloadXPrs
funcfunctools.cached_property.funcK
CallableType[builtins.function]&
builtins.function"builtins.functionrt
attrname"functools.cached_property.attrnameD
Union[builtins.str,None]
builtins.str"builtins.str
None®
update_wrapperfunctools.update_wrapper"E
functools._T"
builtins.object"builtins.object"builtins.object*R
wrapperE
functools._T"
builtins.object"builtins.object"builtins.object*°
wrappedì
*TypeAlias[CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.function"functools._AnyCallable*^
assignedN
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence *]
updatedN
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence µ
wrapsfunctools.wraps"8
_typeshed.IdentityFunction"_typeshed.IdentityFunction*°
wrappedì
*TypeAlias[CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.function"functools._AnyCallable*^
assignedN
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence *]
updatedN
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence ˝
total_orderingfunctools.total_ordering"c
Type[functools._T]E
functools._T"
builtins.object"builtins.object"builtins.object"type*l
clsc
Type[functools._T]E
functools._T"
builtins.object"builtins.object"builtins.object"type«

cmp_to_keyfunctools.cmp_to_key"K
CallableType[builtins.function]&
builtins.function"builtins.function*V
mycmpK
CallableType[builtins.function]&
builtins.function"builtins.functionü
singledispatchfunctools.singledispatch"õ
/functools._SingleDispatchCallable[functools._T]E
functools._T"
builtins.object"builtins.object"builtins.object"!functools._SingleDispatchCallable*U
funcK
CallableType[builtins.function]&
builtins.function"builtins.functionà
	_make_keyfunctools._make_key""
typing.Hashable"typing.Hashable*_
argsU
builtins.tuple[typing.Hashable]"
typing.Hashable"typing.Hashable"builtins.tuple*W
kwdsM
 _typeshed.SupportsItems[Any,Any]
Any
Any"_typeshed.SupportsItems*)
typed
builtins.bool"builtins.bool*e
kwd_markU
builtins.tuple[builtins.object]"
builtins.object"builtins.object"builtins.tuple *\
	fasttypesK
builtins.set[builtins.type]
builtins.type"builtins.type"builtins.set *+
tuple
builtins.type"builtins.type *
type
Any *V
lenK
CallableType[builtins.function]&
builtins.function"builtins.function "ò
reducefunctools.reduce¶
reducefunctools.reduce"E
functools._T"
builtins.object"builtins.object"builtins.object*Y
functionK
CallableType[builtins.function]&
builtins.function"builtins.function*Ö
sequencew
typing.Iterable[functools._S]E
functools._S"
builtins.object"builtins.object"builtins.object"typing.Iterable*R
initialE
functools._T"
builtins.object"builtins.object"builtins.object0:overloadX“
reducefunctools.reduce"E
functools._T"
builtins.object"builtins.object"builtins.object*Y
functionK
CallableType[builtins.function]&
builtins.function"builtins.function*Ö
sequencew
typing.Iterable[functools._T]E
functools._T"
builtins.object"builtins.object"builtins.object"typing.Iterable0:overloadX"Ï
	lru_cachefunctools.lru_cache˝
	lru_cachefunctools.lru_cache"K
CallableType[builtins.function]&
builtins.function"builtins.function*S
maxsizeD
Union[builtins.int,None]
builtins.int"builtins.int
None *+
typed
builtins.bool"builtins.bool 0:overloadX…
	lru_cachefunctools.lru_cache"ë
*functools._lru_cache_wrapper[functools._T]E
functools._T"
builtins.object"builtins.object"builtins.object"functools._lru_cache_wrapper*X
maxsizeK
CallableType[builtins.function]&
builtins.function"builtins.function*+
typed
builtins.bool"builtins.bool 0:overloadX*Ö
__annotations__functools.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*h
__all__functools.__all__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*Ã
WRAPPER_ASSIGNMENTSfunctools.WRAPPER_ASSIGNMENTSï
tTuple[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str*á
WRAPPER_UPDATESfunctools.WRAPPER_UPDATESY
Tuple[Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str