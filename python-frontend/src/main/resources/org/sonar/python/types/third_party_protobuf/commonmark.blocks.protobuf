
commonmark.blocksÅ
Blockcommonmark.blocks.Block"builtins.object*∏
	continue_!commonmark.blocks.Block.continue_"
None*i
parser[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *l
	container[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None 0:staticmethodhz36z37z38z39z310*≤
finalize commonmark.blocks.Block.finalize"
None*i
parser[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *h
block[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None 0:staticmethodhz36z37z38z39z310*s
can_contain#commonmark.blocks.Block.can_contain"
None*
t
Any0:staticmethodhz36z37z38z39z310j36j37j38j39j310rT
accepts_lines%commonmark.blocks.Block.accepts_lines
Any*36*37*38*39*310û
Documentcommonmark.blocks.Document"commonmark.blocks.Block*∫
	continue_$commonmark.blocks.Document.continue_"
Any*i
parser[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *l
	container[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None 0:staticmethodhz36z37z38z39z310*µ
finalize#commonmark.blocks.Document.finalize"
None*i
parser[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *h
block[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None 0:staticmethodhz36z37z38z39z310*c
can_contain&commonmark.blocks.Document.can_contain*
t0:staticmethodhz36z37z38z39z310j36j37j38j39j310rn
accepts_lines(commonmark.blocks.Document.accepts_lines
builtins.bool"builtins.bool*36*37*38*39*310Ü
Listcommonmark.blocks.List"commonmark.blocks.Block*∂
	continue_ commonmark.blocks.List.continue_"
Any*i
parser[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *l
	container[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None 0:staticmethodhz36z37z38z39z310*±
finalizecommonmark.blocks.List.finalize"
None*i
parser[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *h
block[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None 0:staticmethodhz36z37z38z39z310*_
can_contain"commonmark.blocks.List.can_contain*
t0:staticmethodhz36z37z38z39z310j36j37j38j39j310rj
accepts_lines$commonmark.blocks.List.accepts_lines
builtins.bool"builtins.bool*36*37*38*39*310™

BlockQuotecommonmark.blocks.BlockQuote"commonmark.blocks.Block*º
	continue_&commonmark.blocks.BlockQuote.continue_"
Any*i
parser[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *l
	container[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None 0:staticmethodhz36z37z38z39z310*∑
finalize%commonmark.blocks.BlockQuote.finalize"
None*i
parser[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *h
block[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None 0:staticmethodhz36z37z38z39z310*e
can_contain(commonmark.blocks.BlockQuote.can_contain*
t0:staticmethodhz36z37z38z39z310j36j37j38j39j310rp
accepts_lines*commonmark.blocks.BlockQuote.accepts_lines
builtins.bool"builtins.bool*36*37*38*39*310Ü
Itemcommonmark.blocks.Item"commonmark.blocks.Block*∂
	continue_ commonmark.blocks.Item.continue_"
Any*i
parser[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *l
	container[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None 0:staticmethodhz36z37z38z39z310*±
finalizecommonmark.blocks.Item.finalize"
None*i
parser[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *h
block[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None 0:staticmethodhz36z37z38z39z310*_
can_contain"commonmark.blocks.Item.can_contain*
t0:staticmethodhz36z37z38z39z310j36j37j38j39j310rj
accepts_lines$commonmark.blocks.Item.accepts_lines
builtins.bool"builtins.bool*36*37*38*39*310ò
Headingcommonmark.blocks.Heading"commonmark.blocks.Block*π
	continue_#commonmark.blocks.Heading.continue_"
Any*i
parser[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *l
	container[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None 0:staticmethodhz36z37z38z39z310*¥
finalize"commonmark.blocks.Heading.finalize"
None*i
parser[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *h
block[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None 0:staticmethodhz36z37z38z39z310*b
can_contain%commonmark.blocks.Heading.can_contain*
t0:staticmethodhz36z37z38z39z310j36j37j38j39j310rm
accepts_lines'commonmark.blocks.Heading.accepts_lines
builtins.bool"builtins.bool*36*37*38*39*310º
ThematicBreakcommonmark.blocks.ThematicBreak"commonmark.blocks.Block*ø
	continue_)commonmark.blocks.ThematicBreak.continue_"
Any*i
parser[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *l
	container[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None 0:staticmethodhz36z37z38z39z310*∫
finalize(commonmark.blocks.ThematicBreak.finalize"
None*i
parser[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *h
block[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None 0:staticmethodhz36z37z38z39z310*h
can_contain+commonmark.blocks.ThematicBreak.can_contain*
t0:staticmethodhz36z37z38z39z310j36j37j38j39j310rs
accepts_lines-commonmark.blocks.ThematicBreak.accepts_lines
builtins.bool"builtins.bool*36*37*38*39*310§
	CodeBlockcommonmark.blocks.CodeBlock"commonmark.blocks.Block*ª
	continue_%commonmark.blocks.CodeBlock.continue_"
Any*i
parser[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *l
	container[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None 0:staticmethodhz36z37z38z39z310*∂
finalize$commonmark.blocks.CodeBlock.finalize"
None*i
parser[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *h
block[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None 0:staticmethodhz36z37z38z39z310*d
can_contain'commonmark.blocks.CodeBlock.can_contain*
t0:staticmethodhz36z37z38z39z310j36j37j38j39j310ro
accepts_lines)commonmark.blocks.CodeBlock.accepts_lines
builtins.bool"builtins.bool*36*37*38*39*310§
	HtmlBlockcommonmark.blocks.HtmlBlock"commonmark.blocks.Block*ª
	continue_%commonmark.blocks.HtmlBlock.continue_"
Any*i
parser[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *l
	container[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None 0:staticmethodhz36z37z38z39z310*∂
finalize$commonmark.blocks.HtmlBlock.finalize"
None*i
parser[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *h
block[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None 0:staticmethodhz36z37z38z39z310*d
can_contain'commonmark.blocks.HtmlBlock.can_contain*
t0:staticmethodhz36z37z38z39z310j36j37j38j39j310ro
accepts_lines)commonmark.blocks.HtmlBlock.accepts_lines
builtins.bool"builtins.bool*36*37*38*39*310§
	Paragraphcommonmark.blocks.Paragraph"commonmark.blocks.Block*ª
	continue_%commonmark.blocks.Paragraph.continue_"
Any*i
parser[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *l
	container[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None 0:staticmethodhz36z37z38z39z310*∂
finalize$commonmark.blocks.Paragraph.finalize"
None*i
parser[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *h
block[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None 0:staticmethodhz36z37z38z39z310*d
can_contain'commonmark.blocks.Paragraph.can_contain*
t0:staticmethodhz36z37z38z39z310j36j37j38j39j310ro
accepts_lines)commonmark.blocks.Paragraph.accepts_lines
builtins.bool"builtins.bool*36*37*38*39*310¥
BlockStartscommonmark.blocks.BlockStarts"builtins.object*Î
block_quote)commonmark.blocks.BlockStarts.block_quote"
Any*
parser
Any*l
	container[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None 0:staticmethodhz36z37z38z39z310*Î
atx_heading)commonmark.blocks.BlockStarts.atx_heading"
Any*
parser
Any*l
	container[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None 0:staticmethodhz36z37z38z39z310*˜
fenced_code_block/commonmark.blocks.BlockStarts.fenced_code_block"
Any*
parser
Any*l
	container[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None 0:staticmethodhz36z37z38z39z310*È

html_block(commonmark.blocks.BlockStarts.html_block"
Any*
parser
Any*l
	container[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None 0:staticmethodhz36z37z38z39z310*Ò
setext_heading,commonmark.blocks.BlockStarts.setext_heading"
Any*
parser
Any*l
	container[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None 0:staticmethodhz36z37z38z39z310*Ò
thematic_break,commonmark.blocks.BlockStarts.thematic_break"
Any*
parser
Any*l
	container[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None 0:staticmethodhz36z37z38z39z310*Á
	list_item'commonmark.blocks.BlockStarts.list_item"
Any*
parser
Any*l
	container[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None 0:staticmethodhz36z37z38z39z310*˚
indented_code_block1commonmark.blocks.BlockStarts.indented_code_block"
Any*
parser
Any*l
	container[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None 0:staticmethodhz36z37z38z39z310j36j37j38j39j310rN
METHODS%commonmark.blocks.BlockStarts.METHODS
Any*36*37*38*39*310˘
Parsercommonmark.blocks.Parser"builtins.object*§
__init__!commonmark.blocks.Parser.__init__"
None*>
self4
commonmark.blocks.Parser"commonmark.blocks.Parser*
options
Any z36z37z38z39z310*å
add_line!commonmark.blocks.Parser.add_line"
None*>
self4
commonmark.blocks.Parser"commonmark.blocks.Parserz36z37z38z39z310*c
	add_child"commonmark.blocks.Parser.add_child*
self*
tag*

offsetz36z37z38z39z310*®
close_unmatched_blocks/commonmark.blocks.Parser.close_unmatched_blocks"
None*>
self4
commonmark.blocks.Parser"commonmark.blocks.Parserz36z37z38z39z310*†
find_next_nonspace+commonmark.blocks.Parser.find_next_nonspace"
None*>
self4
commonmark.blocks.Parser"commonmark.blocks.Parserz36z37z38z39z310*¶
advance_next_nonspace.commonmark.blocks.Parser.advance_next_nonspace"
None*>
self4
commonmark.blocks.Parser"commonmark.blocks.Parserz36z37z38z39z310*¬
advance_offset'commonmark.blocks.Parser.advance_offset"
None*>
self4
commonmark.blocks.Parser"commonmark.blocks.Parser*
count
Any*
columns
Anyz36z37z38z39z310*≠
incorporate_line)commonmark.blocks.Parser.incorporate_line"
None*>
self4
commonmark.blocks.Parser"commonmark.blocks.Parser*
ln
Anyz36z37z38z39z310*∫
finalize!commonmark.blocks.Parser.finalize"
None*>
self4
commonmark.blocks.Parser"commonmark.blocks.Parser*
block
Any*
line_number
Anyz36z37z38z39z310*Æ
process_inlines(commonmark.blocks.Parser.process_inlines"
None*>
self4
commonmark.blocks.Parser"commonmark.blocks.Parser*
block
Anyz36z37z38z39z310*T
parsecommonmark.blocks.Parser.parse*
self*
my_inputz36z37z38z39z310j36j37j38j39j310rA
doccommonmark.blocks.Parser.doc
Any*36*37*38*39*310rS
block_starts%commonmark.blocks.Parser.block_starts
Any*36*37*38*39*310rA
tipcommonmark.blocks.Parser.tip
Any*36*37*38*39*310rG
oldtipcommonmark.blocks.Parser.oldtip
Any*36*37*38*39*310rh
current_line%commonmark.blocks.Parser.current_line
builtins.str"builtins.str*36*37*38*39*310rf
line_number$commonmark.blocks.Parser.line_number
builtins.int"builtins.int*36*37*38*39*310r\
offsetcommonmark.blocks.Parser.offset
builtins.int"builtins.int*36*37*38*39*310r\
columncommonmark.blocks.Parser.column
builtins.int"builtins.int*36*37*38*39*310rj
next_nonspace&commonmark.blocks.Parser.next_nonspace
builtins.int"builtins.int*36*37*38*39*310rx
next_nonspace_column-commonmark.blocks.Parser.next_nonspace_column
builtins.int"builtins.int*36*37*38*39*310r\
indentcommonmark.blocks.Parser.indent
builtins.int"builtins.int*36*37*38*39*310rb
indented!commonmark.blocks.Parser.indented
builtins.bool"builtins.bool*36*37*38*39*310r\
blankcommonmark.blocks.Parser.blank
builtins.bool"builtins.bool*36*37*38*39*310r~
partially_consumed_tab/commonmark.blocks.Parser.partially_consumed_tab
builtins.bool"builtins.bool*36*37*38*39*310rf

all_closed#commonmark.blocks.Parser.all_closed
builtins.bool"builtins.bool*36*37*38*39*310rg
last_matched_container/commonmark.blocks.Parser.last_matched_container
Any*36*37*38*39*310rG
refmapcommonmark.blocks.Parser.refmap
Any*36*37*38*39*310rp
last_line_length)commonmark.blocks.Parser.last_line_length
builtins.int"builtins.int*36*37*38*39*310rU
inline_parser&commonmark.blocks.Parser.inline_parser
Any*36*37*38*39*310rI
options commonmark.blocks.Parser.options
Any*36*37*38*39*310B
is_blankcommonmark.blocks.is_blank*
sz36z37z38z39z310P
is_space_or_tab!commonmark.blocks.is_space_or_tab*
sz36z37z38z39z310D
peekcommonmark.blocks.peek*
ln*
posz36z37z38z39z310^
ends_with_blank_line&commonmark.blocks.ends_with_blank_line*	
blockz36z37z38z39z310h
parse_list_marker#commonmark.blocks.parse_list_marker*

parser*
	containerz36z37z38z39z310_
lists_matchcommonmark.blocks.lists_match*
	list_data*
	item_dataz36z37z38z39z310*¢
__annotations__!commonmark.blocks.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*36*37*38*39*310*_
CODE_INDENTcommonmark.blocks.CODE_INDENT
builtins.int"builtins.int*36*37*38*39*310*R
reHtmlBlockOpen!commonmark.blocks.reHtmlBlockOpen
Any*36*37*38*39*310*T
reHtmlBlockClose"commonmark.blocks.reHtmlBlockClose
Any*36*37*38*39*310*R
reThematicBreak!commonmark.blocks.reThematicBreak
Any*36*37*38*39*310*P
reMaybeSpecial commonmark.blocks.reMaybeSpecial
Any*36*37*38*39*310*H

reNonSpacecommonmark.blocks.reNonSpace
Any*36*37*38*39*310*X
reBulletListMarker$commonmark.blocks.reBulletListMarker
Any*36*37*38*39*310*Z
reOrderedListMarker%commonmark.blocks.reOrderedListMarker
Any*36*37*38*39*310*X
reATXHeadingMarker$commonmark.blocks.reATXHeadingMarker
Any*36*37*38*39*310*J
reCodeFencecommonmark.blocks.reCodeFence
Any*36*37*38*39*310*X
reClosingCodeFence$commonmark.blocks.reClosingCodeFence
Any*36*37*38*39*310*Z
reSetextHeadingLine%commonmark.blocks.reSetextHeadingLine
Any*36*37*38*39*310*L
reLineEndingcommonmark.blocks.reLineEnding
Any*36*37*38*39*310*D
CAMEL_REcommonmark.blocks.CAMEL_RE
Any*36*37*38*39*310