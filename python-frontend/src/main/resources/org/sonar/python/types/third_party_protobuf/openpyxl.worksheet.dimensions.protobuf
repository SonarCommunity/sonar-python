
openpyxl.worksheet.dimensionsìY
	Dimension'openpyxl.worksheet.dimensions.Dimension"openpyxl.descriptors.Strict")openpyxl.styles.styleable.StyleableObject*ﬂ!
__init__0openpyxl.worksheet.dimensions.Dimension.__init__"
None*\
selfR
'openpyxl.worksheet.dimensions.Dimension"'openpyxl.worksheet.dimensions.Dimension*Á
index€
˘TypeAlias[Union[builtins.int,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]],typing.SupportsInt,typing_extensions.SupportsIndex,_typeshed.SupportsTrunc]]≠	
ÓUnion[builtins.int,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]],typing.SupportsInt,typing_extensions.SupportsIndex,_typeshed.SupportsTrunc]
builtins.int"builtins.int
builtins.str"builtins.strŸ
ÇTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]µ
wUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]] 
builtins.bytes"builtins.bytesï
aTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]í
VUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer(
typing.SupportsInt"typing.SupportsIntB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex2
_typeshed.SupportsTrunc"_typeshed.SupportsTrunc"+openpyxl.descriptors.base._ConvertibleToInt*ù
hiddenê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool*Ö
outlineLevelÚ
ÖUnion[TypeAlias[Union[builtins.int,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]],typing.SupportsInt,typing_extensions.SupportsIndex,_typeshed.SupportsTrunc]],None]€
˘TypeAlias[Union[builtins.int,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]],typing.SupportsInt,typing_extensions.SupportsIndex,_typeshed.SupportsTrunc]]≠	
ÓUnion[builtins.int,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]],typing.SupportsInt,typing_extensions.SupportsIndex,_typeshed.SupportsTrunc]
builtins.int"builtins.int
builtins.str"builtins.strŸ
ÇTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]µ
wUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]] 
builtins.bytes"builtins.bytesï
aTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]í
VUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer(
typing.SupportsInt"typing.SupportsIntB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex2
_typeshed.SupportsTrunc"_typeshed.SupportsTrunc"+openpyxl.descriptors.base._ConvertibleToInt
None*†
	collapsedê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool*_
	worksheetP
&openpyxl.worksheet.worksheet.Worksheet"&openpyxl.worksheet.worksheet.Worksheet*1
visible"
builtins.object"builtins.object *h
style[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None z36z37*«$
__init__0openpyxl.worksheet.dimensions.Dimension.__init__"
None*\
selfR
'openpyxl.worksheet.dimensions.Dimension"'openpyxl.worksheet.dimensions.Dimension*å
indexÄ
çTypeAlias[Union[builtins.int,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],typing.SupportsInt,typing_extensions.SupportsIndex,_typeshed.SupportsTrunc]]æ

ÇUnion[builtins.int,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],typing.SupportsInt,typing_extensions.SupportsIndex,_typeshed.SupportsTrunc]
builtins.int"builtins.int
builtins.str"builtins.str÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer(
typing.SupportsInt"typing.SupportsIntB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex2
_typeshed.SupportsTrunc"_typeshed.SupportsTrunc"+openpyxl.descriptors.base._ConvertibleToInt*ù
hiddenê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool*æ
outlineLevel´
ôUnion[TypeAlias[Union[builtins.int,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],typing.SupportsInt,typing_extensions.SupportsIndex,_typeshed.SupportsTrunc]],None]Ä
çTypeAlias[Union[builtins.int,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],typing.SupportsInt,typing_extensions.SupportsIndex,_typeshed.SupportsTrunc]]æ

ÇUnion[builtins.int,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],typing.SupportsInt,typing_extensions.SupportsIndex,_typeshed.SupportsTrunc]
builtins.int"builtins.int
builtins.str"builtins.str÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer(
typing.SupportsInt"typing.SupportsIntB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex2
_typeshed.SupportsTrunc"_typeshed.SupportsTrunc"+openpyxl.descriptors.base._ConvertibleToInt
None*†
	collapsedê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool*_
	worksheetP
&openpyxl.worksheet.worksheet.Worksheet"&openpyxl.worksheet.worksheet.Worksheet*1
visible"
builtins.object"builtins.object *h
style[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None z38z39z310z311*’
__iter__0openpyxl.worksheet.dimensions.Dimension.__iter__"¶
1typing.Iterator[Tuple[builtins.str,builtins.str]]`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Iterator*TR
'openpyxl.worksheet.dimensions.Dimension"'openpyxl.worksheet.dimensions.Dimensionz36z37z38z39z310z311*¡
__copy__0openpyxl.worksheet.dimensions.Dimension.__copy__"≠
,openpyxl.worksheet.dimensions.Dimension.SelfR
'openpyxl.worksheet.dimensions.Dimension"'openpyxl.worksheet.dimensions.Dimension"'openpyxl.worksheet.dimensions.Dimension*∏
self≠
,openpyxl.worksheet.dimensions.Dimension.SelfR
'openpyxl.worksheet.dimensions.Dimension"'openpyxl.worksheet.dimensions.Dimension"'openpyxl.worksheet.dimensions.Dimensionz36z37z38z39z310z311j36j37j38j39j310j311r®

__fields__2openpyxl.worksheet.dimensions.Dimension.__fields__L
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple*36*37*38*39*310*311rÌ
index-openpyxl.worksheet.dimensions.Dimension.indexö
9openpyxl.descriptors.base.Integer[Literal[builtins.bool]]:
Literal[builtins.bool]	
builtins.bool"builtins.bool"!openpyxl.descriptors.base.Integer*36*37*38*39*310*311rÈ
hidden.openpyxl.worksheet.dimensions.Dimension.hiddenî
6openpyxl.descriptors.base.Bool[Literal[builtins.bool]]:
Literal[builtins.bool]	
builtins.bool"builtins.bool"openpyxl.descriptors.base.Bool*36*37*38*39*310*311r˚
outlineLevel4openpyxl.worksheet.dimensions.Dimension.outlineLevelö
9openpyxl.descriptors.base.Integer[Literal[builtins.bool]]:
Literal[builtins.bool]	
builtins.bool"builtins.bool"!openpyxl.descriptors.base.Integer*36*37*38*39*310*311r§
outline_level5openpyxl.worksheet.dimensions.Dimension.outline_levelB
openpyxl.descriptors.base.Alias"openpyxl.descriptors.base.Alias*36*37*38*39*310*311rÔ
	collapsed1openpyxl.worksheet.dimensions.Dimension.collapsedî
6openpyxl.descriptors.base.Bool[Literal[builtins.bool]]:
Literal[builtins.bool]	
builtins.bool"builtins.bool"openpyxl.descriptors.base.Bool*36*37*38*39*310*311rî
style-openpyxl.worksheet.dimensions.Dimension.styleB
openpyxl.descriptors.base.Alias"openpyxl.descriptors.base.Alias*36*37*38*39*310*311ëÜ
RowDimension*openpyxl.worksheet.dimensions.RowDimension"'openpyxl.worksheet.dimensions.Dimension*Ô9
__init__3openpyxl.worksheet.dimensions.RowDimension.__init__"
None*b
selfX
*openpyxl.worksheet.dimensions.RowDimension"*openpyxl.worksheet.dimensions.RowDimension*_
	worksheetP
&openpyxl.worksheet.worksheet.Worksheet"&openpyxl.worksheet.worksheet.Worksheet*)
index
builtins.int"builtins.int *ó
htå
ÒUnion[TypeAlias[Union[builtins.float,typing.SupportsFloat,typing_extensions.SupportsIndex,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]]],None]â
ÂTypeAlias[Union[builtins.float,typing.SupportsFloat,typing_extensions.SupportsIndex,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]]]Ì
⁄Union[builtins.float,typing.SupportsFloat,typing_extensions.SupportsIndex,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]] 
builtins.float"builtins.float,
typing.SupportsFloat"typing.SupportsFloatB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex
builtins.str"builtins.strŸ
ÇTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]µ
wUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]] 
builtins.bytes"builtins.bytesï
aTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]í
VUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer"-openpyxl.descriptors.base._ConvertibleToFloat
None *6
customHeight"
builtins.object"builtins.object *d
s[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *6
customFormat"
builtins.object"builtins.object *ü
hiddenê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool *á
outlineLevelÚ
ÖUnion[TypeAlias[Union[builtins.int,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]],typing.SupportsInt,typing_extensions.SupportsIndex,_typeshed.SupportsTrunc]],None]€
˘TypeAlias[Union[builtins.int,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]],typing.SupportsInt,typing_extensions.SupportsIndex,_typeshed.SupportsTrunc]]≠	
ÓUnion[builtins.int,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]],typing.SupportsInt,typing_extensions.SupportsIndex,_typeshed.SupportsTrunc]
builtins.int"builtins.int
builtins.str"builtins.strŸ
ÇTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]µ
wUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]] 
builtins.bytes"builtins.bytesï
aTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]í
VUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer(
typing.SupportsInt"typing.SupportsIntB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex2
_typeshed.SupportsTrunc"_typeshed.SupportsTrunc"+openpyxl.descriptors.base._ConvertibleToInt
None *à
outline_levelÚ
ÖUnion[TypeAlias[Union[builtins.int,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]],typing.SupportsInt,typing_extensions.SupportsIndex,_typeshed.SupportsTrunc]],None]€
˘TypeAlias[Union[builtins.int,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]],typing.SupportsInt,typing_extensions.SupportsIndex,_typeshed.SupportsTrunc]]≠	
ÓUnion[builtins.int,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]],typing.SupportsInt,typing_extensions.SupportsIndex,_typeshed.SupportsTrunc]
builtins.int"builtins.int
builtins.str"builtins.strŸ
ÇTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]µ
wUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]] 
builtins.bytes"builtins.bytesï
aTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]í
VUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer(
typing.SupportsInt"typing.SupportsIntB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex2
_typeshed.SupportsTrunc"_typeshed.SupportsTrunc"+openpyxl.descriptors.base._ConvertibleToInt
None *¢
	collapsedê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool *j
visible[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *i
height[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *d
r[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None */
spans"
builtins.object"builtins.object *°
thickBotê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool *°
thickTopê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool **
kw"
builtins.object"builtins.objectz36z37*§>
__init__3openpyxl.worksheet.dimensions.RowDimension.__init__"
None*b
selfX
*openpyxl.worksheet.dimensions.RowDimension"*openpyxl.worksheet.dimensions.RowDimension*_
	worksheetP
&openpyxl.worksheet.worksheet.Worksheet"&openpyxl.worksheet.worksheet.Worksheet*)
index
builtins.int"builtins.int *–
ht≈
ÖUnion[TypeAlias[Union[builtins.float,typing.SupportsFloat,typing_extensions.SupportsIndex,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]]],None]Æ
˘TypeAlias[Union[builtins.float,typing.SupportsFloat,typing_extensions.SupportsIndex,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]]]˛	
ÓUnion[builtins.float,typing.SupportsFloat,typing_extensions.SupportsIndex,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]] 
builtins.float"builtins.float,
typing.SupportsFloat"typing.SupportsFloatB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex
builtins.str"builtins.str÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer"-openpyxl.descriptors.base._ConvertibleToFloat
None *6
customHeight"
builtins.object"builtins.object *d
s[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *6
customFormat"
builtins.object"builtins.object *ü
hiddenê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool *¿
outlineLevel´
ôUnion[TypeAlias[Union[builtins.int,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],typing.SupportsInt,typing_extensions.SupportsIndex,_typeshed.SupportsTrunc]],None]Ä
çTypeAlias[Union[builtins.int,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],typing.SupportsInt,typing_extensions.SupportsIndex,_typeshed.SupportsTrunc]]æ

ÇUnion[builtins.int,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],typing.SupportsInt,typing_extensions.SupportsIndex,_typeshed.SupportsTrunc]
builtins.int"builtins.int
builtins.str"builtins.str÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer(
typing.SupportsInt"typing.SupportsIntB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex2
_typeshed.SupportsTrunc"_typeshed.SupportsTrunc"+openpyxl.descriptors.base._ConvertibleToInt
None *¡
outline_level´
ôUnion[TypeAlias[Union[builtins.int,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],typing.SupportsInt,typing_extensions.SupportsIndex,_typeshed.SupportsTrunc]],None]Ä
çTypeAlias[Union[builtins.int,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],typing.SupportsInt,typing_extensions.SupportsIndex,_typeshed.SupportsTrunc]]æ

ÇUnion[builtins.int,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],typing.SupportsInt,typing_extensions.SupportsIndex,_typeshed.SupportsTrunc]
builtins.int"builtins.int
builtins.str"builtins.str÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer(
typing.SupportsInt"typing.SupportsIntB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex2
_typeshed.SupportsTrunc"_typeshed.SupportsTrunc"+openpyxl.descriptors.base._ConvertibleToInt
None *¢
	collapsedê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool *j
visible[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *i
height[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *d
r[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None */
spans"
builtins.object"builtins.object *°
thickBotê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool *°
thickTopê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool **
kw"
builtins.object"builtins.objectz38z39z310z311*Û
customFormat7openpyxl.worksheet.dimensions.RowDimension.customFormat"
builtins.bool"builtins.bool*b
selfX
*openpyxl.worksheet.dimensions.RowDimension"*openpyxl.worksheet.dimensions.RowDimension0:property`z36z37z38z39z310z311*Û
customHeight7openpyxl.worksheet.dimensions.RowDimension.customHeight"
builtins.bool"builtins.bool*b
selfX
*openpyxl.worksheet.dimensions.RowDimension"*openpyxl.worksheet.dimensions.RowDimension0:property`z36z37z38z39z310z311j36j37j38j39j310j311rè
r,openpyxl.worksheet.dimensions.RowDimension.rB
openpyxl.descriptors.base.Alias"openpyxl.descriptors.base.Alias*36*37*38*39*310*311rè
s,openpyxl.worksheet.dimensions.RowDimension.sB
openpyxl.descriptors.base.Alias"openpyxl.descriptors.base.Alias*36*37*38*39*310*311rÊ
ht-openpyxl.worksheet.dimensions.RowDimension.htñ
7openpyxl.descriptors.base.Float[Literal[builtins.bool]]:
Literal[builtins.bool]	
builtins.bool"builtins.bool"openpyxl.descriptors.base.Float*36*37*38*39*310*311rô
height1openpyxl.worksheet.dimensions.RowDimension.heightB
openpyxl.descriptors.base.Alias"openpyxl.descriptors.base.Alias*36*37*38*39*310*311r
thickBot3openpyxl.worksheet.dimensions.RowDimension.thickBotî
6openpyxl.descriptors.base.Bool[Literal[builtins.bool]]:
Literal[builtins.bool]	
builtins.bool"builtins.bool"openpyxl.descriptors.base.Bool*36*37*38*39*310*311r
thickTop3openpyxl.worksheet.dimensions.RowDimension.thickTopî
6openpyxl.descriptors.base.Bool[Literal[builtins.bool]]:
Literal[builtins.bool]	
builtins.bool"builtins.bool"openpyxl.descriptors.base.Bool*36*37*38*39*310*311¡æ
ColumnDimension-openpyxl.worksheet.dimensions.ColumnDimension"'openpyxl.worksheet.dimensions.Dimension*ﬁQ
__init__6openpyxl.worksheet.dimensions.ColumnDimension.__init__"
None*h
self^
-openpyxl.worksheet.dimensions.ColumnDimension"-openpyxl.worksheet.dimensions.ColumnDimension*_
	worksheetP
&openpyxl.worksheet.worksheet.Worksheet"&openpyxl.worksheet.worksheet.Worksheet*)
index
builtins.str"builtins.str *ó
widthâ
ÂTypeAlias[Union[builtins.float,typing.SupportsFloat,typing_extensions.SupportsIndex,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]]]Ì
⁄Union[builtins.float,typing.SupportsFloat,typing_extensions.SupportsIndex,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]] 
builtins.float"builtins.float,
typing.SupportsFloat"typing.SupportsFloatB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex
builtins.str"builtins.strŸ
ÇTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]µ
wUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]] 
builtins.bytes"builtins.bytesï
aTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]í
VUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer"-openpyxl.descriptors.base._ConvertibleToFloat *†
bestFitê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool *ü
hiddenê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool *á
outlineLevelÚ
ÖUnion[TypeAlias[Union[builtins.int,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]],typing.SupportsInt,typing_extensions.SupportsIndex,_typeshed.SupportsTrunc]],None]€
˘TypeAlias[Union[builtins.int,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]],typing.SupportsInt,typing_extensions.SupportsIndex,_typeshed.SupportsTrunc]]≠	
ÓUnion[builtins.int,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]],typing.SupportsInt,typing_extensions.SupportsIndex,_typeshed.SupportsTrunc]
builtins.int"builtins.int
builtins.str"builtins.strŸ
ÇTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]µ
wUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]] 
builtins.bytes"builtins.bytesï
aTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]í
VUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer(
typing.SupportsInt"typing.SupportsIntB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex2
_typeshed.SupportsTrunc"_typeshed.SupportsTrunc"+openpyxl.descriptors.base._ConvertibleToInt
None *à
outline_levelÚ
ÖUnion[TypeAlias[Union[builtins.int,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]],typing.SupportsInt,typing_extensions.SupportsIndex,_typeshed.SupportsTrunc]],None]€
˘TypeAlias[Union[builtins.int,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]],typing.SupportsInt,typing_extensions.SupportsIndex,_typeshed.SupportsTrunc]]≠	
ÓUnion[builtins.int,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]],typing.SupportsInt,typing_extensions.SupportsIndex,_typeshed.SupportsTrunc]
builtins.int"builtins.int
builtins.str"builtins.strŸ
ÇTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]µ
wUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]] 
builtins.bytes"builtins.bytesï
aTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]í
VUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer(
typing.SupportsInt"typing.SupportsIntB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex2
_typeshed.SupportsTrunc"_typeshed.SupportsTrunc"+openpyxl.descriptors.base._ConvertibleToInt
None *¢
	collapsedê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool *h
style[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *˛
minÚ
ÖUnion[TypeAlias[Union[builtins.int,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]],typing.SupportsInt,typing_extensions.SupportsIndex,_typeshed.SupportsTrunc]],None]€
˘TypeAlias[Union[builtins.int,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]],typing.SupportsInt,typing_extensions.SupportsIndex,_typeshed.SupportsTrunc]]≠	
ÓUnion[builtins.int,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]],typing.SupportsInt,typing_extensions.SupportsIndex,_typeshed.SupportsTrunc]
builtins.int"builtins.int
builtins.str"builtins.strŸ
ÇTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]µ
wUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]] 
builtins.bytes"builtins.bytesï
aTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]í
VUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer(
typing.SupportsInt"typing.SupportsIntB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex2
_typeshed.SupportsTrunc"_typeshed.SupportsTrunc"+openpyxl.descriptors.base._ConvertibleToInt
None *˛
maxÚ
ÖUnion[TypeAlias[Union[builtins.int,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]],typing.SupportsInt,typing_extensions.SupportsIndex,_typeshed.SupportsTrunc]],None]€
˘TypeAlias[Union[builtins.int,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]],typing.SupportsInt,typing_extensions.SupportsIndex,_typeshed.SupportsTrunc]]≠	
ÓUnion[builtins.int,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]],typing.SupportsInt,typing_extensions.SupportsIndex,_typeshed.SupportsTrunc]
builtins.int"builtins.int
builtins.str"builtins.strŸ
ÇTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]µ
wUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]] 
builtins.bytes"builtins.bytesï
aTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]í
VUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer(
typing.SupportsInt"typing.SupportsIntB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex2
_typeshed.SupportsTrunc"_typeshed.SupportsTrunc"+openpyxl.descriptors.base._ConvertibleToInt
None *5
customWidth"
builtins.object"builtins.object *V
visibleG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *˝
	auto_sizeÎ
JUnion[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]ê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool
None z36z37*ÒX
__init__6openpyxl.worksheet.dimensions.ColumnDimension.__init__"
None*h
self^
-openpyxl.worksheet.dimensions.ColumnDimension"-openpyxl.worksheet.dimensions.ColumnDimension*_
	worksheetP
&openpyxl.worksheet.worksheet.Worksheet"&openpyxl.worksheet.worksheet.Worksheet*)
index
builtins.str"builtins.str *º
widthÆ
˘TypeAlias[Union[builtins.float,typing.SupportsFloat,typing_extensions.SupportsIndex,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]]]˛	
ÓUnion[builtins.float,typing.SupportsFloat,typing_extensions.SupportsIndex,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]] 
builtins.float"builtins.float,
typing.SupportsFloat"typing.SupportsFloatB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex
builtins.str"builtins.str÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer"-openpyxl.descriptors.base._ConvertibleToFloat *†
bestFitê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool *ü
hiddenê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool *¿
outlineLevel´
ôUnion[TypeAlias[Union[builtins.int,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],typing.SupportsInt,typing_extensions.SupportsIndex,_typeshed.SupportsTrunc]],None]Ä
çTypeAlias[Union[builtins.int,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],typing.SupportsInt,typing_extensions.SupportsIndex,_typeshed.SupportsTrunc]]æ

ÇUnion[builtins.int,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],typing.SupportsInt,typing_extensions.SupportsIndex,_typeshed.SupportsTrunc]
builtins.int"builtins.int
builtins.str"builtins.str÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer(
typing.SupportsInt"typing.SupportsIntB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex2
_typeshed.SupportsTrunc"_typeshed.SupportsTrunc"+openpyxl.descriptors.base._ConvertibleToInt
None *¡
outline_level´
ôUnion[TypeAlias[Union[builtins.int,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],typing.SupportsInt,typing_extensions.SupportsIndex,_typeshed.SupportsTrunc]],None]Ä
çTypeAlias[Union[builtins.int,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],typing.SupportsInt,typing_extensions.SupportsIndex,_typeshed.SupportsTrunc]]æ

ÇUnion[builtins.int,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],typing.SupportsInt,typing_extensions.SupportsIndex,_typeshed.SupportsTrunc]
builtins.int"builtins.int
builtins.str"builtins.str÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer(
typing.SupportsInt"typing.SupportsIntB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex2
_typeshed.SupportsTrunc"_typeshed.SupportsTrunc"+openpyxl.descriptors.base._ConvertibleToInt
None *¢
	collapsedê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool *h
style[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *∑
min´
ôUnion[TypeAlias[Union[builtins.int,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],typing.SupportsInt,typing_extensions.SupportsIndex,_typeshed.SupportsTrunc]],None]Ä
çTypeAlias[Union[builtins.int,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],typing.SupportsInt,typing_extensions.SupportsIndex,_typeshed.SupportsTrunc]]æ

ÇUnion[builtins.int,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],typing.SupportsInt,typing_extensions.SupportsIndex,_typeshed.SupportsTrunc]
builtins.int"builtins.int
builtins.str"builtins.str÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer(
typing.SupportsInt"typing.SupportsIntB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex2
_typeshed.SupportsTrunc"_typeshed.SupportsTrunc"+openpyxl.descriptors.base._ConvertibleToInt
None *∑
max´
ôUnion[TypeAlias[Union[builtins.int,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],typing.SupportsInt,typing_extensions.SupportsIndex,_typeshed.SupportsTrunc]],None]Ä
çTypeAlias[Union[builtins.int,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],typing.SupportsInt,typing_extensions.SupportsIndex,_typeshed.SupportsTrunc]]æ

ÇUnion[builtins.int,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],typing.SupportsInt,typing_extensions.SupportsIndex,_typeshed.SupportsTrunc]
builtins.int"builtins.int
builtins.str"builtins.str÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer(
typing.SupportsInt"typing.SupportsIntB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex2
_typeshed.SupportsTrunc"_typeshed.SupportsTrunc"+openpyxl.descriptors.base._ConvertibleToInt
None *5
customWidth"
builtins.object"builtins.object *V
visibleG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *˝
	auto_sizeÎ
JUnion[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]ê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool
None z38z39z310z311*˙
customWidth9openpyxl.worksheet.dimensions.ColumnDimension.customWidth"
builtins.bool"builtins.bool*h
self^
-openpyxl.worksheet.dimensions.ColumnDimension"-openpyxl.worksheet.dimensions.ColumnDimension0:property`z36z37z38z39z310z311*Œ
reindex5openpyxl.worksheet.dimensions.ColumnDimension.reindex"
None*h
self^
-openpyxl.worksheet.dimensions.ColumnDimension"-openpyxl.worksheet.dimensions.ColumnDimensionz36z37z38z39z310z311*Ω
to_tree5openpyxl.worksheet.dimensions.ColumnDimension.to_tree"w
)Union[xml.etree.ElementTree.Element,None]>
xml.etree.ElementTree.Element"xml.etree.ElementTree.Element
None*h
self^
-openpyxl.worksheet.dimensions.ColumnDimension"-openpyxl.worksheet.dimensions.ColumnDimensionz36z37z38z39z310z311j36j37j38j39j310j311rÔ
width3openpyxl.worksheet.dimensions.ColumnDimension.widthñ
7openpyxl.descriptors.base.Float[Literal[builtins.bool]]:
Literal[builtins.bool]	
builtins.bool"builtins.bool"openpyxl.descriptors.base.Float*36*37*38*39*310*311rÒ
bestFit5openpyxl.worksheet.dimensions.ColumnDimension.bestFitî
6openpyxl.descriptors.base.Bool[Literal[builtins.bool]]:
Literal[builtins.bool]	
builtins.bool"builtins.bool"openpyxl.descriptors.base.Bool*36*37*38*39*310*311r¢
	auto_size7openpyxl.worksheet.dimensions.ColumnDimension.auto_sizeB
openpyxl.descriptors.base.Alias"openpyxl.descriptors.base.Alias*36*37*38*39*310*311rÒ
index3openpyxl.worksheet.dimensions.ColumnDimension.indexò
8openpyxl.descriptors.base.String[Literal[builtins.bool]]:
Literal[builtins.bool]	
builtins.bool"builtins.bool" openpyxl.descriptors.base.String*36*37*38*39*310*311rÔ
min1openpyxl.worksheet.dimensions.ColumnDimension.minö
9openpyxl.descriptors.base.Integer[Literal[builtins.bool]]:
Literal[builtins.bool]	
builtins.bool"builtins.bool"!openpyxl.descriptors.base.Integer*36*37*38*39*310*311rÔ
max1openpyxl.worksheet.dimensions.ColumnDimension.maxö
9openpyxl.descriptors.base.Integer[Literal[builtins.bool]]:
Literal[builtins.bool]	
builtins.bool"builtins.bool"!openpyxl.descriptors.base.Integer*36*37*38*39*310*311rı
	collapsed7openpyxl.worksheet.dimensions.ColumnDimension.collapsedî
6openpyxl.descriptors.base.Bool[Literal[builtins.bool]]:
Literal[builtins.bool]	
builtins.bool"builtins.bool"openpyxl.descriptors.base.Bool*36*37*38*39*310*311∑
DimensionHolder-openpyxl.worksheet.dimensions.DimensionHolder"/openpyxl.utils.bound_dictionary.BoundDictionary*œ
__init__6openpyxl.worksheet.dimensions.DimensionHolder.__init__"
None*µ
self™
Ropenpyxl.worksheet.dimensions.DimensionHolder[openpyxl.worksheet.dimensions._DimT]§
#openpyxl.worksheet.dimensions._DimTR
'openpyxl.worksheet.dimensions.Dimension"'openpyxl.worksheet.dimensions.Dimension"'openpyxl.worksheet.dimensions.Dimension"-openpyxl.worksheet.dimensions.DimensionHolder*_
	worksheetP
&openpyxl.worksheet.worksheet.Worksheet"&openpyxl.worksheet.worksheet.Worksheet*-
	reference
builtins.str"builtins.str *û
default_factoryÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None z36z37z38z39z310z311*Û
group3openpyxl.worksheet.dimensions.DimensionHolder.group"
None*µ
self™
Ropenpyxl.worksheet.dimensions.DimensionHolder[openpyxl.worksheet.dimensions._DimT]§
#openpyxl.worksheet.dimensions._DimTR
'openpyxl.worksheet.dimensions.Dimension"'openpyxl.worksheet.dimensions.Dimension"'openpyxl.worksheet.dimensions.Dimension"-openpyxl.worksheet.dimensions.DimensionHolder*'
start
builtins.str"builtins.str*O
endD
Union[builtins.str,None]
builtins.str"builtins.str
None *1
outline_level
builtins.int"builtins.int *,
hidden
builtins.bool"builtins.bool z36z37z38z39z310z311*ã
to_tree5openpyxl.worksheet.dimensions.DimensionHolder.to_tree"w
)Union[xml.etree.ElementTree.Element,None]>
xml.etree.ElementTree.Element"xml.etree.ElementTree.Element
None*µ
self™
Ropenpyxl.worksheet.dimensions.DimensionHolder[openpyxl.worksheet.dimensions._DimT]§
#openpyxl.worksheet.dimensions._DimTR
'openpyxl.worksheet.dimensions.Dimension"'openpyxl.worksheet.dimensions.Dimension"'openpyxl.worksheet.dimensions.Dimension"-openpyxl.worksheet.dimensions.DimensionHolderz36z37z38z39z310z311Pj36j37j38j39j310j311r∞
	worksheet7openpyxl.worksheet.dimensions.DimensionHolder.worksheetP
&openpyxl.worksheet.worksheet.Worksheet"&openpyxl.worksheet.worksheet.Worksheet*36*37*38*39*310*311r®
max_outline9openpyxl.worksheet.dimensions.DimensionHolder.max_outlineD
Union[builtins.int,None]
builtins.int"builtins.int
None*36*37*38*39*310*311rÛ
default_factory=openpyxl.worksheet.dimensions.DimensionHolder.default_factoryÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None*36*37*38*39*310*311ˇº
SheetFormatProperties3openpyxl.worksheet.dimensions.SheetFormatProperties".openpyxl.descriptors.serialisable.Serialisable*≈P
__init__<openpyxl.worksheet.dimensions.SheetFormatProperties.__init__"
None*t
selfj
3openpyxl.worksheet.dimensions.SheetFormatProperties"3openpyxl.worksheet.dimensions.SheetFormatProperties*á
baseColWidthÚ
ÖUnion[TypeAlias[Union[builtins.int,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]],typing.SupportsInt,typing_extensions.SupportsIndex,_typeshed.SupportsTrunc]],None]€
˘TypeAlias[Union[builtins.int,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]],typing.SupportsInt,typing_extensions.SupportsIndex,_typeshed.SupportsTrunc]]≠	
ÓUnion[builtins.int,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]],typing.SupportsInt,typing_extensions.SupportsIndex,_typeshed.SupportsTrunc]
builtins.int"builtins.int
builtins.str"builtins.strŸ
ÇTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]µ
wUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]] 
builtins.bytes"builtins.bytesï
aTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]í
VUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer(
typing.SupportsInt"typing.SupportsIntB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex2
_typeshed.SupportsTrunc"_typeshed.SupportsTrunc"+openpyxl.descriptors.base._ConvertibleToInt
None *§
defaultColWidthå
ÒUnion[TypeAlias[Union[builtins.float,typing.SupportsFloat,typing_extensions.SupportsIndex,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]]],None]â
ÂTypeAlias[Union[builtins.float,typing.SupportsFloat,typing_extensions.SupportsIndex,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]]]Ì
⁄Union[builtins.float,typing.SupportsFloat,typing_extensions.SupportsIndex,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]] 
builtins.float"builtins.float,
typing.SupportsFloat"typing.SupportsFloatB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex
builtins.str"builtins.strŸ
ÇTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]µ
wUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]] 
builtins.bytes"builtins.bytesï
aTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]í
VUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer"-openpyxl.descriptors.base._ConvertibleToFloat
None *¢
defaultRowHeightâ
ÂTypeAlias[Union[builtins.float,typing.SupportsFloat,typing_extensions.SupportsIndex,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]]]Ì
⁄Union[builtins.float,typing.SupportsFloat,typing_extensions.SupportsIndex,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]] 
builtins.float"builtins.float,
typing.SupportsFloat"typing.SupportsFloatB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex
builtins.str"builtins.strŸ
ÇTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]µ
wUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]] 
builtins.bytes"builtins.bytesï
aTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]í
VUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer"-openpyxl.descriptors.base._ConvertibleToFloat *Ä
customHeightÎ
JUnion[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]ê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool
None *˛

zeroHeightÎ
JUnion[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]ê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool
None *¸
thickTopÎ
JUnion[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]ê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool
None *ˇ
thickBottomÎ
JUnion[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]ê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool
None *ä
outlineLevelRowÚ
ÖUnion[TypeAlias[Union[builtins.int,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]],typing.SupportsInt,typing_extensions.SupportsIndex,_typeshed.SupportsTrunc]],None]€
˘TypeAlias[Union[builtins.int,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]],typing.SupportsInt,typing_extensions.SupportsIndex,_typeshed.SupportsTrunc]]≠	
ÓUnion[builtins.int,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]],typing.SupportsInt,typing_extensions.SupportsIndex,_typeshed.SupportsTrunc]
builtins.int"builtins.int
builtins.str"builtins.strŸ
ÇTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]µ
wUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]] 
builtins.bytes"builtins.bytesï
aTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]í
VUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer(
typing.SupportsInt"typing.SupportsIntB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex2
_typeshed.SupportsTrunc"_typeshed.SupportsTrunc"+openpyxl.descriptors.base._ConvertibleToInt
None *ä
outlineLevelColÚ
ÖUnion[TypeAlias[Union[builtins.int,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]],typing.SupportsInt,typing_extensions.SupportsIndex,_typeshed.SupportsTrunc]],None]€
˘TypeAlias[Union[builtins.int,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]],typing.SupportsInt,typing_extensions.SupportsIndex,_typeshed.SupportsTrunc]]≠	
ÓUnion[builtins.int,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]],typing.SupportsInt,typing_extensions.SupportsIndex,_typeshed.SupportsTrunc]
builtins.int"builtins.int
builtins.str"builtins.strŸ
ÇTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]µ
wUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]] 
builtins.bytes"builtins.bytesï
aTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]í
VUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer(
typing.SupportsInt"typing.SupportsIntB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex2
_typeshed.SupportsTrunc"_typeshed.SupportsTrunc"+openpyxl.descriptors.base._ConvertibleToInt
None z36z37*ÿW
__init__<openpyxl.worksheet.dimensions.SheetFormatProperties.__init__"
None*t
selfj
3openpyxl.worksheet.dimensions.SheetFormatProperties"3openpyxl.worksheet.dimensions.SheetFormatProperties*¿
baseColWidth´
ôUnion[TypeAlias[Union[builtins.int,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],typing.SupportsInt,typing_extensions.SupportsIndex,_typeshed.SupportsTrunc]],None]Ä
çTypeAlias[Union[builtins.int,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],typing.SupportsInt,typing_extensions.SupportsIndex,_typeshed.SupportsTrunc]]æ

ÇUnion[builtins.int,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],typing.SupportsInt,typing_extensions.SupportsIndex,_typeshed.SupportsTrunc]
builtins.int"builtins.int
builtins.str"builtins.str÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer(
typing.SupportsInt"typing.SupportsIntB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex2
_typeshed.SupportsTrunc"_typeshed.SupportsTrunc"+openpyxl.descriptors.base._ConvertibleToInt
None *›
defaultColWidth≈
ÖUnion[TypeAlias[Union[builtins.float,typing.SupportsFloat,typing_extensions.SupportsIndex,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]]],None]Æ
˘TypeAlias[Union[builtins.float,typing.SupportsFloat,typing_extensions.SupportsIndex,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]]]˛	
ÓUnion[builtins.float,typing.SupportsFloat,typing_extensions.SupportsIndex,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]] 
builtins.float"builtins.float,
typing.SupportsFloat"typing.SupportsFloatB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex
builtins.str"builtins.str÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer"-openpyxl.descriptors.base._ConvertibleToFloat
None *«
defaultRowHeightÆ
˘TypeAlias[Union[builtins.float,typing.SupportsFloat,typing_extensions.SupportsIndex,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]]]˛	
ÓUnion[builtins.float,typing.SupportsFloat,typing_extensions.SupportsIndex,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]] 
builtins.float"builtins.float,
typing.SupportsFloat"typing.SupportsFloatB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex
builtins.str"builtins.str÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer"-openpyxl.descriptors.base._ConvertibleToFloat *Ä
customHeightÎ
JUnion[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]ê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool
None *˛

zeroHeightÎ
JUnion[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]ê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool
None *¸
thickTopÎ
JUnion[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]ê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool
None *ˇ
thickBottomÎ
JUnion[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]ê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool
None *√
outlineLevelRow´
ôUnion[TypeAlias[Union[builtins.int,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],typing.SupportsInt,typing_extensions.SupportsIndex,_typeshed.SupportsTrunc]],None]Ä
çTypeAlias[Union[builtins.int,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],typing.SupportsInt,typing_extensions.SupportsIndex,_typeshed.SupportsTrunc]]æ

ÇUnion[builtins.int,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],typing.SupportsInt,typing_extensions.SupportsIndex,_typeshed.SupportsTrunc]
builtins.int"builtins.int
builtins.str"builtins.str÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer(
typing.SupportsInt"typing.SupportsIntB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex2
_typeshed.SupportsTrunc"_typeshed.SupportsTrunc"+openpyxl.descriptors.base._ConvertibleToInt
None *√
outlineLevelCol´
ôUnion[TypeAlias[Union[builtins.int,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],typing.SupportsInt,typing_extensions.SupportsIndex,_typeshed.SupportsTrunc]],None]Ä
çTypeAlias[Union[builtins.int,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],typing.SupportsInt,typing_extensions.SupportsIndex,_typeshed.SupportsTrunc]]æ

ÇUnion[builtins.int,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],typing.SupportsInt,typing_extensions.SupportsIndex,_typeshed.SupportsTrunc]
builtins.int"builtins.int
builtins.str"builtins.str÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer(
typing.SupportsInt"typing.SupportsIntB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex2
_typeshed.SupportsTrunc"_typeshed.SupportsTrunc"+openpyxl.descriptors.base._ConvertibleToInt
None z38z39z310z311j36j37j38j39j310j311r~
tagname;openpyxl.worksheet.dimensions.SheetFormatProperties.tagname
builtins.str"builtins.str*36*37*38*39*310*311rá
baseColWidth@openpyxl.worksheet.dimensions.SheetFormatProperties.baseColWidthö
9openpyxl.descriptors.base.Integer[Literal[builtins.bool]]:
Literal[builtins.bool]	
builtins.bool"builtins.bool"!openpyxl.descriptors.base.Integer*36*37*38*39*310*311râ
defaultColWidthCopenpyxl.worksheet.dimensions.SheetFormatProperties.defaultColWidthñ
7openpyxl.descriptors.base.Float[Literal[builtins.bool]]:
Literal[builtins.bool]	
builtins.bool"builtins.bool"openpyxl.descriptors.base.Float*36*37*38*39*310*311rã
defaultRowHeightDopenpyxl.worksheet.dimensions.SheetFormatProperties.defaultRowHeightñ
7openpyxl.descriptors.base.Float[Literal[builtins.bool]]:
Literal[builtins.bool]	
builtins.bool"builtins.bool"openpyxl.descriptors.base.Float*36*37*38*39*310*311rÅ
customHeight@openpyxl.worksheet.dimensions.SheetFormatProperties.customHeightî
6openpyxl.descriptors.base.Bool[Literal[builtins.bool]]:
Literal[builtins.bool]	
builtins.bool"builtins.bool"openpyxl.descriptors.base.Bool*36*37*38*39*310*311r˝

zeroHeight>openpyxl.worksheet.dimensions.SheetFormatProperties.zeroHeightî
6openpyxl.descriptors.base.Bool[Literal[builtins.bool]]:
Literal[builtins.bool]	
builtins.bool"builtins.bool"openpyxl.descriptors.base.Bool*36*37*38*39*310*311r˘
thickTop<openpyxl.worksheet.dimensions.SheetFormatProperties.thickTopî
6openpyxl.descriptors.base.Bool[Literal[builtins.bool]]:
Literal[builtins.bool]	
builtins.bool"builtins.bool"openpyxl.descriptors.base.Bool*36*37*38*39*310*311rˇ
thickBottom?openpyxl.worksheet.dimensions.SheetFormatProperties.thickBottomî
6openpyxl.descriptors.base.Bool[Literal[builtins.bool]]:
Literal[builtins.bool]	
builtins.bool"builtins.bool"openpyxl.descriptors.base.Bool*36*37*38*39*310*311rç
outlineLevelRowCopenpyxl.worksheet.dimensions.SheetFormatProperties.outlineLevelRowö
9openpyxl.descriptors.base.Integer[Literal[builtins.bool]]:
Literal[builtins.bool]	
builtins.bool"builtins.bool"!openpyxl.descriptors.base.Integer*36*37*38*39*310*311rç
outlineLevelColCopenpyxl.worksheet.dimensions.SheetFormatProperties.outlineLevelColö
9openpyxl.descriptors.base.Integer[Literal[builtins.bool]]:
Literal[builtins.bool]	
builtins.bool"builtins.bool"!openpyxl.descriptors.base.Integer*36*37*38*39*310*311‡
SheetDimension,openpyxl.worksheet.dimensions.SheetDimension".openpyxl.descriptors.serialisable.Serialisable*Ù
__init__5openpyxl.worksheet.dimensions.SheetDimension.__init__"
None*f
self\
,openpyxl.worksheet.dimensions.SheetDimension",openpyxl.worksheet.dimensions.SheetDimension*%
ref
builtins.str"builtins.strz36z37z38z39z310z311*w

boundaries7openpyxl.worksheet.dimensions.SheetDimension.boundaries*
self0:property`z36z37z38z39z310z311j36j37j38j39j310j311rw
tagname4openpyxl.worksheet.dimensions.SheetDimension.tagname
builtins.str"builtins.str*36*37*38*39*310*311rÏ
ref0openpyxl.worksheet.dimensions.SheetDimension.refò
8openpyxl.descriptors.base.String[Literal[builtins.bool]]:
Literal[builtins.bool]	
builtins.bool"builtins.bool" openpyxl.descriptors.base.String*36*37*38*39*310*311*≥
__annotations__-openpyxl.worksheet.dimensions.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*36*37*38*39*310*311