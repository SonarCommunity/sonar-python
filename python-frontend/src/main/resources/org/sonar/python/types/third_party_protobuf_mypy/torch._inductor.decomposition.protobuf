
torch._inductor.decompositionµ
decomp_grid_sampler_2d-torch._decomp.decompositions._grid_sampler_2d",
torch._tensor.Tensor"torch._tensor.Tensor*3
a,
torch._tensor.Tensor"torch._tensor.Tensor*6
grid,
torch._tensor.Tensor"torch._tensor.Tensor*6
interpolation_mode
builtins.int"builtins.int *0
padding_mode
builtins.int"builtins.int *3
align_corners
builtins.bool"builtins.bool *2
_expand_grid
builtins.bool"builtins.bool W
register_decomposition4torch._inductor.decomposition.register_decomposition*
ops£
get_like_layout-torch._inductor.decomposition.get_like_layout"0
torch._C.memory_format"torch._C.memory_format*8
tensor,
torch._tensor.Tensor"torch._tensor.Tensor*u
memory_formatb
"Union[torch._C.memory_format,None]0
torch._C.memory_format"torch._C.memory_format
NoneH
select_decomp_table1torch._inductor.decomposition.select_decomp_table*™
__annotations__-torch._inductor.decomposition.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*
decomptorch._decomp *
utilstorch._prims_common *J
log!torch._inductor.decomposition.log 
logging.Logger"logging.Logger*3
aten"torch._inductor.decomposition.aten
Any*5
prims#torch._inductor.decomposition.prims
Any*=
	quantized'torch._inductor.decomposition.quantized
Any*S
quantized_decomposed2torch._inductor.decomposition.quantized_decomposed
Any*«
inductor_decompositions5torch._inductor.decomposition.inductor_decompositionsØ
Fbuiltins.dict[torch._ops.OperatorBase,CallableType[builtins.function]]2
torch._ops.OperatorBase"torch._ops.OperatorBaseK
CallableType[builtins.function]&
builtins.function"builtins.function"builtins.dict*™
decompositions,torch._inductor.decomposition.decompositionsØ
Fbuiltins.dict[torch._ops.OperatorBase,CallableType[builtins.function]]2
torch._ops.OperatorBase"torch._ops.OperatorBaseK
CallableType[builtins.function]&
builtins.function"builtins.function"builtins.dict*t
decomps_to_exclude0torch._inductor.decomposition.decomps_to_exclude,
builtins.list[Any]
Any"builtins.list