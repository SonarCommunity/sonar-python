
importlib.abc≤
Loaderimportlib.abc.Loader"builtins.object*…
load_module importlib.abc.Loader.load_module"$
types.ModuleType"types.ModuleType*6
self,
importlib.abc.Loader"importlib.abc.Loader**
fullname
builtins.str"builtins.strz36z37z38z39*«
module_repr importlib.abc.Loader.module_repr"
builtins.str"builtins.str*6
self,
importlib.abc.Loader"importlib.abc.Loader*0
module$
types.ModuleType"types.ModuleTypez36z37z38z39*ï
create_module"importlib.abc.Loader.create_module"P
Union[types.ModuleType,None]$
types.ModuleType"types.ModuleType
None*6
self,
importlib.abc.Loader"importlib.abc.Loader*F
spec<
_frozen_importlib.ModuleSpec"_frozen_importlib.ModuleSpecz36z37z38z39*≥
exec_module importlib.abc.Loader.exec_module"
None*6
self,
importlib.abc.Loader"importlib.abc.Loader*0
module$
types.ModuleType"types.ModuleTypez36z37z38z39@babc.ABCMetaj36j37j38j39X
Finderimportlib.abc.Finder"builtins.object@babc.ABCMetaj36j37j38j39j310j311æ
ResourceLoaderimportlib.abc.ResourceLoader"importlib.abc.Loader*Á
get_data%importlib.abc.ResourceLoader.get_data" 
builtins.bytes"builtins.bytes*F
self<
importlib.abc.ResourceLoader"importlib.abc.ResourceLoader*&
path
builtins.str"builtins.str0:abstractmethod@z36z37z38z39j36j37j38j39«
ResourceLoaderimportlib.abc.ResourceLoader"importlib._abc.Loader*Î
get_data%importlib.abc.ResourceLoader.get_data" 
builtins.bytes"builtins.bytes*F
self<
importlib.abc.ResourceLoader"importlib.abc.ResourceLoader*&
path
builtins.str"builtins.str0:abstractmethod@z310z311z312z313j310j311j312j313∑
InspectLoaderimportlib.abc.InspectLoader"importlib.abc.Loader*÷

is_package&importlib.abc.InspectLoader.is_package"
builtins.bool"builtins.bool*D
self:
importlib.abc.InspectLoader"importlib.abc.InspectLoader**
fullname
builtins.str"builtins.strz36z37z38z39*˛
get_code$importlib.abc.InspectLoader.get_code"J
Union[types.CodeType,None] 
types.CodeType"types.CodeType
None*D
self:
importlib.abc.InspectLoader"importlib.abc.InspectLoader**
fullname
builtins.str"builtins.strz36z37z38z39*ê

get_source&importlib.abc.InspectLoader.get_source"D
Union[builtins.str,None]
builtins.str"builtins.str
None*D
self:
importlib.abc.InspectLoader"importlib.abc.InspectLoader**
fullname
builtins.str"builtins.str0:abstractmethod@z36z37z38z39*»
exec_module'importlib.abc.InspectLoader.exec_module"
None*D
self:
importlib.abc.InspectLoader"importlib.abc.InspectLoader*0
module$
types.ModuleType"types.ModuleTypez36z37z38z39*™
source_to_code*importlib.abc.InspectLoader.source_to_code" 
types.CodeType"types.CodeType*ô
dataé
VUnion[typing_extensions.Buffer,builtins.str,ast.Module,ast.Expression,ast.Interactive]4
typing_extensions.Buffer"typing_extensions.Buffer
builtins.str"builtins.str

ast.Module"
ast.Module 
ast.Expression"ast.Expression"
ast.Interactive"ast.Interactive*ã
path˛
XUnion[typing_extensions.Buffer,TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]]4
typing_extensions.Buffer"typing_extensions.BufferÈ
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPath 0:staticmethodhz36z37z38z39j36j37j38j39Á
InspectLoaderimportlib.abc.InspectLoader"importlib._abc.Loader*⁄

is_package&importlib.abc.InspectLoader.is_package"
builtins.bool"builtins.bool*D
self:
importlib.abc.InspectLoader"importlib.abc.InspectLoader**
fullname
builtins.str"builtins.strz310z311z312z313*Ç
get_code$importlib.abc.InspectLoader.get_code"J
Union[types.CodeType,None] 
types.CodeType"types.CodeType
None*D
self:
importlib.abc.InspectLoader"importlib.abc.InspectLoader**
fullname
builtins.str"builtins.strz310z311z312z313*î

get_source&importlib.abc.InspectLoader.get_source"D
Union[builtins.str,None]
builtins.str"builtins.str
None*D
self:
importlib.abc.InspectLoader"importlib.abc.InspectLoader**
fullname
builtins.str"builtins.str0:abstractmethod@z310z311z312z313*Ã
exec_module'importlib.abc.InspectLoader.exec_module"
None*D
self:
importlib.abc.InspectLoader"importlib.abc.InspectLoader*0
module$
types.ModuleType"types.ModuleTypez310z311z312z313*§
source_to_code*importlib.abc.InspectLoader.source_to_code" 
types.CodeType"types.CodeType*ô
dataé
VUnion[typing_extensions.Buffer,builtins.str,ast.Module,ast.Expression,ast.Interactive]4
typing_extensions.Buffer"typing_extensions.Buffer
builtins.str"builtins.str

ast.Module"
ast.Module 
ast.Expression"ast.Expression"
ast.Interactive"ast.Interactive*ã
path˛
XUnion[typing_extensions.Buffer,TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]]4
typing_extensions.Buffer"typing_extensions.BufferÈ
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPath 0:staticmethodhz310z311*û
source_to_code*importlib.abc.InspectLoader.source_to_code" 
types.CodeType"types.CodeType*ñ
dataã
UUnion[_collections_abc.Buffer,builtins.str,ast.Module,ast.Expression,ast.Interactive]2
_collections_abc.Buffer"_collections_abc.Buffer
builtins.str"builtins.str

ast.Module"
ast.Module 
ast.Expression"ast.Expression"
ast.Interactive"ast.Interactive*à
path˚
WUnion[_collections_abc.Buffer,TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]]2
_collections_abc.Buffer"_collections_abc.BufferÈ
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPath 0:staticmethodhz312z313j310j311j312j313˙
ExecutionLoaderimportlib.abc.ExecutionLoader"importlib.abc.InspectLoader*Ü
get_filename*importlib.abc.ExecutionLoader.get_filename"
builtins.str"builtins.str*H
self>
importlib.abc.ExecutionLoader"importlib.abc.ExecutionLoader**
fullname
builtins.str"builtins.str0:abstractmethod@z36z37z38z39z310z311z312z313j36j37j38j39j310j311j312j313‘	
SourceLoaderimportlib.abc.SourceLoader"'_frozen_importlib_external.SourceLoader"importlib.abc.ResourceLoader"importlib.abc.ExecutionLoader*Â

path_mtime%importlib.abc.SourceLoader.path_mtime" 
builtins.float"builtins.float*B
self8
importlib.abc.SourceLoader"importlib.abc.SourceLoader*&
path
builtins.str"builtins.strz36z37z38z39z310z311z312z313*ı
set_data#importlib.abc.SourceLoader.set_data"
None*B
self8
importlib.abc.SourceLoader"importlib.abc.SourceLoader*&
path
builtins.str"builtins.str**
data 
builtins.bytes"builtins.bytesz36z37z38z39z310z311z312z313*ç

get_source%importlib.abc.SourceLoader.get_source"D
Union[builtins.str,None]
builtins.str"builtins.str
None*B
self8
importlib.abc.SourceLoader"importlib.abc.SourceLoader**
fullname
builtins.str"builtins.strz36z37z38z39z310z311z312z313*û

path_stats%importlib.abc.SourceLoader.path_stats"Y
 typing.Mapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Mapping*B
self8
importlib.abc.SourceLoader"importlib.abc.SourceLoader*&
path
builtins.str"builtins.strz36z37z38z39z310z311z312z313@babc.ABCMetaj36j37j38j39j310j311j312j313¨	
MetaPathFinderimportlib.abc.MetaPathFinder"importlib.abc.Finder*Æ
find_module(importlib.abc.MetaPathFinder.find_module"\
 Union[importlib.abc.Loader,None],
importlib.abc.Loader"importlib.abc.Loader
None*F
self<
importlib.abc.MetaPathFinder"importlib.abc.MetaPathFinder**
fullname
builtins.str"builtins.str*í
pathá
)Union[typing.Sequence[builtins.str],None]N
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence
Nonez36z37z38z39*•
invalidate_caches.importlib.abc.MetaPathFinder.invalidate_caches"
None*F
self<
importlib.abc.MetaPathFinder"importlib.abc.MetaPathFinderz36z37z38z39*¸
	find_spec&importlib.abc.MetaPathFinder.find_spec"t
(Union[_frozen_importlib.ModuleSpec,None]<
_frozen_importlib.ModuleSpec"_frozen_importlib.ModuleSpec
None*><
importlib.abc.MetaPathFinder"importlib.abc.MetaPathFinder*
builtins.str"builtins.str*äá
)Union[typing.Sequence[builtins.str],None]N
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence
None*TP
Union[types.ModuleType,None]$
types.ModuleType"types.ModuleType
None z36z37z38z39j36j37j38j39ø	
MetaPathFinderimportlib.abc.MetaPathFinder"builtins.object*´
find_module(importlib.abc.MetaPathFinder.find_module"_
!Union[importlib._abc.Loader,None].
importlib._abc.Loader"importlib._abc.Loader
None*F
self<
importlib.abc.MetaPathFinder"importlib.abc.MetaPathFinder**
fullname
builtins.str"builtins.str*í
pathá
)Union[typing.Sequence[builtins.str],None]N
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence
Nonez310z311*©
invalidate_caches.importlib.abc.MetaPathFinder.invalidate_caches"
None*F
self<
importlib.abc.MetaPathFinder"importlib.abc.MetaPathFinderz310z311z312z313*Ä
	find_spec&importlib.abc.MetaPathFinder.find_spec"t
(Union[_frozen_importlib.ModuleSpec,None]<
_frozen_importlib.ModuleSpec"_frozen_importlib.ModuleSpec
None*><
importlib.abc.MetaPathFinder"importlib.abc.MetaPathFinder*
builtins.str"builtins.str*äá
)Union[typing.Sequence[builtins.str],None]N
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence
None*TP
Union[types.ModuleType,None]$
types.ModuleType"types.ModuleType
None z310z311z312z313@babc.ABCMetaj310j311j312j313Ó

PathEntryFinderimportlib.abc.PathEntryFinder"importlib.abc.Finder*ú
find_module)importlib.abc.PathEntryFinder.find_module"\
 Union[importlib.abc.Loader,None],
importlib.abc.Loader"importlib.abc.Loader
None*H
self>
importlib.abc.PathEntryFinder"importlib.abc.PathEntryFinder**
fullname
builtins.str"builtins.strz36z37z38z39*∏
find_loader)importlib.abc.PathEntryFinder.find_loader"˜
ETuple[Union[importlib.abc.Loader,None],typing.Sequence[builtins.str]]\
 Union[importlib.abc.Loader,None],
importlib.abc.Loader"importlib.abc.Loader
NoneN
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence*H
self>
importlib.abc.PathEntryFinder"importlib.abc.PathEntryFinder**
fullname
builtins.str"builtins.strz36z37z38z39*®
invalidate_caches/importlib.abc.PathEntryFinder.invalidate_caches"
None*H
self>
importlib.abc.PathEntryFinder"importlib.abc.PathEntryFinderz36z37z38z39*ê
	find_spec'importlib.abc.PathEntryFinder.find_spec"t
(Union[_frozen_importlib.ModuleSpec,None]<
_frozen_importlib.ModuleSpec"_frozen_importlib.ModuleSpec
None*H
self>
importlib.abc.PathEntryFinder"importlib.abc.PathEntryFinder**
fullname
builtins.str"builtins.str*^
targetP
Union[types.ModuleType,None]$
types.ModuleType"types.ModuleType
None z36z37z38z39j36j37j38j39ˇ

PathEntryFinderimportlib.abc.PathEntryFinder"builtins.object*ô
find_module)importlib.abc.PathEntryFinder.find_module"_
!Union[importlib._abc.Loader,None].
importlib._abc.Loader"importlib._abc.Loader
None*H
self>
importlib.abc.PathEntryFinder"importlib.abc.PathEntryFinder**
fullname
builtins.str"builtins.strz310z311*∂
find_loader)importlib.abc.PathEntryFinder.find_loader"˚
FTuple[Union[importlib._abc.Loader,None],typing.Sequence[builtins.str]]_
!Union[importlib._abc.Loader,None].
importlib._abc.Loader"importlib._abc.Loader
NoneN
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence*H
self>
importlib.abc.PathEntryFinder"importlib.abc.PathEntryFinder**
fullname
builtins.str"builtins.strz310z311*¨
invalidate_caches/importlib.abc.PathEntryFinder.invalidate_caches"
None*H
self>
importlib.abc.PathEntryFinder"importlib.abc.PathEntryFinderz310z311z312z313*î
	find_spec'importlib.abc.PathEntryFinder.find_spec"t
(Union[_frozen_importlib.ModuleSpec,None]<
_frozen_importlib.ModuleSpec"_frozen_importlib.ModuleSpec
None*H
self>
importlib.abc.PathEntryFinder"importlib.abc.PathEntryFinder**
fullname
builtins.str"builtins.str*^
targetP
Union[types.ModuleType,None]$
types.ModuleType"types.ModuleType
None z310z311z312z313@babc.ABCMetaj310j311j312j313˝


FileLoaderimportlib.abc.FileLoader"%_frozen_importlib_external.FileLoader"importlib.abc.ResourceLoader"importlib.abc.ExecutionLoader*Ô
__init__!importlib.abc.FileLoader.__init__"
None*>
self4
importlib.abc.FileLoader"importlib.abc.FileLoader**
fullname
builtins.str"builtins.str*&
path
builtins.str"builtins.strz36z37z38z39z310z311z312z313*€
get_data!importlib.abc.FileLoader.get_data" 
builtins.bytes"builtins.bytes*>
self4
importlib.abc.FileLoader"importlib.abc.FileLoader*&
path
builtins.str"builtins.strz36z37z38z39z310z311z312z313*â
get_filename%importlib.abc.FileLoader.get_filename"
builtins.str"builtins.str*>
self4
importlib.abc.FileLoader"importlib.abc.FileLoader*P
nameD
Union[builtins.str,None]
builtins.str"builtins.str
None z36z37z38z39z310z311z312z313*è
load_module$importlib.abc.FileLoader.load_module"$
types.ModuleType"types.ModuleType*>
self4
importlib.abc.FileLoader"importlib.abc.FileLoader*P
nameD
Union[builtins.str,None]
builtins.str"builtins.str
None z36z37z38z39z310z311z312z313@babc.ABCMetaj36j37j38j39j310j311j312j313rg
nameimportlib.abc.FileLoader.name
builtins.str"builtins.str*36*37*38*39*310*311*312*313rg
pathimportlib.abc.FileLoader.path
builtins.str"builtins.str*36*37*38*39*310*311*312*313í
ResourceReaderimportlib.abc.ResourceReader"builtins.object*±
open_resource*importlib.abc.ResourceReader.open_resource"H
typing.IO[builtins.bytes] 
builtins.bytes"builtins.bytes"	typing.IO*F
self<
importlib.abc.ResourceReader"importlib.abc.ResourceReader**
resource
builtins.str"builtins.str0:abstractmethod@z36z37z38z39z310z311z312z313*Ö
resource_path*importlib.abc.ResourceReader.resource_path"
builtins.str"builtins.str*F
self<
importlib.abc.ResourceReader"importlib.abc.ResourceReader**
resource
builtins.str"builtins.str0:abstractmethod@z36z37z38z39z310z311z312z313*Î
is_resource(importlib.abc.ResourceReader.is_resource"
builtins.bool"builtins.bool*F
self<
importlib.abc.ResourceReader"importlib.abc.ResourceReader*&
name
builtins.str"builtins.str0:abstractmethod@z36z37z38z39*Ô
is_resource(importlib.abc.ResourceReader.is_resource"
builtins.bool"builtins.bool*F
self<
importlib.abc.ResourceReader"importlib.abc.ResourceReader*&
path
builtins.str"builtins.str0:abstractmethod@z310z311z312z313*Å
contents%importlib.abc.ResourceReader.contents"N
typing.Iterator[builtins.str]
builtins.str"builtins.str"typing.Iterator*F
self<
importlib.abc.ResourceReader"importlib.abc.ResourceReader0:abstractmethod@z36z37z38z39z310z311z312z313@babc.ABCMetaj36j37j38j39j310j311j312j313Æ
Traversableimportlib.abc.Traversable"builtins.object*∏
is_dir importlib.abc.Traversable.is_dir"
builtins.bool"builtins.bool*@
self6
importlib.abc.Traversable"importlib.abc.Traversable0:abstractmethod@z39z310z311z312z313*∫
is_file!importlib.abc.Traversable.is_file"
builtins.bool"builtins.bool*@
self6
importlib.abc.Traversable"importlib.abc.Traversable0:abstractmethod@z39z310z311z312z313*ë
iterdir!importlib.abc.Traversable.iterdir"u
*typing.Iterator[importlib.abc.Traversable]6
importlib.abc.Traversable"importlib.abc.Traversable"typing.Iterator*@
self6
importlib.abc.Traversable"importlib.abc.Traversable0:abstractmethod@z39z310z311z312z313*›
joinpath"importlib.abc.Traversable.joinpath"6
importlib.abc.Traversable"importlib.abc.Traversable*86
importlib.abc.Traversable"importlib.abc.Traversable*
builtins.str"builtins.str0:abstractmethod@z39z310*˙
joinpath"importlib.abc.Traversable.joinpath"6
importlib.abc.Traversable"importlib.abc.Traversable*@
self6
importlib.abc.Traversable"importlib.abc.Traversable*-
descendants
builtins.str"builtins.str0:abstractmethod@z311z312z313*æ
nameimportlib.abc.Traversable.name"
builtins.str"builtins.str*@
self6
importlib.abc.Traversable"importlib.abc.Traversable0:property:abstractmethod@`z39z310z311z312z313*ﬁ
__truediv__%importlib.abc.Traversable.__truediv__"6
importlib.abc.Traversable"importlib.abc.Traversable*86
importlib.abc.Traversable"importlib.abc.Traversable*
builtins.str"builtins.str0:abstractmethod@z39*⁄
__truediv__%importlib.abc.Traversable.__truediv__"6
importlib.abc.Traversable"importlib.abc.Traversable*86
importlib.abc.Traversable"importlib.abc.Traversable*
builtins.str"builtins.strz310z311z312z313*¬

read_bytes$importlib.abc.Traversable.read_bytes" 
builtins.bytes"builtins.bytes*@
self6
importlib.abc.Traversable"importlib.abc.Traversable0:abstractmethod@z39z310z311z312z313*í
	read_text#importlib.abc.Traversable.read_text"
builtins.str"builtins.str*@
self6
importlib.abc.Traversable"importlib.abc.Traversable*T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None 0:abstractmethod@z39z310z311z312z3132î
openimportlib.abc.Traversable.openª
openimportlib.abc.Traversable.open"B
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IO*@
self6
importlib.abc.Traversable"importlib.abc.Traversable*C
mode7
Literal[builtins.str]	
builtins.str"builtins.str *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None 0:overload:abstractmethod@Xï
openimportlib.abc.Traversable.open"H
typing.IO[builtins.bytes] 
builtins.bytes"builtins.bytes"	typing.IO*@
self6
importlib.abc.Traversable"importlib.abc.Traversable*A
mode7
Literal[builtins.str]	
builtins.str"builtins.str0:overload:abstractmethod@X"39"310"311"312"3138Xj39j310j311j312j313±

TraversableResources"importlib.abc.TraversableResources"importlib.abc.ResourceReader*È
files(importlib.abc.TraversableResources.files"6
importlib.abc.Traversable"importlib.abc.Traversable*R
selfH
"importlib.abc.TraversableResources""importlib.abc.TraversableResources0:abstractmethod@z39z310z311z312z313*É
open_resource0importlib.abc.TraversableResources.open_resource"(
_io.BufferedReader"_io.BufferedReader*R
selfH
"importlib.abc.TraversableResources""importlib.abc.TraversableResources**
resource
builtins.str"builtins.strz39z310z311z312z313*‚
resource_path0importlib.abc.TraversableResources.resource_path"
builtins.str"builtins.str*R
selfH
"importlib.abc.TraversableResources""importlib.abc.TraversableResources*
resource
Anyz39z310z311z312z313*Ò
is_resource.importlib.abc.TraversableResources.is_resource"
builtins.bool"builtins.bool*R
selfH
"importlib.abc.TraversableResources""importlib.abc.TraversableResources*&
path
builtins.str"builtins.strz39z310z311z312z313*Û
contents+importlib.abc.TraversableResources.contents"N
typing.Iterator[builtins.str]
builtins.str"builtins.str"typing.Iterator*R
selfH
"importlib.abc.TraversableResources""importlib.abc.TraversableResourcesz39z310z311z312z313j39j310j311j312j313…
Loaderimportlib._abc.Loader"builtins.object*–
load_module!importlib._abc.Loader.load_module"$
types.ModuleType"types.ModuleType*8
self.
importlib._abc.Loader"importlib._abc.Loader**
fullname
builtins.str"builtins.strz310z311z312z313*ƒ
module_repr!importlib._abc.Loader.module_repr"
builtins.str"builtins.str*8
self.
importlib._abc.Loader"importlib._abc.Loader*0
module$
types.ModuleType"types.ModuleTypez310z311*ú
create_module#importlib._abc.Loader.create_module"P
Union[types.ModuleType,None]$
types.ModuleType"types.ModuleType
None*8
self.
importlib._abc.Loader"importlib._abc.Loader*F
spec<
_frozen_importlib.ModuleSpec"_frozen_importlib.ModuleSpecz310z311z312z313*∫
exec_module!importlib._abc.Loader.exec_module"
None*8
self.
importlib._abc.Loader"importlib._abc.Loader*0
module$
types.ModuleType"types.ModuleTypez310z311z312z313@babc.ABCMetaj310j311j312j313*≠
__annotations__importlib.abc.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*36*37*38*39*310*311*312*313*{
__all__importlib.abc.__all__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*311*312*313