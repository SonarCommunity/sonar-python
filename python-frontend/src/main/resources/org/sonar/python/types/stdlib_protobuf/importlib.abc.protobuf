
importlib.abcW
Finderimportlib.abc.Finder"builtins.object@babc.ABCMetaj35j36j37j38j39j310‰
ResourceLoaderimportlib.abc.ResourceLoader"importlib.abc.Loader*Ñ
get_data%importlib.abc.ResourceLoader.get_data" 
builtins.bytes"builtins.bytes*F
self<
importlib.abc.ResourceLoader"importlib.abc.ResourceLoader*π
pathÆ
-TypeAlias[Union[builtins.bytes,builtins.str]]f
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"importlib.abc._Path0:abstractmethod@z35z36z37z38z39z310j35j36j37j38j39j310…
InspectLoaderimportlib.abc.InspectLoader"importlib.abc.Loader*ﬂ

is_package&importlib.abc.InspectLoader.is_package"
builtins.bool"builtins.bool*D
self:
importlib.abc.InspectLoader"importlib.abc.InspectLoader**
fullname
builtins.str"builtins.strz35z36z37z38z39z310*á
get_code$importlib.abc.InspectLoader.get_code"J
Union[types.CodeType,None] 
types.CodeType"types.CodeType
None*D
self:
importlib.abc.InspectLoader"importlib.abc.InspectLoader**
fullname
builtins.str"builtins.strz35z36z37z38z39z310*Á
load_module'importlib.abc.InspectLoader.load_module"$
types.ModuleType"types.ModuleType*D
self:
importlib.abc.InspectLoader"importlib.abc.InspectLoader**
fullname
builtins.str"builtins.strz35z36z37z38z39z310*ô

get_source&importlib.abc.InspectLoader.get_source"D
Union[builtins.str,None]
builtins.str"builtins.str
None*D
self:
importlib.abc.InspectLoader"importlib.abc.InspectLoader**
fullname
builtins.str"builtins.str0:abstractmethod@z35z36z37z38z39z310*—
exec_module'importlib.abc.InspectLoader.exec_module"
None*D
self:
importlib.abc.InspectLoader"importlib.abc.InspectLoader*0
module$
types.ModuleType"types.ModuleTypez35z36z37z38z39z310*•
source_to_code*importlib.abc.InspectLoader.source_to_code" 
types.CodeType"types.CodeType*p
dataf
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str*(
path
builtins.str"builtins.str 0:staticmethodhz35z36z37z38z39z310j35j36j37j38j39j310á
ExecutionLoaderimportlib.abc.ExecutionLoader"importlib.abc.InspectLoader*é
get_filename*importlib.abc.ExecutionLoader.get_filename"Æ
-TypeAlias[Union[builtins.bytes,builtins.str]]f
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"importlib.abc._Path*H
self>
importlib.abc.ExecutionLoader"importlib.abc.ExecutionLoader**
fullname
builtins.str"builtins.str0:abstractmethod@z35z36z37z38z39z310*ç
get_code&importlib.abc.ExecutionLoader.get_code"J
Union[types.CodeType,None] 
types.CodeType"types.CodeType
None*H
self>
importlib.abc.ExecutionLoader"importlib.abc.ExecutionLoader**
fullname
builtins.str"builtins.strz35z36z37z38z39z310j35j36j37j38j39j310∞
SourceLoaderimportlib.abc.SourceLoader"importlib.abc.ResourceLoader"importlib.abc.ExecutionLoader*Ó

path_mtime%importlib.abc.SourceLoader.path_mtime" 
builtins.float"builtins.float*B
self8
importlib.abc.SourceLoader"importlib.abc.SourceLoader*π
pathÆ
-TypeAlias[Union[builtins.bytes,builtins.str]]f
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"importlib.abc._Pathz35z36z37z38z39z310*˛
set_data#importlib.abc.SourceLoader.set_data"
None*B
self8
importlib.abc.SourceLoader"importlib.abc.SourceLoader*π
pathÆ
-TypeAlias[Union[builtins.bytes,builtins.str]]f
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"importlib.abc._Path**
data 
builtins.bytes"builtins.bytesz35z36z37z38z39z310*Ç

get_source%importlib.abc.SourceLoader.get_source"D
Union[builtins.str,None]
builtins.str"builtins.str
None*B
self8
importlib.abc.SourceLoader"importlib.abc.SourceLoader**
fullname
builtins.str"builtins.strz35z36z37z38z39z310*ß

path_stats%importlib.abc.SourceLoader.path_stats"Y
 typing.Mapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Mapping*B
self8
importlib.abc.SourceLoader"importlib.abc.SourceLoader*π
pathÆ
-TypeAlias[Union[builtins.bytes,builtins.str]]f
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"importlib.abc._Pathz35z36z37z38z39z310@babc.ABCMetaj35j36j37j38j39j310®
MetaPathFinderimportlib.abc.MetaPathFinder"importlib.abc.Finder*ç
find_module(importlib.abc.MetaPathFinder.find_module"\
 Union[importlib.abc.Loader,None],
importlib.abc.Loader"importlib.abc.Loader
None*F
self<
importlib.abc.MetaPathFinder"importlib.abc.MetaPathFinder**
fullname
builtins.str"builtins.str*Ë
path›
JUnion[typing.Sequence[TypeAlias[Union[builtins.bytes,builtins.str]]],None]Ç
>typing.Sequence[TypeAlias[Union[builtins.bytes,builtins.str]]]Æ
-TypeAlias[Union[builtins.bytes,builtins.str]]f
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"importlib.abc._Path"typing.Sequence
Nonez35z36z37z38z39z310*Æ
invalidate_caches.importlib.abc.MetaPathFinder.invalidate_caches"
None*F
self<
importlib.abc.MetaPathFinder"importlib.abc.MetaPathFinderz35z36z37z38z39z310*á
	find_spec&importlib.abc.MetaPathFinder.find_spec"z
*Union[importlib.machinery.ModuleSpec,None]@
importlib.machinery.ModuleSpec"importlib.machinery.ModuleSpec
None*F
self<
importlib.abc.MetaPathFinder"importlib.abc.MetaPathFinder**
fullname
builtins.str"builtins.str*Ë
path›
JUnion[typing.Sequence[TypeAlias[Union[builtins.bytes,builtins.str]]],None]Ç
>typing.Sequence[TypeAlias[Union[builtins.bytes,builtins.str]]]Æ
-TypeAlias[Union[builtins.bytes,builtins.str]]f
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"importlib.abc._Path"typing.Sequence
None*^
targetP
Union[types.ModuleType,None]$
types.ModuleType"types.ModuleType
None z35z36z37z38z39z310j35j36j37j38j39j310˜
PathEntryFinderimportlib.abc.PathEntryFinder"importlib.abc.Finder*•
find_module)importlib.abc.PathEntryFinder.find_module"\
 Union[importlib.abc.Loader,None],
importlib.abc.Loader"importlib.abc.Loader
None*H
self>
importlib.abc.PathEntryFinder"importlib.abc.PathEntryFinder**
fullname
builtins.str"builtins.strz35z36z37z38z39z310*ó
find_loader)importlib.abc.PathEntryFinder.find_loader"Õ
fTuple[Union[importlib.abc.Loader,None],typing.Sequence[TypeAlias[Union[builtins.bytes,builtins.str]]]]\
 Union[importlib.abc.Loader,None],
importlib.abc.Loader"importlib.abc.Loader
NoneÇ
>typing.Sequence[TypeAlias[Union[builtins.bytes,builtins.str]]]Æ
-TypeAlias[Union[builtins.bytes,builtins.str]]f
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"importlib.abc._Path"typing.Sequence*H
self>
importlib.abc.PathEntryFinder"importlib.abc.PathEntryFinder**
fullname
builtins.str"builtins.strz35z36z37z38z39z310*±
invalidate_caches/importlib.abc.PathEntryFinder.invalidate_caches"
None*H
self>
importlib.abc.PathEntryFinder"importlib.abc.PathEntryFinderz35z36z37z38z39z310*ü
	find_spec'importlib.abc.PathEntryFinder.find_spec"z
*Union[importlib.machinery.ModuleSpec,None]@
importlib.machinery.ModuleSpec"importlib.machinery.ModuleSpec
None*H
self>
importlib.abc.PathEntryFinder"importlib.abc.PathEntryFinder**
fullname
builtins.str"builtins.str*^
targetP
Union[types.ModuleType,None]$
types.ModuleType"types.ModuleType
None z35z36z37z38z39z310j35j36j37j38j39j310„
Loaderimportlib.abc.Loader"builtins.object*“
load_module importlib.abc.Loader.load_module"$
types.ModuleType"types.ModuleType*6
self,
importlib.abc.Loader"importlib.abc.Loader**
fullname
builtins.str"builtins.strz35z36z37z38z39z310*–
module_repr importlib.abc.Loader.module_repr"
builtins.str"builtins.str*6
self,
importlib.abc.Loader"importlib.abc.Loader*0
module$
types.ModuleType"types.ModuleTypez35z36z37z38z39z310*¢
create_module"importlib.abc.Loader.create_module"P
Union[types.ModuleType,None]$
types.ModuleType"types.ModuleType
None*6
self,
importlib.abc.Loader"importlib.abc.Loader*J
spec@
importlib.machinery.ModuleSpec"importlib.machinery.ModuleSpecz35z36z37z38z39z310*º
exec_module importlib.abc.Loader.exec_module"
None*6
self,
importlib.abc.Loader"importlib.abc.Loader*0
module$
types.ModuleType"types.ModuleTypez35z36z37z38z39z310@babc.ABCMetaj35j36j37j38j39j310Ã
_LoaderProtocolimportlib.abc._LoaderProtocol"builtins.object*Ì
load_module)importlib.abc._LoaderProtocol.load_module"$
types.ModuleType"types.ModuleType*H
self>
importlib.abc._LoaderProtocol"importlib.abc._LoaderProtocol**
fullname
builtins.str"builtins.strz35z36z37z38z39z310Xj35j36j37j38j39j310ÿ

FileLoaderimportlib.abc.FileLoader"importlib.abc.ResourceLoader"importlib.abc.ExecutionLoader*¯
__init__!importlib.abc.FileLoader.__init__"
None*>
self4
importlib.abc.FileLoader"importlib.abc.FileLoader**
fullname
builtins.str"builtins.str*π
pathÆ
-TypeAlias[Union[builtins.bytes,builtins.str]]f
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"importlib.abc._Pathz35z36z37z38z39z310*‰
get_data!importlib.abc.FileLoader.get_data" 
builtins.bytes"builtins.bytes*>
self4
importlib.abc.FileLoader"importlib.abc.FileLoader*π
pathÆ
-TypeAlias[Union[builtins.bytes,builtins.str]]f
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"importlib.abc._Pathz35z36z37z38z39z310*ë
get_filename%importlib.abc.FileLoader.get_filename"Æ
-TypeAlias[Union[builtins.bytes,builtins.str]]f
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"importlib.abc._Path*>
self4
importlib.abc.FileLoader"importlib.abc.FileLoader*P
nameD
Union[builtins.str,None]
builtins.str"builtins.str
None z35z36z37z38z39z310*Ñ
load_module$importlib.abc.FileLoader.load_module"$
types.ModuleType"types.ModuleType*>
self4
importlib.abc.FileLoader"importlib.abc.FileLoader*P
nameD
Union[builtins.str,None]
builtins.str"builtins.str
None z35z36z37z38z39z310@babc.ABCMetaj35j36j37j38j39j310r\
nameimportlib.abc.FileLoader.name
builtins.str"builtins.str*35*36*37*38*39*310rÔ
pathimportlib.abc.FileLoader.pathÆ
-TypeAlias[Union[builtins.bytes,builtins.str]]f
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"importlib.abc._Path*35*36*37*38*39*310ç
ResourceReaderimportlib.abc.ResourceReader"builtins.object*∫
open_resource*importlib.abc.ResourceReader.open_resource"H
typing.IO[builtins.bytes] 
builtins.bytes"builtins.bytes"	typing.IO*F
self<
importlib.abc.ResourceReader"importlib.abc.ResourceReader*≈
resource∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath0:abstractmethod@z37z38z39z310*é
resource_path*importlib.abc.ResourceReader.resource_path"
builtins.str"builtins.str*F
self<
importlib.abc.ResourceReader"importlib.abc.ResourceReader*≈
resource∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath0:abstractmethod@z37z38z39z310*Ï
is_resource(importlib.abc.ResourceReader.is_resource"
builtins.bool"builtins.bool*F
self<
importlib.abc.ResourceReader"importlib.abc.ResourceReader*&
name
builtins.str"builtins.str0:abstractmethod@z37z38z39z310*Ó
contents%importlib.abc.ResourceReader.contents"N
typing.Iterator[builtins.str]
builtins.str"builtins.str"typing.Iterator*F
self<
importlib.abc.ResourceReader"importlib.abc.ResourceReader0:abstractmethod@z37z38z39z310@babc.ABCMetaj37j38j39j310≠
Traversableimportlib.abc.Traversable"builtins.object*Ç
iterdir!importlib.abc.Traversable.iterdir"u
*typing.Iterator[importlib.abc.Traversable]6
importlib.abc.Traversable"importlib.abc.Traversable"typing.Iterator*@
self6
importlib.abc.Traversable"importlib.abc.Traversable0:abstractmethod@z39z310*≥

read_bytes$importlib.abc.Traversable.read_bytes" 
builtins.bytes"builtins.bytes*@
self6
importlib.abc.Traversable"importlib.abc.Traversable0:abstractmethod@z39z310*É
	read_text#importlib.abc.Traversable.read_text"
builtins.str"builtins.str*@
self6
importlib.abc.Traversable"importlib.abc.Traversable*T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None 0:abstractmethod@z39z310*©
is_dir importlib.abc.Traversable.is_dir"
builtins.bool"builtins.bool*@
self6
importlib.abc.Traversable"importlib.abc.Traversable0:abstractmethod@z39z310*´
is_file!importlib.abc.Traversable.is_file"
builtins.bool"builtins.bool*@
self6
importlib.abc.Traversable"importlib.abc.Traversable0:abstractmethod@z39z310*Ç
joinpath"importlib.abc.Traversable.joinpath"6
importlib.abc.Traversable"importlib.abc.Traversable*@
self6
importlib.abc.Traversable"importlib.abc.Traversable*∫
childÆ
-TypeAlias[Union[builtins.bytes,builtins.str]]f
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"importlib.abc._Path0:abstractmethod@z39z310*Ñ
__truediv__%importlib.abc.Traversable.__truediv__"6
importlib.abc.Traversable"importlib.abc.Traversable*>
self6
importlib.abc.Traversable"importlib.abc.Traversable*∏
childÆ
-TypeAlias[Union[builtins.bytes,builtins.str]]f
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"importlib.abc._Path0:abstractmethod@z39z310*ã
openimportlib.abc.Traversable.open"$
typing.IO[Any]
Any"	typing.IO*@
self6
importlib.abc.Traversable"importlib.abc.Traversable*µ
mode®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str *
args
Any*
kwargs
Any0:abstractmethod@z39z310*Ø
nameimportlib.abc.Traversable.name"
builtins.str"builtins.str*@
self6
importlib.abc.Traversable"importlib.abc.Traversable0:property:abstractmethod@`z39z3108Xj39j310