
"torch.distributed.fsdp._wrap_utils÷

_auto_wrap-torch.distributed.fsdp._wrap_utils._auto_wrap"
Any*Q
root_module@
torch.nn.modules.module.Module"torch.nn.modules.module.Module*ô
policyç
JUnion[CallableType[builtins.function],torch.distributed.fsdp.wrap._Policy]K
CallableType[builtins.function]&
builtins.function"builtins.functionJ
#torch.distributed.fsdp.wrap._Policy"#torch.distributed.fsdp.wrap._Policy*“
ignored_modules~
,builtins.set[torch.nn.modules.module.Module]@
torch.nn.modules.module.Module"torch.nn.modules.module.Module"builtins.set*Œ
ignored_paramsx
*builtins.set[torch.nn.parameter.Parameter]<
torch.nn.parameter.Parameter"torch.nn.parameter.Parameter"builtins.set*h
root_kwargsW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*X
fsdp_fnK
CallableType[builtins.function]&
builtins.function"builtins.function¯
_check_nested_wrapping9torch.distributed.fsdp._wrap_utils._check_nested_wrapping"
Any*Q
root_module@
torch.nn.modules.module.Module"torch.nn.modules.module.ModuleÍ
#_warn_on_overridden_mixed_precisionFtorch.distributed.fsdp._wrap_utils._warn_on_overridden_mixed_precision"
Any*Ô
overridden_module_classes´
2builtins.set[Type[torch.nn.modules.module.Module]]p
$Type[torch.nn.modules.module.Module]@
torch.nn.modules.module.Module"torch.nn.modules.module.Module"type"builtins.set‹
_validate_frozen_params:torch.distributed.fsdp._wrap_utils._validate_frozen_params"
Any*Q
root_module@
torch.nn.modules.module.Module"torch.nn.modules.module.Module*“
modules_to_wrap~
,builtins.set[torch.nn.modules.module.Module]@
torch.nn.modules.module.Module"torch.nn.modules.module.Module"builtins.set*Œ
ignored_paramsx
*builtins.set[torch.nn.parameter.Parameter]<
torch.nn.parameter.Parameter"torch.nn.parameter.Parameter"builtins.set*3
use_orig_params
builtins.bool"builtins.bool¢
_get_post_order_named_modules@torch.distributed.fsdp._wrap_utils._get_post_order_named_modules"ë
Abuiltins.list[Tuple[builtins.str,torch.nn.modules.module.Module]]–
2Tuple[builtins.str,torch.nn.modules.module.Module]
builtins.str"builtins.str@
torch.nn.modules.module.Module"torch.nn.modules.module.Module"builtins.list*Q
root_module@
torch.nn.modules.module.Module"torch.nn.modules.module.Module«
_get_managed_param_to_fqn<torch.distributed.fsdp._wrap_utils._get_managed_param_to_fqn"¥
8builtins.dict[torch.nn.parameter.Parameter,builtins.str]<
torch.nn.parameter.Parameter"torch.nn.parameter.Parameter
builtins.str"builtins.str"builtins.dict*T
module_to_wrap@
torch.nn.modules.module.Module"torch.nn.modules.module.Module*Œ
ignored_paramsx
*builtins.set[torch.nn.parameter.Parameter]<
torch.nn.parameter.Parameter"torch.nn.parameter.Parameter"builtins.set*“
visited_modules~
,builtins.set[torch.nn.modules.module.Module]@
torch.nn.modules.module.Module"torch.nn.modules.module.Module"builtins.set*-
root_prefix
builtins.str"builtins.str*ž
__annotations__2torch.distributed.fsdp._wrap_utils.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*
nntorch.nn 