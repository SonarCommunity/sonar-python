
werkzeug.sansio.utilsÊ
host_is_trusted%werkzeug.sansio.utils.host_is_trusted"
builtins.bool"builtins.bool**
hostname
builtins.str"builtins.str*`
trusted_listN
typing.Iterable[builtins.str]
builtins.str"builtins.str"typing.Iterableÿ
get_hostwerkzeug.sansio.utils.get_host"
builtins.str"builtins.str*(
scheme
builtins.str"builtins.str*U
host_headerD
Union[builtins.str,None]
builtins.str"builtins.str
None*Ï
server›
8Union[Tuple[builtins.str,Union[builtins.int,None]],None]î
,Tuple[builtins.str,Union[builtins.int,None]]
builtins.str"builtins.strD
Union[builtins.int,None]
builtins.int"builtins.int
None
None *ù
trusted_hostsá
)Union[typing.Iterable[builtins.str],None]N
typing.Iterable[builtins.str]
builtins.str"builtins.str"typing.Iterable
None ±
get_current_url%werkzeug.sansio.utils.get_current_url"
builtins.str"builtins.str*(
scheme
builtins.str"builtins.str*&
host
builtins.str"builtins.str*U
	root_pathD
Union[builtins.str,None]
builtins.str"builtins.str
None *P
pathD
Union[builtins.str,None]
builtins.str"builtins.str
None *^
query_stringJ
Union[builtins.bytes,None] 
builtins.bytes"builtins.bytes
None …
get_content_length(werkzeug.sansio.utils.get_content_length"D
Union[builtins.int,None]
builtins.int"builtins.int
None*_
http_content_lengthD
Union[builtins.str,None]
builtins.str"builtins.str
None *b
http_transfer_encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *ë
__annotations__%werkzeug.sansio.utils.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*
ttyping 