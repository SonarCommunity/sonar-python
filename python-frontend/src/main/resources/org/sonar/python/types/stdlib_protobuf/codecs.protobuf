
codecsé
_Encodercodecs._Encoder"builtins.object*ï
__call__codecs._Encoder.__call__"`
 Tuple[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int*,
self"
codecs._Encoder"codecs._Encoder*/
input$
builtins.unicode"builtins.unicode**
errors
builtins.str"builtins.str z27*®
__call__codecs._Encoder.__call__"f
"Tuple[builtins.bytes,builtins.int] 
builtins.bytes"builtins.bytes
builtins.int"builtins.int*,
self"
codecs._Encoder"codecs._Encoder*'
input
builtins.str"builtins.str**
errors
builtins.str"builtins.str z35z36z37z38z39z310Xj27j35j36j37j38j39j310ê
_Decodercodecs._Decoder"builtins.object*ô
__call__codecs._Decoder.__call__"l
$Tuple[builtins.unicode,builtins.int]$
builtins.unicode"builtins.unicode
builtins.int"builtins.int*,
self"
codecs._Decoder"codecs._Decoder*'
input
builtins.str"builtins.str**
errors
builtins.str"builtins.str z27*¶
__call__codecs._Decoder.__call__"`
 Tuple[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int*,
self"
codecs._Decoder"codecs._Decoder*+
input 
builtins.bytes"builtins.bytes**
errors
builtins.str"builtins.str z35z36z37z38z39z310Xj27j35j36j37j38j39j310ê
_StreamReadercodecs._StreamReader"builtins.object*ç
__call__codecs._StreamReader.__call__"*
codecs.StreamReader"codecs.StreamReader*6
self,
codecs._StreamReader"codecs._StreamReader*N
streamB
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IO**
errors
builtins.str"builtins.str z27*®
__call__codecs._StreamReader.__call__"*
codecs.StreamReader"codecs.StreamReader*6
self,
codecs._StreamReader"codecs._StreamReader*T
streamH
typing.IO[builtins.bytes] 
builtins.bytes"builtins.bytes"	typing.IO**
errors
builtins.str"builtins.str z35z36z37z38z39z310Xj27j35j36j37j38j39j310ê
_StreamWritercodecs._StreamWriter"builtins.object*ç
__call__codecs._StreamWriter.__call__"*
codecs.StreamWriter"codecs.StreamWriter*6
self,
codecs._StreamWriter"codecs._StreamWriter*N
streamB
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IO**
errors
builtins.str"builtins.str z27*®
__call__codecs._StreamWriter.__call__"*
codecs.StreamWriter"codecs.StreamWriter*6
self,
codecs._StreamWriter"codecs._StreamWriter*T
streamH
typing.IO[builtins.bytes] 
builtins.bytes"builtins.bytes"	typing.IO**
errors
builtins.str"builtins.str z35z36z37z38z39z310Xj27j35j36j37j38j39j310ÿ
_IncrementalEncodercodecs._IncrementalEncoder"builtins.object*Ù
__call__#codecs._IncrementalEncoder.__call__"6
codecs.IncrementalEncoder"codecs.IncrementalEncoder*B
self8
codecs._IncrementalEncoder"codecs._IncrementalEncoder**
errors
builtins.str"builtins.str z27z35z36z37z38z39z310Xj27j35j36j37j38j39j310ÿ
_IncrementalDecodercodecs._IncrementalDecoder"builtins.object*Ù
__call__#codecs._IncrementalDecoder.__call__"6
codecs.IncrementalDecoder"codecs.IncrementalDecoder*B
self8
codecs._IncrementalDecoder"codecs._IncrementalDecoder**
errors
builtins.str"builtins.str z27z35z36z37z38z39z310Xj27j35j36j37j38j39j310∞
	CodecInfocodecs.CodecInfo"builtins.tuple*ˆ
encodecodecs.CodecInfo.encode""
codecs._Encoder"codecs._Encoder*É
self¯
PTuple[codecs._Encoder,codecs._Decoder,codecs._StreamReader,codecs._StreamWriter]"
codecs._Encoder"codecs._Encoder"
codecs._Decoder"codecs._Decoder,
codecs._StreamReader"codecs._StreamReader,
codecs._StreamWriter"codecs._StreamWriter0:property`z27z35z36z37z38z39z310*ˆ
decodecodecs.CodecInfo.decode""
codecs._Decoder"codecs._Decoder*É
self¯
PTuple[codecs._Encoder,codecs._Decoder,codecs._StreamReader,codecs._StreamWriter]"
codecs._Encoder"codecs._Encoder"
codecs._Decoder"codecs._Decoder,
codecs._StreamReader"codecs._StreamReader,
codecs._StreamWriter"codecs._StreamWriter0:property`z27z35z36z37z38z39z310*å
streamreadercodecs.CodecInfo.streamreader",
codecs._StreamReader"codecs._StreamReader*É
self¯
PTuple[codecs._Encoder,codecs._Decoder,codecs._StreamReader,codecs._StreamWriter]"
codecs._Encoder"codecs._Encoder"
codecs._Decoder"codecs._Decoder,
codecs._StreamReader"codecs._StreamReader,
codecs._StreamWriter"codecs._StreamWriter0:property`z27z35z36z37z38z39z310*å
streamwritercodecs.CodecInfo.streamwriter",
codecs._StreamWriter"codecs._StreamWriter*É
self¯
PTuple[codecs._Encoder,codecs._Decoder,codecs._StreamReader,codecs._StreamWriter]"
codecs._Encoder"codecs._Encoder"
codecs._Decoder"codecs._Decoder,
codecs._StreamReader"codecs._StreamReader,
codecs._StreamWriter"codecs._StreamWriter0:property`z27z35z36z37z38z39z310*§
incrementalencoder#codecs.CodecInfo.incrementalencoder"8
codecs._IncrementalEncoder"codecs._IncrementalEncoder*É
self¯
PTuple[codecs._Encoder,codecs._Decoder,codecs._StreamReader,codecs._StreamWriter]"
codecs._Encoder"codecs._Encoder"
codecs._Decoder"codecs._Decoder,
codecs._StreamReader"codecs._StreamReader,
codecs._StreamWriter"codecs._StreamWriter0:property`z27z35z36z37z38z39z310*§
incrementaldecoder#codecs.CodecInfo.incrementaldecoder"8
codecs._IncrementalDecoder"codecs._IncrementalDecoder*É
self¯
PTuple[codecs._Encoder,codecs._Decoder,codecs._StreamReader,codecs._StreamWriter]"
codecs._Encoder"codecs._Encoder"
codecs._Decoder"codecs._Decoder,
codecs._StreamReader"codecs._StreamReader,
codecs._StreamWriter"codecs._StreamWriter0:property`z27z35z36z37z38z39z310*´
__new__codecs.CodecInfo.__new__"¯
PTuple[codecs._Encoder,codecs._Decoder,codecs._StreamReader,codecs._StreamWriter]"
codecs._Encoder"codecs._Encoder"
codecs._Decoder"codecs._Decoder,
codecs._StreamReader"codecs._StreamReader,
codecs._StreamWriter"codecs._StreamWriter*ﬂ
cls’
VType[Tuple[codecs._Encoder,codecs._Decoder,codecs._StreamReader,codecs._StreamWriter]]¯
PTuple[codecs._Encoder,codecs._Decoder,codecs._StreamReader,codecs._StreamWriter]"
codecs._Encoder"codecs._Encoder"
codecs._Decoder"codecs._Decoder,
codecs._StreamReader"codecs._StreamReader,
codecs._StreamWriter"codecs._StreamWriter*.
encode"
codecs._Encoder"codecs._Encoder*.
decode"
codecs._Decoder"codecs._Decoder*p
streamreader\
 Union[codecs._StreamReader,None],
codecs._StreamReader"codecs._StreamReader
None *p
streamwriter\
 Union[codecs._StreamWriter,None],
codecs._StreamWriter"codecs._StreamWriter
None *à
incrementalencodern
&Union[codecs._IncrementalEncoder,None]8
codecs._IncrementalEncoder"codecs._IncrementalEncoder
None *à
incrementaldecodern
&Union[codecs._IncrementalDecoder,None]8
codecs._IncrementalDecoder"codecs._IncrementalDecoder
None *P
nameD
Union[builtins.str,None]
builtins.str"builtins.str
None *`
_is_text_encodingG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None z27z35z36z37z38z39z310j27j35j36j37j38j39j310rX
namecodecs.CodecInfo.name
builtins.str"builtins.str*27*35*36*37*38*39*310ó	
Codeccodecs.Codec"builtins.object*à
encodecodecs.Codec.encode"`
 Tuple[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int*&
self
codecs.Codec"codecs.Codec*/
input$
builtins.unicode"builtins.unicode**
errors
builtins.str"builtins.str z27*õ
encodecodecs.Codec.encode"f
"Tuple[builtins.bytes,builtins.int] 
builtins.bytes"builtins.bytes
builtins.int"builtins.int*&
self
codecs.Codec"codecs.Codec*'
input
builtins.str"builtins.str**
errors
builtins.str"builtins.str z35z36z37z38z39z310*å
decodecodecs.Codec.decode"l
$Tuple[builtins.unicode,builtins.int]$
builtins.unicode"builtins.unicode
builtins.int"builtins.int*&
self
codecs.Codec"codecs.Codec*'
input
builtins.str"builtins.str**
errors
builtins.str"builtins.str z27*ô
decodecodecs.Codec.decode"`
 Tuple[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int*&
self
codecs.Codec"codecs.Codec*+
input 
builtins.bytes"builtins.bytes**
errors
builtins.str"builtins.str z35z36z37z38z39z310j27j35j36j37j38j39j310Ö
IncrementalEncodercodecs.IncrementalEncoder"builtins.object*√
__init__"codecs.IncrementalEncoder.__init__"
None*@
self6
codecs.IncrementalEncoder"codecs.IncrementalEncoder**
errors
builtins.str"builtins.str z27z35z36z37z38z39z310*Ä
encode codecs.IncrementalEncoder.encode"
builtins.str"builtins.str*@
self6
codecs.IncrementalEncoder"codecs.IncrementalEncoder*/
input$
builtins.unicode"builtins.unicode*+
final
builtins.bool"builtins.bool 0:abstractmethod@z27*ë
encode codecs.IncrementalEncoder.encode" 
builtins.bytes"builtins.bytes*@
self6
codecs.IncrementalEncoder"codecs.IncrementalEncoder*'
input
builtins.str"builtins.str*+
final
builtins.bool"builtins.bool 0:abstractmethod@z35z36z37z38z39z310*ë
resetcodecs.IncrementalEncoder.reset"
None*@
self6
codecs.IncrementalEncoder"codecs.IncrementalEncoderz27z35z36z37z38z39z310*‚
getstate"codecs.IncrementalEncoder.getstate"l
$Union[builtins.int,builtins.unicode]
builtins.int"builtins.int$
builtins.unicode"builtins.unicode*@
self6
codecs.IncrementalEncoder"codecs.IncrementalEncoderz27*Î
getstate"codecs.IncrementalEncoder.getstate"`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str*@
self6
codecs.IncrementalEncoder"codecs.IncrementalEncoderz35z36z37z38z39z310*˜
setstate"codecs.IncrementalEncoder.setstate"
None*@
self6
codecs.IncrementalEncoder"codecs.IncrementalEncoder*w
statel
$Union[builtins.int,builtins.unicode]
builtins.int"builtins.int$
builtins.unicode"builtins.unicodez27*Ä
setstate"codecs.IncrementalEncoder.setstate"
None*@
self6
codecs.IncrementalEncoder"codecs.IncrementalEncoder*k
state`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.strz35z36z37z38z39z310j27j35j36j37j38j39j310re
errors codecs.IncrementalEncoder.errors
builtins.str"builtins.str*27*35*36*37*38*39*310˘
IncrementalDecodercodecs.IncrementalDecoder"builtins.object*√
__init__"codecs.IncrementalDecoder.__init__"
None*@
self6
codecs.IncrementalDecoder"codecs.IncrementalDecoder**
errors
builtins.str"builtins.str z27z35z36z37z38z39z310*Ä
decode codecs.IncrementalDecoder.decode"$
builtins.unicode"builtins.unicode*@
self6
codecs.IncrementalDecoder"codecs.IncrementalDecoder*'
input
builtins.str"builtins.str*+
final
builtins.bool"builtins.bool 0:abstractmethod@z27*ë
decode codecs.IncrementalDecoder.decode"
builtins.str"builtins.str*@
self6
codecs.IncrementalDecoder"codecs.IncrementalDecoder*+
input 
builtins.bytes"builtins.bytes*+
final
builtins.bool"builtins.bool 0:abstractmethod@z35z36z37z38z39z310*ë
resetcodecs.IncrementalDecoder.reset"
None*@
self6
codecs.IncrementalDecoder"codecs.IncrementalDecoderz27z35z36z37z38z39z310*÷
getstate"codecs.IncrementalDecoder.getstate"`
 Tuple[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int*@
self6
codecs.IncrementalDecoder"codecs.IncrementalDecoderz27*Ò
getstate"codecs.IncrementalDecoder.getstate"f
"Tuple[builtins.bytes,builtins.int] 
builtins.bytes"builtins.bytes
builtins.int"builtins.int*@
self6
codecs.IncrementalDecoder"codecs.IncrementalDecoderz35z36z37z38z39z310*Î
setstate"codecs.IncrementalDecoder.setstate"
None*@
self6
codecs.IncrementalDecoder"codecs.IncrementalDecoder*k
state`
 Tuple[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.intz27*Ü
setstate"codecs.IncrementalDecoder.setstate"
None*@
self6
codecs.IncrementalDecoder"codecs.IncrementalDecoder*q
statef
"Tuple[builtins.bytes,builtins.int] 
builtins.bytes"builtins.bytes
builtins.int"builtins.intz35z36z37z38z39z310j27j35j36j37j38j39j310re
errors codecs.IncrementalDecoder.errors
builtins.str"builtins.str*27*35*36*37*38*39*310ö
BufferedIncrementalEncoder!codecs.BufferedIncrementalEncoder"codecs.IncrementalEncoder*€
__init__*codecs.BufferedIncrementalEncoder.__init__"
None*P
selfF
!codecs.BufferedIncrementalEncoder"!codecs.BufferedIncrementalEncoder**
errors
builtins.str"builtins.str z27z35z36z37z38z39z310*–
_buffer_encode0codecs.BufferedIncrementalEncoder._buffer_encode"
builtins.str"builtins.str*P
selfF
!codecs.BufferedIncrementalEncoder"!codecs.BufferedIncrementalEncoder*/
input$
builtins.unicode"builtins.unicode*(
errors
builtins.str"builtins.str*)
final
builtins.bool"builtins.bool0:abstractmethod@z27*·
_buffer_encode0codecs.BufferedIncrementalEncoder._buffer_encode" 
builtins.bytes"builtins.bytes*P
selfF
!codecs.BufferedIncrementalEncoder"!codecs.BufferedIncrementalEncoder*'
input
builtins.str"builtins.str*(
errors
builtins.str"builtins.str*)
final
builtins.bool"builtins.bool0:abstractmethod@z35z36z37z38z39z310*Ñ
encode(codecs.BufferedIncrementalEncoder.encode"
builtins.str"builtins.str*P
selfF
!codecs.BufferedIncrementalEncoder"!codecs.BufferedIncrementalEncoder*/
input$
builtins.unicode"builtins.unicode*+
final
builtins.bool"builtins.bool z27*ï
encode(codecs.BufferedIncrementalEncoder.encode" 
builtins.bytes"builtins.bytes*P
selfF
!codecs.BufferedIncrementalEncoder"!codecs.BufferedIncrementalEncoder*'
input
builtins.str"builtins.str*+
final
builtins.bool"builtins.bool z35z36z37z38z39z310j27j35j36j37j38j39j310rm
buffer(codecs.BufferedIncrementalEncoder.buffer
builtins.str"builtins.str*27*35*36*37*38*39*310¸
BufferedIncrementalDecoder!codecs.BufferedIncrementalDecoder"codecs.IncrementalDecoder*€
__init__*codecs.BufferedIncrementalDecoder.__init__"
None*P
selfF
!codecs.BufferedIncrementalDecoder"!codecs.BufferedIncrementalDecoder**
errors
builtins.str"builtins.str z27z35z36z37z38z39z310*ò
_buffer_decode0codecs.BufferedIncrementalDecoder._buffer_decode"l
$Tuple[builtins.unicode,builtins.int]$
builtins.unicode"builtins.unicode
builtins.int"builtins.int*P
selfF
!codecs.BufferedIncrementalDecoder"!codecs.BufferedIncrementalDecoder*'
input
builtins.str"builtins.str*(
errors
builtins.str"builtins.str*)
final
builtins.bool"builtins.bool0:abstractmethod@z27*•
_buffer_decode0codecs.BufferedIncrementalDecoder._buffer_decode"`
 Tuple[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int*P
selfF
!codecs.BufferedIncrementalDecoder"!codecs.BufferedIncrementalDecoder*+
input 
builtins.bytes"builtins.bytes*(
errors
builtins.str"builtins.str*)
final
builtins.bool"builtins.bool0:abstractmethod@z35z36z37z38z39z310*Ñ
decode(codecs.BufferedIncrementalDecoder.decode"$
builtins.unicode"builtins.unicode*P
selfF
!codecs.BufferedIncrementalDecoder"!codecs.BufferedIncrementalDecoder*'
input
builtins.str"builtins.str*+
final
builtins.bool"builtins.bool z27*ï
decode(codecs.BufferedIncrementalDecoder.decode"
builtins.str"builtins.str*P
selfF
!codecs.BufferedIncrementalDecoder"!codecs.BufferedIncrementalDecoder*+
input 
builtins.bytes"builtins.bytes*+
final
builtins.bool"builtins.bool z35z36z37z38z39z310j27j35j36j37j38j39j310rT
buffer(codecs.BufferedIncrementalDecoder.buffer
builtins.str"builtins.str*27rm
buffer(codecs.BufferedIncrementalDecoder.buffer 
builtins.bytes"builtins.bytes*35*36*37*38*39*310ﬁ
StreamWritercodecs.StreamWriter"codecs.Codec*Ë
__init__codecs.StreamWriter.__init__"
None*4
self*
codecs.StreamWriter"codecs.StreamWriter*N
streamB
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IO**
errors
builtins.str"builtins.str z27*É
__init__codecs.StreamWriter.__init__"
None*4
self*
codecs.StreamWriter"codecs.StreamWriter*T
streamH
typing.IO[builtins.bytes] 
builtins.bytes"builtins.bytes"	typing.IO**
errors
builtins.str"builtins.str z35z36z37z38z39z310*ò
writecodecs.StreamWriter.write"
None*4
self*
codecs.StreamWriter"codecs.StreamWriter*0
object$
builtins.unicode"builtins.unicodez27*•
writecodecs.StreamWriter.write"
None*4
self*
codecs.StreamWriter"codecs.StreamWriter*(
object
builtins.str"builtins.strz35z36z37z38z39z310*÷

writelinescodecs.StreamWriter.writelines"
None*4
self*
codecs.StreamWriter"codecs.StreamWriter*d
listZ
!typing.Iterable[builtins.unicode]$
builtins.unicode"builtins.unicode"typing.Iterablez27*ﬂ

writelinescodecs.StreamWriter.writelines"
None*4
self*
codecs.StreamWriter"codecs.StreamWriter*X
listN
typing.Iterable[builtins.str]
builtins.str"builtins.str"typing.Iterablez35z36z37z38z39z310*
resetcodecs.StreamWriter.reset"
None*4
self*
codecs.StreamWriter"codecs.StreamWriterz27z35z36z37z38z39z310*V
	__enter__codecs.StreamWriter.__enter__"

codecs._SW*
self

codecs._SWz27*s
	__enter__codecs.StreamWriter.__enter__"
_typeshed.Self*
self
_typeshed.Selfz35z36z37z38z39z310*‰
__exit__codecs.StreamWriter.__exit__"
None*2
self*
codecs.StreamWriter"codecs.StreamWriter*í
typä
(Union[Type[builtins.BaseException],None]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException
None*i
excb
"Union[builtins.BaseException,None]0
builtins.BaseException"builtins.BaseException
None*_
tbY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
Nonez27z35z36z37z38z39z310*à
__getattr__codecs.StreamWriter.__getattr__"
Any*2
self*
codecs.StreamWriter"codecs.StreamWriter*$
name
builtins.str"builtins.str*X
getattrK
CallableType[builtins.function]&
builtins.function"builtins.function z27z35z36z37z38z39z310j27j35j36j37j38j39j310r_
errorscodecs.StreamWriter.errors
builtins.str"builtins.str*27*35*36*37*38*39*310¿
StreamReadercodecs.StreamReader"codecs.Codec*Ë
__init__codecs.StreamReader.__init__"
None*4
self*
codecs.StreamReader"codecs.StreamReader*N
streamB
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IO**
errors
builtins.str"builtins.str z27*É
__init__codecs.StreamReader.__init__"
None*4
self*
codecs.StreamReader"codecs.StreamReader*T
streamH
typing.IO[builtins.bytes] 
builtins.bytes"builtins.bytes"	typing.IO**
errors
builtins.str"builtins.str z35z36z37z38z39z310*Ü
readcodecs.StreamReader.read"$
builtins.unicode"builtins.unicode*4
self*
codecs.StreamReader"codecs.StreamReader*(
size
builtins.int"builtins.int *)
chars
builtins.int"builtins.int */
	firstline
builtins.bool"builtins.bool z27*ì
readcodecs.StreamReader.read"
builtins.str"builtins.str*4
self*
codecs.StreamReader"codecs.StreamReader*(
size
builtins.int"builtins.int *)
chars
builtins.int"builtins.int */
	firstline
builtins.bool"builtins.bool z35z36z37z38z39z310*ä
readlinecodecs.StreamReader.readline"$
builtins.unicode"builtins.unicode*4
self*
codecs.StreamReader"codecs.StreamReader*P
sizeD
Union[builtins.int,None]
builtins.int"builtins.int
None *.
keepends
builtins.bool"builtins.bool z27*ó
readlinecodecs.StreamReader.readline"
builtins.str"builtins.str*4
self*
codecs.StreamReader"codecs.StreamReader*P
sizeD
Union[builtins.int,None]
builtins.int"builtins.int
None *.
keepends
builtins.bool"builtins.bool z35z36z37z38z39z310*¬
	readlinescodecs.StreamReader.readlines"V
builtins.list[builtins.unicode]$
builtins.unicode"builtins.unicode"builtins.list*4
self*
codecs.StreamReader"codecs.StreamReader*T
sizehintD
Union[builtins.int,None]
builtins.int"builtins.int
None *.
keepends
builtins.bool"builtins.bool z27*À
	readlinescodecs.StreamReader.readlines"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*4
self*
codecs.StreamReader"codecs.StreamReader*T
sizehintD
Union[builtins.int,None]
builtins.int"builtins.int
None *.
keepends
builtins.bool"builtins.bool z35z36z37z38z39z310*
resetcodecs.StreamReader.reset"
None*4
self*
codecs.StreamReader"codecs.StreamReaderz27z35z36z37z38z39z310*V
	__enter__codecs.StreamReader.__enter__"

codecs._SR*
self

codecs._SRz27*s
	__enter__codecs.StreamReader.__enter__"
_typeshed.Self*
self
_typeshed.Selfz35z36z37z38z39z310*‰
__exit__codecs.StreamReader.__exit__"
None*2
self*
codecs.StreamReader"codecs.StreamReader*í
typä
(Union[Type[builtins.BaseException],None]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException
None*i
excb
"Union[builtins.BaseException,None]0
builtins.BaseException"builtins.BaseException
None*_
tbY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
Nonez27z35z36z37z38z39z310*º
__iter__codecs.StreamReader.__iter__"Z
!typing.Iterator[builtins.unicode]$
builtins.unicode"builtins.unicode"typing.Iterator*2
self*
codecs.StreamReader"codecs.StreamReaderz27*≈
__iter__codecs.StreamReader.__iter__"N
typing.Iterator[builtins.str]
builtins.str"builtins.str"typing.Iterator*2
self*
codecs.StreamReader"codecs.StreamReaderz35z36z37z38z39z310*à
__getattr__codecs.StreamReader.__getattr__"
Any*2
self*
codecs.StreamReader"codecs.StreamReader*$
name
builtins.str"builtins.str*X
getattrK
CallableType[builtins.function]&
builtins.function"builtins.function z27z35z36z37z38z39z310j27j35j36j37j38j39j310r_
errorscodecs.StreamReader.errors
builtins.str"builtins.str*27*35*36*37*38*39*310ò3
StreamReaderWritercodecs.StreamReaderWriter"typing.TextIO*Ó
__init__"codecs.StreamReaderWriter.__init__"
None*@
self6
codecs.StreamReaderWriter"codecs.StreamReaderWriter*N
streamB
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IO*8
Reader,
codecs._StreamReader"codecs._StreamReader*8
Writer,
codecs._StreamWriter"codecs._StreamWriter**
errors
builtins.str"builtins.str z27*â
__init__"codecs.StreamReaderWriter.__init__"
None*@
self6
codecs.StreamReaderWriter"codecs.StreamReaderWriter*T
streamH
typing.IO[builtins.bytes] 
builtins.bytes"builtins.bytes"	typing.IO*8
Reader,
codecs._StreamReader"codecs._StreamReader*8
Writer,
codecs._StreamWriter"codecs._StreamWriter**
errors
builtins.str"builtins.str z35z36z37z38z39z310*º
readcodecs.StreamReaderWriter.read"$
builtins.unicode"builtins.unicode*@
self6
codecs.StreamReaderWriter"codecs.StreamReaderWriter*(
size
builtins.int"builtins.int z27*…
readcodecs.StreamReaderWriter.read"
builtins.str"builtins.str*@
self6
codecs.StreamReaderWriter"codecs.StreamReaderWriter*(
size
builtins.int"builtins.int z35z36z37z38z39z310*Ï
readline"codecs.StreamReaderWriter.readline"$
builtins.unicode"builtins.unicode*@
self6
codecs.StreamReaderWriter"codecs.StreamReaderWriter*P
sizeD
Union[builtins.int,None]
builtins.int"builtins.int
None z27*˘
readline"codecs.StreamReaderWriter.readline"
builtins.str"builtins.str*@
self6
codecs.StreamReaderWriter"codecs.StreamReaderWriter*P
sizeD
Union[builtins.int,None]
builtins.int"builtins.int
None z35z36z37z38z39z310*§
	readlines#codecs.StreamReaderWriter.readlines"V
builtins.list[builtins.unicode]$
builtins.unicode"builtins.unicode"builtins.list*@
self6
codecs.StreamReaderWriter"codecs.StreamReaderWriter*T
sizehintD
Union[builtins.int,None]
builtins.int"builtins.int
None z27*≠
	readlines#codecs.StreamReaderWriter.readlines"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*@
self6
codecs.StreamReaderWriter"codecs.StreamReaderWriter*T
sizehintD
Union[builtins.int,None]
builtins.int"builtins.int
None z35z36z37z38z39z310*í
nextcodecs.StreamReaderWriter.next"$
builtins.unicode"builtins.unicode*@
self6
codecs.StreamReaderWriter"codecs.StreamReaderWriterz27*q
__iter__"codecs.StreamReaderWriter.__iter__"
	codecs._T*
self
	codecs._Tz27z35z36z37z38z39z310*º
writecodecs.StreamReaderWriter.write"
builtins.int"builtins.int*@
self6
codecs.StreamReaderWriter"codecs.StreamReaderWriter*.
data$
builtins.unicode"builtins.unicodez27*…
writecodecs.StreamReaderWriter.write"
builtins.int"builtins.int*@
self6
codecs.StreamReaderWriter"codecs.StreamReaderWriter*&
data
builtins.str"builtins.strz35z36z37z38z39z310*Ë

writelines$codecs.StreamReaderWriter.writelines"
None*@
self6
codecs.StreamReaderWriter"codecs.StreamReaderWriter*d
listZ
!typing.Iterable[builtins.unicode]$
builtins.unicode"builtins.unicode"typing.Iterablez27*Ò

writelines$codecs.StreamReaderWriter.writelines"
None*@
self6
codecs.StreamReaderWriter"codecs.StreamReaderWriter*X
listN
typing.Iterable[builtins.str]
builtins.str"builtins.str"typing.Iterablez35z36z37z38z39z310*ë
resetcodecs.StreamReaderWriter.reset"
None*@
self6
codecs.StreamReaderWriter"codecs.StreamReaderWriterz27z35z36z37z38z39z310*˘
seekcodecs.StreamReaderWriter.seek"
builtins.int"builtins.int*@
self6
codecs.StreamReaderWriter"codecs.StreamReaderWriter*(
offset
builtins.int"builtins.int**
whence
builtins.int"builtins.int z27z35z36z37z38z39z310*Z
	__enter__#codecs.StreamReaderWriter.__enter__"
	codecs._T*
self
	codecs._Tz27*y
	__enter__#codecs.StreamReaderWriter.__enter__"
_typeshed.Self*
self
_typeshed.Selfz35z36z37z38z39z310*ˆ
__exit__"codecs.StreamReaderWriter.__exit__"
None*>
self6
codecs.StreamReaderWriter"codecs.StreamReaderWriter*í
typä
(Union[Type[builtins.BaseException],None]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException
None*i
excb
"Union[builtins.BaseException,None]0
builtins.BaseException"builtins.BaseException
None*_
tbY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
Nonez27z35z36z37z38z39z310*¿
__getattr__%codecs.StreamReaderWriter.__getattr__"
Any*>
self6
codecs.StreamReaderWriter"codecs.StreamReaderWriter*$
name
builtins.str"builtins.strz27z35z36z37z38z39z310*ë
closecodecs.StreamReaderWriter.close"
None*@
self6
codecs.StreamReaderWriter"codecs.StreamReaderWriterz27z35z36z37z38z39z310*ß
fileno codecs.StreamReaderWriter.fileno"
builtins.int"builtins.int*@
self6
codecs.StreamReaderWriter"codecs.StreamReaderWriterz27z35z36z37z38z39z310*ë
flushcodecs.StreamReaderWriter.flush"
None*@
self6
codecs.StreamReaderWriter"codecs.StreamReaderWriterz27z35z36z37z38z39z310*©
isatty codecs.StreamReaderWriter.isatty"
builtins.bool"builtins.bool*@
self6
codecs.StreamReaderWriter"codecs.StreamReaderWriterz27z35z36z37z38z39z310*≠
readable"codecs.StreamReaderWriter.readable"
builtins.bool"builtins.bool*@
self6
codecs.StreamReaderWriter"codecs.StreamReaderWriterz27z35z36z37z38z39z310*˝
truncate"codecs.StreamReaderWriter.truncate"
builtins.int"builtins.int*@
self6
codecs.StreamReaderWriter"codecs.StreamReaderWriter*P
sizeD
Union[builtins.int,None]
builtins.int"builtins.int
None z27z35z36z37z38z39z310*≠
seekable"codecs.StreamReaderWriter.seekable"
builtins.bool"builtins.bool*@
self6
codecs.StreamReaderWriter"codecs.StreamReaderWriterz27z35z36z37z38z39z310*£
tellcodecs.StreamReaderWriter.tell"
builtins.int"builtins.int*@
self6
codecs.StreamReaderWriter"codecs.StreamReaderWriterz27z35z36z37z38z39z310*≠
writable"codecs.StreamReaderWriter.writable"
builtins.bool"builtins.bool*@
self6
codecs.StreamReaderWriter"codecs.StreamReaderWriterz27z35z36z37z38z39z310*ß
__next__"codecs.StreamReaderWriter.__next__"
builtins.str"builtins.str*@
self6
codecs.StreamReaderWriter"codecs.StreamReaderWriterz35z36z37z38z39z310j27j35j36j37j38j39j310¬1
StreamRecodercodecs.StreamRecoder"typing.BinaryIO*ø
__init__codecs.StreamRecoder.__init__"
None*6
self,
codecs.StreamRecoder"codecs.StreamRecoder*N
streamB
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IO*.
encode"
codecs._Encoder"codecs._Encoder*.
decode"
codecs._Decoder"codecs._Decoder*8
Reader,
codecs._StreamReader"codecs._StreamReader*8
Writer,
codecs._StreamWriter"codecs._StreamWriter**
errors
builtins.str"builtins.str z27*⁄
__init__codecs.StreamRecoder.__init__"
None*6
self,
codecs.StreamRecoder"codecs.StreamRecoder*T
streamH
typing.IO[builtins.bytes] 
builtins.bytes"builtins.bytes"	typing.IO*.
encode"
codecs._Encoder"codecs._Encoder*.
decode"
codecs._Decoder"codecs._Decoder*8
Reader,
codecs._StreamReader"codecs._StreamReader*8
Writer,
codecs._StreamWriter"codecs._StreamWriter**
errors
builtins.str"builtins.str z35z36z37z38z39z310*•
readcodecs.StreamRecoder.read"
builtins.str"builtins.str*6
self,
codecs.StreamRecoder"codecs.StreamRecoder*(
size
builtins.int"builtins.int z27*æ
readcodecs.StreamRecoder.read" 
builtins.bytes"builtins.bytes*6
self,
codecs.StreamRecoder"codecs.StreamRecoder*(
size
builtins.int"builtins.int z35z36z37z38z39z310*’
readlinecodecs.StreamRecoder.readline"
builtins.str"builtins.str*6
self,
codecs.StreamRecoder"codecs.StreamRecoder*P
sizeD
Union[builtins.int,None]
builtins.int"builtins.int
None z27*Ó
readlinecodecs.StreamRecoder.readline" 
builtins.bytes"builtins.bytes*6
self,
codecs.StreamRecoder"codecs.StreamRecoder*P
sizeD
Union[builtins.int,None]
builtins.int"builtins.int
None z35z36z37z38z39z310*â
	readlinescodecs.StreamRecoder.readlines"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*6
self,
codecs.StreamRecoder"codecs.StreamRecoder*T
sizehintD
Union[builtins.int,None]
builtins.int"builtins.int
None z27*§
	readlinescodecs.StreamRecoder.readlines"P
builtins.list[builtins.bytes] 
builtins.bytes"builtins.bytes"builtins.list*6
self,
codecs.StreamRecoder"codecs.StreamRecoder*T
sizehintD
Union[builtins.int,None]
builtins.int"builtins.int
None z35z36z37z38z39z310*{
nextcodecs.StreamRecoder.next"
builtins.str"builtins.str*6
self,
codecs.StreamRecoder"codecs.StreamRecoderz27*p
__iter__codecs.StreamRecoder.__iter__"
codecs._SRT*
self
codecs._SRTz27z35z36z37z38z39z310*•
writecodecs.StreamRecoder.write"
builtins.int"builtins.int*6
self,
codecs.StreamRecoder"codecs.StreamRecoder*&
data
builtins.str"builtins.strz27*æ
writecodecs.StreamRecoder.write"
builtins.int"builtins.int*6
self,
codecs.StreamRecoder"codecs.StreamRecoder**
data 
builtins.bytes"builtins.bytesz35z36z37z38z39z310*·

writelinescodecs.StreamRecoder.writelines"
builtins.int"builtins.int*6
self,
codecs.StreamRecoder"codecs.StreamRecoder*X
listN
typing.Iterable[builtins.str]
builtins.str"builtins.str"typing.Iterablez27*¸

writelinescodecs.StreamRecoder.writelines"
builtins.int"builtins.int*6
self,
codecs.StreamRecoder"codecs.StreamRecoder*^
listT
typing.Iterable[builtins.bytes] 
builtins.bytes"builtins.bytes"typing.Iterablez35z36z37z38z39z310*Ç
resetcodecs.StreamRecoder.reset"
None*6
self,
codecs.StreamRecoder"codecs.StreamRecoderz27z35z36z37z38z39z310*±
__getattr__ codecs.StreamRecoder.__getattr__"
Any*4
self,
codecs.StreamRecoder"codecs.StreamRecoder*$
name
builtins.str"builtins.strz27z35z36z37z38z39z310*Y
	__enter__codecs.StreamRecoder.__enter__"
codecs._SRT*
self
codecs._SRTz27*t
	__enter__codecs.StreamRecoder.__enter__"
_typeshed.Self*
self
_typeshed.Selfz35z36z37z38z39z310*Í
__exit__codecs.StreamRecoder.__exit__"
None*4
self,
codecs.StreamRecoder"codecs.StreamRecoder*ì
typeä
(Union[Type[builtins.BaseException],None]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException
None*k
valueb
"Union[builtins.BaseException,None]0
builtins.BaseException"builtins.BaseException
None*_
tbY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
Nonez27z35z36z37z38z39z310*Í
seekcodecs.StreamRecoder.seek"
builtins.int"builtins.int*6
self,
codecs.StreamRecoder"codecs.StreamRecoder*(
offset
builtins.int"builtins.int**
whence
builtins.int"builtins.int z27z35z36z37z38z39z310*Ç
closecodecs.StreamRecoder.close"
None*6
self,
codecs.StreamRecoder"codecs.StreamRecoderz27z35z36z37z38z39z310*ò
filenocodecs.StreamRecoder.fileno"
builtins.int"builtins.int*6
self,
codecs.StreamRecoder"codecs.StreamRecoderz27z35z36z37z38z39z310*Ç
flushcodecs.StreamRecoder.flush"
None*6
self,
codecs.StreamRecoder"codecs.StreamRecoderz27z35z36z37z38z39z310*ö
isattycodecs.StreamRecoder.isatty"
builtins.bool"builtins.bool*6
self,
codecs.StreamRecoder"codecs.StreamRecoderz27z35z36z37z38z39z310*û
readablecodecs.StreamRecoder.readable"
builtins.bool"builtins.bool*6
self,
codecs.StreamRecoder"codecs.StreamRecoderz27z35z36z37z38z39z310*Ó
truncatecodecs.StreamRecoder.truncate"
builtins.int"builtins.int*6
self,
codecs.StreamRecoder"codecs.StreamRecoder*P
sizeD
Union[builtins.int,None]
builtins.int"builtins.int
None z27z35z36z37z38z39z310*û
seekablecodecs.StreamRecoder.seekable"
builtins.bool"builtins.bool*6
self,
codecs.StreamRecoder"codecs.StreamRecoderz27z35z36z37z38z39z310*î
tellcodecs.StreamRecoder.tell"
builtins.int"builtins.int*6
self,
codecs.StreamRecoder"codecs.StreamRecoderz27z35z36z37z38z39z310*û
writablecodecs.StreamRecoder.writable"
builtins.bool"builtins.bool*6
self,
codecs.StreamRecoder"codecs.StreamRecoderz27z35z36z37z38z39z310*ú
__next__codecs.StreamRecoder.__next__" 
builtins.bytes"builtins.bytes*6
self,
codecs.StreamRecoder"codecs.StreamRecoderz35z36z37z38z39z310j27j35j36j37j38j39j310€
lookupcodecs.lookup"¯
PTuple[codecs._Encoder,codecs._Decoder,codecs._StreamReader,codecs._StreamWriter]"
codecs._Encoder"codecs._Encoder"
codecs._Decoder"codecs._Decoder,
codecs._StreamReader"codecs._StreamReader,
codecs._StreamWriter"codecs._StreamWriter**

__encoding
builtins.str"builtins.strz27z35z36z37z38z39z310∆
utf_16_be_decodecodecs.utf_16_be_decode"l
$Tuple[builtins.unicode,builtins.int]$
builtins.unicode"builtins.unicode
builtins.int"builtins.int*&
__data
builtins.str"builtins.str*R
__errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None *+
__final
builtins.bool"builtins.bool z27”
utf_16_be_decodecodecs.utf_16_be_decode"`
 Tuple[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int**
__data 
builtins.bytes"builtins.bytes*R
__errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None *+
__final
builtins.bool"builtins.bool z35z36z37z38z39z310î
utf_16_be_encodecodecs.utf_16_be_encode"`
 Tuple[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int*-
__str$
builtins.unicode"builtins.unicode*R
__errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None z27ß
utf_16_be_encodecodecs.utf_16_be_encode"f
"Tuple[builtins.bytes,builtins.int] 
builtins.bytes"builtins.bytes
builtins.int"builtins.int*%
__str
builtins.str"builtins.str*R
__errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None z35z36z37z38z39z310å

getencodercodecs.getencoder""
codecs._Encoder"codecs._Encoder**
encoding
builtins.str"builtins.strz27z35z36z37z38z39z310å

getdecodercodecs.getdecoder""
codecs._Decoder"codecs._Decoder**
encoding
builtins.str"builtins.strz27z35z36z37z38z39z310∏
getincrementalencodercodecs.getincrementalencoder"8
codecs._IncrementalEncoder"codecs._IncrementalEncoder**
encoding
builtins.str"builtins.strz27z35z36z37z38z39z310∏
getincrementaldecodercodecs.getincrementaldecoder"8
codecs._IncrementalDecoder"codecs._IncrementalDecoder**
encoding
builtins.str"builtins.strz27z35z36z37z38z39z310î
	getreadercodecs.getreader",
codecs._StreamReader"codecs._StreamReader**
encoding
builtins.str"builtins.strz27z35z36z37z38z39z310î
	getwritercodecs.getwriter",
codecs._StreamWriter"codecs._StreamWriter**
encoding
builtins.str"builtins.strz27z35z36z37z38z39z310§
registercodecs.register"
None*`
__search_functionK
CallableType[builtins.function]&
builtins.function"builtins.functionz27z35z36z37z38z39z310Ô
opencodecs.open"6
codecs.StreamReaderWriter"codecs.StreamReaderWriter**
filename
builtins.str"builtins.str*(
mode
builtins.str"builtins.str *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None **
errors
builtins.str"builtins.str *-
	buffering
builtins.int"builtins.int z27z35z36z37z38z39z310Ÿ
EncodedFilecodecs.EncodedFile",
codecs.StreamRecoder"codecs.StreamRecoder*L
fileB
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IO*/
data_encoding
builtins.str"builtins.str*Y
file_encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None **
errors
builtins.str"builtins.str z27Ù
EncodedFilecodecs.EncodedFile",
codecs.StreamRecoder"codecs.StreamRecoder*R
fileH
typing.IO[builtins.bytes] 
builtins.bytes"builtins.bytes"	typing.IO*/
data_encoding
builtins.str"builtins.str*Y
file_encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None **
errors
builtins.str"builtins.str z35z36z37z38z39z310’

iterencodecodecs.iterencode"n
(typing.Generator[builtins.str,None,None]
builtins.str"builtins.str
None
None"typing.Generator*h
iteratorZ
!typing.Iterable[builtins.unicode]$
builtins.unicode"builtins.unicode"typing.Iterable**
encoding
builtins.str"builtins.str**
errors
builtins.str"builtins.str z27‰

iterencodecodecs.iterencode"t
*typing.Generator[builtins.bytes,None,None] 
builtins.bytes"builtins.bytes
None
None"typing.Generator*\
iteratorN
typing.Iterable[builtins.str]
builtins.str"builtins.str"typing.Iterable**
encoding
builtins.str"builtins.str**
errors
builtins.str"builtins.str z35z36z37z38z39z310’

iterdecodecodecs.iterdecode"z
,typing.Generator[builtins.unicode,None,None]$
builtins.unicode"builtins.unicode
None
None"typing.Generator*\
iteratorN
typing.Iterable[builtins.str]
builtins.str"builtins.str"typing.Iterable**
encoding
builtins.str"builtins.str**
errors
builtins.str"builtins.str z27‰

iterdecodecodecs.iterdecode"n
(typing.Generator[builtins.str,None,None]
builtins.str"builtins.str
None
None"typing.Generator*b
iteratorT
typing.Iterable[builtins.bytes] 
builtins.bytes"builtins.bytes"typing.Iterable**
encoding
builtins.str"builtins.str**
errors
builtins.str"builtins.str z35z36z37z38z39z310“
register_errorcodecs.register_error"
None*(
__errors
builtins.str"builtins.str*X
	__handlerK
CallableType[builtins.function]&
builtins.function"builtins.functionz27z35z36z37z38z39z310µ
lookup_errorcodecs.lookup_error"K
CallableType[builtins.function]&
builtins.function"builtins.function*&
__name
builtins.str"builtins.strz27z35z36z37z38z39z310£
strict_errorscodecs.strict_errors"∏
4Tuple[Union[builtins.str,builtins.str],builtins.int]`
 Union[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.int"builtins.int*=
	exception.
builtins.UnicodeError"builtins.UnicodeErrorz27¿
strict_errorscodecs.strict_errors"¿
6Tuple[Union[builtins.str,builtins.bytes],builtins.int]f
"Union[builtins.str,builtins.bytes]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
builtins.int"builtins.int*=
	exception.
builtins.UnicodeError"builtins.UnicodeErrorz35z36z37z38z39z310•
replace_errorscodecs.replace_errors"∏
4Tuple[Union[builtins.str,builtins.str],builtins.int]`
 Union[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.int"builtins.int*=
	exception.
builtins.UnicodeError"builtins.UnicodeErrorz27¬
replace_errorscodecs.replace_errors"¿
6Tuple[Union[builtins.str,builtins.bytes],builtins.int]f
"Union[builtins.str,builtins.bytes]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
builtins.int"builtins.int*=
	exception.
builtins.UnicodeError"builtins.UnicodeErrorz35z36z37z38z39z310£
ignore_errorscodecs.ignore_errors"∏
4Tuple[Union[builtins.str,builtins.str],builtins.int]`
 Union[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.int"builtins.int*=
	exception.
builtins.UnicodeError"builtins.UnicodeErrorz27¿
ignore_errorscodecs.ignore_errors"¿
6Tuple[Union[builtins.str,builtins.bytes],builtins.int]f
"Union[builtins.str,builtins.bytes]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
builtins.int"builtins.int*=
	exception.
builtins.UnicodeError"builtins.UnicodeErrorz35z36z37z38z39z310π
xmlcharrefreplace_errorscodecs.xmlcharrefreplace_errors"∏
4Tuple[Union[builtins.str,builtins.str],builtins.int]`
 Union[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.int"builtins.int*=
	exception.
builtins.UnicodeError"builtins.UnicodeErrorz27÷
xmlcharrefreplace_errorscodecs.xmlcharrefreplace_errors"¿
6Tuple[Union[builtins.str,builtins.bytes],builtins.int]f
"Union[builtins.str,builtins.bytes]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
builtins.int"builtins.int*=
	exception.
builtins.UnicodeError"builtins.UnicodeErrorz35z36z37z38z39z310∑
backslashreplace_errorscodecs.backslashreplace_errors"∏
4Tuple[Union[builtins.str,builtins.str],builtins.int]`
 Union[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.int"builtins.int*=
	exception.
builtins.UnicodeError"builtins.UnicodeErrorz27‘
backslashreplace_errorscodecs.backslashreplace_errors"¿
6Tuple[Union[builtins.str,builtins.bytes],builtins.int]f
"Union[builtins.str,builtins.bytes]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
builtins.int"builtins.int*=
	exception.
builtins.UnicodeError"builtins.UnicodeErrorz35z36z37z38z39z310ê

unregistercodecs.unregister"
None*`
__search_functionK
CallableType[builtins.function]&
builtins.function"builtins.functionz310"ù
encodecodecs.encodeª
encodecodecs.encode"
builtins.str"builtins.str*%
obj
builtins.str"builtins.str*¢
encodingì
ÒTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]˚	
ÊUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"codecs._BytesToBytesEncodingT**
errors
builtins.str"builtins.str 0:overloadXÚ
encodecodecs.encode"
builtins.str"builtins.str*%
obj
builtins.str"builtins.str*Ÿ
encoding»
:Union[Literal[builtins.unicode],Literal[builtins.unicode]]C
Literal[builtins.unicode]	$
builtins.unicode"builtins.unicodeC
Literal[builtins.unicode]	$
builtins.unicode"builtins.unicode **
errors
builtins.str"builtins.str 0:overloadXÃ
encodecodecs.encode"
builtins.str"builtins.str*-
obj$
builtins.unicode"builtins.unicode*,
encoding
builtins.str"builtins.str **
errors
builtins.str"builtins.str 0:overloadX"27"ñ
encodecodecs.encode√
encodecodecs.encode" 
builtins.bytes"builtins.bytes*)
obj 
builtins.bytes"builtins.bytes*¢
encodingì
ÒTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]˚	
ÊUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"codecs._BytesToBytesEncodingT**
errors
builtins.str"builtins.str 0:overloadX“
encodecodecs.encode"
builtins.str"builtins.str*%
obj
builtins.str"builtins.str*π
encoding®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str **
errors
builtins.str"builtins.str 0:overloadX»
encodecodecs.encode" 
builtins.bytes"builtins.bytes*%
obj
builtins.str"builtins.str*,
encoding
builtins.str"builtins.str **
errors
builtins.str"builtins.str 0:overloadX"35"36"37"38"39"310"•
decodecodecs.decodeª
decodecodecs.decode"
builtins.str"builtins.str*%
obj
builtins.str"builtins.str*¢
encodingì
ÒTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]˚	
ÊUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"codecs._BytesToBytesEncodingT**
errors
builtins.str"builtins.str 0:overloadX˙
decodecodecs.decode"$
builtins.unicode"builtins.unicode*%
obj
builtins.str"builtins.str*Ÿ
encoding»
:Union[Literal[builtins.unicode],Literal[builtins.unicode]]C
Literal[builtins.unicode]	$
builtins.unicode"builtins.unicodeC
Literal[builtins.unicode]	$
builtins.unicode"builtins.unicode **
errors
builtins.str"builtins.str 0:overloadXÃ
decodecodecs.decode"$
builtins.unicode"builtins.unicode*%
obj
builtins.str"builtins.str*,
encoding
builtins.str"builtins.str **
errors
builtins.str"builtins.str 0:overloadX"27"ñ
decodecodecs.decode√
decodecodecs.decode" 
builtins.bytes"builtins.bytes*)
obj 
builtins.bytes"builtins.bytes*¢
encodingì
ÒTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]˚	
ÊUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"codecs._BytesToBytesEncodingT**
errors
builtins.str"builtins.str 0:overloadX“
decodecodecs.decode"
builtins.str"builtins.str*%
obj
builtins.str"builtins.str*π
encoding®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str **
errors
builtins.str"builtins.str 0:overloadX»
decodecodecs.decode"
builtins.str"builtins.str*)
obj 
builtins.bytes"builtins.bytes*,
encoding
builtins.str"builtins.str **
errors
builtins.str"builtins.str 0:overloadX"35"36"37"38"39"310*3
BOM
codecs.BOM
builtins.str"builtins.str*27*L
BOM
codecs.BOM 
builtins.bytes"builtins.bytes*35*36*37*38*39*310*9
BOM_BEcodecs.BOM_BE
builtins.str"builtins.str*27*R
BOM_BEcodecs.BOM_BE 
builtins.bytes"builtins.bytes*35*36*37*38*39*310*9
BOM_LEcodecs.BOM_LE
builtins.str"builtins.str*27*R
BOM_LEcodecs.BOM_LE 
builtins.bytes"builtins.bytes*35*36*37*38*39*310*=
BOM_UTF8codecs.BOM_UTF8
builtins.str"builtins.str*27*V
BOM_UTF8codecs.BOM_UTF8 
builtins.bytes"builtins.bytes*35*36*37*38*39*310*?
	BOM_UTF16codecs.BOM_UTF16
builtins.str"builtins.str*27*X
	BOM_UTF16codecs.BOM_UTF16 
builtins.bytes"builtins.bytes*35*36*37*38*39*310*E
BOM_UTF16_BEcodecs.BOM_UTF16_BE
builtins.str"builtins.str*27*^
BOM_UTF16_BEcodecs.BOM_UTF16_BE 
builtins.bytes"builtins.bytes*35*36*37*38*39*310*E
BOM_UTF16_LEcodecs.BOM_UTF16_LE
builtins.str"builtins.str*27*^
BOM_UTF16_LEcodecs.BOM_UTF16_LE 
builtins.bytes"builtins.bytes*35*36*37*38*39*310*?
	BOM_UTF32codecs.BOM_UTF32
builtins.str"builtins.str*27*X
	BOM_UTF32codecs.BOM_UTF32 
builtins.bytes"builtins.bytes*35*36*37*38*39*310*E
BOM_UTF32_BEcodecs.BOM_UTF32_BE
builtins.str"builtins.str*27*^
BOM_UTF32_BEcodecs.BOM_UTF32_BE 
builtins.bytes"builtins.bytes*35*36*37*38*39*310*E
BOM_UTF32_LEcodecs.BOM_UTF32_LE
builtins.str"builtins.str*27*^
BOM_UTF32_LEcodecs.BOM_UTF32_LE 
builtins.bytes"builtins.bytes*35*36*37*38*39*310