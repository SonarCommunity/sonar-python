
torch._higher_order_ops.utilsë
!UnsupportedAliasMutationException?torch._higher_order_ops.utils.UnsupportedAliasMutationException"builtins.RuntimeError*ò
__init__Htorch._higher_order_ops.utils.UnsupportedAliasMutationException.__init__"
None*ç
selfÇ
?torch._higher_order_ops.utils.UnsupportedAliasMutationException"?torch._higher_order_ops.utils.UnsupportedAliasMutationException*(
reason
builtins.str"builtins.str8rn
reasonFtorch._higher_order_ops.utils.UnsupportedAliasMutationException.reason
builtins.str"builtins.strrÜ
__dataclass_fields__Ttorch._higher_order_ops.utils.UnsupportedAliasMutationException.__dataclass_fields__ó
2builtins.dict[builtins.str,dataclasses.Field[Any]]
builtins.str"builtins.str4
dataclasses.Field[Any]
Any"dataclasses.Field"builtins.dictí
autograd_not_implemented_inner<torch._higher_order_ops.utils.autograd_not_implemented_inner"
Any*N
operator@
torch._ops.HigherOrderOperator"torch._ops.HigherOrderOperator*1
delayed_error
builtins.bool"builtins.bool*
args
Any*
kwargs
Anyù
autograd_not_implemented6torch._higher_order_ops.utils.autograd_not_implemented"K
CallableType[builtins.function]&
builtins.function"builtins.function*H
op@
torch._ops.HigherOrderOperator"torch._ops.HigherOrderOperator*2
deferred_error
builtins.bool"builtins.bool`
_maybe_run_with_interpreter9torch._higher_order_ops.utils._maybe_run_with_interpreter*
fnH
reenter_make_fx-torch._higher_order_ops.utils.reenter_make_fx*
fnñ
$_has_potential_branch_input_mutationBtorch._higher_order_ops.utils._has_potential_branch_input_mutation*

branch*

inputs*
pre_dispatch ê
!_has_potential_branch_input_alias?torch._higher_order_ops.utils._has_potential_branch_input_alias*

branch*

inputs*
pre_dispatch \
unique_graph_id-torch._higher_order_ops.utils.unique_graph_id*

proxy_mode*

prefix*ô
__annotations__-torch._higher_order_ops.utils.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*$
fx_tracebacktorch.fx.traceback *
pytreetorch.utils._pytree 