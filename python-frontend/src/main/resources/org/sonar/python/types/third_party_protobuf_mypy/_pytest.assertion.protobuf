
_pytest.assertionê
DummyRewriteHook"_pytest.assertion.DummyRewriteHook"builtins.object*∆
mark_rewrite/_pytest.assertion.DummyRewriteHook.mark_rewrite"
None*R
selfH
"_pytest.assertion.DummyRewriteHook""_pytest.assertion.DummyRewriteHook*'
names
builtins.str"builtins.strÆ
AssertionState _pytest.assertion.AssertionState"builtins.object*ﬁ
__init__)_pytest.assertion.AssertionState.__init__"
None*N
selfD
 _pytest.assertion.AssertionState" _pytest.assertion.AssertionState*:
config.
_pytest.config.Config"_pytest.config.Config*
mode
Anyr6
mode%_pytest.assertion.AssertionState.mode
Anyrm
trace&_pytest.assertion.AssertionState.trace<
pluggy._tracing.TagTracerSub"pluggy._tracing.TagTracerSubr‡
hook%_pytest.assertion.AssertionState.hook∞
<Union[_pytest.assertion.rewrite.AssertionRewritingHook,None]d
0_pytest.assertion.rewrite.AssertionRewritingHook"0_pytest.assertion.rewrite.AssertionRewritingHook
Noneí
pytest_addoption"_pytest.assertion.pytest_addoption"
None*P
parserD
 _pytest.config.argparsing.Parser" _pytest.config.argparsing.Parserw
register_assert_rewrite)_pytest.assertion.register_assert_rewrite"
None*'
names
builtins.str"builtins.str‹
install_importhook$_pytest.assertion.install_importhook"d
0_pytest.assertion.rewrite.AssertionRewritingHook"0_pytest.assertion.rewrite.AssertionRewritingHook*:
config.
_pytest.config.Config"_pytest.config.Config}
pytest_collection#_pytest.assertion.pytest_collection"
None*9
session,
_pytest.main.Session"_pytest.main.SessionÉ
pytest_sessionfinish&_pytest.assertion.pytest_sessionfinish"
None*9
session,
_pytest.main.Session"_pytest.main.Session’
pytest_assertrepr_compare+_pytest.assertion.pytest_assertrepr_compare"Å
'Union[builtins.list[builtins.str],None]J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list
None*:
config.
_pytest.config.Config"_pytest.config.Config*$
op
builtins.str"builtins.str*
left
Any*
right
Any*r
__path___pytest.assertion.__path__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*ç
__annotations__!_pytest.assertion.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*&
rewrite_pytest.assertion.rewrite *(
truncate_pytest.assertion.truncate * 
util_pytest.assertion.util *◊
assertstate_key)_pytest.assertion.rewrite.assertstate_keyò
8_pytest.stash.StashKey[_pytest.assertion.AssertionState]D
 _pytest.assertion.AssertionState" _pytest.assertion.AssertionState"_pytest.stash.StashKey