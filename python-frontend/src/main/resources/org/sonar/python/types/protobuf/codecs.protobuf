
codecscodecsÑ
_Encodercodecs._Encoder"builtins.object2ï
__call__codecs._Encoder.__call__"`
 Tuple[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int*,
self"
codecs._Encoder"codecs._Encoder*/
input$
builtins.unicode"builtins.unicode**
errors
builtins.str"builtins.str z272£
__call__codecs._Encoder.__call__"f
"Tuple[builtins.bytes,builtins.int] 
builtins.bytes"builtins.bytes
builtins.int"builtins.int*,
self"
codecs._Encoder"codecs._Encoder*'
input
builtins.str"builtins.str**
errors
builtins.str"builtins.str z35z36z37z38z39`r27r35r36r37r38r39Ü
_Decodercodecs._Decoder"builtins.object2ô
__call__codecs._Decoder.__call__"l
$Tuple[builtins.unicode,builtins.int]$
builtins.unicode"builtins.unicode
builtins.int"builtins.int*,
self"
codecs._Decoder"codecs._Decoder*'
input
builtins.str"builtins.str**
errors
builtins.str"builtins.str z272°
__call__codecs._Decoder.__call__"`
 Tuple[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int*,
self"
codecs._Decoder"codecs._Decoder*+
input 
builtins.bytes"builtins.bytes**
errors
builtins.str"builtins.str z35z36z37z38z39`r27r35r36r37r38r39Ü
_StreamReadercodecs._StreamReader"builtins.object2ç
__call__codecs._StreamReader.__call__"*
codecs.StreamReader"codecs.StreamReader*6
self,
codecs._StreamReader"codecs._StreamReader*N
streamB
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IO**
errors
builtins.str"builtins.str z272£
__call__codecs._StreamReader.__call__"*
codecs.StreamReader"codecs.StreamReader*6
self,
codecs._StreamReader"codecs._StreamReader*T
streamH
typing.IO[builtins.bytes] 
builtins.bytes"builtins.bytes"	typing.IO**
errors
builtins.str"builtins.str z35z36z37z38z39`r27r35r36r37r38r39Ü
_StreamWritercodecs._StreamWriter"builtins.object2ç
__call__codecs._StreamWriter.__call__"*
codecs.StreamWriter"codecs.StreamWriter*6
self,
codecs._StreamWriter"codecs._StreamWriter*N
streamB
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IO**
errors
builtins.str"builtins.str z272£
__call__codecs._StreamWriter.__call__"*
codecs.StreamWriter"codecs.StreamWriter*6
self,
codecs._StreamWriter"codecs._StreamWriter*T
streamH
typing.IO[builtins.bytes] 
builtins.bytes"builtins.bytes"	typing.IO**
errors
builtins.str"builtins.str z35z36z37z38z39`r27r35r36r37r38r39Œ
_IncrementalEncodercodecs._IncrementalEncoder"builtins.object2Ô
__call__#codecs._IncrementalEncoder.__call__"6
codecs.IncrementalEncoder"codecs.IncrementalEncoder*B
self8
codecs._IncrementalEncoder"codecs._IncrementalEncoder**
errors
builtins.str"builtins.str z27z35z36z37z38z39`r27r35r36r37r38r39Œ
_IncrementalDecodercodecs._IncrementalDecoder"builtins.object2Ô
__call__#codecs._IncrementalDecoder.__call__"6
codecs.IncrementalDecoder"codecs.IncrementalDecoder*B
self8
codecs._IncrementalDecoder"codecs._IncrementalDecoder**
errors
builtins.str"builtins.str z27z35z36z37z38z39`r27r35r36r37r38r39’
	CodecInfocodecs.CodecInfo"builtins.tuple*typing.Sequence*typing.Iterable*typing.Container*typing.Reversible2›
encodecodecs.CodecInfo.encode""
codecs._Encoder"codecs._Encoder*É
self¯
PTuple[codecs._Encoder,codecs._Decoder,codecs._StreamReader,codecs._StreamWriter]"
codecs._Encoder"codecs._Encoder"
codecs._Decoder"codecs._Decoder,
codecs._StreamReader"codecs._StreamReader,
codecs._StreamWriter"codecs._StreamWriter0:property`z272›
decodecodecs.CodecInfo.decode""
codecs._Decoder"codecs._Decoder*É
self¯
PTuple[codecs._Encoder,codecs._Decoder,codecs._StreamReader,codecs._StreamWriter]"
codecs._Encoder"codecs._Encoder"
codecs._Decoder"codecs._Decoder,
codecs._StreamReader"codecs._StreamReader,
codecs._StreamWriter"codecs._StreamWriter0:property`z272Û
streamreadercodecs.CodecInfo.streamreader",
codecs._StreamReader"codecs._StreamReader*É
self¯
PTuple[codecs._Encoder,codecs._Decoder,codecs._StreamReader,codecs._StreamWriter]"
codecs._Encoder"codecs._Encoder"
codecs._Decoder"codecs._Decoder,
codecs._StreamReader"codecs._StreamReader,
codecs._StreamWriter"codecs._StreamWriter0:property`z272Û
streamwritercodecs.CodecInfo.streamwriter",
codecs._StreamWriter"codecs._StreamWriter*É
self¯
PTuple[codecs._Encoder,codecs._Decoder,codecs._StreamReader,codecs._StreamWriter]"
codecs._Encoder"codecs._Encoder"
codecs._Decoder"codecs._Decoder,
codecs._StreamReader"codecs._StreamReader,
codecs._StreamWriter"codecs._StreamWriter0:property`z272ã
incrementalencoder#codecs.CodecInfo.incrementalencoder"8
codecs._IncrementalEncoder"codecs._IncrementalEncoder*É
self¯
PTuple[codecs._Encoder,codecs._Decoder,codecs._StreamReader,codecs._StreamWriter]"
codecs._Encoder"codecs._Encoder"
codecs._Decoder"codecs._Decoder,
codecs._StreamReader"codecs._StreamReader,
codecs._StreamWriter"codecs._StreamWriter0:property`z272ã
incrementaldecoder#codecs.CodecInfo.incrementaldecoder"8
codecs._IncrementalDecoder"codecs._IncrementalDecoder*É
self¯
PTuple[codecs._Encoder,codecs._Decoder,codecs._StreamReader,codecs._StreamWriter]"
codecs._Encoder"codecs._Encoder"
codecs._Decoder"codecs._Decoder,
codecs._StreamReader"codecs._StreamReader,
codecs._StreamWriter"codecs._StreamWriter0:property`z272í
__new__codecs.CodecInfo.__new__"¯
PTuple[codecs._Encoder,codecs._Decoder,codecs._StreamReader,codecs._StreamWriter]"
codecs._Encoder"codecs._Encoder"
codecs._Decoder"codecs._Decoder,
codecs._StreamReader"codecs._StreamReader,
codecs._StreamWriter"codecs._StreamWriter*ﬂ
cls’
VType[Tuple[codecs._Encoder,codecs._Decoder,codecs._StreamReader,codecs._StreamWriter]]¯
PTuple[codecs._Encoder,codecs._Decoder,codecs._StreamReader,codecs._StreamWriter]"
codecs._Encoder"codecs._Encoder"
codecs._Decoder"codecs._Decoder,
codecs._StreamReader"codecs._StreamReader,
codecs._StreamWriter"codecs._StreamWriter*.
encode"
codecs._Encoder"codecs._Encoder*.
decode"
codecs._Decoder"codecs._Decoder*p
streamreader\
 Union[codecs._StreamReader,None],
codecs._StreamReader"codecs._StreamReader
None *p
streamwriter\
 Union[codecs._StreamWriter,None],
codecs._StreamWriter"codecs._StreamWriter
None *à
incrementalencodern
&Union[codecs._IncrementalEncoder,None]8
codecs._IncrementalEncoder"codecs._IncrementalEncoder
None *à
incrementaldecodern
&Union[codecs._IncrementalDecoder,None]8
codecs._IncrementalDecoder"codecs._IncrementalDecoder
None *P
nameD
Union[builtins.str,None]
builtins.str"builtins.str
None *`
_is_text_encodingG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None z27r27Ë
	CodecInfocodecs.CodecInfo"builtins.tuple*typing.Sequence*typing.Collection*typing.Reversible*typing.Iterable*typing.Container2Ì
encodecodecs.CodecInfo.encode""
codecs._Encoder"codecs._Encoder*É
self¯
PTuple[codecs._Encoder,codecs._Decoder,codecs._StreamReader,codecs._StreamWriter]"
codecs._Encoder"codecs._Encoder"
codecs._Decoder"codecs._Decoder,
codecs._StreamReader"codecs._StreamReader,
codecs._StreamWriter"codecs._StreamWriter0:property`z35z36z37z38z392Ì
decodecodecs.CodecInfo.decode""
codecs._Decoder"codecs._Decoder*É
self¯
PTuple[codecs._Encoder,codecs._Decoder,codecs._StreamReader,codecs._StreamWriter]"
codecs._Encoder"codecs._Encoder"
codecs._Decoder"codecs._Decoder,
codecs._StreamReader"codecs._StreamReader,
codecs._StreamWriter"codecs._StreamWriter0:property`z35z36z37z38z392É
streamreadercodecs.CodecInfo.streamreader",
codecs._StreamReader"codecs._StreamReader*É
self¯
PTuple[codecs._Encoder,codecs._Decoder,codecs._StreamReader,codecs._StreamWriter]"
codecs._Encoder"codecs._Encoder"
codecs._Decoder"codecs._Decoder,
codecs._StreamReader"codecs._StreamReader,
codecs._StreamWriter"codecs._StreamWriter0:property`z35z36z37z38z392É
streamwritercodecs.CodecInfo.streamwriter",
codecs._StreamWriter"codecs._StreamWriter*É
self¯
PTuple[codecs._Encoder,codecs._Decoder,codecs._StreamReader,codecs._StreamWriter]"
codecs._Encoder"codecs._Encoder"
codecs._Decoder"codecs._Decoder,
codecs._StreamReader"codecs._StreamReader,
codecs._StreamWriter"codecs._StreamWriter0:property`z35z36z37z38z392õ
incrementalencoder#codecs.CodecInfo.incrementalencoder"8
codecs._IncrementalEncoder"codecs._IncrementalEncoder*É
self¯
PTuple[codecs._Encoder,codecs._Decoder,codecs._StreamReader,codecs._StreamWriter]"
codecs._Encoder"codecs._Encoder"
codecs._Decoder"codecs._Decoder,
codecs._StreamReader"codecs._StreamReader,
codecs._StreamWriter"codecs._StreamWriter0:property`z35z36z37z38z392õ
incrementaldecoder#codecs.CodecInfo.incrementaldecoder"8
codecs._IncrementalDecoder"codecs._IncrementalDecoder*É
self¯
PTuple[codecs._Encoder,codecs._Decoder,codecs._StreamReader,codecs._StreamWriter]"
codecs._Encoder"codecs._Encoder"
codecs._Decoder"codecs._Decoder,
codecs._StreamReader"codecs._StreamReader,
codecs._StreamWriter"codecs._StreamWriter0:property`z35z36z37z38z392¢
__new__codecs.CodecInfo.__new__"¯
PTuple[codecs._Encoder,codecs._Decoder,codecs._StreamReader,codecs._StreamWriter]"
codecs._Encoder"codecs._Encoder"
codecs._Decoder"codecs._Decoder,
codecs._StreamReader"codecs._StreamReader,
codecs._StreamWriter"codecs._StreamWriter*ﬂ
cls’
VType[Tuple[codecs._Encoder,codecs._Decoder,codecs._StreamReader,codecs._StreamWriter]]¯
PTuple[codecs._Encoder,codecs._Decoder,codecs._StreamReader,codecs._StreamWriter]"
codecs._Encoder"codecs._Encoder"
codecs._Decoder"codecs._Decoder,
codecs._StreamReader"codecs._StreamReader,
codecs._StreamWriter"codecs._StreamWriter*.
encode"
codecs._Encoder"codecs._Encoder*.
decode"
codecs._Decoder"codecs._Decoder*p
streamreader\
 Union[codecs._StreamReader,None],
codecs._StreamReader"codecs._StreamReader
None *p
streamwriter\
 Union[codecs._StreamWriter,None],
codecs._StreamWriter"codecs._StreamWriter
None *à
incrementalencodern
&Union[codecs._IncrementalEncoder,None]8
codecs._IncrementalEncoder"codecs._IncrementalEncoder
None *à
incrementaldecodern
&Union[codecs._IncrementalDecoder,None]8
codecs._IncrementalDecoder"codecs._IncrementalDecoder
None *P
nameD
Union[builtins.str,None]
builtins.str"builtins.str
None *`
_is_text_encodingG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None z35z36z37z38z39r35r36r37r38r39à	
Codeccodecs.Codec"builtins.object2à
encodecodecs.Codec.encode"`
 Tuple[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int*&
self
codecs.Codec"codecs.Codec*/
input$
builtins.unicode"builtins.unicode**
errors
builtins.str"builtins.str z272ñ
encodecodecs.Codec.encode"f
"Tuple[builtins.bytes,builtins.int] 
builtins.bytes"builtins.bytes
builtins.int"builtins.int*&
self
codecs.Codec"codecs.Codec*'
input
builtins.str"builtins.str**
errors
builtins.str"builtins.str z35z36z37z38z392å
decodecodecs.Codec.decode"l
$Tuple[builtins.unicode,builtins.int]$
builtins.unicode"builtins.unicode
builtins.int"builtins.int*&
self
codecs.Codec"codecs.Codec*'
input
builtins.str"builtins.str**
errors
builtins.str"builtins.str z272î
decodecodecs.Codec.decode"`
 Tuple[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int*&
self
codecs.Codec"codecs.Codec*+
input 
builtins.bytes"builtins.bytes**
errors
builtins.str"builtins.str z35z36z37z38z39r27r35r36r37r38r39Ä
IncrementalEncodercodecs.IncrementalEncoder"builtins.object2æ
__init__"codecs.IncrementalEncoder.__init__"
None*@
self6
codecs.IncrementalEncoder"codecs.IncrementalEncoder**
errors
builtins.str"builtins.str z27z35z36z37z38z392Ä
encode codecs.IncrementalEncoder.encode"
builtins.str"builtins.str*@
self6
codecs.IncrementalEncoder"codecs.IncrementalEncoder*/
input$
builtins.unicode"builtins.unicode*+
final
builtins.bool"builtins.bool 0:abstractmethod@z272å
encode codecs.IncrementalEncoder.encode" 
builtins.bytes"builtins.bytes*@
self6
codecs.IncrementalEncoder"codecs.IncrementalEncoder*'
input
builtins.str"builtins.str*+
final
builtins.bool"builtins.bool 0:abstractmethod@z35z36z37z38z392å
resetcodecs.IncrementalEncoder.reset"
None*@
self6
codecs.IncrementalEncoder"codecs.IncrementalEncoderz27z35z36z37z38z392‚
getstate"codecs.IncrementalEncoder.getstate"l
$Union[builtins.int,builtins.unicode]
builtins.int"builtins.int$
builtins.unicode"builtins.unicode*@
self6
codecs.IncrementalEncoder"codecs.IncrementalEncoderz272Ê
getstate"codecs.IncrementalEncoder.getstate"`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str*@
self6
codecs.IncrementalEncoder"codecs.IncrementalEncoderz35z36z37z38z392˜
setstate"codecs.IncrementalEncoder.setstate"
None*@
self6
codecs.IncrementalEncoder"codecs.IncrementalEncoder*w
statel
$Union[builtins.int,builtins.unicode]
builtins.int"builtins.int$
builtins.unicode"builtins.unicodez272˚
setstate"codecs.IncrementalEncoder.setstate"
None*@
self6
codecs.IncrementalEncoder"codecs.IncrementalEncoder*k
state`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.strz35z36z37z38z39r27r35r36r37r38r39Ù
IncrementalDecodercodecs.IncrementalDecoder"builtins.object2æ
__init__"codecs.IncrementalDecoder.__init__"
None*@
self6
codecs.IncrementalDecoder"codecs.IncrementalDecoder**
errors
builtins.str"builtins.str z27z35z36z37z38z392Ä
decode codecs.IncrementalDecoder.decode"$
builtins.unicode"builtins.unicode*@
self6
codecs.IncrementalDecoder"codecs.IncrementalDecoder*'
input
builtins.str"builtins.str*+
final
builtins.bool"builtins.bool 0:abstractmethod@z272å
decode codecs.IncrementalDecoder.decode"
builtins.str"builtins.str*@
self6
codecs.IncrementalDecoder"codecs.IncrementalDecoder*+
input 
builtins.bytes"builtins.bytes*+
final
builtins.bool"builtins.bool 0:abstractmethod@z35z36z37z38z392å
resetcodecs.IncrementalDecoder.reset"
None*@
self6
codecs.IncrementalDecoder"codecs.IncrementalDecoderz27z35z36z37z38z392÷
getstate"codecs.IncrementalDecoder.getstate"`
 Tuple[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int*@
self6
codecs.IncrementalDecoder"codecs.IncrementalDecoderz272Ï
getstate"codecs.IncrementalDecoder.getstate"f
"Tuple[builtins.bytes,builtins.int] 
builtins.bytes"builtins.bytes
builtins.int"builtins.int*@
self6
codecs.IncrementalDecoder"codecs.IncrementalDecoderz35z36z37z38z392Î
setstate"codecs.IncrementalDecoder.setstate"
None*@
self6
codecs.IncrementalDecoder"codecs.IncrementalDecoder*k
state`
 Tuple[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.intz272Å
setstate"codecs.IncrementalDecoder.setstate"
None*@
self6
codecs.IncrementalDecoder"codecs.IncrementalDecoder*q
statef
"Tuple[builtins.bytes,builtins.int] 
builtins.bytes"builtins.bytes
builtins.int"builtins.intz35z36z37z38z39r27r35r36r37r38r39ó
BufferedIncrementalEncoder!codecs.BufferedIncrementalEncoder"codecs.IncrementalEncoder2÷
__init__*codecs.BufferedIncrementalEncoder.__init__"
None*P
selfF
!codecs.BufferedIncrementalEncoder"!codecs.BufferedIncrementalEncoder**
errors
builtins.str"builtins.str z27z35z36z37z38z392–
_buffer_encode0codecs.BufferedIncrementalEncoder._buffer_encode"
builtins.str"builtins.str*P
selfF
!codecs.BufferedIncrementalEncoder"!codecs.BufferedIncrementalEncoder*/
input$
builtins.unicode"builtins.unicode*(
errors
builtins.str"builtins.str*)
final
builtins.bool"builtins.bool0:abstractmethod@z272‹
_buffer_encode0codecs.BufferedIncrementalEncoder._buffer_encode" 
builtins.bytes"builtins.bytes*P
selfF
!codecs.BufferedIncrementalEncoder"!codecs.BufferedIncrementalEncoder*'
input
builtins.str"builtins.str*(
errors
builtins.str"builtins.str*)
final
builtins.bool"builtins.bool0:abstractmethod@z35z36z37z38z392Ñ
encode(codecs.BufferedIncrementalEncoder.encode"
builtins.str"builtins.str*P
selfF
!codecs.BufferedIncrementalEncoder"!codecs.BufferedIncrementalEncoder*/
input$
builtins.unicode"builtins.unicode*+
final
builtins.bool"builtins.bool z272ê
encode(codecs.BufferedIncrementalEncoder.encode" 
builtins.bytes"builtins.bytes*P
selfF
!codecs.BufferedIncrementalEncoder"!codecs.BufferedIncrementalEncoder*'
input
builtins.str"builtins.str*+
final
builtins.bool"builtins.bool z35z36z37z38z39r27r35r36r37r38r39£
BufferedIncrementalDecoder!codecs.BufferedIncrementalDecoder"codecs.IncrementalDecoder2÷
__init__*codecs.BufferedIncrementalDecoder.__init__"
None*P
selfF
!codecs.BufferedIncrementalDecoder"!codecs.BufferedIncrementalDecoder**
errors
builtins.str"builtins.str z27z35z36z37z38z392ò
_buffer_decode0codecs.BufferedIncrementalDecoder._buffer_decode"l
$Tuple[builtins.unicode,builtins.int]$
builtins.unicode"builtins.unicode
builtins.int"builtins.int*P
selfF
!codecs.BufferedIncrementalDecoder"!codecs.BufferedIncrementalDecoder*'
input
builtins.str"builtins.str*(
errors
builtins.str"builtins.str*)
final
builtins.bool"builtins.bool0:abstractmethod@z272†
_buffer_decode0codecs.BufferedIncrementalDecoder._buffer_decode"`
 Tuple[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int*P
selfF
!codecs.BufferedIncrementalDecoder"!codecs.BufferedIncrementalDecoder*+
input 
builtins.bytes"builtins.bytes*(
errors
builtins.str"builtins.str*)
final
builtins.bool"builtins.bool0:abstractmethod@z35z36z37z38z392Ñ
decode(codecs.BufferedIncrementalDecoder.decode"$
builtins.unicode"builtins.unicode*P
selfF
!codecs.BufferedIncrementalDecoder"!codecs.BufferedIncrementalDecoder*'
input
builtins.str"builtins.str*+
final
builtins.bool"builtins.bool z272ê
decode(codecs.BufferedIncrementalDecoder.decode"
builtins.str"builtins.str*P
selfF
!codecs.BufferedIncrementalDecoder"!codecs.BufferedIncrementalDecoder*+
input 
builtins.bytes"builtins.bytes*+
final
builtins.bool"builtins.bool z35z36z37z38z39r27r35r36r37r38r39’
StreamWritercodecs.StreamWriter"codecs.Codec2Ë
__init__codecs.StreamWriter.__init__"
None*4
self*
codecs.StreamWriter"codecs.StreamWriter*N
streamB
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IO**
errors
builtins.str"builtins.str z272˛
__init__codecs.StreamWriter.__init__"
None*4
self*
codecs.StreamWriter"codecs.StreamWriter*T
streamH
typing.IO[builtins.bytes] 
builtins.bytes"builtins.bytes"	typing.IO**
errors
builtins.str"builtins.str z35z36z37z38z392ò
writecodecs.StreamWriter.write"
None*4
self*
codecs.StreamWriter"codecs.StreamWriter*0
object$
builtins.unicode"builtins.unicodez272†
writecodecs.StreamWriter.write"
None*4
self*
codecs.StreamWriter"codecs.StreamWriter*(
object
builtins.str"builtins.strz35z36z37z38z392÷

writelinescodecs.StreamWriter.writelines"
None*4
self*
codecs.StreamWriter"codecs.StreamWriter*d
listZ
!typing.Iterable[builtins.unicode]$
builtins.unicode"builtins.unicode"typing.Iterablez272⁄

writelinescodecs.StreamWriter.writelines"
None*4
self*
codecs.StreamWriter"codecs.StreamWriter*X
listN
typing.Iterable[builtins.str]
builtins.str"builtins.str"typing.Iterablez35z36z37z38z392z
resetcodecs.StreamWriter.reset"
None*4
self*
codecs.StreamWriter"codecs.StreamWriterz27z35z36z37z38z392V
	__enter__codecs.StreamWriter.__enter__"

codecs._SW*
self

codecs._SWz272n
	__enter__codecs.StreamWriter.__enter__"
_typeshed.Self*
self
_typeshed.Selfz35z36z37z38z392ﬂ
__exit__codecs.StreamWriter.__exit__"
None*2
self*
codecs.StreamWriter"codecs.StreamWriter*í
typä
(Union[Type[builtins.BaseException],None]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException
None*i
excb
"Union[builtins.BaseException,None]0
builtins.BaseException"builtins.BaseException
None*_
tbY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
Nonez27z35z36z37z38z392É
__getattr__codecs.StreamWriter.__getattr__"
Any*2
self*
codecs.StreamWriter"codecs.StreamWriter*$
name
builtins.str"builtins.str*X
getattrK
CallableType[builtins.function]&
builtins.function"builtins.function z27z35z36z37z38z39r27r35r36r37r38r39≠
StreamReadercodecs.StreamReader"codecs.Codec2Ë
__init__codecs.StreamReader.__init__"
None*4
self*
codecs.StreamReader"codecs.StreamReader*N
streamB
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IO**
errors
builtins.str"builtins.str z272˛
__init__codecs.StreamReader.__init__"
None*4
self*
codecs.StreamReader"codecs.StreamReader*T
streamH
typing.IO[builtins.bytes] 
builtins.bytes"builtins.bytes"	typing.IO**
errors
builtins.str"builtins.str z35z36z37z38z392Ü
readcodecs.StreamReader.read"$
builtins.unicode"builtins.unicode*4
self*
codecs.StreamReader"codecs.StreamReader*(
size
builtins.int"builtins.int *)
chars
builtins.int"builtins.int */
	firstline
builtins.bool"builtins.bool z272é
readcodecs.StreamReader.read"
builtins.str"builtins.str*4
self*
codecs.StreamReader"codecs.StreamReader*(
size
builtins.int"builtins.int *)
chars
builtins.int"builtins.int */
	firstline
builtins.bool"builtins.bool z35z36z37z38z392ä
readlinecodecs.StreamReader.readline"$
builtins.unicode"builtins.unicode*4
self*
codecs.StreamReader"codecs.StreamReader*P
sizeD
Union[builtins.int,None]
builtins.int"builtins.int
None *.
keepends
builtins.bool"builtins.bool z272í
readlinecodecs.StreamReader.readline"
builtins.str"builtins.str*4
self*
codecs.StreamReader"codecs.StreamReader*P
sizeD
Union[builtins.int,None]
builtins.int"builtins.int
None *.
keepends
builtins.bool"builtins.bool z35z36z37z38z392¬
	readlinescodecs.StreamReader.readlines"V
builtins.list[builtins.unicode]$
builtins.unicode"builtins.unicode"builtins.list*4
self*
codecs.StreamReader"codecs.StreamReader*T
sizehintD
Union[builtins.int,None]
builtins.int"builtins.int
None *.
keepends
builtins.bool"builtins.bool z272∆
	readlinescodecs.StreamReader.readlines"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*4
self*
codecs.StreamReader"codecs.StreamReader*T
sizehintD
Union[builtins.int,None]
builtins.int"builtins.int
None *.
keepends
builtins.bool"builtins.bool z35z36z37z38z392z
resetcodecs.StreamReader.reset"
None*4
self*
codecs.StreamReader"codecs.StreamReaderz27z35z36z37z38z392V
	__enter__codecs.StreamReader.__enter__"

codecs._SR*
self

codecs._SRz272n
	__enter__codecs.StreamReader.__enter__"
_typeshed.Self*
self
_typeshed.Selfz35z36z37z38z392ﬂ
__exit__codecs.StreamReader.__exit__"
None*2
self*
codecs.StreamReader"codecs.StreamReader*í
typä
(Union[Type[builtins.BaseException],None]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException
None*i
excb
"Union[builtins.BaseException,None]0
builtins.BaseException"builtins.BaseException
None*_
tbY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
Nonez27z35z36z37z38z392º
__iter__codecs.StreamReader.__iter__"Z
!typing.Iterator[builtins.unicode]$
builtins.unicode"builtins.unicode"typing.Iterator*2
self*
codecs.StreamReader"codecs.StreamReaderz272¿
__iter__codecs.StreamReader.__iter__"N
typing.Iterator[builtins.str]
builtins.str"builtins.str"typing.Iterator*2
self*
codecs.StreamReader"codecs.StreamReaderz35z36z37z38z392É
__getattr__codecs.StreamReader.__getattr__"
Any*2
self*
codecs.StreamReader"codecs.StreamReader*$
name
builtins.str"builtins.str*X
getattrK
CallableType[builtins.function]&
builtins.function"builtins.function z27z35z36z37z38z39r27r35r36r37r38r39“2
StreamReaderWritercodecs.StreamReaderWriter"typing.TextIO*	typing.IO*typing.Iterator*typing.Iterable2Ó
__init__"codecs.StreamReaderWriter.__init__"
None*@
self6
codecs.StreamReaderWriter"codecs.StreamReaderWriter*N
streamB
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IO*8
Reader,
codecs._StreamReader"codecs._StreamReader*8
Writer,
codecs._StreamWriter"codecs._StreamWriter**
errors
builtins.str"builtins.str z272Ñ
__init__"codecs.StreamReaderWriter.__init__"
None*@
self6
codecs.StreamReaderWriter"codecs.StreamReaderWriter*T
streamH
typing.IO[builtins.bytes] 
builtins.bytes"builtins.bytes"	typing.IO*8
Reader,
codecs._StreamReader"codecs._StreamReader*8
Writer,
codecs._StreamWriter"codecs._StreamWriter**
errors
builtins.str"builtins.str z35z36z37z38z392º
readcodecs.StreamReaderWriter.read"$
builtins.unicode"builtins.unicode*@
self6
codecs.StreamReaderWriter"codecs.StreamReaderWriter*(
size
builtins.int"builtins.int z272ƒ
readcodecs.StreamReaderWriter.read"
builtins.str"builtins.str*@
self6
codecs.StreamReaderWriter"codecs.StreamReaderWriter*(
size
builtins.int"builtins.int z35z36z37z38z392Ï
readline"codecs.StreamReaderWriter.readline"$
builtins.unicode"builtins.unicode*@
self6
codecs.StreamReaderWriter"codecs.StreamReaderWriter*P
sizeD
Union[builtins.int,None]
builtins.int"builtins.int
None z272Ù
readline"codecs.StreamReaderWriter.readline"
builtins.str"builtins.str*@
self6
codecs.StreamReaderWriter"codecs.StreamReaderWriter*P
sizeD
Union[builtins.int,None]
builtins.int"builtins.int
None z35z36z37z38z392§
	readlines#codecs.StreamReaderWriter.readlines"V
builtins.list[builtins.unicode]$
builtins.unicode"builtins.unicode"builtins.list*@
self6
codecs.StreamReaderWriter"codecs.StreamReaderWriter*T
sizehintD
Union[builtins.int,None]
builtins.int"builtins.int
None z272®
	readlines#codecs.StreamReaderWriter.readlines"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*@
self6
codecs.StreamReaderWriter"codecs.StreamReaderWriter*T
sizehintD
Union[builtins.int,None]
builtins.int"builtins.int
None z35z36z37z38z392í
nextcodecs.StreamReaderWriter.next"$
builtins.unicode"builtins.unicode*@
self6
codecs.StreamReaderWriter"codecs.StreamReaderWriterz272l
__iter__"codecs.StreamReaderWriter.__iter__"
	codecs._T*
self
	codecs._Tz27z35z36z37z38z392º
writecodecs.StreamReaderWriter.write"
builtins.int"builtins.int*@
self6
codecs.StreamReaderWriter"codecs.StreamReaderWriter*.
data$
builtins.unicode"builtins.unicodez272ƒ
writecodecs.StreamReaderWriter.write"
builtins.int"builtins.int*@
self6
codecs.StreamReaderWriter"codecs.StreamReaderWriter*&
data
builtins.str"builtins.strz35z36z37z38z392Ë

writelines$codecs.StreamReaderWriter.writelines"
None*@
self6
codecs.StreamReaderWriter"codecs.StreamReaderWriter*d
listZ
!typing.Iterable[builtins.unicode]$
builtins.unicode"builtins.unicode"typing.Iterablez272Ï

writelines$codecs.StreamReaderWriter.writelines"
None*@
self6
codecs.StreamReaderWriter"codecs.StreamReaderWriter*X
listN
typing.Iterable[builtins.str]
builtins.str"builtins.str"typing.Iterablez35z36z37z38z392å
resetcodecs.StreamReaderWriter.reset"
None*@
self6
codecs.StreamReaderWriter"codecs.StreamReaderWriterz27z35z36z37z38z392Ù
seekcodecs.StreamReaderWriter.seek"
builtins.int"builtins.int*@
self6
codecs.StreamReaderWriter"codecs.StreamReaderWriter*(
offset
builtins.int"builtins.int**
whence
builtins.int"builtins.int z27z35z36z37z38z392Z
	__enter__#codecs.StreamReaderWriter.__enter__"
	codecs._T*
self
	codecs._Tz272t
	__enter__#codecs.StreamReaderWriter.__enter__"
_typeshed.Self*
self
_typeshed.Selfz35z36z37z38z392Ò
__exit__"codecs.StreamReaderWriter.__exit__"
None*>
self6
codecs.StreamReaderWriter"codecs.StreamReaderWriter*í
typä
(Union[Type[builtins.BaseException],None]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException
None*i
excb
"Union[builtins.BaseException,None]0
builtins.BaseException"builtins.BaseException
None*_
tbY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
Nonez27z35z36z37z38z392ª
__getattr__%codecs.StreamReaderWriter.__getattr__"
Any*>
self6
codecs.StreamReaderWriter"codecs.StreamReaderWriter*$
name
builtins.str"builtins.strz27z35z36z37z38z392å
closecodecs.StreamReaderWriter.close"
None*@
self6
codecs.StreamReaderWriter"codecs.StreamReaderWriterz27z35z36z37z38z392¢
fileno codecs.StreamReaderWriter.fileno"
builtins.int"builtins.int*@
self6
codecs.StreamReaderWriter"codecs.StreamReaderWriterz27z35z36z37z38z392å
flushcodecs.StreamReaderWriter.flush"
None*@
self6
codecs.StreamReaderWriter"codecs.StreamReaderWriterz27z35z36z37z38z392§
isatty codecs.StreamReaderWriter.isatty"
builtins.bool"builtins.bool*@
self6
codecs.StreamReaderWriter"codecs.StreamReaderWriterz27z35z36z37z38z392®
readable"codecs.StreamReaderWriter.readable"
builtins.bool"builtins.bool*@
self6
codecs.StreamReaderWriter"codecs.StreamReaderWriterz27z35z36z37z38z392¯
truncate"codecs.StreamReaderWriter.truncate"
builtins.int"builtins.int*@
self6
codecs.StreamReaderWriter"codecs.StreamReaderWriter*P
sizeD
Union[builtins.int,None]
builtins.int"builtins.int
None z27z35z36z37z38z392®
seekable"codecs.StreamReaderWriter.seekable"
builtins.bool"builtins.bool*@
self6
codecs.StreamReaderWriter"codecs.StreamReaderWriterz27z35z36z37z38z392û
tellcodecs.StreamReaderWriter.tell"
builtins.int"builtins.int*@
self6
codecs.StreamReaderWriter"codecs.StreamReaderWriterz27z35z36z37z38z392®
writable"codecs.StreamReaderWriter.writable"
builtins.bool"builtins.bool*@
self6
codecs.StreamReaderWriter"codecs.StreamReaderWriterz27z35z36z37z38z392¢
__next__"codecs.StreamReaderWriter.__next__"
builtins.str"builtins.str*@
self6
codecs.StreamReaderWriter"codecs.StreamReaderWriterz35z36z37z38z39r27r35r36r37r38r39˘0
StreamRecodercodecs.StreamRecoder"typing.BinaryIO*	typing.IO*typing.Iterator*typing.Iterable2ø
__init__codecs.StreamRecoder.__init__"
None*6
self,
codecs.StreamRecoder"codecs.StreamRecoder*N
streamB
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IO*.
encode"
codecs._Encoder"codecs._Encoder*.
decode"
codecs._Decoder"codecs._Decoder*8
Reader,
codecs._StreamReader"codecs._StreamReader*8
Writer,
codecs._StreamWriter"codecs._StreamWriter**
errors
builtins.str"builtins.str z272’
__init__codecs.StreamRecoder.__init__"
None*6
self,
codecs.StreamRecoder"codecs.StreamRecoder*T
streamH
typing.IO[builtins.bytes] 
builtins.bytes"builtins.bytes"	typing.IO*.
encode"
codecs._Encoder"codecs._Encoder*.
decode"
codecs._Decoder"codecs._Decoder*8
Reader,
codecs._StreamReader"codecs._StreamReader*8
Writer,
codecs._StreamWriter"codecs._StreamWriter**
errors
builtins.str"builtins.str z35z36z37z38z392•
readcodecs.StreamRecoder.read"
builtins.str"builtins.str*6
self,
codecs.StreamRecoder"codecs.StreamRecoder*(
size
builtins.int"builtins.int z272π
readcodecs.StreamRecoder.read" 
builtins.bytes"builtins.bytes*6
self,
codecs.StreamRecoder"codecs.StreamRecoder*(
size
builtins.int"builtins.int z35z36z37z38z392’
readlinecodecs.StreamRecoder.readline"
builtins.str"builtins.str*6
self,
codecs.StreamRecoder"codecs.StreamRecoder*P
sizeD
Union[builtins.int,None]
builtins.int"builtins.int
None z272È
readlinecodecs.StreamRecoder.readline" 
builtins.bytes"builtins.bytes*6
self,
codecs.StreamRecoder"codecs.StreamRecoder*P
sizeD
Union[builtins.int,None]
builtins.int"builtins.int
None z35z36z37z38z392â
	readlinescodecs.StreamRecoder.readlines"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*6
self,
codecs.StreamRecoder"codecs.StreamRecoder*T
sizehintD
Union[builtins.int,None]
builtins.int"builtins.int
None z272ü
	readlinescodecs.StreamRecoder.readlines"P
builtins.list[builtins.bytes] 
builtins.bytes"builtins.bytes"builtins.list*6
self,
codecs.StreamRecoder"codecs.StreamRecoder*T
sizehintD
Union[builtins.int,None]
builtins.int"builtins.int
None z35z36z37z38z392{
nextcodecs.StreamRecoder.next"
builtins.str"builtins.str*6
self,
codecs.StreamRecoder"codecs.StreamRecoderz272k
__iter__codecs.StreamRecoder.__iter__"
codecs._SRT*
self
codecs._SRTz27z35z36z37z38z392•
writecodecs.StreamRecoder.write"
builtins.int"builtins.int*6
self,
codecs.StreamRecoder"codecs.StreamRecoder*&
data
builtins.str"builtins.strz272π
writecodecs.StreamRecoder.write"
builtins.int"builtins.int*6
self,
codecs.StreamRecoder"codecs.StreamRecoder**
data 
builtins.bytes"builtins.bytesz35z36z37z38z392·

writelinescodecs.StreamRecoder.writelines"
builtins.int"builtins.int*6
self,
codecs.StreamRecoder"codecs.StreamRecoder*X
listN
typing.Iterable[builtins.str]
builtins.str"builtins.str"typing.Iterablez272˜

writelinescodecs.StreamRecoder.writelines"
builtins.int"builtins.int*6
self,
codecs.StreamRecoder"codecs.StreamRecoder*^
listT
typing.Iterable[builtins.bytes] 
builtins.bytes"builtins.bytes"typing.Iterablez35z36z37z38z392}
resetcodecs.StreamRecoder.reset"
None*6
self,
codecs.StreamRecoder"codecs.StreamRecoderz27z35z36z37z38z392¨
__getattr__ codecs.StreamRecoder.__getattr__"
Any*4
self,
codecs.StreamRecoder"codecs.StreamRecoder*$
name
builtins.str"builtins.strz27z35z36z37z38z392Y
	__enter__codecs.StreamRecoder.__enter__"
codecs._SRT*
self
codecs._SRTz272o
	__enter__codecs.StreamRecoder.__enter__"
_typeshed.Self*
self
_typeshed.Selfz35z36z37z38z392Â
__exit__codecs.StreamRecoder.__exit__"
None*4
self,
codecs.StreamRecoder"codecs.StreamRecoder*ì
typeä
(Union[Type[builtins.BaseException],None]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException
None*k
valueb
"Union[builtins.BaseException,None]0
builtins.BaseException"builtins.BaseException
None*_
tbY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
Nonez27z35z36z37z38z392Â
seekcodecs.StreamRecoder.seek"
builtins.int"builtins.int*6
self,
codecs.StreamRecoder"codecs.StreamRecoder*(
offset
builtins.int"builtins.int**
whence
builtins.int"builtins.int z27z35z36z37z38z392}
closecodecs.StreamRecoder.close"
None*6
self,
codecs.StreamRecoder"codecs.StreamRecoderz27z35z36z37z38z392ì
filenocodecs.StreamRecoder.fileno"
builtins.int"builtins.int*6
self,
codecs.StreamRecoder"codecs.StreamRecoderz27z35z36z37z38z392}
flushcodecs.StreamRecoder.flush"
None*6
self,
codecs.StreamRecoder"codecs.StreamRecoderz27z35z36z37z38z392ï
isattycodecs.StreamRecoder.isatty"
builtins.bool"builtins.bool*6
self,
codecs.StreamRecoder"codecs.StreamRecoderz27z35z36z37z38z392ô
readablecodecs.StreamRecoder.readable"
builtins.bool"builtins.bool*6
self,
codecs.StreamRecoder"codecs.StreamRecoderz27z35z36z37z38z392È
truncatecodecs.StreamRecoder.truncate"
builtins.int"builtins.int*6
self,
codecs.StreamRecoder"codecs.StreamRecoder*P
sizeD
Union[builtins.int,None]
builtins.int"builtins.int
None z27z35z36z37z38z392ô
seekablecodecs.StreamRecoder.seekable"
builtins.bool"builtins.bool*6
self,
codecs.StreamRecoder"codecs.StreamRecoderz27z35z36z37z38z392è
tellcodecs.StreamRecoder.tell"
builtins.int"builtins.int*6
self,
codecs.StreamRecoder"codecs.StreamRecoderz27z35z36z37z38z392ô
writablecodecs.StreamRecoder.writable"
builtins.bool"builtins.bool*6
self,
codecs.StreamRecoder"codecs.StreamRecoderz27z35z36z37z38z392ó
__next__codecs.StreamRecoder.__next__" 
builtins.bytes"builtins.bytes*6
self,
codecs.StreamRecoder"codecs.StreamRecoderz35z36z37z38z39r27r35r36r37r38r39"÷
lookupcodecs.lookup"¯
PTuple[codecs._Encoder,codecs._Decoder,codecs._StreamReader,codecs._StreamWriter]"
codecs._Encoder"codecs._Encoder"
codecs._Decoder"codecs._Decoder,
codecs._StreamReader"codecs._StreamReader,
codecs._StreamWriter"codecs._StreamWriter**

__encoding
builtins.str"builtins.strz27z35z36z37z38z39"∆
utf_16_be_decodecodecs.utf_16_be_decode"l
$Tuple[builtins.unicode,builtins.int]$
builtins.unicode"builtins.unicode
builtins.int"builtins.int*&
__data
builtins.str"builtins.str*R
__errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None *+
__final
builtins.bool"builtins.bool z27"Œ
utf_16_be_decodecodecs.utf_16_be_decode"`
 Tuple[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int**
__data 
builtins.bytes"builtins.bytes*R
__errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None *+
__final
builtins.bool"builtins.bool z35z36z37z38z39"î
utf_16_be_encodecodecs.utf_16_be_encode"`
 Tuple[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int*-
__str$
builtins.unicode"builtins.unicode*R
__errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None z27"¢
utf_16_be_encodecodecs.utf_16_be_encode"f
"Tuple[builtins.bytes,builtins.int] 
builtins.bytes"builtins.bytes
builtins.int"builtins.int*%
__str
builtins.str"builtins.str*R
__errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None z35z36z37z38z39"á

getencodercodecs.getencoder""
codecs._Encoder"codecs._Encoder**
encoding
builtins.str"builtins.strz27z35z36z37z38z39"á

getdecodercodecs.getdecoder""
codecs._Decoder"codecs._Decoder**
encoding
builtins.str"builtins.strz27z35z36z37z38z39"≥
getincrementalencodercodecs.getincrementalencoder"8
codecs._IncrementalEncoder"codecs._IncrementalEncoder**
encoding
builtins.str"builtins.strz27z35z36z37z38z39"≥
getincrementaldecodercodecs.getincrementaldecoder"8
codecs._IncrementalDecoder"codecs._IncrementalDecoder**
encoding
builtins.str"builtins.strz27z35z36z37z38z39"è
	getreadercodecs.getreader",
codecs._StreamReader"codecs._StreamReader**
encoding
builtins.str"builtins.strz27z35z36z37z38z39"è
	getwritercodecs.getwriter",
codecs._StreamWriter"codecs._StreamWriter**
encoding
builtins.str"builtins.strz27z35z36z37z38z39"ü
registercodecs.register"
None*`
__search_functionK
CallableType[builtins.function]&
builtins.function"builtins.functionz27z35z36z37z38z39"Í
opencodecs.open"6
codecs.StreamReaderWriter"codecs.StreamReaderWriter**
filename
builtins.str"builtins.str*(
mode
builtins.str"builtins.str *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None **
errors
builtins.str"builtins.str *-
	buffering
builtins.int"builtins.int z27z35z36z37z38z39"Ÿ
EncodedFilecodecs.EncodedFile",
codecs.StreamRecoder"codecs.StreamRecoder*L
fileB
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IO*/
data_encoding
builtins.str"builtins.str*Y
file_encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None **
errors
builtins.str"builtins.str z27"Ô
EncodedFilecodecs.EncodedFile",
codecs.StreamRecoder"codecs.StreamRecoder*R
fileH
typing.IO[builtins.bytes] 
builtins.bytes"builtins.bytes"	typing.IO*/
data_encoding
builtins.str"builtins.str*Y
file_encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None **
errors
builtins.str"builtins.str z35z36z37z38z39"’

iterencodecodecs.iterencode"n
(typing.Generator[builtins.str,None,None]
builtins.str"builtins.str
None
None"typing.Generator*h
iteratorZ
!typing.Iterable[builtins.unicode]$
builtins.unicode"builtins.unicode"typing.Iterable**
encoding
builtins.str"builtins.str**
errors
builtins.str"builtins.str z27"ﬂ

iterencodecodecs.iterencode"t
*typing.Generator[builtins.bytes,None,None] 
builtins.bytes"builtins.bytes
None
None"typing.Generator*\
iteratorN
typing.Iterable[builtins.str]
builtins.str"builtins.str"typing.Iterable**
encoding
builtins.str"builtins.str**
errors
builtins.str"builtins.str z35z36z37z38z39"’

iterdecodecodecs.iterdecode"z
,typing.Generator[builtins.unicode,None,None]$
builtins.unicode"builtins.unicode
None
None"typing.Generator*\
iteratorN
typing.Iterable[builtins.str]
builtins.str"builtins.str"typing.Iterable**
encoding
builtins.str"builtins.str**
errors
builtins.str"builtins.str z27"ﬂ

iterdecodecodecs.iterdecode"n
(typing.Generator[builtins.str,None,None]
builtins.str"builtins.str
None
None"typing.Generator*b
iteratorT
typing.Iterable[builtins.bytes] 
builtins.bytes"builtins.bytes"typing.Iterable**
encoding
builtins.str"builtins.str**
errors
builtins.str"builtins.str z35z36z37z38z39"Õ
register_errorcodecs.register_error"
None*(
__errors
builtins.str"builtins.str*X
	__handlerK
CallableType[builtins.function]&
builtins.function"builtins.functionz27z35z36z37z38z39"∞
lookup_errorcodecs.lookup_error"K
CallableType[builtins.function]&
builtins.function"builtins.function*&
__name
builtins.str"builtins.strz27z35z36z37z38z39"£
strict_errorscodecs.strict_errors"∏
4Tuple[Union[builtins.str,builtins.str],builtins.int]`
 Union[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.int"builtins.int*=
	exception.
builtins.UnicodeError"builtins.UnicodeErrorz27"ª
strict_errorscodecs.strict_errors"¿
6Tuple[Union[builtins.str,builtins.bytes],builtins.int]f
"Union[builtins.str,builtins.bytes]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
builtins.int"builtins.int*=
	exception.
builtins.UnicodeError"builtins.UnicodeErrorz35z36z37z38z39"•
replace_errorscodecs.replace_errors"∏
4Tuple[Union[builtins.str,builtins.str],builtins.int]`
 Union[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.int"builtins.int*=
	exception.
builtins.UnicodeError"builtins.UnicodeErrorz27"Ω
replace_errorscodecs.replace_errors"¿
6Tuple[Union[builtins.str,builtins.bytes],builtins.int]f
"Union[builtins.str,builtins.bytes]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
builtins.int"builtins.int*=
	exception.
builtins.UnicodeError"builtins.UnicodeErrorz35z36z37z38z39"£
ignore_errorscodecs.ignore_errors"∏
4Tuple[Union[builtins.str,builtins.str],builtins.int]`
 Union[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.int"builtins.int*=
	exception.
builtins.UnicodeError"builtins.UnicodeErrorz27"ª
ignore_errorscodecs.ignore_errors"¿
6Tuple[Union[builtins.str,builtins.bytes],builtins.int]f
"Union[builtins.str,builtins.bytes]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
builtins.int"builtins.int*=
	exception.
builtins.UnicodeError"builtins.UnicodeErrorz35z36z37z38z39"π
xmlcharrefreplace_errorscodecs.xmlcharrefreplace_errors"∏
4Tuple[Union[builtins.str,builtins.str],builtins.int]`
 Union[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.int"builtins.int*=
	exception.
builtins.UnicodeError"builtins.UnicodeErrorz27"—
xmlcharrefreplace_errorscodecs.xmlcharrefreplace_errors"¿
6Tuple[Union[builtins.str,builtins.bytes],builtins.int]f
"Union[builtins.str,builtins.bytes]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
builtins.int"builtins.int*=
	exception.
builtins.UnicodeError"builtins.UnicodeErrorz35z36z37z38z39"∑
backslashreplace_errorscodecs.backslashreplace_errors"∏
4Tuple[Union[builtins.str,builtins.str],builtins.int]`
 Union[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.int"builtins.int*=
	exception.
builtins.UnicodeError"builtins.UnicodeErrorz27"œ
backslashreplace_errorscodecs.backslashreplace_errors"¿
6Tuple[Union[builtins.str,builtins.bytes],builtins.int]f
"Union[builtins.str,builtins.bytes]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
builtins.int"builtins.int*=
	exception.
builtins.UnicodeError"builtins.UnicodeErrorz35z36z37z38z39*ù
encodecodecs.encodeª
encodecodecs.encode"
builtins.str"builtins.str*%
obj
builtins.str"builtins.str*¢
encodingì
ÒTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]˚	
ÊUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"codecs._BytesToBytesEncodingT**
errors
builtins.str"builtins.str 0:overloadXÚ
encodecodecs.encode"
builtins.str"builtins.str*%
obj
builtins.str"builtins.str*Ÿ
encoding»
:Union[Literal[builtins.unicode],Literal[builtins.unicode]]C
Literal[builtins.unicode]	$
builtins.unicode"builtins.unicodeC
Literal[builtins.unicode]	$
builtins.unicode"builtins.unicode **
errors
builtins.str"builtins.str 0:overloadXÃ
encodecodecs.encode"
builtins.str"builtins.str*-
obj$
builtins.unicode"builtins.unicode*,
encoding
builtins.str"builtins.str **
errors
builtins.str"builtins.str 0:overloadX"27*ë
encodecodecs.encode√
encodecodecs.encode" 
builtins.bytes"builtins.bytes*)
obj 
builtins.bytes"builtins.bytes*¢
encodingì
ÒTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]˚	
ÊUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"codecs._BytesToBytesEncodingT**
errors
builtins.str"builtins.str 0:overloadX“
encodecodecs.encode"
builtins.str"builtins.str*%
obj
builtins.str"builtins.str*π
encoding®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str **
errors
builtins.str"builtins.str 0:overloadX»
encodecodecs.encode" 
builtins.bytes"builtins.bytes*%
obj
builtins.str"builtins.str*,
encoding
builtins.str"builtins.str **
errors
builtins.str"builtins.str 0:overloadX"35"36"37"38"39*•
decodecodecs.decodeª
decodecodecs.decode"
builtins.str"builtins.str*%
obj
builtins.str"builtins.str*¢
encodingì
ÒTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]˚	
ÊUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"codecs._BytesToBytesEncodingT**
errors
builtins.str"builtins.str 0:overloadX˙
decodecodecs.decode"$
builtins.unicode"builtins.unicode*%
obj
builtins.str"builtins.str*Ÿ
encoding»
:Union[Literal[builtins.unicode],Literal[builtins.unicode]]C
Literal[builtins.unicode]	$
builtins.unicode"builtins.unicodeC
Literal[builtins.unicode]	$
builtins.unicode"builtins.unicode **
errors
builtins.str"builtins.str 0:overloadXÃ
decodecodecs.decode"$
builtins.unicode"builtins.unicode*%
obj
builtins.str"builtins.str*,
encoding
builtins.str"builtins.str **
errors
builtins.str"builtins.str 0:overloadX"27*ë
decodecodecs.decode√
decodecodecs.decode" 
builtins.bytes"builtins.bytes*)
obj 
builtins.bytes"builtins.bytes*¢
encodingì
ÒTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]˚	
ÊUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"codecs._BytesToBytesEncodingT**
errors
builtins.str"builtins.str 0:overloadX“
decodecodecs.decode"
builtins.str"builtins.str*%
obj
builtins.str"builtins.str*π
encoding®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str **
errors
builtins.str"builtins.str 0:overloadX»
decodecodecs.decode"
builtins.str"builtins.str*)
obj 
builtins.bytes"builtins.bytes*,
encoding
builtins.str"builtins.str **
errors
builtins.str"builtins.str 0:overloadX"35"36"37"38"39