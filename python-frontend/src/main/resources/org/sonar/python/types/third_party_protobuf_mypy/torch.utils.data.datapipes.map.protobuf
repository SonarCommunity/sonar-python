
torch.utils.data.datapipes.map
Mapper9torch.utils.data.datapipes.map.callable.MapperMapDataPipe"/torch.utils.data.datapipes.datapipe.MapDataPipe*»
__init__Btorch.utils.data.datapipes.map.callable.MapperMapDataPipe.__init__"
None*ñ
selfã
gtorch.utils.data.datapipes.map.callable.MapperMapDataPipe[torch.utils.data.datapipes.map.callable.T_co]e
,torch.utils.data.datapipes.map.callable.T_co"
builtins.object"builtins.object"builtins.object"9torch.utils.data.datapipes.map.callable.MapperMapDataPipe*~
datapipep
4torch.utils.data.datapipes.datapipe.MapDataPipe[Any]
Any"/torch.utils.data.datapipes.datapipe.MapDataPipe*U
fnK
CallableType[builtins.function]&
builtins.function"builtins.function *˚
__len__Atorch.utils.data.datapipes.map.callable.MapperMapDataPipe.__len__"
builtins.int"builtins.int*éã
gtorch.utils.data.datapipes.map.callable.MapperMapDataPipe[torch.utils.data.datapipes.map.callable.T_co]e
,torch.utils.data.datapipes.map.callable.T_co"
builtins.object"builtins.object"builtins.object"9torch.utils.data.datapipes.map.callable.MapperMapDataPipe*◊
__getitem__Etorch.utils.data.datapipes.map.callable.MapperMapDataPipe.__getitem__"e
,torch.utils.data.datapipes.map.callable.T_co"
builtins.object"builtins.object"builtins.object*éã
gtorch.utils.data.datapipes.map.callable.MapperMapDataPipe[torch.utils.data.datapipes.map.callable.T_co]e
,torch.utils.data.datapipes.map.callable.T_co"
builtins.object"builtins.object"builtins.object"9torch.utils.data.datapipes.map.callable.MapperMapDataPipe*	
Any8Pr¿
datapipeBtorch.utils.data.datapipes.map.callable.MapperMapDataPipe.datapipep
4torch.utils.data.datapipes.datapipe.MapDataPipe[Any]
Any"/torch.utils.data.datapipes.datapipe.MapDataPiperè
fn<torch.utils.data.datapipes.map.callable.MapperMapDataPipe.fnK
CallableType[builtins.function]&
builtins.function"builtins.functionë!
ShufflerAtorch.utils.data.datapipes.map.combinatorics.ShufflerIterDataPipe"0torch.utils.data.datapipes.datapipe.IterDataPipe*ë
__init__Jtorch.utils.data.datapipes.map.combinatorics.ShufflerIterDataPipe.__init__"
None*∞
self•
ttorch.utils.data.datapipes.map.combinatorics.ShufflerIterDataPipe[torch.utils.data.datapipes.map.combinatorics.T_co]j
1torch.utils.data.datapipes.map.combinatorics.T_co"
builtins.object"builtins.object"builtins.object"Atorch.utils.data.datapipes.map.combinatorics.ShufflerIterDataPipe*ê
datapipeÅ
btorch.utils.data.datapipes.datapipe.MapDataPipe[torch.utils.data.datapipes.map.combinatorics.T_co]j
1torch.utils.data.datapipes.map.combinatorics.T_co"
builtins.object"builtins.object"builtins.object"/torch.utils.data.datapipes.datapipe.MapDataPipe*i
indicesZ
Union[builtins.list[Any],None],
builtins.list[Any]
Any"builtins.list
None *u
set_shuffleMtorch.utils.data.datapipes.map.combinatorics.ShufflerIterDataPipe.set_shuffle*
self*
shuffle *∫
set_seedJtorch.utils.data.datapipes.map.combinatorics.ShufflerIterDataPipe.set_seed"
Any*∞
self•
ttorch.utils.data.datapipes.map.combinatorics.ShufflerIterDataPipe[torch.utils.data.datapipes.map.combinatorics.T_co]j
1torch.utils.data.datapipes.map.combinatorics.T_co"
builtins.object"builtins.object"builtins.object"Atorch.utils.data.datapipes.map.combinatorics.ShufflerIterDataPipe*&
seed
builtins.int"builtins.int*≈
__iter__Jtorch.utils.data.datapipes.map.combinatorics.ShufflerIterDataPipe.__iter__"¡
Btyping.Iterator[torch.utils.data.datapipes.map.combinatorics.T_co]j
1torch.utils.data.datapipes.map.combinatorics.T_co"
builtins.object"builtins.object"builtins.object"typing.Iterator*®•
ttorch.utils.data.datapipes.map.combinatorics.ShufflerIterDataPipe[torch.utils.data.datapipes.map.combinatorics.T_co]j
1torch.utils.data.datapipes.map.combinatorics.T_co"
builtins.object"builtins.object"builtins.object"Atorch.utils.data.datapipes.map.combinatorics.ShufflerIterDataPipe*ç
resetGtorch.utils.data.datapipes.map.combinatorics.ShufflerIterDataPipe.reset"
None*∞
self•
ttorch.utils.data.datapipes.map.combinatorics.ShufflerIterDataPipe[torch.utils.data.datapipes.map.combinatorics.T_co]j
1torch.utils.data.datapipes.map.combinatorics.T_co"
builtins.object"builtins.object"builtins.object"Atorch.utils.data.datapipes.map.combinatorics.ShufflerIterDataPipe*ù
__len__Itorch.utils.data.datapipes.map.combinatorics.ShufflerIterDataPipe.__len__"
builtins.int"builtins.int*®•
ttorch.utils.data.datapipes.map.combinatorics.ShufflerIterDataPipe[torch.utils.data.datapipes.map.combinatorics.T_co]j
1torch.utils.data.datapipes.map.combinatorics.T_co"
builtins.object"builtins.object"builtins.object"Atorch.utils.data.datapipes.map.combinatorics.ShufflerIterDataPipe*h
__getstate__Ntorch.utils.data.datapipes.map.combinatorics.ShufflerIterDataPipe.__getstate__*
self*s
__setstate__Ntorch.utils.data.datapipes.map.combinatorics.ShufflerIterDataPipe.__setstate__*
self*	
statePr⁄
datapipeJtorch.utils.data.datapipes.map.combinatorics.ShufflerIterDataPipe.datapipeÅ
btorch.utils.data.datapipes.datapipe.MapDataPipe[torch.utils.data.datapipes.map.combinatorics.T_co]j
1torch.utils.data.datapipes.map.combinatorics.T_co"
builtins.object"builtins.object"builtins.object"/torch.utils.data.datapipes.datapipe.MapDataPiperv
_enabledJtorch.utils.data.datapipes.map.combinatorics.ShufflerIterDataPipe._enabled
builtins.bool"builtins.boolrñ
_seedGtorch.utils.data.datapipes.map.combinatorics.ShufflerIterDataPipe._seedD
Union[builtins.int,None]
builtins.int"builtins.int
Nonern
_rngFtorch.utils.data.datapipes.map.combinatorics.ShufflerIterDataPipe._rng
random.Random"random.RandomrÇ
indicesItorch.utils.data.datapipes.map.combinatorics.ShufflerIterDataPipe.indices,
builtins.list[Any]
Any"builtins.listrñ
_shuffled_indicesStorch.utils.data.datapipes.map.combinatorics.ShufflerIterDataPipe._shuffled_indices,
builtins.list[Any]
Any"builtins.listrs
_valid_iterator_idTtorch.utils.data.datapipes.map.combinatorics.ShufflerIterDataPipe._valid_iterator_id
Any™

Concater<torch.utils.data.datapipes.map.combining.ConcaterMapDataPipe"/torch.utils.data.datapipes.datapipe.MapDataPipe*Â
__init__Etorch.utils.data.datapipes.map.combining.ConcaterMapDataPipe.__init__"
None*Ü
self|
<torch.utils.data.datapipes.map.combining.ConcaterMapDataPipe"<torch.utils.data.datapipes.map.combining.ConcaterMapDataPipe*
	datapipesp
4torch.utils.data.datapipes.datapipe.MapDataPipe[Any]
Any"/torch.utils.data.datapipes.datapipe.MapDataPipe* 
__getitem__Htorch.utils.data.datapipes.map.combining.ConcaterMapDataPipe.__getitem__"f
-torch.utils.data.datapipes.map.combining.T_co"
builtins.object"builtins.object"builtins.object*~|
<torch.utils.data.datapipes.map.combining.ConcaterMapDataPipe"<torch.utils.data.datapipes.map.combining.ConcaterMapDataPipe*	
Any*Ì
__len__Dtorch.utils.data.datapipes.map.combining.ConcaterMapDataPipe.__len__"
builtins.int"builtins.int*~|
<torch.utils.data.datapipes.map.combining.ConcaterMapDataPipe"<torch.utils.data.datapipes.map.combining.ConcaterMapDataPipe8rá
	datapipesFtorch.utils.data.datapipes.map.combining.ConcaterMapDataPipe.datapipes±
;Tuple[torch.utils.data.datapipes.datapipe.MapDataPipe[Any]]p
4torch.utils.data.datapipes.datapipe.MapDataPipe[Any]
Any"/torch.utils.data.datapipes.datapipe.MapDataPipeÜ
Zipper:torch.utils.data.datapipes.map.combining.ZipperMapDataPipe"/torch.utils.data.datapipes.datapipe.MapDataPipe*Ç
__init__Ctorch.utils.data.datapipes.map.combining.ZipperMapDataPipe.__init__"
None*ö
selfè
itorch.utils.data.datapipes.map.combining.ZipperMapDataPipe[torch.utils.data.datapipes.map.combining.T_co]f
-torch.utils.data.datapipes.map.combining.T_co"
builtins.object"builtins.object"builtins.object":torch.utils.data.datapipes.map.combining.ZipperMapDataPipe*â
	datapipes˘
^torch.utils.data.datapipes.datapipe.MapDataPipe[torch.utils.data.datapipes.map.combining.T_co]f
-torch.utils.data.datapipes.map.combining.T_co"
builtins.object"builtins.object"builtins.object"/torch.utils.data.datapipes.datapipe.MapDataPipe*Ø
__getitem__Ftorch.utils.data.datapipes.map.combining.ZipperMapDataPipe.__getitem__"∑
=builtins.tuple[torch.utils.data.datapipes.map.combining.T_co]f
-torch.utils.data.datapipes.map.combining.T_co"
builtins.object"builtins.object"builtins.object"builtins.tuple*íè
itorch.utils.data.datapipes.map.combining.ZipperMapDataPipe[torch.utils.data.datapipes.map.combining.T_co]f
-torch.utils.data.datapipes.map.combining.T_co"
builtins.object"builtins.object"builtins.object":torch.utils.data.datapipes.map.combining.ZipperMapDataPipe*	
Any*Ä
__len__Btorch.utils.data.datapipes.map.combining.ZipperMapDataPipe.__len__"
builtins.int"builtins.int*íè
itorch.utils.data.datapipes.map.combining.ZipperMapDataPipe[torch.utils.data.datapipes.map.combining.T_co]f
-torch.utils.data.datapipes.map.combining.T_co"
builtins.object"builtins.object"builtins.object":torch.utils.data.datapipes.map.combining.ZipperMapDataPipe8Pr–
	datapipesDtorch.utils.data.datapipes.map.combining.ZipperMapDataPipe.datapipes¸
nbuiltins.tuple[torch.utils.data.datapipes.datapipe.MapDataPipe[torch.utils.data.datapipes.map.combining.T_co]]˘
^torch.utils.data.datapipes.datapipe.MapDataPipe[torch.utils.data.datapipes.map.combining.T_co]f
-torch.utils.data.datapipes.map.combining.T_co"
builtins.object"builtins.object"builtins.object"/torch.utils.data.datapipes.datapipe.MapDataPipe"builtins.tupleû
Batcher:torch.utils.data.datapipes.map.grouping.BatcherMapDataPipe"/torch.utils.data.datapipes.datapipe.MapDataPipe*ﬁ
__init__Ctorch.utils.data.datapipes.map.grouping.BatcherMapDataPipe.__init__"
None*Ç
selfx
:torch.utils.data.datapipes.map.grouping.BatcherMapDataPipe":torch.utils.data.datapipes.map.grouping.BatcherMapDataPipe*Ä
datapipeÒ
Ztorch.utils.data.datapipes.datapipe.MapDataPipe[torch.utils.data.datapipes.map.grouping.T]b
)torch.utils.data.datapipes.map.grouping.T"
builtins.object"builtins.object"builtins.object"/torch.utils.data.datapipes.datapipe.MapDataPipe*,

batch_size
builtins.int"builtins.int*/
	drop_last
builtins.bool"builtins.bool *
wrapper_class
Any * 
__getitem__Ftorch.utils.data.datapipes.map.grouping.BatcherMapDataPipe.__getitem__"l
2torch.utils.data.datapipes.datapipe.DataChunk[Any]
Any"-torch.utils.data.datapipes.datapipe.DataChunk*zx
:torch.utils.data.datapipes.map.grouping.BatcherMapDataPipe":torch.utils.data.datapipes.map.grouping.BatcherMapDataPipe*	
Any*Á
__len__Btorch.utils.data.datapipes.map.grouping.BatcherMapDataPipe.__len__"
builtins.int"builtins.int*zx
:torch.utils.data.datapipes.map.grouping.BatcherMapDataPipe":torch.utils.data.datapipes.map.grouping.BatcherMapDataPipe8r¡
datapipeCtorch.utils.data.datapipes.map.grouping.BatcherMapDataPipe.datapipep
4torch.utils.data.datapipes.datapipe.MapDataPipe[Any]
Any"/torch.utils.data.datapipes.datapipe.MapDataPiperq

batch_sizeEtorch.utils.data.datapipes.map.grouping.BatcherMapDataPipe.batch_size
builtins.int"builtins.intrq
	drop_lastDtorch.utils.data.datapipes.map.grouping.BatcherMapDataPipe.drop_last
builtins.bool"builtins.boolrb
wrapper_classHtorch.utils.data.datapipes.map.grouping.BatcherMapDataPipe.wrapper_class
Anyñ
SequenceWrapper?torch.utils.data.datapipes.map.utils.SequenceWrapperMapDataPipe"/torch.utils.data.datapipes.datapipe.MapDataPipe*|
__init__Htorch.utils.data.datapipes.map.utils.SequenceWrapperMapDataPipe.__init__*
self*
sequence*
deepcopy *^
__getitem__Ktorch.utils.data.datapipes.map.utils.SequenceWrapperMapDataPipe.__getitem__* * *T
__len__Gtorch.utils.data.datapipes.map.utils.SequenceWrapperMapDataPipe.__len__* r]
sequenceHtorch.utils.data.datapipes.map.utils.SequenceWrapperMapDataPipe.sequence
Any*
__path__'torch.utils.data.datapipes.map.__path__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*ö
__annotations__.torch.utils.data.datapipes.map.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*}
__all__&torch.utils.data.datapipes.map.__all__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list