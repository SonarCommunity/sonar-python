
torch.nn.utils.statelessÿ
_untie_named_tensors_map1torch.nn.utils.stateless._untie_named_tensors_map"ç
0builtins.dict[builtins.str,torch._tensor.Tensor]
builtins.str"builtins.str,
torch._tensor.Tensor"torch._tensor.Tensor"builtins.dict*L
module@
torch.nn.modules.module.Module"torch.nn.modules.module.Module*™
parameters_and_buffersç
0builtins.dict[builtins.str,torch._tensor.Tensor]
builtins.str"builtins.str,
torch._tensor.Tensor"torch._tensor.Tensor"builtins.dict≠
_functional_call)torch.nn.utils.stateless._functional_call"
Any*L
module@
torch.nn.modules.module.Module"torch.nn.modules.module.Module*™
parameters_and_buffersç
0builtins.dict[builtins.str,torch._tensor.Tensor]
builtins.str"builtins.str,
torch._tensor.Tensor"torch._tensor.Tensor"builtins.dict*e
args[
Union[Any,builtins.tuple[Any]]
Any.
builtins.tuple[Any]
Any"builtins.tuple*°
kwargsí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *1
tie_weights
builtins.bool"builtins.bool *,
strict
builtins.bool"builtins.bool *î
__annotations__(torch.nn.utils.stateless.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*w
__all__ torch.nn.utils.stateless.__all__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list