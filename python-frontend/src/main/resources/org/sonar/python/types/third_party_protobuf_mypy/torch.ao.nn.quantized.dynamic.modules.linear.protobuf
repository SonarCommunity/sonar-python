
,torch.ao.nn.quantized.dynamic.modules.linear≥	
Linear3torch.ao.nn.quantized.dynamic.modules.linear.Linear"+torch.ao.nn.quantized.modules.linear.Linear*è
__init__<torch.ao.nn.quantized.dynamic.modules.linear.Linear.__init__*
self*
in_features*
out_features*
bias_ *
dtype *W
forward;torch.ao.nn.quantized.dynamic.modules.linear.Linear.forward*
self*
x*T
	_get_name=torch.ao.nn.quantized.dynamic.modules.linear.Linear._get_name*
self*V

extra_repr>torch.ao.nn.quantized.dynamic.modules.linear.Linear.extra_repr*
self*ﬂ
_load_from_state_dictItorch.ao.nn.quantized.dynamic.modules.linear.Linear._load_from_state_dict*
self*

state_dict*

prefix*
local_metadata*

strict*
missing_keys*
unexpected_keys*

error_msgs*ë

from_float>torch.ao.nn.quantized.dynamic.modules.linear.Linear.from_float*
cls*
mod* 
use_precomputed_fake_quant 0:classmethodp*
from_referenceBtorch.ao.nn.quantized.dynamic.modules.linear.Linear.from_reference*
cls*
ref_qlinear0:classmethodprf
_version<torch.ao.nn.quantized.dynamic.modules.linear.Linear._version
builtins.int"builtins.intrO
version;torch.ao.nn.quantized.dynamic.modules.linear.Linear.version
Any*®
__annotations__<torch.ao.nn.quantized.dynamic.modules.linear.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*
nnqtorch.ao.nn.quantized *
nnitorch.ao.nn.intrinsic *ã
__all__4torch.ao.nn.quantized.dynamic.modules.linear.__all__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list