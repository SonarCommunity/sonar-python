
unittest.resultòH

TestResultunittest.result.TestResult"builtins.object*¨
__init__#unittest.result.TestResult.__init__"
None*B
self8
unittest.result.TestResult"unittest.result.TestResult*U
streamG
Union[typing.TextIO,None]
typing.TextIO"typing.TextIO
None *[
descriptionsG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *U
	verbosityD
Union[builtins.int,None]
builtins.int"builtins.int
None z36z37z38z39z310z311z312z313*ß
printErrors&unittest.result.TestResult.printErrors"
None*B
self8
unittest.result.TestResult"unittest.result.TestResultz36z37z38z39z310z311z312z313*¡
wasSuccessful(unittest.result.TestResult.wasSuccessful"
builtins.bool"builtins.bool*B
self8
unittest.result.TestResult"unittest.result.TestResultz36z37z38z39z310z311z312z313*ô
stopunittest.result.TestResult.stop"
None*B
self8
unittest.result.TestResult"unittest.result.TestResultz36z37z38z39z310z311z312z313*ﬂ
	startTest$unittest.result.TestResult.startTest"
None*B
self8
unittest.result.TestResult"unittest.result.TestResult*:
test0
unittest.case.TestCase"unittest.case.TestCasez36z37z38z39z310z311z312z313*›
stopTest#unittest.result.TestResult.stopTest"
None*B
self8
unittest.result.TestResult"unittest.result.TestResult*:
test0
unittest.case.TestCase"unittest.case.TestCasez36z37z38z39z310z311z312z313*©
startTestRun'unittest.result.TestResult.startTestRun"
None*B
self8
unittest.result.TestResult"unittest.result.TestResultz36z37z38z39z310z311z312z313*ß
stopTestRun&unittest.result.TestResult.stopTestRun"
None*B
self8
unittest.result.TestResult"unittest.result.TestResultz36z37z38z39z310z311z312z313*º
addError#unittest.result.TestResult.addError"
None*B
self8
unittest.result.TestResult"unittest.result.TestResult*:
test0
unittest.case.TestCase"unittest.case.TestCase*‹
err“
ÅTypeAlias[Union[TypeAlias[Tuple[Type[builtins.BaseException],builtins.BaseException,types.TracebackType]],Tuple[None,None,None]]]≥
vUnion[TypeAlias[Tuple[Type[builtins.BaseException],builtins.BaseException,types.TracebackType]],Tuple[None,None,None]]˝
YTypeAlias[Tuple[Type[builtins.BaseException],builtins.BaseException,types.TracebackType]]ä
NTuple[Type[builtins.BaseException],builtins.BaseException,types.TracebackType]X
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"type0
builtins.BaseException"builtins.BaseException*
types.TracebackType"types.TracebackType"_typeshed.ExcInfo7
Tuple[None,None,None]
None
None
None"_typeshed.OptExcInfoz36z37z38z39z310z311z312z313*¿

addFailure%unittest.result.TestResult.addFailure"
None*B
self8
unittest.result.TestResult"unittest.result.TestResult*:
test0
unittest.case.TestCase"unittest.case.TestCase*‹
err“
ÅTypeAlias[Union[TypeAlias[Tuple[Type[builtins.BaseException],builtins.BaseException,types.TracebackType]],Tuple[None,None,None]]]≥
vUnion[TypeAlias[Tuple[Type[builtins.BaseException],builtins.BaseException,types.TracebackType]],Tuple[None,None,None]]˝
YTypeAlias[Tuple[Type[builtins.BaseException],builtins.BaseException,types.TracebackType]]ä
NTuple[Type[builtins.BaseException],builtins.BaseException,types.TracebackType]X
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"type0
builtins.BaseException"builtins.BaseException*
types.TracebackType"types.TracebackType"_typeshed.ExcInfo7
Tuple[None,None,None]
None
None
None"_typeshed.OptExcInfoz36z37z38z39z310z311z312z313*·

addSuccess%unittest.result.TestResult.addSuccess"
None*B
self8
unittest.result.TestResult"unittest.result.TestResult*:
test0
unittest.case.TestCase"unittest.case.TestCasez36z37z38z39z310z311z312z313*Ö
addSkip"unittest.result.TestResult.addSkip"
None*B
self8
unittest.result.TestResult"unittest.result.TestResult*:
test0
unittest.case.TestCase"unittest.case.TestCase*(
reason
builtins.str"builtins.strz36z37z38z39z310z311z312z313*–
addExpectedFailure-unittest.result.TestResult.addExpectedFailure"
None*B
self8
unittest.result.TestResult"unittest.result.TestResult*:
test0
unittest.case.TestCase"unittest.case.TestCase*‹
err“
ÅTypeAlias[Union[TypeAlias[Tuple[Type[builtins.BaseException],builtins.BaseException,types.TracebackType]],Tuple[None,None,None]]]≥
vUnion[TypeAlias[Tuple[Type[builtins.BaseException],builtins.BaseException,types.TracebackType]],Tuple[None,None,None]]˝
YTypeAlias[Tuple[Type[builtins.BaseException],builtins.BaseException,types.TracebackType]]ä
NTuple[Type[builtins.BaseException],builtins.BaseException,types.TracebackType]X
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"type0
builtins.BaseException"builtins.BaseException*
types.TracebackType"types.TracebackType"_typeshed.ExcInfo7
Tuple[None,None,None]
None
None
None"_typeshed.OptExcInfoz36z37z38z39z310z311z312z313*ı
addUnexpectedSuccess/unittest.result.TestResult.addUnexpectedSuccess"
None*B
self8
unittest.result.TestResult"unittest.result.TestResult*:
test0
unittest.case.TestCase"unittest.case.TestCasez36z37z38z39z310z311z312z313*û	

addSubTest%unittest.result.TestResult.addSubTest"
None*B
self8
unittest.result.TestResult"unittest.result.TestResult*:
test0
unittest.case.TestCase"unittest.case.TestCase*=
subtest0
unittest.case.TestCase"unittest.case.TestCase*˚
errÒ
çUnion[TypeAlias[Union[TypeAlias[Tuple[Type[builtins.BaseException],builtins.BaseException,types.TracebackType]],Tuple[None,None,None]]],None]“
ÅTypeAlias[Union[TypeAlias[Tuple[Type[builtins.BaseException],builtins.BaseException,types.TracebackType]],Tuple[None,None,None]]]≥
vUnion[TypeAlias[Tuple[Type[builtins.BaseException],builtins.BaseException,types.TracebackType]],Tuple[None,None,None]]˝
YTypeAlias[Tuple[Type[builtins.BaseException],builtins.BaseException,types.TracebackType]]ä
NTuple[Type[builtins.BaseException],builtins.BaseException,types.TracebackType]X
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"type0
builtins.BaseException"builtins.BaseException*
types.TracebackType"types.TracebackType"_typeshed.ExcInfo7
Tuple[None,None,None]
None
None
None"_typeshed.OptExcInfo
Nonez36z37z38z39z310z311z312z313*¯
addDuration&unittest.result.TestResult.addDuration"
None*B
self8
unittest.result.TestResult"unittest.result.TestResult*:
test0
unittest.case.TestCase"unittest.case.TestCase*-
elapsed 
builtins.float"builtins.floatz312z313j36j37j38j39j310j311j312j313rú
errors!unittest.result.TestResult.errors 
9builtins.list[Tuple[unittest.case.TestCase,builtins.str]]~
*Tuple[unittest.case.TestCase,builtins.str]0
unittest.case.TestCase"unittest.case.TestCase
builtins.str"builtins.str"builtins.list*36*37*38*39*310*311*312*313r†
failures#unittest.result.TestResult.failures 
9builtins.list[Tuple[unittest.case.TestCase,builtins.str]]~
*Tuple[unittest.case.TestCase,builtins.str]0
unittest.case.TestCase"unittest.case.TestCase
builtins.str"builtins.str"builtins.list*36*37*38*39*310*311*312*313rû
skipped"unittest.result.TestResult.skipped 
9builtins.list[Tuple[unittest.case.TestCase,builtins.str]]~
*Tuple[unittest.case.TestCase,builtins.str]0
unittest.case.TestCase"unittest.case.TestCase
builtins.str"builtins.str"builtins.list*36*37*38*39*310*311*312*313r∞
expectedFailures+unittest.result.TestResult.expectedFailures 
9builtins.list[Tuple[unittest.case.TestCase,builtins.str]]~
*Tuple[unittest.case.TestCase,builtins.str]0
unittest.case.TestCase"unittest.case.TestCase
builtins.str"builtins.str"builtins.list*36*37*38*39*310*311*312*313r”
unexpectedSuccesses.unittest.result.TestResult.unexpectedSuccessesh
%builtins.list[unittest.case.TestCase]0
unittest.case.TestCase"unittest.case.TestCase"builtins.list*36*37*38*39*310*311*312*313rw

shouldStop%unittest.result.TestResult.shouldStop
builtins.bool"builtins.bool*36*37*38*39*310*311*312*313rq
testsRun#unittest.result.TestResult.testsRun
builtins.int"builtins.int*36*37*38*39*310*311*312*313ro
buffer!unittest.result.TestResult.buffer
builtins.bool"builtins.bool*36*37*38*39*310*311*312*313rs
failfast#unittest.result.TestResult.failfast
builtins.bool"builtins.bool*36*37*38*39*310*311*312*313ru
	tb_locals$unittest.result.TestResult.tb_locals
builtins.bool"builtins.bool*36*37*38*39*310*311*312*313r›
collectedDurations-unittest.result.TestResult.collectedDurationsç
<TypeAlias[builtins.list[Tuple[builtins.str,builtins.float]]]™
1builtins.list[Tuple[builtins.str,builtins.float]]f
"Tuple[builtins.str,builtins.float]
builtins.str"builtins.str 
builtins.float"builtins.float"builtins.list"unittest.result._DurationsType*312*313û
failfastunittest.result.failfast"c
unittest.result._FK
CallableType[builtins.function]&
builtins.function"builtins.function*o
methodc
unittest.result._FK
CallableType[builtins.function]&
builtins.function"builtins.functionz36z37z38z39z310z311z312z313*Ø
__annotations__unittest.result.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*36*37*38*39*310*311*312*313*:
unittestunittest *36*37*38*39*310*311*312*313*l
STDOUT_LINEunittest.result.STDOUT_LINE
builtins.str"builtins.str*36*37*38*39*310*311*312*313*l
STDERR_LINEunittest.result.STDERR_LINE
builtins.str"builtins.str*36*37*38*39*310*311*312*313