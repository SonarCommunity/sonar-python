
	idna.core7
	IDNAErroridna.core.IDNAError"builtins.UnicodeError=
IDNABidiErroridna.core.IDNABidiError"idna.core.IDNAErrorC
InvalidCodepointidna.core.InvalidCodepoint"idna.core.IDNAErrorQ
InvalidCodepointContext!idna.core.InvalidCodepointContext"idna.core.IDNAErrorr
_combining_classidna.core._combining_class"
builtins.int"builtins.int*$
cp
builtins.int"builtins.int’

_is_scriptidna.core._is_script"
builtins.bool"builtins.bool*$
cp
builtins.str"builtins.str*(
script
builtins.str"builtins.strg
	_punycodeidna.core._punycode" 
builtins.bytes"builtins.bytes*#
s
builtins.str"builtins.str[
_unotidna.core._unot"
builtins.str"builtins.str*#
s
builtins.int"builtins.intÅ
valid_label_lengthidna.core.valid_label_length"
builtins.bool"builtins.bool*q
labelf
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.strù
valid_string_lengthidna.core.valid_string_length"
builtins.bool"builtins.bool*q
labelf
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str*0
trailing_dot
builtins.bool"builtins.boolœ

check_bidiidna.core.check_bidi"
builtins.bool"builtins.bool*'
label
builtins.str"builtins.str*/
	check_ltr
builtins.bool"builtins.bool ƒ
check_initial_combiner idna.core.check_initial_combiner"
builtins.bool"builtins.bool*'
label
builtins.str"builtins.stru
check_hyphen_okidna.core.check_hyphen_ok"
builtins.bool"builtins.bool*'
label
builtins.str"builtins.strS
	check_nfcidna.core.check_nfc"
None*'
label
builtins.str"builtins.strš
valid_contextjidna.core.valid_contextj"
builtins.bool"builtins.bool*'
label
builtins.str"builtins.str*%
pos
builtins.int"builtins.intË
valid_contextoidna.core.valid_contexto"
builtins.bool"builtins.bool*'
label
builtins.str"builtins.str*%
pos
builtins.int"builtins.int*/
	exception
builtins.bool"builtins.bool à
check_labelidna.core.check_label"
None*¯
label£
5Union[builtins.str,builtins.bytes,builtins.bytearray]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes(
builtins.bytearray"builtins.bytearraye
alabelidna.core.alabel" 
builtins.bytes"builtins.bytes*'
label
builtins.str"builtins.strê
ulabelidna.core.ulabel"
builtins.str"builtins.str*¯
label£
5Union[builtins.str,builtins.bytes,builtins.bytearray]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes(
builtins.bytearray"builtins.bytearrayÒ
uts46_remapidna.core.uts46_remap"
builtins.str"builtins.str*(
domain
builtins.str"builtins.str*0

std3_rules
builtins.bool"builtins.bool *2
transitional
builtins.bool"builtins.bool «
encodeidna.core.encode" 
builtins.bytes"builtins.bytes*«
s£
5Union[builtins.str,builtins.bytes,builtins.bytearray]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes(
builtins.bytearray"builtins.bytearray*,
strict
builtins.bool"builtins.bool *+
uts46
builtins.bool"builtins.bool *0

std3_rules
builtins.bool"builtins.bool *2
transitional
builtins.bool"builtins.bool ó
decodeidna.core.decode"
builtins.str"builtins.str*«
s£
5Union[builtins.str,builtins.bytes,builtins.bytearray]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes(
builtins.bytearray"builtins.bytearray*,
strict
builtins.bool"builtins.bool *+
uts46
builtins.bool"builtins.bool *0

std3_rules
builtins.bool"builtins.bool *…
__annotations__idna.core.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*Z
_virama_combining_class!idna.core._virama_combining_class
builtins.int"builtins.int*L
_alabel_prefixidna.core._alabel_prefix 
builtins.bytes"builtins.bytes*t
_unicode_dots_reidna.core._unicode_dots_reD
re.Pattern[builtins.str]
builtins.str"builtins.str"
re.Pattern