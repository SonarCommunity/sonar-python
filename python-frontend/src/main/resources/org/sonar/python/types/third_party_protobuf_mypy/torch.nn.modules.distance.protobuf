
torch.nn.modules.distanceþ
PairwiseDistance*torch.nn.modules.distance.PairwiseDistance"torch.nn.modules.module.Module*´
__init__3torch.nn.modules.distance.PairwiseDistance.__init__"
None*b
selfX
*torch.nn.modules.distance.PairwiseDistance"*torch.nn.modules.distance.PairwiseDistance*)
p 
builtins.float"builtins.float *+
eps 
builtins.float"builtins.float *-
keepdim
builtins.bool"builtins.bool *»
forward2torch.nn.modules.distance.PairwiseDistance.forward",
torch._tensor.Tensor"torch._tensor.Tensor*b
selfX
*torch.nn.modules.distance.PairwiseDistance"*torch.nn.modules.distance.PairwiseDistance*4
x1,
torch._tensor.Tensor"torch._tensor.Tensor*4
x2,
torch._tensor.Tensor"torch._tensor.Tensorr•
__constants__8torch.nn.modules.distance.PairwiseDistance.__constants__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.listrY
norm/torch.nn.modules.distance.PairwiseDistance.norm 
builtins.float"builtins.floatrW
eps.torch.nn.modules.distance.PairwiseDistance.eps 
builtins.float"builtins.floatr]
keepdim2torch.nn.modules.distance.PairwiseDistance.keepdim
builtins.bool"builtins.boolè
CosineSimilarity*torch.nn.modules.distance.CosineSimilarity"torch.nn.modules.module.Module*ƒ
__init__3torch.nn.modules.distance.CosineSimilarity.__init__"
None*b
selfX
*torch.nn.modules.distance.CosineSimilarity"*torch.nn.modules.distance.CosineSimilarity*'
dim
builtins.int"builtins.int *+
eps 
builtins.float"builtins.float *»
forward2torch.nn.modules.distance.CosineSimilarity.forward",
torch._tensor.Tensor"torch._tensor.Tensor*b
selfX
*torch.nn.modules.distance.CosineSimilarity"*torch.nn.modules.distance.CosineSimilarity*4
x1,
torch._tensor.Tensor"torch._tensor.Tensor*4
x2,
torch._tensor.Tensor"torch._tensor.Tensorr•
__constants__8torch.nn.modules.distance.CosineSimilarity.__constants__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.listrS
dim.torch.nn.modules.distance.CosineSimilarity.dim
builtins.int"builtins.intrW
eps.torch.nn.modules.distance.CosineSimilarity.eps 
builtins.float"builtins.float*•
__annotations__)torch.nn.modules.distance.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*
Ftorch.nn.functional *x
__all__!torch.nn.modules.distance.__all__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list