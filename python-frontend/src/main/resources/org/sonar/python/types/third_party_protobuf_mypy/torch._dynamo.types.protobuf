
torch._dynamo.typesï
	GuardFailtorch._dynamo.types.GuardFail"builtins.tuple*Ω
_replace&torch._dynamo.types.GuardFail._replace"ç
!torch._dynamo.types.GuardFail._NTf
"Tuple[builtins.str,types.CodeType]
builtins.str"builtins.str 
types.CodeType"types.CodeType*ô
_selfç
!torch._dynamo.types.GuardFail._NTf
"Tuple[builtins.str,types.CodeType]
builtins.str"builtins.str 
types.CodeType"types.CodeType**
reason
builtins.str"builtins.str *1
	orig_code 
types.CodeType"types.CodeType *Í
__new__%torch._dynamo.types.GuardFail.__new__"ç
!torch._dynamo.types.GuardFail._NTf
"Tuple[builtins.str,types.CodeType]
builtins.str"builtins.str 
types.CodeType"types.CodeType*Ã
_cls¡
'Type[torch._dynamo.types.GuardFail._NT]ç
!torch._dynamo.types.GuardFail._NTf
"Tuple[builtins.str,types.CodeType]
builtins.str"builtins.str 
types.CodeType"types.CodeType"type*(
reason
builtins.str"builtins.str*/
	orig_code 
types.CodeType"types.CodeType*•
_asdict%torch._dynamo.types.GuardFail._asdict"W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*ô
_selfç
!torch._dynamo.types.GuardFail._NTf
"Tuple[builtins.str,types.CodeType]
builtins.str"builtins.str 
types.CodeType"types.CodeType*Ñ
_make#torch._dynamo.types.GuardFail._make"ç
!torch._dynamo.types.GuardFail._NTf
"Tuple[builtins.str,types.CodeType]
builtins.str"builtins.str 
types.CodeType"types.CodeType*Ã
_cls¡
'Type[torch._dynamo.types.GuardFail._NT]ç
!torch._dynamo.types.GuardFail._NTf
"Tuple[builtins.str,types.CodeType]
builtins.str"builtins.str 
types.CodeType"types.CodeType"type*>
iterable0
typing.Iterable[Any]
Any"typing.Iterable*
new
Any *
len
Any 0:classmethodprL
reason$torch._dynamo.types.GuardFail.reason
builtins.str"builtins.strrV
	orig_code'torch._dynamo.types.GuardFail.orig_code 
types.CodeType"types.CodeTyperL
reason$torch._dynamo.types.GuardFail.reason
builtins.str"builtins.strrV
	orig_code'torch._dynamo.types.GuardFail.orig_code 
types.CodeType"types.CodeTyperí
_fields%torch._dynamo.types.GuardFail._fields`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.strrì
_field_types*torch._dynamo.types.GuardFail._field_typesW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dictrô
_field_defaults-torch._dynamo.types.GuardFail._field_defaultsW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dictrN
_source%torch._dynamo.types.GuardFail._source
builtins.str"builtins.strrô
__annotations__-torch._dynamo.types.GuardFail.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dictΩ
GuardFntorch._dynamo.types.GuardFn"builtins.object*ß
__call__$torch._dynamo.types.GuardFn.__call__"
builtins.bool"builtins.bool*D
self:
torch._dynamo.types.GuardFn"torch._dynamo.types.GuardFn*å
f_locals~
+builtins.dict[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"builtins.dict@Xr∏
closure_vars(torch._dynamo.types.GuardFn.closure_vars~
+builtins.dict[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"builtins.dictrt
args torch._dynamo.types.GuardFn.argsJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.listrÄ

code_parts&torch._dynamo.types.GuardFn.code_partsJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.listrê
verbose_code_parts.torch._dynamo.types.GuardFn.verbose_code_partsJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.listr∏
global_scope(torch._dynamo.types.GuardFn.global_scope~
+builtins.dict[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"builtins.dictr√
guard_fail_fn)torch._dynamo.types.GuardFn.guard_fail_fnÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
NonerÜ
cache_entry'torch._dynamo.types.GuardFn.cache_entryN
#Union[UnboundType[CacheEntry],None]
UnboundType[CacheEntry]
NonerÜ
extra_state'torch._dynamo.types.GuardFn.extra_stateN
#Union[UnboundType[ExtraState],None]
UnboundType[ExtraState]
NoneÒ
GuardedCodetorch._dynamo.types.GuardedCode"builtins.object*Ç
__init__(torch._dynamo.types.GuardedCode.__init__"
None*L
selfB
torch._dynamo.types.GuardedCode"torch._dynamo.types.GuardedCode**
code 
types.CodeType"types.CodeType*H
check_fn:
torch._dynamo.types.GuardFn"torch._dynamo.types.GuardFn8rN
code$torch._dynamo.types.GuardedCode.code 
types.CodeType"types.CodeTyperp
check_fn(torch._dynamo.types.GuardedCode.check_fn:
torch._dynamo.types.GuardFn"torch._dynamo.types.GuardFnrÊ
__dataclass_fields__4torch._dynamo.types.GuardedCode.__dataclass_fields__ó
2builtins.dict[builtins.str,dataclasses.Field[Any]]
builtins.str"builtins.str4
dataclasses.Field[Any]
Any"dataclasses.Field"builtins.dictÖ
DynamoCallbackFn$torch._dynamo.types.DynamoCallbackFn"builtins.object*∑
__call__-torch._dynamo.types.DynamoCallbackFn.__call__"}
+Union[torch._dynamo.types.GuardedCode,None]B
torch._dynamo.types.GuardedCode"torch._dynamo.types.GuardedCode
None*V
selfL
$torch._dynamo.types.DynamoCallbackFn"$torch._dynamo.types.DynamoCallbackFn*-
frame"
types.FrameType"types.FrameType*_
cache_entryN
#Union[UnboundType[CacheEntry],None]
UnboundType[CacheEntry]
None*í
frame_stateÄ
!TypeAlias[builtins.dict[Any,Any]]9
builtins.dict[Any,Any]
Any
Any"builtins.dict"torch._dynamo.types.FrameState@Xæ
DynamoGuardHook#torch._dynamo.types.DynamoGuardHook"builtins.object*Ú
__call__,torch._dynamo.types.DynamoGuardHook.__call__"
None*T
selfJ
#torch._dynamo.types.DynamoGuardHook"#torch._dynamo.types.DynamoGuardHook*H
guard_fn:
torch._dynamo.types.GuardFn"torch._dynamo.types.GuardFn**
code 
types.CodeType"types.CodeType*å
f_locals~
+builtins.dict[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"builtins.dict*'
index
builtins.int"builtins.int*(
last
builtins.bool"builtins.bool@Xó
ProfilerStartHook%torch._dynamo.types.ProfilerStartHook"builtins.object*«
__call__.torch._dynamo.types.ProfilerStartHook.__call__"
Any*X
selfN
%torch._dynamo.types.ProfilerStartHook"%torch._dynamo.types.ProfilerStartHook*&
name
builtins.str"builtins.str@X˚
ProfilerEndHook#torch._dynamo.types.ProfilerEndHook"builtins.object*Ø
__call__,torch._dynamo.types.ProfilerEndHook.__call__"
None*T
selfJ
#torch._dynamo.types.ProfilerEndHook"#torch._dynamo.types.ProfilerEndHook*
record
Any@Xı
BytecodeHook torch._dynamo.types.BytecodeHook"builtins.object*Ø
__call__)torch._dynamo.types.BytecodeHook.__call__"J
Union[types.CodeType,None] 
types.CodeType"types.CodeType
None*N
selfD
 torch._dynamo.types.BytecodeHook" torch._dynamo.types.BytecodeHook**
code 
types.CodeType"types.CodeType*.
new_code 
types.CodeType"types.CodeType@X*è
__annotations__#torch._dynamo.types.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*5

CacheEntrytorch._dynamo.types.CacheEntry
Any*5

ExtraStatetorch._dynamo.types.ExtraState
Any